(function e(b, g, d) {
    function c(m, j) {
        if (!g[m]) {
            if (!b[m]) {
                var i = typeof require == "function" && require;
                if (!j && i) {
                    return i(m, !0)
                }
                if (a) {
                    return a(m, !0)
                }
                var k = new Error("Cannot find module '" + m + "'");
                throw k.code = "MODULE_NOT_FOUND", k
            }
            var h = g[m] = {
                exports: {}
            };
            b[m][0].call(h.exports, function(l) {
                var o = b[m][1][l];
                return c(o ? o : l)
            }, h, h.exports, e, b, g, d)
        }
        return g[m].exports
    }
    var a = typeof require == "function" && require;
    for (var f = 0; f < d.length; f++) {
        c(d[f])
    }
    return c
})({
    1: [function(b, c, a) {
        b("ac-polyfills/Array/prototype.filter");
        b("ac-polyfills/Array/prototype.some");
        var d = b("./data");

        function f() {}
        f.prototype = {
            __getBrowserVersion: function(h, i) {
                var g;
                if (!h || !i) {
                    return
                }
                var j = d.browser.filter(function(k) {
                    return k.identity === i
                });
                j.some(function(m) {
                    var k = m.versionSearch || i;
                    var l = h.indexOf(k);
                    if (l > -1) {
                        g = parseFloat(h.substring(l + k.length + 1));
                        return true
                    }
                });
                return g
            },
            __getName: function(g) {
                return this.__getIdentityStringFromArray(g)
            },
            __getIdentity: function(g) {
                if (g.string) {
                    return this.__matchSubString(g)
                } else {
                    if (g.prop) {
                        return g.identity
                    }
                }
            },
            __getIdentityStringFromArray: function(g) {
                for (var k = 0, h = g.length, j; k < h; k++) {
                    j = this.__getIdentity(g[k]);
                    if (j) {
                        return j
                    }
                }
            },
            __getOS: function(g) {
                return this.__getIdentityStringFromArray(g)
            },
            __getOSVersion: function(i, l) {
                if (!i || !l) {
                    return
                }
                var k = d.os.filter(function(m) {
                    return m.identity === l
                })[0];
                var g = k.versionSearch || l;
                var j = new RegExp(g + " ([\\d_\\.]+)", "i");
                var h = i.match(j);
                if (h !== null) {
                    return h[1].replace(/_/g, ".")
                }
            },
            __matchSubString: function(h) {
                var g = h.subString;
                if (g) {
                    var i = g.test ? !!g.test(h.string) : h.string.indexOf(g) > -1;
                    if (i) {
                        return h.identity
                    }
                }
            }
        };
        f.create = function() {
            var g = new f();
            var h = {};
            h.name = g.__getName(d.browser);
            h.version = g.__getBrowserVersion(d.versionString, h.name);
            h.os = g.__getOS(d.os);
            h.osVersion = g.__getOSVersion(d.versionString, h.os);
            return h
        };
        c.exports = f
    }, {
        "./data": 3,
        "ac-polyfills/Array/prototype.filter": 57,
        "ac-polyfills/Array/prototype.some": 60
    }],
    2: [function(b, c, a) {
        c.exports = {
            getDocumentMode: function() {
                var d;
                if (document.documentMode) {
                    d = parseInt(document.documentMode, 10)
                } else {
                    d = 5;
                    if (document.compatMode) {
                        if (document.compatMode === "CSS1Compat") {
                            d = 7
                        }
                    }
                }
                return d
            }
        }
    }, {}],
    3: [function(b, c, a) {
        c.exports = {
            browser: [{
                string: window.navigator.userAgent,
                subString: "Chrome",
                identity: "Chrome"
            }, {
                string: window.navigator.userAgent,
                subString: /silk/i,
                identity: "Silk"
            }, {
                string: window.navigator.userAgent,
                subString: "OmniWeb",
                versionSearch: "OmniWeb/",
                identity: "OmniWeb"
            }, {
                string: window.navigator.userAgent,
                subString: /mobile\/[^\s]*\ssafari\//i,
                identity: "Safari Mobile",
                versionSearch: "Version"
            }, {
                string: window.navigator.vendor,
                subString: "Apple",
                identity: "Safari",
                versionSearch: "Version"
            }, {
                prop: window.opera,
                identity: "Opera",
                versionSearch: "Version"
            }, {
                string: window.navigator.vendor,
                subString: "iCab",
                identity: "iCab"
            }, {
                string: window.navigator.vendor,
                subString: "KDE",
                identity: "Konqueror"
            }, {
                string: window.navigator.userAgent,
                subString: "Firefox",
                identity: "Firefox"
            }, {
                string: window.navigator.vendor,
                subString: "Camino",
                identity: "Camino"
            }, {
                string: window.navigator.userAgent,
                subString: "Netscape",
                identity: "Netscape"
            }, {
                string: window.navigator.userAgent,
                subString: "MSIE",
                identity: "IE",
                versionSearch: "MSIE"
            }, {
                string: window.navigator.userAgent,
                subString: "Trident",
                identity: "IE",
                versionSearch: "rv"
            }, {
                string: window.navigator.userAgent,
                subString: "Gecko",
                identity: "Mozilla",
                versionSearch: "rv"
            }, {
                string: window.navigator.userAgent,
                subString: "Mozilla",
                identity: "Netscape",
                versionSearch: "Mozilla"
            }],
            os: [{
                string: window.navigator.platform,
                subString: "Win",
                identity: "Windows",
                versionSearch: "Windows NT"
            }, {
                string: window.navigator.platform,
                subString: "Mac",
                identity: "OS X"
            }, {
                string: window.navigator.userAgent,
                subString: "iPhone",
                identity: "iOS",
                versionSearch: "iPhone OS"
            }, {
                string: window.navigator.userAgent,
                subString: "iPad",
                identity: "iOS",
                versionSearch: "CPU OS"
            }, {
                string: window.navigator.userAgent,
                subString: /android/i,
                identity: "Android"
            }, {
                string: window.navigator.platform,
                subString: "Linux",
                identity: "Linux"
            }],
            versionString: window.navigator.userAgent || window.navigator.appVersion || undefined
        }
    }, {}],
    4: [function(d, f, b) {
        var g = d("./ac-browser/BrowserData");
        var a = /applewebkit/i;
        var h = d("./ac-browser/IE");
        var c = g.create();
        c.isWebKit = function(i) {
            var j = i || window.navigator.userAgent;
            return j ? !!a.test(j) : false
        };
        c.lowerCaseUserAgent = navigator.userAgent.toLowerCase();
        if (c.name === "IE") {
            c.IE = {
                documentMode: h.getDocumentMode()
            }
        }
        f.exports = c
    }, {
        "./ac-browser/BrowserData": 1,
        "./ac-browser/IE": 2
    }],
    5: [function(b, c, a) {
        b("ac-polyfills/Array/prototype.slice");
        b("ac-polyfills/Element/prototype.classList");
        var d = b("./className/add");
        c.exports = function f() {
            var j = Array.prototype.slice.call(arguments);
            var h = j.shift(j);
            var g;
            if (h.classList && h.classList.add) {
                h.classList.add.apply(h.classList, j);
                return
            }
            for (g = 0; g < j.length; g++) {
                d(h, j[g])
            }
        }
    }, {
        "./className/add": 6,
        "ac-polyfills/Array/prototype.slice": 59,
        "ac-polyfills/Element/prototype.classList": 61
    }],
    6: [function(b, c, a) {
        var d = b("./contains");
        c.exports = function f(h, g) {
            if (!d(h, g)) {
                h.className += " " + g
            }
        }
    }, {
        "./contains": 7
    }],
    7: [function(b, c, a) {
        var f = b("./getTokenRegExp");
        c.exports = function d(h, g) {
            return f(g).test(h.className)
        }
    }, {
        "./getTokenRegExp": 8
    }],
    8: [function(b, c, a) {
        c.exports = function d(f) {
            return new RegExp("(\\s|^)" + f + "(\\s|$)")
        }
    }, {}],
    9: [function(c, d, b) {
        var f = c("./contains");
        var g = c("./getTokenRegExp");
        d.exports = function a(i, h) {
            if (f(i, h)) {
                i.className = i.className.replace(g(h), "$1").trim()
            }
        }
    }, {
        "./contains": 7,
        "./getTokenRegExp": 8
    }],
    10: [function(d, f, c) {
        d("ac-polyfills/Array/prototype.slice");
        d("ac-polyfills/Element/prototype.classList");
        var b = d("./className/remove");
        f.exports = function a() {
            var j = Array.prototype.slice.call(arguments);
            var h = j.shift(j);
            var g;
            if (h.classList && h.classList.remove) {
                h.classList.remove.apply(h.classList, j);
                return
            }
            for (g = 0; g < j.length; g++) {
                b(h, j[g])
            }
        }
    }, {
        "./className/remove": 9,
        "ac-polyfills/Array/prototype.slice": 59,
        "ac-polyfills/Element/prototype.classList": 61
    }],
    11: [function(b, c, a) {
        var g = b("./helpers/globals");
        var f = b("ac-function/once");
        var d = function() {
            var h = g.getDocument();
            var i = h.createElement("canvas");
            return !!(typeof i.getContext === "function" && i.getContext("2d"))
        };
        c.exports = f(d);
        c.exports.original = d
    }, {
        "./helpers/globals": 19,
        "ac-function/once": 32
    }],
    12: [function(c, d, b) {
        var h = c("ac-browser");
        var a = c("./touchAvailable").original;
        var f = c("ac-function/once");

        function g() {
            return (!a() || (h.os === "iOS" && h.version >= 8) || h.name === "Chrome")
        }
        d.exports = f(g);
        d.exports.original = g
    }, {
        "./touchAvailable": 47,
        "ac-browser": 27,
        "ac-function/once": 32
    }],
    13: [function(c, d, b) {
        var g = c("./helpers/globals");
        var f = c("ac-function/once");

        function a() {
            var k = false;
            var h = g.getDocument();
            var j = g.getNavigator();
            try {
                if ("cookie" in h && !!j.cookieEnabled) {
                    h.cookie = "ac_feature_cookie=1";
                    k = (h.cookie.indexOf("ac_feature_cookie") !== -1);
                    h.cookie = "ac_feature_cookie=; expires=Thu, 01 Jan 1970 00:00:01 GMT;"
                }
            } catch (i) {}
            return k
        }
        d.exports = f(a);
        d.exports.original = a
    }, {
        "./helpers/globals": 19,
        "ac-function/once": 32
    }],
    14: [function(c, d, b) {
        var g = c("ac-prefixer/getStyleValue");
        var f = c("ac-function/once");

        function a() {
            var h = ["linear-gradient(to bottom right, #9f9, white)", "linear-gradient(top left, #9f9, white)", "gradient(linear, left top, right bottom, from(#9f9), to(white))"];
            return h.some(function(i) {
                return !!g("background-image", i)
            })
        }
        d.exports = f(a);
        d.exports.original = a
    }, {
        "ac-function/once": 32,
        "ac-prefixer/getStyleValue": 35
    }],
    15: [function(c, d, b) {
        var g = c("ac-prefixer/getStyleValue");
        var f = c("ac-prefixer/getStyleProperty");
        var h = c("ac-function/memoize");

        function a(j, i) {
            if (typeof i !== "undefined") {
                return !!g(j, i)
            } else {
                return !!f(j)
            }
        }
        d.exports = h(a);
        d.exports.original = a
    }, {
        "ac-function/memoize": 31,
        "ac-prefixer/getStyleProperty": 34,
        "ac-prefixer/getStyleValue": 35
    }],
    16: [function(b, c, a) {
        var f = b("ac-prefixer/getStyleValue");
        var d = b("ac-function/once");

        function g() {
            return !!f("margin", "1vw 1vh")
        }
        c.exports = d(g);
        c.exports.original = g
    }, {
        "ac-function/once": 32,
        "ac-prefixer/getStyleValue": 35
    }],
    17: [function(b, d, a) {
        var f = b("./helpers/globals");
        var g = b("ac-function/memoize");

        function c(h, j) {
            var i = f.getDocument();
            var k;
            j = j || "div";
            k = i.createElement(j);
            return (h in k)
        }
        d.exports = g(c);
        d.exports.original = c
    }, {
        "./helpers/globals": 19,
        "ac-function/memoize": 31
    }],
    18: [function(c, f, b) {
        var a = c("ac-prefixer/getEventType");
        var g = c("ac-function/memoize");

        function d(i, h) {
            return !!a(i, h)
        }
        f.exports = g(d);
        f.exports.original = d
    }, {
        "ac-function/memoize": 31,
        "ac-prefixer/getEventType": 33
    }],
    19: [function(b, c, a) {
        c.exports = {
            getWindow: function() {
                return window
            },
            getDocument: function() {
                return document
            },
            getNavigator: function() {
                return navigator
            }
        }
    }, {}],
    20: [function(b, c, a) {
        c.exports = {
            canvasAvailable: b("./canvasAvailable"),
            continuousScrollEventsAvailable: b("./continuousScrollEventsAvailable"),
            cookiesAvailable: b("./cookiesAvailable"),
            cssLinearGradientAvailable: b("./cssLinearGradientAvailable"),
            cssPropertyAvailable: b("./cssPropertyAvailable"),
            cssViewportUnitsAvailable: b("./cssViewportUnitsAvailable"),
            elementAttributeAvailable: b("./elementAttributeAvailable"),
            eventTypeAvailable: b("./eventTypeAvailable"),
            isDesktop: b("./isDesktop"),
            isHandheld: b("./isHandheld"),
            isRetina: b("./isRetina"),
            isTablet: b("./isTablet"),
            localStorageAvailable: b("./localStorageAvailable"),
            mediaElementsAvailable: b("./mediaElementsAvailable"),
            sessionStorageAvailable: b("./sessionStorageAvailable"),
            svgAvailable: b("./svgAvailable"),
            threeDTransformsAvailable: b("./threeDTransformsAvailable"),
            touchAvailable: b("./touchAvailable"),
            webGLAvailable: b("./webGLAvailable")
        }
    }, {
        "./canvasAvailable": 11,
        "./continuousScrollEventsAvailable": 12,
        "./cookiesAvailable": 13,
        "./cssLinearGradientAvailable": 14,
        "./cssPropertyAvailable": 15,
        "./cssViewportUnitsAvailable": 16,
        "./elementAttributeAvailable": 17,
        "./eventTypeAvailable": 18,
        "./isDesktop": 21,
        "./isHandheld": 22,
        "./isRetina": 23,
        "./isTablet": 24,
        "./localStorageAvailable": 25,
        "./mediaElementsAvailable": 26,
        "./sessionStorageAvailable": 44,
        "./svgAvailable": 45,
        "./threeDTransformsAvailable": 46,
        "./touchAvailable": 47,
        "./webGLAvailable": 48
    }],
    21: [function(d, f, b) {
        var a = d("./touchAvailable").original;
        var h = d("./helpers/globals");
        var g = d("ac-function/once");

        function c() {
            var i = h.getWindow();
            return (!a() && !i.orientation)
        }
        f.exports = g(c);
        f.exports.original = c
    }, {
        "./helpers/globals": 19,
        "./touchAvailable": 47,
        "ac-function/once": 32
    }],
    22: [function(f, g, c) {
        var d = f("./isDesktop").original;
        var a = f("./isTablet").original;
        var h = f("ac-function/once");

        function b() {
            return (!d() && !a())
        }
        g.exports = h(b);
        g.exports.original = b
    }, {
        "./isDesktop": 21,
        "./isTablet": 24,
        "ac-function/once": 32
    }],
    23: [function(b, c, a) {
        var d = b("./helpers/globals");
        c.exports = function f() {
            var g = d.getWindow();
            return ("devicePixelRatio" in g && g.devicePixelRatio >= 1.5)
        }
    }, {
        "./helpers/globals": 19
    }],
    24: [function(d, f, b) {
        var c = d("./isDesktop").original;
        var h = d("./helpers/globals");
        var g = d("ac-function/once");

        function a() {
            var j = h.getWindow();
            var i = j.screen.width;
            if (j.orientation && j.screen.height < i) {
                i = j.screen.height
            }
            return (!c() && i >= 600)
        }
        f.exports = g(a);
        f.exports.original = a
    }, {
        "./helpers/globals": 19,
        "./isDesktop": 21,
        "ac-function/once": 32
    }],
    25: [function(c, d, a) {
        var g = c("./helpers/globals");
        var f = c("ac-function/once");

        function b() {
            var j = g.getWindow();
            var i = false;
            try {
                i = !!(j.localStorage && j.localStorage.non_existent !== null)
            } catch (h) {}
            return i
        }
        d.exports = f(b);
        d.exports.original = b
    }, {
        "./helpers/globals": 19,
        "ac-function/once": 32
    }],
    26: [function(b, c, a) {
        var g = b("./helpers/globals");
        var d = b("ac-function/once");

        function f() {
            var h = g.getWindow();
            return ("HTMLMediaElement" in h)
        }
        c.exports = d(f);
        c.exports.original = f
    }, {
        "./helpers/globals": 19,
        "ac-function/once": 32
    }],
    27: [function(b, c, a) {
        arguments[4][4][0].apply(a, arguments)
    }, {
        "./ac-browser/BrowserData": 28,
        "./ac-browser/IE": 29,
        dup: 4
    }],
    28: [function(b, c, a) {
        var d = b("./data");

        function f() {}
        f.prototype = {
            __getBrowserVersion: function(h, i) {
                var g;
                if (!h || !i) {
                    return
                }
                var j = d.browser.filter(function(k) {
                    return k.identity === i
                });
                j.some(function(m) {
                    var k = m.versionSearch || i;
                    var l = h.indexOf(k);
                    if (l > -1) {
                        g = parseFloat(h.substring(l + k.length + 1));
                        return true
                    }
                });
                return g
            },
            __getName: function(g) {
                return this.__getIdentityStringFromArray(g)
            },
            __getIdentity: function(g) {
                if (g.string) {
                    return this.__matchSubString(g)
                } else {
                    if (g.prop) {
                        return g.identity
                    }
                }
            },
            __getIdentityStringFromArray: function(g) {
                for (var k = 0, h = g.length, j; k < h; k++) {
                    j = this.__getIdentity(g[k]);
                    if (j) {
                        return j
                    }
                }
            },
            __getOS: function(g) {
                return this.__getIdentityStringFromArray(g)
            },
            __getOSVersion: function(i, l) {
                if (!i || !l) {
                    return
                }
                var k = d.os.filter(function(m) {
                    return m.identity === l
                })[0];
                var g = k.versionSearch || l;
                var j = new RegExp(g + " ([\\d_\\.]+)", "i");
                var h = i.match(j);
                if (h !== null) {
                    return h[1].replace(/_/g, ".")
                }
            },
            __matchSubString: function(h) {
                var g = h.subString;
                if (g) {
                    var i = g.test ? !!g.test(h.string) : h.string.indexOf(g) > -1;
                    if (i) {
                        return h.identity
                    }
                }
            }
        };
        f.create = function() {
            var g = new f();
            var h = {};
            h.name = g.__getName(d.browser);
            h.version = g.__getBrowserVersion(d.versionString, h.name);
            h.os = g.__getOS(d.os);
            h.osVersion = g.__getOSVersion(d.versionString, h.os);
            return h
        };
        c.exports = f
    }, {
        "./data": 30
    }],
    29: [function(b, c, a) {
        arguments[4][2][0].apply(a, arguments)
    }, {
        dup: 2
    }],
    30: [function(b, c, a) {
        arguments[4][3][0].apply(a, arguments)
    }, {
        dup: 3
    }],
    31: [function(c, d, b) {
        var a = function() {
            var h = "";
            var g;
            for (g = 0; g < arguments.length; g++) {
                if (g > 0) {
                    h += ","
                }
                h += arguments[g]
            }
            return h
        };
        d.exports = function f(i, h) {
            h = h || a;
            var g = function() {
                var j = arguments;
                var k = h.apply(this, j);
                if (!(k in g.cache)) {
                    g.cache[k] = i.apply(this, j)
                }
                return g.cache[k]
            };
            g.cache = {};
            return g
        }
    }, {}],
    32: [function(b, c, a) {
        c.exports = function d(g) {
            var f;
            return function() {
                if (typeof f === "undefined") {
                    f = g.apply(this, arguments)
                }
                return f
            }
        }
    }, {}],
    33: [function(g, i, d) {
        var h = g("./utils/eventTypeAvailable");
        var b = g("./shared/camelCasedEventTypes");
        var f = g("./shared/prefixHelper");
        var c = {};
        i.exports = function a(l, k) {
            var m;
            var n;
            var j;
            k = k || "div";
            l = l.toLowerCase();
            if (!(k in c)) {
                c[k] = {}
            }
            n = c[k];
            if (l in n) {
                return n[l]
            }
            if (h(l, k)) {
                return n[l] = l
            }
            if (l in b) {
                for (j = 0; j < b[l].length; j++) {
                    m = b[l][j];
                    if (h(m.toLowerCase(), k)) {
                        return n[l] = m
                    }
                }
            }
            for (j = 0; j < f.evt.length; j++) {
                m = f.evt[j] + l;
                if (h(m, k)) {
                    f.reduce(j);
                    return n[l] = m
                }
            }
            return n[l] = false
        }
    }, {
        "./shared/camelCasedEventTypes": 36,
        "./shared/prefixHelper": 38,
        "./utils/eventTypeAvailable": 41
    }],
    34: [function(f, d, h) {
        var a = f("./shared/stylePropertyCache");
        var i = f("./shared/getStyleTestElement");
        var b = f("./utils/toCSS");
        var k = f("./utils/toDOM");
        var j = f("./shared/prefixHelper");
        var c = function(o, l) {
            var m = b(o);
            var n = (l === false) ? false : b(l);
            a[o] = a[l] = a[m] = a[n] = {
                dom: l,
                css: n
            };
            return l
        };
        d.exports = function g(p) {
            var n;
            var l;
            var o;
            var m;
            p += "";
            if (p in a) {
                return a[p].dom
            }
            o = i();
            p = k(p);
            l = p.charAt(0).toUpperCase() + p.substring(1);
            if (p === "filter") {
                n = ["WebkitFilter", "filter"]
            } else {
                n = (p + " " + j.dom.join(l + " ") + l).split(" ")
            }
            for (m = 0; m < n.length; m++) {
                if (typeof o.style[n[m]] !== "undefined") {
                    if (m !== 0) {
                        j.reduce(m - 1)
                    }
                    return c(p, n[m])
                }
            }
            return c(p, false)
        }
    }, {
        "./shared/getStyleTestElement": 37,
        "./shared/prefixHelper": 38,
        "./shared/stylePropertyCache": 39,
        "./utils/toCSS": 42,
        "./utils/toDOM": 43
    }],
    35: [function(d, b, h) {
        var f = d("./getStyleProperty");
        var k = d("./shared/styleValueAvailable");
        var j = d("./shared/prefixHelper");
        var a = d("./shared/stylePropertyCache");
        var i = {};
        var l = /(\([^\)]+\))/gi;
        var g = /([^ ,;\(]+(\([^\)]+\))?)/gi;
        b.exports = function c(o, n) {
            var m;
            n += "";
            o = f(o);
            if (!o) {
                return false
            }
            if (k(o, n)) {
                return n
            }
            m = a[o].css;
            n = n.replace(g, function(q) {
                var p;
                var t;
                var s;
                var r;
                if (q[0] === "#" || !isNaN(q[0])) {
                    return q
                }
                t = q.replace(l, "");
                s = m + ":" + t;
                if (s in i) {
                    if (i[s] === false) {
                        return ""
                    }
                    return q.replace(t, i[s])
                }
                p = j.css.map(function(u) {
                    return u + q
                });
                p = [q].concat(p);
                for (r = 0; r < p.length; r++) {
                    if (k(o, p[r])) {
                        if (r !== 0) {
                            j.reduce(r - 1)
                        }
                        i[s] = p[r].replace(l, "");
                        return p[r]
                    }
                }
                i[s] = false;
                return ""
            });
            n = n.trim();
            return (n === "") ? false : n
        }
    }, {
        "./getStyleProperty": 34,
        "./shared/prefixHelper": 38,
        "./shared/stylePropertyCache": 39,
        "./shared/styleValueAvailable": 40
    }],
    36: [function(b, c, a) {
        c.exports = {
            transitionend: ["webkitTransitionEnd", "MSTransitionEnd"],
            animationstart: ["webkitAnimationStart", "MSAnimationStart"],
            animationend: ["webkitAnimationEnd", "MSAnimationEnd"],
            animationiteration: ["webkitAnimationIteration", "MSAnimationIteration"],
            fullscreenchange: ["MSFullscreenChange"],
            fullscreenerror: ["MSFullscreenError"]
        }
    }, {}],
    37: [function(c, d, b) {
        var f;
        d.exports = function a() {
            if (!f) {
                f = document.createElement("_")
            } else {
                f.style.cssText = "";
                f.removeAttribute("style")
            }
            return f
        };
        d.exports.resetElement = function() {
            f = null
        }
    }, {}],
    38: [function(b, d, a) {
        var i = ["-webkit-", "-moz-", "-ms-"];
        var f = ["Webkit", "Moz", "ms"];
        var h = ["webkit", "moz", "ms"];
        var c = function() {
            this.initialize()
        };
        var g = c.prototype;
        g.initialize = function() {
            this.reduced = false;
            this.css = i;
            this.dom = f;
            this.evt = h
        };
        g.reduce = function(j) {
            if (!this.reduced) {
                this.reduced = true;
                this.css = [this.css[j]];
                this.dom = [this.dom[j]];
                this.evt = [this.evt[j]]
            }
        };
        d.exports = new c()
    }, {}],
    39: [function(b, c, a) {
        c.exports = {}
    }, {}],
    40: [function(c, b, d) {
        var a = c("./stylePropertyCache");
        var f = c("./getStyleTestElement");
        var i = false;
        var k;
        var j;
        var g = function() {
            var l;
            if (!i) {
                i = true;
                k = ("CSS" in window && "supports" in window.CSS);
                j = false;
                l = f();
                try {
                    l.style.width = "invalid"
                } catch (m) {
                    j = true
                }
            }
        };
        b.exports = function h(o, n) {
            var m;
            var l;
            g();
            if (k) {
                o = a[o].css;
                return CSS.supports(o, n)
            }
            l = f();
            m = l.style[o];
            if (j) {
                try {
                    l.style[o] = n
                } catch (p) {
                    return false
                }
            } else {
                l.style[o] = n
            }
            return (l.style[o] && l.style[o] !== m)
        };
        b.exports.resetFlags = function() {
            i = false
        }
    }, {
        "./getStyleTestElement": 37,
        "./stylePropertyCache": 39
    }],
    41: [function(c, f, b) {
        var a = {
            window: window,
            document: document
        };
        f.exports = function d(i, g) {
            var h;
            i = "on" + i;
            if (!(g in a)) {
                a[g] = document.createElement(g)
            }
            h = a[g];
            if (i in h) {
                return true
            }
            if ("setAttribute" in h) {
                h.setAttribute(i, "return;");
                return (typeof h[i] === "function")
            }
            return false
        }
    }, {}],
    42: [function(c, d, b) {
        var f = /^(webkit|moz|ms)/gi;
        d.exports = function a(h) {
            var g;
            if (h.toLowerCase() === "cssfloat") {
                return "float"
            }
            if (f.test(h)) {
                h = "-" + h
            }
            return h.replace(/([A-Z]+)([A-Z][a-z])/g, "$1-$2").replace(/([a-z\d])([A-Z])/g, "$1-$2").toLowerCase()
        }
    }, {}],
    43: [function(b, c, a) {
        var f = /-([a-z])/g;
        c.exports = function d(h) {
            var g;
            if (h.toLowerCase() === "float") {
                return "cssFloat"
            }
            h = h.replace(f, function(j, i) {
                return i.toUpperCase()
            });
            if (h.substr(0, 2) === "Ms") {
                h = "ms" + h.substring(2)
            }
            return h
        }
    }, {}],
    44: [function(c, d, b) {
        var g = c("./helpers/globals");
        var f = c("ac-function/once");

        function a() {
            var j = g.getWindow();
            var h = false;
            try {
                if ("sessionStorage" in j && typeof j.sessionStorage.setItem === "function") {
                    j.sessionStorage.setItem("ac_feature", "test");
                    h = true;
                    j.sessionStorage.removeItem("ac_feature", "test")
                }
            } catch (i) {}
            return h
        }
        d.exports = f(a);
        d.exports.original = a
    }, {
        "./helpers/globals": 19,
        "ac-function/once": 32
    }],
    45: [function(c, d, b) {
        var g = c("./helpers/globals");
        var f = c("ac-function/once");

        function a() {
            var h = g.getDocument();
            return !!h.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#Image", "1.1")
        }
        d.exports = f(a);
        d.exports.original = a
    }, {
        "./helpers/globals": 19,
        "ac-function/once": 32
    }],
    46: [function(b, c, a) {
        var g = b("ac-prefixer/getStyleValue");
        var d = b("ac-function/once");

        function f() {
            return !!(g("perspective", "1px") && g("transform", "translateZ(0)"))
        }
        c.exports = d(f);
        c.exports.original = f
    }, {
        "ac-function/once": 32,
        "ac-prefixer/getStyleValue": 35
    }],
    47: [function(c, d, b) {
        var g = c("./helpers/globals");
        var f = c("ac-function/once");

        function a() {
            var j = g.getWindow();
            var h = g.getDocument();
            var i = g.getNavigator();
            return !!(("ontouchstart" in j) || (j.DocumentTouch && h instanceof j.DocumentTouch) || (i.maxTouchPoints > 0) || (i.msMaxTouchPoints > 0))
        }
        d.exports = f(a);
        d.exports.original = a
    }, {
        "./helpers/globals": 19,
        "ac-function/once": 32
    }],
    48: [function(c, d, b) {
        var g = c("./helpers/globals");
        var f = c("ac-function/once");

        function a() {
            var h = g.getDocument();
            var i = h.createElement("canvas");
            return !!(typeof i.getContext === "function" && i.getContext("webgl"))
        }
        d.exports = f(a);
        d.exports.original = a
    }, {
        "./helpers/globals": 19,
        "ac-function/once": 32
    }],
    49: [function(b, d, a) {
        var g = b("ac-classlist/add");
        var h = b("ac-classlist/remove");
        var i = b("ac-object/extend");
        var c = function(j, k) {
            this._target = j;
            this._tests = {};
            this.addTests(k)
        };
        var f = c.prototype;
        f.addTests = function(j) {
            this._tests = i(this._tests, j || {})
        };
        f._supports = function(j) {
            if (typeof this._tests[j] === "undefined") {
                return false
            }
            if (typeof this._tests[j] === "function") {
                this._tests[j] = this._tests[j]()
            }
            return this._tests[j]
        };
        f._addClass = function(k, j) {
            j = j || "no-";
            if (this._supports(k)) {
                g(this._target, k)
            } else {
                g(this._target, j + k)
            }
        };
        f.htmlClass = function() {
            var j;
            h(this._target, "no-js");
            g(this._target, "js");
            for (j in this._tests) {
                if (this._tests.hasOwnProperty(j)) {
                    this._addClass(j)
                }
            }
        };
        d.exports = c
    }, {
        "ac-classlist/add": 5,
        "ac-classlist/remove": 10,
        "ac-object/extend": 56
    }],
    50: [function(d, h, c) {
        var i = d("ac-browser");
        var a = d("ac-feature/touchAvailable");
        var b = d("ac-feature/svgAvailable");
        var g = function() {
            return (i.IE && i.IE.documentMode < 9)
        };
        var f = function() {
            return (i.IE && i.IE.documentMode >= 9)
        };
        h.exports = {
            touch: a,
            svg: b,
            oldie: g,
            ie: f
        }
    }, {
        "ac-browser": 52,
        "ac-feature/svgAvailable": 45,
        "ac-feature/touchAvailable": 47
    }],
    51: [function(b, d, a) {
        b("ac-polyfills");
        var c = b("./FeatureDetect");
        var f = b("./defaultTests");
        d.exports = new c(document.documentElement, f);
        d.exports.FeatureDetect = c
    }, {
        "./FeatureDetect": 49,
        "./defaultTests": 50,
        "ac-polyfills": 104
    }],
    52: [function(b, c, a) {
        arguments[4][4][0].apply(a, arguments)
    }, {
        "./ac-browser/BrowserData": 53,
        "./ac-browser/IE": 54,
        dup: 4
    }],
    53: [function(b, c, a) {
        arguments[4][28][0].apply(a, arguments)
    }, {
        "./data": 55,
        dup: 28
    }],
    54: [function(b, c, a) {
        arguments[4][2][0].apply(a, arguments)
    }, {
        dup: 2
    }],
    55: [function(b, c, a) {
        arguments[4][3][0].apply(a, arguments)
    }, {
        dup: 3
    }],
    56: [function(c, d, b) {
        c("ac-polyfills/Array/prototype.forEach");
        var a = Object.prototype.hasOwnProperty;
        d.exports = function f() {
            var h;
            var g;
            if (arguments.length < 2) {
                h = [{}, arguments[0]]
            } else {
                h = [].slice.call(arguments)
            }
            g = h.shift();
            h.forEach(function(j) {
                if (j != null) {
                    for (var i in j) {
                        if (a.call(j, i)) {
                            g[i] = j[i]
                        }
                    }
                }
            });
            return g
        }
    }, {
        "ac-polyfills/Array/prototype.forEach": 58
    }],
    57: [function(b, c, a) {
        if (!Array.prototype.filter) {
            Array.prototype.filter = function d(l, k) {
                var j = Object(this);
                var f = j.length >>> 0;
                var h;
                var g = [];
                if (typeof l !== "function") {
                    throw new TypeError(l + " is not a function")
                }
                for (h = 0; h < f; h += 1) {
                    if (h in j && l.call(k, j[h], h, j)) {
                        g.push(j[h])
                    }
                }
                return g
            }
        }
    }, {}],
    58: [function(b, c, a) {
        if (!Array.prototype.forEach) {
            Array.prototype.forEach = function d(k, j) {
                var h = Object(this);
                var f;
                var g;
                if (typeof k !== "function") {
                    throw new TypeError("No function object passed to forEach.")
                }
                for (f = 0; f < this.length; f += 1) {
                    g = h[f];
                    k.call(j, g, f, h)
                }
            }
        }
    }, {}],
    59: [function(b, c, a) {
        (function() {
            var d = Array.prototype.slice;
            try {
                d.call(document.documentElement)
            } catch (f) {
                Array.prototype.slice = function(n, j) {
                    j = (typeof j !== "undefined") ? j : this.length;
                    if (Object.prototype.toString.call(this) === "[object Array]") {
                        return d.call(this, n, j)
                    }
                    var l, h = [],
                        k, g = this.length;
                    var o = n || 0;
                    o = (o >= 0) ? o : g + o;
                    var m = (j) ? j : g;
                    if (j < 0) {
                        m = g + j
                    }
                    k = m - o;
                    if (k > 0) {
                        h = new Array(k);
                        if (this.charAt) {
                            for (l = 0; l < k; l++) {
                                h[l] = this.charAt(o + l)
                            }
                        } else {
                            for (l = 0; l < k; l++) {
                                h[l] = this[o + l]
                            }
                        }
                    }
                    return h
                }
            }
        }())
    }, {}],
    60: [function(b, c, a) {
        if (!Array.prototype.some) {
            Array.prototype.some = function d(k, j) {
                var g = Object(this);
                var f = g.length >>> 0;
                var h;
                if (typeof k !== "function") {
                    throw new TypeError(k + " is not a function")
                }
                for (h = 0; h < f; h += 1) {
                    if (h in g && k.call(j, g[h], h, g) === true) {
                        return true
                    }
                }
                return false
            }
        }
    }, {}],
    61: [function(b, c, a) {
        /*! @source http://purl.eligrey.com/github/classList.js/blob/master/classList.js*/
        ;
        if ("document" in self) {
            if (!("classList" in document.createElement("_"))) {
                (function(n) {
                    if (!("Element" in n)) {
                        return
                    }
                    var d = "classList",
                        j = "prototype",
                        q = n.Element[j],
                        f = Object,
                        o = String[j].trim || function() {
                            return this.replace(/^\s+|\s+$/g, "")
                        },
                        g = Array[j].indexOf || function(u) {
                            var t = 0,
                                s = this.length;
                            for (; t < s; t++) {
                                if (t in this && this[t] === u) {
                                    return t
                                }
                            }
                            return -1
                        },
                        r = function(s, t) {
                            this.name = s;
                            this.code = DOMException[s];
                            this.message = t
                        },
                        k = function(t, s) {
                            if (s === "") {
                                throw new r("SYNTAX_ERR", "An invalid or illegal string was specified")
                            }
                            if (/\s/.test(s)) {
                                throw new r("INVALID_CHARACTER_ERR", "String contains an invalid character")
                            }
                            return g.call(t, s)
                        },
                        h = function(w) {
                            var v = o.call(w.getAttribute("class") || ""),
                                u = v ? v.split(/\s+/) : [],
                                t = 0,
                                s = u.length;
                            for (; t < s; t++) {
                                this.push(u[t])
                            }
                            this._updateClassName = function() {
                                w.setAttribute("class", this.toString())
                            }
                        },
                        i = h[j] = [],
                        m = function() {
                            return new h(this)
                        };
                    r[j] = Error[j];
                    i.item = function(s) {
                        return this[s] || null
                    };
                    i.contains = function(s) {
                        s += "";
                        return k(this, s) !== -1
                    };
                    i.add = function() {
                        var w = arguments,
                            v = 0,
                            t = w.length,
                            u, s = false;
                        do {
                            u = w[v] + "";
                            if (k(this, u) === -1) {
                                this.push(u);
                                s = true
                            }
                        } while (++v < t);
                        if (s) {
                            this._updateClassName()
                        }
                    };
                    i.remove = function() {
                        var x = arguments,
                            w = 0,
                            t = x.length,
                            v, s = false,
                            u;
                        do {
                            v = x[w] + "";
                            u = k(this, v);
                            while (u !== -1) {
                                this.splice(u, 1);
                                s = true;
                                u = k(this, v)
                            }
                        } while (++w < t);
                        if (s) {
                            this._updateClassName()
                        }
                    };
                    i.toggle = function(t, u) {
                        t += "";
                        var s = this.contains(t),
                            v = s ? u !== true && "remove" : u !== false && "add";
                        if (v) {
                            this[v](t)
                        }
                        if (u === true || u === false) {
                            return u
                        } else {
                            return !s
                        }
                    };
                    i.toString = function() {
                        return this.join(" ")
                    };
                    if (f.defineProperty) {
                        var p = {
                            get: m,
                            enumerable: true,
                            configurable: true
                        };
                        try {
                            f.defineProperty(q, d, p)
                        } catch (l) {
                            if (l.number === -2146823252) {
                                p.enumerable = false;
                                f.defineProperty(q, d, p)
                            }
                        }
                    } else {
                        if (f[j].__defineGetter__) {
                            q.__defineGetter__(d, m)
                        }
                    }
                }(self))
            } else {
                (function() {
                    var f = document.createElement("_");
                    f.classList.add("c1", "c2");
                    if (!f.classList.contains("c2")) {
                        var g = function(i) {
                            var h = DOMTokenList.prototype[i];
                            DOMTokenList.prototype[i] = function(l) {
                                var k, j = arguments.length;
                                for (k = 0; k < j; k++) {
                                    l = arguments[k];
                                    h.call(this, l)
                                }
                            }
                        };
                        g("add");
                        g("remove")
                    }
                    f.classList.toggle("c3", false);
                    if (f.classList.contains("c3")) {
                        var d = DOMTokenList.prototype.toggle;
                        DOMTokenList.prototype.toggle = function(h, i) {
                            if (1 in arguments && !this.contains(h) === !i) {
                                return i
                            } else {
                                return d.call(this, h)
                            }
                        }
                    }
                    f = null
                }())
            }
        }
    }, {}],
    62: [function(b, c, a) {
        var d = b("./promise/promise").Promise;
        var f = b("./promise/polyfill").polyfill;
        a.Promise = d;
        a.polyfill = f
    }, {
        "./promise/polyfill": 66,
        "./promise/promise": 67
    }],
    63: [function(c, d, b) {
        var a = c("./utils").isArray;
        var g = c("./utils").isFunction;

        function f(h) {
            var i = this;
            if (!a(h)) {
                throw new TypeError("You must pass an array to all.")
            }
            return new i(function(o, n) {
                var l = [],
                    m = h.length,
                    q;
                if (m === 0) {
                    o([])
                }

                function p(r) {
                    return function(s) {
                        j(r, s)
                    }
                }

                function j(r, s) {
                    l[r] = s;
                    if (--m === 0) {
                        o(l)
                    }
                }
                for (var k = 0; k < h.length; k++) {
                    q = h[k];
                    if (q && g(q.then)) {
                        q.then(p(k), n)
                    } else {
                        j(k, q)
                    }
                }
            })
        }
        b.all = f
    }, {
        "./utils": 71
    }],
    64: [function(b, c, a) {
        (function(f, g) {
            var o = (typeof window !== "undefined") ? window : {};
            var l = o.MutationObserver || o.WebKitMutationObserver;
            var n = (typeof g !== "undefined") ? g : (this === undefined ? window : this);

            function m() {
                return function() {
                    f.nextTick(p)
                }
            }

            function i() {
                var s = 0;
                var q = new l(p);
                var r = document.createTextNode("");
                q.observe(r, {
                    characterData: true
                });
                return function() {
                    r.data = (s = ++s % 2)
                }
            }

            function k() {
                return function() {
                    n.setTimeout(p, 1)
                }
            }
            var j = [];

            function p() {
                for (var s = 0; s < j.length; s++) {
                    var r = j[s];
                    var t = r[0],
                        q = r[1];
                    t(q)
                }
                j = []
            }
            var h;
            if (typeof f !== "undefined" && {}.toString.call(f) === "[object process]") {
                h = m()
            } else {
                if (l) {
                    h = i()
                } else {
                    h = k()
                }
            }

            function d(s, q) {
                var r = j.push([s, q]);
                if (r === 1) {
                    h()
                }
            }
            a.asap = d
        }).call(this, b("_process"), typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
        _process: 110
    }],
    65: [function(d, f, a) {
        var c = {
            instrument: false
        };

        function b(g, h) {
            if (arguments.length === 2) {
                c[g] = h
            } else {
                return c[g]
            }
        }
        a.config = c;
        a.configure = b
    }, {}],
    66: [function(b, c, a) {
        (function(f) {
            var d = b("./promise").Promise;
            var h = b("./utils").isFunction;

            function g() {
                var j;
                if (typeof f !== "undefined") {
                    j = f
                } else {
                    if (typeof window !== "undefined" && window.document) {
                        j = window
                    } else {
                        j = self
                    }
                }
                var i = "Promise" in j && "resolve" in j.Promise && "reject" in j.Promise && "all" in j.Promise && "race" in j.Promise && (function() {
                    var k;
                    new j.Promise(function(l) {
                        k = l
                    });
                    return h(k)
                }());
                if (!i) {
                    j.Promise = d
                }
            }
            a.polyfill = g
        }).call(this, typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
        "./promise": 67,
        "./utils": 71
    }],
    67: [function(q, d, D) {
        var B = q("./config").config;
        var A = q("./config").configure;
        var s = q("./utils").objectOrFunction;
        var a = q("./utils").isFunction;
        var f = q("./utils").now;
        var g = q("./all").all;
        var j = q("./race").race;
        var l = q("./resolve").resolve;
        var c = q("./reject").reject;
        var u = q("./asap").asap;
        var r = 0;
        B.async = u;

        function h(E) {
            if (!a(E)) {
                throw new TypeError("You must pass a resolver function as the first argument to the promise constructor")
            }
            if (!(this instanceof h)) {
                throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.")
            }
            this._subscribers = [];
            z(E, this)
        }

        function z(I, H) {
            function E(J) {
                v(H, J)
            }

            function G(J) {
                k(H, J)
            }
            try {
                I(E, G)
            } catch (F) {
                G(F)
            }
        }

        function x(L, N, K, G) {
            var E = a(K),
                J, I, M, F;
            if (E) {
                try {
                    J = K(G);
                    M = true
                } catch (H) {
                    F = true;
                    I = H
                }
            } else {
                J = G;
                M = true
            }
            if (t(N, J)) {
                return
            } else {
                if (E && M) {
                    v(N, J)
                } else {
                    if (F) {
                        k(N, I)
                    } else {
                        if (L === b) {
                            v(N, J)
                        } else {
                            if (L === C) {
                                k(N, J)
                            }
                        }
                    }
                }
            }
        }
        var m = void 0;
        var p = 0;
        var b = 1;
        var C = 2;

        function o(E, J, I, H) {
            var G = E._subscribers;
            var F = G.length;
            G[F] = J;
            G[F + b] = I;
            G[F + C] = H
        }

        function w(I, E) {
            var K, J, H = I._subscribers,
                G = I._detail;
            for (var F = 0; F < H.length; F += 3) {
                K = H[F];
                J = H[F + E];
                x(E, K, J, G)
            }
            I._subscribers = null
        }
        h.prototype = {
            constructor: h,
            _state: undefined,
            _detail: undefined,
            _subscribers: undefined,
            then: function(J, H) {
                var I = this;
                var F = new this.constructor(function() {});
                if (this._state) {
                    var G = arguments;
                    B.async(function E() {
                        x(I._state, F, G[I._state - 1], I._detail)
                    })
                } else {
                    o(this, F, J, H)
                }
                return F
            },
            "catch": function(E) {
                return this.then(null, E)
            }
        };
        h.all = g;
        h.race = j;
        h.resolve = l;
        h.reject = c;

        function t(I, G) {
            var H = null,
                E;
            try {
                if (I === G) {
                    throw new TypeError("A promises callback cannot return that same promise.")
                }
                if (s(G)) {
                    H = G.then;
                    if (a(H)) {
                        H.call(G, function(J) {
                            if (E) {
                                return true
                            }
                            E = true;
                            if (G !== J) {
                                v(I, J)
                            } else {
                                i(I, J)
                            }
                        }, function(J) {
                            if (E) {
                                return true
                            }
                            E = true;
                            k(I, J)
                        });
                        return true
                    }
                }
            } catch (F) {
                if (E) {
                    return true
                }
                k(I, F);
                return true
            }
            return false
        }

        function v(F, E) {
            if (F === E) {
                i(F, E)
            } else {
                if (!t(F, E)) {
                    i(F, E)
                }
            }
        }

        function i(F, E) {
            if (F._state !== m) {
                return
            }
            F._state = p;
            F._detail = E;
            B.async(y, F)
        }

        function k(F, E) {
            if (F._state !== m) {
                return
            }
            F._state = p;
            F._detail = E;
            B.async(n, F)
        }

        function y(E) {
            w(E, E._state = b)
        }

        function n(E) {
            w(E, E._state = C)
        }
        D.Promise = h
    }, {
        "./all": 63,
        "./asap": 64,
        "./config": 65,
        "./race": 68,
        "./reject": 69,
        "./resolve": 70,
        "./utils": 71
    }],
    68: [function(c, f, b) {
        var a = c("./utils").isArray;

        function d(g) {
            var h = this;
            if (!a(g)) {
                throw new TypeError("You must pass an array to race.")
            }
            return new h(function(m, l) {
                var k = [],
                    n;
                for (var j = 0; j < g.length; j++) {
                    n = g[j];
                    if (n && typeof n.then === "function") {
                        n.then(m, l)
                    } else {
                        m(n)
                    }
                }
            })
        }
        b.race = d
    }, {
        "./utils": 71
    }],
    69: [function(b, c, a) {
        function d(g) {
            var f = this;
            return new f(function(i, h) {
                h(g)
            })
        }
        a.reject = d
    }, {}],
    70: [function(b, c, a) {
        function d(g) {
            if (g && typeof g === "object" && g.constructor === this) {
                return g
            }
            var f = this;
            return new f(function(h) {
                h(g)
            })
        }
        a.resolve = d
    }, {}],
    71: [function(d, f, b) {
        function g(i) {
            return h(i) || (typeof i === "object" && i !== null)
        }

        function h(i) {
            return typeof i === "function"
        }

        function a(i) {
            return Object.prototype.toString.call(i) === "[object Array]"
        }
        var c = Date.now || function() {
            return new Date().getTime()
        };
        b.objectOrFunction = g;
        b.isFunction = h;
        b.isArray = a;
        b.now = c
    }, {}],
    72: [function(b, c, a) {
        (function(o, q) {
            var k = "3.7.3-pre";
            var h = o.html5 || {};
            var l = /^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i;
            var g = /^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i;
            var v;
            var m = "_html5shiv";
            var d = 0;
            var s = {};
            var i;
            (function() {
                try {
                    var y = q.createElement("a");
                    y.innerHTML = "<xyz></xyz>";
                    v = ("hidden" in y);
                    i = y.childNodes.length == 1 || (function() {
                        (q.createElement)("a");
                        var A = q.createDocumentFragment();
                        return (typeof A.cloneNode == "undefined" || typeof A.createDocumentFragment == "undefined" || typeof A.createElement == "undefined")
                    }())
                } catch (z) {
                    v = true;
                    i = true
                }
            }());

            function j(y, A) {
                var B = y.createElement("p"),
                    z = y.getElementsByTagName("head")[0] || y.documentElement;
                B.innerHTML = "x<style>" + A + "</style>";
                return z.insertBefore(B.lastChild, z.firstChild)
            }

            function p() {
                var y = n.elements;
                return typeof y == "string" ? y.split(" ") : y
            }

            function t(y, z) {
                var A = n.elements;
                if (typeof A != "string") {
                    A = A.join(" ")
                }
                if (typeof y != "string") {
                    y = y.join(" ")
                }
                n.elements = A + " " + y;
                f(z)
            }

            function u(y) {
                var z = s[y[m]];
                if (!z) {
                    z = {};
                    d++;
                    y[m] = d;
                    s[d] = z
                }
                return z
            }

            function r(B, y, A) {
                if (!y) {
                    y = q
                }
                if (i) {
                    return y.createElement(B)
                }
                if (!A) {
                    A = u(y)
                }
                var z;
                if (A.cache[B]) {
                    z = A.cache[B].cloneNode()
                } else {
                    if (g.test(B)) {
                        z = (A.cache[B] = A.createElem(B)).cloneNode()
                    } else {
                        z = A.createElem(B)
                    }
                }
                return z.canHaveChildren && !l.test(B) && !z.tagUrn ? A.frag.appendChild(z) : z
            }

            function w(A, C) {
                if (!A) {
                    A = q
                }
                if (i) {
                    return A.createDocumentFragment()
                }
                C = C || u(A);
                var D = C.frag.cloneNode(),
                    B = 0,
                    z = p(),
                    y = z.length;
                for (; B < y; B++) {
                    D.createElement(z[B])
                }
                return D
            }

            function x(y, z) {
                if (!z.cache) {
                    z.cache = {};
                    z.createElem = y.createElement;
                    z.createFrag = y.createDocumentFragment;
                    z.frag = z.createFrag()
                }
                y.createElement = function(A) {
                    if (!n.shivMethods) {
                        return z.createElem(A)
                    }
                    return r(A, y, z)
                };
                y.createDocumentFragment = Function("h,f", "return function(){var n=f.cloneNode(),c=n.createElement;h.shivMethods&&(" + p().join().replace(/[\w\-:]+/g, function(A) {
                    z.createElem(A);
                    z.frag.createElement(A);
                    return 'c("' + A + '")'
                }) + ");return n}")(n, z.frag)
            }

            function f(y) {
                if (!y) {
                    y = q
                }
                var z = u(y);
                if (n.shivCSS && !v && !z.hasCSS) {
                    z.hasCSS = !!j(y, "article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}mark{background:#FF0;color:#000}template{display:none}")
                }
                if (!i) {
                    x(y, z)
                }
                return y
            }
            var n = {
                elements: h.elements || "abbr article aside audio bdi canvas data datalist details dialog figcaption figure footer header hgroup main mark meter nav output picture progress section summary template time video",
                version: k,
                shivCSS: (h.shivCSS !== false),
                supportsUnknownElements: i,
                shivMethods: (h.shivMethods !== false),
                type: "default",
                shivDocument: f,
                createElement: r,
                createDocumentFragment: w,
                addElements: t
            };
            o.html5 = n;
            f(q);
            if (typeof c == "object" && c.exports) {
                c.exports = n
            }
        }(typeof window !== "undefined" ? window : this, document))
    }, {}],
    73: [function(b, c, a) {
        b("./Array/isArray");
        b("./Array/prototype.every");
        b("./Array/prototype.filter");
        b("./Array/prototype.forEach");
        b("./Array/prototype.indexOf");
        b("./Array/prototype.lastIndexOf");
        b("./Array/prototype.map");
        b("./Array/prototype.reduce");
        b("./Array/prototype.reduceRight");
        b("./Array/prototype.slice");
        b("./Array/prototype.some")
    }, {
        "./Array/isArray": 74,
        "./Array/prototype.every": 75,
        "./Array/prototype.filter": 76,
        "./Array/prototype.forEach": 77,
        "./Array/prototype.indexOf": 78,
        "./Array/prototype.lastIndexOf": 79,
        "./Array/prototype.map": 80,
        "./Array/prototype.reduce": 81,
        "./Array/prototype.reduceRight": 82,
        "./Array/prototype.slice": 83,
        "./Array/prototype.some": 84
    }],
    74: [function(b, c, a) {
        if (!Array.isArray) {
            Array.isArray = function(d) {
                return Object.prototype.toString.call(d) === "[object Array]"
            }
        }
    }, {}],
    75: [function(b, c, a) {
        if (!Array.prototype.every) {
            Array.prototype.every = function d(k, j) {
                var h = Object(this);
                var f = h.length >>> 0;
                var g;
                if (typeof k !== "function") {
                    throw new TypeError(k + " is not a function")
                }
                for (g = 0; g < f; g += 1) {
                    if (g in h && !k.call(j, h[g], g, h)) {
                        return false
                    }
                }
                return true
            }
        }
    }, {}],
    76: [function(b, c, a) {
        arguments[4][57][0].apply(a, arguments)
    }, {
        dup: 57
    }],
    77: [function(b, c, a) {
        arguments[4][58][0].apply(a, arguments)
    }, {
        dup: 58
    }],
    78: [function(b, c, a) {
        if (!Array.prototype.indexOf) {
            Array.prototype.indexOf = function d(g, h) {
                var i = h || 0;
                var f = 0;
                if (i < 0) {
                    i = this.length + h - 1;
                    if (i < 0) {
                        throw "Wrapped past beginning of array while looking up a negative start index."
                    }
                }
                for (f = 0; f < this.length; f++) {
                    if (this[f] === g) {
                        return f
                    }
                }
                return (-1)
            }
        }
    }, {}],
    79: [function(c, d, b) {
        if (!Array.prototype.lastIndexOf) {
            Array.prototype.lastIndexOf = function a(k, j) {
                var g = Object(this);
                var f = g.length >>> 0;
                var h;
                j = parseInt(j, 10);
                if (f <= 0) {
                    return -1
                }
                h = (typeof j === "number") ? Math.min(f - 1, j) : f - 1;
                h = h >= 0 ? h : f - Math.abs(h);
                for (; h >= 0; h -= 1) {
                    if (h in g && k === g[h]) {
                        return h
                    }
                }
                return -1
            }
        }
    }, {}],
    80: [function(b, c, a) {
        if (!Array.prototype.map) {
            Array.prototype.map = function d(l, k) {
                var h = Object(this);
                var g = h.length >>> 0;
                var j;
                var f = new Array(g);
                if (typeof l !== "function") {
                    throw new TypeError(l + " is not a function")
                }
                for (j = 0; j < g; j += 1) {
                    if (j in h) {
                        f[j] = l.call(k, h[j], j, h)
                    }
                }
                return f
            }
        }
    }, {}],
    81: [function(b, c, a) {
        if (!Array.prototype.reduce) {
            Array.prototype.reduce = function d(l, h) {
                var j = Object(this);
                var g = j.length >>> 0;
                var k = 0;
                var f;
                if (typeof l !== "function") {
                    throw new TypeError(l + " is not a function")
                }
                if (typeof h === "undefined") {
                    if (!g) {
                        throw new TypeError("Reduce of empty array with no initial value")
                    }
                    f = j[0];
                    k = 1
                } else {
                    f = h
                }
                while (k < g) {
                    if (k in j) {
                        f = l.call(undefined, f, j[k], k, j);
                        k += 1
                    }
                }
                return f
            }
        }
    }, {}],
    82: [function(c, d, b) {
        if (!Array.prototype.reduceRight) {
            Array.prototype.reduceRight = function a(l, h) {
                var j = Object(this);
                var g = j.length >>> 0;
                var k = g - 1;
                var f;
                if (typeof l !== "function") {
                    throw new TypeError(l + " is not a function")
                }
                if (h === undefined) {
                    if (!g) {
                        throw new TypeError("Reduce of empty array with no initial value")
                    }
                    f = j[g - 1];
                    k = g - 2
                } else {
                    f = h
                }
                while (k >= 0) {
                    if (k in j) {
                        f = l.call(undefined, f, j[k], k, j);
                        k -= 1
                    }
                }
                return f
            }
        }
    }, {}],
    83: [function(b, c, a) {
        arguments[4][59][0].apply(a, arguments)
    }, {
        dup: 59
    }],
    84: [function(b, c, a) {
        arguments[4][60][0].apply(a, arguments)
    }, {
        dup: 60
    }],
    85: [function(b, c, a) {
        if (document.createEvent) {
            try {
                new window.CustomEvent("click")
            } catch (d) {
                window.CustomEvent = (function() {
                    function f(h, i) {
                        i = i || {
                            bubbles: false,
                            cancelable: false,
                            detail: undefined
                        };
                        var g = document.createEvent("CustomEvent");
                        g.initCustomEvent(h, i.bubbles, i.cancelable, i.detail);
                        return g
                    }
                    f.prototype = window.Event.prototype;
                    return f
                }())
            }
        }
    }, {}],
    86: [function(b, c, a) {
        b("./Date/now");
        b("./Date/prototype.toISOString");
        b("./Date/prototype.toJSON")
    }, {
        "./Date/now": 87,
        "./Date/prototype.toISOString": 88,
        "./Date/prototype.toJSON": 89
    }],
    87: [function(c, d, a) {
        if (!Date.now) {
            Date.now = function b() {
                return new Date().getTime()
            }
        }
    }, {}],
    88: [function(b, d, a) {
        if (!Date.prototype.toISOString) {
            Date.prototype.toISOString = function c() {
                if (!isFinite(this)) {
                    throw new RangeError("Date.prototype.toISOString called on non-finite value.")
                }
                var g = {
                    year: this.getUTCFullYear(),
                    month: this.getUTCMonth() + 1,
                    day: this.getUTCDate(),
                    hours: this.getUTCHours(),
                    minutes: this.getUTCMinutes(),
                    seconds: this.getUTCSeconds(),
                    mseconds: (this.getUTCMilliseconds() / 1000).toFixed(3).substr(2, 3)
                };
                var h;
                var f;
                for (h in g) {
                    if (g.hasOwnProperty(h) && h !== "year" && h !== "mseconds") {
                        g[h] = String(g[h]).length === 1 ? "0" + String(g[h]) : String(g[h])
                    }
                }
                if (g.year < 0 || g.year > 9999) {
                    f = g.year < 0 ? "-" : "+";
                    g.year = f + String(Math.abs(g.year / 1000000)).substr(2, 6)
                }
                return g.year + "-" + g.month + "-" + g.day + "T" + g.hours + ":" + g.minutes + ":" + g.seconds + "." + g.mseconds + "Z"
            }
        }
    }, {}],
    89: [function(b, c, a) {
        if (!Date.prototype.toJSON) {
            Date.prototype.toJSON = function(h) {
                var i = Object(this);
                var d;
                var g = function(j) {
                    var l = typeof j;
                    var k = [null, "undefined", "boolean", "string", "number"].some(function(m) {
                        return m === l
                    });
                    if (k) {
                        return true
                    }
                    return false
                };
                var f = function(j) {
                    var k;
                    if (g(j)) {
                        return j
                    }
                    k = (typeof j.valueOf === "function") ? j.valueOf() : (typeof j.toString === "function") ? j.toString() : null;
                    if (k && g(k)) {
                        return k
                    }
                    throw new TypeError(j + " cannot be converted to a primitive")
                };
                d = f(i);
                if (typeof d === "number" && !isFinite(d)) {
                    return null
                }
                if (typeof i.toISOString !== "function") {
                    throw new TypeError("toISOString is not callable")
                }
                return i.toISOString.call(i)
            }
        }
    }, {}],
    90: [function(b, c, a) {
        b("./Element/prototype.classList")
    }, {
        "./Element/prototype.classList": 91
    }],
    91: [function(b, c, a) {
        arguments[4][61][0].apply(a, arguments)
    }, {
        dup: 61
    }],
    92: [function(b, c, a) {
        b("./Function/prototype.bind")
    }, {
        "./Function/prototype.bind": 93
    }],
    93: [function(b, c, a) {
        if (!Function.prototype.bind) {
            Function.prototype.bind = function(d) {
                if (typeof this !== "function") {
                    throw new TypeError("Function.prototype.bind - what is trying to be bound is not callable")
                }
                var i = Array.prototype.slice.call(arguments, 1);
                var h = this;
                var f = function() {};
                var g = function() {
                    return h.apply((this instanceof f && d) ? this : d, i.concat(Array.prototype.slice.call(arguments)))
                };
                f.prototype = this.prototype;
                g.prototype = new f();
                return g
            }
        }
    }, {}],
    94: [function(require, module, exports) {
        if (typeof JSON !== "object") {
            JSON = {}
        }(function() {
            function f(n) {
                return n < 10 ? "0" + n : n
            }
            if (typeof Date.prototype.toJSON !== "function") {
                Date.prototype.toJSON = function() {
                    return isFinite(this.valueOf()) ? this.getUTCFullYear() + "-" + f(this.getUTCMonth() + 1) + "-" + f(this.getUTCDate()) + "T" + f(this.getUTCHours()) + ":" + f(this.getUTCMinutes()) + ":" + f(this.getUTCSeconds()) + "Z" : null
                };
                String.prototype.toJSON = Number.prototype.toJSON = Boolean.prototype.toJSON = function() {
                    return this.valueOf()
                }
            }
            var cx, escapable, gap, indent, meta, rep;

            function quote(string) {
                escapable.lastIndex = 0;
                return escapable.test(string) ? '"' + string.replace(escapable, function(a) {
                    var c = meta[a];
                    return typeof c === "string" ? c : "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4)
                }) + '"' : '"' + string + '"'
            }

            function str(key, holder) {
                var i, k, v, length, mind = gap,
                    partial, value = holder[key];
                if (value && typeof value === "object" && typeof value.toJSON === "function") {
                    value = value.toJSON(key)
                }
                if (typeof rep === "function") {
                    value = rep.call(holder, key, value)
                }
                switch (typeof value) {
                    case "string":
                        return quote(value);
                    case "number":
                        return isFinite(value) ? String(value) : "null";
                    case "boolean":
                    case "null":
                        return String(value);
                    case "object":
                        if (!value) {
                            return "null"
                        }
                        gap += indent;
                        partial = [];
                        if (Object.prototype.toString.apply(value) === "[object Array]") {
                            length = value.length;
                            for (i = 0; i < length; i += 1) {
                                partial[i] = str(i, value) || "null"
                            }
                            v = partial.length === 0 ? "[]" : gap ? "[\n" + gap + partial.join(",\n" + gap) + "\n" + mind + "]" : "[" + partial.join(",") + "]";
                            gap = mind;
                            return v
                        }
                        if (rep && typeof rep === "object") {
                            length = rep.length;
                            for (i = 0; i < length; i += 1) {
                                if (typeof rep[i] === "string") {
                                    k = rep[i];
                                    v = str(k, value);
                                    if (v) {
                                        partial.push(quote(k) + (gap ? ": " : ":") + v)
                                    }
                                }
                            }
                        } else {
                            for (k in value) {
                                if (Object.prototype.hasOwnProperty.call(value, k)) {
                                    v = str(k, value);
                                    if (v) {
                                        partial.push(quote(k) + (gap ? ": " : ":") + v)
                                    }
                                }
                            }
                        }
                        v = partial.length === 0 ? "{}" : gap ? "{\n" + gap + partial.join(",\n" + gap) + "\n" + mind + "}" : "{" + partial.join(",") + "}";
                        gap = mind;
                        return v
                }
            }
            if (typeof JSON.stringify !== "function") {
                escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g;
                meta = {
                    "\b": "\\b",
                    "\t": "\\t",
                    "\n": "\\n",
                    "\f": "\\f",
                    "\r": "\\r",
                    '"': '\\"',
                    "\\": "\\\\"
                };
                JSON.stringify = function(value, replacer, space) {
                    var i;
                    gap = "";
                    indent = "";
                    if (typeof space === "number") {
                        for (i = 0; i < space; i += 1) {
                            indent += " "
                        }
                    } else {
                        if (typeof space === "string") {
                            indent = space
                        }
                    }
                    rep = replacer;
                    if (replacer && typeof replacer !== "function" && (typeof replacer !== "object" || typeof replacer.length !== "number")) {
                        throw new Error("JSON.stringify")
                    }
                    return str("", {
                        "": value
                    })
                }
            }
            if (typeof JSON.parse !== "function") {
                cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g;
                JSON.parse = function(text, reviver) {
                    var j;

                    function walk(holder, key) {
                        var k, v, value = holder[key];
                        if (value && typeof value === "object") {
                            for (k in value) {
                                if (Object.prototype.hasOwnProperty.call(value, k)) {
                                    v = walk(value, k);
                                    if (v !== undefined) {
                                        value[k] = v
                                    } else {
                                        delete value[k]
                                    }
                                }
                            }
                        }
                        return reviver.call(holder, key, value)
                    }
                    text = String(text);
                    cx.lastIndex = 0;
                    if (cx.test(text)) {
                        text = text.replace(cx, function(a) {
                            return "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4)
                        })
                    }
                    if (/^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]").replace(/(?:^|:|,)(?:\s*\[)+/g, ""))) {
                        j = eval("(" + text + ")");
                        return typeof reviver === "function" ? walk({
                            "": j
                        }, "") : j
                    }
                    throw new SyntaxError("JSON.parse")
                }
            }
        }())
    }, {}],
    95: [function(b, c, a) {
        b("./Object/assign");
        b("./Object/create");
        b("./Object/is");
        b("./Object/keys")
    }, {
        "./Object/assign": 96,
        "./Object/create": 97,
        "./Object/is": 98,
        "./Object/keys": 99
    }],
    96: [function(c, d, b) {
        var g = navigator.userAgent.toLowerCase();
        var h = (g.indexOf("msie") > -1) ? parseInt(g.split("msie")[1]) : false;
        var a = h < 9;
        if (!Object.assign) {
            if (!Object.keys) {
                Object.keys = function f(j) {
                    var i = [];
                    var k;
                    if ((!j) || (typeof j.hasOwnProperty !== "function")) {
                        throw "Object.keys called on non-object."
                    }
                    for (k in j) {
                        if (j.hasOwnProperty(k)) {
                            i.push(k)
                        }
                    }
                    return i
                }
            }
            if (!a && Object.defineProperty) {
                if (!Object.assign) {
                    Object.defineProperty(Object, "assign", {
                        enumerable: false,
                        configurable: true,
                        writable: true,
                        value: function(t, j) {
                            if (t === undefined || t === null) {
                                throw new TypeError("Cannot convert first argument to object")
                            }
                            var v = Object(t);
                            var r = false;
                            var k;
                            for (var l = 1; l < arguments.length; l++) {
                                var o = arguments[l];
                                if (o === undefined || o === null) {
                                    continue
                                }
                                var n = Object.keys(Object(o));
                                for (var m = 0, q = n.length; m < q; m++) {
                                    var u = n[m];
                                    try {
                                        var p = Object.getOwnPropertyDescriptor(o, u);
                                        if (p !== undefined && p.enumerable) {
                                            v[u] = o[u]
                                        }
                                    } catch (s) {
                                        if (!r) {
                                            r = true;
                                            k = s
                                        }
                                    }
                                }
                                if (r) {
                                    throw k
                                }
                            }
                            return v
                        }
                    })
                }
            } else {
                Object.assign = function() {
                    for (var k = 1; k < arguments.length; k++) {
                        for (var j in arguments[k]) {
                            if (arguments[k].hasOwnProperty(j)) {
                                arguments[0][j] = arguments[k][j]
                            }
                        }
                    }
                    return arguments[0]
                }
            }
        }
    }, {}],
    97: [function(b, c, a) {
        if (!Object.create) {
            var d = function() {};
            Object.create = function(f) {
                if (arguments.length > 1) {
                    throw new Error("Second argument not supported")
                }
                if (f === null || typeof f !== "object") {
                    throw new TypeError("Object prototype may only be an Object.")
                }
                d.prototype = f;
                return new d()
            }
        }
    }, {}],
    98: [function(b, c, a) {
        if (!Object.is) {
            Object.is = function(f, d) {
                if (f === 0 && d === 0) {
                    return 1 / f === 1 / d
                }
                if (f !== f) {
                    return d !== d
                }
                return f === d
            }
        }
    }, {}],
    99: [function(b, c, a) {
        if (!Object.keys) {
            Object.keys = function d(g) {
                var f = [];
                var h;
                if ((!g) || (typeof g.hasOwnProperty !== "function")) {
                    throw "Object.keys called on non-object."
                }
                for (h in g) {
                    if (g.hasOwnProperty(h)) {
                        f.push(h)
                    }
                }
                return f
            }
        }
    }, {}],
    100: [function(b, c, a) {
        c.exports = b("es6-promise").polyfill()
    }, {
        "es6-promise": 62
    }],
    101: [function(b, c, a) {
        b("./String/prototype.trim")
    }, {
        "./String/prototype.trim": 102
    }],
    102: [function(c, d, b) {
        if (!String.prototype.trim) {
            String.prototype.trim = function a() {
                return this.replace(/^\s+|\s+$/g, "")
            }
        }
    }, {}],
    103: [function(b, c, a) {
        window.XMLHttpRequest = window.XMLHttpRequest || function() {
            var f;
            try {
                f = new ActiveXObject("Msxml2.XMLHTTP")
            } catch (d) {
                try {
                    f = new ActiveXObject("Microsoft.XMLHTTP")
                } catch (d) {
                    f = false
                }
            }
            return f
        }
    }, {}],
    104: [function(b, c, a) {
        b("./Array");
        b("./console.log");
        b("./CustomEvent");
        b("./Date");
        b("./Element");
        b("./Function");
        b("./getComputedStyle");
        b("./html5shiv");
        b("./JSON");
        b("./matchMedia");
        b("./Object");
        b("./Promise");
        b("./requestAnimationFrame");
        b("./String");
        b("./XMLHttpRequest")
    }, {
        "./Array": 73,
        "./CustomEvent": 85,
        "./Date": 86,
        "./Element": 90,
        "./Function": 92,
        "./JSON": 94,
        "./Object": 95,
        "./Promise": 100,
        "./String": 101,
        "./XMLHttpRequest": 103,
        "./console.log": 105,
        "./getComputedStyle": 106,
        "./html5shiv": 107,
        "./matchMedia": 108,
        "./requestAnimationFrame": 109
    }],
    105: [function(b, c, a) {
        (function(d) {
            var k, j;
            var h = {};
            var i = function() {};
            var g = "memory".split(",");
            var f = ("assert,clear,count,debug,dir,dirxml,error,exception,group,groupCollapsed,groupEnd,info,log,markTimeline,profile,profiles,profileEnd,show,table,time,timeEnd,timeline,timelineEnd,timeStamp,trace,warn").split(",");
            while (k = g.pop()) {
                d[k] = d[k] || h
            }
            while (j = f.pop()) {
                d[j] = d[j] || i
            }
        })(this.console = this.console || {})
    }, {}],
    106: [function(d, f, c) {
        if (!window.getComputedStyle) {
            function g(j, m, l) {
                j.document;
                var k = j.currentStyle[m].match(/([\d\.]+)(%|cm|em|in|mm|pc|pt|)/) || [0, 0, ""],
                    i = k[1],
                    n = k[2],
                    h;
                l = !l ? l : /%|em/.test(n) && j.parentElement ? g(j.parentElement, "fontSize", null) : 16;
                h = m == "fontSize" ? l : /width/i.test(m) ? j.clientWidth : j.clientHeight;
                return n == "%" ? i / 100 * h : n == "cm" ? i * 0.3937 * 96 : n == "em" ? i * l : n == "in" ? i * 96 : n == "mm" ? i * 0.3937 * 96 / 10 : n == "pc" ? i * 12 * 96 / 72 : n == "pt" ? i * 96 / 72 : i
            }

            function b(k, n) {
                var o = n == "border" ? "Width" : "",
                    j = n + "Top" + o,
                    m = n + "Right" + o,
                    h = n + "Bottom" + o,
                    i = n + "Left" + o;
                k[n] = (k[j] == k[m] && k[j] == k[h] && k[j] == k[i] ? [k[j]] : k[j] == k[h] && k[i] == k[m] ? [k[j], k[m]] : k[i] == k[m] ? [k[j], k[m], k[h]] : [k[j], k[m], k[h], k[i]]).join(" ")
            }

            function a(k) {
                var l = this,
                    j = k.currentStyle,
                    n = g(k, "fontSize"),
                    h = function(o) {
                        return "-" + o.toLowerCase()
                    },
                    m;
                for (m in j) {
                    Array.prototype.push.call(l, m == "styleFloat" ? "float" : m.replace(/[A-Z]/, h));
                    if (m == "width") {
                        l[m] = k.offsetWidth + "px"
                    } else {
                        if (m == "height") {
                            l[m] = k.offsetHeight + "px"
                        } else {
                            if (m == "styleFloat") {
                                l["float"] = j[m];
                                l.cssFloat = j[m]
                            } else {
                                if (/margin.|padding.|border.+W/.test(m) && l[m] != "auto") {
                                    l[m] = Math.round(g(k, m, n)) + "px"
                                } else {
                                    if (/^outline/.test(m)) {
                                        try {
                                            l[m] = j[m]
                                        } catch (i) {
                                            l.outlineColor = j.color;
                                            l.outlineStyle = l.outlineStyle || "none";
                                            l.outlineWidth = l.outlineWidth || "0px";
                                            l.outline = [l.outlineColor, l.outlineWidth, l.outlineStyle].join(" ")
                                        }
                                    } else {
                                        l[m] = j[m]
                                    }
                                }
                            }
                        }
                    }
                }
                b(l, "margin");
                b(l, "padding");
                b(l, "border");
                l.fontSize = Math.round(n) + "px"
            }
            a.prototype = {
                constructor: a,
                getPropertyPriority: function() {
                    throw new Error("NotSupportedError: DOM Exception 9")
                },
                getPropertyValue: function(h) {
                    return this[h.replace(/-\w/g, function(i) {
                        return i[1].toUpperCase()
                    })]
                },
                item: function(h) {
                    return this[h]
                },
                removeProperty: function() {
                    throw new Error("NoModificationAllowedError: DOM Exception 7")
                },
                setProperty: function() {
                    throw new Error("NoModificationAllowedError: DOM Exception 7")
                },
                getPropertyCSSValue: function() {
                    throw new Error("NotSupportedError: DOM Exception 9")
                }
            };
            window.getComputedStyle = function(h) {
                return new a(h)
            }
        }
    }, {}],
    107: [function(b, c, a) {
        b("http://images.apple.com/v/music/b/scripts/html5shiv/src/html5shiv.js")
    }, {
        "http://images.apple.com/v/music/b/scripts/html5shiv/src/html5shiv.js": 72
    }],
    108: [function(b, c, a) {
        window.matchMedia = window.matchMedia || (function(i, j) {
            var g, d = i.documentElement,
                f = d.firstElementChild || d.firstChild,
                h = i.createElement("body"),
                k = i.createElement("div");
            k.id = "mq-test-1";
            k.style.cssText = "position:absolute;top:-100em";
            h.style.background = "none";
            h.appendChild(k);
            return function(l) {
                k.innerHTML = '&shy;<style media="' + l + '"> #mq-test-1 { width:42px; }</style>';
                d.insertBefore(h, f);
                g = k.offsetWidth === 42;
                d.removeChild(h);
                return {
                    matches: g,
                    media: l
                }
            }
        }(document))
    }, {}],
    109: [function(b, c, a) {
        (function() {
            var f = 0;
            var g = ["ms", "moz", "webkit", "o"];
            for (var d = 0; d < g.length && !window.requestAnimationFrame; ++d) {
                window.requestAnimationFrame = window[g[d] + "RequestAnimationFrame"];
                window.cancelAnimationFrame = window[g[d] + "CancelAnimationFrame"] || window[g[d] + "CancelRequestAnimationFrame"]
            }
            if (!window.requestAnimationFrame) {
                window.requestAnimationFrame = function(l, i) {
                    var h = Date.now();
                    var j = Math.max(0, 16 - (h - f));
                    var k = window.setTimeout(function() {
                        l(h + j)
                    }, j);
                    f = h + j;
                    return k
                }
            }
            if (!window.cancelAnimationFrame) {
                window.cancelAnimationFrame = function(h) {
                    clearTimeout(h)
                }
            }
        }())
    }, {}],
    110: [function(c, d, b) {
        var h = d.exports = {};
        var a = [];
        var i = false;

        function g() {
            if (i) {
                return
            }
            i = true;
            var l;
            var j = a.length;
            while (j) {
                l = a;
                a = [];
                var k = -1;
                while (++k < j) {
                    l[k]()
                }
                j = a.length
            }
            i = false
        }
        h.nextTick = function(j) {
            a.push(j);
            if (!i) {
                setTimeout(g, 0)
            }
        };
        h.title = "browser";
        h.browser = true;
        h.env = {};
        h.argv = [];
        h.version = "";
        h.versions = {};

        function f() {}
        h.on = f;
        h.addListener = f;
        h.once = f;
        h.off = f;
        h.removeListener = f;
        h.removeAllListeners = f;
        h.emit = f;
        h.binding = function(j) {
            throw new Error("process.binding is not supported")
        };
        h.cwd = function() {
            return "/"
        };
        h.chdir = function(j) {
            throw new Error("process.chdir is not supported")
        };
        h.umask = function() {
            return 0
        }
    }, {}],
    111: [function(b, c, a) {
        var d = (function() {
            var h = ["", "-webkit-", "-moz-", "-o-", "-ms-"];
            var f = {
                "animation-delay": "transitionend",
                "-o-animation-delay": "oTransitionEnd",
                "-moz-animation-delay": "transitionend",
                "-webkit-animation-delay": "webkitTransitionEnd",
                "-ms-animation-delay": "transitionend"
            };
            var l = {
                "animation-delay": "animationstart",
                "-o-animation-delay": "oanimationstart",
                "-moz-animation-delay": "animationstart",
                "-webkit-animation-delay": "webkitAnimationStart",
                "-ms-animation-delay": "MSAnimationStart"
            };
            var i = {
                "animation-delay": "animationiteration",
                "-o-animation-delay": "oanimationiteration",
                "-moz-animation-delay": "animationiteration",
                "-webkit-animation-delay": "webkitAnimationIteration",
                "-ms-animation-delay": "MSAnimationIteration"
            };
            var p = {
                "animation-delay": "animationend",
                "-o-animation-delay": "oanimationend",
                "-moz-animation-delay": "animationend",
                "-webkit-animation-delay": "webkitAnimationEnd",
                "-ms-animation-delay": "MSAnimationEnd"
            };
            var o = {
                "animation-delay": "animation-play-state",
                "-o-animation-delay": "-o-animation-play-state",
                "-moz-animation-delay": "animation-play-state",
                "-webkit-animation-delay": "-webkit-animation-play-state",
                "-ms-animation-delay": "animation-play-state"
            };
            var g = document.createElement("_");
            var j = ["", "-webkit-", "-moz-", "-o-", "-ms-"];

            function n(s) {
                for (var q = 0; q < j.length; q++) {
                    var r = h[q] + s;
                    if (g.style[r] !== undefined) {
                        return r
                    }
                }
                return undefined
            }
            var m = ["-webkit-", "", "-moz-", "-o-", "-ms-"];

            function k(s) {
                for (var q = 0; q < m.length; q++) {
                    var r = m[q] + s;
                    if (g.style[r] !== undefined) {
                        return r
                    }
                }
                return undefined
            }
            return {
                transition: n("transition"),
                filter: k("filter"),
                transform: n("transform"),
                transitionDelay: n("transition-delay"),
                animationDelay: n("animation-delay"),
                transitionEnd: f[n("animation-delay")],
                animationStart: l[n("animation-delay")],
                animationIteration: i[n("animation-delay")],
                animationEnd: p[n("animation-delay")],
                animationPlayState: o[n("animation-delay")]
            }
        }());
        c.exports = d
    }, {}],
    112: [function(c, d, b) {
        var h = c("ac-headjs");
        var a = c("ac-feature");
        var i = c("ac-browser");
        var g = c("../_shared/utils/browserPrefixed");
        window.Int8Array = window.Int8Array || Array;
        window.Uint8Array = window.Uint8Array || Array;
        window.Uint8ClampedArray = window.Uint8ClampedArray || Array;
        window.Int16Array = window.Int16Array || Array;
        window.Uint16Array = window.Uint16Array || Array;
        window.Int32Array = window.Int32Array || Array;
        window.Uint32Array = window.Uint32Array || Array;
        window.Float32Array = window.Float32Array || Array;
        window.Float64Array = window.Float64Array || Array;
        var f = (function() {
            return {
                initialize: function() {
                    h.htmlClass();
                    new h.FeatureDetect(document.documentElement, {
                        webgl: a.webGLAvailable,
                        video: this.canPlayVideo,
                        canvas: this.supportsCanvas,
                        cssFilter: this.supportsCSSFilter,
                        cssObjectFit: this.supportsCSSObjectFit,
                        cssAnimation: this.supportsKeyframeAnimation,
                        positionFixed: this.supportsPositionFixed,
                        pageJump: this.supportsPageJump
                    }).htmlClass();
                    return this
                },
                returnFalse: function() {
                    return false
                },
                supportsCSSFilter: function() {
                    var m = document.createElement("_");
                    var k = ["-webkit-", "", "-moz-", "-o-", "-ms-"];
                    var j = false;
                    for (var l = 0; l < k.length; l++) {
                        var n = k[l] + "filter";
                        if (m.style[n] !== undefined) {
                            j = true
                        }
                    }
                    if (i.name == "Firefox") {
                        j = false
                    }
                    if (i.name == "IE") {
                        j = false
                    }
                    if (i.os == "iOS" && Math.abs(i.osVersion) < 8) {
                        j = false
                    }
                    return j
                },
                canPlayVideo: function() {
                    try {
                        var j = document.createElement("VIDEO");
                        if (j.canPlayType && j.canPlayType("video/mp4").replace(/no/, " ")) {
                            return true
                        }
                    } catch (k) {}
                    return false
                },
                supportsCSSObjectFit: function() {
                    return a.cssPropertyAvailable("object-fit", "cover")
                },
                supportsPositionFixed: function() {
                    if (i.name == "Firefox") {
                        return false
                    }
                    if (i.name == "IE") {
                        return false
                    }
                    if (i.os == "iOS" && i.version < 7) {
                        return false
                    }
                    return true
                },
                supportsKeyframeAnimation: function() {
                    return !!g.animationEnd
                },
                supportsPageJump: function() {
                    if (i.name == "IE") {
                        return false
                    }
                    var j = navigator.userAgent;
                    if ((j.indexOf("Android 2.") !== -1 || (j.indexOf("Android 4.0") !== -1)) && j.indexOf("Mobile Safari") !== -1 && j.indexOf("Chrome") === -1 && j.indexOf("Windows Phone") === -1) {
                        return false
                    }
                    return (window.history && "pushState" in window.history)
                },
                supportsCanvas: function() {
                    var j = a.canvasAvailable;
                    if (i.os == "iOS" && i.version < 7) {
                        return false
                    }
                    return j
                }
            }
        }());
        d.exports = f.initialize()
    }, {
        "../_shared/utils/browserPrefixed": 111,
        "ac-browser": 4,
        "ac-feature": 20,
        "ac-headjs": 51
    }]
}, {}, [112]);

require = (function e(t, n, r) {
    function s(o, u) {
        if (!n[o]) {
            if (!t[o]) {
                var a = typeof require == "function" && require;
                if (!u && a) return a(o, !0);
                if (i) return i(o, !0);
                throw new Error("Cannot find module '" + o + "'")
            }
            var f = n[o] = {
                exports: {}
            };
            t[o][0].call(f.exports, function(e) {
                var n = t[o][1][e];
                return s(n ? n : e)
            }, f, f.exports, e, t, n, r)
        }
        return n[o].exports
    }
    var i = typeof require == "function" && require;
    for (var o = 0; o < r.length; o++) s(r[o]);
    return s
})({
    1: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        require('@marcom/ac-polyfills/Array/isArray');
        require('@marcom/ac-polyfills/Array/prototype.forEach');

        /**
         * @name module:ac-array.flatten
         *
         * @function
         *
         * @desc Take a multi-dimensional array and flatten it into a single level.
         *
         * @param {Array} array
         *        Take a multi-dimensional array and flatten it into a single level
         *
         * @returns {Array} Flattened array.
         */
        module.exports = function flatten(array) {
            var flattenedArray = [];
            var callback = function(item) {
                if (Array.isArray(item)) {
                    item.forEach(callback);
                } else {
                    flattenedArray.push(item);
                }
            };
            array.forEach(callback);
            return flattenedArray;
        };

        // ac-array@1.2.0

    }, {
        "@marcom/ac-polyfills/Array/isArray": 128,
        "@marcom/ac-polyfills/Array/prototype.forEach": 130
    }],
    2: [function(require, module, exports) {
        /** 
         * @module ac-array
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        module.exports = {
            flatten: require('./flatten'),
            intersection: require('./intersection'),
            shuffle: require('./shuffle'),
            toArray: require('./toArray'),
            union: require('./union'),
            unique: require('./unique'),
            without: require('./without')
        };

        // ac-array@1.2.0

    }, {
        "./flatten": 1,
        "./intersection": 3,
        "./shuffle": 4,
        "./toArray": 5,
        "./union": 6,
        "./unique": 7,
        "./without": 8
    }],
    3: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        require('@marcom/ac-polyfills/Array/prototype.indexOf');

        /**
         * @name module:ac-array.intersection
         *
         * @function
         *
         * @desc Produce an array that contains every item shared between all the passed-in arrays.
         *       Based on: https://github.com/jashkenas/underscore/blob/master/underscore.js#L525
         *
         * @param {...Array} array
         *        Any number of arrays
         *
         * @returns {Array} An empty array if no matches or an array containing all matches.
         */
        module.exports = function intersection(array) {
            // If nothing was passed return an empty array
            if (!array) {
                return [];
            }
            var argsLength = arguments.length;
            var i = 0;
            var len = array.length;
            var result = [];
            var item;

            for (i; i < len; i++) {
                item = array[i];

                // If item has already been pushed continue on to the next iteration
                if (result.indexOf(item) > -1) {
                    continue;
                }

                // If the item does not exist in the arguments index break;
                for (var j = 1; j < argsLength; j++) {
                    if (arguments[j].indexOf(item) < 0) {
                        break;
                    }
                }

                // If all arguments have been matched push the item into the result
                if (j === argsLength) {
                    result.push(item);
                }
            }

            return result;
        };

        // ac-array@1.2.0

    }, {
        "@marcom/ac-polyfills/Array/prototype.indexOf": 131
    }],
    4: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /**
         * @name module:ac-array.shuffle
         *
         * @function
         *
         * @desc Shuffle the elements in an array using the Fisher–Yates/Knuth algorithm
         *
         * @see {@link http://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle|Fisher-Yates shuffle - Wikipedia, the free encyclopedia}
         *
         * @param {Array} array
         *
         * @returns {Array} original array with shuffled elements
         *
         */
        module.exports = function shuffle(array) {
            var len = array.length;
            var index;
            var temp;

            while (len) {
                index = Math.floor(Math.random() * len--);
                temp = array[len];
                array[len] = array[index];
                array[index] = temp;
            }

            return array;
        };

        // ac-array@1.2.0

    }, {}],
    5: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        require('@marcom/ac-polyfills/Array/prototype.slice');

        /**
         * @name module:ac-array.toArray
         *
         * @function
         *
         * @desc Take an Array-like object and convert it to an actual Array.
         *
         * @param {Object} arrayLike
         *        Take an Array-like object and convert it to an actual Array
         *        (for instance a NodeList)
         *
         * @returns {Array} Generated array from object.
         */
        module.exports = function toArray(arrayLike) {
            return Array.prototype.slice.call(arrayLike);
        };

        // ac-array@1.2.0

    }, {
        "@marcom/ac-polyfills/Array/prototype.slice": 133
    }],
    6: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var flatten = require('./flatten');
        var toArray = require('./toArray');
        var unique = require('./unique');

        /**
         * @name module:ac-array.union
         *
         * @function
         *
         * @desc Creates a union of unique values of the provided arrays.
         *
         * @param {...Array} array
         *        The array(s) to create a union of
         *
         * @returns {Array} An array containing the union of the provided arrays.
         */
        module.exports = function union(array) {
            return unique(flatten(toArray(arguments)));
        };

        // ac-array@1.2.0

    }, {
        "./flatten": 1,
        "./toArray": 5,
        "./unique": 7
    }],
    7: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        require('@marcom/ac-polyfills/Array/prototype.indexOf');
        require('@marcom/ac-polyfills/Array/prototype.reduce');

        /**
         * @name module:ac-array.unique
         *
         * @function
         *
         * @desc Takes an array containing duplicates and returns a new
         *       array containing only unique values.
         *
         * @param {Array} array
         *        An array containing duplicate values
         *
         * @returns {Array} An array containing only unique values.
         */
        module.exports = function unique(array) {
            var _unique = function(prev, current) {
                if (prev.indexOf(current) < 0) {
                    prev.push(current);
                }
                return prev;
            };
            return array.reduce(_unique, []);
        };

        // ac-array@1.2.0

    }, {
        "@marcom/ac-polyfills/Array/prototype.indexOf": 131,
        "@marcom/ac-polyfills/Array/prototype.reduce": 132
    }],
    8: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        require('@marcom/ac-polyfills/Array/prototype.indexOf');
        require('@marcom/ac-polyfills/Array/prototype.slice');

        /**
         * @name module:ac-array.without
         *
         * @function
         *
         * @desc Removes an entry from an array.
         *
         * @param {Array} arr
         *        Source array
         *
         * @param {*} value
         *        Entry in array to remove
         *
         * @returns {Array} A new array that is the source array without the first
         *                  instance of the value provided.
         */
        module.exports = function without(arr, value, recurse) {
            var newArr;
            var index = arr.indexOf(value);
            var length = arr.length;

            if (index >= 0) {

                // iterating through the array will be faster than calling .without() over and over
                if (recurse) {
                    // clone the arr to newArr
                    newArr = arr.slice(0, length);
                    // start at the first index and continue
                    var i,
                        amountRemoved = 0;
                    for (i = index; i < length; i++) {
                        // if the value matches, remove it from the newArr
                        if (arr[i] === value) {
                            newArr.splice(i - amountRemoved, 1);
                            // add one to the amountRemoved to handle the difference between arr and newArr
                            amountRemoved++;
                        }
                    }

                    // If it’s the last item
                } else if (index === (length - 1)) {
                    newArr = arr.slice(0, (length - 1));

                    // If it’s the first item
                } else if (index === 0) {
                    newArr = arr.slice(1);

                    // If it’s in the middle
                } else {
                    newArr = arr.slice(0, index);
                    newArr = newArr.concat(arr.slice(index + 1));
                }

            } else {
                return arr;
            }

            return newArr;
        };

        // ac-array@1.2.0

    }, {
        "@marcom/ac-polyfills/Array/prototype.indexOf": 131,
        "@marcom/ac-polyfills/Array/prototype.slice": 133
    }],
    9: [function(require, module, exports) {
        /** 
         * @module ac-console
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        module.exports = {
            log: require('./ac-console/log')
        };

        // ac-console@1.0.1

    }, {
        "./ac-console/log": 10
    }],
    10: [function(require, module, exports) {
        /** 
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        var debugMessagingKey = 'f7c9180f-5c45-47b4-8de4-428015f096c0';
        var allowDebugMessaging = !!(function() {
            try {
                return window.localStorage.getItem(debugMessagingKey);
            } catch (err) {}
        }());

        module.exports = function log() {
            if (window.console && typeof console.log !== 'undefined' && allowDebugMessaging) {
                console.log.apply(console, Array.prototype.slice.call(arguments, 0));
            }
        };

        // ac-console@1.0.1

    }, {}],
    11: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var addEventListenerUtil = require('./utils/addEventListener');
        var getEventType = require('./shared/getEventType');

        /**
         * @name module:ac-dom-events.addEventListener
         *
         * @function
         *
         * @desc Register the specified listener on a target.
         *       Automatically handles vendor prefixed and camel-cased event types.
         *
         * @param {Object} target
         *        The event target to listen to.
         *        Usually an Element, document, or window.
         *
         * @param {String} type
         *        A lowercase string representing the event type.
         *        e.g., "click", "transitionend"
         *
         * @param {Function} listener
         *        A Function to be called when the event type is triggered.
         *
         * @param {Boolean} [useCapture=false]
         *        `true` listens for the event in the capture phase.
         *        `false` (default) listens for the event in the bubbling phases.
         *        IE < 9 does not support useCapture
         *
         * @returns {Object} target
         */
        module.exports = function addEventListener(target, type, listener, useCapture) {
            type = getEventType(target, type);
            return addEventListenerUtil(target, type, listener, useCapture);
        };

        // ac-dom-events@1.4.1

    }, {
        "./shared/getEventType": 21,
        "./utils/addEventListener": 25
    }],
    12: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var dispatchEventUtil = require('./utils/dispatchEvent');
        var getEventType = require('./shared/getEventType');

        /**
         * @name module:ac-dom-events.dispatchEvent
         *
         * @function
         *
         * @desc Creates and dispatches an Event on a target.
         *       Note: custom events on `window` are not supported in IE < 9
         *
         * @param {Object} target
         *        The event target.
         *        Usually an Element, document, or window.
         *
         * @param {String} type
         *        A lowercase string representing the event type to dispatch.
         *        Automatically handles vendor prefixed and camel-cased event types.
         *
         * @param {Object} [options]
         *
         * @param {Boolean} [options.bubbles=false]
         *        Whether or not the event bubbles up through the DOM.
         *        IE < 9 ignores this options, using the `true` behavior.
         *
         * @param {Boolean} [options.cancelable=false]
         *        Whether or not the event can be cancelled.
         *        IE < 9 ignores this options, using the `false` behavior.
         *
         * @param {*} [options.detail]
         *        The data passed to event listeners.
         *
         * @returns {Object} target
         */
        module.exports = function dispatchEvent(target, type, options) {
            type = getEventType(target, type);
            return dispatchEventUtil(target, type, options);
        };

        // ac-dom-events@1.4.1

    }, {
        "./shared/getEventType": 21,
        "./utils/dispatchEvent": 26
    }],
    13: [function(require, module, exports) {
        /**
         * Helper methods for handling DOM events with cross-browser compatibility.
         * @module ac-dom-events
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        module.exports = {
            addEventListener: require('./addEventListener'),
            dispatchEvent: require('./dispatchEvent'),
            preventDefault: require('./preventDefault'),
            removeEventListener: require('./removeEventListener'),
            stop: require('./stop'),
            stopPropagation: require('./stopPropagation'),
            target: require('./target')
        };

        // ac-dom-events@1.4.1

    }, {
        "./addEventListener": 11,
        "./dispatchEvent": 12,
        "./preventDefault": 19,
        "./removeEventListener": 20,
        "./stop": 22,
        "./stopPropagation": 23,
        "./target": 24
    }],
    14: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var eventTypeAvailable = require('./utils/eventTypeAvailable');
        var camelCasedEventTypes = require('./shared/camelCasedEventTypes');
        var windowFallbackEventTypes = require('./shared/windowFallbackEventTypes');
        var prefixHelper = require('./shared/prefixHelper');
        var cache = {};

        /**
         * @name module:ac-prefixer.getEventType
         *
         * @function
         *
         * @desc Get an Event type with appropriate vendor prefix and casing.
         *
         * @param {String} type
         *        A lowercase string representing the Event type.
         *        e.g., "click", "transitionend"
         *
         * @param {String} [tagName="div"]
         *        The Element tag name to test, or "window", or "document"
         *        e.g., "div", "video", "input"
         *
         * @returns {String|Boolean} The properly prefixed Event type, or `false` if not available.
         */
        module.exports = function getEventType(type, tagName) {
            var prefixedType;
            var tagNameCache;
            var i;

            tagName = tagName || 'div';

            type = type.toLowerCase();

            // prepare cache
            if (!(tagName in cache)) {
                cache[tagName] = {};
            }

            tagNameCache = cache[tagName];

            // memoized?
            if (type in tagNameCache) {
                return tagNameCache[type];
            }

            // unprefixed?
            if (eventTypeAvailable(type, tagName)) {
                return tagNameCache[type] = type;
            }

            // camelCased vendor prefix?
            if (type in camelCasedEventTypes) {
                for (i = 0; i < camelCasedEventTypes[type].length; i++) {
                    prefixedType = camelCasedEventTypes[type][i];
                    if (eventTypeAvailable(prefixedType.toLowerCase(), tagName)) {
                        return tagNameCache[type] = prefixedType;
                    }
                }
            }

            // lowercase vendor prefix?
            for (i = 0; i < prefixHelper.evt.length; i++) {
                prefixedType = prefixHelper.evt[i] + type;
                if (eventTypeAvailable(prefixedType, tagName)) {
                    prefixHelper.reduce(i);
                    return tagNameCache[type] = prefixedType;
                }
            }

            // fallback to window for certain events
            if (tagName !== 'window' && windowFallbackEventTypes.indexOf(type)) {
                return tagNameCache[type] = getEventType(type, 'window');
            }

            // invalid event type
            return tagNameCache[type] = false;
        };

        // ac-prefixer@3.1.0

    }, {
        "./shared/camelCasedEventTypes": 15,
        "./shared/prefixHelper": 16,
        "./shared/windowFallbackEventTypes": 17,
        "./utils/eventTypeAvailable": 18
    }],
    15: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        module.exports = {
            transitionend: [
                'webkitTransitionEnd',
                'MSTransitionEnd'
            ],
            animationstart: [
                'webkitAnimationStart',
                'MSAnimationStart'
            ],
            animationend: [
                'webkitAnimationEnd',
                'MSAnimationEnd'
            ],
            animationiteration: [
                'webkitAnimationIteration',
                'MSAnimationIteration'
            ],
            fullscreenchange: [
                'MSFullscreenChange'
            ],
            fullscreenerror: [
                'MSFullscreenError'
            ]
        };

        // ac-prefixer@3.1.0

    }, {}],
    16: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        var CSS_PREFIXES = ['-webkit-', '-moz-', '-ms-'];
        var DOM_PREFIXES = ['Webkit', 'Moz', 'ms'];
        var EVT_PREFIXES = ['webkit', 'moz', 'ms'];

        var PrefixeHelper = function() {
            this.initialize();
        };

        var proto = PrefixeHelper.prototype;

        proto.initialize = function() {
            this.reduced = false;
            this.css = CSS_PREFIXES;
            this.dom = DOM_PREFIXES;
            this.evt = EVT_PREFIXES;
        };

        proto.reduce = function(index) {
            if (!this.reduced) {
                this.reduced = true;
                this.css = [this.css[index]];
                this.dom = [this.dom[index]];
                this.evt = [this.evt[index]];
            }
        };

        module.exports = new PrefixeHelper();

        // ac-prefixer@3.1.0

    }, {}],
    17: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        module.exports = [
            'transitionend',
            'animationstart',
            'animationend',
            'animationiteration',
        ];

        // ac-prefixer@3.1.0

    }, {}],
    18: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var testElements = {
            'window': window,
            'document': document
        };

        /**
         * @name eventTypeAvailable
         * @memberOf module:ac-prefixer/utils
         *
         * @function
         *
         * @desc Check if an Event type is available.
         *
         * @param {String} type
         *        A DOM-style string representing the Event type.
         *        e.g., "click", "transitionend", "webkittransitionend"
         *
         * @param {String} tagName
         *        The Element tag name to test, or "window", or "document"
         *        e.g., "div", "video", "input"
         *
         * @returns {Boolean} `true` if the Event type is available, otherwise `false`
         */
        module.exports = function eventTypeAvailable(type, tagName) {
            var el;

            type = 'on' + type;

            if (!(tagName in testElements)) {
                testElements[tagName] = document.createElement(tagName);
            }

            el = testElements[tagName];

            // easy check first
            if (type in el) {
                return true;
            }

            // more robust check
            if ('setAttribute' in el) {
                el.setAttribute(type, 'return;');
                return (typeof el[type] === 'function');
            }

            // not available by default
            return false;
        };

        // ac-prefixer@3.1.0

    }, {}],
    19: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /**
         * @name module:ac-dom-events.preventDefault
         *
         * @function
         *
         * @desc Cancels the event if it is cancelable.
         *
         * @param {Event} evt
         */
        module.exports = function preventDefault(evt) {
            evt = evt || window.event;

            if (evt.preventDefault) {
                evt.preventDefault();
            } else {
                evt.returnValue = false;
            }
        };

        // ac-dom-events@1.4.1

    }, {}],
    20: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var removeEventListenerUtil = require('./utils/removeEventListener');
        var getEventType = require('./shared/getEventType');

        /**
         * @name module:ac-dom-events.removeEventListener
         *
         * @function
         *
         * @desc Removes a previously added event listener.
         *       Automatically handles vendor prefixed and camel-cased event types.
         *
         * @param {Object} target
         *        The event target.
         *        Usually an Element, document, or window.
         *
         * @param {String} type
         *        A lowercase string representing the event type.
         *        e.g., "click", "transitionend"
         *
         * @param {Function} listener
         *        The listener Function to be removed.
         *
         * @param {Boolean} [useCapture=false]
         *        `true` for the a listener on the capture phase.
         *        `false` (default) for a listener on the bubbling phases.
         *
         * @returns {Object} target
         */
        module.exports = function removeEventListener(target, type, listener, useCapture) {
            type = getEventType(target, type);
            return removeEventListenerUtil(target, type, listener, useCapture);
        };

        // ac-dom-events@1.4.1

    }, {
        "./shared/getEventType": 21,
        "./utils/removeEventListener": 27
    }],
    21: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var getPrefixedEventType = require('@marcom/ac-prefixer/getEventType');

        /**
         * @name getEventType
         * @memberOf module:ac-dom-events/shared
         *
         * @function
         * @private
         *
         * @desc Get an Event type with appropriate vendor prefix and casing.
         *
         * @param {Object} target
         *        The event target, usually an Element, document, or window.
         *
         * @param {String} type
         *        A lowercase string representing the Event type.
         *        e.g., "click", "transitionend"
         *
         * @returns {String|Boolean} The properly prefixed Event type
         */
        module.exports = function getEventType(target, type) {
            var tagName;
            var prefixed;

            if ('tagName' in target) {
                tagName = target.tagName;
            } else if (target === window) {
                tagName = 'window';
            } else {
                tagName = 'document';
            }

            prefixed = getPrefixedEventType(type, tagName);

            if (prefixed) {
                return prefixed;
            }

            return type;
        };

        // ac-dom-events@1.4.1

    }, {
        "@marcom/ac-prefixer/getEventType": 14
    }],
    22: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var stopPropagation = require('./stopPropagation');
        var preventDefault = require('./preventDefault');

        /**
         * @name module:ac-dom-events.stop
         *
         * @function
         *
         * @deprecated since version 1.1.
         *             Use [stopPropagation]{@link module:ac-dom-events.stopPropagation}
         *             and [preventDefault]{@link module:ac-dom-events.preventDefault} instead.
         *
         */
        module.exports = function stop(evt) {
            evt = evt || window.event;

            stopPropagation(evt);
            preventDefault(evt);

            evt.stopped = true;
            evt.returnValue = false;
        };

        // ac-dom-events@1.4.1

    }, {
        "./preventDefault": 19,
        "./stopPropagation": 23
    }],
    23: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /**
         * @name module:ac-dom-events.stopPropagation
         *
         * @function
         *
         * @desc Prevents further propagation of the current event.
         *
         * @param {Event} evt
         */
        module.exports = function stopPropagation(evt) {
            evt = evt || window.event;

            if (evt.stopPropagation) {
                evt.stopPropagation();
            } else {
                evt.cancelBubble = true;
            }
        };

        // ac-dom-events@1.4.1

    }, {}],
    24: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /**
         * @name module:ac-dom-events.target
         *
         * @function
         *
         * @desc Get the target of an Event.
         *
         * @param {Event} evt
         *
         * @returns {Object} target
         */
        module.exports = function target(evt) {
            evt = evt || window.event;
            return (typeof evt.target !== 'undefined') ? evt.target : evt.srcElement;
        };

        // ac-dom-events@1.4.1

    }, {}],
    25: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /**
         * @name addEventListener
         * @memberOf module:ac-dom-events/utils
         *
         * @function
         *
         * @desc Register the specified listener on a target.
         *       Automatically handles vendor prefixed and camel-cased event types.
         *
         * @param {Object} target
         *        The event target to listen to.
         *        Usually an Element, document, or window.
         *
         * @param {String} type
         *        A lowercase string representing the event type.
         *        e.g., "click", "transitionend"
         *
         * @param {Function} listener
         *        A Function to be called when the event type is triggered.
         *
         * @param {Boolean} [useCapture=false]
         *        `true` listens for the event in the capture phase.
         *        `false` (default) listens for the event in the bubbling phases.
         *        IE < 9 does not support useCapture
         *
         * @returns {Object} target
         */
        module.exports = function addEventListener(target, type, listener, useCapture) {
            if (target.addEventListener) {
                target.addEventListener(type, listener, !!useCapture);
            } else {
                target.attachEvent('on' + type, listener);
            }

            return target;
        };

        // ac-dom-events@1.4.1

    }, {}],
    26: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        require('@marcom/ac-polyfills/CustomEvent');

        /**
         * @name dispatchEvent
         * @memberOf module:ac-dom-events/utils
         *
         * @function
         *
         * @desc Creates and dispatches an Event on a target.
         *       Note: custom events on `window` are not supported in IE < 9
         *
         * @param {Object} target
         *        The event target.
         *        Usually an Element, document, or window.
         *
         * @param {String} type
         *        A String representing the event type to dispatch.
         *
         * @param {Object} [options]
         *
         * @param {Boolean} [options.bubbles=false]
         *        Whether or not the event bubbles up through the DOM.
         *        IE < 9 ignores this options, using the `true` behavior.
         *
         * @param {Boolean} [options.cancelable=false]
         *        Whether or not the event can be cancelled.
         *        IE < 9 ignores this options, using the `false` behavior.
         *
         * @param {*} [options.detail]
         *        The data passed to event listeners.
         *
         * @returns {Object} target
         */
        module.exports = function dispatchEvent(target, type, options) {
            var evt;

            if (target.dispatchEvent) {
                // Expects polyfill for CustomEvent constructor
                if (options) {
                    evt = new CustomEvent(type, options);
                } else {
                    evt = new CustomEvent(type);
                }

                target.dispatchEvent(evt);

            } else {
                evt = document.createEventObject();

                if (options && 'detail' in options) {
                    evt.detail = options.detail;
                }

                target.fireEvent('on' + type, evt);
            }

            return target;
        };

        // ac-dom-events@1.4.1

    }, {
        "@marcom/ac-polyfills/CustomEvent": 134
    }],
    27: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /**
         * @name removeEventListener
         * @memberOf module:ac-dom-events/utils
         *
         * @function
         *
         * @desc Removes a previously added event listener.
         *
         * @param {Object} target
         *        The event target.
         *        Usually an Element, document, or window.
         *
         * @param {String} type
         *        A String representing the event type.
         *        e.g., "click", "transitionend"
         *
         * @param {Function} listener
         *        The listener Function to be removed.
         *
         * @param {Boolean} [useCapture=false]
         *        `true` for the a listener on the capture phase.
         *        `false` (default) for a listener on the bubbling phases.
         *
         * @returns {Object} target
         */
        module.exports = function removeEventListener(target, type, listener, useCapture) {
            if (target.removeEventListener) {
                target.removeEventListener(type, listener, !!useCapture);
            } else {
                target.detachEvent('on' + type, listener);
            }

            return target;
        };

        // ac-dom-events@1.4.1

    }, {}],
    28: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /**
         * @name module:ac-dom-nodes.COMMENT_NODE
         *
         * @constant
         *
         * @desc nodeType value for Comment
         */
        module.exports = 8;

        // ac-dom-nodes@1.6.0

    }, {}],
    29: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /**
         * @name module:ac-dom-nodes.DOCUMENT_FRAGMENT_NODE
         *
         * @constant
         *
         * @desc nodeType value for DocumentFragment
         */
        module.exports = 11;

        // ac-dom-nodes@1.6.0

    }, {}],
    30: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /**
         * @name module:ac-dom-nodes.DOCUMENT_NODE
         *
         * @constant
         *
         * @desc nodeType value for Document
         */
        module.exports = 9;

        // ac-dom-nodes@1.6.0

    }, {}],
    31: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /**
         * @name module:ac-dom-nodes.DOCUMENT_TYPE_NODE
         *
         * @constant
         *
         * @desc nodeType value for DocumentType
         */
        module.exports = 10;

        // ac-dom-nodes@1.6.0

    }, {}],
    32: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /**
         * @name module:ac-dom-nodes.ELEMENT_NODE
         *
         * @constant
         *
         * @desc nodeType value for Element
         */
        module.exports = 1;

        // ac-dom-nodes@1.6.0

    }, {}],
    33: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /**
         * @name module:ac-dom-nodes.TEXT_NODE
         *
         * @constant
         *
         * @desc nodeType value for TextNode
         */
        module.exports = 3;

        // ac-dom-nodes@1.6.0

    }, {}],
    34: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /**
         * @name module:ac-dom-nodes.createDocumentFragment
         *
         * @function
         *
         * @desc Create a DocumentFragment with optional HTML contents
         *
         * @param {String} [html]
         *        Optional inner HTML of the DocumentFragment
         *
         * @returns {DocumentFragment} A new DocumentFragment
         */
        module.exports = function createDocumentFragment(html) {
            var fragment = document.createDocumentFragment();
            var div;

            if (html) {
                div = document.createElement('div');
                div.innerHTML = html;

                while (div.firstChild) {
                    fragment.appendChild(div.firstChild);
                }
            }

            return fragment;
        };

        // ac-dom-nodes@1.6.0

    }, {}],
    35: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        require('@marcom/ac-polyfills/Array/prototype.slice');
        require('@marcom/ac-polyfills/Array/prototype.filter');

        /** @ignore */
        var isNodeType = require('./internal/isNodeType');
        var ELEMENT_NODE = require('./ELEMENT_NODE');

        /**
         * @name module:ac-dom-nodes.filterByNodeType
         *
         * @function
         *
         * @desc Filters an Array of Nodes by nodeType.
         *
         * @param {Array|NodeList} nodes
         *
         * @param {Integer} [nodeType={@link module:ac-dom-nodes.ELEMENT_NODE ELEMENT_NODE}]
         *
         * @returns {Array} An new Array of Nodes of the specified nodeType
         */
        module.exports = function filterByNodeType(nodes, nodeType) {
            nodeType = nodeType || ELEMENT_NODE;
            nodes = Array.prototype.slice.call(nodes);

            return nodes.filter(function(node) {
                return isNodeType(node, nodeType);
            });
        };

        // ac-dom-nodes@1.6.0

    }, {
        "./ELEMENT_NODE": 32,
        "./internal/isNodeType": 43,
        "@marcom/ac-polyfills/Array/prototype.filter": 129,
        "@marcom/ac-polyfills/Array/prototype.slice": 133
    }],
    36: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /**
         * @name module:ac-dom-nodes.hasAttribute
         *
         * @function
         *
         * @desc Test whether or not the Element has the specified attribute or not.
         *
         * @param {Element} el
         *
         * @param {String} attr
         *
         * @returns {Boolean}
         */
        module.exports = function hasAttribute(el, attr) {
            if ('hasAttribute' in el) {
                return el.hasAttribute(attr);
            }

            return (el.attributes.getNamedItem(attr) !== null);
        };

        // ac-dom-nodes@1.6.0

    }, {}],
    37: [function(require, module, exports) {
        /**
         * Utility methods dealing with the DOM
         * @module ac-dom-nodes
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        module.exports = {
            createDocumentFragment: require('./createDocumentFragment'),
            filterByNodeType: require('./filterByNodeType'),
            hasAttribute: require('./hasAttribute'),
            indexOf: require('./indexOf'),
            insertAfter: require('./insertAfter'),
            insertBefore: require('./insertBefore'),
            insertFirstChild: require('./insertFirstChild'),
            insertLastChild: require('./insertLastChild'),
            isComment: require('./isComment'),
            isDocument: require('./isDocument'),
            isDocumentFragment: require('./isDocumentFragment'),
            isDocumentType: require('./isDocumentType'),
            isElement: require('./isElement'),
            isNode: require('./isNode'),
            isNodeList: require('./isNodeList'),
            isTextNode: require('./isTextNode'),
            remove: require('./remove'),
            replace: require('./replace'),

            COMMENT_NODE: require('./COMMENT_NODE'),
            DOCUMENT_FRAGMENT_NODE: require('./DOCUMENT_FRAGMENT_NODE'),
            DOCUMENT_NODE: require('./DOCUMENT_NODE'),
            DOCUMENT_TYPE_NODE: require('./DOCUMENT_TYPE_NODE'),
            ELEMENT_NODE: require('./ELEMENT_NODE'),
            TEXT_NODE: require('./TEXT_NODE')
        };

        // ac-dom-nodes@1.6.0

    }, {
        "./COMMENT_NODE": 28,
        "./DOCUMENT_FRAGMENT_NODE": 29,
        "./DOCUMENT_NODE": 30,
        "./DOCUMENT_TYPE_NODE": 31,
        "./ELEMENT_NODE": 32,
        "./TEXT_NODE": 33,
        "./createDocumentFragment": 34,
        "./filterByNodeType": 35,
        "./hasAttribute": 36,
        "./indexOf": 38,
        "./insertAfter": 39,
        "./insertBefore": 40,
        "./insertFirstChild": 41,
        "./insertLastChild": 42,
        "./isComment": 45,
        "./isDocument": 46,
        "./isDocumentFragment": 47,
        "./isDocumentType": 48,
        "./isElement": 49,
        "./isNode": 50,
        "./isNodeList": 51,
        "./isTextNode": 52,
        "./remove": 53,
        "./replace": 54
    }],
    38: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        require('@marcom/ac-polyfills/Array/prototype.indexOf');
        require('@marcom/ac-polyfills/Array/prototype.slice');

        /** @ignore */
        var validate = require('./internal/validate');
        var filterByNodeType = require('./filterByNodeType');

        /**
         * @name module:ac-dom-nodes.indexOf
         *
         * @function
         *
         * @desc Get the index of a Node amongst it's siblings
         *
         * @param {Node} node
         *
         * @param {Integer|Boolean} [nodeType={@link module:ac-dom-nodes.ELEMENT_NODE ELEMENT_NODE}]
         *                  A nodeType to filter by. Set to `false` for no filter.
         *
         * @returns {Number} The index of the Node, or -1 if not in the current nodeType filter
         */
        module.exports = function indexOf(node, nodeType) {
            var parentNode = node.parentNode;
            var nodes;

            if (!parentNode) {
                return 0;
            }

            nodes = parentNode.childNodes;

            if (nodeType !== false) {
                nodes = filterByNodeType(nodes, nodeType);
            } else {
                nodes = Array.prototype.slice.call(nodes);
            }

            return nodes.indexOf(node);
        };

        // ac-dom-nodes@1.6.0

    }, {
        "./filterByNodeType": 35,
        "./internal/validate": 44,
        "@marcom/ac-polyfills/Array/prototype.indexOf": 131,
        "@marcom/ac-polyfills/Array/prototype.slice": 133
    }],
    39: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var validate = require('./internal/validate');

        /**
         * @name module:ac-dom-nodes.insertAfter
         *
         * @function
         *
         * @desc Insert a Node after a specified target
         *
         * @param {Node} node
         *        The Node to insert
         *
         * @param {Node} target
         *        The target Node
         *
         * @returns {Node} The inserted Node
         */
        module.exports = function insertAfter(node, target) {
            validate.insertNode(node, true, 'insertAfter');
            validate.childNode(target, true, 'insertAfter');
            validate.hasParentNode(target, 'insertAfter');

            if (!target.nextSibling) {
                return target.parentNode.appendChild(node);
            }

            return target.parentNode.insertBefore(node, target.nextSibling);
        };

        // ac-dom-nodes@1.6.0

    }, {
        "./internal/validate": 44
    }],
    40: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var validate = require('./internal/validate');

        /**
         * @name module:ac-dom-nodes.insertBefore
         *
         * @function
         *
         * @desc Insert a Node before a specified target
         *
         * @param {Node} node
         *        The Node to insert
         *
         * @param {Node} target
         *        The target Node
         *
         * @returns {Node} The inserted Node
         */
        module.exports = function insertBefore(node, target) {
            validate.insertNode(node, true, 'insertBefore');
            validate.childNode(target, true, 'insertBefore');
            validate.hasParentNode(target, 'insertBefore');

            return target.parentNode.insertBefore(node, target);
        };

        // ac-dom-nodes@1.6.0

    }, {
        "./internal/validate": 44
    }],
    41: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var validate = require('./internal/validate');

        /**
         * @name module:ac-dom-nodes.insertFirstChild
         *
         * @function
         *
         * @desc Insert a Node as the first child of a specified target
         *
         * @param {Node} node
         *        The Node to insert
         *
         * @param {Node} target
         *        The target Node
         *
         * @returns {Node} The inserted Node
         */
        module.exports = function insertFirstChild(node, target) {
            validate.insertNode(node, true, 'insertFirstChild');
            validate.parentNode(target, true, 'insertFirstChild');

            if (!target.firstChild) {
                return target.appendChild(node);
            }

            return target.insertBefore(node, target.firstChild);
        };

        // ac-dom-nodes@1.6.0

    }, {
        "./internal/validate": 44
    }],
    42: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var validate = require('./internal/validate');

        /**
         * @name module:ac-dom-nodes.insertLastChild
         *
         * @function
         *
         * @desc Insert a Node as the last child of a specified target
         *
         * @param {Node} node
         *        The Node to insert
         *
         * @param {Node} target
         *        The target Node
         *
         * @returns {Node} The inserted Node
         */
        module.exports = function insertLastChild(node, target) {
            validate.insertNode(node, true, 'insertLastChild');
            validate.parentNode(target, true, 'insertLastChild');

            return target.appendChild(node);
        };

        // ac-dom-nodes@1.6.0

    }, {
        "./internal/validate": 44
    }],
    43: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var isNode = require('../isNode');

        module.exports = function isNodeType(node, nodeType) {
            if (!isNode(node)) {
                return false;
            }

            if (typeof nodeType === 'number') {
                return (node.nodeType === nodeType);
            }

            return (nodeType.indexOf(node.nodeType) !== -1);
        };

        // ac-dom-nodes@1.6.0

    }, {
        "../isNode": 50
    }],
    44: [function(require, module, exports) {
        /**
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var isNodeType = require('./isNodeType');
        var COMMENT_NODE = require('../COMMENT_NODE');
        var DOCUMENT_FRAGMENT_NODE = require('../DOCUMENT_FRAGMENT_NODE');
        var ELEMENT_NODE = require('../ELEMENT_NODE');
        var TEXT_NODE = require('../TEXT_NODE');

        /** @ignore */
        var VALID_INSERT_NODE = [
            ELEMENT_NODE,
            TEXT_NODE,
            COMMENT_NODE,
            DOCUMENT_FRAGMENT_NODE
        ];

        /** @ignore */
        var ERR_INVALID_INSERT_NODE = ' must be an Element, TextNode, Comment, or Document Fragment';

        /** @ignore */
        var VALID_CHILD_NODE = [
            ELEMENT_NODE,
            TEXT_NODE,
            COMMENT_NODE
        ];

        /** @ignore */
        var ERR_INVALID_CHILD_NODE = ' must be an Element, TextNode, or Comment';

        /** @ignore */
        var VALID_PARENT_NODE = [
            ELEMENT_NODE,
            DOCUMENT_FRAGMENT_NODE
        ];

        /** @ignore */
        var ERR_INVALID_PARENT_NODE = ' must be an Element, or Document Fragment';

        /** @ignore */
        var ERR_NO_PARENT_NODE = ' must have a parentNode';

        module.exports = {

            /** @ignore */
            parentNode: function(node, required, funcName, paramName) {
                paramName = paramName || 'target';

                if ((node || required) && !isNodeType(node, VALID_PARENT_NODE)) {
                    throw new TypeError(funcName + ': ' + paramName + ERR_INVALID_PARENT_NODE);
                }
            },

            /** @ignore */
            childNode: function(node, required, funcName, paramName) {
                paramName = paramName || 'target';

                if (!node && !required) {
                    return;
                }

                if (!isNodeType(node, VALID_CHILD_NODE)) {
                    throw new TypeError(funcName + ': ' + paramName + ERR_INVALID_CHILD_NODE);
                }
            },

            /** @ignore */
            insertNode: function(node, required, funcName, paramName) {
                paramName = paramName || 'node';

                if (!node && !required) {
                    return;
                }

                if (!isNodeType(node, VALID_INSERT_NODE)) {
                    throw new TypeError(funcName + ': ' + paramName + ERR_INVALID_INSERT_NODE);
                }
            },

            /** @ignore */
            hasParentNode: function(node, funcName, paramName) {
                paramName = paramName || 'target';

                if (!node.parentNode) {
                    throw new TypeError(funcName + ': ' + paramName + ERR_NO_PARENT_NODE);
                }
            }

        };

        // ac-dom-nodes@1.6.0

    }, {
        "../COMMENT_NODE": 28,
        "../DOCUMENT_FRAGMENT_NODE": 29,
        "../ELEMENT_NODE": 32,
        "../TEXT_NODE": 33,
        "./isNodeType": 43
    }],
    45: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var isNodeType = require('./internal/isNodeType');
        var COMMENT_NODE = require('./COMMENT_NODE');

        /**
         * @name module:ac-dom-nodes.isComment
         *
         * @function
         *
         * @desc Test whether or not an Object is a Comment.
         *
         * @param {Object} obj
         *
         * @returns {Boolean}
         */
        module.exports = function isComment(obj) {
            return isNodeType(obj, COMMENT_NODE);
        };

        // ac-dom-nodes@1.6.0

    }, {
        "./COMMENT_NODE": 28,
        "./internal/isNodeType": 43
    }],
    46: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var isNodeType = require('./internal/isNodeType');
        var DOCUMENT_NODE = require('./DOCUMENT_NODE');

        /**
         * @name module:ac-dom-nodes.isDocument
         *
         * @function
         *
         * @desc Test whether or not an Object is a Document.
         *
         * @param {Object} obj
         *
         * @returns {Boolean}
         */
        module.exports = function isDocument(obj) {
            return isNodeType(obj, DOCUMENT_NODE);
        };

        // ac-dom-nodes@1.6.0

    }, {
        "./DOCUMENT_NODE": 30,
        "./internal/isNodeType": 43
    }],
    47: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var isNodeType = require('./internal/isNodeType');
        var DOCUMENT_FRAGMENT_NODE = require('./DOCUMENT_FRAGMENT_NODE');

        /**
         * @name module:ac-dom-nodes.isDocumentFragment
         *
         * @function
         *
         * @desc Test whether or not an Object is a DocumentFragment.
         *
         * @param {Object} obj
         *
         * @returns {Boolean}
         */
        module.exports = function isDocumentFragment(obj) {
            return isNodeType(obj, DOCUMENT_FRAGMENT_NODE);
        };

        // ac-dom-nodes@1.6.0

    }, {
        "./DOCUMENT_FRAGMENT_NODE": 29,
        "./internal/isNodeType": 43
    }],
    48: [function(require, module, exports) {
        /**
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var isNodeType = require('./internal/isNodeType');
        var DOCUMENT_TYPE_NODE = require('./DOCUMENT_TYPE_NODE');

        /**
         * @name module:ac-dom-nodes.isDocumentType
         *
         * @function
         *
         * @desc Test whether or not an Object is a DocumentType.
         *
         * @param {Object} obj
         *
         * @returns {Boolean}
         */
        module.exports = function isDocumentType(obj) {
            return isNodeType(obj, DOCUMENT_TYPE_NODE);
        };

        // ac-dom-nodes@1.6.0

    }, {
        "./DOCUMENT_TYPE_NODE": 31,
        "./internal/isNodeType": 43
    }],
    49: [function(require, module, exports) {
        /**
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var isNodeType = require('./internal/isNodeType');
        var ELEMENT_NODE = require('./ELEMENT_NODE');

        /**
         * @name module:ac-dom-nodes.isElement
         *
         * @function
         *
         * @desc Test whether or not an Object is an Element.
         *
         * @param {Object} obj
         *
         * @returns {Boolean}
         */
        module.exports = function isElement(obj) {
            return isNodeType(obj, ELEMENT_NODE);
        };

        // ac-dom-nodes@1.6.0

    }, {
        "./ELEMENT_NODE": 32,
        "./internal/isNodeType": 43
    }],
    50: [function(require, module, exports) {
        /**
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /**
         * @name module:ac-dom-nodes.isNode
         *
         * @function
         *
         * @desc Test whether or not an Object is a Node.
         *
         * @param {Object} obj
         *
         * @returns {Boolean}
         */
        module.exports = function isNode(obj) {
            return !!(obj && obj.nodeType);
        };

        // ac-dom-nodes@1.6.0

    }, {}],
    51: [function(require, module, exports) {
        /**
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var nodeListToStringPattern = /^\[object (HTMLCollection|NodeList|Object)\]$/;

        /**
         * @name module:ac-dom-nodes.isNodeList
         *
         * @function
         *
         * @desc Test whether or not an Object is a NodeList.
         *
         * @param {Object} obj
         *
         * @returns {Boolean}
         */
        module.exports = function isNodeList(obj) {
            if (!obj) {
                return false;
            }

            // not Array-like
            if (typeof obj.length !== 'number') {
                return false;
            }

            // Array-like, but not a NodeList
            if (typeof obj[0] === 'object' && (!obj[0] || !obj[0].nodeType)) {
                return false;
            }

            return nodeListToStringPattern.test(Object.prototype.toString.call(obj));
        };

        // ac-dom-nodes@1.6.0

    }, {}],
    52: [function(require, module, exports) {
        /**
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var isNodeType = require('./internal/isNodeType');
        var TEXT_NODE = require('./TEXT_NODE');

        /**
         * @name module:ac-dom-nodes.isTextNode
         *
         * @function
         *
         * @desc Test whether or not an Object is a TextNode.
         *
         * @param {Object} obj
         *
         * @returns {Boolean}
         */
        module.exports = function isTextNode(obj) {
            return isNodeType(obj, TEXT_NODE);
        };

        // ac-dom-nodes@1.6.0

    }, {
        "./TEXT_NODE": 33,
        "./internal/isNodeType": 43
    }],
    53: [function(require, module, exports) {
        /**
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var validate = require('./internal/validate');

        /**
         * @name module:ac-dom-nodes.remove
         *
         * @function
         *
         * @desc Remove a Node from it's parentNode
         *
         * @param {Node} node
         *        The Node to remove
         *
         * @returns {Node} The removed Node
         */
        module.exports = function remove(node) {
            validate.childNode(node, true, 'remove');

            if (!node.parentNode) {
                return node;
            }

            return node.parentNode.removeChild(node);
        };

        // ac-dom-nodes@1.6.0

    }, {
        "./internal/validate": 44
    }],
    54: [function(require, module, exports) {
        /**
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var validate = require('./internal/validate');

        /**
         * @name module:ac-dom-nodes.replace
         *
         * @function
         *
         * @desc Replace one Node with another
         *
         * @param {Node} newNode
         *        The Node to be inserted
         *
         * @param {Node} oldNode
         *        The Node to be replaced
         *
         * @returns {Node} The replaced Node
         */
        module.exports = function replace(newNode, oldNode) {
            validate.insertNode(newNode, true, 'insertFirstChild', 'newNode');
            validate.childNode(oldNode, true, 'insertFirstChild', 'oldNode');
            validate.hasParentNode(oldNode, 'insertFirstChild', 'oldNode');

            return oldNode.parentNode.replaceChild(newNode, oldNode);
        };

        // ac-dom-nodes@1.6.0

    }, {
        "./internal/validate": 44
    }],
    55: [function(require, module, exports) {
        /**
         * @module ac-dom-traversal
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        module.exports = {
            ancestor: require('./ancestor'),
            ancestors: require('./ancestors'),
            children: require('./children'),
            filterBySelector: require('./filterBySelector'),
            firstChild: require('./firstChild'),
            lastChild: require('./lastChild'),
            matchesSelector: require('./matchesSelector'),
            nextSibling: require('./nextSibling'),
            nextSiblings: require('./nextSiblings'),
            previousSibling: require('./previousSibling'),
            previousSiblings: require('./previousSiblings'),
            querySelector: require('./querySelector'),
            querySelectorAll: require('./querySelectorAll'),
            siblings: require('./siblings')
        };

        // ac-dom-traversal@2.1.1

    }, {
        "./ancestor": 56,
        "./ancestors": 57,
        "./children": 58,
        "./filterBySelector": 59,
        "./firstChild": 60,
        "./lastChild": 63,
        "./matchesSelector": 64,
        "./nextSibling": 65,
        "./nextSiblings": 66,
        "./previousSibling": 67,
        "./previousSiblings": 68,
        "./querySelector": 69,
        "./querySelectorAll": 70,
        "./siblings": 74
    }],
    56: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var isElement = require('@marcom/ac-dom-nodes/isElement');
        var matchesSelector = require('./matchesSelector');
        var validate = require('./internal/validate');

        /**
         * @name module:ac-dom-traversal.ancestor
         *
         * @function
         *
         * @desc Returns the closest Element that is an ancestor of the specified Node, matching an optional CSS selector, up to and including the body.
         *
         * @param {Node} node
         *        The child Element, TextNode, or Comment.
         *
         * @param {String} [selector]
         *        Optional CSS selectors, separated by commas, to filter ancestor Elements by.
         *
         * @param {Boolean} [inclusive=false]
         *        `true` to include the target node in the potential results, otherwise `false`
         *
         * @returns {Element|null} Closest matching ancestor Element, or `null` if no matches are found.
         */
        module.exports = function ancestor(node, selector, inclusive) {
            validate.childNode(node, true, 'ancestors');
            validate.selector(selector, false, 'ancestors');

            if (inclusive && isElement(node) && (!selector || matchesSelector(node, selector))) {
                return node;
            }

            if (node !== document.body) {
                while ((node = node.parentNode) && isElement(node)) {
                    if (!selector || matchesSelector(node, selector)) {
                        return node;
                    }

                    if (node === document.body) {
                        break;
                    }
                }
            }

            return null;
        };

        // ac-dom-traversal@2.1.1

    }, {
        "./internal/validate": 62,
        "./matchesSelector": 64,
        "@marcom/ac-dom-nodes/isElement": 49
    }],
    57: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var isElement = require('@marcom/ac-dom-nodes/isElement');
        var matchesSelector = require('./matchesSelector');
        var validate = require('./internal/validate');

        /**
         * @name module:ac-dom-traversal.ancestors
         *
         * @function
         *
         * @desc Returns an Array of Elements that are ancestors of the specified Node, matching an optional CSS selector, up to and including the body.
         *
         * @param {Node} node
         *        The child Element, TextNode, or Comment.
         *
         * @param {String} [selector]
         *        Optional CSS selectors, separated by commas, to filter ancestor Elements by.
         *
         * @param {Boolean} [inclusive=false]
         *        `true` to include the target node in the potential results, otherwise `false`
         *
         * @returns {Element[]} Array of matching ancestor Elements, with the closest ancestor first.
         */
        module.exports = function ancestors(node, selector, inclusive) {
            var els = [];

            validate.childNode(node, true, 'ancestors');
            validate.selector(selector, false, 'ancestors');

            if (inclusive && isElement(node) && (!selector || matchesSelector(node, selector))) {
                els.push(node);
            }

            if (node !== document.body) {
                while ((node = node.parentNode) && isElement(node)) {
                    if (!selector || matchesSelector(node, selector)) {
                        els.push(node);
                    }

                    if (node === document.body) {
                        break;
                    }
                }
            }

            return els;
        };

        // ac-dom-traversal@2.1.1

    }, {
        "./internal/validate": 62,
        "./matchesSelector": 64,
        "@marcom/ac-dom-nodes/isElement": 49
    }],
    58: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var filterByNodeType = require('@marcom/ac-dom-nodes/filterByNodeType');
        var filterBySelector = require('./filterBySelector');
        var validate = require('./internal/validate');

        /**
         * @name module:ac-dom-traversal.children
         *
         * @function
         *
         * @desc Returns an Array of Elements that are direct children of the specified Node, matching an optional CSS selector.
         *
         * @param {Node} node
         *        The parent Element, Document, or Document Fragment.
         *
         * @param {String} [selector]
         *        Optional CSS selectors, separated by commas, to filter children Elements by.
         *
         * @returns {Element[]} Array of matching child Elements, in DOM order.
         */
        module.exports = function children(node, selector) {
            var els;

            validate.parentNode(node, true, 'children');
            validate.selector(selector, false, 'children');

            els = node.children || node.childNodes;
            els = filterByNodeType(els);

            if (selector) {
                els = filterBySelector(els, selector);
            }

            return els;
        };

        // ac-dom-traversal@2.1.1

    }, {
        "./filterBySelector": 59,
        "./internal/validate": 62,
        "@marcom/ac-dom-nodes/filterByNodeType": 35
    }],
    59: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        require('@marcom/ac-polyfills/Array/prototype.slice');
        require('@marcom/ac-polyfills/Array/prototype.filter');

        /** @ignore */
        var matchesSelector = require('./matchesSelector');
        var validate = require('./internal/validate');

        /**
         * @name module:ac-dom-traversal.filterBySelector
         *
         * @function
         *
         * @desc Filter an Array of Elements by a given CSS selector.
         *
         * @param {Node[]|NodeList} nodes
         *        The Elements to be filtered.
         *
         * @param {String} selector
         *        CSS selectors, separated by commas, to check Elements against.
         *
         * @returns {Element[]} A new Array of matching Elements.
         */
        module.exports = function filterBySelector(nodes, selector) {
            validate.selector(selector, true, 'filterBySelector');

            nodes = Array.prototype.slice.call(nodes);

            return nodes.filter(function(el) {
                return matchesSelector(el, selector);
            });
        };

        // ac-dom-traversal@2.1.1

    }, {
        "./internal/validate": 62,
        "./matchesSelector": 64,
        "@marcom/ac-polyfills/Array/prototype.filter": 129,
        "@marcom/ac-polyfills/Array/prototype.slice": 133
    }],
    60: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var children = require('./children');
        var validate = require('./internal/validate');

        /**
         * @name module:ac-dom-traversal.firstChild
         *
         * @function
         *
         * @desc Returns the first Element that is a direct child of the specified Node, matching an optional CSS selector.
         *
         * @param {Node} node
         *        The parent Element, Document, or Document Fragment.
         *
         * @param {String} [selector]
         *        Optional CSS selectors, separated by commas, to filter children Elements by.
         *
         * @returns {Element|null} First matching child Element, or `null` if no matches are found.
         */
        module.exports = function firstChild(node, selector) {
            var els;

            validate.parentNode(node, true, 'firstChild');
            validate.selector(selector, false, 'firstChild');

            if (node.firstElementChild && !selector) {
                return node.firstElementChild;
            }

            els = children(node, selector);

            if (els.length) {
                return els[0];
            }

            return null;
        };

        // ac-dom-traversal@2.1.1

    }, {
        "./children": 58,
        "./internal/validate": 62
    }],
    61: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        module.exports = window.Element ? (function(proto) {
            return proto.matches ||
                proto.matchesSelector ||
                proto.webkitMatchesSelector ||
                proto.mozMatchesSelector ||
                proto.msMatchesSelector ||
                proto.oMatchesSelector;
        }(Element.prototype)) : null;

        // ac-dom-traversal@2.1.1

    }, {}],
    62: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        require('@marcom/ac-polyfills/Array/prototype.indexOf');

        /** @ignore */
        var isNode = require('@marcom/ac-dom-nodes/isNode');
        var COMMENT_NODE = require('@marcom/ac-dom-nodes/COMMENT_NODE');
        var DOCUMENT_FRAGMENT_NODE = require('@marcom/ac-dom-nodes/DOCUMENT_FRAGMENT_NODE');
        var DOCUMENT_NODE = require('@marcom/ac-dom-nodes/DOCUMENT_NODE');
        var ELEMENT_NODE = require('@marcom/ac-dom-nodes/ELEMENT_NODE');
        var TEXT_NODE = require('@marcom/ac-dom-nodes/TEXT_NODE');

        /** @ignore */
        var isNodeType = function(node, nodeType) {
            if (!isNode(node)) {
                return false;
            }

            if (typeof nodeType === 'number') {
                return (node.nodeType === nodeType);
            }

            return (nodeType.indexOf(node.nodeType) !== -1);
        };

        /** @ignore */
        var VALID_PARENT_NODE = [
            ELEMENT_NODE,
            DOCUMENT_NODE,
            DOCUMENT_FRAGMENT_NODE
        ];

        /** @ignore */
        var ERR_INVALID_PARENT_NODE = ' must be an Element, Document, or Document Fragment';

        /** @ignore */
        var VALID_CHILD_NODE = [
            ELEMENT_NODE,
            TEXT_NODE,
            COMMENT_NODE
        ];

        /** @ignore */
        var ERR_INVALID_CHILD_NODE = ' must be an Element, TextNode, or Comment';

        /** @ignore */
        var ERR_INVALID_SELECTOR = ' must be a string';

        module.exports = {

            /** @ignore */
            parentNode: function(node, required, funcName, paramName) {
                paramName = paramName || 'node';

                if ((node || required) && !isNodeType(node, VALID_PARENT_NODE)) {
                    throw new TypeError(funcName + ': ' + paramName + ERR_INVALID_PARENT_NODE);
                }
            },

            /** @ignore */
            childNode: function(node, required, funcName, paramName) {
                paramName = paramName || 'node';

                if (!node && !required) {
                    return;
                }

                if (!isNodeType(node, VALID_CHILD_NODE)) {
                    throw new TypeError(funcName + ': ' + paramName + ERR_INVALID_CHILD_NODE);
                }
            },

            /** @ignore */
            selector: function(selector, required, funcName, paramName) {
                paramName = paramName || 'selector';

                if ((selector || required) && typeof selector !== 'string') {
                    throw new TypeError(funcName + ': ' + paramName + ERR_INVALID_SELECTOR);
                }
            }

        };

        // ac-dom-traversal@2.1.1

    }, {
        "@marcom/ac-dom-nodes/COMMENT_NODE": 28,
        "@marcom/ac-dom-nodes/DOCUMENT_FRAGMENT_NODE": 29,
        "@marcom/ac-dom-nodes/DOCUMENT_NODE": 30,
        "@marcom/ac-dom-nodes/ELEMENT_NODE": 32,
        "@marcom/ac-dom-nodes/TEXT_NODE": 33,
        "@marcom/ac-dom-nodes/isNode": 50,
        "@marcom/ac-polyfills/Array/prototype.indexOf": 131
    }],
    63: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var children = require('./children');
        var validate = require('./internal/validate');

        /**
         * @name module:ac-dom-traversal.lastChild
         *
         * @function
         *
         * @desc Returns the last Element that is a direct child of the specified Node, matching an optional CSS selector.
         *
         * @param {Node} node
         *        The parent Element, Document, or Document Fragment.
         *
         * @param {String} [selector]
         *        Optional CSS selectors, separated by commas, to filter children Elements by.
         *
         * @returns {Element|null} Last matching child Element, or `null` if no matches are found.
         */
        module.exports = function lastChild(node, selector) {
            var els;

            validate.parentNode(node, true, 'lastChild');
            validate.selector(selector, false, 'lastChild');

            if (node.lastElementChild && !selector) {
                return node.lastElementChild;
            }

            els = children(node, selector);

            if (els.length) {
                return els[els.length - 1];
            }

            return null;
        };

        // ac-dom-traversal@2.1.1

    }, {
        "./children": 58,
        "./internal/validate": 62
    }],
    64: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var isElement = require('@marcom/ac-dom-nodes/isElement');
        var validate = require('./internal/validate');
        var nativeMatches = require('./internal/nativeMatches');
        var matchesSelectorShim = require('./shims/matchesSelector');

        /**
         * @name module:ac-dom-traversal.matchesSelector
         *
         * @function
         *
         * @desc Returns whether or not an Element matches a given CSS selector.
         *
         * @param {Node} node
         *        The Element to be checked.
         *
         * @param {String} selector
         *        CSS selectors, separated by commas, to check Element against.
         *
         * @returns {Boolean} `true` if the Element matches the selector, otherwise `false`
         */
        module.exports = function matchesSelector(node, selector) {
            validate.selector(selector, true, 'matchesSelector');

            if (!isElement(node)) {
                return false;
            }

            if (!nativeMatches) {
                return matchesSelectorShim(node, selector);
            }

            return nativeMatches.call(node, selector);
        };

        // ac-dom-traversal@2.1.1

    }, {
        "./internal/nativeMatches": 61,
        "./internal/validate": 62,
        "./shims/matchesSelector": 71,
        "@marcom/ac-dom-nodes/isElement": 49
    }],
    65: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var isElement = require('@marcom/ac-dom-nodes/isElement');
        var matchesSelector = require('./matchesSelector');
        var validate = require('./internal/validate');

        /**
         * @name module:ac-dom-traversal.nextSibling
         *
         * @function
         *
         * @desc Returns the closest sibling Element that follows the specified Node, matching an optional CSS selector.
         *
         * @param {Node} node
         *        The Element, TextNode, or Comment.
         *
         * @param {String} [selector]
         *        Optional CSS selectors, separated by commas, to filter sibling Elements by.
         *
         * @returns {Element|null} Closest matching sibling Element, or `null` if no matches are found.
         */
        module.exports = function nextSibling(node, selector) {
            validate.childNode(node, true, 'nextSibling');
            validate.selector(selector, false, 'nextSibling');

            if (node.nextElementSibling && !selector) {
                return node.nextElementSibling;
            }

            while (node = node.nextSibling) {
                if (isElement(node)) {
                    if (!selector || matchesSelector(node, selector)) {
                        return node;
                    }
                }
            }

            return null;
        };

        // ac-dom-traversal@2.1.1

    }, {
        "./internal/validate": 62,
        "./matchesSelector": 64,
        "@marcom/ac-dom-nodes/isElement": 49
    }],
    66: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var isElement = require('@marcom/ac-dom-nodes/isElement');
        var matchesSelector = require('./matchesSelector');
        var validate = require('./internal/validate');

        /**
         * @name module:ac-dom-traversal.nextSiblings
         *
         * @function
         *
         * @desc Returns an Array of sibling Elements that follow the specified Node, matching an optional CSS selector.
         *
         * @param {Node} node
         *        The Element, TextNode, or Comment.
         *
         * @param {String} [selector]
         *        Optional CSS selectors, separated by commas, to filter sibling Elements by.
         *
         * @returns {Element[]} Array of matching sibling Elements, in DOM order.
         */
        module.exports = function nextSiblings(node, selector) {
            var els = [];

            validate.childNode(node, true, 'nextSiblings');
            validate.selector(selector, false, 'nextSiblings');

            while (node = node.nextSibling) {
                if (isElement(node)) {
                    if (!selector || matchesSelector(node, selector)) {
                        els.push(node);
                    }
                }
            }

            return els;
        };

        // ac-dom-traversal@2.1.1

    }, {
        "./internal/validate": 62,
        "./matchesSelector": 64,
        "@marcom/ac-dom-nodes/isElement": 49
    }],
    67: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var isElement = require('@marcom/ac-dom-nodes/isElement');
        var matchesSelector = require('./matchesSelector');
        var validate = require('./internal/validate');

        /**
         * @name module:ac-dom-traversal.previousSibling
         *
         * @function
         *
         * @desc Returns the closest sibling Element that preceeds the specified Node, matching an optional CSS selector.
         *
         * @param {Node} node
         *        The Element, TextNode, or Comment.
         *
         * @param {String} [selector]
         *        Optional CSS selectors, separated by commas, to filter sibling Elements by.
         *
         * @returns {Element|null} Closest matching sibling Element, or `null` if no matches are found.
         */
        module.exports = function previousSibling(node, selector) {
            validate.childNode(node, true, 'previousSibling');
            validate.selector(selector, false, 'previousSibling');

            if (node.previousElementSibling && !selector) {
                return node.previousElementSibling;
            }

            while (node = node.previousSibling) {
                if (isElement(node)) {
                    if (!selector || matchesSelector(node, selector)) {
                        return node;
                    }
                }
            }

            return null;
        };

        // ac-dom-traversal@2.1.1

    }, {
        "./internal/validate": 62,
        "./matchesSelector": 64,
        "@marcom/ac-dom-nodes/isElement": 49
    }],
    68: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var isElement = require('@marcom/ac-dom-nodes/isElement');
        var matchesSelector = require('./matchesSelector');
        var validate = require('./internal/validate');

        /**
         * @name module:ac-dom-traversal.previousSiblings
         *
         * @function
         *
         * @desc Returns an Array of sibling Elements that preceed the specified Node, matching an optional CSS selector.
         *
         * @param {Node} node
         *        The Element, TextNode, or Comment.
         *
         * @param {String} [selector]
         *        Optional CSS selectors, separated by commas, to filter sibling Elements by.
         *
         * @returns {Element[]} Array of matching sibling Elements, in DOM order.
         */
        module.exports = function previousSiblings(node, selector) {
            var els = [];

            validate.childNode(node, true, 'previousSiblings');
            validate.selector(selector, false, 'previousSiblings');

            while (node = node.previousSibling) {
                if (isElement(node)) {
                    if (!selector || matchesSelector(node, selector)) {
                        els.push(node);
                    }
                }
            }

            return els.reverse();
        };

        // ac-dom-traversal@2.1.1

    }, {
        "./internal/validate": 62,
        "./matchesSelector": 64,
        "@marcom/ac-dom-nodes/isElement": 49
    }],
    69: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var validate = require('./internal/validate');
        var querySelectorShim = require('./shims/querySelector');
        var querySelectorAvailable = ('querySelector' in document);

        /**
         * @name module:ac-dom-traversal.querySelector
         *
         * @function
         *
         * @desc Returns the first Element within the specified context that match given CSS selector(s).
         *
         * @param {String} selector
         *        One or more CSS selectors separated by commas.
         *
         * @param {Node} [context=document]
         *        An optional ParentNode to scope the selector to. Defaults to `document`.
         *
         * @returns {Element|null} First matching Element, or `null` if no matches are found.
         */
        module.exports = function querySelector(selector, context) {
            context = context || document;

            validate.parentNode(context, true, 'querySelector', 'context');
            validate.selector(selector, true, 'querySelector');

            if (!querySelectorAvailable) {
                return querySelectorShim(selector, context);
            }

            return context.querySelector(selector);
        };

        // ac-dom-traversal@2.1.1

    }, {
        "./internal/validate": 62,
        "./shims/querySelector": 72
    }],
    70: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        require('@marcom/ac-polyfills/Array/prototype.slice');

        /** @ignore */
        var validate = require('./internal/validate');
        var querySelectorAllShim = require('./shims/querySelectorAll');
        var querySelectorAllAvailable = ('querySelectorAll' in document);

        /**
         * @name module:ac-dom-traversal.querySelectorAll
         *
         * @function
         *
         * @desc Returns an Array of Elements within the specified context that match given CSS selector(s).
         *
         * @param {String} selector
         *        One or more CSS selectors separated by commas.
         *
         * @param {Node} [context=document]
         *        An optional ParentNode to scope the selector to. Defaults to `document`.
         *
         * @returns {Element[]} Array of matching Elements
         */
        module.exports = function querySelectorAll(selector, context) {
            context = context || document;

            validate.parentNode(context, true, 'querySelectorAll', 'context');
            validate.selector(selector, true, 'querySelectorAll');

            if (!querySelectorAllAvailable) {
                return querySelectorAllShim(selector, context);
            }

            return Array.prototype.slice.call(context.querySelectorAll(selector));
        };

        // ac-dom-traversal@2.1.1

    }, {
        "./internal/validate": 62,
        "./shims/querySelectorAll": 73,
        "@marcom/ac-polyfills/Array/prototype.slice": 133
    }],
    71: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var querySelectorAll = require('../querySelectorAll');

        /**
         * module:ac-dom-traversal.matchesSelector shim for IE < 8
         */
        module.exports = function matchesSelector(node, selector) {
            var context = node.parentNode || document;
            var nodes = querySelectorAll(selector, context);
            var i;

            for (i = 0; i < nodes.length; i++) {
                if (nodes[i] === node) {
                    return true;
                }
            }

            return false;
        };

        // ac-dom-traversal@2.1.1

    }, {
        "../querySelectorAll": 70
    }],
    72: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var querySelectorAll = require('./querySelectorAll');

        /**
         * module:ac-dom-traversal.querySelector shim for IE < 8
         */
        module.exports = function querySelector(selector, context) {
            var allResults = querySelectorAll(selector, context);

            return allResults.length ? allResults[0] : null;
        };

        // ac-dom-traversal@2.1.1

    }, {
        "./querySelectorAll": 73
    }],
    73: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        require('@marcom/ac-polyfills/Array/prototype.indexOf');

        /** @ignore */
        var isElement = require('@marcom/ac-dom-nodes/isElement');
        var isDocumentFragment = require('@marcom/ac-dom-nodes/isDocumentFragment');
        var removeElement = require('@marcom/ac-dom-nodes/remove');
        var COLLECTION_PREFIX = '_ac_qsa_';

        var isElementInContext = function(el, context) {
            var parent;

            if (context === document) {
                return true;
            }

            parent = el;
            while ((parent = parent.parentNode) && isElement(parent)) {
                if (parent === context) {
                    return true;
                }
            }

            return false;
        };

        var recalcStyles = function(context) {
            if ('recalc' in context) {
                context.recalc(false);
            } else {
                document.recalc(false);
            }

            window.scrollBy(0, 0);
        };

        /**
         * module:ac-dom-traversal.querySelectorAll shim for IE < 8
         */
        module.exports = function querySelectorAll(selector, context) {
            var style = document.createElement();
            var id = COLLECTION_PREFIX + (Math.random() + '').slice(-6);
            var els = [];
            var el;

            // default context
            context = context || document;

            // prepare the collection
            document[id] = [];

            // prepare style tag
            // ac-qsa:expression() adds matching elements to the collection
            // display:recalc; is invalid, but forces display:none; elements to recalc
            style.innerHTML = 'x<style>*{display:recalc;}' + selector + '{ac-qsa:expression(document["' + id + '"] && document["' + id + '"].push(this));}';
            style = style.lastChild;

            if (isDocumentFragment(context)) {
                context.appendChild(style);
            } else {
                document.documentElement.firstChild.appendChild(style);
            }

            // recalc styles
            recalcStyles(context);

            // cleanup and collect matched elements
            while (document[id].length) {
                el = document[id].shift();
                el.style.removeAttribute('ac-qsa');

                // don't repeat elements
                // and enforce the current context
                if (els.indexOf(el) === -1 && isElementInContext(el, context)) {
                    els.push(el);
                }
            }

            // reset collection and styles
            document[id] = null;
            removeElement(style);
            recalcStyles(context);

            // done!
            return els;
        };

        // ac-dom-traversal@2.1.1

    }, {
        "@marcom/ac-dom-nodes/isDocumentFragment": 47,
        "@marcom/ac-dom-nodes/isElement": 49,
        "@marcom/ac-dom-nodes/remove": 53,
        "@marcom/ac-polyfills/Array/prototype.indexOf": 131
    }],
    74: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var children = require('./children');
        var validate = require('./internal/validate');

        /**
         * @name module:ac-dom-traversal.siblings
         *
         * @function
         *
         * @desc Returns an Array of Elements that are siblings of the specified Node, matching an optional CSS selector.
         *
         * @param {Node} node
         *        The Element, TextNode, or Comment.
         *
         * @param {String} [selector]
         *        Optional CSS selectors, separated by commas, to filter sibling Elements by.
         *
         * @returns {Element[]} Array of matching sibling Elements, in DOM order.
         */
        module.exports = function siblings(node, selector) {
            var els = [];

            validate.childNode(node, true, 'siblings');
            validate.selector(selector, false, 'siblings');

            if (node.parentNode) {
                els = children(node.parentNode, selector);
                els = els.filter(function(el) {
                    return (el !== node);
                });
            }

            return els;
        };

        // ac-dom-traversal@2.1.1

    }, {
        "./children": 58,
        "./internal/validate": 62
    }],
    75: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var globalsHelper = require('./helpers/globals');
        var once = require('@marcom/ac-function/once');

        /**
         * @name module:ac-feature.canvasAvailable
         *
         * @function
         *
         * @desc Returns the availability of the HTML5 Canvas API.
         *
         * @returns {Boolean} `true` if the browser supports canvas, otherwise `false`.
         */
        var canvasAvailable = function() {
            var documentObj = globalsHelper.getDocument();
            var canvas = documentObj.createElement('canvas');

            return !!(typeof canvas.getContext === 'function' && canvas.getContext('2d'));
        };

        module.exports = once(canvasAvailable);
        module.exports.original = canvasAvailable;

        // ac-feature@2.2.1

    }, {
        "./helpers/globals": 83,
        "@marcom/ac-function/once": 93
    }],
    76: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var ac_browser = require('ac-browser');
        var touchAvailable = require('./touchAvailable').original;
        var once = require('@marcom/ac-function/once');

        /**
         * @name module:ac-feature.continuousScrollEventsAvailable
         *
         * @function
         *
         * @desc Returns the availability of continuous scroll events.
         *       iOS < 8 pauses painting and does not fire scroll events during scroll (only at the start and end).
         *
         * @returns {Boolean} `true` if scroll events are fired during scrolling, otherwise `false`.
         */
        function continuousScrollEventsAvailable() {
            return (!touchAvailable() || (ac_browser.os === 'iOS' && ac_browser.version >= 8) || ac_browser.name === 'Chrome');
        }

        module.exports = once(continuousScrollEventsAvailable);
        module.exports.original = continuousScrollEventsAvailable;

        // ac-feature@2.2.1

    }, {
        "./touchAvailable": 115,
        "@marcom/ac-function/once": 93,
        "ac-browser": 108
    }],
    77: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var globalsHelper = require('./helpers/globals');
        var once = require('@marcom/ac-function/once');

        /**
         * @name module:ac-feature.cookiesAvailable
         *
         * @function
         *
         * @desc Returns the availability of cookies.
         *
         * @returns {Boolean} `true` if cookies are enabled, otherwise `false`.
         */
        function cookiesAvailable() {
            var available = false;
            var documentObj = globalsHelper.getDocument();
            var navigatorObj = globalsHelper.getNavigator();

            try {
                if ('cookie' in documentObj && !!navigatorObj.cookieEnabled) {
                    documentObj.cookie = 'ac_feature_cookie=1';
                    available = (documentObj.cookie.indexOf('ac_feature_cookie') !== -1);
                    documentObj.cookie = 'ac_feature_cookie=; expires=Thu, 01 Jan 1970 00:00:01 GMT;';
                }
            } catch (err) {}

            return available;
        }

        module.exports = once(cookiesAvailable);
        module.exports.original = cookiesAvailable;

        // ac-feature@2.2.1

    }, {
        "./helpers/globals": 83,
        "@marcom/ac-function/once": 93
    }],
    78: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var getStyleValue = require('@marcom/ac-prefixer/getStyleValue');
        var once = require('@marcom/ac-function/once');

        /**
         * @name module:ac-feature.cssLinearGradientAvailable
         *
         * @function
         *
         * @desc Returns the availability of linear-gradient() in CSS, including vendor-prefixed flavors.
         *
         * @returns {Boolean} `true` if linear-gradient() is available, otherwise `false`.
         */
        function cssLinearGradientAvailable() {
            var values = [
                'linear-gradient(to bottom right, #9f9, white)',
                'linear-gradient(top left, #9f9, white)',
                'gradient(linear, left top, right bottom, from(#9f9), to(white))'
            ];

            return values.some(function(value) {
                return !!getStyleValue('background-image', value);
            });
        }

        module.exports = once(cssLinearGradientAvailable);
        module.exports.original = cssLinearGradientAvailable;

        // ac-feature@2.2.1

    }, {
        "@marcom/ac-function/once": 93,
        "@marcom/ac-prefixer/getStyleValue": 96
    }],
    79: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var getStyleValue = require('@marcom/ac-prefixer/getStyleValue');
        var getStyleProperty = require('@marcom/ac-prefixer/getStyleProperty');
        var memoize = require('@marcom/ac-function/memoize');

        /**
         * @name module:ac-feature.cssPropertyAvailable
         *
         * @function
         *
         * @desc Returns the availability of a CSS property including vendor-prefixed flavors, along with an optional value.
         *
         * @param {String} property
         *        The CSS property to test.
         *        Can be in DOM (borderRadius) or CSS (border-radius) form.
         *
         * @param {String} [value]
         *        An optional value to test.
         *
         * @returns {Boolean} `true` if the browser supports the given CSS property/value, otherwise `false`.
         */
        function cssPropertyAvailable(property, value) {
            if (typeof value !== 'undefined') {
                return !!getStyleValue(property, value);
            } else {
                return !!getStyleProperty(property);
            }
        }

        module.exports = memoize(cssPropertyAvailable);
        module.exports.original = cssPropertyAvailable;

        // ac-feature@2.2.1

    }, {
        "@marcom/ac-function/memoize": 92,
        "@marcom/ac-prefixer/getStyleProperty": 95,
        "@marcom/ac-prefixer/getStyleValue": 96
    }],
    80: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var getStyleValue = require('@marcom/ac-prefixer/getStyleValue');
        var once = require('@marcom/ac-function/once');

        /**
         * @name module:ac-feature.cssViewportUnitsAvailable
         *
         * @function
         *
         * @desc Returns the availability of `vw` and `vh` units in CSS.
         *
         * @returns {Boolean} `true` if the browser supports viewports units, otherwise `false`.
         */
        function cssViewportUnitsAvailable() {
            return !!getStyleValue('margin', '1vw 1vh');
        }

        module.exports = once(cssViewportUnitsAvailable);
        module.exports.original = cssViewportUnitsAvailable;

        // ac-feature@2.2.1

    }, {
        "@marcom/ac-function/once": 93,
        "@marcom/ac-prefixer/getStyleValue": 96
    }],
    81: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var globalsHelper = require('./helpers/globals');
        var memoize = require('@marcom/ac-function/memoize');

        /**
         * @name module:ac-feature.elementAttributeAvailable
         *
         * @function
         *
         * @desc Returns the availability of an attribute on a specific element type.
         *
         * @param {String} attr
         *        The attribute to test for.
         *
         * @param {String} [tagName='div']
         *        An optional Element tagName
         *
         * @returns {Boolean} `true` if the Element supports the given attribute, otherwise `false`.
         */
        function elementAttributeAvailable(attr, tagName) {
            var documentObj = globalsHelper.getDocument();
            var el;

            tagName = tagName || 'div';
            el = documentObj.createElement(tagName);

            return (attr in el);
        }

        module.exports = memoize(elementAttributeAvailable);
        module.exports.original = elementAttributeAvailable;

        // ac-feature@2.2.1

    }, {
        "./helpers/globals": 83,
        "@marcom/ac-function/memoize": 92
    }],
    82: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var getEventType = require('@marcom/ac-prefixer/getEventType');
        var memoize = require('@marcom/ac-function/memoize');

        /**
         * @name module:ac-feature.eventTypeAvailable
         *
         * @function
         *
         * @desc Returns the availability of a CSS property including vendor-prefixed flavors, along with an optional value.
         *
         * @param {String} property
         *        The CSS property to test.
         *        Can be in DOM (borderRadius) or CSS (border-radius) form.
         *
         * @param {String} [tagName='div']
         *        An optional Element tagName
         *
         * @returns {Boolean} `true` if the browser supports the given CSS property/value, otherwise `false`.
         */
        function eventTypeAvailable(type, tagName) {
            return !!getEventType(type, tagName);
        }

        module.exports = memoize(eventTypeAvailable);
        module.exports.original = eventTypeAvailable;

        // ac-feature@2.2.1

    }, {
        "@marcom/ac-function/memoize": 92,
        "@marcom/ac-prefixer/getEventType": 94
    }],
    83: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /**
         * @name module:globals
         * @private
         */
        module.exports = {
            /**
             * @name module.globals.getWindow
             *
             * @function
             *
             * @desc Get the window object.
             *
             * @returns {Window}
             */
            getWindow: function() {
                return window;
            },

            /**
             * @name module.globals.getDocument
             *
             * @function
             *
             * @desc Get the document object.
             *
             * @returns {Document}
             */
            getDocument: function() {
                return document;
            },

            /**
             * @name module.globals.getNavigator
             *
             * @function
             *
             * @desc Get the navigator object.
             *
             * @returns {Navigator}
             */
            getNavigator: function() {
                return navigator;
            }
        };

        // ac-feature@2.2.1

    }, {}],
    84: [function(require, module, exports) {
        /**
         * Helper methods for detecting the availability of various browser features.
         * @module ac-feature
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        module.exports = {
            canvasAvailable: require('./canvasAvailable'),
            continuousScrollEventsAvailable: require('./continuousScrollEventsAvailable'),
            cookiesAvailable: require('./cookiesAvailable'),
            cssLinearGradientAvailable: require('./cssLinearGradientAvailable'),
            cssPropertyAvailable: require('./cssPropertyAvailable'),
            cssViewportUnitsAvailable: require('./cssViewportUnitsAvailable'),
            elementAttributeAvailable: require('./elementAttributeAvailable'),
            eventTypeAvailable: require('./eventTypeAvailable'),
            isDesktop: require('./isDesktop'),
            isHandheld: require('./isHandheld'),
            isRetina: require('./isRetina'),
            isTablet: require('./isTablet'),
            localStorageAvailable: require('./localStorageAvailable'),
            mediaElementsAvailable: require('./mediaElementsAvailable'),
            mediaQueriesAvailable: require('./mediaQueriesAvailable'),
            sessionStorageAvailable: require('./sessionStorageAvailable'),
            svgAvailable: require('./svgAvailable'),
            threeDTransformsAvailable: require('./threeDTransformsAvailable'),
            touchAvailable: require('./touchAvailable'),
            webGLAvailable: require('./webGLAvailable')
        };

        // ac-feature@2.2.1

    }, {
        "./canvasAvailable": 75,
        "./continuousScrollEventsAvailable": 76,
        "./cookiesAvailable": 77,
        "./cssLinearGradientAvailable": 78,
        "./cssPropertyAvailable": 79,
        "./cssViewportUnitsAvailable": 80,
        "./elementAttributeAvailable": 81,
        "./eventTypeAvailable": 82,
        "./isDesktop": 85,
        "./isHandheld": 86,
        "./isRetina": 87,
        "./isTablet": 88,
        "./localStorageAvailable": 89,
        "./mediaElementsAvailable": 90,
        "./mediaQueriesAvailable": 91,
        "./sessionStorageAvailable": 112,
        "./svgAvailable": 113,
        "./threeDTransformsAvailable": 114,
        "./touchAvailable": 115,
        "./webGLAvailable": 116
    }],
    85: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var touchAvailable = require('./touchAvailable').original;
        var globalsHelper = require('./helpers/globals');
        var once = require('@marcom/ac-function/once');

        /**
         * @name module:ac-feature.isDesktop
         *
         * @function
         *
         * @desc Attempts to determine if device is a Desktop.
         *       The test is based on the assumptions that desktops don't support touch and aren't orientable.
         *
         * @returns {Boolean} `true` if device does not support touch and/or orientation, otherwise `false`.
         */
        function isDesktop() {
            var windowObj = globalsHelper.getWindow();

            return (!touchAvailable() && !windowObj.orientation);
        }

        module.exports = once(isDesktop);
        module.exports.original = isDesktop;

        // ac-feature@2.2.1

    }, {
        "./helpers/globals": 83,
        "./touchAvailable": 115,
        "@marcom/ac-function/once": 93
    }],
    86: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var isDesktop = require('./isDesktop').original;
        var isTablet = require('./isTablet').original;
        var once = require('@marcom/ac-function/once');

        /**
         * @name module:ac-feature.isHandheld
         *
         * @function
         *
         * @desc Attempts to determine if device is a Handheld (e.g., iPhone, iPod Touch, etc).
         *       The test is based on the value of [isDesktop()]{module:ac-feature.isDesktop()}
         *       and if the device screen width is < 600px.
         *
         * @returns {Boolean} `true` if device is not a Desktop or Tablet, otherwise `false`.
         */
        function isHandheld() {
            return (!isDesktop() && !isTablet());
        }

        module.exports = once(isHandheld);
        module.exports.original = isHandheld;

        // ac-feature@2.2.1

    }, {
        "./isDesktop": 85,
        "./isTablet": 88,
        "@marcom/ac-function/once": 93
    }],
    87: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var globalsHelper = require('./helpers/globals');

        /**
         * @name module:ac-feature.isRetina
         *
         * @function
         *
         * @desc Determines whether or not the display is Retina.
         *       Note: This function is not memoized.
         *
         * @returns {Boolean} `true` if the DPR is >= 1.5, otherwise `false`.
         */
        module.exports = function isRetina() {
            var windowObj = globalsHelper.getWindow();
            return ('devicePixelRatio' in windowObj && windowObj.devicePixelRatio >= 1.5);
        };

        // ac-feature@2.2.1

    }, {
        "./helpers/globals": 83
    }],
    88: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var isDesktop = require('./isDesktop').original;
        var globalsHelper = require('./helpers/globals');
        var once = require('@marcom/ac-function/once');
        var MIN_TABLET_WIDTH = 600; // min width that we'd consider a tablet device to be / max handheld

        /**
         * @name module:ac-feature.isTablet
         *
         * @function
         *
         * @desc Attempts to determine if device is a Tablet.
         *       The test is based on the values of [isDesktop()]{module:ac-feature.isDesktop()}
         *       and if the device screen width is >= 600px.
         *
         * @returns {Boolean} `true` if device is determined to be a Tablet otherwise `false`.
         */
        function isTablet() {
            var windowObj = globalsHelper.getWindow();
            var width = windowObj.screen.width;

            if (windowObj.orientation && windowObj.screen.height < width) {
                // normalize screen width for orientable devices
                width = windowObj.screen.height;
            }

            return (!isDesktop() && width >= MIN_TABLET_WIDTH);
        }

        module.exports = once(isTablet);
        module.exports.original = isTablet;

        // ac-feature@2.2.1

    }, {
        "./helpers/globals": 83,
        "./isDesktop": 85,
        "@marcom/ac-function/once": 93
    }],
    89: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var globalsHelper = require('./helpers/globals');
        var once = require('@marcom/ac-function/once');

        /**
         * @name module:ac-feature.localStorageAvailable
         *
         * @function
         *
         * @desc Returns the availability of HTML5 localStorage.
         *       Privacy mode must be disabled and cookies must be enabled.
         *       NOTE: Does not support Firefox <= 13 because of a bug where Firefox
         *       interprets a nonexistent item as null instead of undefined
         *
         * @returns {Boolean} `true` if localStorage is available, otherwise `false`.
         */
        function localStorageAvailable() {
            var windowObj = globalsHelper.getWindow();
            var available = false;

            try {
                available = !!(windowObj.localStorage && windowObj.localStorage.non_existent !== null);
            } catch (err) {}

            return available;
        }

        module.exports = once(localStorageAvailable);
        module.exports.original = localStorageAvailable;

        // ac-feature@2.2.1

    }, {
        "./helpers/globals": 83,
        "@marcom/ac-function/once": 93
    }],
    90: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var globalsHelper = require('./helpers/globals');
        var once = require('@marcom/ac-function/once');

        /**
         * @name module:ac-feature.mediaElementsAvailable
         *
         * @function
         *
         * @desc Returns the availability of HTML5 video/audio tags
         *
         * @returns {Boolean} `true` if the browser supports video/audio tags, otherwise `false`.
         */
        function mediaElementsAvailable() {
            var windowObj = globalsHelper.getWindow();

            return ('HTMLMediaElement' in windowObj);
        }

        module.exports = once(mediaElementsAvailable);
        module.exports.original = mediaElementsAvailable;

        // ac-feature@2.2.1

    }, {
        "./helpers/globals": 83,
        "@marcom/ac-function/once": 93
    }],
    91: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        require('@marcom/ac-polyfills/matchMedia');

        /** @ignore */
        var globalsHelper = require('./helpers/globals');
        var once = require('@marcom/ac-function/once');

        /**
         * @name module:ac-feature.mediaQueriesAvailable
         *
         * @function
         *
         * @desc Returns the availability of HTML5 video/audio tags
         *
         * @returns {Boolean} `true` if the browser supports video/audio tags, otherwise `false`.
         */
        function mediaQueriesAvailable() {
            var windowObj = globalsHelper.getWindow();
            var mql = windowObj.matchMedia('only all');

            return !!(mql && mql.matches);
        }

        module.exports = once(mediaQueriesAvailable);
        module.exports.original = mediaQueriesAvailable;

        // ac-feature@2.2.1

    }, {
        "./helpers/globals": 83,
        "@marcom/ac-function/once": 93,
        "@marcom/ac-polyfills/matchMedia": 135
    }],
    92: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /**
         * @name defaultHashFunction
         *
         * @function
         * @private
         *
         * @desc Creates a cache key based on arguments
         *
         * @param {...*}
         *
         * @returns {String} Comma-separated string of arguments
         */
        var defaultHashFunction = function() {
            var key = '';
            var i;

            for (i = 0; i < arguments.length; i++) {
                if (i > 0) {
                    key += ',';
                }

                key += arguments[i];
            }

            return key;
        };

        /**
         * @name module:ac-function.memoize
         *
         * @function
         *
         * @desc Creates a function that memoizes the result of `func`
         *
         * @param {Function} func
         *        The function to be memoized
         *
         * @param {Function} [hashFunction]
         *        A function that returns a cache key based on arguments
         *        Creates a comma-separated string of arguments by default
         *
         * @returns {Function}
         */
        module.exports = function memoize(func, hashFunction) {
            hashFunction = hashFunction || defaultHashFunction;

            var memoized = function() {
                var args = arguments;
                var key = hashFunction.apply(this, args);

                if (!(key in memoized.cache)) {
                    memoized.cache[key] = func.apply(this, args);
                }

                return memoized.cache[key];
            };

            memoized.cache = {};

            return memoized;
        };

        // ac-function@1.1.0

    }, {}],
    93: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /**
         * @name module:ac-function.once
         *
         * @function
         *
         * @desc Creates a function that executes `func` only once
         *
         * @param {Function} func
         *        The function to be executed once
         *
         * @returns {Function}
         */
        module.exports = function once(func) {
            var result;

            return function() {
                if (typeof result === 'undefined') {
                    result = func.apply(this, arguments);
                }

                return result;
            };
        };

        // ac-function@1.1.0

    }, {}],
    94: [function(require, module, exports) {
        module.exports = require(14)
    }, {
        "./shared/camelCasedEventTypes": 97,
        "./shared/prefixHelper": 99,
        "./shared/windowFallbackEventTypes": 102,
        "./utils/eventTypeAvailable": 103
    }],
    95: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        var cache = require('./shared/stylePropertyCache');
        var getStyleTestElement = require('./shared/getStyleTestElement');
        var toCSS = require('./utils/toCSS');
        var toDOM = require('./utils/toDOM');
        var prefixHelper = require('./shared/prefixHelper');

        /**
         * @name memoizeStyleProperty
         *
         * @function
         * @private
         *
         * @desc Memoize the results of getStyleProperty
         *
         * @param {String} property
         *        The unprefixed property name in DOM form.
         *
         * @param {String} prefixed
         *        The properly prefixed property name in DOM form.
         */
        var memoizeStyleProperty = function(property, prefixed) {
            var cssProperty = toCSS(property);
            var cssPrefixed = (prefixed === false) ? false : toCSS(prefixed);

            cache[property] =
                cache[prefixed] =
                cache[cssProperty] =
                cache[cssPrefixed] = {
                    dom: prefixed,
                    css: cssPrefixed
                };

            return prefixed;
        };

        /**
         * @name module:ac-prefixer.getStyleProperty
         *
         * @function
         *
         * @desc Returns the property in DOM form with vendor prefix, as needed.
         *
         * @param {String} property
         *        The unprefixed property name in CSS or DOM form.
         *
         * @returns {String|Boolean} The property in DOM form, or `false` if not available.
         */
        module.exports = function getStyleProperty(property) {
            var properties;
            var ucProperty;
            var el;
            var i;

            property += '';

            if (property in cache) {
                return cache[property].dom;
            }

            el = getStyleTestElement();

            property = toDOM(property);
            ucProperty = property.charAt(0).toUpperCase() + property.substring(1);

            if (property === 'filter') {
                // Chrome has both prefixed and unprefixed `filter`
                // but only the prefixed version is fully implemented.
                // Firefox isn't prefixed, so we drop it here.
                properties = ['WebkitFilter', 'filter'];
            } else {
                properties = (property + ' ' + prefixHelper.dom.join(ucProperty + ' ') + ucProperty).split(' ');
            }

            for (i = 0; i < properties.length; i++) {
                if (typeof el.style[properties[i]] !== 'undefined') {

                    if (i !== 0) {
                        prefixHelper.reduce(i - 1);
                    }

                    return memoizeStyleProperty(property, properties[i]);
                }
            }

            return memoizeStyleProperty(property, false);
        };

        // ac-prefixer@3.1.0

    }, {
        "./shared/getStyleTestElement": 98,
        "./shared/prefixHelper": 99,
        "./shared/stylePropertyCache": 100,
        "./utils/toCSS": 104,
        "./utils/toDOM": 105
    }],
    96: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var getStyleProperty = require('./getStyleProperty');
        var styleValueAvailable = require('./shared/styleValueAvailable');
        var prefixHelper = require('./shared/prefixHelper');

        var stylePropertyCache = require('./shared/stylePropertyCache');
        var styleValueCache = {};

        var RE_CSS_FUNCTION_PARAMS = /(\([^\)]+\))/gi;
        var RE_CSS_VALUES = /([^ ,;\(]+(\([^\)]+\))?)/gi;

        /**
         * @name module:ac-prefixer.getStyleValue
         *
         * @function
         *
         * @desc Returns the value for a specific property with vendor prefix(es), as needed.
         *
         * @param {String} property
         *        The unprefixed property name in CSS or DOM form.
         *
         * @param {String} value
         *        The unprefixed property value.
         *
         * @returns {String|Boolean} The value, or `false` if not available.
         */
        module.exports = function getStyleValue(property, value) {
            var cssProperty;

            value += '';
            property = getStyleProperty(property);

            if (!property) {
                return false;
            }

            if (styleValueAvailable(property, value)) {
                return value;
            }

            cssProperty = stylePropertyCache[property].css;

            value = value.replace(RE_CSS_VALUES, function(match) {
                var values;
                var valueKey;
                var key;
                var i;

                // ignore colors and numbers
                if (match[0] === '#' || !isNaN(match[0])) {
                    return match;
                }

                // check memoized value
                valueKey = match.replace(RE_CSS_FUNCTION_PARAMS, '');
                key = cssProperty + ':' + valueKey;
                if (key in styleValueCache) {
                    if (styleValueCache[key] === false) {
                        // value not supported, stripped
                        return '';
                    }

                    return match.replace(valueKey, styleValueCache[key]);
                }

                // prepare potential prefixes
                values = prefixHelper.css.map(function(prefix) {
                    return prefix + match;
                });
                values = [match].concat(values);

                // check potential prefixes
                for (i = 0; i < values.length; i++) {
                    if (styleValueAvailable(property, values[i])) {
                        // valid prefix found

                        if (i !== 0) {
                            prefixHelper.reduce(i - 1);
                        }

                        styleValueCache[key] = values[i].replace(RE_CSS_FUNCTION_PARAMS, '');
                        return values[i];
                    }
                }

                // value not supported, stripped
                styleValueCache[key] = false;
                return '';
            });

            value = value.trim();
            return (value === '') ? false : value;
        };

        // ac-prefixer@3.1.0

    }, {
        "./getStyleProperty": 95,
        "./shared/prefixHelper": 99,
        "./shared/stylePropertyCache": 100,
        "./shared/styleValueAvailable": 101
    }],
    97: [function(require, module, exports) {
        module.exports = require(15)
    }, {}],
    98: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var el;

        /**
         * @name getStyleTestElement
         * @memberOf module:ac-prefixer/shared
         *
         * @function
         * @private
         *
         * @desc Creates the test Element and/or resets it's style properties.
         */
        module.exports = function getStyleTestElement() {
            if (!el) {
                el = document.createElement('_');
            } else {
                el.style.cssText = '';
                el.removeAttribute('style');
            }

            return el;
        };

        /*
         * @name getStyleTestElement.resetElement
         *
         * @function
         * @private
         *
         * @desc Reset the test Element. Exposed for testing.
         */
        module.exports.resetElement = function() {
            el = null;
        };

        // ac-prefixer@3.1.0

    }, {}],
    99: [function(require, module, exports) {
        module.exports = require(16)
    }, {}],
    100: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        module.exports = {};

        // ac-prefixer@3.1.0

    }, {}],
    101: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var cache = require('./stylePropertyCache');
        var getStyleTestElement = require('./getStyleTestElement');
        var flagsSet = false;
        var supportsAvailable;
        var invalidStyleThrowsError;

        var prepareFlags = function() {
            var el;

            if (!flagsSet) {
                flagsSet = true;
                supportsAvailable = ('CSS' in window && 'supports' in window.CSS);
                invalidStyleThrowsError = false;

                el = getStyleTestElement();
                try {
                    el.style.width = 'invalid';
                } catch (e) {
                    // Old IE throws an error for invalid values
                    invalidStyleThrowsError = true;
                }
            }
        };

        /**
         * @name styleValueAvailable
         * @memberOf module:ac-prefixer/shared
         *
         * @function
         * @private
         *
         * @desc Determine whether or not a CSS value is valid
         *
         * @param {String} property
         *        The property name in DOM form, prefixed as needed.
         *
         * @param {String} value
         *        The value to test.
         *
         * @returns {Boolean} `true` if the value is valid, otherwise `false`.
         */
        module.exports = function styleValueAvailable(property, value) {
            var before;
            var el;

            prepareFlags();

            if (supportsAvailable) {
                property = cache[property].css;
                return CSS.supports(property, value);
            }

            el = getStyleTestElement();
            before = el.style[property];

            if (invalidStyleThrowsError) {
                try {
                    el.style[property] = value;
                } catch (e) {
                    // Old IE throws an error for invalid values
                    return false;
                }
            } else {
                el.style[property] = value;
            }

            return (el.style[property] && el.style[property] !== before);
        };

        /*
         * @name styleValueAvailable.resetFlags
         *
         * @function
         * @private
         *
         * @desc Reset CSS.support and try/catch flags. Exposed for testing.
         */
        module.exports.resetFlags = function() {
            flagsSet = false;
        };

        // ac-prefixer@3.1.0

    }, {
        "./getStyleTestElement": 98,
        "./stylePropertyCache": 100
    }],
    102: [function(require, module, exports) {
        module.exports = require(17)
    }, {}],
    103: [function(require, module, exports) {
        module.exports = require(18)
    }, {}],
    104: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var RE_DOM_PREFIXES = /^(webkit|moz|ms)/gi;

        /**
         * @name toCSS
         * @memberOf module:ac-prefixer/utils
         *
         * @function
         *
         * @desc Converts a property or value to CSS form (i.e., "-webkit-property-name").
         *
         * @param {String} str
         *        The property or value in CSS or DOM form.
         *
         * @returns {String} String in CSS form.
         */
        module.exports = function toCSS(str) {
            var i;

            if (str.toLowerCase() === 'cssfloat') {
                return 'float';
            }

            if (RE_DOM_PREFIXES.test(str)) {
                str = '-' + str;
            }

            return str.replace(/([A-Z]+)([A-Z][a-z])/g, '$1-$2').replace(/([a-z\d])([A-Z])/g, '$1-$2').toLowerCase();
        };

        // ac-prefixer@3.1.0

    }, {}],
    105: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var RE_CSS_WORD = /-([a-z])/g;

        /**
         * @name toDOM
         * @memberOf module:ac-prefixer/utils
         *
         * @function
         *
         * @desc Converts a property to DOM form (i.e., "WebkitPropertyName").
         *
         * @param {String} str
         *        The property in CSS or DOM form.
         *
         * @returns {String} String in DOM form.
         */
        module.exports = function toDOM(str) {
            var i;

            if (str.toLowerCase() === 'float') {
                return 'cssFloat';
            }

            str = str.replace(RE_CSS_WORD, function(str, m1) {
                return m1.toUpperCase();
            });

            if (str.substr(0, 2) === 'Ms') {
                str = 'ms' + str.substring(2);
            }

            return str;
        };

        // ac-prefixer@3.1.0

    }, {}],
    106: [function(require, module, exports) {
        if (!Array.prototype.filter) {
            /**
            	Tests all elements in an array and returns a new array filled with elements that pass the test.
            	@param {Function} callback Function to test against. The callback must return a boolean value.
            	@param {Object} thisObj Object to use as `this` when executing the callback.
            	@returns {Array} Returns a new array populated with values from the original array that passed the test implemented by the provided function.
            	@reference https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/filter
            */
            Array.prototype.filter = function filter(callback, thisObj) {
                var arrayObject = Object(this);
                // Mimic ES5 spec call for interanl method ToUint32()
                var len = arrayObject.length >>> 0;
                var i;
                var results = [];

                // Callback must be a callable function
                if (typeof callback !== 'function') {
                    throw new TypeError(callback + ' is not a function');
                }

                for (i = 0; i < len; i += 1) {
                    if (i in arrayObject && callback.call(thisObj, arrayObject[i], i, arrayObject)) {
                        results.push(arrayObject[i]);
                    }
                }

                return results;
            };
        }
    }, {}],
    107: [function(require, module, exports) {
        if (!Array.prototype.some) {
            /**
            	Essentially the opposite of Array.prototype.every, Array.prototype.some calls a provided callback function once
            	for each element in an array, until the callback function returns true.
            	@param {Function} callback The fucntion to execute on each element in the array. The return value must evaluate to
            	a boolean true in order for the entire method to return true.
            	@param {Object} thisObj Optional; The object to use as `this` when executing the callback
            	@returns {Boolean} true if the callback returns a true value, otherwise false.
            */
            Array.prototype.some = function some(callback, thisObj) {
                var arrayObj = Object(this);
                // Mimic ES5 spec call for interanl method ToUint32()
                var len = arrayObj.length >>> 0;
                var i;

                if (typeof callback !== 'function') {
                    throw new TypeError(callback + ' is not a function');
                }

                for (i = 0; i < len; i += 1) {
                    if (i in arrayObj && callback.call(thisObj, arrayObj[i], i, arrayObj) === true) {
                        return true;
                    }
                }

                return false;
            };
        }
    }, {}],
    108: [function(require, module, exports) {
        'use strict';

        var BrowserData = require('./ac-browser/BrowserData');
        var webkitRegExp = /applewebkit/i;
        var IE = require('./ac-browser/IE');

        /**
         * Reports information about the user's browser and device
         * based on the userAgent string and feature detection.
         * @reference http://www.quirksmode.org/js/detect.html
         * @name module:ac-browser
         * @kind namespace
         */
        var browser = BrowserData.create();

        /**
         * Returns true/false whether the browser is WebKit based
         * @param  {String}  userAgentString
         * @return {Boolean}
         * @name module:ac-browser.isWebKit
         * @kind function
         */
        browser.isWebKit = function(userAgentString) {
            var userAgent = userAgentString || window.navigator.userAgent;
            return userAgent ? !!webkitRegExp.test(userAgent) : false;
        };

        /**
         * @type {String}
         * @name module:ac-browser.lowerCaseUserAgent
         */
        browser.lowerCaseUserAgent = navigator.userAgent.toLowerCase();

        if (browser.name === 'IE') {
            /**
             * Only available in Internet Explorer
             * @name module:ac-browser.IE
             * @kind namespace
             */
            browser.IE = {
                /**
                 * The emulated Internet Explorer version, which may not match actual version
                 * @name module:ac-browser.IE.documentMode
                 * @type {Number}
                 */
                documentMode: IE.getDocumentMode()
            };
        }

        module.exports = browser;

    }, {
        "./ac-browser/BrowserData": 109,
        "./ac-browser/IE": 110
    }],
    109: [function(require, module, exports) {
        'use strict';

        require('ac-polyfills/Array/prototype.filter');
        require('ac-polyfills/Array/prototype.some');

        var _data = require('./data');

        function BrowserData() {}

        BrowserData.prototype = {
            /**
             * Parses string (such as userAgent) and returns the browser version
             * @param  {String} stringToSearch
             * @return {Number}
             */
            __getBrowserVersion: function(stringToSearch, identity) {
                var version;

                if (!stringToSearch || !identity) {
                    return;
                }

                // Filters data.browser for the members with identities equal to identity
                var filteredData = _data.browser.filter(function(item) {
                    return item.identity === identity;
                });

                filteredData.some(function(item) {
                    var versionSearchString = item.versionSearch || identity;
                    var index = stringToSearch.indexOf(versionSearchString);

                    if (index > -1) {
                        version = parseFloat(stringToSearch.substring(index + versionSearchString.length + 1));
                        return true;
                    }
                });

                return version;
            },

            /**
             * Alias for __getIdentityStringFromArray
             * @param  {Array} browserData | Expects data.browser
             * @return {String}
             */
            __getName: function(dataBrowser) {
                return this.__getIdentityStringFromArray(dataBrowser);
            },

            /**
             * Expects single member of data.browser or data.os
             * and returns a string to be used in os or name.
             * @param  {Object} item
             * @return {String}
             */
            __getIdentity: function(item) {
                if (item.string) {
                    return this.__matchSubString(item);
                } else if (item.prop) {
                    return item.identity;
                }
            },

            /**
             * Iterates through data.browser or data.os returning the correct
             * browser or os identity
             * @param  {Array} dataArray
             * @return {String}
             */
            __getIdentityStringFromArray: function(dataArray) {
                for (var i = 0, l = dataArray.length, identity; i < l; i++) {
                    identity = this.__getIdentity(dataArray[i]);
                    if (identity) {
                        return identity;
                    }
                }
            },

            /**
             * Alias for __getIdentityStringFromArray
             * @param  {Array} OSData | Expects data.os
             * @return {String}
             */
            __getOS: function(dataOS) {
                return this.__getIdentityStringFromArray(dataOS);
            },

            /**
             * Parses string (such as userAgent) and returns the operating system version
             * @param {String} stringToSearch
             * @param {String} osIdentity
             * @return {String|Number} int if not a decimal delimited version
             */
            __getOSVersion: function(stringToSearch, osIdentity) {

                if (!stringToSearch || !osIdentity) {
                    return;
                }

                // Filters data.os returning the member with an identity equal to osIdentity
                var filteredData = _data.os.filter(function(item) {
                    return item.identity === osIdentity;
                })[0];

                var versionSearchString = filteredData.versionSearch || osIdentity;
                var regex = new RegExp(versionSearchString + ' ([\\d_\\.]+)', 'i');
                var version = stringToSearch.match(regex);

                if (version !== null) {
                    return version[1].replace(/_/g, '.');
                }
            },

            /**
             * Regular expression and indexOf against item.string using item.subString as the pattern
             * @param  {Object} item
             * @return {String}
             */
            __matchSubString: function(item) {
                var subString = item.subString;
                if (subString) {
                    var matches = subString.test ? !!subString.test(item.string) : item.string.indexOf(subString) > -1;
                    if (matches) {
                        return item.identity;
                    }
                }
            }
        };

        BrowserData.create = function() {
            var instance = new BrowserData();
            var out = {};
            /**
             * @type {String}
             * @name module:ac-browser.name
             */
            out.name = instance.__getName(_data.browser);
            /**
             * @type {String}
             * @name module:ac-browser.version
             */
            out.version = instance.__getBrowserVersion(_data.versionString, out.name);
            /**
             * @type {String}
             * @name module:ac-browser.os
             */
            out.os = instance.__getOS(_data.os);
            /**
             * @type {String}
             * @name module:ac-browser.osVersion
             */
            out.osVersion = instance.__getOSVersion(_data.versionString, out.os);
            return out;
        };

        module.exports = BrowserData;

    }, {
        "./data": 111,
        "ac-polyfills/Array/prototype.filter": 106,
        "ac-polyfills/Array/prototype.some": 107
    }],
    110: [function(require, module, exports) {
        'use strict';

        module.exports = {
            /**
             * Detect what version or document/standards mode IE is rendering the page as.
             * Accounts for later versions of IE rendering pages in earlier standards modes. E.G. it is
             * possible to set the X-UA-Compatible tag to tell IE9 to render pages in IE7 standards mode.//
             * Based on Microsoft test
             * @see http://msdn.microsoft.com/en-us/library/jj676915(v=vs.85).aspx
             */
            getDocumentMode: function() {
                var ie;

                // IE8 or later
                if (document.documentMode) {
                    ie = parseInt(document.documentMode, 10);
                    // IE 5-7
                } else {
                    // Assume quirks mode unless proven otherwise
                    ie = 5;
                    if (document.compatMode) {
                        // standards mode
                        if (document.compatMode === "CSS1Compat") {
                            ie = 7;
                        }
                    }
                    // There is no test for IE6 standards mode because that mode
                    // was replaced by IE7 standards mode; there is no emulation.
                }
                return ie;
            }
        };

    }, {}],
    111: [function(require, module, exports) {
        'use strict';

        module.exports = {
            // Used to test getName
            browser: [{
                    string: window.navigator.userAgent,
                    subString: "Edge",
                    identity: "Edge"
                }, {
                    string: window.navigator.userAgent,
                    subString: "Chrome",
                    identity: "Chrome"
                }, {
                    string: window.navigator.userAgent,
                    subString: /silk/i,
                    identity: "Silk"
                }, {
                    string: window.navigator.userAgent,
                    subString: "OmniWeb",
                    versionSearch: "OmniWeb/",
                    identity: "OmniWeb"
                }, {
                    string: window.navigator.userAgent,
                    subString: /mobile\/[^\s]*\ssafari\//i,
                    identity: "Safari Mobile",
                    versionSearch: "Version"
                }, {
                    string: window.navigator.vendor,
                    subString: "Apple",
                    identity: "Safari",
                    versionSearch: "Version"
                }, {
                    prop: window.opera,
                    identity: "Opera",
                    versionSearch: "Version"
                }, {
                    string: window.navigator.vendor,
                    subString: "iCab",
                    identity: "iCab"
                }, {
                    string: window.navigator.vendor,
                    subString: "KDE",
                    identity: "Konqueror"
                }, {
                    string: window.navigator.userAgent,
                    subString: "Firefox",
                    identity: "Firefox"
                }, {
                    string: window.navigator.vendor,
                    subString: "Camino",
                    identity: "Camino"
                }, { // for newer Netscapes (6+)
                    string: window.navigator.userAgent,
                    subString: "Netscape",
                    identity: "Netscape"
                },
                // IE < 11
                {
                    string: window.navigator.userAgent,
                    subString: "MSIE",
                    identity: "IE",
                    versionSearch: "MSIE"
                },
                // IE >= 11
                {
                    string: window.navigator.userAgent,
                    subString: "Trident",
                    identity: "IE",
                    versionSearch: "rv"
                }, {
                    string: window.navigator.userAgent,
                    subString: "Gecko",
                    identity: "Mozilla",
                    versionSearch: "rv"
                }, { // for older Netscapes (4-)
                    string: window.navigator.userAgent,
                    subString: "Mozilla",
                    identity: "Netscape",
                    versionSearch: "Mozilla"
                }
            ],
            // Used to test getOS
            os: [{
                string: window.navigator.platform,
                subString: "Win",
                identity: "Windows",
                versionSearch: "Windows NT"
            }, {
                string: window.navigator.platform,
                subString: "Mac",
                identity: "OS X"
            }, {
                string: window.navigator.userAgent,
                subString: "iPhone",
                identity: "iOS",
                versionSearch: "iPhone OS"
            }, {
                string: window.navigator.userAgent,
                subString: "iPad",
                identity: "iOS",
                versionSearch: "CPU OS"
            }, {
                string: window.navigator.userAgent,
                subString: /android/i,
                identity: "Android"
            }, {
                string: window.navigator.platform,
                subString: "Linux",
                identity: "Linux"
            }],
            // Used to test version and osVersion
            versionString: window.navigator.userAgent || window.navigator.appVersion || undefined
        };

    }, {}],
    112: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var globalsHelper = require('./helpers/globals');
        var once = require('@marcom/ac-function/once');

        /**
         * @name module:ac-feature.sessionStorageAvailable
         *
         * @function
         *
         * @desc Returns the availability of HTML5 sessionStorage.
         *       Privacy mode must be disabled and cookies must be enabled.
         *
         * @returns {Boolean} `true` if sessionStorage is available, otherwise `false`.
         */
        function sessionStorageAvailable() {
            var windowObj = globalsHelper.getWindow();
            var available = false;

            try {
                if ('sessionStorage' in windowObj && typeof windowObj.sessionStorage.setItem === 'function') {
                    windowObj.sessionStorage.setItem('ac_feature', 'test');
                    available = true;
                    windowObj.sessionStorage.removeItem('ac_feature', 'test');
                }
            } catch (e) {}

            return available;
        }

        module.exports = once(sessionStorageAvailable);
        module.exports.original = sessionStorageAvailable;

        // ac-feature@2.2.1

    }, {
        "./helpers/globals": 83,
        "@marcom/ac-function/once": 93
    }],
    113: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var globalsHelper = require('./helpers/globals');
        var once = require('@marcom/ac-function/once');

        /**
         * @name module:ac-feature.svgAvailable
         *
         * @function
         *
         * @desc Returns the availability of SVG for <img> tags and background images.
         *
         * @returns {Boolean} `true` if SVG is supported, otherwise `false`.
         */
        function svgAvailable() {
            var documentObj = globalsHelper.getDocument();

            return !!documentObj.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#Image', '1.1');
        }

        module.exports = once(svgAvailable);
        module.exports.original = svgAvailable;

        // ac-feature@2.2.1

    }, {
        "./helpers/globals": 83,
        "@marcom/ac-function/once": 93
    }],
    114: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var getStyleValue = require('@marcom/ac-prefixer/getStyleValue');
        var once = require('@marcom/ac-function/once');

        /**
         * @name module:ac-feature.threeDTransformsAvailable
         *
         * @function
         *
         * @desc Returns the availability of 3D transforms (e.g., 'translateZ').
         *
         * @returns {Boolean} `true` if 3D transforms are supported, otherwise `false`.
         */
        function threeDTransformsAvailable() {
            return !!(getStyleValue('perspective', '1px') && getStyleValue('transform', 'translateZ(0)'));
        }

        module.exports = once(threeDTransformsAvailable);
        module.exports.original = threeDTransformsAvailable;

        // ac-feature@2.2.1

    }, {
        "@marcom/ac-function/once": 93,
        "@marcom/ac-prefixer/getStyleValue": 96
    }],
    115: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var globalsHelper = require('./helpers/globals');
        var once = require('@marcom/ac-function/once');

        /**
         * @name module:ac-feature.touchAvailable
         *
         * @function
         *
         * @desc Returns the availability of touch events.
         *
         * @returns {Boolean} `true` if touch events are supported, otherwise `false`.
         */
        function touchAvailable() {
            var windowObj = globalsHelper.getWindow();
            var documentObj = globalsHelper.getDocument();
            var navigatorObj = globalsHelper.getNavigator();

            // DocumentTouch is specific to Firefox <25 support.
            // navigator.maxTouchPoints and navigator.msMaxTouchPoints are specific to IE10 & 11
            return !!(('ontouchstart' in windowObj) ||
                (windowObj.DocumentTouch && documentObj instanceof windowObj.DocumentTouch) ||
                (navigatorObj.maxTouchPoints > 0) ||
                (navigatorObj.msMaxTouchPoints > 0));
        }

        module.exports = once(touchAvailable);
        module.exports.original = touchAvailable;

        // ac-feature@2.2.1

    }, {
        "./helpers/globals": 83,
        "@marcom/ac-function/once": 93
    }],
    116: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var globalsHelper = require('./helpers/globals');
        var once = require('@marcom/ac-function/once');

        /**
         * @name module:ac-feature.webGLAvailable
         *
         * @function
         *
         * @desc Returns the availability of the HTML5 webGL API.
         *
         * @returns {Boolean} `true` if the browser supports webGL, otherwise `false`.
         */
        function webGLAvailable() {
            var documentObj = globalsHelper.getDocument();
            var canvas = documentObj.createElement('canvas');

            if (typeof canvas.getContext === 'function') {
                return !!(canvas.getContext('webgl') || canvas.getContext('experimental-webgl'));
            }

            return false;
        }

        module.exports = once(webGLAvailable);
        module.exports.original = webGLAvailable;

        // ac-feature@2.2.1

    }, {
        "./helpers/globals": 83,
        "@marcom/ac-function/once": 93
    }],
    117: [function(require, module, exports) {
        /**
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        require('@marcom/ac-polyfills/Array/isArray');

        /** @ignore */
        var extend = require('./extend');
        var hasOwnProp = Object.prototype.hasOwnProperty;
        var deepClone = function(dest, source) {
            var prop;
            for (prop in source) {
                // Anything that does not prototype Object will not have this method
                if (hasOwnProp.call(source, prop)) {
                    if (source[prop] === null) {
                        dest[prop] = null;
                    } else if (typeof source[prop] === 'object') {
                        dest[prop] = Array.isArray(source[prop]) ? [] : {};
                        deepClone(dest[prop], source[prop]);
                    } else {
                        dest[prop] = source[prop];
                    }
                }
            }
            return dest;
        };

        /**
         * @name module:ac-object.clone
         *
         * @function
         *
         * @desc Create a new Object that has the same properties as the original.
         *
         * @param {Object} object
         *        The Object to make a clone of.
         *
         * @param {Boolean} [deep=false]
         *        If `true` the clone will be deep. Defaults to shallow.
         *
         * @returns {Object} The cloned object.
         */
        module.exports = function clone(object, deep) {
            if (deep) {
                return deepClone({}, object);
            }
            return extend({}, object);
        };

        // ac-object@1.2.0

    }, {
        "./extend": 120,
        "@marcom/ac-polyfills/Array/isArray": 128
    }],
    118: [function(require, module, exports) {
        /**
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var F = function() {};

        /**
         * @name module:ac-object.create
         *
         * @function
         *
         * @desc Create a new Object who’s prototype is the object passed
         *
         * @see  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create
         *
         * @param {Object} proto
         *        The prototype for the new Object
         *
         * @returns {Object} The new Object
         */
        module.exports = function create(proto) {
            // Don’t support second argument because it is not possible to accurately polyfill
            if (arguments.length > 1) {
                throw new Error('Second argument not supported');
            }

            // Prototype object is required
            if (proto === null || typeof proto !== 'object') {
                throw new TypeError('Object prototype may only be an Object.');
            }

            // If native Object.create exists, use it!
            if (typeof Object.create === 'function') {
                return Object.create(proto);

                // Otherwise create a new Object F with the prototype provided assigned to it
            } else {
                F.prototype = proto;
                return new F();
            }
        };

        // ac-object@1.2.0

    }, {}],
    119: [function(require, module, exports) {
        /** 
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var extend = require('./extend');

        /**
         * @name module:ac-object.defaults
         *
         * @function
         *
         * @desc Combines defaults and options into a new object and returns it.
         *
         * @param {Object} defaultsObj
         *        The defaults object.
         *
         * @param {Object} options
         *        The options object.
         *
         * @returns {Object} An object resulting from the combination of defaults and options.
         */
        module.exports = function defaults(defaultsObj, options) {
            if (typeof defaultsObj !== 'object') {
                throw new TypeError('defaults: must provide a defaults object');
            }
            options = options || {};
            if (typeof options !== 'object') {
                throw new TypeError('defaults: options must be a typeof object');
            }
            return extend({}, defaultsObj, options);
        };

        // ac-object@1.2.0

    }, {
        "./extend": 120
    }],
    120: [function(require, module, exports) {
        /**
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        require('@marcom/ac-polyfills/Array/prototype.forEach');

        /** @ignore */
        var hasOwnProp = Object.prototype.hasOwnProperty;

        /**
         * @name module:ac-object.extend
         *
         * @function
         *
         * @desc Add properties from one object into another. Not a deep copy.
         *
         * @param {Object} destination
         *        The object where the properties will end up. Properties in this Object
         *        that have the same key as properties in the source object will be
         *        overwritten with the source property’s value. If destination is not
         *        provided a blank object is created.
         *
         * @param {Object} source
         *        The properties to add / overwrite in the destination Object. An infinite
         *        number of source paramaters may be passed.
         *
         * @returns {Object} The extended object.
         */
        module.exports = function extend() {
            var args;
            var dest;

            if (arguments.length < 2) {
                args = [{}, arguments[0]];
            } else {
                args = [].slice.call(arguments);
            }

            dest = args.shift();

            args.forEach(function(source) {
                if (source != null) {
                    for (var property in source) {
                        // Anything that does not prototype Object will not have this method
                        if (hasOwnProp.call(source, property)) {
                            dest[property] = source[property];
                        }
                    }
                }
            });

            return dest;
        };

        // ac-object@1.2.0

    }, {
        "@marcom/ac-polyfills/Array/prototype.forEach": 130
    }],
    121: [function(require, module, exports) {
        /** 
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var hasOwnProp = Object.prototype.hasOwnProperty;

        /**
         * @name module:ac-object.getPrototypeOf
         *
         * @function
         *
         * @desc Returns the prototype (i.e. the internal [[Prototype]]) of the specified object.
         *
         * @param {Object} obj
         *        The object whose prototype is to be returned.
         *
         * @returns {Object} The prototype of the specified object.
         */
        module.exports = function getPrototypeOf(obj) {
            if (Object.getPrototypeOf) {
                return Object.getPrototypeOf(obj);
            } else {
                if (typeof obj !== 'object') {
                    throw new Error('Requested prototype of a value that is not an object.');
                } else if (typeof this.__proto__ === 'object') {
                    return obj.__proto__;
                } else {
                    var constructor = obj.constructor;
                    var oldConstructor;
                    if (hasOwnProp.call(obj, 'constructor')) {
                        oldConstructor = constructor;
                        // reset constructor
                        if (!(delete obj.constructor)) {
                            // can't delete obj.constructor, return null
                            return null;
                        }
                        // get real constructor
                        constructor = obj.constructor;
                        // restore constructor
                        obj.constructor = oldConstructor;
                    }
                    // needed for IE
                    return constructor ? constructor.prototype : null;
                }
            }
        };

        // ac-object@1.2.0

    }, {}],
    122: [function(require, module, exports) {
        /**
         * @module ac-object
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        module.exports = {
            clone: require('./clone'),
            create: require('./create'),
            defaults: require('./defaults'),
            extend: require('./extend'),
            getPrototypeOf: require('./getPrototypeOf'),
            isDate: require('./isDate'),
            isEmpty: require('./isEmpty'),
            isRegExp: require('./isRegExp'),
            toQueryParameters: require('./toQueryParameters')
        };

        // ac-object@1.2.0

    }, {
        "./clone": 117,
        "./create": 118,
        "./defaults": 119,
        "./extend": 120,
        "./getPrototypeOf": 121,
        "./isDate": 123,
        "./isEmpty": 124,
        "./isRegExp": 125,
        "./toQueryParameters": 127
    }],
    123: [function(require, module, exports) {
        /** 
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /**
         * @name module:ac-object.isDate
         *
         * @function
         *
         * @desc Test an Object to see if it is an instance of the Date constructor or not.
         *
         * @param {Object} date
         *        The Object to test.
         *
         * @returns {Boolean} If the Object is a Date or not.
         */
        module.exports = function isDate(date) {
            return Object.prototype.toString.call(date) === '[object Date]';
        };

        // ac-object@1.2.0

    }, {}],
    124: [function(require, module, exports) {
        /** 
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var hasOwnProp = Object.prototype.hasOwnProperty;

        /**
         * @name module:ac-object.isEmpty
         *
         * @function
         *
         * @desc Check if an empty object.
         *
         * @param {Object} object
         *        The Object to check if empty.
         *
         * @returns {Boolean} Return true if and only if object is empty ({}).
         */
        module.exports = function isEmpty(object) {
            var prop;

            if (typeof object !== 'object') {
                throw new TypeError('ac-base.Object.isEmpty : Invalid parameter - expected object');
            }

            for (prop in object) {
                if (hasOwnProp.call(object, prop)) {
                    return false;
                }
            }

            return true;
        };

        // ac-object@1.2.0

    }, {}],
    125: [function(require, module, exports) {
        /** 
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /**
         * @name module:ac-object.isRegExp
         *
         * @function
         *
         * @desc Test whether or not an Object is a Regular Expression.
         *
         * @param {Object} obj
         *        Object to test whether or not it is a Regular Expression.
         *
         * @returns {Boolean} Whether or not it is a Regular Expression.
         */
        module.exports = function isRegExp(obj) {
            return window.RegExp ? obj instanceof RegExp : false;
        };

        // ac-object@1.2.0

    }, {}],
    126: [function(require, module, exports) {
        /**
         * Object#toString() ref for stringify().
         */

        var toString = Object.prototype.toString;

        /**
         * Object#hasOwnProperty ref
         */

        var hasOwnProperty = Object.prototype.hasOwnProperty;

        /**
         * Array#indexOf shim.
         */

        var indexOf = typeof Array.prototype.indexOf === 'function' ? function(arr, el) {
            return arr.indexOf(el);
        } : function(arr, el) {
            for (var i = 0; i < arr.length; i++) {
                if (arr[i] === el) return i;
            }
            return -1;
        };

        /**
         * Array.isArray shim.
         */

        var isArray = Array.isArray || function(arr) {
            return toString.call(arr) == '[object Array]';
        };

        /**
         * Object.keys shim.
         */

        var objectKeys = Object.keys || function(obj) {
            var ret = [];
            for (var key in obj) {
                if (obj.hasOwnProperty(key)) {
                    ret.push(key);
                }
            }
            return ret;
        };

        /**
         * Array#forEach shim.
         */

        var forEach = typeof Array.prototype.forEach === 'function' ? function(arr, fn) {
            return arr.forEach(fn);
        } : function(arr, fn) {
            for (var i = 0; i < arr.length; i++) fn(arr[i]);
        };

        /**
         * Array#reduce shim.
         */

        var reduce = function(arr, fn, initial) {
            if (typeof arr.reduce === 'function') return arr.reduce(fn, initial);
            var res = initial;
            for (var i = 0; i < arr.length; i++) res = fn(res, arr[i]);
            return res;
        };

        /**
         * Cache non-integer test regexp.
         */

        var isint = /^[0-9]+$/;

        function promote(parent, key) {
            if (parent[key].length == 0) return parent[key] = {}
            var t = {};
            for (var i in parent[key]) {
                if (hasOwnProperty.call(parent[key], i)) {
                    t[i] = parent[key][i];
                }
            }
            parent[key] = t;
            return t;
        }

        function parse(parts, parent, key, val) {
            var part = parts.shift();

            // illegal
            if (hasOwnProperty.call(Object.prototype, key)) return;

            // end
            if (!part) {
                if (isArray(parent[key])) {
                    parent[key].push(val);
                } else if ('object' == typeof parent[key]) {
                    parent[key] = val;
                } else if ('undefined' == typeof parent[key]) {
                    parent[key] = val;
                } else {
                    parent[key] = [parent[key], val];
                }
                // array
            } else {
                var obj = parent[key] = parent[key] || [];
                if (']' == part) {
                    if (isArray(obj)) {
                        if ('' != val) obj.push(val);
                    } else if ('object' == typeof obj) {
                        obj[objectKeys(obj).length] = val;
                    } else {
                        obj = parent[key] = [parent[key], val];
                    }
                    // prop
                } else if (~indexOf(part, ']')) {
                    part = part.substr(0, part.length - 1);
                    if (!isint.test(part) && isArray(obj)) obj = promote(parent, key);
                    parse(parts, obj, part, val);
                    // key
                } else {
                    if (!isint.test(part) && isArray(obj)) obj = promote(parent, key);
                    parse(parts, obj, part, val);
                }
            }
        }

        /**
         * Merge parent key/val pair.
         */

        function merge(parent, key, val) {
            if (~indexOf(key, ']')) {
                var parts = key.split('['),
                    len = parts.length,
                    last = len - 1;
                parse(parts, parent, 'base', val);
                // optimize
            } else {
                if (!isint.test(key) && isArray(parent.base)) {
                    var t = {};
                    for (var k in parent.base) t[k] = parent.base[k];
                    parent.base = t;
                }
                set(parent.base, key, val);
            }

            return parent;
        }

        /**
         * Compact sparse arrays.
         */

        function compact(obj) {
            if ('object' != typeof obj) return obj;

            if (isArray(obj)) {
                var ret = [];

                for (var i in obj) {
                    if (hasOwnProperty.call(obj, i)) {
                        ret.push(obj[i]);
                    }
                }

                return ret;
            }

            for (var key in obj) {
                obj[key] = compact(obj[key]);
            }

            return obj;
        }

        /**
         * Parse the given obj.
         */

        function parseObject(obj) {
            var ret = {
                base: {}
            };

            forEach(objectKeys(obj), function(name) {
                merge(ret, name, obj[name]);
            });

            return compact(ret.base);
        }

        /**
         * Parse the given str.
         */

        function parseString(str) {
            var ret = reduce(String(str).split('&'), function(ret, pair) {
                var eql = indexOf(pair, '='),
                    brace = lastBraceInKey(pair),
                    key = pair.substr(0, brace || eql),
                    val = pair.substr(brace || eql, pair.length),
                    val = val.substr(indexOf(val, '=') + 1, val.length);

                // ?foo
                if ('' == key) key = pair, val = '';
                if ('' == key) return ret;

                return merge(ret, decode(key), decode(val));
            }, {
                base: {}
            }).base;

            return compact(ret);
        }

        /**
         * Parse the given query `str` or `obj`, returning an object.
         *
         * @param {String} str | {Object} obj
         * @return {Object}
         * @api public
         */

        exports.parse = function(str) {
            if (null == str || '' == str) return {};
            return 'object' == typeof str ? parseObject(str) : parseString(str);
        };

        /**
         * Turn the given `obj` into a query string
         *
         * @param {Object} obj
         * @return {String}
         * @api public
         */

        var stringify = exports.stringify = function(obj, prefix) {
            if (isArray(obj)) {
                return stringifyArray(obj, prefix);
            } else if ('[object Object]' == toString.call(obj)) {
                return stringifyObject(obj, prefix);
            } else if ('string' == typeof obj) {
                return stringifyString(obj, prefix);
            } else {
                return prefix + '=' + encodeURIComponent(String(obj));
            }
        };

        /**
         * Stringify the given `str`.
         *
         * @param {String} str
         * @param {String} prefix
         * @return {String}
         * @api private
         */

        function stringifyString(str, prefix) {
            if (!prefix) throw new TypeError('stringify expects an object');
            return prefix + '=' + encodeURIComponent(str);
        }

        /**
         * Stringify the given `arr`.
         *
         * @param {Array} arr
         * @param {String} prefix
         * @return {String}
         * @api private
         */

        function stringifyArray(arr, prefix) {
            var ret = [];
            if (!prefix) throw new TypeError('stringify expects an object');
            for (var i = 0; i < arr.length; i++) {
                ret.push(stringify(arr[i], prefix + '[' + i + ']'));
            }
            return ret.join('&');
        }

        /**
         * Stringify the given `obj`.
         *
         * @param {Object} obj
         * @param {String} prefix
         * @return {String}
         * @api private
         */

        function stringifyObject(obj, prefix) {
            var ret = [],
                keys = objectKeys(obj),
                key;

            for (var i = 0, len = keys.length; i < len; ++i) {
                key = keys[i];
                if ('' == key) continue;
                if (null == obj[key]) {
                    ret.push(encodeURIComponent(key) + '=');
                } else {
                    ret.push(stringify(obj[key], prefix ? prefix + '[' + encodeURIComponent(key) + ']' : encodeURIComponent(key)));
                }
            }

            return ret.join('&');
        }

        /**
         * Set `obj`'s `key` to `val` respecting
         * the weird and wonderful syntax of a qs,
         * where "foo=bar&foo=baz" becomes an array.
         *
         * @param {Object} obj
         * @param {String} key
         * @param {String} val
         * @api private
         */

        function set(obj, key, val) {
            var v = obj[key];
            if (hasOwnProperty.call(Object.prototype, key)) return;
            if (undefined === v) {
                obj[key] = val;
            } else if (isArray(v)) {
                v.push(val);
            } else {
                obj[key] = [v, val];
            }
        }

        /**
         * Locate last brace in `str` within the key.
         *
         * @param {String} str
         * @return {Number}
         * @api private
         */

        function lastBraceInKey(str) {
            var len = str.length,
                brace, c;
            for (var i = 0; i < len; ++i) {
                c = str[i];
                if (']' == c) brace = false;
                if ('[' == c) brace = true;
                if ('=' == c && !brace) return i;
            }
        }

        /**
         * Decode `str`.
         *
         * @param {String} str
         * @return {String}
         * @api private
         */

        function decode(str) {
            try {
                return decodeURIComponent(str.replace(/\+/g, ' '));
            } catch (err) {
                return str;
            }
        }

    }, {}],
    127: [function(require, module, exports) {
        /** 
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var qs = require('qs');

        /**
         * @name module:ac-object.toQueryParameters
         *
         * @function
         *
         * @desc Convert object to query string.
         *
         * @param {Object} object
         *        The Object to convert to a query string.
         *
         * @returns {String} Returns query string representation of object.
         */
        module.exports = function toQueryParameters(object) {
            if (typeof object !== 'object') {
                throw new TypeError('toQueryParameters error: argument is not an object');
            }
            return qs.stringify(object);
        };

        // ac-object@1.2.0

    }, {
        "qs": 126
    }],
    128: [function(require, module, exports) {
        if (!Array.isArray) {
            /**
             * Returns true if an object is an array, false if it is not.
             * @param {Object} object Object to test against.
             * @name Array.isArray
             */
            Array.isArray = function(arg) {
                return Object.prototype.toString.call(arg) === '[object Array]';
            };
        }
        // ac-polyfills@2.2.2

    }, {}],
    129: [function(require, module, exports) {
        if (!Array.prototype.filter) {
            /**
            	Tests all elements in an array and returns a new array filled with elements that pass the test.
            	@param {Function} callback Function to test against. The callback must return a boolean value.
            	@param {Object} thisObj Object to use as `this` when executing the callback.
            	@returns {Array} Returns a new array populated with values from the original array that passed the test implemented by the provided function.
            	@reference https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/filter
            */
            Array.prototype.filter = function filter(callback, thisObj) {
                var arrayObject = Object(this);
                // Mimic ES5 spec call for interanl method ToUint32()
                var len = arrayObject.length >>> 0;
                var i;
                var results = [];

                // Callback must be a callable function
                if (typeof callback !== 'function') {
                    throw new TypeError(callback + ' is not a function');
                }

                for (i = 0; i < len; i += 1) {
                    if (i in arrayObject && callback.call(thisObj, arrayObject[i], i, arrayObject)) {
                        results.push(arrayObject[i]);
                    }
                }

                return results;
            };
        }
        // ac-polyfills@2.2.2

    }, {}],
    130: [function(require, module, exports) {
        if (!Array.prototype.forEach) {
            /**
            	Executes a provided function once per array element.
            	@param callback {Function} Object to test against.
            	@param thisObj {Object} What the callback method is bound to.
            */
            Array.prototype.forEach = function forEach(callback, thisObj) {
                var arrayObject = Object(this);
                // Mimic ES5 spec call for interanl method ToUint32()
                var i;
                var currentValue;

                if (typeof callback !== 'function') {
                    throw new TypeError('No function object passed to forEach.');
                }

                for (i = 0; i < this.length; i += 1) {
                    currentValue = arrayObject[i];
                    callback.call(thisObj, currentValue, i, arrayObject);
                }
            };
        }
        // ac-polyfills@2.2.2

    }, {}],
    131: [function(require, module, exports) {
        if (!Array.prototype.indexOf) {
            /**
            	Returns the first (least) index of an element within the array equal to the specified value, or -1 if none is found.
            	@param searchElement {Object} Element to locate in the array.
            	@param fromIndex {Number} Optional; the index at which to begin the search. Defaults to 0, i.e. the whole array will be searched. If the index is greater than or equal to the length of the array, -1 is returned, i.e. the array will not be searched. If negative, it is taken as the offset from the end of the array. Note that even when the index is negative, the array is still searched from front to back. If the calculated index is less than 0, the whole array will be searched.
            */
            Array.prototype.indexOf = function indexOf(searchElement, fromIndex) {
                var startIndex = fromIndex || 0;
                var currentIndex = 0;

                if (startIndex < 0) {
                    startIndex = this.length + fromIndex - 1;
                    if (startIndex < 0) {
                        throw 'Wrapped past beginning of array while looking up a negative start index.';
                    }
                }

                for (currentIndex = 0; currentIndex < this.length; currentIndex++) {
                    if (this[currentIndex] === searchElement) {
                        return currentIndex;
                    }
                }

                return (-1);
            };
        }
        // ac-polyfills@2.2.2

    }, {}],
    132: [function(require, module, exports) {
        if (!Array.prototype.reduce) {
            /**
            	<p>Applies an accumulation function to every value in an array from left to right and returns a single value.</p>
            	<p>Usage:</p>
            	<pre>
            	var reduceArray = [1, 2, 3, 4, 5];
            	var reduceFunction = function (previousValue, currentValue, index, array) {
            		return previousValue + currentValue;
            	};
            	console.log(reduceArray.reduce(reduceFunction));
            	</pre>
            	@param {Function} callback The function to execute on each value in the array.
            		<p><code>callback</code> takes four arguments:</p>
            		<dl>
            			<dt><strong>previousValue</strong></dt>
            			<dd>The value previously returned by the last invocation of the callback, or <code>initialValue</code>, if supplied.</dd>
            			<dt><strong>currentValue</strong></dt>
            			<dd>The current array value being processed.</dd>
            			<dt><strong>index</strong></dt>
            			<dd>The index of the current array value being processed in the array.</dd>
            			<dt><strong>array</strong></dt>
            			<dd>The array <code>reduce</code> was called upon.</dd>
            		</dl>
            	@param {Mixed} initialValue Optional; If provided, then the first time the callback is called <code>initialValue</code> will be used
            		as the value for <code>previousValue</code> and <code>currentValue</code> will be equal to the first value in the array. If not
            		provided then <code>previousValue</code> will be equal to the first value in the array and <code>currentValue</code> will be
            		equal to the second.
            	@returns {Mixed} Reduce returns a single value that is the result of the accumulation function applied to each array element.
            */
            Array.prototype.reduce = function reduce(callback, initialValue) {
                var arrayObj = Object(this);
                // Mimic ES5 spec call for interanl method ToUint32()
                var len = arrayObj.length >>> 0;
                var i = 0;
                var result;

                // Callback must be a callable function
                if (typeof callback !== 'function') {
                    throw new TypeError(callback + ' is not a function');
                }

                if (typeof initialValue === 'undefined') {
                    if (!len) {
                        // No value to return if we have an empty array and no initialValue
                        throw new TypeError('Reduce of empty array with no initial value');
                    }
                    result = arrayObj[0];
                    // Start at second element when initialValue is not provided
                    i = 1;
                } else {
                    result = initialValue;
                }

                while (i < len) {
                    if (i in arrayObj) {
                        result = callback.call(undefined, result, arrayObj[i], i, arrayObj);
                        i += 1;
                    }
                }

                return result;
            };
        }
        // ac-polyfills@2.2.2

    }, {}],
    133: [function(require, module, exports) {
        /**
         * Shim for "fixing" IE's lack of support (IE < 9) for applying slice
         * on host objects like NamedNodeMap, NodeList, and HTMLCollection
         * (technically, since host objects have been implementation-dependent,
         * at least before ES6, IE hasn't needed to work this way).
         * Also works on strings, fixes IE < 9 to allow an explicit undefined
         * for the 2nd argument (as in Firefox), and prevents errors when
         * called on other DOM objects.
         *
         * @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice
         */
        (function() {
            'use strict';
            var _slice = Array.prototype.slice;

            try {
                // Can't be used with DOM elements in IE < 9
                _slice.call(document.documentElement);
            } catch (e) { // Fails in IE < 9
                // This will work for genuine arrays, array-like objects, 
                // NamedNodeMap (attributes, entities, notations),
                // NodeList (e.g., getElementsByTagName), HTMLCollection (e.g., childNodes),
                // and will not fail on other DOM objects (as do DOM elements in IE < 9)
                Array.prototype.slice = function(begin, end) {
                    // IE < 9 gets unhappy with an undefined end argument
                    end = (typeof end !== 'undefined') ? end : this.length;

                    // For native Array objects, we use the native slice function
                    if (Object.prototype.toString.call(this) === '[object Array]') {
                        return _slice.call(this, begin, end);
                    }

                    // For array like object we handle it ourselves.
                    var i, cloned = [],
                        size, len = this.length;

                    // Handle negative value for "begin"
                    var start = begin || 0;
                    start = (start >= 0) ? start : len + start;

                    // Handle negative value for "end"
                    var upTo = (end) ? end : len;
                    if (end < 0) {
                        upTo = len + end;
                    }

                    // Actual expected size of the slice
                    size = upTo - start;

                    if (size > 0) {
                        cloned = new Array(size);
                        if (this.charAt) {
                            for (i = 0; i < size; i++) {
                                cloned[i] = this.charAt(start + i);
                            }
                        } else {
                            for (i = 0; i < size; i++) {
                                cloned[i] = this[start + i];
                            }
                        }
                    }

                    return cloned;
                };
            }
        }());
        // ac-polyfills@2.2.2

    }, {}],
    134: [function(require, module, exports) {
        /**
         * The DOM CustomEvent are events initialized by an application for any purpose.
         * https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent
         *
         * This is not compatible with IE < 9.
         *
         * @return {Function} CustomEvent constructor
         */

        if (document.createEvent) {
            try {
                new window.CustomEvent('click');
            } catch (err) {
                window.CustomEvent = (function() {
                    function CustomEvent(event, params) {
                        params = params || {
                            bubbles: false,
                            cancelable: false,
                            detail: undefined
                        };
                        var evt = document.createEvent('CustomEvent');
                        evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);
                        return evt;
                    }
                    CustomEvent.prototype = window.Event.prototype;
                    return CustomEvent;
                }());
            }
        }
        // ac-polyfills@2.2.2

    }, {}],
    135: [function(require, module, exports) {
        /**
        	matchMedia() polyfill - Test a CSS media type/query in JS. Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas. Dual MIT/BSD license
        */
        window.matchMedia = window.matchMedia || (function(doc, undefined) {

            var bool, docElem = doc.documentElement,
                refNode = docElem.firstElementChild || docElem.firstChild,

                // fakeBody required for <FF4 when executed in <head>
                fakeBody = doc.createElement('body'),
                div = doc.createElement('div');

            div.id = 'mq-test-1';
            div.style.cssText = "position:absolute;top:-100em";
            fakeBody.style.background = "none";
            fakeBody.appendChild(div);

            return function(q) {

                div.innerHTML = '&shy;<style media="' + q + '"> #mq-test-1 { width:42px; }</style>';

                docElem.insertBefore(fakeBody, refNode);
                bool = div.offsetWidth === 42;
                docElem.removeChild(fakeBody);

                return {
                    matches: bool,
                    media: q
                };
            };

        }(document));
        // ac-polyfills@2.2.2

    }, {}],
    136: [function(require, module, exports) {
        'use strict';

        var sCode = require('./s-code/s-code');
        var plugins = require('./s-code/plugins');

        // exported `sCode` is a function that gets passed the
        // `s_account` variable, which is a string.
        // once the function is executed, all the `s` variables
        // will be available on the window.
        //
        // The plugins.init method can then be ran.
        // pass the result of the sCode function plugins.init
        module.exports.init = sCode;
        module.exports.plugins = plugins;

        // s-code@2.0.0

    }, {
        "./s-code/plugins": 137,
        "./s-code/s-code": 150
    }],
    137: [function(require, module, exports) {
        'use strict';

        function init(sCode) {
            // utilities
            require('./plugins/utilities/utilities')(sCode);

            // require all plugins
            require('./plugins/customLinkHandler')(sCode);
            require('./plugins/detectRIA')(sCode);
            require('./plugins/deviceOrientationChanges')(sCode);
            require('./plugins/downloadLinkHandler')(sCode);
            require('./plugins/getAndPersistValue')(sCode);
            require('./plugins/getPercentPageViewed')(sCode);
            require('./plugins/getPreviousValue')(sCode);
            require('./plugins/getQueryParam')(sCode);
            require('./plugins/getValOnce')(sCode);
            require('./plugins/setClickMapEmail')(sCode);
            require('./plugins/setDynamicObjectIDs')(sCode);
        }

        module.exports.init = init;

        // s-code@2.0.0

    }, {
        "./plugins/customLinkHandler": 138,
        "./plugins/detectRIA": 139,
        "./plugins/deviceOrientationChanges": 140,
        "./plugins/downloadLinkHandler": 141,
        "./plugins/getAndPersistValue": 142,
        "./plugins/getPercentPageViewed": 143,
        "./plugins/getPreviousValue": 144,
        "./plugins/getQueryParam": 145,
        "./plugins/getValOnce": 146,
        "./plugins/setClickMapEmail": 147,
        "./plugins/setDynamicObjectIDs": 148,
        "./plugins/utilities/utilities": 149
    }],
    138: [function(require, module, exports) {
        'use strict';

        module.exports = function(sCode) {

            /*
             * Plugin: linkHandler 0.5 - identify and report custom links
             */
            sCode.linkHandler = new Function("p", "t", "" + "var s=this,h=s.p_gh(),i,l;t=t?t:'o';if(!h||(s.linkType&&(h||s.linkN" + "ame)))return '';i=h.indexOf('?');h=s.linkLeaveQueryString||i<0?h:h." + "substring(0,i);l=s.pt(p,'|','p_gn',h.toLowerCase());if(l){s.linkNam" + "e=l=='[['?'':l;s.linkType=t;return h;}return '';");

            sCode.p_gn = new Function("t", "h", "" + "var i=t?t.indexOf('~'):-1,n,x;if(t&&h){n=i<0?'':t.substring(0,i);x=" + "t.substring(i+1);if(h.indexOf(x.toLowerCase())>-1)return n?n:'[[';}" + "return 0;");

        };

        // s-code@2.0.0

    }, {}],
    139: [function(require, module, exports) {
        'use strict';

        module.exports = function(sCode) {
            /*
             * Plugin: detectRIA v0.1 - detect and set Flash, Silverlight versions
             */
            sCode.detectRIA = new Function("cn", "fp", "sp", "mfv", "msv", "sf", "" + "cn=cn?cn:'s_ria';msv=msv?msv:2;mfv=mfv?mfv:10;var s=this,sv='',fv=-" + "1,dwi=0,fr='',sr='',w,mt=s.n.mimeTypes,uk=s.c_r(cn),k=s.c_w('s_cc'," + "'true',0)?'Y':'N';fk=uk.substring(0,uk.indexOf('|'));sk=uk.substrin" + "g(uk.indexOf('|')+1,uk.length);if(k=='Y'&&s.p_fo('detectRIA')){if(u" + "k&&!sf){if(fp){s[fp]=fk;}if(sp){s[sp]=sk;}return false;}if(!fk&&fp)" + "{if(s.pl&&s.pl.length){if(s.pl['Shockwave Flash 2.0'])fv=2;x=s.pl['" + "Shockwave Flash'];if(x){fv=0;z=x.description;if(z)fv=z.substring(16" + ",z.indexOf('.'));}}else if(navigator.plugins&&navigator.plugins.len" + "gth){x=navigator.plugins['Shockwave Flash'];if(x){fv=0;z=x.descript" + "ion;if(z)fv=z.substring(16,z.indexOf('.'));}}else if(mt&&mt.length)" + "{x=mt['application/x-shockwave-flash'];if(x&&x.enabledPlugin)fv=0;}" + "if(fv<=0)dwi=1;w=s.u.indexOf('Win')!=-1?1:0;if(dwi&&s.isie&&w&&exec" + "Script){result=false;for(var i=mfv;i>=3&&result!=true;i--){execScri" + "pt('on error resume next: result = IsObject(CreateObject(\"Shockwav" + "eFlash.ShockwaveFlash.'+i+'\"))','VBScript');fv=i;}}fr=fv==-1?'Flas" + "h Not Detected':fv==0?'Flash Enabled (No Version)':'Flash '+fv;}if(" + "!sk&&sp&&s.apv>=4.1){var tc='try{x=new ActiveXObject(\"AgControl.A'" + "+'gControl\");for(var i=msv;i>0;i--){for(var j=9;j>=0;j--){if(x.is'" + "+'VersionSupported(i+\".\"+j)){sv=i+\".\"+j;break;}}if(sv){break;}'" + "+'}}catch(e){try{x=navigator.plugins[\"Silverlight Plug-In\"];sv=x'" + "+'.description.substring(0,x.description.indexOf(\".\")+2);}catch('" + "+'e){}}';eval(tc);sr=sv==''?'Silverlight Not Detected':'Silverlight" + " '+sv;}if((fr&&fp)||(sr&&sp)){s.c_w(cn,fr+'|'+sr,0);if(fr)s[fp]=fr;" + "if(sr)s[sp]=sr;}}");

        };

        // s-code@2.0.0

    }, {}],
    140: [function(require, module, exports) {
        'use strict';

        module.exports = function(sCode) {

            /*
             * Plugin: deviceOrientationChanges v1.1
             *
             */
            sCode.p_oc = new Function("evt", "" + "var o=s.wd.orientation,ot=(Math.abs(o)==90)?'l':'p',cv,v;s.lc=(evt." + "type=='load')?s.lc+1:s.lc;if(s.lc==0)return;if(typeof(o)!='undefine" + "d'){ot=(evt.type=='load')?ot:ot+':'+s.c_r('s_orientationHeight');cv" + "=s.c_r('s_orientation');v=cv?cv+=','+ot:ot;s.c_w('s_orientation',v)" + "}");

            sCode.p_och = new Function("", "" + "var dh=Math.max(Math.max(s.d.body.scrollHeight,s.d.documentElement." + "scrollHeight),Math.max(s.d.body.offsetHeight,s.d.documentElement.of" + "fsetHeight),Math.max(s.d.body.clientHeight,s.d.documentElement.clie" + "ntHeight));vph=s.wd.innerHeight||(s.d.documentElement.clientHeight|" + "|s.d.body.clientHeight),st=s.wd.pageYOffset||(s.wd.document.documen" + "tElement.scrollTop||s.wd.document.body.scrollTop),vh=st+vph;s.c_w('" + "s_orientationHeight',vh);");

            sCode.deviceOrientationChanges = new Function("ext", "" + "var s=this,v;s.lc=0;if(typeof(s.linkType)!='undefined'&&s.linkType!" + "='e')return'';var cv=s.c_r('s_orientation'),cva=(cv.indexOf(',')>-1" + ")?cv.split(','):'';if(cv){if(cva){if(!ext){for(i=1;i<cva.length;i++" + "){cva[i]=cva[i].split(':')[0];}}cva[0]+='@s';cva.push(cva[cva.lengt" + "h-1].split(':')[0]+'@e');v=cva.toString();}else{v=cv+'@s,'+cv+'@e';" + "}}s.c_w('s_orientation','');if(s.wd.addEventListener){s.wd.addEvent" + "Listener('orientationchange',s.p_oc,false);s.wd.addEventListener('l" + "oad',s.p_oc,false);s.wd.addEventListener('load',s.p_och,false);s.wd" + ".addEventListener('scroll',s.p_och,false);}return v;");

        };

        // s-code@2.0.0

    }, {}],
    141: [function(require, module, exports) {
        'use strict';

        module.exports = function(sCode) {
            /*
             * Plugin: downloadLinkHandler 0.5 - identify and report download links
             */
            sCode.downloadLinkHandler = new Function("p", "" + "var s=this,h=s.p_gh(),n='linkDownloadFileTypes',i,t;if(!h||(s.linkT" + "ype&&(h||s.linkName)))return '';i=h.indexOf('?');t=s[n];s[n]=p?p:t;" + "if(s.lt(h)=='d')s.linkType='d';else h='';s[n]=t;return h;");

        };

        // s-code@2.0.0

    }, {}],
    142: [function(require, module, exports) {
        'use strict';

        module.exports = function(sCode) {

            /*
             * Plugin: getAndPersistValue 0.3 - get a value on every page
             */
            sCode.getAndPersistValue = new Function("v", "c", "e", "" + "var s=this,a=new Date;e=e?e:0;a.setTime(a.getTime()+e*86400000);if(" + "v)s.c_w(c,v,e?a:0);return s.c_r(c);");
            sCode.__se = new Function("" + "var l={'~':'tl:[\\'','^': 'kw:[\\'','%': 'ahoo','|': '\\'],','>': '" + "\\']}','*': '.com','$': 'search',';':'query','#':'land','`':'oogle'" + ",'+':'http://www','<':'keyword'};var f=this.___se+'';var g='';for(v" + "ar i=0;i<f.length;i++){if(l[f.substring(i,i+1)]&&typeof l[f.substri" + "ng(i,i+1)]!='undefined'){g+=l[f.substring(i,i+1)];}else{g+=f.substr" + "ing(i,i+1);}}return eval('('+g+')');");
            sCode.___se = "{}";

            sCode.isEntry = new Function("" + "var s=this;var l=s.linkInternalFilters,r=s.referrer||typeof s.refer" + "rer!='undefined'?s.referrer:document.referrer,p=l.indexOf(','),b=0," + "v='';if(!r){return 1;}while(p=l.indexOf(',')){v=p>-1?l.substring(b," + "p):l;if(v=='.'||r.indexOf(v)>-1){return 0;}if(p==-1){break;}b=p+1;l" + "=l.substring(b,l.length);}return 1;");

            sCode.p_fo = new Function("n", "" + "var s=this;if(!s.__fo){s.__fo=new Object;}if(!s.__fo[n]){s.__fo[n]=" + "new Object;return 1;}else {return 0;}");

        };

        // s-code@2.0.0

    }, {}],
    143: [function(require, module, exports) {
        'use strict';

        module.exports = function(sCode) {

            /*
             * Plugin: getPercentPageViewed v1.4 *** Modified for Apple ***
             */
            sCode.handlePPVevents = new Function("", "" + "if(!s.getPPVid)return;var dh=Math.max(Math.max(s.d.body.scrollHeigh" + "t,s.d.documentElement.scrollHeight),Math.max(s.d.body.offsetHeight," + "s.d.documentElement.offsetHeight),Math.max(s.d.body.clientHeight,s." + "d.documentElement.clientHeight)),vph=s.wd.innerHeight||(s.d.documen" + "tElement.clientHeight||s.d.body.clientHeight),st=s.wd.pageYOffset||" + "(s.wd.document.documentElement.scrollTop||s.wd.document.body.scroll" + "Top),vh=st+vph,pv=Math.min(Math.round(vh/dh*100),100),c=s.c_r('s_pp" + "v'),a=(c.indexOf(',')>-1)?c.split(',',5):[],id=(a.length>0)?(a[0]):" + "escape(s.getPPVid),cv=(a.length>1)?parseInt(a[1]):(0),p0=(a.length>" + "2)?parseInt(a[2]):(pv),cy=(a.length>3)?parseInt(a[3]):(0),pt=s._ct," + "ph=s._ch,t=new Date;t.setTime(t.getTime()+1800000);s._ct=new Date()" + ".getTime();s._ch=vh;var sa='',td=Math.round((s._ct-pt)/1000),hd=Mat" + "h.abs(s._ch-ph),lowerBound,upperBound;if(hd&&td){lowerBound=Math.ce" + "il(st/100)*100;upperBound=Math.ceil(s._ch/100)*100;while(lowerBound" + "<=upperBound){if(lowerBound!=0){var value=lowerBound+':'+(td>10?'>'" + ":td);if(s.pxViewedArray.length==0){s.pxViewedArray.push(value);}els" + "e if(s.pxViewedArray.toString().indexOf(lowerBound)==-1){s.pxViewed" + "Array.push(value);}else{for(i=0;i<s.pxViewedArray.length;i++){var a" + "v=s.pxViewedArray[i].split(':');if(lowerBound==av[0]){if(av[1]!='>'" + "){var totalTime=Math.floor((Number(av[1])+Number(td))*100)/100;if(t" + "otalTime>10){totalTime='>';}s.pxViewedArray[i]=av[0]+':'+totalTime;" + "}break;}}}}lowerBound=lowerBound+100;s.pxViewedArray.sort(function(" + "a,b){return parseInt(a)-parseInt(b)});}}sa=s.pxViewedArray.toString" + "().replace(/,/g,'|');cn=(pv>0)?(id+','+((pv>cv)?pv:cv)+','+p0+','+(" + "(vh>cy)?vh:cy)+','+((sa)?sa:'')):'';s.c_w('s_ppv',cn,t);");

            sCode.getPercentPageViewed = new Function("pid", "" + "pid=pid?pid:'-';var s=this,ist=!s.getPPVid?true:false,t=new Date;t." + "setTime(t.getTime()+1800000);if(typeof(s.linkType)!='undefined'&&s." + "linkType!='e')return'';var v=s.c_r('s_ppv'),a=(v.indexOf(',')>-1)?v" + ".split(',',5):[];if(a.length<5){for(var i=4;i>0;i--){a[i]=(i<a.leng" + "th)?(a[i-1]):('');}a[0]='';}a[0]=unescape(a[0]);s.getPPVpid=pid;s.c" + "_w('s_ppv',escape(pid),t);s.pxViewedArray=[];if(ist){s.getPPVid=(pi" + "d)?(pid):(s.pageName?s.pageName:document.location.href);s.c_w('s_pp" + "v',escape(s.getPPVid),0);if(s.wd.addEventListener){s.wd.addEventLis" + "tener('load',s.handlePPVevents,false);s.wd.addEventListener('scroll" + "',s.handlePPVevents,false);s.wd.addEventListener('resize',s.handleP" + "PVevents,false);}else if(s.wd.attachEvent){s.wd.attachEvent('onload" + "',s.handlePPVevents);s.wd.attachEvent('onscroll',s.handlePPVevents)" + ";s.wd.attachEvent('onresize',s.handlePPVevents);}}return(pid!='-')?" + "(a):(a[1]);");

        };

        // s-code@2.0.0

    }, {}],
    144: [function(require, module, exports) {
        'use strict';

        module.exports = function(sCode) {

            /*
             * Plugin: getPreviousValue_v1.0 - return previous value of designated
             *   variable (requires split utility)
             */
            sCode.getPreviousValue = new Function("v", "c", "el", "" + "var s=this,t=new Date,i,j,r='';t.setTime(t.getTime()+1800000);if(el" + "){if(s.events){i=s.split(el,',');j=s.split(s.events,',');for(x in i" + "){for(y in j){if(i[x]==j[y]){if(s.c_r(c)) r=s.c_r(c);v?s.c_w(c,v,t)" + ":s.c_w(c,'no value',t);return r}}}}}else{if(s.c_r(c)) r=s.c_r(c);v?" + "s.c_w(c,v,t):s.c_w(c,'no value',t);return r}");

        };

        // s-code@2.0.0

    }, {}],
    145: [function(require, module, exports) {
        'use strict';

        module.exports = function(sCode) {

            /*
             * Plugin: getQueryParam 2.3
             */
            sCode.getQueryParam = new Function("p", "d", "u", "" + "var s=this,v='',i,t;d=d?d:'';u=u?u:(s.pageURL?s.pageURL:s.wd.locati" + "on);if(u=='f')u=s.gtfs().location;while(p){i=p.indexOf(',');i=i<0?p" + ".length:i;t=s.p_gpv(p.substring(0,i),u+'');if(t){t=t.indexOf('#')>-" + "1?t.substring(0,t.indexOf('#')):t;}if(t)v+=v?d+t:t;p=p.substring(i=" + "=p.length?i:i+1)}return v");

            sCode.p_gpv = new Function("k", "u", "" + "var s=this,v='',i=u.indexOf('?'),q;if(k&&i>-1){q=u.substring(i+1);v" + "=s.pt(q,'&','p_gvf',k)}return v");

            sCode.p_gvf = new Function("t", "k", "" + "if(t){var s=this,i=t.indexOf('='),p=i<0?t:t.substring(0,i),v=i<0?'T" + "rue':t.substring(i+1);if(p.toLowerCase()==k.toLowerCase())return s." + "epa(v)}return ''");

        };

        // s-code@2.0.0

    }, {}],
    146: [function(require, module, exports) {
        'use strict';

        module.exports = function(sCode) {

            /*
             * Plugin: getValOnce_v1.0
             */
            sCode.getValOnce = new Function("v", "c", "e", "" + "var s=this,a=new Date,v=v?v:v='',c=c?c:c='s_gvo',e=e?e:0,k=s.c_r(c" + ");if(v){a.setTime(a.getTime()+e*86400000);s.c_w(c,v,e?a:0);}return" + " v==k?'':v");

        };

        // s-code@2.0.0

    }, {}],
    147: [function(require, module, exports) {
        'use strict';

        module.exports = function(sCode) {

            /*
             * Plugin: setClickMapEmail v1.3 - sets ClickMap variables w/ q-string values
             */
            sCode.setClickMapEmail = new Function("qp", "ot", "" + "var s=this,v=s.getQueryParam(qp,'~'),d,pn,oid,ot=s.getQueryParam(ot)" + ",ot=ot?ot:'A',cv;d=v.indexOf('~');if(!v)return '';if(d>-1){pn=v.subs" + "tring(0,d);oid=v.substring(d+1);}cv='&pid='+s.ape(s.fl(pn,255))+'&pi" + "dt=1&oid='+s.ape(s.fl(oid,100))+'&oidt=1&ot='+ot+'&oi=1';s.sq(cv);");

        };

        // s-code@2.0.0

    }, {}],
    148: [function(require, module, exports) {
        'use strict';

        module.exports = function(sCode) {

            /*
             * DynamicObjectIDs v1.4: Setup Dynamic Object IDs based on URL
             *********** MODIFIED FOR APPLE (DO NOT REPLACE) **************
             */

            sCode.setupDynamicObjectIDs = new Function("" + "var s=this;if(!s.doi){s.doi=1;if(s.apv>3&&(!s.isie||!s.ismac||s.apv" + ">=5)){if(s.wd.attachEvent)s.wd.attachEvent('onload',s.setOIDs);else" + " if(s.wd.addEventListener)s.wd.addEventListener('load',s.setOIDs,fa" + "lse);else{s.doiol=s.wd.onload;s.wd.onload=s.setOIDs}}s.wd.s_semapho" + "re=1}");

            sCode.setOIDs = new Function("e", "" + "var s=s_c_il[" + s._in + "],b=s.eh(s.wd,'onload'),o='onclick',x,l,u,c,i" + ",a=new Array;if(s.doiol){if(b)s[b]=s.wd[b];s.doiol(e)}if(s.d.links)" + "{for(i=0;i<s.d.links.length;i++){l=s.d.links[i];" + "if(s._isSafari){s.acAnalytics.dynamicObjectIdHandlerSafari(s, l);}" + "c=l[o]?''+l[o]:'';b" + "=s.eh(l,o);z=l[b]?''+l[b]:'';u=s.getObjectID(l);if(u&&c.indexOf('s_" + "objectID')<0&&z.indexOf('s_objectID')<0){u=s.repl(u,'\"','');u=s.re" + "pl(u,'\\n','').substring(0,97);l.s_oc=l[o];a[u]=a[u]?a[u]+1:1;x='';" + "if(c.indexOf('.t(')>=0||c.indexOf('.tl(')>=0||c.indexOf('s_gs(')>=0" + ")x='var x=\".tl(\";';x+='s_objectID=\"'+u+'_'+a[u]+'\";return this." + "s_oc?this.s_oc(e):true';if(s.isns&&s.apv>=5)l.setAttribute(o,x);l[o" + "]=new Function('e',x)}}}s.wd.s_semaphore=0;return true");

        };

        // s-code@2.0.0

    }, {}],
    149: [function(require, module, exports) {
        'use strict';

        module.exports = function(sCode) {

            /************************ Utility Functions for Plugins ***************************/
            /*
             * Utility manageVars v0.2 - clear variable values (requires split 1.5)
             */
            sCode.manageVars = new Function("c", "l", "f", "" + "var s=this,vl,la,vla;l=l?l:'';f=f?f:1 ;if(!s[c])return false;vl='pa" + "geName,purchaseID,channel,server,pageType,campaign,state,zip,events" + ",products,transactionID';for(var n=1;n<76;n++){vl+=',prop'+n+',eVar" + "'+n+',hier'+n;}if(l&&(f==1||f==2)){if(f==1){vl=l;}if(f==2){la=s.spl" + "it(l,',');vla=s.split(vl,',');vl='';for(x in la){for(y in vla){if(l" + "a[x]==vla[y]){vla[y]='';}}}for(y in vla){vl+=vla[y]?','+vla[y]:'';}" + "}s.pt(vl,',',c,0);return true;}else if(l==''&&f==1){s.pt(vl,',',c,0" + ");return true;}else{return false;}");

            sCode.clearVars = new Function("t", "var s=this;s[t]='';");

            sCode.lowercaseVars = new Function("t", "" + "var s=this;if(s[t]&&t!='events'){s[t]=s[t].toString();if(s[t].index" + "Of('D=')!=0){s[t]=s[t].toLowerCase();}}");

            /*
             * s.join: 1.0 - s.join(v,p)
             */
            sCode.join = new Function("v", "p", "" + "var s = this;var f,b,d,w;if(p){f=p.front?p.front:'';b=p.back?p.back" + ":'';d=p.delim?p.delim:'';w=p.wrap?p.wrap:'';}var str='';for(var x=0" + ";x<v.length;x++){if(typeof(v[x])=='object' )str+=s.join( v[x],p);el" + "se str+=w+v[x]+w;if(x<v.length-1)str+=d;}return f+str+b;");

            /*
             * Utility Function: p_fo - required for detectRIA
             */
            sCode.p_fo = new Function("n", "" + "var s=this;if(!s.__fo){s.__fo=new Object;}if(!s.__fo[n]){s.__fo[n]=" + "new Object;return 1;}else {return 0;}");

            /*
             * Utility Function: p_gh
             */
            sCode.p_gh = new Function("" + "var s=this;if(!s.eo&&!s.lnk)return '';var o=s.eo?s.eo:s.lnk,y=s.ot(" + "o),n=s.oid(o),x=o.s_oidt;if(s.eo&&o==s.eo){while(o&&!n&&y!='BODY'){" + "o=o.parentElement?o.parentElement:o.parentNode;if(!o)return '';y=s." + "ot(o);n=s.oid(o);x=o.s_oidt}}return o.href?o.href:'';");

            /*
             * Plugin Utility: apl v1.1
             */
            sCode.apl = new Function("L", "v", "d", "u", "" + "var s=this,m=0;if(!L)L='';if(u){var i,n,a=s.split(L,d);for(i=0;i<a." + "length;i++){n=a[i];m=m||(u==1?(n==v):(n.toLowerCase()==v.toLowerCas" + "e()));}}if(!m)L=L?L+d+v:v;return L");

            /*
             * Plugin Utility: Replace v1.0
             */
            sCode.repl = new Function("x", "o", "n", "" + "var i=x.indexOf(o),l=n.length;while(x&&i>=0){x=x.substring(0,i)+n+x." + "substring(i+o.length);i=x.indexOf(o,i+l)}return x");

            /*
             * Utility Function: split v1.5 - split a string (JS 1.0 compatible)
             */
            sCode.split = new Function("l", "d", "" + "var i,x=0,a=new Array;while(l){i=l.indexOf(d);i=i>-1?i:l.length;a[x" + "++]=l.substring(0,i);l=l.substring(i+d.length);}return a");

            /*
             * Utility Function: vpr - set the variable vs with value v
             */
            sCode.vpr = new Function("vs", "v", "if(typeof(v)!='undefined'){var s=this; eval('s.'+vs+'=\"'+v+'\"')}");

        };

        // s-code@2.0.0

    }, {}],
    150: [function(require, module, exports) {
        (function() {

            'use strict';

            /**
             * @ SiteCatalyst code version: H.27.
             * @ Copyright 1996-2014 Adobe, Inc. All Rights Reserved. More info available at http://www.omniture.com
             * @Name: s_code { by Adobe }
             * @Description: Creates the script tag and injects scode on the page.
             * @Event: { window.onload }
             */
            var s_code = '',
                s_objectID;

            function s_gi(un, pg, ss) {
                var c = "s.version='H.27';s.an=s_an;s.logDebug=function(m){var s=this,tcf=new Function('var e;try{console.log(\"'+s.rep(s.rep(s.rep(m,\"\\\\\",\"\\\\\\" + "\\\"),\"\\n\",\"\\\\n\"),\"\\\"\",\"\\\\\\\"\")+'\");}catch(e){}');tcf()};s.cls=function(x,c){var i,y='';if(!c)c=this.an;for(i=0;i<x.length;i++){n=x.substring(i,i+1);if(c.indexOf(n)>=0)y+=n}return " + "y};s.fl=function(x,l){return x?(''+x).substring(0,l):x};s.co=function(o){return o};s.num=function(x){x=''+x;for(var p=0;p<x.length;p++)if(('0123456789').indexOf(x.substring(p,p+1))<0)return 0;retur" + "n 1};s.rep=s_rep;s.sp=s_sp;s.jn=s_jn;s.ape=function(x){var s=this,h='0123456789ABCDEF',f=\"+~!*()'\",i,c=s.charSet,n,l,e,y='';c=c?c.toUpperCase():'';if(x){x=''+x;if(s.em==3){x=encodeURIComponent(x)" + ";for(i=0;i<f.length;i++) {n=f.substring(i,i+1);if(x.indexOf(n)>=0)x=s.rep(x,n,\"%\"+n.charCodeAt(0).toString(16).toUpperCase())}}else if(c=='AUTO'&&('').charCodeAt){for(i=0;i<x.length;i++){c=x.subs" + "tring(i,i+1);n=x.charCodeAt(i);if(n>127){l=0;e='';while(n||l<4){e=h.substring(n%16,n%16+1)+e;n=(n-n%16)/16;l++}y+='%u'+e}else if(c=='+')y+='%2B';else y+=escape(c)}x=y}else x=s.rep(escape(''+x),'+'," + "'%2B');if(c&&c!='AUTO'&&s.em==1&&x.indexOf('%u')<0&&x.indexOf('%U')<0){i=x.indexOf('%');while(i>=0){i++;if(h.substring(8).indexOf(x.substring(i,i+1).toUpperCase())>=0)return x.substring(0,i)+'u00'+" + "x.substring(i);i=x.indexOf('%',i)}}}return x};s.epa=function(x){var s=this,y,tcf;if(x){x=s.rep(''+x,'+',' ');if(s.em==3){tcf=new Function('x','var y,e;try{y=decodeURIComponent(x)}catch(e){y=unescap" + "e(x)}return y');return tcf(x)}else return unescape(x)}return y};s.pt=function(x,d,f,a){var s=this,t=x,z=0,y,r;while(t){y=t.indexOf(d);y=y<0?t.length:y;t=t.substring(0,y);r=s[f](t,a);if(r)return r;z" + "+=y+d.length;t=x.substring(z,x.length);t=z<x.length?t:''}return ''};s.isf=function(t,a){var c=a.indexOf(':');if(c>=0)a=a.substring(0,c);c=a.indexOf('=');if(c>=0)a=a.substring(0,c);if(t.substring(0," + "2)=='s_')t=t.substring(2);return (t!=''&&t==a)};s.fsf=function(t,a){var s=this;if(s.pt(a,',','isf',t))s.fsg+=(s.fsg!=''?',':'')+t;return 0};s.fs=function(x,f){var s=this;s.fsg='';s.pt(x,',','fsf',f" + ");return s.fsg};s.mpc=function(m,a){var s=this,c,l,n,v;v=s.d.visibilityState;if(!v)v=s.d.webkitVisibilityState;if(v&&v=='prerender'){if(!s.mpq){s.mpq=new Array;l=s.sp('webkitvisibilitychange,visibi" + "litychange',',');for(n=0;n<l.length;n++){s.d.addEventListener(l[n],new Function('var s=s_c_il['+s._in+'],c,v;v=s.d.visibilityState;if(!v)v=s.d.webkitVisibilityState;if(s.mpq&&v==\"visible\"){while(" + "s.mpq.length>0){c=s.mpq.shift();s[c.m].apply(s,c.a)}s.mpq=0}'),false)}}c=new Object;c.m=m;c.a=a;s.mpq.push(c);return 1}return 0};s.si=function(){var s=this,i,k,v,c=s_gi+'var s=s_gi(\"'+s.oun+'\");s" + ".sa(\"'+s.un+'\");';for(i=0;i<s.va_g.length;i++){k=s.va_g[i];v=s[k];if(v!=undefined){if(typeof(v)!='number')c+='s.'+k+'=\"'+s_fe(v)+'\";';else c+='s.'+k+'='+v+';'}}c+=\"s.lnk=s.eo=s.linkName=s.link" + "Type=s.wd.s_objectID=s.ppu=s.pe=s.pev1=s.pev2=s.pev3='';\";return c};s.c_d='';s.c_gdf=function(t,a){var s=this;if(!s.num(t))return 1;return 0};s.c_gd=function(){var s=this,d=s.wd.location.hostname," + "n=s.fpCookieDomainPeriods,p;if(!n)n=s.cookieDomainPeriods;if(d&&!s.c_d){n=n?parseInt(n):2;n=n>2?n:2;p=d.lastIndexOf('.');if(p>=0){while(p>=0&&n>1){p=d.lastIndexOf('.',p-1);n--}s.c_d=p>0&&s.pt(d,'.'" + ",'c_gdf',0)?d.substring(p):d}}return s.c_d};s.c_r=function(k){var s=this;k=s.ape(k);var c=' '+s.d.cookie,i=c.indexOf(' '+k+'='),e=i<0?i:c.indexOf(';',i),v=i<0?'':s.epa(c.substring(i+2+k.length,e<0?" + "c.length:e));return v!='[[B]]'?v:''};s.c_w=function(k,v,e){var s=this,d=s.c_gd(),l=s.cookieLifetime,t;v=''+v;l=l?(''+l).toUpperCase():'';if(e&&l!='SESSION'&&l!='NONE'){t=(v!=''?parseInt(l?l:0):-60)" + ";if(t){e=new Date;e.setTime(e.getTime()+(t*1000))}}if(k&&l!='NONE'){s.d.cookie=k+'='+s.ape(v!=''?v:'[[B]]')+'; path=/;'+(e&&l!='SESSION'?' expires='+e.toGMTString()+';':'')+(d?' domain='+d+';':'');" + "return s.c_r(k)==v}return 0};s.eh=function(o,e,r,f){var s=this,b='s_'+e+'_'+s._in,n=-1,l,i,x;if(!s.ehl)s.ehl=new Array;l=s.ehl;for(i=0;i<l.length&&n<0;i++){if(l[i].o==o&&l[i].e==e)n=i}if(n<0){n=i;l" + "[n]=new Object}x=l[n];x.o=o;x.e=e;f=r?x.b:f;if(r||f){x.b=r?0:o[e];x.o[e]=f}if(x.b){x.o[b]=x.b;return b}return 0};s.cet=function(f,a,t,o,b){var s=this,r,tcf;if(s.apv>=5&&(!s.isopera||s.apv>=7)){tcf=" + "new Function('s','f','a','t','var e,r;try{r=s[f](a)}catch(e){r=s[t](e)}return r');r=tcf(s,f,a,t)}else{if(s.ismac&&s.u.indexOf('MSIE 4')>=0)r=s[b](a);else{s.eh(s.wd,'onerror',0,o);r=s[f](a);s.eh(s.w" + "d,'onerror',1)}}return r};s.gtfset=function(e){var s=this;return s.tfs};s.gtfsoe=new Function('e','var s=s_c_il['+s._in+'],c;s.eh(window,\"onerror\",1);s.etfs=1;c=s.t();if(c)s.d.write(c);s.etfs=0;r" + "eturn true');s.gtfsfb=function(a){return window};s.gtfsf=function(w){var s=this,p=w.parent,l=w.location;s.tfs=w;if(p&&p.location!=l&&p.location.host==l.host){s.tfs=p;return s.gtfsf(s.tfs)}return s." + "tfs};s.gtfs=function(){var s=this;if(!s.tfs){s.tfs=s.wd;if(!s.etfs)s.tfs=s.cet('gtfsf',s.tfs,'gtfset',s.gtfsoe,'gtfsfb')}return s.tfs};s.mrq=function(u){var s=this,l=s.rl[u],n,r;s.rl[u]=0;if(l)for(" + "n=0;n<l.length;n++){r=l[n];s.mr(0,0,r.r,r.t,r.u)}};s.flushBufferedRequests=function(){};s.mr=function(sess,q,rs,ta,u){var s=this,dc=s.dc,t1=s.trackingServer,t2=s.trackingServerSecure,tb=s.trackingS" + "erverBase,p='.sc',ns=s.visitorNamespace,un=s.cls(u?u:(ns?ns:s.fun)),r=new Object,l,imn='s_i_'+s._in+'_'+un,im,b,e;if(!rs){if(t1){if(t2&&s.ssl)t1=t2}else{if(!tb)tb='2o7.net';if(dc)dc=(''+dc).toLower" + "Case();else dc='d1';if(tb=='2o7.net'){if(dc=='d1')dc='112';else if(dc=='d2')dc='122';p=''}t1=un+'.'+dc+'.'+p+tb}rs='http'+(s.ssl?'s':'')+'://'+t1+'/b/ss/'+s.un+'/'+(s.mobile?'5.1':'1')+'/'+s.versio" + "n+(s.tcn?'T':'')+'/'+sess+'?AQB=1&ndh=1'+(q?q:'')+'&AQE=1';if(s.isie&&!s.ismac)rs=s.fl(rs,2047)}if(s.d.images&&s.apv>=3&&(!s.isopera||s.apv>=7)&&(s.ns6<0||s.apv>=6.1)){if(!s.rc)s.rc=new Object;if(!" + "s.rc[un]){s.rc[un]=1;if(!s.rl)s.rl=new Object;s.rl[un]=new Array;setTimeout('if(window.s_c_il)window.s_c_il['+s._in+'].mrq(\"'+un+'\")',750)}else{l=s.rl[un];if(l){r.t=ta;r.u=un;r.r=rs;l[l.length]=r" + ";return ''}imn+='_'+s.rc[un];s.rc[un]++}if(s.debugTracking){var d='AppMeasurement Debug: '+rs,dl=s.sp(rs,'&'),dln;for(dln=0;dln<dl.length;dln++)d+=\"\\n\\t\"+s.epa(dl[dln]);s.logDebug(d)}im=s.wd[im" + "n];if(!im)im=s.wd[imn]=new Image;im.alt=\"\";im.s_l=0;im.onload=im.onerror=new Function('e','this.s_l=1;var wd=window,s;if(wd.s_c_il){s=wd.s_c_il['+s._in+'];s.bcr();s.mrq(\"'+un+'\");s.nrs--;if(!s." + "nrs)s.m_m(\"rr\")}');if(!s.nrs){s.nrs=1;s.m_m('rs')}else s.nrs++;im.src=rs;if(s.useForcedLinkTracking||s.bcf){if(!s.forcedLinkTrackingTimeout)s.forcedLinkTrackingTimeout=250;setTimeout('if(window.s" + "_c_il)window.s_c_il['+s._in+'].bcr()',s.forcedLinkTrackingTimeout);}else if((s.lnk||s.eo)&&(!ta||ta=='_self'||ta=='_top'||ta=='_parent'||(s.wd.name&&ta==s.wd.name))){b=e=new Date;while(!im.s_l&&e.g" + "etTime()-b.getTime()<500)e=new Date}return ''}return '<im'+'g sr'+'c=\"'+rs+'\" width=1 height=1 border=0 alt=\"\">'};s.gg=function(v){var s=this;if(!s.wd['s_'+v])s.wd['s_'+v]='';return s.wd['s_'+v" + "]};s.glf=function(t,a){if(t.substring(0,2)=='s_')t=t.substring(2);var s=this,v=s.gg(t);if(v)s[t]=v};s.gl=function(v){var s=this;if(s.pg)s.pt(v,',','glf',0)};s.rf=function(x){var s=this,y,i,j,h,p,l=" + "0,q,a,b='',c='',t;if(x&&x.length>255){y=''+x;i=y.indexOf('?');if(i>0){q=y.substring(i+1);y=y.substring(0,i);h=y.toLowerCase();j=0;if(h.substring(0,7)=='http://')j+=7;else if(h.substring(0,8)=='http" + "s://')j+=8;i=h.indexOf(\"/\",j);if(i>0){h=h.substring(j,i);p=y.substring(i);y=y.substring(0,i);if(h.indexOf('google')>=0)l=',q,ie,start,search_key,word,kw,cd,';else if(h.indexOf('yahoo.co')>=0)l='," + "p,ei,';if(l&&q){a=s.sp(q,'&');if(a&&a.length>1){for(j=0;j<a.length;j++){t=a[j];i=t.indexOf('=');if(i>0&&l.indexOf(','+t.substring(0,i)+',')>=0)b+=(b?'&':'')+t;else c+=(c?'&':'')+t}if(b&&c)q=b+'&'+c" + ";else c=''}i=253-(q.length-c.length)-y.length;x=y+(i>0?p.substring(0,i):'')+'?'+q}}}}return x};s.s2q=function(k,v,vf,vfp,f){var s=this,qs='',sk,sv,sp,ss,nke,nk,nf,nfl=0,nfn,nfm;if(k==\"contextData" + "\")k=\"c\";if(v){for(sk in v)if((!f||sk.substring(0,f.length)==f)&&v[sk]&&(!vf||vf.indexOf(','+(vfp?vfp+'.':'')+sk+',')>=0)&&(!Object||!Object.prototype||!Object.prototype[sk])){nfm=0;if(nfl)for(nf" + "n=0;nfn<nfl.length;nfn++)if(sk.substring(0,nfl[nfn].length)==nfl[nfn])nfm=1;if(!nfm){if(qs=='')qs+='&'+k+'.';sv=v[sk];if(f)sk=sk.substring(f.length);if(sk.length>0){nke=sk.indexOf('.');if(nke>0){nk" + "=sk.substring(0,nke);nf=(f?f:'')+nk+'.';if(!nfl)nfl=new Array;nfl[nfl.length]=nf;qs+=s.s2q(nk,v,vf,vfp,nf)}else{if(typeof(sv)=='boolean'){if(sv)sv='true';else sv='false'}if(sv){if(vfp=='retrieveLig" + "htData'&&f.indexOf('.contextData.')<0){sp=sk.substring(0,4);ss=sk.substring(4);if(sk=='transactionID')sk='xact';else if(sk=='channel')sk='ch';else if(sk=='campaign')sk='v0';else if(s.num(ss)){if(sp" + "=='prop')sk='c'+ss;else if(sp=='eVar')sk='v'+ss;else if(sp=='list')sk='l'+ss;else if(sp=='hier'){sk='h'+ss;sv=sv.substring(0,255)}}}qs+='&'+s.ape(sk)+'='+s.ape(sv)}}}}}if(qs!='')qs+='&.'+k}return q" + "s};s.hav=function(){var s=this,qs='',l,fv='',fe='',mn,i,e;if(s.lightProfileID){l=s.va_m;fv=s.lightTrackVars;if(fv)fv=','+fv+','+s.vl_mr+','}else{l=s.va_t;if(s.pe||s.linkType){fv=s.linkTrackVars;fe=" + "s.linkTrackEvents;if(s.pe){mn=s.pe.substring(0,1).toUpperCase()+s.pe.substring(1);if(s[mn]){fv=s[mn].trackVars;fe=s[mn].trackEvents}}}if(fv)fv=','+fv+','+s.vl_l+','+s.vl_l2;if(fe){fe=','+fe+',';if(" + "fv)fv+=',events,'}if (s.events2)e=(e?',':'')+s.events2}for(i=0;i<l.length;i++){var k=l[i],v=s[k],b=k.substring(0,4),x=k.substring(4),n=parseInt(x),q=k;if(!v)if(k=='events'&&e){v=e;e=''}if(v&&(!fv||" + "fv.indexOf(','+k+',')>=0)&&k!='linkName'&&k!='linkType'){if(k=='supplementalDataID')q='sdid';else if(k=='timestamp')q='ts';else if(k=='dynamicVariablePrefix')q='D';else if(k=='visitorID')q='vid';el" + "se if(k=='marketingCloudVisitorID')q='mid';else if(k=='analyticsVisitorID')q='aid';else if(k=='audienceManagerLocationHint')q='aamlh';else if(k=='audienceManagerBlob')q='aamb';else if(k=='pageURL')" + "{q='g';if(v.length>255){s.pageURLRest=v.substring(255);v=v.substring(0,255);}}else if(k=='pageURLRest')q='-g';else if(k=='referrer'){q='r';v=s.fl(s.rf(v),255)}else if(k=='vmk'||k=='visitorMigration" + "Key')q='vmt';else if(k=='visitorMigrationServer'){q='vmf';if(s.ssl&&s.visitorMigrationServerSecure)v=''}else if(k=='visitorMigrationServerSecure'){q='vmf';if(!s.ssl&&s.visitorMigrationServer)v=''}e" + "lse if(k=='charSet'){q='ce';if(v.toUpperCase()=='AUTO')v='ISO8859-1';else if(s.em==2||s.em==3)v='UTF-8'}else if(k=='visitorNamespace')q='ns';else if(k=='cookieDomainPeriods')q='cdp';else if(k=='coo" + "kieLifetime')q='cl';else if(k=='variableProvider')q='vvp';else if(k=='currencyCode')q='cc';else if(k=='channel')q='ch';else if(k=='transactionID')q='xact';else if(k=='campaign')q='v0';else if(k=='r" + "esolution')q='s';else if(k=='colorDepth')q='c';else if(k=='javascriptVersion')q='j';else if(k=='javaEnabled')q='v';else if(k=='cookiesEnabled')q='k';else if(k=='browserWidth')q='bw';else if(k=='bro" + "wserHeight')q='bh';else if(k=='connectionType')q='ct';else if(k=='homepage')q='hp';else if(k=='plugins')q='p';else if(k=='events'){if(e)v+=(v?',':'')+e;if(fe)v=s.fs(v,fe)}else if(k=='events2')v='';" + "else if(k=='contextData'){qs+=s.s2q('c',s[k],fv,k,0);v=''}else if(k=='lightProfileID')q='mtp';else if(k=='lightStoreForSeconds'){q='mtss';if(!s.lightProfileID)v=''}else if(k=='lightIncrementBy'){q=" + "'mti';if(!s.lightProfileID)v=''}else if(k=='retrieveLightProfiles')q='mtsr';else if(k=='deleteLightProfiles')q='mtsd';else if(k=='retrieveLightData'){if(s.retrieveLightProfiles)qs+=s.s2q('mts',s[k]" + ",fv,k,0);v=''}else if(s.num(x)){if(b=='prop')q='c'+n;else if(b=='eVar')q='v'+n;else if(b=='list')q='l'+n;else if(b=='hier'){q='h'+n;v=s.fl(v,255)}}if(v)qs+='&'+s.ape(q)+'='+(k.substring(0,3)!='pev'" + "?s.ape(v):v)}}return qs};s.ltdf=function(t,h){t=t?t.toLowerCase():'';h=h?h.toLowerCase():'';var qi=h.indexOf('?'),hi=h.indexOf('#');if(qi>=0){if(hi>=0&&hi<qi)qi=hi;}else qi=hi;h=qi>=0?h.substring(0" + ",qi):h;if(t&&h.substring(h.length-(t.length+1))=='.'+t)return 1;return 0};s.ltef=function(t,h){t=t?t.toLowerCase():'';h=h?h.toLowerCase():'';if(t&&h.indexOf(t)>=0)return 1;return 0};s.lt=function(h" + "){var s=this,lft=s.linkDownloadFileTypes,lef=s.linkExternalFilters,lif=s.linkInternalFilters;lif=lif?lif:s.wd.location.hostname;h=h.toLowerCase();if(s.trackDownloadLinks&&lft&&s.pt(lft,',','ltdf',h" + "))return 'd';if(s.trackExternalLinks&&h.indexOf('#')!=0&&h.indexOf('about:')!=0&&h.indexOf('javascript:')!=0&&(lef||lif)&&(!lef||s.pt(lef,',','ltef',h))&&(!lif||!s.pt(lif,',','ltef',h)))return 'e';" + "return ''};s.lc=new Function('e','var s=s_c_il['+s._in+'],b=s.eh(this,\"onclick\");s.lnk=this;s.t();s.lnk=0;if(b)return this[b](e);return true');s.bcr=function(){var s=this;if(s.bct&&s.bce)s.bct.di" + "spatchEvent(s.bce);if(s.bcf){if(typeof(s.bcf)=='function')s.bcf();else if(s.bct&&s.bct.href)s.d.location=s.bct.href}s.bct=s.bce=s.bcf=0};s.bc=new Function('e','if(e&&e.s_fe)return;var s=s_c_il['+s." + "_in+'],f,tcf,t,n,nrs,a,h;if(s.d&&s.d.all&&s.d.all.cppXYctnr)return;if(!s.bbc)s.useForcedLinkTracking=0;else if(!s.useForcedLinkTracking){s.b.removeEventListener(\"click\",s.bc,true);s.bbc=s.useForc" + "edLinkTracking=0;return}else s.b.removeEventListener(\"click\",s.bc,false);s.eo=e.srcElement?e.srcElement:e.target;nrs=s.nrs;s.t();s.eo=0;if(s.nrs>nrs&&s.useForcedLinkTracking&&e.target){a=e.target" + ";while(a&&a!=s.b&&a.tagName.toUpperCase()!=\"A\"&&a.tagName.toUpperCase()!=\"AREA\")a=a.parentNode;if(a){h=a.href;if(h.indexOf(\"#\")==0||h.indexOf(\"about:\")==0||h.indexOf(\"javascript:\")==0)h=0" + ";t=a.target;if(e.target.dispatchEvent&&h&&(!t||t==\"_self\"||t==\"_top\"||t==\"_parent\"||(s.wd.name&&t==s.wd.name))){tcf=new Function(\"s\",\"var x;try{n=s.d.createEvent(\\\\\"MouseEvents\\\\\")}c" + "atch(x){n=new MouseEvent}return n\");n=tcf(s);if(n){tcf=new Function(\"n\",\"e\",\"var x;try{n.initMouseEvent(\\\\\"click\\\\\",e.bubbles,e.cancelable,e.view,e.detail,e.screenX,e.screenY,e.clientX," + "e.clientY,e.ctrlKey,e.altKey,e.shiftKey,e.metaKey,e.button,e.relatedTarget)}catch(x){n=0}return n\");n=tcf(n,e);if(n){n.s_fe=1;e.stopPropagation();if (e.stopImmediatePropagation) {e.stopImmediatePr" + "opagation();}e.preventDefault();s.bct=e.target;s.bce=n}}}}}');s.oh=function(o){var s=this,l=s.wd.location,h=o.href?o.href:'',i,j,k,p;i=h.indexOf(':');j=h.indexOf('?');k=h.indexOf('/');if(h&&(i<0||(" + "j>=0&&i>j)||(k>=0&&i>k))){p=o.protocol&&o.protocol.length>1?o.protocol:(l.protocol?l.protocol:'');i=l.pathname.lastIndexOf('/');h=(p?p+'//':'')+(o.host?o.host:(l.host?l.host:''))+(h.substring(0,1)!" + "='/'?l.pathname.substring(0,i<0?0:i)+'/':'')+h}return h};s.ot=function(o){var t=o.tagName;if(o.tagUrn||(o.scopeName&&o.scopeName.toUpperCase()!='HTML'))return '';t=t&&t.toUpperCase?t.toUpperCase():" + "'';if(t=='SHAPE')t='';if(t){if((t=='INPUT'||t=='BUTTON')&&o.type&&o.type.toUpperCase)t=o.type.toUpperCase();else if(!t&&o.href)t='A';}return t};s.oid=function(o){var s=this,t=s.ot(o),p,c,n='',x=0;i" + "f(t&&!o.s_oid){p=o.protocol;c=o.onclick;if(o.href&&(t=='A'||t=='AREA')&&(!c||!p||p.toLowerCase().indexOf('javascript')<0))n=s.oh(o);else if(c){n=s.rep(s.rep(s.rep(s.rep(''+c,\"\\r\",''),\"\\n\",'')" + ",\"\\t\",''),' ','');x=2}else if(t=='INPUT'||t=='SUBMIT'){if(o.value)n=o.value;else if(o.innerText)n=o.innerText;else if(o.textContent)n=o.textContent;x=3}else if(o.src&&t=='IMAGE')n=o.src;if(n){o." + "s_oid=s.fl(n,100);o.s_oidt=x}}return o.s_oid};s.rqf=function(t,un){var s=this,e=t.indexOf('='),u=e>=0?t.substring(0,e):'',q=e>=0?s.epa(t.substring(e+1)):'';if(u&&q&&(','+u+',').indexOf(','+un+',')>" + "=0){if(u!=s.un&&s.un.indexOf(',')>=0)q='&u='+u+q+'&u=0';return q}return ''};s.rq=function(un){if(!un)un=this.un;var s=this,c=un.indexOf(','),v=s.c_r('s_sq'),q='';if(c<0)return s.pt(v,'&','rqf',un);" + "return s.pt(un,',','rq',0)};s.sqp=function(t,a){var s=this,e=t.indexOf('='),q=e<0?'':s.epa(t.substring(e+1));s.sqq[q]='';if(e>=0)s.pt(t.substring(0,e),',','sqs',q);return 0};s.sqs=function(un,q){va" + "r s=this;s.squ[un]=q;return 0};s.sq=function(q){var s=this,k='s_sq',v=s.c_r(k),x,c=0;s.sqq=new Object;s.squ=new Object;s.sqq[q]='';s.pt(v,'&','sqp',0);s.pt(s.un,',','sqs',q);v='';for(x in s.squ)if(" + "x&&(!Object||!Object.prototype||!Object.prototype[x]))s.sqq[s.squ[x]]+=(s.sqq[s.squ[x]]?',':'')+x;for(x in s.sqq)if(x&&(!Object||!Object.prototype||!Object.prototype[x])&&s.sqq[x]&&(x==q||c<2)){v+=" + "(v?'&':'')+s.sqq[x]+'='+s.ape(x);c++}return s.c_w(k,v,0)};s.wdl=new Function('e','var s=s_c_il['+s._in+'],r=true,b=s.eh(s.wd,\"onload\"),i,o,oc;if(b)r=this[b](e);for(i=0;i<s.d.links.length;i++){o=s" + ".d.links[i];oc=o.onclick?\"\"+o.onclick:\"\";if((oc.indexOf(\"s_gs(\")<0||oc.indexOf(\".s_oc(\")>=0)&&oc.indexOf(\".tl(\")<0)s.eh(o,\"onclick\",0,s.lc);}return r');s.wds=function(){var s=this;if(s." + "apv>3&&(!s.isie||!s.ismac||s.apv>=5)){if(s.b&&s.b.attachEvent)s.b.attachEvent('onclick',s.bc);else if(s.b&&s.b.addEventListener){if(s.n&&((s.n.userAgent.indexOf('WebKit')>=0&&s.d.createEvent)||(s.n" + ".userAgent.indexOf('Firefox/2')>=0&&s.wd.MouseEvent))){s.bbc=1;s.useForcedLinkTracking=1;s.b.addEventListener('click',s.bc,true)}s.b.addEventListener('click',s.bc,false)}else s.eh(s.wd,'onload',0,s" + ".wdl)}};s.vs=function(x){var s=this,v=s.visitorSampling,g=s.visitorSamplingGroup,k='s_vsn_'+s.un+(g?'_'+g:''),n=s.c_r(k),e=new Date,y=e.getYear();e.setYear(y+10+(y<1900?1900:0));if(v){v*=100;if(!n)" + "{if(!s.c_w(k,x,e))return 0;n=x}if(n%10000>v)return 0}return 1};s.dyasmf=function(t,m){if(t&&m&&m.indexOf(t)>=0)return 1;return 0};s.dyasf=function(t,m){var s=this,i=t?t.indexOf('='):-1,n,x;if(i>=0&" + "&m){var n=t.substring(0,i),x=t.substring(i+1);if(s.pt(x,',','dyasmf',m))return n}return 0};s.uns=function(){var s=this,x=s.dynamicAccountSelection,l=s.dynamicAccountList,m=s.dynamicAccountMatch,n,i" + ";s.un=s.un.toLowerCase();if(x&&l){if(!m)m=s.wd.location.host;if(!m.toLowerCase)m=''+m;l=l.toLowerCase();m=m.toLowerCase();n=s.pt(l,';','dyasf',m);if(n)s.un=n}i=s.un.indexOf(',');s.fun=i<0?s.un:s.un" + ".substring(0,i)};s.sa=function(un){var s=this;if(s.un&&s.mpc('sa',arguments))return;s.un=un;if(!s.oun)s.oun=un;else if((','+s.oun+',').indexOf(','+un+',')<0)s.oun+=','+un;s.uns()};s.m_i=function(n," + "a){var s=this,m,f=n.substring(0,1),r,l,i;if(!s.m_l)s.m_l=new Object;if(!s.m_nl)s.m_nl=new Array;m=s.m_l[n];if(!a&&m&&m._e&&!m._i)s.m_a(n);if(!m){m=new Object,m._c='s_m';m._in=s.wd.s_c_in;m._il=s._i" + "l;m._il[m._in]=m;s.wd.s_c_in++;m.s=s;m._n=n;m._l=new Array('_c','_in','_il','_i','_e','_d','_dl','s','n','_r','_g','_g1','_t','_t1','_x','_x1','_rs','_rr','_l');s.m_l[n]=m;s.m_nl[s.m_nl.length]=n}e" + "lse if(m._r&&!m._m){r=m._r;r._m=m;l=m._l;for(i=0;i<l.length;i++)if(m[l[i]])r[l[i]]=m[l[i]];r._il[r._in]=r;m=s.m_l[n]=r}if(f==f.toUpperCase())s[n]=m;return m};s.m_a=new Function('n','g','e','if(!g)g" + "=\"m_\"+n;var s=s_c_il['+s._in+'],c=s[g+\"_c\"],m,x,f=0;if(s.mpc(\"m_a\",arguments))return;if(!c)c=s.wd[\"s_\"+g+\"_c\"];if(c&&s_d)s[g]=new Function(\"s\",s_ft(s_d(c)));x=s[g];if(!x)x=s.wd[\\'s_\\'" + "+g];if(!x)x=s.wd[g];m=s.m_i(n,1);if(x&&(!m._i||g!=\"m_\"+n)){m._i=f=1;if((\"\"+x).indexOf(\"function\")>=0)x(s);else s.m_m(\"x\",n,x,e)}m=s.m_i(n,1);if(m._dl)m._dl=m._d=0;s.dlt();return f');s.m_m=f" + "unction(t,n,d,e){t='_'+t;var s=this,i,x,m,f='_'+t,r=0,u;if(s.m_l&&s.m_nl)for(i=0;i<s.m_nl.length;i++){x=s.m_nl[i];if(!n||x==n){m=s.m_i(x);u=m[t];if(u){if((''+u).indexOf('function')>=0){if(d&&e)u=m[" + "t](d,e);else if(d)u=m[t](d);else u=m[t]()}}if(u)r=1;u=m[t+1];if(u&&!m[f]){if((''+u).indexOf('function')>=0){if(d&&e)u=m[t+1](d,e);else if(d)u=m[t+1](d);else u=m[t+1]()}}m[f]=1;if(u)r=1}}return r};s" + ".m_ll=function(){var s=this,g=s.m_dl,i,o;if(g)for(i=0;i<g.length;i++){o=g[i];if(o)s.loadModule(o.n,o.u,o.d,o.l,o.e,1);g[i]=0}};s.loadModule=function(n,u,d,l,e,ln){var s=this,m=0,i,g,o=0,f1,f2,c=s.h" + "?s.h:s.b,b,tcf;if(n){i=n.indexOf(':');if(i>=0){g=n.substring(i+1);n=n.substring(0,i)}else g=\"m_\"+n;m=s.m_i(n)}if((l||(n&&!s.m_a(n,g)))&&u&&s.d&&c&&s.d.createElement){if(d){m._d=1;m._dl=1}if(ln){i" + "f(s.ssl)u=s.rep(u,'http:','https:');i='s_s:'+s._in+':'+n+':'+g;b='var s=s_c_il['+s._in+'],o=s.d.getElementById(\"'+i+'\");if(s&&o){if(!o.l&&s.wd.'+g+'){o.l=1;if(o.i)clearTimeout(o.i);o.i=0;s.m_a(\"" + "'+n+'\",\"'+g+'\"'+(e?',\"'+e+'\"':'')+')}';f2=b+'o.c++;if(!s.maxDelay)s.maxDelay=250;if(!o.l&&o.c<(s.maxDelay*2)/100)o.i=setTimeout(o.f2,100)}';f1=new Function('e',b+'}');tcf=new Function('s','c'," + "'i','u','f1','f2','var e,o=0;try{o=s.d.createElement(\"script\");if(o){o.type=\"text/javascript\";'+(n?'o.id=i;o.defer=true;o.onload=o.onreadystatechange=f1;o.f2=f2;o.l=0;':'')+'o.src=u;c.appendChi" + "ld(o);'+(n?'o.c=0;o.i=setTimeout(f2,100)':'')+'}}catch(e){o=0}return o');o=tcf(s,c,i,u,f1,f2)}else{o=new Object;o.n=n+':'+g;o.u=u;o.d=d;o.l=l;o.e=e;g=s.m_dl;if(!g)g=s.m_dl=new Array;i=0;while(i<g.l" + "ength&&g[i])i++;g[i]=o}}else if(n){m=s.m_i(n);m._e=1}return m};s.voa=function(vo,r){var s=this,l=s.va_g,i,k,v,x;for(i=0;i<l.length;i++){k=l[i];v=vo[k];if(v||vo['!'+k]){if(!r&&(k==\"contextData\"||k" + "==\"retrieveLightData\")&&s[k])for(x in s[k])if(!v[x])v[x]=s[k][x];s[k]=v}}};s.vob=function(vo,onlySet){var s=this,l=s.va_g,i,k;for(i=0;i<l.length;i++){k=l[i];vo[k]=s[k];if(!onlySet&&!vo[k])vo['!'+" + "k]=1}};s.dlt=new Function('var s=s_c_il['+s._in+'],d=new Date,i,vo,f=0;if(s.dll)for(i=0;i<s.dll.length;i++){vo=s.dll[i];if(vo){if(!s.m_m(\"d\")||d.getTime()-vo._t>=s.maxDelay){s.dll[i]=0;s.t(vo)}el" + "se f=1}}if(s.dli)clearTimeout(s.dli);s.dli=0;if(f){if(!s.dli)s.dli=setTimeout(s.dlt,s.maxDelay)}else s.dll=0');s.dl=function(vo){var s=this,d=new Date;if(!vo)vo=new Object;s.vob(vo);vo._t=d.getTime" + "();if(!s.dll)s.dll=new Array;s.dll[s.dll.length]=vo;if(!s.maxDelay)s.maxDelay=250;s.dlt()};s._waitingForMarketingCloudVisitorID = false;s._doneWaitingForMarketingCloudVisitorID = false;s._marketing" + "CloudVisitorIDCallback=function(marketingCloudVisitorID) {var s=this;s.marketingCloudVisitorID = marketingCloudVisitorID;s._doneWaitingForMarketingCloudVisitorID = true;s._callbackWhenReadyToTrackC" + "heck();};s._waitingForAnalyticsVisitorID = false;s._doneWaitingForAnalyticsVisitorID = false;s._analyticsVisitorIDCallback=function(analyticsVisitorID) {var s=this;s.analyticsVisitorID = analyticsV" + "isitorID;s._doneWaitingForAnalyticsVisitorID = true;s._callbackWhenReadyToTrackCheck();};s._waitingForAudienceManagerLocationHint = false;s._doneWaitingForAudienceManagerLocationHint = false;s._aud" + "ienceManagerLocationHintCallback=function(audienceManagerLocationHint) {var s=this;s.audienceManagerLocationHint = audienceManagerLocationHint;s._doneWaitingForAudienceManagerLocationHint = true;s." + "_callbackWhenReadyToTrackCheck();};s._waitingForAudienceManagerBlob = false;s._doneWaitingForAudienceManagerBlob = false;s._audienceManagerBlobCallback=function(audienceManagerBlob) {var s=this;s.a" + "udienceManagerBlob = audienceManagerBlob;s._doneWaitingForAudienceManagerBlob = true;s._callbackWhenReadyToTrackCheck();};s.isReadyToTrack=function() {var s=this,readyToTrack = true,visitor = s.vis" + "itor;if ((visitor) && (visitor.isAllowed())) {if ((!s._waitingForMarketingCloudVisitorID) && (!s.marketingCloudVisitorID) && (visitor.getMarketingCloudVisitorID)) {s.marketingCloudVisitorID = visit" + "or.getMarketingCloudVisitorID([s,s._marketingCloudVisitorIDCallback]);if (!s.marketingCloudVisitorID) {s._waitingForMarketingCloudVisitorID = true;}}if ((!s._waitingForAnalyticsVisitorID) && (!s.an" + "alyticsVisitorID) && (visitor.getAnalyticsVisitorID)) {s.analyticsVisitorID = visitor.getAnalyticsVisitorID([s,s._analyticsVisitorIDCallback]);if (!s.analyticsVisitorID) {s._waitingForAnalyticsVisi" + "torID = true;}}if ((!s._waitingForAudienceManagerLocationHint) && (!s.audienceManagerLocationHint) && (visitor.getAudienceManagerLocationHint)) {s.audienceManagerLocationHint = visitor.getAudienceM" + "anagerLocationHint([s,s._audienceManagerLocationHintCallback]);if (!s.audienceManagerLocationHint) {s._waitingForAudienceManagerLocationHint = true;}}if ((!s._waitingForAudienceManagerBlob) && (!s." + "audienceManagerBlob) && (visitor.getAudienceManagerBlob)) {s.audienceManagerBlob = visitor.getAudienceManagerBlob([s,s._audienceManagerBlobCallback]);if (!s.audienceManagerBlob) {s._waitingForAudie" + "nceManagerBlob = true;}}if (((s._waitingForMarketingCloudVisitorID)     && (!s._doneWaitingForMarketingCloudVisitorID)     && (!s.marketingCloudVisitorID)) ||((s._waitingForAnalyticsVisitorID)     " + "     && (!s._doneWaitingForAnalyticsVisitorID)          && (!s.analyticsVisitorID)) ||((s._waitingForAudienceManagerLocationHint) && (!s._doneWaitingForAudienceManagerLocationHint) && (!s.audienceM" + "anagerLocationHint)) ||((s._waitingForAudienceManagerBlob)         && (!s._doneWaitingForAudienceManagerBlob)         && (!s.audienceManagerBlob))) {readyToTrack = false;}}return readyToTrack;};s._" + "callbackWhenReadyToTrackQueue = null;s._callbackWhenReadyToTrackInterval = 0;s.callbackWhenReadyToTrack=function(callbackThis,callback,args) {var s=this,callbackInfo;callbackInfo = {};callbackInfo." + "callbackThis = callbackThis;callbackInfo.callback     = callback;callbackInfo.args         = args;if (s._callbackWhenReadyToTrackQueue == null) {s._callbackWhenReadyToTrackQueue = [];}s._callbackWh" + "enReadyToTrackQueue.push(callbackInfo);if (s._callbackWhenReadyToTrackInterval == 0) {s._callbackWhenReadyToTrackInterval = setInterval(s._callbackWhenReadyToTrackCheck,100);}};s._callbackWhenReady" + "ToTrackCheck=new Function('var s=s_c_il['+s._in+'],callbackNum,callbackInfo;if (s.isReadyToTrack()) {if (s._callbackWhenReadyToTrackInterval) {clearInterval(s._callbackWhenReadyToTrackInterval);s._" + "callbackWhenReadyToTrackInterval = 0;}if (s._callbackWhenReadyToTrackQueue != null) {while (s._callbackWhenReadyToTrackQueue.length > 0) {callbackInfo = s._callbackWhenReadyToTrackQueue.shift();cal" + "lbackInfo.callback.apply(callbackInfo.callbackThis,callbackInfo.args);}}}');s._handleNotReadyToTrack=function(variableOverrides) {var s=this,args,varKey,variableOverridesCopy = null,setVariables = " + "null;if (!s.isReadyToTrack()) {args = [];if (variableOverrides != null) {variableOverridesCopy = {};for (varKey in variableOverrides) {variableOverridesCopy[varKey] = variableOverrides[varKey];}}se" + "tVariables = {};s.vob(setVariables,true);args.push(variableOverridesCopy);args.push(setVariables);s.callbackWhenReadyToTrack(s,s.track,args);return true;}return false;};s.gfid=function(){var s=this" + ",d='0123456789ABCDEF',k='s_fid',fid=s.c_r(k),h='',l='',i,j,m=8,n=4,e=new Date,y;if(!fid||fid.indexOf('-')<0){for(i=0;i<16;i++){j=Math.floor(Math.random()*m);h+=d.substring(j,j+1);j=Math.floor(Math." + "random()*n);l+=d.substring(j,j+1);m=n=16}fid=h+'-'+l;}y=e.getYear();e.setYear(y+2+(y<1900?1900:0));if(!s.c_w(k,fid,e))fid=0;return fid};s.track=s.t=function(vo,setVariables){var s=this,notReadyToTr" + "ack,trk=1,tm=new Date,sed=Math&&Math.random?Math.floor(Math.random()*10000000000000):tm.getTime(),sess='s'+Math.floor(tm.getTime()/10800000)%10+sed,y=tm.getYear(),vt=tm.getDate()+'/'+tm.getMonth()+" + "'/'+(y<1900?y+1900:y)+' '+tm.getHours()+':'+tm.getMinutes()+':'+tm.getSeconds()+' '+tm.getDay()+' '+tm.getTimezoneOffset(),tcf,tfs=s.gtfs(),ta=-1,q='',qs='',code='',vb=new Object;if ((!s.supplement" + "alDataID) && (s.visitor) && (s.visitor.getSupplementalDataID)) {s.supplementalDataID = s.visitor.getSupplementalDataID(\"AppMeasurement:\" + s._in,(s.expectSupplementalData ? false : true));}if(s.m" + "pc('t',arguments))return;s.gl(s.vl_g);s.uns();s.m_ll();notReadyToTrack = s._handleNotReadyToTrack(vo);if (!notReadyToTrack) {if (setVariables) {s.voa(setVariables);}if(!s.td){var tl=tfs.location,a," + "o,i,x='',c='',v='',p='',bw='',bh='',j='1.0',k=s.c_w('s_cc','true',0)?'Y':'N',hp='',ct='',pn=0,ps;if(String&&String.prototype){j='1.1';if(j.match){j='1.2';if(tm.setUTCDate){j='1.3';if(s.isie&&s.isma" + "c&&s.apv>=5)j='1.4';if(pn.toPrecision){j='1.5';a=new Array;if(a.forEach){j='1.6';i=0;o=new Object;tcf=new Function('o','var e,i=0;try{i=new Iterator(o)}catch(e){}return i');i=tcf(o);if(i&&i.next){j" + "='1.7';if(a.reduce){j='1.8';if(j.trim){j='1.8.1';if(Date.parse){j='1.8.2';if(Object.create)j='1.8.5'}}}}}}}}}if(s.apv>=4)x=screen.width+'x'+screen.height;if(s.isns||s.isopera){if(s.apv>=3){v=s.n.ja" + "vaEnabled()?'Y':'N';if(s.apv>=4){c=screen.pixelDepth;bw=s.wd.innerWidth;bh=s.wd.innerHeight}}s.pl=s.n.plugins}else if(s.isie){if(s.apv>=4){v=s.n.javaEnabled()?'Y':'N';c=screen.colorDepth;if(s.apv>=" + "5){bw=s.d.documentElement.offsetWidth;bh=s.d.documentElement.offsetHeight;if(!s.ismac&&s.b){tcf=new Function('s','tl','var e,hp=0;try{s.b.addBehavior(\"#default#homePage\");hp=s.b.isHomePage(tl)?\"" + "Y\":\"N\"}catch(e){}return hp');hp=tcf(s,tl);tcf=new Function('s','var e,ct=0;try{s.b.addBehavior(\"#default#clientCaps\");ct=s.b.connectionType}catch(e){}return ct');ct=tcf(s)}}}else r=''}if(s.pl)" + "while(pn<s.pl.length&&pn<30){ps=s.fl(s.pl[pn].name,100)+';';if(p.indexOf(ps)<0)p+=ps;pn++}s.resolution=x;s.colorDepth=c;s.javascriptVersion=j;s.javaEnabled=v;s.cookiesEnabled=k;s.browserWidth=bw;s." + "browserHeight=bh;s.connectionType=ct;s.homepage=hp;s.plugins=p;s.td=1}if(vo){s.vob(vb);s.voa(vo)}if(!s.analyticsVisitorID&&!s.marketingCloudVisitorID)s.fid=s.gfid();if((vo&&vo._t)||!s.m_m('d')){if(" + "s.usePlugins)s.doPlugins(s);if(!s.abort){var l=s.wd.location,r=tfs.document.referrer;if(!s.pageURL)s.pageURL=l.href?l.href:l;if(!s.referrer&&!s._1_referrer){s.referrer=r;s._1_referrer=1}s.m_m('g');" + "if(s.lnk||s.eo){var o=s.eo?s.eo:s.lnk,p=s.pageName,w=1,t=s.ot(o),n=s.oid(o),x=o.s_oidt,h,l,i,oc;if(s.eo&&o==s.eo){while(o&&!n&&t!='BODY'){o=o.parentElement?o.parentElement:o.parentNode;if(o){t=s.ot" + "(o);n=s.oid(o);x=o.s_oidt}}if(!n||t=='BODY')o='';if(o){oc=o.onclick?''+o.onclick:'';if((oc.indexOf('s_gs(')>=0&&oc.indexOf('.s_oc(')<0)||oc.indexOf('.tl(')>=0)o=0}}if(o){if(n)ta=o.target;h=s.oh(o);" + "i=h.indexOf('?');h=s.linkLeaveQueryString||i<0?h:h.substring(0,i);l=s.linkName;t=s.linkType?s.linkType.toLowerCase():s.lt(h);if(t&&(h||l)){s.pe='lnk_'+(t=='d'||t=='e'?t:'o');s.pev1=(h?s.ape(h):'');" + "s.pev2=(l?s.ape(l):'')}else trk=0;if(s.trackInlineStats){if(!p){p=s.pageURL;w=0}t=s.ot(o);i=o.sourceIndex;if(o.dataset&&o.dataset.sObjectId){s.wd.s_objectID=o.dataset.sObjectId;}else if(o.getAttrib" + "ute&&o.getAttribute('data-s-object-id')){s.wd.s_objectID=o.getAttribute('data-s-object-id');}else if(s.useForcedLinkTracking){s.wd.s_objectID='';oc=o.onclick?''+o.onclick:'';if(oc){var ocb=oc.index" + "Of('s_objectID'),oce,ocq,ocx;if(ocb>=0){ocb+=10;while(ocb<oc.length&&(\"= \\t\\r\\n\").indexOf(oc.charAt(ocb))>=0)ocb++;if(ocb<oc.length){oce=ocb;ocq=ocx=0;while(oce<oc.length&&(oc.charAt(oce)!=';'" + "||ocq)){if(ocq){if(oc.charAt(oce)==ocq&&!ocx)ocq=0;else if(oc.charAt(oce)==\"\\\\\")ocx=!ocx;else ocx=0;}else{ocq=oc.charAt(oce);if(ocq!='\"'&&ocq!=\"'\")ocq=0}oce++;}oc=oc.substring(ocb,oce);if(oc" + "){o.s_soid=new Function('s','var e;try{s.wd.s_objectID='+oc+'}catch(e){}');o.s_soid(s)}}}}}if(s.gg('objectID')){n=s.gg('objectID');x=1;i=1}if(p&&n&&t)qs='&pid='+s.ape(s.fl(p,255))+(w?'&pidt='+w:'')" + "+'&oid='+s.ape(s.fl(n,100))+(x?'&oidt='+x:'')+'&ot='+s.ape(t)+(i?'&oi='+i:'')}}else trk=0}if(trk||qs){s.sampled=s.vs(sed);if(trk){if(s.sampled)code=s.mr(sess,(vt?'&t='+s.ape(vt):'')+s.hav()+q+(qs?q" + "s:s.rq()),0,ta);qs='';s.m_m('t');if(s.p_r)s.p_r();s.referrer=s.lightProfileID=s.retrieveLightProfiles=s.deleteLightProfiles=''}s.sq(qs)}}}else s.dl(vo);if(vo)s.voa(vb,1);}s.abort=0;s.pageURLRest=s." + "lnk=s.eo=s.linkName=s.linkType=s.wd.s_objectID=s.ppu=s.pe=s.pev1=s.pev2=s.pev3='';if(s.pg)s.wd.s_lnk=s.wd.s_eo=s.wd.s_linkName=s.wd.s_linkType='';return code};s.trackLink=s.tl=function(o,t,n,vo,f){" + "var s=this;s.lnk=o;s.linkType=t;s.linkName=n;if(f){s.bct=o;s.bcf=f}s.t(vo)};s.trackLight=function(p,ss,i,vo){var s=this;s.lightProfileID=p;s.lightStoreForSeconds=ss;s.lightIncrementBy=i;s.t(vo)};s." + "setTagContainer=function(n){var s=this,l=s.wd.s_c_il,i,t,x,y;s.tcn=n;if(l)for(i=0;i<l.length;i++){t=l[i];if(t&&t._c=='s_l'&&t.tagContainerName==n){s.voa(t);if(t.lmq)for(i=0;i<t.lmq.length;i++){x=t." + "lmq[i];y='m_'+x.n;if(!s[y]&&!s[y+'_c']){s[y]=t[y];s[y+'_c']=t[y+'_c']}s.loadModule(x.n,x.u,x.d)}if(t.ml)for(x in t.ml)if(s[x]){y=s[x];x=t.ml[x];for(i in x)if(!Object.prototype[i]){if(typeof(x[i])!=" + "'function'||(''+x[i]).indexOf('s_c_il')<0)y[i]=x[i]}}if(t.mmq)for(i=0;i<t.mmq.length;i++){x=t.mmq[i];if(s[x.m]){y=s[x.m];if(y[x.f]&&typeof(y[x.f])=='function'){if(x.a)y[x.f].apply(y,x.a);else y[x.f" + "].apply(y)}}}if(t.tq)for(i=0;i<t.tq.length;i++)s.t(t.tq[i]);t.s=s;return}}};s.wd=window;s.ssl=(s.wd.location.protocol.toLowerCase().indexOf('https')>=0);s.d=document;s.b=s.d.body;if(s.d.getElements" + "ByTagName){s.h=s.d.getElementsByTagName('HEAD');if(s.h)s.h=s.h[0]}s.n=navigator;s.u=s.n.userAgent;s.ns6=s.u.indexOf('Netscape6/');var apn=s.n.appName,v=s.n.appVersion,ie=v.indexOf('MSIE '),o=s.u.in" + "dexOf('Opera '),i;if(v.indexOf('Opera')>=0||o>0)apn='Opera';s.isie=(apn=='Microsoft Internet Explorer');s.isns=(apn=='Netscape');s.isopera=(apn=='Opera');s.ismac=(s.u.indexOf('Mac')>=0);if(o>0)s.ap" + "v=parseFloat(s.u.substring(o+6));else if(ie>0){s.apv=parseInt(i=v.substring(ie+5));if(s.apv>3)s.apv=parseFloat(i)}else if(s.ns6>0)s.apv=parseFloat(s.u.substring(s.ns6+10));else s.apv=parseFloat(v);" + "s.em=0;if(s.em.toPrecision)s.em=3;else if(String.fromCharCode){i=escape(String.fromCharCode(256)).toUpperCase();s.em=(i=='%C4%80'?2:(i=='%U0100'?1:0))}if(s.oun)s.sa(s.oun);s.sa(un);s.vl_l='suppleme" + "ntalDataID,timestamp,dynamicVariablePrefix,visitorID,marketingCloudVisitorID,analyticsVisitorID,audienceManagerLocationHint,fid,vmk,visitorMigrationKey,visitorMigrationServer,visitorMigrationServer" + "Secure,ppu,charSet,visitorNamespace,cookieDomainPeriods,cookieLifetime,pageName,pageURL,referrer,contextData,currencyCode,lightProfileID,lightStoreForSeconds,lightIncrementBy,retrieveLightProfiles," + "deleteLightProfiles,retrieveLightData';s.va_l=s.sp(s.vl_l,',');s.vl_mr=s.vl_m='timestamp,charSet,visitorNamespace,cookieDomainPeriods,cookieLifetime,contextData,lightProfileID,lightStoreForSeconds," + "lightIncrementBy';s.vl_t=s.vl_l+',variableProvider,channel,server,pageType,transactionID,purchaseID,campaign,state,zip,events,events2,products,audienceManagerBlob,linkName,linkType';var n;for(n=1;n" + "<=75;n++){s.vl_t+=',prop'+n+',eVar'+n;s.vl_m+=',prop'+n+',eVar'+n}for(n=1;n<=5;n++)s.vl_t+=',hier'+n;for(n=1;n<=3;n++)s.vl_t+=',list'+n;s.va_m=s.sp(s.vl_m,',');s.vl_l2=',tnt,pe,pev1,pev2,pev3,resol" + "ution,colorDepth,javascriptVersion,javaEnabled,cookiesEnabled,browserWidth,browserHeight,connectionType,homepage,pageURLRest,plugins';s.vl_t+=s.vl_l2;s.va_t=s.sp(s.vl_t,',');s.vl_g=s.vl_t+',trackin" + "gServer,trackingServerSecure,trackingServerBase,fpCookieDomainPeriods,disableBufferedRequests,mobile,visitorSampling,visitorSamplingGroup,dynamicAccountSelection,dynamicAccountList,dynamicAccountMa" + "tch,trackDownloadLinks,trackExternalLinks,trackInlineStats,linkLeaveQueryString,linkDownloadFileTypes,linkExternalFilters,linkInternalFilters,linkTrackVars,linkTrackEvents,linkNames,lnk,eo,lightTra" + "ckVars,_1_referrer,un';s.va_g=s.sp(s.vl_g,',');s.pg=pg;s.gl(s.vl_g);s.contextData=new Object;s.retrieveLightData=new Object;if(!ss)s.wds();if(pg){s.wd.s_co=function(o){return o};s.wd.s_gs=function(" + "un){s_gi(un,1,1).t()};s.wd.s_dc=function(un){s_gi(un,1).t()}}",
                    w = window,
                    l = w.s_c_il,
                    n = navigator,
                    u = n.userAgent,
                    v = n.appVersion,
                    e = v.indexOf('MSIE '),
                    m = u.indexOf('Netscape6/'),
                    a, i, j, x, s;
                if (un) {
                    un = un.toLowerCase();
                    if (l)
                        for (j = 0; j < 2; j++)
                            for (i = 0; i < l.length; i++) {
                                s = l[i];
                                x = s._c;
                                if ((!x || x == 's_c' || (j > 0 && x == 's_l')) && (s.oun == un || (s.fs && s.sa && s.fs(s.oun, un)))) {
                                    if (s.sa) s.sa(un);
                                    if (x == 's_c') return s
                                } else s = 0
                            }
                }
                w.s_an = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';
                w.s_sp = new Function("x", "d", "var a=new Array,i=0,j;if(x){if(x.split)a=x.split(d);else if(!d)for(i=0;i<x.length;i++)a[a.length]=x.substring(i,i+1);else while(i>=0){j=x.indexOf(d,i);a[a.length]=x.subst" + "ring(i,j<0?x.length:j);i=j;if(i>=0)i+=d.length}}return a");
                w.s_jn = new Function("a", "d", "var x='',i,j=a.length;if(a&&j>0){x=a[0];if(j>1){if(a.join)x=a.join(d);else for(i=1;i<j;i++)x+=d+a[i]}}return x");
                w.s_rep = new Function("x", "o", "n", "return s_jn(s_sp(x,o),n)");
                w.s_d = new Function("x", "var t='`^@$#',l=s_an,l2=new Object,x2,d,b=0,k,i=x.lastIndexOf('~~'),j,v,w;if(i>0){d=x.substring(0,i);x=x.substring(i+2);l=s_sp(l,'');for(i=0;i<62;i++)l2[l[i]]=i;t=s_sp(t,'');d" + "=s_sp(d,'~');i=0;while(i<5){v=0;if(x.indexOf(t[i])>=0) {x2=s_sp(x,t[i]);for(j=1;j<x2.length;j++){k=x2[j].substring(0,1);w=t[i]+k;if(k!=' '){v=1;w=d[b+l2[k]]}x2[j]=w+x2[j].substring(1)}}if(v)x=s_jn(" + "x2,'');else{w=t[i]+' ';if(x.indexOf(w)>=0)x=s_rep(x,w,t[i]);i++;b+=62}}}return x");
                w.s_fe = new Function("c", "return s_rep(s_rep(s_rep(c,'\\\\','\\\\\\\\'),'\"','\\\\\"'),\"\\n\",\"\\\\n\")");
                w.s_fa = new Function("f", "var s=f.indexOf('(')+1,e=f.indexOf(')'),a='',c;while(s>=0&&s<e){c=f.substring(s,s+1);if(c==',')a+='\",\"';else if((\"\\n\\r\\t \").indexOf(c)<0)a+=c;s++}return a?'\"'+a+'\"':" + "a");
                w.s_ft = new Function("c", "c+='';var s,e,o,a,d,q,f,h,x;s=c.indexOf('=function(');while(s>=0){s++;d=1;q='';x=0;f=c.substring(s);a=s_fa(f);e=o=c.indexOf('{',s);e++;while(d>0){h=c.substring(e,e+1);if(q){i" + "f(h==q&&!x)q='';if(h=='\\\\')x=x?0:1;else x=0}else{if(h=='\"'||h==\"'\")q=h;if(h=='{')d++;if(h=='}')d--}if(d>0)e++}c=c.substring(0,s)+'new Function('+(a?a+',':'')+'\"'+s_fe(c.substring(o+1,e))+'\")" + "'+c.substring(e+1);s=c.indexOf('=function(')}return c;");
                c = s_d(c);
                if (e > 0) {
                    a = parseInt(i = v.substring(e + 5));
                    if (a > 3) a = parseFloat(i)
                } else if (m > 0) a = parseFloat(u.substring(m + 10));
                else a = parseFloat(v);
                if (a < 5 || v.indexOf('Opera') >= 0 || u.indexOf('Opera') >= 0) c = s_ft(c);
                if (!s) {
                    s = new Object;
                    if (!w.s_c_in) {
                        w.s_c_il = new Array;
                        w.s_c_in = 0
                    }
                    s._il = w.s_c_il;
                    s._in = w.s_c_in;
                    s._il[s._in] = s;
                    w.s_c_in++;
                }
                s._c = 's_c';
                (new Function("s", "un", "pg", "ss", c))(s, un, pg, ss);
                return s
            }

            function s_giqf() {
                var w = window,
                    q = w.s_giq,
                    i, t, s;
                if (q)
                    for (i = 0; i < q.length; i++) {
                        t = q[i];
                        s = s_gi(t.oun);
                        s.sa(t.un);
                        s.setTagContainer(t.tagContainerName)
                    }
                w.s_giq = 0
            }
            s_giqf();


            // export the s_gi function which instantiates s-code
            module.exports = s_gi;

        }());

        // s-code@2.0.0

    }, {}],
    151: [function(require, module, exports) {
        var sCode = require('./ac-s-code/sCode');

        module.exports = {
            init: sCode.init,
            getInstance: sCode.getInstance
        };

    }, {
        "./ac-s-code/sCode": 164
    }],
    152: [function(require, module, exports) {
        (function() {

            'use strict';

            function sCodeAccount(bucket) {

                var s_account = '';

                if (typeof bucket === 'string') {
                    s_account = bucket;
                }

                /* AOS Campaign Check */
                if (document.location.search && s_account) {
                    var dls = document.location.search;
                    if (dls.indexOf('?cid=AOS-') > -1 || dls.indexOf('&cid=AOS-') > -1) {
                        s_account += ',applestoreWW';
                    }
                }

                return s_account;
            }

            module.exports = sCodeAccount;

        })();

    }, {}],
    153: [function(require, module, exports) {
        (function() {

            'use strict';

            var sCodePlugins = require('../plugin/sCodePlugins');
            var sCodeServers = require('./server');
            var browserHelper = require('./helper/browser');
            var dynamicObjectIdHandlerSafari = require('./../plugin/helper/dynamicObjectIdHandlerSafari');

            function setDefaults(sCode, options) {

                // @param: (expires) expects a true date object
                function resetCookie(cookieName, expires) {
                    var date = new Date();

                    // Expire in 2 years. Set it back to a Date Object since s.c_w method expects only a date object.
                    var defaultExpirationDate = new Date(date.setFullYear(date.getFullYear() + 2));
                    var expirationDate = expires || defaultExpirationDate;
                    var cookieValue = sCode.c_r(cookieName);

                    if (cookieValue) {

                        try {
                            sCode.c_w(cookieName, cookieValue, expirationDate);
                        } catch (e) {
                            // Do nothing
                        }
                    }
                }

                // Reset method using the native document.cookie method
                function resetVisitorIDCookie(cookieName, expires) {
                    var date = new Date();
                    var defaultExpirationDate = new Date(date.setFullYear(date.getFullYear() + 2)); // Expire in 2 years
                    var cookieValue = sCode.c_r(cookieName);

                    if (cookieValue) {
                        document.cookie = cookieName + "=" + cookieValue + "; expires=" + defaultExpirationDate.toUTCString() + "; domain=apple.com; path=/";
                    }
                }

                if (typeof sCode.acAnalytics !== 'object') {
                    sCode.acAnalytics = {};
                }

                // Expose this method to s-code plugin for dynamic object handling for safari
                sCode.acAnalytics.dynamicObjectIdHandlerSafari = dynamicObjectIdHandlerSafari;

                sCode.pageName = (options.pageName || '');

                sCode.currencyCode = 'USD';

                /* Link Tracking Config */
                sCode.trackDownloadLinks = true;

                sCode.trackExternalLinks = true;

                sCode.trackInlineStats = true;

                sCode.useForcedLinkTracking = true;

                sCode.forcedLinkTrackingTimeout = 100;

                sCode.linkDownloadFileTypes = 'zip,wav,mp3,doc,pdf,xls,dmg,sit,pkg,exe,m4a,rss,xml,extz,safariextz';

                sCode.linkInternalFilters = 'javascript:,apple.com' + ((options.linkInternalFilters) ? '/' + options.linkInternalFilters : '');

                sCode.linkLeaveQueryString = false;

                sCode.linkTrackVars = 'campaign';

                sCode.linkTrackEvents = 'None';

                sCode._isSafari = browserHelper.isSafari(s);

                /* Stop Safari Top Sites Calls to Omniture */
                if (browserHelper.isSafariTopSitesPreview(s) === true) {
                    sCode.t = function() {
                        return '';
                    };
                }

                // reset s_vnum cookie to expire in another two years (infinity)
                resetCookie('s_vnum_n2_us');

                // reset s_vi cookie to expire in another two years (infinity)
                resetVisitorIDCookie('s_vi');

                // delete s_pv cookie
                var tmpDate = new Date();
                tmpDate.setDate(tmpDate.getDate() - 1);
                resetCookie('s_pv', tmpDate);

                /* DynamicObjectIDs config */
                function s_getObjectID(o) {
                    var ID = o.href;
                    return ID;
                }

                sCode.getObjectID = s_getObjectID;

                /**
                 * TODO: What is `iTunesDetected` and where the heck does it come from?
                 * Right now this block will never run because in this scope,
                 * `iTunesDetected` is never going to be defined.
                 */
                if (typeof(iTunesDetected) === 'function') {

                    var activeX = document.createElement('object');

                    activeX.setAttribute('width', 1);
                    activeX.setAttribute('height', 1);
                    activeX.id = 'iTunesDetectorIE';
                    activeX.setAttribute('classid', 'clsid:D719897A-B07A-4C0C-AEA9-9B663A28DFCB');

                    document.getElementsByTagName('head')[0].appendChild(activeX);
                    sCode.prop12 = iTunesDetected() ? 'itunes' : 'no itunes';
                }

                /* Adding URL and referrer to each request */

                sCode.eVar54 = document.location.href;

                sCode.eVar49 = document.referrer;

                sCode.usePlugins = true;

                sCode.doPlugins = sCodePlugins;

                sCode.trackingServer = sCodeServers.getTrackingServer();

                sCode.trackingServerSecure = sCodeServers.getSecureTrackingServer();

                sCode.dc = sCodeServers.getDataCenterId();
            }

            module.exports = setDefaults;

        })();

    }, {
        "../plugin/sCodePlugins": 163,
        "./../plugin/helper/dynamicObjectIdHandlerSafari": 157,
        "./helper/browser": 154,
        "./server": 155
    }],
    154: [function(require, module, exports) {
        (function() {

            'use strict';

            function isSafariTopSitesPreview() {

                if (navigator && navigator.loadPurpose && navigator.loadPurpose === 'preview') {
                    return true;
                }

                return false;
            }

            function isSafari(sCode) {

                if (sCode.u.toLowerCase().indexOf('webkit') > -1) {
                    if (sCode.u.toLowerCase().indexOf('safari') > -1 && sCode.u.toLowerCase().indexOf('chrome') < 0) {
                        return true;
                    }
                }

                return false;
            }

            module.exports = {
                isSafariTopSitesPreview: isSafariTopSitesPreview,
                isSafari: isSafari
            };

        })();

    }, {}],
    155: [function(require, module, exports) {
        (function() {

            'use strict';

            var production = ['www.apple.com', 'images.apple.com', 'movies.apple.com', 'ssl.apple.com'];

            function getTrackingServer() {

                return (_isProduction()) ? 'metrics.apple.com' : location.hostname;
            }

            function getSecureTrackingServer() {

                return (_isProduction()) ? 'securemetrics.apple.com' : location.hostname;
            }

            function getDataCenterId() {

                return 112;
            }

            function _isProduction() {

                var hostname = window.location.host;

                if (production.indexOf(hostname) > -1) {
                    return true;
                }

                return false;
            }

            module.exports = {
                getTrackingServer: getTrackingServer,
                getSecureTrackingServer: getSecureTrackingServer,
                getDataCenterId: getDataCenterId
            };

        })();

    }, {}],
    156: [function(require, module, exports) {
        (function() {

            'use strict';

            function cleanPageName(sCode) {

                if (sCode.pageName) {

                    var pgEscaped = escape(sCode.pageName);

                    pgEscaped = pgEscaped.replace(/(%u2018|%u2019|%u02BC|%u02BD)/g, '%27');

                    pgEscaped = pgEscaped.replace(/(%u201C|%u201D|%E2%80%9C|%E2%80%9D)/g, '%22');

                    pgEscaped = pgEscaped.replace(/(%09|%0A|%0D)/g, '');

                    sCode.pageName = unescape(pgEscaped);
                }
            }

            module.exports = cleanPageName;

        }());

    }, {}],
    157: [function(require, module, exports) {
        (function() {

            'use strict';

            /* Function to add mouseup Event handler for exit and download links for Safari */
            function dynamicObjectIdHandlerSafari(sCode, link) {

                if (sCode.lt(link.href)) {

                    link.addEventListener('mouseup', function(evt) {

                        // Left click only
                        if (((evt.which) && (evt.which === 1)) || ((evt.button) && (evt.button === 1))) {

                            var linkHref = evt.currentTarget.href;

                            var linkType = sCode.lt(linkHref);

                            if (linkType === 'd') {

                                if (linkHref.match(/\.rss|\.xml/)) {

                                    sCode.eVar16 = sCode.prop16 = 'sign ups';

                                } else {

                                    sCode.eVar11 = ((sCode.pageName && sCode.pageName !== '') ? sCode.pageName : '') + ' - ' + linkHref.substring(linkHref.lastIndexOf('/') + 1, linkHref.length);

                                    sCode.eVar11 = sCode.eVar11.toLowerCase();

                                    sCode.eVar16 = sCode.prop16 = 'Downloads';

                                    sCode.events = sCode.apl(sCode.events, 'event5', '', '', 1);
                                }

                                sCode.linkTrackVars = 'prop16,eVar16,eVar11,events';

                                sCode.linkTrackEvents = 'event5';
                            }

                            sCode.linkTrackVars = 'None';

                            sCode.linkTrackEvents = 'None';
                        }
                    }, false);
                }
            }

            module.exports = dynamicObjectIdHandlerSafari;

        }());

    }, {}],
    158: [function(require, module, exports) {
        (function() {

            'use strict';

            function getVisitNumPerChannel(sCode) {

                var e = new Date();
                var cl;
                var cs;
                var vn = 0;
                var iv = false;
                var lm = false;
                var ch = 'no channel';
                var ct = e.getTime();
                var xs = ct + 30 * 60 * 1000; // Short expiration (30 minutes)
                var xl = ct + 730 * 24 * 60 * 60 * 1000; // Long expiration (2 yrs)
                var pn = sCode.wd.location.pathname;
                var geoCode = 'us';
                var channelMap = '';
                var i;

                /**
                 * @TODO
                 * Whatever this is used for, it should not be here. It should be defined in a module
                 */
                var channelTable = new Array('no channel', 'aos', 'homepage', 'support', 'itunes', 'myappleid.iforgot', 'trailers', 'ip', 'discussions', 'myappleid', 'quicktime', 'ipad', 'ipadmini', 'legal', 'mac', 'macosx', 'safari', 'ipod', 'developer', 'retailstore', 'macbookair', 'retail.concierge', 'macosx.downloads', 'ipodtouch', 'ios', 'macbookpro', 'webapps', 'search', 'retail.onetoone', 'icloud', 'imac', 'macmini', 'ilife', 'other', 'findouthow', 'jobs', 'mobileme', 'whymac', 'macappstore', 'hotnews', 'redirects', 'ipodnano', 'education', 'iwork', 'ipodclassic', 'macpro', 'contact', 'appletv', 'finalcutstudio', 'pr', 'productpromotions', 'ipodshuffle', 'airportexpress', 'environment', 'aperture', 'batteries', 'mac.facetime', 'productpromotions.rebate', 'timecapsule', 'displays', 'airportextreme', 'logicstudio', 'buy', 'about', 'accessibility', 'mightymouse', 'thunderbolt', 'html5', 'remotedesktop', 'magictrackpad', 'keyboard', 'business', 'retail.jointventure', 'itunesappstore', 'pro', 'science', 'logicexpress', 'channelprograms', 'startpage', 'advertising', 'financialservices', 'giftcards', 'xsan', 'server', 'battery', 'companystore', 'ali', 'supplier', 'beatles', 'usergroups', 'webbadges', 'procurement', '802.11n', 'retail', 'itunesnews', 'ibooks-author', 'osx', 'apple-events', 'applewatch');


                if (sCode.wd.location.hostname.match(/apple.com.cn/)) {
                    geoCode = 'cn';
                } else if (!pn.match(/^\/(ws|pr|g5|go|ta|wm|kb)\//)) {
                    if (pn.match(/^\/(\w{2}|befr|benl|chfr|chde|asia|lae)(?=\/)/)) {
                        geoCode = pn.split('/')[1].toLowerCase();
                    }
                }

                var c = 's_vnum_n2_' + geoCode;
                var c2 = 's_invisit_n2_' + geoCode;

                if (sCode.channel) {
                    ch = sCode.channel.substring(sCode.channel.indexOf('.') + 1, sCode.channel.length);
                    ch = ch.substring(ch.indexOf('.') + 1, ch.length);
                }

                function chLookup(channel) {
                    for (i = 0; i <= channelTable.length; i++) {
                        if (channel === channelTable[i]) {
                            return i + 1;
                        }
                    }
                }

                channelMap = chLookup(ch);
                if (!channelMap) {
                    channelMap = '0';
                }

                //remove legacy cookie, write new one
                sCode.c_w('s_vnum_' + geoCode, '', 63072000);
                sCode.c_w('s_invisit_' + geoCode, '', 63072000);
                sCode.c_w('s_invisit_n_' + geoCode, '', 63072000);
                sCode.c_w('s_vnum_n_' + geoCode, '', 63072000);

                cl = sCode.c_r(c);
                cs = sCode.c_r(c2);

                //set new cookie
                if (channelMap) {
                    var val;
                    if (cs) {
                        var csa = cs.split(/,/);
                        for (i = 0;
                            (val = csa[i]); i++) {
                            if (channelMap.toString() === val) {
                                iv = true;
                                break;
                            }
                        }
                    }
                    if (!iv) {
                        var cla = (cl) ? cl.split(/,/) : [];
                        var vs;
                        for (i = 0;
                            (val = cla[i]); i++) {
                            vs = val.split(/\|/);
                            if (channelMap.toString() === vs[0]) {
                                vn = parseInt(vs[1], 10) + 1;
                                cla[i] = vs[0] + '|' + vn;
                                lm = true;
                                break;
                            }
                        }

                        e.setTime(xs);
                        sCode.c_w(c2, (cs ? (cs + ',' + channelMap) : channelMap), e);
                        e.setTime(xl);
                        if (lm) {
                            sCode.c_w(c, cla.toString(), e);
                            return ch + '=' + vn;
                        } else {
                            if (cla.toString()) {
                                cla.push(channelMap + '|' + 1);
                            } else {
                                cla = (channelMap + '|' + 1);
                            }

                            sCode.c_w(c, cla.toString(), e);
                            return ch + '=' + 1;
                        }
                    }
                }
            }

            module.exports = getVisitNumPerChannel;

        }());

    }, {}],
    159: [function(require, module, exports) {
        (function() {

            'use strict';

            function osDetect(sCode) {
                var match;

                if (sCode.u.match(/windows/i)) {
                    sCode.prop9 = "windows";
                    return;
                }

                if (sCode.u.match(/(kindle|silk-accelerated)/i)) {
                    if (sCode.u.match(/(kindle fire|silk-accelerated)/i)) {
                        sCode.prop9 = "kindle fire";
                    } else {
                        sCode.prop9 = "kindle";
                    }
                    return;
                }

                if (sCode.u.match(/(iphone|ipod|ipad)/i)) {
                    match = sCode.u.match(/OS [0-9_]+/i);
                    sCode.prop9 = 'i' + match[0].replace(/_/g, '.');
                    return;
                }

                if (sCode.u.match(/android/i)) {
                    sCode.prop9 = sCode.u.match(/android [0-9]\.?[0-9]?\.?[0-9]?/i);
                    return;
                }

                if (sCode.u.match(/webos\/[0-9\.]+/i)) {
                    match = sCode.u.match(/webos\/[0-9]\.?[0-9]?\.?[0-9]?/i);
                    sCode.prop9 = match[0].replace(/webos\//i, 'web os ');
                    return;
                }

                if (sCode.u.match(/rim tablet os [0-9\.]+/i)) {
                    match = sCode.u.match(/rim tablet os [0-9]\.?[0-9]?\.?[0-9]?/i);
                    sCode.prop9 = match[0].replace(/rim tablet os/i, 'rim os ');
                    return;
                }

                if ((sCode.u.match(/firefox\/(\d{2}||[3-9])/i) || sCode.u.match(/AppleWebKit\//)) && sCode.u.match(/Mac OS X [0-9_\.]+/)) {
                    var matches = sCode.u.match(/[0-9_\.]+/g);
                    matches = matches[1].split(/_|\./);
                    sCode.prop9 = matches[0] + "." + matches[1] + ".x";
                    return;
                }

                var mv = sCode.u.match(/AppleWebKit\/\d*/i) && sCode.u.match(/AppleWebKit\/\d*/i).toString().replace(/AppleWebKit\//i, '');

                if (mv > 522) {
                    sCode.prop9 = "10.5.x";
                } else if (mv > 400) {
                    sCode.prop9 = "10.4.x";
                } else if (mv > 99) {
                    sCode.prop9 = "10.3.x";
                } else if (mv > 80) {
                    sCode.prop9 = "10.2.x";
                } else {
                    sCode.prop9 = "mac unknown or non-safari";
                }
            }

            module.exports = osDetect;

        }());

    }, {}],
    160: [function(require, module, exports) {
        (function() {

            'use strict';

            function percentPageViewed(sCode) {

                if (!sCode.prop17) {

                    var percent = sCode.getPercentPageViewed(sCode.pageName);

                    if (percent && percent.length >= 5 && typeof(percent[1]) !== 'undefined') {
                        sCode.prop14 = percent[0];
                        sCode.prop17 = percent[1] + ':' + percent[2];
                        sCode.prop28 = Math.round(percent[3] / 10) * 10;
                        sCode.eVar17 = sCode.eVar18 = '';

                        if (percent[4]) {

                            var sva = percent[4].split(/\|/g);
                            var sv = '';
                            var svaSize = sva.length;

                            for (var i = 0; i < svaSize; i++) {
                                if (i !== (svaSize - 1)) {

                                    var diff = sva[i + 1].split(/:/)[0] - sva[i].split(/:/)[0];

                                    if (diff > 100) {

                                        sv += sva[i].split(/:/)[1];

                                        var nz = diff / 100;

                                        while (nz > 1) {

                                            sv += '0';

                                            nz--;
                                        }

                                    } else {

                                        sv += sva[i].split(/:/)[1];

                                    }

                                } else {

                                    sv += sva[i].split(/:/)[1];
                                }
                            }

                            if (sv.length > 254) {

                                sCode.eVar17 = sv.substring(0, 254);

                                sCode.eVar18 = sv.substring(255, sv.length);

                            } else {

                                sCode.eVar17 = sv;
                            }
                        }

                        if (!sCode.tcall) {

                            sCode.linkTrackVars = 'prop17,prop28';
                        }
                    }
                }
            }

            module.exports = percentPageViewed;

        }());

    }, {}],
    161: [function(require, module, exports) {
        (function() {

            'use strict';

            function plpChannel(sCode) {

                if (((sCode.pageName && sCode.prop14 && sCode.pageName.toLowerCase() !== sCode.prop14.toLowerCase()) || !sCode.prop14) && sCode.tcall) {
                    var ch;
                    var pathLengthValue;
                    var cookieValue = sCode.c_r('s_pathLength');

                    var pathLengthArray = (cookieValue.indexOf(',') > -1) ? cookieValue.split(',') : [];
                    var e = new Date();
                    var ct = e.getTime();

                    e.setTime(ct + 30 * 60 * 1000);

                    if (sCode.channel) {

                        ch = sCode.channel.substring(sCode.channel.indexOf('.') + 1, sCode.channel.length);

                        ch = ch.substring(ch.indexOf('.') + 1, ch.length);

                    } else {
                        ch = 'no channel';
                    }

                    if (pathLengthArray.length !== 0 && pathLengthArray.toString().indexOf(ch + '=') > -1) {

                        var pathLengthArraySize = pathLengthArray.length;

                        for (var i = 0; i < pathLengthArraySize; i++) {

                            if (pathLengthArray[i].toString().indexOf(ch + '=') > -1) {

                                pathLengthValue = pathLengthArray[i].split('=');

                                ++pathLengthValue[1];

                                pathLengthArray[i] = pathLengthValue[0] + '=' + pathLengthValue[1];

                                sCode.prop48 = pathLengthValue[1];
                            }
                        }

                        sCode.c_w('s_pathLength', pathLengthArray, e);

                    } else {

                        pathLengthValue = cookieValue + ch + '=' + 1 + ',';

                        sCode.c_w('s_pathLength', pathLengthValue, e);

                        sCode.prop48 = '1';
                    }

                }
            }

            module.exports = plpChannel;

        }());

    }, {}],
    162: [function(require, module, exports) {
        (function() {

            'use strict';

            function setMembership(sCode) {

                if (sCode.tcall) {

                    var membership;

                    var pathname = window.location.pathname;

                    var newMembership = false;

                    var noMatch = true;

                    if (sCode.c_r('iTunesPresent') || (sCode.prop12 && sCode.prop12 === 'iTunes')) {
                        membership = (membership) ? membership + 'it,' : 'it,';
                    }

                    if (sCode.c_r('hasMobileMe')) {
                        membership = (membership) ? membership + 'mm,' : 'mm,';
                    }

                    if (sCode.c_r('DefaultAppleID') || (sCode.pageName && sCode.pageName.match(/iforgot - cr or email option/))) {
                        membership = membership ? membership + 'aid,' : 'aid,';
                    }

                    if (sCode.c_r('trackStartpage')) {
                        membership = membership ? membership + 'sp,' : 'sp,';
                    }

                    if (sCode.prop11) {
                        if (sCode.prop11.match('3p')) {
                            membership = membership ? membership + '3p,' : '3p,';
                        }
                    }

                    if (sCode.pageName) {
                        if (sCode.pageName.match(/one to one - index/)) {
                            membership = membership ? membership + 'o2o,' : 'o2o,';
                        }
                    }

                    if (pathname.match('/welcomescreen/')) {

                        var portion;

                        if (portion === pathname.match('ilife.*')) {

                            portion = 'il' + portion.toString().match('[0-9]+') + ',';
                            membership = membership ? membership + portion : portion;

                        } else if (portion === pathname.match('iwork.*')) {

                            portion = 'iwk' + portion.toString().match('[0-9]+') + ',';
                            membership = membership ? membership + portion : portion;

                        } else if (portion === pathname.match('itunes.*')) {

                            portion = 'it' + portion.toString().match('[0-9]+') + ',';
                            membership = membership ? membership + portion : portion;

                        } else if (portion === pathname.match('aperture.*')) {

                            portion = 'ap' + portion.toString().match('[0-9]+') + ',';
                            membership = membership ? membership + portion : portion;
                        }
                    }

                    if (sCode.getQueryParam('sr') && sCode.getQueryParam('vr')) {

                        var ver = sCode.getQueryParam('vr');

                        ver = ver.substring(0, ver.indexOf('-')) + ',';

                        membership = (membership) ? membership + ver : ver;
                    }

                    if (typeof(membership) !== 'undefined') {
                        var e;
                        var ct;
                        membership = membership.substring(0, membership.length - 1).toLowerCase();
                        membership = membership.split(',');

                        if (sCode.c_r('s_membership')) {

                            var membershipCookie = sCode.c_r('s_membership').split(/:/);

                            membershipCookie.splice(0, 1);

                            for (var i = 0; i < membership.length; i++) {
                                for (var j = 0; j < membershipCookie.length; j++) {
                                    if (membershipCookie[j] === membership[i]) {
                                        noMatch = false;
                                    }
                                }

                                if (noMatch) {
                                    membershipCookie[membershipCookie.length] = membership[i];
                                    newMembership = true;
                                }

                                noMatch = true;
                            }

                            if (newMembership) {

                                e = new Date();

                                membership = membershipCookie.length + ':' + membershipCookie.toString().replace(/,/g, ':');
                                ct = e.getTime();
                                e.setTime(ct + 63072000); //Two years
                                sCode.c_w('s_membership', membership, e);
                                sCode.prop31 = membership;
                            }
                        } else {
                            membership = membership.length + ':' + membership.toString().replace(/,/g, ':');
                            e = new Date();
                            ct = e.getTime();
                            e.setTime(ct + 63072000); //Two years
                            sCode.c_w('s_membership', membership, e);
                            sCode.prop31 = membership;
                        }
                    }

                    if (!sCode.prop31 && !sCode.c_r('s_pathLength')) {
                        sCode.prop31 = sCode.c_r('s_membership');
                    }
                }
            }

            module.exports = setMembership;

        }());

    }, {}],
    163: [function(require, module, exports) {
        (function() {

            'use strict';

            var plpChannel = require('./helper/plpChannel');
            var cleanPageName = require('./helper/cleanPageName');
            var osDetect = require('./helper/osDetect');
            var percentPageViewed = require('./helper/percentPageViewed');
            var setMembership = require('./helper/setMembership');
            var getVisitNumPerChannel = require('./helper/getVisitNumPerChannel');


            function sCodePlugins(sCode) {

                sCode.tcall = (typeof(sCode.linkType) === 'undefined') ? true : false;

                if (typeof(cleanPageName) === 'function') {
                    cleanPageName(sCode);
                }


                /**
                 * DynamicObjectIDs for Clickmap
                 */
                var dynamicObjectPathExp = '/(apple.com\/retail\/.+\/map\/|apple.com\/buy\/locator\/|discussions.apple.com|discussionsjapan.apple.com)/g';

                if (!sCode.d.URL.match(dynamicObjectPathExp)) {
                    sCode.setupDynamicObjectIDs();
                }


                /**
                 * Detecting 1x vs 2x Platform and setting Prop 5
                 */
                if (navigator && navigator.platform) {
                    if (window.devicePixelRatio >= 1.5) {
                        sCode.prop5 = navigator.platform + ' 2x';
                    } else {
                        sCode.prop5 = navigator.platform;
                    }
                }

                /**
                 * Redirect Referrer 'ref' query string
                 */
                var tempVar1 = sCode.getQueryParam('ref');

                if (tempVar1 && sCode.tcall) {
                    sCode.referrer = tempVar1;
                } else if (tempVar1 && !sCode.tcall) {
                    sCode.referrer = '';
                }


                /**
                 * External Campaigns
                 */
                if (!sCode.campaign) {

                    sCode.campaign = sCode.getQueryParam('cid');

                    sCode.setClickMapEmail('Email_PageName,Email_OID', 'Email_OT');

                    if (sCode.campaign.match(/OAS-.+?-DOMAINS-/i)) {

                        var tempVar0 = 'http://' + sCode.campaign.replace(/OAS-.+?-DOMAINS-/i, '');

                        sCode.referrer = (sCode.tcall) ? tempVar0 : '';
                    }
                }


                /**
                 * Redirect Alias
                 */
                sCode.server = sCode.getQueryParam('alias');

                if (!sCode.server) {
                    sCode.server = 'new approach ac-analytics';
                }


                /**
                 * Set campaign
                 */
                sCode.campaign = sCode.getValOnce(sCode.campaign, 's_campaign', 0);


                /**
                 * Set Campaign Path
                 */
                sCode.prop6 = (!sCode.prop6 && sCode.getQueryParam('cp') && sCode.pageName) ? ('D="' + sCode.getQueryParam('cp').toLowerCase() + ': ' + sCode.pageName + '"') : sCode.prop6;


                /**
                 * Set Campaign Channel
                 */
                sCode.prop11 = sCode.getQueryParam('sr');

                if (!sCode.d.URL.match(/\/channel\//) && !sCode.prop11 && sCode.c_r("s_3p")) {

                    sCode.prop11 = sCode.c_r('s_3p');

                    sCode.c_w('s_3p', '', -1);
                }



                /**
                 * Internal Campaigns
                 * TODO: Make sure we want this logic. Seems a little blah to me.
                 */
                sCode.eVar7 = (!sCode.eVar7) ? sCode.getQueryParam('aid') : '';

                sCode.eVar7 = sCode.getValOnce(sCode.eVar7, 's_var_7', 0);


                /**
                 * Internal Search
                 */
                if (sCode.eVar2) {

                    sCode.events = sCode.apl(sCode.events, 'event6', ', ', 1);
                }

                if ((!sCode.d.URL.match(/apple.com\/(\w{2}|befr|benl|chfr|chde|asia|lae)\/search\//) && !sCode.d.URL.match(/apple.com\/search\//)) && (sCode.d.referrer.match(/apple.com\/(\w{2}|befr|benl|chfr|chde|asia|lae)\/search\//) || sCode.d.referrer.match(/apple.com\/search\//))) {

                    sCode.eVar2 = (sCode.d.referrer.match(/\/support\//)) ? "acs: " : ((sCode.d.referrer.match(/\/store\//) ? "aos: " : "www: "));

                    if (sCode.d.referrer.match(/apple.com\/(\w{2}|befr|benl|chfr|chde|asia|lae)\/search/)) {

                        sCode.eVar2 += sCode.getQueryParam('q', '', sCode.d.referrer).replace(/\+/g, ' ');

                        var geo = sCode.d.referrer.match(/\/(\w{2}|befr|benl|chfr|chde|asia|lae)\//i);

                        sCode.eVar2 += " (" + geo[0].replace(/\//g, '') + ")";
                    } else {

                        sCode.eVar2 += sCode.getQueryParam('q', '', sCode.d.referrer).replace(/\+/g, ' ') + " (us)";
                    }
                }

                /**
                 * Used to populate the Referrer Type report
                 */
                if (sCode.prop11 === 'em' && sCode.tcall) {

                    sCode.referrer = 'imap://chatterbox.com';
                }

                if (sCode.prop11 === 'app' && sCode.tcall) {

                    sCode.referrer = 'file://fromApp';
                }

                if (document.referrer && document.referrer.indexOf('apple.com/startpage/') > -1 && sCode.tcall) {

                    sCode.referrer = 'news://startpage.com';

                    sCode._1_referrer = 1;
                }

                if (typeof(percentPageViewed) === 'function') {
                    percentPageViewed(sCode);
                }

                /**
                 * Device orientation changes
                 */
                sCode.prop38 = (sCode.tcall) ? sCode.deviceOrientationChanges(true) : '';


                /**
                 * Product Ownership (from Chatterbox)
                 */
                sCode.prop32 = sCode.eVar32 = sCode.getQueryParam('psid');

                if (sCode.prop32 || sCode.c_r('s_sid')) {

                    var e = new Date();

                    var ct = e.getTime();

                    e.setTime(ct + 630720000); //Two years

                    if (sCode.prop32) {
                        sCode.c_w('s_psid', sCode.prop32, e);
                    } else {
                        sCode.c_w('s_psid', sCode.c_r('s_sid'), e);
                    }

                    sCode.c_w('s_sid', '', -1);
                }

                if (!sCode.prop32 && !sCode.c_r('s_pathLength')) {

                    sCode.prop32 = sCode.c_r('s_psid');
                }

                /**
                 * Enhanced Download Tracking: Populate eVar11 with file name and fire event15
                 */
                sCode.linkLeaveQueryString = true;

                var pageURL = sCode.downloadLinkHandler();

                if (pageURL) {

                    if (pageURL.match(/\.rss|\.xml/)) {

                        sCode.eVar16 = sCode.prop16 = 'sign ups';

                    } else {

                        sCode.eVar11 = ((sCode.pageName && sCode.pageName !== '') ? sCode.pageName : '') + ' - ' + pageURL.substring(pageURL.lastIndexOf('/') + 1, pageURL.length);

                        sCode.eVar16 = sCode.prop16 = 'downloads';

                        sCode.events = sCode.apl(sCode.events, 'event5', ', ', 1);
                    }

                    //Track eVar & Event

                    sCode.linkTrackVars = 'prop16,eVar16,eVar11,events';

                    sCode.linkTrackEvents = 'event5';
                }

                sCode.linkLeaveQueryString = false;


                /**
                 * OS Detection
                 */
                if (typeof(osDetect) === 'function') {
                    osDetect(sCode);
                }


                /**
                 * Click Depth Check
                 */
                if (sCode.pageName && sCode.pageName.match(/feedback - thank you/)) {

                    sCode.prop16 = sCode.eVar16 = "feedback";
                }

                sCode.linkLeaveQueryString = true;

                var exitUrl = sCode.linkHandler('itms.apple.com|itunes.apple.com', 'e');

                var url = sCode.linkHandler('ax.itunes.apple.com/WebObjects/MZStoreServices.woa/ws/RSS/|rss.support.apple.com', 'o');

                if (url) {

                    sCode.eVar16 = sCode.prop16 = 'sign ups';

                    sCode.linkTrackVars = 'eVar16,prop16';
                }

                sCode.linkLeaveQueryString = false;

                /**
                 * Membership Tracking
                 */
                if (typeof(setMembership) === 'function') {
                    setMembership(sCode);
                }


                /**
                 * Path Per Channel Length
                 */
                if (typeof plpChannel === 'function') {
                    plpChannel(sCode);
                }

                /**
                 * Determine the Number of Visits  Per Channel
                 */
                if (sCode.tcall) {

                    sCode.prop50 = getVisitNumPerChannel(s);
                }


                /**
                 * Populate channel into hier for adobe insight
                 */
                sCode.hier1 = (sCode.channel) ? sCode.channel : '';

                sCode.linkTrackVars = sCode.apl(sCode.linkTrackVars, 'hier1', ', ', 1);

                // Remove all spaces from linkTrackVars
                sCode.linkTrackVars = sCode.linkTrackVars.replace(new RegExp(' ', 'g'), '');



                /**
                 * Populate Prop 49 with Visitor ID
                 */
                function getCleanVisitorId() {
                    var visitorId = (sCode && sCode.c_r) ? sCode.c_r('s_vi') : '';
                    var match = (visitorId) ? visitorId.match(/^\s*\[CS\]v1\|(.+)\[CE\]\s*$/) : null;

                    if (match) {
                        return match[1];
                    }
                }

                sCode.prop49 = 'D=' + (getCleanVisitorId() || 's_vi');

                // Adding properties to support AOS
                // Affiliate ID - A cookie is set for the store if a user is coming from an affiliate site (we know if "afid" is present in the query parameters)
                // Read the value of the cookie and set it in eVar10 for the store
                var eVar10 = sCode.getQueryParam("afid");

                if (eVar10) {
                    sCode.eVar10 = sCode.getValOnce(eVar10, "s_afc");
                }

                /**
                 * Copy current URL Dynamically
                 */
                sCode.prop4 = (sCode.prop4) ? sCode.prop4 : 'D=g';

                // Retail cookie - A cookie set by the store when a user favorites their local apple store
                var retailCookie = sCode.c_r("rtsid") || sCode.c_r("rtsidInt") || null;
                if (retailCookie) {
                    if (!sCode.events) {
                        sCode.events = "event37";
                    } else {
                        if (typeof sCode.events === "string" && sCode.events.indexOf("event37") === -1) {
                            sCode.events += ",event37";
                        }
                    }
                }

                /**
                 * Manage s_code Vars: Lowercase all variables, except for one specified in the second parameter.
                 */
                sCode.manageVars('lowercaseVars', 'purchaseID,pageType,events,products,transactionID', 2);
            }

            module.exports = sCodePlugins;

        })();



    }, {
        "./helper/cleanPageName": 156,
        "./helper/getVisitNumPerChannel": 158,
        "./helper/osDetect": 159,
        "./helper/percentPageViewed": 160,
        "./helper/plpChannel": 161,
        "./helper/setMembership": 162
    }],
    164: [function(require, module, exports) {
        (function() {

            'use strict';

            var ac_Object = require('@marcom/ac-object');
            var sCode = require('@marcom/s-code');
            var sCodeAccount = require('./config/account');
            var setDefaults = require('./config/defaults');
            var sCodeInstance;

            var initDefaults = {
                force: false
            };

            /**
             * @desc Inits sCode once and returns the instance. Returns existing instance on subsequent calls.
             * @param  {Object} options Hash of user options
             * @return {Object} The sCode instance
             */
            function init(options) {

                options = ac_Object.defaults(initDefaults, options || {});

                if (!sCodeInstance || options.force === true) {
                    var bucket = (options.bucket || '');
                    sCodeInstance = window.s = sCode.init(sCodeAccount(bucket));
                    var plugins = sCode.plugins.init(sCodeInstance);

                    setDefaults(sCodeInstance, options);
                }

                return sCodeInstance;
            }

            function getInstance() {
                return sCodeInstance;
            }

            module.exports = {
                init: init,
                getInstance: getInstance
            };

        }());
    }, {
        "./config/account": 152,
        "./config/defaults": 153,
        "@marcom/ac-object": 122,
        "@marcom/s-code": 136
    }],
    165: [function(require, module, exports) {
        /**
         * More or less follows this specification:
         * http://wiki.commonjs.org/wiki/Promises/A
         * Other references:
         * http://en.wikipedia.org/wiki/Futuresandpromises
         * http://livedocs.dojotoolkit.org/dojo/Deferred
         * http://www.sitepen.com/blog/2010/05/03/robust-promises-with-dojo-deferred-1-5/
         * http://api.jquery.com/category/deferred-object/
         *
         * Understanding Deferreds
         * ====================================
         * var asyncTask = function() {
         *      var def = new Deferred();
         *
         *      setTimeout(function() {
         *          def.resolve(1);
         *      }, 1000);
         *
         *      return def.promise();
         *  }
         *
         *  var haveAllData = Deferred.when(1, asyncTask());
         *
         *  haveAllDataPromise.then(function(data) {
         *      var result = data[0] + data[1];
         *      console.log(result); // logs 2
         *      return result;
         *  }).then(function(data) {
         *      console.log(data * 2); // logs 4
         *  })
         *
         */
        (function(root, factory) {
            if (typeof exports === "object" && exports) {
                module.exports = factory; // CommonJS
            } else if (typeof define === "function" && define.amd) {
                define(factory); // AMD
            } else {
                root.Deferred = factory; // <script>
            }
        }(this, (function() {
            'use strict';

            var exports = {};

            var statuses, each, CallbackContainer, funcOrEmpty, Deferred, Promise, promiseProto, passThrough;

            statuses = {
                0: 'pending',
                1: 'resolved',
                2: 'rejected'
            };

            // Used to loop through the pending promises for a given deferred.
            // promises must be fulfilled in order
            each = function(type, data) {
                var i, pending, length, callbackObj, callbackResult;

                if (this._status !== 0) {
                    if (console && console.warn) {
                        console.warn('Trying to fulfill more than once.');
                    }
                    return false;
                }

                // store the data for promises after fulfillment  
                this.data = data;

                // reference to array of pending promises
                pending = this.pending;
                length = pending.length;

                for (i = 0; i < length; i++) {
                    callbackObj = pending[i];

                    // If callback of type (resolve, reject, progress) exists, invoke it.
                    if (callbackObj[type]) {
                        callbackResult = callbackObj[type](data);
                    }

                    // Pipe whatever is returned from the callback to the 
                    // callback's deferred. This enables chaining. 
                    if (typeof callbackResult === 'object' && callbackResult.hasOwnProperty('then') && callbackResult.hasOwnProperty('status')) {
                        callbackResult.then(function(data) {
                            callbackObj.deferred.resolve(data);
                        }, function(data) {
                            callbackObj.deferred.reject(data);
                        }, function(data) {
                            callbackObj.deferred.progress(data);
                        });
                    } else {
                        callbackObj.deferred[type](callbackResult || undefined);
                    }

                }

                // if we are not updating progress, remove all the pending promises
                // as they have been now fulfilled or rejected and they cannot be fullfilled/rejected
                // more than once.
                if (type !== 'progress') {
                    pending = [];
                }

                return true;
            };


            /**
             * Creates a Promise object
             * @name Promise
             */
            Promise = function(then, status) {
                this.then = then;
                this.status = status;
            };

            promiseProto = Promise.prototype;

            /* 
             * Shorthands for success, fail, and progress.
             * passThrough is used to pipe data through for chaining
             */
            passThrough = function(value) {
                return value;
            };

            promiseProto.success = function(callback, context) {
                return this.then(callback.bind(context), passThrough, passThrough);
            };

            promiseProto.fail = function(callback, context) {
                return this.then(passThrough, callback.bind(context), passThrough);
            };

            promiseProto.progress = function(callback, context) {
                return this.then(passThrough, passThrough, callback.bind(context));
            };

            funcOrEmpty = function(func) {
                if (typeof func !== 'function') {
                    return function() {};
                }
                return func;
            };

            CallbackContainer = function(success, error, progress) {
                this.resolve = funcOrEmpty(success);
                this.reject = funcOrEmpty(error);
                this.progress = funcOrEmpty(progress);
                this.deferred = new Deferred();
            };

            /**
             * Creates a Deferred object
             * @class Asynch operation? Make a promise that you'll get that data in the future.
             * @name Deferred
             */
            Deferred = function() {
                // promises that are waiting to be fulfilled
                this.pending = [];

                this._status = 0; // initially pending

                // consumer access to then (does this need anything else?)
                this._promise = new Promise(this.then.bind(this), this.status.bind(this));
            };

            Deferred.prototype = /** @lends Deferred.prototype */ {
                /**
                 * Gets the status of the deferred.
                 * Possible statuses: pending, resolved, rejected, canceled
                 */
                status: function() {
                    return statuses[this._status];
                },
                /**
                 * Returns the promise object associated with a given deferrred instance. A promise can
                 * observe the deferred, but cannot resolve it.
                 */
                promise: function() {
                    return this._promise;
                },
                /**
                 * Alerts anyone that is listening for updates on a promise.
                 * @param [update] Update data to send to listeners
                 */
                progress: function(update) {
                    each.call(this, 'progress', update);
                    return this._promise;
                },
                /**
                 * Called when the deferred task is complete and successful.
                 * @param [value] Data resulting from the deferred task
                 */
                resolve: function(value) {
                    each.call(this, 'resolve', value);
                    if (this._status === 0) {
                        this._status = 1;
                    }
                    return this._promise;
                },
                /**
                 * Called when the deferred task errors out.
                 * @param [error] Error message to pass to listeners
                 */
                reject: function(error) {
                    each.call(this, 'reject', error);
                    if (this._status === 0) {
                        this._status = 2;
                    }
                    return this._promise;
                },
                /**
                 * Used to set callbacks on the deferred. This method is exposed to other code
                 * through the promises object.
                 * @param {Function} [success] Invoked when a deferred is resolved
                 * @param {Function} [error] Invoked when a deferred is rejected
                 * @param {Function} [progress] May be invoked when progress is made on a deferred task
                 */
                then: function(success, error, progress) {
                    var result, callbackObject;

                    callbackObject = new CallbackContainer(success, error, progress);

                    if (this._status === 0) {
                        this.pending.push(callbackObject);
                    } else if (this._status === 1 && typeof success === 'function') {
                        result = success(this.data);
                        if (typeof result === 'object' && result.hasOwnProperty('then') && result.hasOwnProperty('status')) {
                            result.then(function(data) {
                                callbackObject.deferred.resolve(data);
                            }, function(data) {
                                callbackObject.deferred.reject(data);
                            }, function(data) {
                                callbackObject.deferred.progress(data);
                            });
                        } else {
                            callbackObject.deferred.resolve(result);
                        }
                    } else if (this._status === 2 && typeof error === 'function') {
                        result = error(this.data);
                        callbackObject.deferred.reject(result);
                    }

                    return callbackObject.deferred.promise();

                }
            };

            /**
             * Execute code when all deferred tasks have completed.
             * Accepts regular variables and promises. Returns a new promise.
             * @name when
             * @function
             *
             * @example
             * var promise = Deferred.when(1, asynchRequest());
             * promise.then(function(a, b) {
             *  console.log(a + b); // 1 + data returned from server
             * }
             */
            var when = function() {
                var values, deferred, pending, success, fail;

                values = [].slice.call(arguments);
                deferred = new Deferred();
                pending = 0;

                success = function(value) {
                    pending--;

                    var i = values.indexOf(this);
                    values[i] = value;

                    if (pending === 0) {
                        deferred.resolve(values);
                    }
                };

                fail = function(error) {
                    deferred.reject(error);
                };

                values.forEach(function(value) {
                    if (value.then) {
                        pending++;
                    }
                });

                values.forEach(function(value) {
                    if (value.then) {
                        value.then(success.bind(value), fail);
                    }
                });

                return deferred.promise();
            };

            Deferred.when = when;

            exports.Deferred = Deferred;

            return exports;

        }())));

    }, {}],
    166: [function(require, module, exports) {

        "use strict";
        /**
         * @name defer.Deferred
         * @class Deferred object.
         * <pre>Deferred = require('defer/Deferred');</pre>
         * <p>API based off a subset of <a href="https://github.com/cujojs/when">when.js</a>.
         * <p>This is the interface we provide, however implementation is provided by a 3rd party library such as jett, when or jQuery.<br/>
         * @see <a href="https://github.com/cujojs/when">when.js</a>
         * @see <a href="http://api.jquery.com/category/deferred-object">jQuery Deferred Object</a>
         * @description Deferred constructor. (see example usage below)
         * @example var deferred = new Deferred();
         *
         * // Some async operation
         * setTimeout(function () {
         *     deferred.resolve();
         * },2000);
         *
         * // Pass the promise on
         * return deferred.promise();
         */

        function Deferred() {}

        Deferred.prototype = {
            /**
             *  @name defer.Deferred#resolve
             *  @description Signals resolution of the deferred (as per when.js spec)
             *  @return {defer.Promise}
             *  @function
             */
            'resolve': function resolve() {
                this._defer.resolve.apply(this._defer, Array.prototype.slice.call(arguments));
                return this.promise();
            },
            /**
             *  @name defer.Deferred#reject
             *  @description Signals rejection of the deferred (as per when.js spec)
             *  @return {defer.Promise}
             *  @function
             */
            'reject': function reject() {
                this._defer.reject.apply(this._defer, Array.prototype.slice.call(arguments));
                return this.promise();
            },
            /**
             *  @name defer.Deferred#progress
             *  @description Signals progression of the deferred (as per when.js spec)
             *  @deprecated as of 1.2.0, since it is not part of the A+ spec. Recommend using ac-event-emitter for progress signaling.
             *  @return {defer.Promise}
             *  @function
             */
            'progress': function progress() {
                var message = 'ac-defer.progress is deprecated since it is not part of the A+ spec. Recommend using ac-event-emitter for progress signaling';
                console.warn(message);
                this._defer.progress.apply(this._defer, Array.prototype.slice.call(arguments));
                return this.promise();
            },
            /**
             *  @name defer.Deferred#then
             *  @description Attach callbacks to the deferred
             *  @param {Function} success
             *  @param {Function} failure
             *  @param {Function} progress
             *  @return {defer.Promise}
             *  @function
             */
            'then': function then() {
                this._defer.then.apply(this._defer, Array.prototype.slice.call(arguments));
                return this.promise();
            },
            /**
             *  @name defer.Deferred#promise
             *  @description gets the deferred promise (as per jQuery spec)
             *  @return {defer.Promise}
             *  @function
             */
            'promise': function promise() {
                return this._defer.promise.apply(this._defer, Array.prototype.slice.call(arguments));
            }

            /**
             * @name defer.Deferred.join
             * @static
             * @description Return a {@link defer.Promise} that will resolve only once all the inputs have resolved. The resolution value of the returned promise will be an array containing the resolution values of each of the inputs.
             * @example var joinedPromise = Deferred.join(promiseOrValue1, promiseOrValue2, ...);
             *
             * @example // largerPromise will resolve to the greater of two eventual values
             * var largerPromise = defer.join(promise1, promise2).then(function (values) {
             *     return values[0] > values[1] ? values[0] : values[1];
             * });
             * @function
             * @param {defer.Promise} promiseOrValue1
             * @param {defer.Promise} promiseOrValue2 ...
             * @return {defer.Promise}
             * @see defer.Deferred#all
             */
            /**
             * @name defer.Deferred.all
             * @static
             * @description Return a {@link defer.Promise} that will resolve only once all the items in array have resolved. The resolution value of the returned promise will be an array containing the resolution values of each of the items in array.
             * @example var promise = Deferred.all(arrayOfPromisesOrValues);
             * @function
             * @param {Array} arrayOfPromisesOrValues Array of {@link defer.Promise} or values
             * @return {defer.Promise}
             * @see defer.Deferred#join
             */

        };

        module.exports = Deferred;

    }, {}],
    167: [function(require, module, exports) {
        'use strict';
        /**
         * @name interface.smartsign
         * @inner
         * @namespace Provides {@link defer} object using Smartsign's implementation.
         * <br/>
         * @description Provides {@link defer} object using Smartsign's implementation.
         */
        var proto = new(require('./ac-deferred/Deferred'))(),
            SmartsignDeferred = require('smartsign-deferred').Deferred;

        function Deferred() {
            this._defer = new SmartsignDeferred();
        }

        Deferred.prototype = proto;

        module.exports.join = function join() {
            return SmartsignDeferred.when.apply(null, [].slice.call(arguments));
        };

        module.exports.all = function all(arrayOfPromises) {
            return SmartsignDeferred.when.apply(null, arrayOfPromises);
        };

        module.exports.Deferred = Deferred;
    }, {
        "./ac-deferred/Deferred": 166,
        "smartsign-deferred": 165
    }],
    168: [function(require, module, exports) {
        /** 
         * @module ac-array
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        module.exports = {
            flatten: require('./ac-array/flatten'),
            intersection: require('./ac-array/intersection'),
            toArray: require('./ac-array/toArray'),
            union: require('./ac-array/union'),
            unique: require('./ac-array/unique'),
            without: require('./ac-array/without')
        };

    }, {
        "./ac-array/flatten": 169,
        "./ac-array/intersection": 170,
        "./ac-array/toArray": 171,
        "./ac-array/union": 172,
        "./ac-array/unique": 173,
        "./ac-array/without": 174
    }],
    169: [function(require, module, exports) {
        /** 
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /**
         * @name module:ac-array.flatten
         *
         * @function
         *
         * @desc Take a multi-dimensional array and flatten it into a single level.
         *
         * @param {Array} array
         *        Take a multi-dimensional array and flatten it into a single level
         *
         * @returns {Array} Flattened array.
         */
        module.exports = function flatten(array) {
            var flattenedArray = [];
            var callback = function(item) {
                if (Array.isArray(item)) {
                    item.forEach(callback);
                } else {
                    flattenedArray.push(item);
                }
            };
            array.forEach(callback);
            return flattenedArray;
        };

    }, {}],
    170: [function(require, module, exports) {
        /** 
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /**
         * @name module:ac-array.intersection
         *
         * @function
         *
         * @desc Produce an array that contains every item shared between all the passed-in arrays.
         *       Based on: https://github.com/jashkenas/underscore/blob/master/underscore.js#L525
         *
         * @param {...Array} array
         *        Any number of arrays
         *
         * @returns {Array} An empty array if no matches or an array containing all matches.
         */
        module.exports = function intersection(array) {
            // If nothing was passed return an empty array
            if (!array) {
                return [];
            }
            var argsLength = arguments.length;
            var i = 0;
            var len = array.length;
            var result = [];
            var item;

            for (i; i < len; i++) {
                item = array[i];

                // If item has already been pushed continue on to the next iteration
                if (result.indexOf(item) > -1) {
                    continue;
                }

                // If the item does not exist in the arguments index break;
                for (var j = 1; j < argsLength; j++) {
                    if (arguments[j].indexOf(item) < 0) {
                        break;
                    }
                }

                // If all arguments have been matched push the item into the result
                if (j === argsLength) {
                    result.push(item);
                }
            }

            return result;
        };

    }, {}],
    171: [function(require, module, exports) {
        /** 
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /**
         * @name module:ac-array.toArray
         *
         * @function
         *
         * @desc Take an Array-like object and convert it to an actual Array.
         *
         * @param {Object} arrayLike
         *        Take an Array-like object and convert it to an actual Array
         *        (for instance a NodeList)
         *
         * @returns {Array} Generated array from object.
         */
        module.exports = function toArray(arrayLike) {
            return Array.prototype.slice.call(arrayLike);
        };

    }, {}],
    172: [function(require, module, exports) {
        /** 
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var flatten = require('./flatten');
        var unique = require('./unique');

        /**
         * @name module:ac-array.union
         *
         * @function
         *
         * @desc Creates a union of unique values of the provided arrays.
         *
         * @param {...Array} array
         *        The array(s) to create a union of
         *
         * @returns {Array} An array containing the union of the provided arrays.
         */
        module.exports = function union(array) {
            return unique(flatten(Array.prototype.slice.call(arguments)));
        };

    }, {
        "./flatten": 169,
        "./unique": 173
    }],
    173: [function(require, module, exports) {
        /** 
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /**
         * @name module:ac-array.unique
         *
         * @function
         *
         * @desc Takes an array containing duplicates and returns a new
         *       array containing only unique values.
         *
         * @param {Array} array
         *        An array containing duplicate values
         *
         * @returns {Array} An array containing only unique values.
         */
        module.exports = function unique(array) {
            var _unique = function(prev, current) {
                if (prev.indexOf(current) < 0) {
                    prev.push(current);
                }
                return prev;
            };
            return array.reduce(_unique, []);
        };

    }, {}],
    174: [function(require, module, exports) {
        /** 
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /**
         * @name module:ac-array.without
         *
         * @function
         *
         * @desc Removes an entry from an array.
         *
         * @param {Array} arr
         *        Source array
         *
         * @param {*} value
         *        Entry in array to remove
         *
         * @returns {Array} A new array that is the source array without the first
         *                  instance of the value provided.
         */
        module.exports = function without(arr, value, recurse) {
            var newArr;
            var index = arr.indexOf(value);
            var length = arr.length;

            if (index >= 0) {

                // iterating through the array will be faster than calling .without() over and over
                if (recurse) {
                    // clone the arr to newArr
                    newArr = arr.slice(0, length);
                    // start at the first index and continue
                    var i,
                        amountRemoved = 0;
                    for (i = index; i < length; i++) {
                        // if the value matches, remove it from the newArr
                        if (arr[i] === value) {
                            newArr.splice(i - amountRemoved, 1);
                            // add one to the amountRemoved to handle the difference between arr and newArr
                            amountRemoved++;
                        }
                    }

                    // If it’s the last item
                } else if (index === (length - 1)) {
                    newArr = arr.slice(0, (length - 1));

                    // If it’s the first item
                } else if (index === 0) {
                    newArr = arr.slice(1);

                    // If it’s in the middle
                } else {
                    newArr = arr.slice(0, index);
                    newArr = newArr.concat(arr.slice(index + 1));
                }

            } else {
                return arr;
            }

            return newArr;
        };

    }, {}],
    175: [function(require, module, exports) {
        module.exports.DOMEmitter = require("./ac-dom-emitter/DOMEmitter");
    }, {
        "./ac-dom-emitter/DOMEmitter": 176
    }],
    176: [function(require, module, exports) {
        /*global module */
        'use strict';
        var proto;

        var EventEmitter = require('ac-event-emitter').EventEmitter;

        /**
         * @name .DOMEmitter
         * @class DOMEmitter
         * <pre>DOMEmitter = require('/DOMEmitter');</pre>
         */

        var internalEventPrefix = 'dom-emitter';

        function DOMEmitter(el) {
            if (el === null) {
                return;
            }
            this.el = el;
            this._bindings = {};
            this._eventEmitter = new EventEmitter();
        }


        proto = DOMEmitter.prototype;

        proto._parseEventNames = function(evt) {
            // handle any undefined/nulls and send em back
            if (!evt) {
                return [evt];
            }
            return evt.split(' ');
        };

        proto._onListenerEvent = function(evtName, e) {
            this.trigger(evtName, e, false);
        };

        proto._setListener = function(evt) {
            this._bindings[evt] = this._onListenerEvent.bind(this, evt);
            this._addEventListener(evt, this._bindings[evt]);
        };

        proto._removeListener = function(evt) {
            this._removeEventListener(evt, this._bindings[evt]);
            delete this._bindings[evt];
        };

        proto._addEventListener = function(evt, func, useCapture) {
            if (this.el.addEventListener) {
                this.el.addEventListener(evt, func, useCapture);
            } else if (this.el.attachEvent) {
                this.el.attachEvent('on' + evt, func);
            } else {
                target['on' + evt] = func;
            }
            return this;
        };

        proto._removeEventListener = function(evt, func, useCapture) {
            if (this.el.removeEventListener) {
                this.el.removeEventListener(evt, func, useCapture);
            } else {
                this.el.detachEvent('on' + evt, func);
            }

            return this;
        };

        proto._triggerInternalEvent = function(evt, data) {
            this.trigger(internalEventPrefix + ':' + evt, data);
        };

        proto.on = function(evts, callback, context) {
            evts = this._parseEventNames(evts);
            evts.forEach(function(callback, context, evt) {

                if (!this.has(evt)) {
                    this._setListener(evt);
                }

                this._triggerInternalEvent('willon', {
                    evt: evt,
                    callback: callback,
                    context: context
                });

                this._eventEmitter.on(evt, callback, context);

                this._triggerInternalEvent('didon', {
                    evt: evt,
                    callback: callback,
                    context: context
                });

            }.bind(this, callback, context));

            return this;
        };

        proto.off = function(evts, callback, context) {
            var args = Array.prototype.slice.call(arguments, 0);
            evts = this._parseEventNames(evts);
            evts.forEach(function(callback, context, args, evt) {

                // Handle unbinding all events ( this.off(); )
                if (args.length === 0) {
                    this._eventEmitter.off();

                    // for each event, unbind it
                    var i;
                    for (i in this._bindings) {
                        if (this._bindings.hasOwnProperty(i)) {
                            this._removeListener(i);
                        }
                    }
                    return;
                }

                this._triggerInternalEvent('willoff', {
                    evt: evt,
                    callback: callback,
                    context: context
                });

                this._eventEmitter.off(evt, callback, context);

                this._triggerInternalEvent('didoff', {
                    evt: evt,
                    callback: callback,
                    context: context
                });

                // for specific events
                if (!this.has(evt)) {
                    this._removeListener(evt);
                }

            }.bind(this, callback, context, args));

            return this;
        };

        proto.once = function(evts, callback, context) {
            evts = this._parseEventNames(evts);
            evts.forEach(function(callback, context, evt) {

                if (!this.has(evt)) {
                    this._setListener(evt);
                }

                this._triggerInternalEvent('willonce', {
                    evt: evt,
                    callback: callback,
                    context: context
                });

                this._eventEmitter.once.call(this, evt, callback, context);

                this._triggerInternalEvent('didonce', {
                    evt: evt,
                    callback: callback,
                    context: context
                });

            }.bind(this, callback, context));

            return this;
        };

        proto.has = function(evt, callback, context) {
            if (this._eventEmitter && this._eventEmitter.has.apply(this._eventEmitter, arguments)) {
                return true;
            }
            return false;
        };

        proto.trigger = function(evts, data, doNotPropogate) {
            evts = this._parseEventNames(evts);
            evts.forEach(function(data, doNotPropogate, evt) {
                this._eventEmitter.trigger(evt, data, doNotPropogate);
            }.bind(this, data, doNotPropogate));

            return this;

        };

        proto.destroy = function() {
            this._triggerInternalEvent('willdestroy');
            this.off();
            this.el = this._eventEmitter = this._bindings = null;
        };

        module.exports = DOMEmitter;

    }, {
        "ac-event-emitter": 270
    }],
    177: [function(require, module, exports) {
        /**
         * @module ac-dom-styles
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        var vendorTransformHelper = require('./ac-dom-styles/vendorTransformHelper');

        /**
         * Utility methods dealing with Elements
         * @name module:ac-dom-styles
         * @kind namespace
         */
        var ac_dom_styles = {};

        /**
         * Set one or more CSS styles on a DOM element.
         *
         * Usage:
         *
         *     // element and style paramaters as strings
         *     require('ac-dom-styles').setStyle('nav', 'float:left; background:#ccc;');
         *     // element paramater as DOM element, style paramater as an object
         *     var element = document.getElementById('nav');
         *     require('ac-dom-styles').setStyle(element, {
         *         float: "left",
         *         background: "#ccc"
         *     });
         *
         * @param {Element} el The DOM element to set the style/s on.
         * @param {String|Object} styles One or more styles as CSS string or an object with property/value pairs.
         * @returns el
         * @name module:ac-dom-styles.setStyle
         * @kind function
         */
        ac_dom_styles.setStyle = function(el, styles) {
            var stylesObj;
            var camelCaseProp;
            var prop;

            if ((typeof styles !== 'string' && typeof styles !== 'object') || Array.isArray(styles)) {
                throw new TypeError('styles argument must be either an object or a string');
            }

            stylesObj = ac_dom_styles.setStyle.__explodeStyleStringToObject(styles);

            // iterate over stylesObj and set styles
            for (prop in stylesObj) {
                if (stylesObj.hasOwnProperty(prop)) {
                    camelCaseProp = prop.replace(/-(\w)/g, ac_dom_styles.setStyle.__camelCaseReplace);
                    ac_dom_styles.setStyle.__setStyle(el, camelCaseProp, stylesObj, stylesObj[prop]);
                }
            }

            return el;
        };

        /** @ignore */
        ac_dom_styles.setStyle.__explodeStyleStringToObject = function(styles) {
            var stylesObj = (typeof styles === 'object') ? styles : {};
            var splitStyles;
            var colon;
            var len;
            var i;

            if (typeof styles === 'string') {
                splitStyles = styles.split(';');
                len = splitStyles.length;
                for (i = 0; i < len; i += 1) {
                    colon = splitStyles[i].indexOf(':');
                    if (colon > 0) {
                        stylesObj[splitStyles[i].substr(0, colon).trim()] = splitStyles[i].substr(colon + 1).trim();
                    }
                }
            }

            return stylesObj;
        };

        /** @ignore */
        ac_dom_styles.setStyle.__setStyle = function(element, camelCaseProp, stylesObj, stylesValue) {
            if (typeof element.style[camelCaseProp] !== 'undefined') {
                element.style[camelCaseProp] = stylesValue;
            }
        };

        // replace function to handle camelCasing for module:ac-dom-styles.setStyle and getStyle.
        // Accounts for Mozilla expecting 'Moz'.
        /** @ignore */
        ac_dom_styles.setStyle.__camelCaseReplace = function(match, group, offset, string) {
            return (offset === 0) && (string.substr(1, 3) !== 'moz') ? group : group.toUpperCase();
        };

        /**
         * Retrieves the value of a style property on a DOM element.
         * @param {Element} el The DOM element to check the style of.
         * @param {String} property The style property
         * @param {Object} [css] Overrides for window.getComputedStyle(el)
         * @returns {String} The value for the style property on this Element
         * @name module:ac-dom-styles.getStyle
         * @kind function
         */
        ac_dom_styles.getStyle = function(el, property, css) {
            var value;

            property = property.replace(/-(\w)/g, ac_dom_styles.setStyle.__camelCaseReplace);

            property = (property === 'float') ? 'cssFloat' : property;

            css = css || window.getComputedStyle(el, null);
            value = css ? css[property] : null;

            if (property === 'opacity') {
                return value ? parseFloat(value) : 1.0;
            }

            return value === 'auto' ? null : value;
        };

        /**
         * Sets all the vendor specific style {{{property}}} to {{{value}}} on {{{el}}}.
         * @param {Element} el The Element for which to set the style upon
         * @param {String} property The css property, e.g. borderRadius, webkitBorderRadius, border-radius, etc...
         * @param {String|Number} value The value for which to set the element's css property
         * @name module:ac-dom-styles.setVendorPrefixStyle
         * @kind function
         */
        ac_dom_styles.setVendorPrefixStyle = function(el, property, value) {
            if (typeof property !== 'string') {
                throw new TypeError('ac-dom-styles.setVendorPrefixStyle: property must be a string');
            }
            if (typeof value !== 'string' && typeof value !== 'number') {
                throw new TypeError('ac-dom-styles.setVendorPrefixStyle: value must be a string or a number');
            }

            // Empty value accounts for non-vendor-prefixed properties
            var prefixes = ['', 'webkit', 'Moz', 'ms', 'O'];
            var prefixedCamelProp;
            var prefixedValue;

            // Coerce value to string
            value += '';

            // Strip prefix from property if it has one
            property = property.replace(/-(webkit|moz|ms|o)-/i, '');
            // Strip js camelcase vendor prefix if it has one and lowercase first letter. e.g. webkitTransform
            property = property.replace(/^(webkit|Moz|ms|O)/, '');
            property = property.charAt(0).toLowerCase() + property.slice(1);

            // camelCase property
            property = property.replace(/-(\w)/, function(match, group) {
                return group.toUpperCase();
            });

            // Insert token for vendor prefix replacement in values
            value = value.replace(/-(webkit|moz|ms|o)-/, '-vendor-');

            // Iterate through prefixes array testing for existence of property. Update if present.
            prefixes.forEach(function(prefix) {
                // Apply prefixes
                prefixedCamelProp = (prefix === '') ? property : prefix + property.charAt(0).toUpperCase() + property.slice(1);
                prefixedValue = (prefix === '') ? value.replace('-vendor-', '') : value.replace('-vendor-', '-' + prefix.charAt(0).toLowerCase() + prefix.slice(1) + '-');

                if (prefixedCamelProp in el.style) {
                    ac_dom_styles.setStyle(el, prefixedCamelProp + ':' + prefixedValue);
                }
            });

        };

        /**
         * Returns the style value for a specific property as a string and, if necessary, prefixed
         * with the correct vendor prefix for the executing browser.
         * @param {Element} el The DOM Element from which to return the style.
         * @param {String} property The CSS property to fetch the style for. Will accept either a CSS
         * property or a javascript Element.style property name. Vendor prefixes are optional. Any
         * acceptable property as a string will return the same results. e.g. -webkit-box-shadow,
         * -moz-box-shadow, boxShadow, and msBoxShadow will all yield the same return value.
         * @returns {String} The specified property's style as a string
         * @name module:ac-dom-styles.getVendorPrefixStyle
         * @kind function
         */
        ac_dom_styles.getVendorPrefixStyle = function(el, property) {
            if (typeof property !== 'string') {
                throw new TypeError('ac-dom-styles.getVendorPrefixStyle: property must be a string');
            }

            var prefixes = ['', 'webkit', 'Moz', 'ms', 'O'];
            var style;

            // Strip css vendor prefix from property if it has one. e.g. -webkit-transform
            property = property.replace(/-(webkit|moz|ms|o)-/i, '');
            // Strip js camelcase vendor prefix if it has one and lowercase first letter. e.g. webkitTransform
            property = property.replace(/^(webkit|Moz|ms|O)/, '').charAt(0).toLowerCase() + property.slice(1);

            // camelCase property
            property = property.replace(/-(\w)/, function(match, group) {
                return group.toUpperCase();
            });

            // Iterate through prefixes array, testing for existence of property. module:ac-dom-styles.getStyle runs on the first match.
            prefixes.some(function(prefix, index) {
                // Apply prefixes
                var prefixedCamelProp = (prefix === '') ? property : prefix + property.charAt(0).toUpperCase() + property.slice(1);

                if (prefixedCamelProp in el.style) {
                    style = ac_dom_styles.getStyle(el, prefixedCamelProp);
                    return true;
                }
            });

            return style;
        };

        /**
         * Sets all the appropriate vendor prefixed transform properties to {{{transformFunctions}}} on {{{el}}}.
         * If the 3D version of the transform is available it will set that in favor of the 2D transform.
         * @param {Element} el The Element for which to set the style upon
         * @param {String|Object} transformFunctions the value for which to set the element's transform property. As a string
         * it takes the form of <code>[transformFunction]([parameters])</code>. As an object, pass the
         * <code>[transformFunctions]</code> as the key and the <code>[parameters]</code> as string to the key's value.
         * @name module:ac-dom-styles.setVendorPrefixTransform
         * @kind function
         */
        ac_dom_styles.setVendorPrefixTransform = function(el, transformFunctions) {
            if ((typeof transformFunctions !== 'string' && typeof transformFunctions !== 'object') || Array.isArray(transformFunctions) || transformFunctions === null) {
                throw new TypeError('ac-dom-styles.setVendorPrefixTransform: transformFunctions argument must be either an object or a string');
            }

            ac_dom_styles.setVendorPrefixStyle(el, 'transform', vendorTransformHelper.convert2dFunctions(transformFunctions));
        };

        // IE compatibility
        require('./ac-dom-styles/ie')(ac_dom_styles);

        module.exports = ac_dom_styles;

    }, {
        "./ac-dom-styles/ie": 178,
        "./ac-dom-styles/vendorTransformHelper": 179
    }],
    178: [function(require, module, exports) {
        'use strict';

        module.exports = function(ac_dom_styles) {
            /**
             * IE 8 and below getStyle shim accounts for the absence of getComputedStyle as well as IE's
             * currentStyle object's lack of support for background, font and border css shorthand props.
             */
            if (typeof window.getComputedStyle !== 'function') {
                ac_dom_styles.getStyle = function(el, style, css) {
                    var alphaFilter;
                    var value;

                    css = css || el.currentStyle;
                    if (css) {
                        style = style.replace(/-(\w)/g, ac_dom_styles.setStyle.__camelCaseReplace);

                        // IE's currentStyle uses styleFloat instead of float
                        style = style === 'float' ? 'styleFloat' : style;

                        value = css[style] || null;
                        return value === 'auto' ? null : value;
                    }
                };
            }
        };

    }, {}],
    179: [function(require, module, exports) {
        'use strict';

        /*
         * A static helper object that handles the work for module:ac-dom-styles.setVendorPrefixTransform.
         * Functionality is abstracted out into this helper object in order to break it up into manageable chunks
         * and also to enable testing of the code that would otherwise be unreachable by the test suites.
         */
        /** @ignore */
        var vendorTransformHelper = {

            __objectifiedFunctions: {},

            /*
		The paramMaps are used as templates for mapping 2D transform function parameters into
		their equivalent 3D function counterparts. 'p1', 'p2', etc. are replacement tokens that
		correspond to the 2D function parameters. p1 is the first 2D parameter, p2 is the second and so on.
	*/
            __paramMaps: {
                translate: 'p1, p2, 0',
                translateX: 'p1, 0, 0',
                translateY: '0, p1, 0',
                scale: 'p1, p2, 1',
                scaleX: 'p1, 1, 1',
                scaleY: '1, p1, 1',
                rotate: '0, 0, 1, p1',
                matrix: 'p1, p2, 0, 0, p3, p4, 0, 0, 0, 0, 1, 0, p5, p6, 0, 1'
            },

            /*
		@param {String|Object} functions2d A space separated string of transform functions, or an object
		with function names as the keys and a string of comma separataed parameters as the values.
		@returns {String} A space separated list of transform functions with any eligible 2D functions
		mapped to their 3D counterparts.
	*/
            convert2dFunctions: function(functions2d) {
                var values;

                this.__init(functions2d);
                // loop through functions & replace 2d function with 3d function where available
                for (var func in this.__objectifiedFunctions) {
                    if (this.__objectifiedFunctions.hasOwnProperty(func)) {
                        values = this.__objectifiedFunctions[func].replace(' ', '').split(',');
                        if (func in this.__paramMaps) {
                            for (var map in this.__paramMaps) {
                                if (func === map) {
                                    this.valuesToSet.push(this.__stripFunctionAxis(func) + '3d(' + this.__map2DTransformParams(values, this.__paramMaps[func]) + ')');
                                }
                            }
                        } else {
                            this.valuesToSet.push(func + '(' + this.__objectifiedFunctions[func] + ')');
                        }
                    }
                }
                return this.valuesToSet.join(' ');
            },

            /*
		Handles some light house cleaning - resetting properties.
		Expects to receive the functions2d parameter from convert2dFunctions and fills the
		_objectifiedFunctions property with key/value pairs from this string or object.
		@param {String|Object} functions2d A space separated string of transform functions, or an object
		with function names as the keys and a string of comma separataed parameters as the values.
		@returns {undefined}
	*/
            __init: function(functions2d) {
                this.valuesToSet = [];
                this.__objectifiedFunctions = (typeof functions2d === 'object') ? functions2d : {};
                if (typeof functions2d === 'string') {
                    this.__objectifiedFunctions = this.__objectifyFunctionString(functions2d);
                }
            },

            /*
		@param {Array} params2d Array containing all the parameters from a transform function as
		individual members.
		@param {String} template3d One of the parameter maps from the __paramMaps object.
		@returns {String} The template3d parameter with the 2D function values mapped into it.
	*/
            __map2DTransformParams: function(params2d, template3d) {
                params2d.forEach(function(val, i) {
                    template3d = template3d.replace('p' + (i + 1), val);
                });
                return template3d;
            },

            /*
		Splits a space separated string of transform functions into an array with each
		function as a member.
		@param {String} functionString A space separated string of transform functions
		@returns {Array} An array with each function from the string as a member
	*/
            __splitFunctionStringToArray: function(functionString) {
                return functionString.match(/[\w]+\(.+?\)/g);
            },

            /*
		Takes a single transform function as a string and splits its name and parameters into an array.
		@param {String} functionString
		@returns {Array} The resulting array from a match() method. The entire functionString
		will be the first member with the function name and the parameters populating the
		second and third members respectively.
	*/
            __splitFunctionNameAndParams: function(functionString) {
                return functionString.match(/(.*)\((.*)\)/);
            },

            /*
		Strips the X or Y axis off the end of a transform function.
		@param {String} func A transform function name that specifies an X or Y axis at the end
		@returns {String} The function with the axis removed
	*/
            __stripFunctionAxis: function(func) {
                return func.match(/([a-z]+)(|X|Y)$/)[1];
            },

            /*
		Splits a string of transform functions into an object consisting of the function
		names as the keys and the parameters as their respective values.
		@param {String} functionString A space separated string of transform functions
		@returns {Object} An object filled with keys as function names and values as their
		respective parameters
	*/
            __objectifyFunctionString: function(functionString) {
                var self = this;
                var splitMember;
                this.__splitFunctionStringToArray(functionString).forEach(function(member) {
                    splitMember = self.__splitFunctionNameAndParams(member);
                    self.__objectifiedFunctions[splitMember[1]] = splitMember[2];
                });
                return this.__objectifiedFunctions;
            }
        };

        module.exports = vendorTransformHelper;

    }, {}],
    180: [function(require, module, exports) {
        /**
         * @module ac-dom-metrics
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        var ac_dom_styles = require('ac-dom-styles');

        var ac_dom_metrics = {};

        /** @ignore */
        var viewportScrollOffsets = function() {
            return {
                x: window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft,
                y: window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop
            };
        };

        /** @ignore */
        var viewportDimensions = function() {
            return {
                height: window.innerHeight || document.documentElement.clientHeight,
                width: window.innerWidth || document.documentElement.clientWidth
            };
        };

        /**
         * Returns an object with top and left offset values for an element relative
         * to the absolute top and left locations of html document.
         * @param {Element} el
         * @returns {Object} An object with numeric values for top and left properties.
         * @name module:ac-dom-metrics.cumulativeOffset
         * @kind function
         */
        ac_dom_metrics.cumulativeOffset = function(el) {
            var box = ac_dom_metrics.getBoundingBox(el);
            var scrollOffsets = viewportScrollOffsets();
            var offset = [box.top + scrollOffsets.y, box.left + scrollOffsets.x];
            offset.top = offset[0];
            offset.left = offset[1];
            return offset;
        };

        /**
         * Returns the bounding box values for an element including width and height.
         * Borders and padding are included. Values are affected by box-sizing.
         * @param {Element} el The Element you want to query
         * @returns {Object} An object with top, right, bottom, left, width and height values as numbers
         * @name module:ac-dom-metrics.getBoundingBox
         * @kind function
         */
        ac_dom_metrics.getBoundingBox = function(el) {
            var rect = el.getBoundingClientRect();
            var width = rect.width || rect.right - rect.left;
            var height = rect.height || rect.bottom - rect.top;

            return {
                top: rect.top,
                right: rect.right,
                bottom: rect.bottom,
                left: rect.left,
                width: width,
                height: height
            };
        };

        /**
         * Returns the width and height of an element's content box. Padding and
         * borders are not included. Accounts for `box-sizing:border-box;`.
         * @param {Element} el The element you want to query
         * @returns {Object} An object with width and height values as numbers
         * @name module:ac-dom-metrics.getInnerDimensions
         * @kind function
         */
        ac_dom_metrics.getInnerDimensions = function(el) {
            var dims = ac_dom_metrics.getBoundingBox(el);
            var width = dims.width;
            var height = dims.height;
            var style;
            var styleValue;
            var css = window.getComputedStyle ? window.getComputedStyle(el, null) : null;

            ['padding', 'border'].forEach(function(prop) {
                ['Top', 'Right', 'Bottom', 'Left'].forEach(function(side) {
                    style = prop === 'border' ? prop + side + 'Width' : prop + side;
                    styleValue = parseFloat(ac_dom_styles.getStyle(el, style, css));
                    styleValue = isNaN(styleValue) ? 0 : styleValue;
                    if (side === 'Right' || side === 'Left') {
                        width -= styleValue;
                    }
                    if (side === 'Top' || side === 'Bottom') {
                        height -= styleValue;
                    }
                });
            });

            return {
                width: width,
                height: height
            };
        };

        /**
         * Returns the width and height of an element including borders and margins.
         * Accounts for `box-sizing:border-box;`.
         * @param {Element} el The Element you want to query
         * @returns {Object} An object with width and height values as numbers
         * @name module:ac-dom-metrics.getOuterDimensions
         * @kind function
         */
        ac_dom_metrics.getOuterDimensions = function(el) {
            var dims = ac_dom_metrics.getBoundingBox(el);
            var width = dims.width;
            var height = dims.height;
            var marginStyle;
            var css = window.getComputedStyle ? window.getComputedStyle(el, null) : null;

            ['margin'].forEach(function(prop) {
                ['Top', 'Right', 'Bottom', 'Left'].forEach(function(side) {
                    marginStyle = parseFloat(ac_dom_styles.getStyle(el, prop + side, css));
                    marginStyle = isNaN(marginStyle) ? 0 : marginStyle;
                    if (side === 'Right' || side === 'Left') {
                        width += marginStyle;
                    }
                    if (side === 'Top' || side === 'Bottom') {
                        height += marginStyle;
                    }
                });
            });

            return {
                width: width,
                height: height
            };
        };

        /**
         * Determines the amount of the height of the element that is in view.
         * @param {Element} element
         * @param {Object} [boundingBox] Memoized value from {@link ac_dom_metrics.getBoundingBox(el)}
         * @returns {Integer} Number of pixels of the element that are currently within the viewport.
         * @name module:ac-dom-metrics.pixelsInViewport
         * @kind function
         */
        ac_dom_metrics.pixelsInViewport = function(el, boundingBox) {
            // Amount of the element that is visible inside of the viewport (px)
            var pixelsInView;

            // Get element and viewport metrics
            var viewportMetrics = viewportDimensions();
            boundingBox = boundingBox || ac_dom_metrics.getBoundingBox(el);

            // Determine the offset from the top of the element relative to the top edge
            // of the viewport (px)
            var elementViewportOffsetY = boundingBox.top;

            // If element is fully in view or cropped by bottom edge of viewport
            if (elementViewportOffsetY >= 0) {
                pixelsInView = viewportMetrics.height - elementViewportOffsetY;

                // If the bottom edge of element is in view and the top edge, then it
                // is fully in view
                if (pixelsInView > boundingBox.height) {
                    pixelsInView = boundingBox.height;
                }

                // If element is cropped by top edge of viewport or is scrolled out of
                // view above top edge of viewport
            } else {
                pixelsInView = boundingBox.height + elementViewportOffsetY;
            }

            // If the element is completely out of view past the bottom edge of
            // the viewport, then 0 px of it is in view
            if (pixelsInView < 0) {
                pixelsInView = 0;
            }

            if (pixelsInView > viewportMetrics.height) {
                pixelsInView = viewportMetrics.height;
            }

            return pixelsInView;
        };

        /**
         * Determines the percentage of the height of the Element that is in view.
         * @param {Element} el
         * @returns {Float} 0-1, Percentage of the Element within the viewport.
         * @name module:ac-dom-metrics.percentInViewport
         * @kind function
         */
        ac_dom_metrics.percentInViewport = function(el) {
            var boundingBox = ac_dom_metrics.getBoundingBox(el);
            var pixelsInView = ac_dom_metrics.pixelsInViewport(el, boundingBox);
            return pixelsInView / boundingBox.height;
        };

        /**
         * Check if an Element is visible in the viewport above a percentage threshold.
         * @param {Element} el
         * @param {Float} [threshold=0] 0-1, Minimum percentage of the Element within the viewport.
         * @returns {Boolean} `true` if the Element meets the visibility threshold, otherwise `false`.
         * @name module:ac-dom-metrics.isInViewport
         * @kind function
         */
        ac_dom_metrics.isInViewport = function(el, threshold) {
            var percentInViewport = ac_dom_metrics.percentInViewport(el);

            // Ensure that threshold is defined and within bounds.
            if (typeof threshold !== "number" || 1 < threshold || threshold < 0) {
                threshold = 0;
            }

            return (percentInViewport > threshold || percentInViewport === 1);
        };

        require('./ac-dom-metrics/ie')(ac_dom_metrics);

        module.exports = ac_dom_metrics;

    }, {
        "./ac-dom-metrics/ie": 181,
        "ac-dom-styles": 177
    }],
    181: [function(require, module, exports) {
        'use strict';

        module.exports = function(ac_metrics) {

            /**
             * Rudimentary shim for getBoundingClientRect in IE < 8.
             * getBoundingClientRect is available in IE8 even with documentMode as IE7.
             * It is not available in vanilla IE7.
             */
            if (!('getBoundingClientRect' in document.createElement('_'))) {
                ac_metrics.getBoundingBox = function(el) {
                    var left = el.offsetLeft;
                    var top = el.offsetTop;
                    var width = el.offsetWidth;
                    var height = el.offsetHeight;
                    return {
                        top: top,
                        right: left + width,
                        bottom: top + height,
                        left: left,
                        width: width,
                        height: height
                    };
                };
            }
        };

    }, {}],
    182: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /**
         * @name module:ac-dom-nodes.COMMENT_NODE
         *
         * @constant
         *
         * @desc nodeType value for Comment
         */
        module.exports = 8;

    }, {}],
    183: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /**
         * @name module:ac-dom-nodes.DOCUMENT_FRAGMENT_NODE
         *
         * @constant
         *
         * @desc nodeType value for DocumentFragment
         */
        module.exports = 11;

    }, {}],
    184: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /**
         * @name module:ac-dom-nodes.DOCUMENT_NODE
         *
         * @constant
         *
         * @desc nodeType value for Document
         */
        module.exports = 9;

    }, {}],
    185: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /**
         * @name module:ac-dom-nodes.DOCUMENT_TYPE_NODE
         *
         * @constant
         *
         * @desc nodeType value for DocumentType
         */
        module.exports = 10;

    }, {}],
    186: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /**
         * @name module:ac-dom-nodes.ELEMENT_NODE
         *
         * @constant
         *
         * @desc nodeType value for Element
         */
        module.exports = 1;

    }, {}],
    187: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /**
         * @name module:ac-dom-nodes.TEXT_NODE
         *
         * @constant
         *
         * @desc nodeType value for TextNode
         */
        module.exports = 3;

    }, {}],
    188: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /**
         * @name module:ac-dom-nodes.createDocumentFragment
         *
         * @function
         *
         * @desc Create a DocumentFragment with optional HTML contents
         *
         * @param {String} [html]
         *        Optional inner HTML of the DocumentFragment
         *
         * @returns {DocumentFragment} A new DocumentFragment
         */
        module.exports = function createDocumentFragment(html) {
            var fragment = document.createDocumentFragment();
            var div;

            if (html) {
                div = document.createElement('div');
                div.innerHTML = html;

                while (div.firstChild) {
                    fragment.appendChild(div.firstChild);
                }
            }

            return fragment;
        };

    }, {}],
    189: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        require('ac-polyfills/Array/prototype.slice');
        require('ac-polyfills/Array/prototype.filter');

        /** @ignore */
        var isNodeType = require('./internal/isNodeType');
        var ELEMENT_NODE = require('./ELEMENT_NODE');

        /**
         * @name module:ac-dom-nodes.filterByNodeType
         *
         * @function
         *
         * @desc Filters an Array of Nodes by nodeType.
         *
         * @param {Array|NodeList} nodes
         *
         * @param {Integer} [nodeType={@link module:ac-dom-nodes.ELEMENT_NODE ELEMENT_NODE}]
         *
         * @returns {Array} An new Array of Nodes of the specified nodeType
         */
        module.exports = function filterByNodeType(nodes, nodeType) {
            nodeType = nodeType || ELEMENT_NODE;
            nodes = Array.prototype.slice.call(nodes);

            return nodes.filter(function(node) {
                return isNodeType(node, nodeType);
            });
        };

    }, {
        "./ELEMENT_NODE": 186,
        "./internal/isNodeType": 197,
        "ac-polyfills/Array/prototype.filter": 207,
        "ac-polyfills/Array/prototype.slice": 209
    }],
    190: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /**
         * @name module:ac-dom-nodes.hasAttribute
         *
         * @function
         *
         * @desc Test whether or not the Element has the specified attribute or not.
         *
         * @param {Element} el
         *
         * @param {String} attr
         *
         * @returns {Boolean}
         */
        module.exports = function hasAttribute(el, attr) {
            if ('hasAttribute' in el) {
                return el.hasAttribute(attr);
            }

            return (el.attributes.getNamedItem(attr) !== null);
        };

    }, {}],
    191: [function(require, module, exports) {
        /**
         * Utility methods dealing with the DOM
         * @module ac-dom-nodes
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        module.exports = {
            createDocumentFragment: require('./createDocumentFragment'),
            filterByNodeType: require('./filterByNodeType'),
            hasAttribute: require('./hasAttribute'),
            indexOf: require('./indexOf'),
            insertAfter: require('./insertAfter'),
            insertBefore: require('./insertBefore'),
            insertFirstChild: require('./insertFirstChild'),
            insertLastChild: require('./insertLastChild'),
            isComment: require('./isComment'),
            isDocument: require('./isDocument'),
            isDocumentFragment: require('./isDocumentFragment'),
            isDocumentType: require('./isDocumentType'),
            isElement: require('./isElement'),
            isNode: require('./isNode'),
            isNodeList: require('./isNodeList'),
            isTextNode: require('./isTextNode'),
            remove: require('./remove'),
            replace: require('./replace'),

            COMMENT_NODE: require('./COMMENT_NODE'),
            DOCUMENT_FRAGMENT_NODE: require('./DOCUMENT_FRAGMENT_NODE'),
            DOCUMENT_NODE: require('./DOCUMENT_NODE'),
            DOCUMENT_TYPE_NODE: require('./DOCUMENT_TYPE_NODE'),
            ELEMENT_NODE: require('./ELEMENT_NODE'),
            TEXT_NODE: require('./TEXT_NODE')
        };

    }, {
        "./COMMENT_NODE": 182,
        "./DOCUMENT_FRAGMENT_NODE": 183,
        "./DOCUMENT_NODE": 184,
        "./DOCUMENT_TYPE_NODE": 185,
        "./ELEMENT_NODE": 186,
        "./TEXT_NODE": 187,
        "./createDocumentFragment": 188,
        "./filterByNodeType": 189,
        "./hasAttribute": 190,
        "./indexOf": 192,
        "./insertAfter": 193,
        "./insertBefore": 194,
        "./insertFirstChild": 195,
        "./insertLastChild": 196,
        "./isComment": 199,
        "./isDocument": 200,
        "./isDocumentFragment": 201,
        "./isDocumentType": 202,
        "./isElement": 203,
        "./isNode": 204,
        "./isNodeList": 205,
        "./isTextNode": 206,
        "./remove": 210,
        "./replace": 211
    }],
    192: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        require('ac-polyfills/Array/prototype.indexOf');
        require('ac-polyfills/Array/prototype.slice');

        /** @ignore */
        var validate = require('./internal/validate');
        var filterByNodeType = require('./filterByNodeType');

        /**
         * @name module:ac-dom-nodes.indexOf
         *
         * @function
         *
         * @desc Get the index of a Node amongst it's siblings
         *
         * @param {Node} node
         *
         * @param {Integer|Boolean} [nodeType={@link module:ac-dom-nodes.ELEMENT_NODE ELEMENT_NODE}]
         *                  A nodeType to filter by. Set to `false` for no filter.
         *
         * @returns {Number} The index of the Node, or -1 if not in the current nodeType filter
         */
        module.exports = function indexOf(node, nodeType) {
            var parentNode = node.parentNode;
            var nodes;

            if (!parentNode) {
                return 0;
            }

            nodes = parentNode.childNodes;

            if (nodeType !== false) {
                nodes = filterByNodeType(nodes, nodeType);
            } else {
                nodes = Array.prototype.slice.call(nodes);
            }

            return nodes.indexOf(node);
        };

    }, {
        "./filterByNodeType": 189,
        "./internal/validate": 198,
        "ac-polyfills/Array/prototype.indexOf": 208,
        "ac-polyfills/Array/prototype.slice": 209
    }],
    193: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var validate = require('./internal/validate');

        /**
         * @name module:ac-dom-nodes.insertAfter
         *
         * @function
         *
         * @desc Insert a Node after a specified target
         *
         * @param {Node} node
         *        The Node to insert
         *
         * @param {Node} target
         *        The target Node
         *
         * @returns {Node} The inserted Node
         */
        module.exports = function insertAfter(node, target) {
            validate.insertNode(node, true, 'insertAfter');
            validate.childNode(target, true, 'insertAfter');
            validate.hasParentNode(target, 'insertAfter');

            if (!target.nextSibling) {
                return target.parentNode.appendChild(node);
            }

            return target.parentNode.insertBefore(node, target.nextSibling);
        };

    }, {
        "./internal/validate": 198
    }],
    194: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var validate = require('./internal/validate');

        /**
         * @name module:ac-dom-nodes.insertBefore
         *
         * @function
         *
         * @desc Insert a Node before a specified target
         *
         * @param {Node} node
         *        The Node to insert
         *
         * @param {Node} target
         *        The target Node
         *
         * @returns {Node} The inserted Node
         */
        module.exports = function insertBefore(node, target) {
            validate.insertNode(node, true, 'insertBefore');
            validate.childNode(target, true, 'insertBefore');
            validate.hasParentNode(target, 'insertBefore');

            return target.parentNode.insertBefore(node, target);
        };

    }, {
        "./internal/validate": 198
    }],
    195: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var validate = require('./internal/validate');

        /**
         * @name module:ac-dom-nodes.insertFirstChild
         *
         * @function
         *
         * @desc Insert a Node as the first child of a specified target
         *
         * @param {Node} node
         *        The Node to insert
         *
         * @param {Node} target
         *        The target Node
         *
         * @returns {Node} The inserted Node
         */
        module.exports = function insertFirstChild(node, target) {
            validate.insertNode(node, true, 'insertFirstChild');
            validate.parentNode(target, true, 'insertFirstChild');

            if (!target.firstChild) {
                return target.appendChild(node);
            }

            return target.insertBefore(node, target.firstChild);
        };

    }, {
        "./internal/validate": 198
    }],
    196: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var validate = require('./internal/validate');

        /**
         * @name module:ac-dom-nodes.insertLastChild
         *
         * @function
         *
         * @desc Insert a Node as the last child of a specified target
         *
         * @param {Node} node
         *        The Node to insert
         *
         * @param {Node} target
         *        The target Node
         *
         * @returns {Node} The inserted Node
         */
        module.exports = function insertLastChild(node, target) {
            validate.insertNode(node, true, 'insertLastChild');
            validate.parentNode(target, true, 'insertLastChild');

            return target.appendChild(node);
        };

    }, {
        "./internal/validate": 198
    }],
    197: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var isNode = require('../isNode');

        module.exports = function isNodeType(node, nodeType) {
            if (!isNode(node)) {
                return false;
            }

            if (typeof nodeType === 'number') {
                return (node.nodeType === nodeType);
            }

            return (nodeType.indexOf(node.nodeType) !== -1);
        };

    }, {
        "../isNode": 204
    }],
    198: [function(require, module, exports) {
        /**
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var isNodeType = require('./isNodeType');
        var COMMENT_NODE = require('../COMMENT_NODE');
        var DOCUMENT_FRAGMENT_NODE = require('../DOCUMENT_FRAGMENT_NODE');
        var ELEMENT_NODE = require('../ELEMENT_NODE');
        var TEXT_NODE = require('../TEXT_NODE');

        /** @ignore */
        var VALID_INSERT_NODE = [
            ELEMENT_NODE,
            TEXT_NODE,
            COMMENT_NODE,
            DOCUMENT_FRAGMENT_NODE
        ];

        /** @ignore */
        var ERR_INVALID_INSERT_NODE = ' must be an Element, TextNode, Comment, or Document Fragment';

        /** @ignore */
        var VALID_CHILD_NODE = [
            ELEMENT_NODE,
            TEXT_NODE,
            COMMENT_NODE
        ];

        /** @ignore */
        var ERR_INVALID_CHILD_NODE = ' must be an Element, TextNode, or Comment';

        /** @ignore */
        var VALID_PARENT_NODE = [
            ELEMENT_NODE,
            DOCUMENT_FRAGMENT_NODE
        ];

        /** @ignore */
        var ERR_INVALID_PARENT_NODE = ' must be an Element, or Document Fragment';

        /** @ignore */
        var ERR_NO_PARENT_NODE = ' must have a parentNode';

        module.exports = {

            /** @ignore */
            parentNode: function(node, required, funcName, paramName) {
                paramName = paramName || 'target';

                if ((node || required) && !isNodeType(node, VALID_PARENT_NODE)) {
                    throw new TypeError(funcName + ': ' + paramName + ERR_INVALID_PARENT_NODE);
                }
            },

            /** @ignore */
            childNode: function(node, required, funcName, paramName) {
                paramName = paramName || 'target';

                if (!node && !required) {
                    return;
                }

                if (!isNodeType(node, VALID_CHILD_NODE)) {
                    throw new TypeError(funcName + ': ' + paramName + ERR_INVALID_CHILD_NODE);
                }
            },

            /** @ignore */
            insertNode: function(node, required, funcName, paramName) {
                paramName = paramName || 'node';

                if (!node && !required) {
                    return;
                }

                if (!isNodeType(node, VALID_INSERT_NODE)) {
                    throw new TypeError(funcName + ': ' + paramName + ERR_INVALID_INSERT_NODE);
                }
            },

            /** @ignore */
            hasParentNode: function(node, funcName, paramName) {
                paramName = paramName || 'target';

                if (!node.parentNode) {
                    throw new TypeError(funcName + ': ' + paramName + ERR_NO_PARENT_NODE);
                }
            }

        };

    }, {
        "../COMMENT_NODE": 182,
        "../DOCUMENT_FRAGMENT_NODE": 183,
        "../ELEMENT_NODE": 186,
        "../TEXT_NODE": 187,
        "./isNodeType": 197
    }],
    199: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var isNodeType = require('./internal/isNodeType');
        var COMMENT_NODE = require('./COMMENT_NODE');

        /**
         * @name module:ac-dom-nodes.isComment
         *
         * @function
         *
         * @desc Test whether or not an Object is a Comment.
         *
         * @param {Object} obj
         *
         * @returns {Boolean}
         */
        module.exports = function isComment(obj) {
            return isNodeType(obj, COMMENT_NODE);
        };

    }, {
        "./COMMENT_NODE": 182,
        "./internal/isNodeType": 197
    }],
    200: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var isNodeType = require('./internal/isNodeType');
        var DOCUMENT_NODE = require('./DOCUMENT_NODE');

        /**
         * @name module:ac-dom-nodes.isDocument
         *
         * @function
         *
         * @desc Test whether or not an Object is a Document.
         *
         * @param {Object} obj
         *
         * @returns {Boolean}
         */
        module.exports = function isDocument(obj) {
            return isNodeType(obj, DOCUMENT_NODE);
        };

    }, {
        "./DOCUMENT_NODE": 184,
        "./internal/isNodeType": 197
    }],
    201: [function(require, module, exports) {
        /**
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var isNodeType = require('./internal/isNodeType');
        var DOCUMENT_FRAGMENT_NODE = require('./DOCUMENT_FRAGMENT_NODE');

        /**
         * @name module:ac-dom-nodes.isDocumentFragment
         *
         * @function
         *
         * @desc Test whether or not an Object is a DocumentFragment.
         *
         * @param {Object} obj
         *
         * @returns {Boolean}
         */
        module.exports = function isDocumentFragment(obj) {
            return isNodeType(obj, DOCUMENT_FRAGMENT_NODE);
        };

    }, {
        "./DOCUMENT_FRAGMENT_NODE": 183,
        "./internal/isNodeType": 197
    }],
    202: [function(require, module, exports) {
        /**
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var isNodeType = require('./internal/isNodeType');
        var DOCUMENT_TYPE_NODE = require('./DOCUMENT_TYPE_NODE');

        /**
         * @name module:ac-dom-nodes.isDocumentType
         *
         * @function
         *
         * @desc Test whether or not an Object is a DocumentType.
         *
         * @param {Object} obj
         *
         * @returns {Boolean}
         */
        module.exports = function isDocumentType(obj) {
            return isNodeType(obj, DOCUMENT_TYPE_NODE);
        };

    }, {
        "./DOCUMENT_TYPE_NODE": 185,
        "./internal/isNodeType": 197
    }],
    203: [function(require, module, exports) {
        /**
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var isNodeType = require('./internal/isNodeType');
        var ELEMENT_NODE = require('./ELEMENT_NODE');

        /**
         * @name module:ac-dom-nodes.isElement
         *
         * @function
         *
         * @desc Test whether or not an Object is an Element.
         *
         * @param {Object} obj
         *
         * @returns {Boolean}
         */
        module.exports = function isElement(obj) {
            return isNodeType(obj, ELEMENT_NODE);
        };

    }, {
        "./ELEMENT_NODE": 186,
        "./internal/isNodeType": 197
    }],
    204: [function(require, module, exports) {
        /**
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /**
         * @name module:ac-dom-nodes.isNode
         *
         * @function
         *
         * @desc Test whether or not an Object is a Node.
         *
         * @param {Object} obj
         *
         * @returns {Boolean}
         */
        module.exports = function isNode(obj) {
            return !!(obj && obj.nodeType);
        };

    }, {}],
    205: [function(require, module, exports) {
        /**
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var nodeListToStringPattern = /^\[object (HTMLCollection|NodeList|Object)\]$/;

        /**
         * @name module:ac-dom-nodes.isNodeList
         *
         * @function
         *
         * @desc Test whether or not an Object is a NodeList.
         *
         * @param {Object} obj
         *
         * @returns {Boolean}
         */
        module.exports = function isNodeList(obj) {
            if (!obj) {
                return false;
            }

            // not Array-like
            if (typeof obj.length !== 'number') {
                return false;
            }

            // Array-like, but not a NodeList
            if (typeof obj[0] === 'object' && (!obj[0] || !obj[0].nodeType)) {
                return false;
            }

            return nodeListToStringPattern.test(Object.prototype.toString.call(obj));
        };

    }, {}],
    206: [function(require, module, exports) {
        /**
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var isNodeType = require('./internal/isNodeType');
        var TEXT_NODE = require('./TEXT_NODE');

        /**
         * @name module:ac-dom-nodes.isTextNode
         *
         * @function
         *
         * @desc Test whether or not an Object is a TextNode.
         *
         * @param {Object} obj
         *
         * @returns {Boolean}
         */
        module.exports = function isTextNode(obj) {
            return isNodeType(obj, TEXT_NODE);
        };

    }, {
        "./TEXT_NODE": 187,
        "./internal/isNodeType": 197
    }],
    207: [function(require, module, exports) {
        module.exports = require(106)
    }, {}],
    208: [function(require, module, exports) {
        if (!Array.prototype.indexOf) {
            /**
            	Returns the first (least) index of an element within the array equal to the specified value, or -1 if none is found.
            	@param searchElement {Object} Element to locate in the array.
            	@param fromIndex {Number} Optional; the index at which to begin the search. Defaults to 0, i.e. the whole array will be searched. If the index is greater than or equal to the length of the array, -1 is returned, i.e. the array will not be searched. If negative, it is taken as the offset from the end of the array. Note that even when the index is negative, the array is still searched from front to back. If the calculated index is less than 0, the whole array will be searched.
            */
            Array.prototype.indexOf = function indexOf(searchElement, fromIndex) {
                var startIndex = fromIndex || 0;
                var currentIndex = 0;

                if (startIndex < 0) {
                    startIndex = this.length + fromIndex - 1;
                    if (startIndex < 0) {
                        throw 'Wrapped past beginning of array while looking up a negative start index.';
                    }
                }

                for (currentIndex = 0; currentIndex < this.length; currentIndex++) {
                    if (this[currentIndex] === searchElement) {
                        return currentIndex;
                    }
                }

                return (-1);
            };
        }
    }, {}],
    209: [function(require, module, exports) {
        /**
         * Shim for "fixing" IE's lack of support (IE < 9) for applying slice
         * on host objects like NamedNodeMap, NodeList, and HTMLCollection
         * (technically, since host objects have been implementation-dependent,
         * at least before ES6, IE hasn't needed to work this way).
         * Also works on strings, fixes IE < 9 to allow an explicit undefined
         * for the 2nd argument (as in Firefox), and prevents errors when
         * called on other DOM objects.
         *
         * @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice
         */
        (function() {
            'use strict';
            var _slice = Array.prototype.slice;

            try {
                // Can't be used with DOM elements in IE < 9
                _slice.call(document.documentElement);
            } catch (e) { // Fails in IE < 9
                // This will work for genuine arrays, array-like objects, 
                // NamedNodeMap (attributes, entities, notations),
                // NodeList (e.g., getElementsByTagName), HTMLCollection (e.g., childNodes),
                // and will not fail on other DOM objects (as do DOM elements in IE < 9)
                Array.prototype.slice = function(begin, end) {
                    // IE < 9 gets unhappy with an undefined end argument
                    end = (typeof end !== 'undefined') ? end : this.length;

                    // For native Array objects, we use the native slice function
                    if (Object.prototype.toString.call(this) === '[object Array]') {
                        return _slice.call(this, begin, end);
                    }

                    // For array like object we handle it ourselves.
                    var i, cloned = [],
                        size, len = this.length;

                    // Handle negative value for "begin"
                    var start = begin || 0;
                    start = (start >= 0) ? start : len + start;

                    // Handle negative value for "end"
                    var upTo = (end) ? end : len;
                    if (end < 0) {
                        upTo = len + end;
                    }

                    // Actual expected size of the slice
                    size = upTo - start;

                    if (size > 0) {
                        cloned = new Array(size);
                        if (this.charAt) {
                            for (i = 0; i < size; i++) {
                                cloned[i] = this.charAt(start + i);
                            }
                        } else {
                            for (i = 0; i < size; i++) {
                                cloned[i] = this[start + i];
                            }
                        }
                    }

                    return cloned;
                };
            }
        }());
    }, {}],
    210: [function(require, module, exports) {
        /**
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var validate = require('./internal/validate');

        /**
         * @name module:ac-dom-nodes.remove
         *
         * @function
         *
         * @desc Remove a Node from it's parentNode
         *
         * @param {Node} node
         *        The Node to remove
         *
         * @returns {Node} The removed Node
         */
        module.exports = function remove(node) {
            validate.childNode(node, true, 'remove');

            if (!node.parentNode) {
                return node;
            }

            return node.parentNode.removeChild(node);
        };

    }, {
        "./internal/validate": 198
    }],
    211: [function(require, module, exports) {
        /**
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var validate = require('./internal/validate');

        /**
         * @name module:ac-dom-nodes.replace
         *
         * @function
         *
         * @desc Replace one Node with another
         *
         * @param {Node} newNode
         *        The Node to be inserted
         *
         * @param {Node} oldNode
         *        The Node to be replaced
         *
         * @returns {Node} The replaced Node
         */
        module.exports = function replace(newNode, oldNode) {
            validate.insertNode(newNode, true, 'insertFirstChild', 'newNode');
            validate.childNode(oldNode, true, 'insertFirstChild', 'oldNode');
            validate.hasParentNode(oldNode, 'insertFirstChild', 'oldNode');

            return oldNode.parentNode.replaceChild(newNode, oldNode);
        };

    }, {
        "./internal/validate": 198
    }],
    212: [function(require, module, exports) {
        'use strict';

        /**
         * @module ac-dom-events
         */
        var events = {};

        /**
         * Cross-browser event handling
         * @param {Element} target Element to listen for event on
         * @param {String} type
         * @param {Function} listener
         * @param {Boolean} [useCapture=false]
         * @returns target
         * @name module:ac-dom-events.addEventListener
         * @kind function
         */
        events.addEventListener = function(target, type, listener, useCapture) {
            if (target.addEventListener) {
                target.addEventListener(type, listener, useCapture);
            } else if (target.attachEvent) {
                target.attachEvent('on' + type, listener);
            } else {
                target['on' + type] = listener;
            }
            return target;
        };

        /**
         * Cross-browser event dispatch
         * @param  {Element} target Element that will dispatch the event
         * @param  {String} type   The name of the event to fire
         * @returns {Element}       target
         * @name module:ac-dom-events.dispatchEvent
         * @kind function
         */
        events.dispatchEvent = function(target, type) {
            // Expects polyfill for CustomEvent constructor
            if (document.createEvent) {
                target.dispatchEvent(new CustomEvent(type));
            } else {
                target.fireEvent('on' + type, document.createEventObject());
            }
            return target;
        };

        /**
         * Cross-browser event removing
         * @param {Element} target Element to listen for event on
         * @param {String} type
         * @param {Function} listener
         * @param {Boolean} [useCapture=false]
         * @returns target
         * @name module:ac-dom-events.removeEventListener
         * @kind function
         */
        events.removeEventListener = function(target, type, listener, useCapture) {
            if (target.removeEventListener) {
                target.removeEventListener(type, listener, useCapture);
            } else {
                target.detachEvent('on' + type, listener);
            }
            return target;
        };

        var prefixMatch = /^(webkit|moz|ms|o)/i;

        /**
         * Sets all the vendor event listeners of type on element.
         * @param {Element} target Element for which to set the listener upon
         * @param {String} type String representing the event type to listen for, e.g. animationEnd, webkitAnimationEnd, etc... IMPORTANT: This value is expected to be a string in camelCase.
         * @param {Function} listener Object that receives a notification when an event of the specified type occurs.
         * @param {Boolean} [useCapture=false] If true, useCapture indicates that the user wishes to initiate capture.
         * @returns target
         * @name module:ac-dom-events.addVendorPrefixEventListener
         * @kind function
         */
        events.addVendorPrefixEventListener = function(target, type, listener, useCapture) {
            if (prefixMatch.test(type)) {
                type = type.replace(prefixMatch, '');
            } else {
                type = type.charAt(0).toUpperCase() + type.slice(1);
            }

            // To avoid adding the same event twice, we need to sniff the user agent.
            // Once we've confirmed a browser supports the generic event name, we'll
            // change this if to be < that build.
            if (/WebKit/i.test(window.navigator.userAgent)) {
                return events.addEventListener(target, 'webkit' + type, listener, useCapture);
            } else if (/Opera/i.test(window.navigator.userAgent)) {
                return events.addEventListener(target, 'O' + type, listener, useCapture);
            } else if (/Gecko/i.test(window.navigator.userAgent)) {
                return events.addEventListener(target, type.toLowerCase(), listener, useCapture);
            } else {
                type = type.charAt(0).toLowerCase() + type.slice(1);
                return events.addEventListener(target, type, listener, useCapture);
            }
        };

        /**
         * Removes all the vendor event listeners of type on an element.
         * @param {Element} target Element for which to remove the listener from
         * @param {String} type String representing the event type to listen for, e.g. animationEnd, webkitAnimationEnd, etc... IMPORTANT: This value is expected to be a string in camelCase.
         * @param {Function} listener Object that receives a notification when an event of the specified type occurs.
         * @param {Boolean} [useCapture=false] If true, useCapture indicates that the user wishes to initiate capture.
         * @returns target
         * @name module:ac-dom-events.removeVendorPrefixEventListener
         * @kind function
         */
        events.removeVendorPrefixEventListener = function(target, type, listener, useCapture) {
            if (prefixMatch.test(type)) {
                type = type.replace(prefixMatch, '');
            } else {
                type = type.charAt(0).toUpperCase() + type.slice(1);
            }

            events.removeEventListener(target, 'webkit' + type, listener, useCapture);
            events.removeEventListener(target, 'O' + type, listener, useCapture);
            events.removeEventListener(target, type.toLowerCase(), listener, useCapture);

            type = type.charAt(0).toLowerCase() + type.slice(1);
            return events.removeEventListener(target, type, listener, useCapture);
        };

        /**
         * Stop propagation of event and prevent default behavior.
         * @param {Event} evt The event to stop
         * @name module:ac-dom-events.stop
         * @kind function
         */
        events.stop = function(evt) {
            if (!evt) {
                evt = window.event;
            }

            if (evt.stopPropagation) {
                evt.stopPropagation();
            } else {
                evt.cancelBubble = true;
            }

            if (evt.preventDefault) {
                evt.preventDefault();
            }

            evt.stopped = true;
            evt.returnValue = false;
        };

        /**
         * Cross-browser event target getter
         * @param {Event} evt
         * @name module:ac-dom-events.target
         * @kind function
         */
        events.target = function(evt) {
            return (typeof evt.target !== 'undefined') ? evt.target : evt.srcElement;
        };

        module.exports = events;

    }, {}],
    213: [function(require, module, exports) {
        /**
         * @module ac-dom-traversal
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        var ac_dom_traversal = {
            querySelector: require('./ac-dom-traversal/querySelector'),
            querySelectorAll: require('./ac-dom-traversal/querySelectorAll'),
            ancestor: require('./ac-dom-traversal/ancestor'),
            ancestors: require('./ac-dom-traversal/ancestors'),
            children: require('./ac-dom-traversal/children'),
            firstChild: require('./ac-dom-traversal/firstChild'),
            lastChild: require('./ac-dom-traversal/lastChild'),
            siblings: require('./ac-dom-traversal/siblings'),
            nextSibling: require('./ac-dom-traversal/nextSibling'),
            nextSiblings: require('./ac-dom-traversal/nextSiblings'),
            previousSibling: require('./ac-dom-traversal/previousSibling'),
            previousSiblings: require('./ac-dom-traversal/previousSiblings'),
            filterBySelector: require('./ac-dom-traversal/filterBySelector'),
            matchesSelector: require('./ac-dom-traversal/matchesSelector')
        };

        // IE compatibility
        require('./ac-dom-traversal/shims/ie')(ac_dom_traversal);

        module.exports = ac_dom_traversal;

    }, {
        "./ac-dom-traversal/ancestor": 214,
        "./ac-dom-traversal/ancestors": 215,
        "./ac-dom-traversal/children": 216,
        "./ac-dom-traversal/filterBySelector": 217,
        "./ac-dom-traversal/firstChild": 218,
        "./ac-dom-traversal/lastChild": 221,
        "./ac-dom-traversal/matchesSelector": 222,
        "./ac-dom-traversal/nextSibling": 223,
        "./ac-dom-traversal/nextSiblings": 224,
        "./ac-dom-traversal/previousSibling": 225,
        "./ac-dom-traversal/previousSiblings": 226,
        "./ac-dom-traversal/querySelector": 227,
        "./ac-dom-traversal/querySelectorAll": 228,
        "./ac-dom-traversal/shims/ie": 229,
        "./ac-dom-traversal/siblings": 230
    }],
    214: [function(require, module, exports) {
        /**
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var ac_dom_nodes = require('ac-dom-nodes');
        var matchesSelector = require('./matchesSelector');
        var validate = require('./helpers/validate');

        /**
         * @name module:ac-dom-traversal.ancestor
         *
         * @function
         *
         * @desc Returns the closest Element that is an ancestor of the specified Node, matching an optional CSS selector, up to and including the body.
         *
         * @param {Node} node
         *        The child Element, TextNode, or Comment.
         *
         * @param {String} [selector]
         *        Optional CSS selectors, separated by commas, to filter ancestor Elements by.
         *
         * @returns {Element|null} Closest matching ancestor Element, or `null` if no matches are found.
         */
        module.exports = function ancestor(node, selector) {
            validate.childNode(node, true, 'ancestors');
            validate.selector(selector, false, 'ancestors');

            if (node !== document.body) {
                while ((node = node.parentNode) && ac_dom_nodes.isElement(node)) {
                    if (!selector || matchesSelector(node, selector)) {
                        return node;
                    }

                    if (node === document.body) {
                        break;
                    }
                }
            }

            return null;
        };

    }, {
        "./helpers/validate": 220,
        "./matchesSelector": 222,
        "ac-dom-nodes": 191
    }],
    215: [function(require, module, exports) {
        /**
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var ac_dom_nodes = require('ac-dom-nodes');
        var matchesSelector = require('./matchesSelector');
        var validate = require('./helpers/validate');

        /**
         * @name module:ac-dom-traversal.ancestors
         *
         * @function
         *
         * @desc Returns an Array of Elements that are ancestors of the specified Node, matching an optional CSS selector, up to and including the body.
         *
         * @param {Node} node
         *        The child Element, TextNode, or Comment.
         *
         * @param {String} [selector]
         *        Optional CSS selectors, separated by commas, to filter ancestor Elements by.
         *
         * @returns {Element[]} Array of matching ancestor Elements, with the closest ancestor first.
         */
        module.exports = function ancestors(node, selector) {
            var els = [];

            validate.childNode(node, true, 'ancestors');
            validate.selector(selector, false, 'ancestors');

            if (node !== document.body) {
                while ((node = node.parentNode) && ac_dom_nodes.isElement(node)) {
                    if (!selector || matchesSelector(node, selector)) {
                        els.push(node);
                    }

                    if (node === document.body) {
                        break;
                    }
                }
            }

            return els;
        };

    }, {
        "./helpers/validate": 220,
        "./matchesSelector": 222,
        "ac-dom-nodes": 191
    }],
    216: [function(require, module, exports) {
        /**
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var ac_dom_nodes = require('ac-dom-nodes');
        var filterBySelector = require('./filterBySelector');
        var validate = require('./helpers/validate');

        /**
         * @name module:ac-dom-traversal.children
         *
         * @function
         *
         * @desc Returns an Array of Elements that are direct children of the specified Node, matching an optional CSS selector.
         *
         * @param {Node} node
         *        The parent Element, Document, or Document Fragment.
         *
         * @param {String} [selector]
         *        Optional CSS selectors, separated by commas, to filter children Elements by.
         *
         * @returns {Element[]} Array of matching child Elements, in DOM order.
         */
        module.exports = function children(node, selector) {
            var els;

            validate.parentNode(node, true, 'children');
            validate.selector(selector, false, 'children');

            els = node.children || node.childNodes;
            els = ac_dom_nodes.filterByNodeType(els);

            if (selector) {
                els = filterBySelector(els, selector);
            }

            return els;
        };

    }, {
        "./filterBySelector": 217,
        "./helpers/validate": 220,
        "ac-dom-nodes": 191
    }],
    217: [function(require, module, exports) {
        /**
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var matchesSelector = require('./matchesSelector');
        var validate = require('./helpers/validate');

        /**
         * @name module:ac-dom-traversal.filterBySelector
         *
         * @function
         *
         * @desc Filter an Array of Elements by a given CSS selector.
         *
         * @param {Node[]|NodeList} nodes
         *        The Elements to be filtered.
         *
         * @param {String} selector
         *        CSS selectors, separated by commas, to check Elements against.
         *
         * @returns {Element[]} A new Array of matching Elements.
         */
        module.exports = function filterBySelector(nodes, selector) {
            validate.selector(selector, true, 'filterBySelector');

            nodes = Array.prototype.slice.call(nodes);

            return nodes.filter(function(el) {
                return matchesSelector(el, selector);
            });
        };

    }, {
        "./helpers/validate": 220,
        "./matchesSelector": 222
    }],
    218: [function(require, module, exports) {
        /**
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var children = require('./children');
        var validate = require('./helpers/validate');

        /**
         * @name module:ac-dom-traversal.firstChild
         *
         * @function
         *
         * @desc Returns the first Element that is a direct child of the specified Node, matching an optional CSS selector.
         *
         * @param {Node} node
         *        The parent Element, Document, or Document Fragment.
         *
         * @param {String} [selector]
         *        Optional CSS selectors, separated by commas, to filter children Elements by.
         *
         * @returns {Element|null} First matching child Element, or `null` if no matches are found.
         */
        module.exports = function firstChild(node, selector) {
            var els;

            validate.parentNode(node, true, 'firstChild');
            validate.selector(selector, false, 'firstChild');

            if (node.firstElementChild && !selector) {
                return node.firstElementChild;
            }

            els = children(node, selector);

            if (els.length) {
                return els[0];
            }

            return null;
        };

    }, {
        "./children": 216,
        "./helpers/validate": 220
    }],
    219: [function(require, module, exports) {
        'use strict';

        /** @ignore */
        module.exports = window.Element ? (function(proto) {
            return proto.matches ||
                proto.matchesSelector ||
                proto.webkitMatchesSelector ||
                proto.mozMatchesSelector ||
                proto.msMatchesSelector ||
                proto.oMatchesSelector;
        }(Element.prototype)) : null;

    }, {}],
    220: [function(require, module, exports) {
        /**
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var ac_dom_nodes = require('ac-dom-nodes');

        /** @ignore */
        var isNodeType = function(node, nodeType) {
            if (!ac_dom_nodes.isNode(node)) {
                return false;
            }

            if (typeof nodeType === 'number') {
                return (node.nodeType === nodeType);
            }

            return (nodeType.indexOf(node.nodeType) !== -1);
        };

        /** @ignore */
        var VALID_PARENT_NODE = [
            ac_dom_nodes.ELEMENT_NODE,
            ac_dom_nodes.DOCUMENT_NODE,
            ac_dom_nodes.DOCUMENT_FRAGMENT_NODE
        ];

        /** @ignore */
        var ERR_INVALID_PARENT_NODE = ' must be an Element, Document, or Document Fragment';

        /** @ignore */
        var VALID_CHILD_NODE = [
            ac_dom_nodes.ELEMENT_NODE,
            ac_dom_nodes.TEXT_NODE,
            ac_dom_nodes.COMMENT_NODE
        ];

        /** @ignore */
        var ERR_INVALID_CHILD_NODE = ' must be an Element, TextNode, or Comment';

        /** @ignore */
        var ERR_INVALID_SELECTOR = ' must be a string';

        module.exports = {

            /** @ignore */
            parentNode: function(node, required, funcName, paramName) {
                paramName = paramName || 'node';

                if ((node || required) && !isNodeType(node, VALID_PARENT_NODE)) {
                    throw new TypeError(funcName + ': ' + paramName + ERR_INVALID_PARENT_NODE);
                }
            },

            /** @ignore */
            childNode: function(node, required, funcName, paramName) {
                paramName = paramName || 'node';

                if (!node && !required) {
                    return;
                }

                if (!isNodeType(node, VALID_CHILD_NODE)) {
                    throw new TypeError(funcName + ': ' + paramName + ERR_INVALID_CHILD_NODE);
                }
            },

            /** @ignore */
            selector: function(selector, required, funcName, paramName) {
                paramName = paramName || 'selector';

                if ((selector || required) && typeof selector !== 'string') {
                    throw new TypeError(funcName + ': ' + paramName + ERR_INVALID_SELECTOR);
                }
            }

        };

    }, {
        "ac-dom-nodes": 191
    }],
    221: [function(require, module, exports) {
        /**
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var children = require('./children');
        var validate = require('./helpers/validate');

        /**
         * @name module:ac-dom-traversal.lastChild
         *
         * @function
         *
         * @desc Returns the last Element that is a direct child of the specified Node, matching an optional CSS selector.
         *
         * @param {Node} node
         *        The parent Element, Document, or Document Fragment.
         *
         * @param {String} [selector]
         *        Optional CSS selectors, separated by commas, to filter children Elements by.
         *
         * @returns {Element|null} Last matching child Element, or `null` if no matches are found.
         */
        module.exports = function lastChild(node, selector) {
            var els;

            validate.parentNode(node, true, 'lastChild');
            validate.selector(selector, false, 'lastChild');

            if (node.lastElementChild && !selector) {
                return node.lastElementChild;
            }

            els = children(node, selector);

            if (els.length) {
                return els[els.length - 1];
            }

            return null;
        };

    }, {
        "./children": 216,
        "./helpers/validate": 220
    }],
    222: [function(require, module, exports) {
        /**
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var ac_dom_nodes = require('ac-dom-nodes');
        var nativeMatches = require('./helpers/nativeMatches');
        var validate = require('./helpers/validate');

        /**
         * @name module:ac-dom-traversal.matchesSelector
         *
         * @function
         *
         * @desc Returns whether or not an Element matches a given CSS selector.
         *
         * @param {Node} node
         *        The Element to be checked.
         *
         * @param {String} selector
         *        CSS selectors, separated by commas, to check Element against.
         *
         * @returns {Boolean} `true` if the Element matches the selector, otherwise `false`
         */
        module.exports = function matchesSelector(node, selector) {
            validate.selector(selector, true, 'matchesSelector');
            return ac_dom_nodes.isElement(node) ? nativeMatches.call(node, selector) : false;
        };

    }, {
        "./helpers/nativeMatches": 219,
        "./helpers/validate": 220,
        "ac-dom-nodes": 191
    }],
    223: [function(require, module, exports) {
        /**
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var ac_dom_nodes = require('ac-dom-nodes');
        var matchesSelector = require('./matchesSelector');
        var validate = require('./helpers/validate');

        /**
         * @name module:ac-dom-traversal.nextSibling
         *
         * @function
         *
         * @desc Returns the closest sibling Element that follows the specified Node, matching an optional CSS selector.
         *
         * @param {Node} node
         *        The Element, TextNode, or Comment.
         *
         * @param {String} [selector]
         *        Optional CSS selectors, separated by commas, to filter sibling Elements by.
         *
         * @returns {Element|null} Closest matching sibling Element, or `null` if no matches are found.
         */
        module.exports = function nextSibling(node, selector) {
            validate.childNode(node, true, 'nextSibling');
            validate.selector(selector, false, 'nextSibling');

            if (node.nextElementSibling && !selector) {
                return node.nextElementSibling;
            }

            while (node = node.nextSibling) {
                if (ac_dom_nodes.isElement(node)) {
                    if (!selector || matchesSelector(node, selector)) {
                        return node;
                    }
                }
            }

            return null;
        };

    }, {
        "./helpers/validate": 220,
        "./matchesSelector": 222,
        "ac-dom-nodes": 191
    }],
    224: [function(require, module, exports) {
        /**
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var ac_dom_nodes = require('ac-dom-nodes');
        var matchesSelector = require('./matchesSelector');
        var validate = require('./helpers/validate');

        /**
         * @name module:ac-dom-traversal.nextSiblings
         *
         * @function
         *
         * @desc Returns an Array of sibling Elements that follow the specified Node, matching an optional CSS selector.
         *
         * @param {Node} node
         *        The Element, TextNode, or Comment.
         *
         * @param {String} [selector]
         *        Optional CSS selectors, separated by commas, to filter sibling Elements by.
         *
         * @returns {Element[]} Array of matching sibling Elements, in DOM order.
         */
        module.exports = function nextSiblings(node, selector) {
            var els = [];

            validate.childNode(node, true, 'nextSiblings');
            validate.selector(selector, false, 'nextSiblings');

            while (node = node.nextSibling) {
                if (ac_dom_nodes.isElement(node)) {
                    if (!selector || matchesSelector(node, selector)) {
                        els.push(node);
                    }
                }
            }

            return els;
        };

    }, {
        "./helpers/validate": 220,
        "./matchesSelector": 222,
        "ac-dom-nodes": 191
    }],
    225: [function(require, module, exports) {
        /**
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var ac_dom_nodes = require('ac-dom-nodes');
        var matchesSelector = require('./matchesSelector');
        var validate = require('./helpers/validate');

        /**
         * @name module:ac-dom-traversal.previousSibling
         *
         * @function
         *
         * @desc Returns the closest sibling Element that preceeds the specified Node, matching an optional CSS selector.
         *
         * @param {Node} node
         *        The Element, TextNode, or Comment.
         *
         * @param {String} [selector]
         *        Optional CSS selectors, separated by commas, to filter sibling Elements by.
         *
         * @returns {Element|null} Closest matching sibling Element, or `null` if no matches are found.
         */
        module.exports = function previousSibling(node, selector) {
            validate.childNode(node, true, 'previousSibling');
            validate.selector(selector, false, 'previousSibling');

            if (node.previousElementSibling && !selector) {
                return node.previousElementSibling;
            }

            while (node = node.previousSibling) {
                if (ac_dom_nodes.isElement(node)) {
                    if (!selector || matchesSelector(node, selector)) {
                        return node;
                    }
                }
            }

            return null;
        };

    }, {
        "./helpers/validate": 220,
        "./matchesSelector": 222,
        "ac-dom-nodes": 191
    }],
    226: [function(require, module, exports) {
        /**
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var ac_dom_nodes = require('ac-dom-nodes');
        var matchesSelector = require('./matchesSelector');
        var validate = require('./helpers/validate');

        /**
         * @name module:ac-dom-traversal.previousSiblings
         *
         * @function
         *
         * @desc Returns an Array of sibling Elements that preceed the specified Node, matching an optional CSS selector.
         *
         * @param {Node} node
         *        The Element, TextNode, or Comment.
         *
         * @param {String} [selector]
         *        Optional CSS selectors, separated by commas, to filter sibling Elements by.
         *
         * @returns {Element[]} Array of matching sibling Elements, in DOM order.
         */
        module.exports = function previousSiblings(node, selector) {
            var els = [];

            validate.childNode(node, true, 'previousSiblings');
            validate.selector(selector, false, 'previousSiblings');

            while (node = node.previousSibling) {
                if (ac_dom_nodes.isElement(node)) {
                    if (!selector || matchesSelector(node, selector)) {
                        els.push(node);
                    }
                }
            }

            return els.reverse();
        };

    }, {
        "./helpers/validate": 220,
        "./matchesSelector": 222,
        "ac-dom-nodes": 191
    }],
    227: [function(require, module, exports) {
        /**
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var validate = require('./helpers/validate');

        /**
         * @name module:ac-dom-traversal.querySelector
         *
         * @function
         *
         * @desc Returns the first Element within the specified context that match given CSS selector(s).
         *
         * @param {String} selector
         *        One or more CSS selectors separated by commas.
         *
         * @param {Node} [context=document]
         *        An optional ParentNode to scope the selector to. Defaults to `document`.
         *
         * @returns {Element|null} First matching Element, or `null` if no matches are found.
         */
        module.exports = function querySelector(selector, context) {
            context = context || document;

            validate.parentNode(context, true, 'querySelector', 'context');
            validate.selector(selector, true, 'querySelector');

            return context.querySelector(selector);
        };

    }, {
        "./helpers/validate": 220
    }],
    228: [function(require, module, exports) {
        /**
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var validate = require('./helpers/validate');

        /**
         * @name module:ac-dom-traversal.querySelectorAll
         *
         * @function
         *
         * @desc Returns an Array of Elements within the specified context that match given CSS selector(s).
         *
         * @param {String} selector
         *        One or more CSS selectors separated by commas.
         *
         * @param {Node} [context=document]
         *        An optional ParentNode to scope the selector to. Defaults to `document`.
         *
         * @returns {Element[]} Array of matching Elements
         */
        module.exports = function querySelectorAll(selector, context) {
            context = context || document;

            validate.parentNode(context, true, 'querySelectorAll', 'context');
            validate.selector(selector, true, 'querySelectorAll');

            return Array.prototype.slice.call(context.querySelectorAll(selector));
        };

    }, {
        "./helpers/validate": 220
    }],
    229: [function(require, module, exports) {
        'use strict';

        /** @ignore */
        var sizzle = require('../vendor/sizzle/sizzle');
        var ac_dom_nodes = require('ac-dom-nodes');
        var nativeMatches = require('../helpers/nativeMatches');
        var validate = require('../helpers/validate');

        module.exports = function(ac_dom_traversal, forceShim) {
            if (forceShim || !('querySelectorAll' in document)) {
                /**
                 * module:ac-dom-traversal.selectAll shim for IE < 8
                 * Fallback to sizzle needed due to lack of native querySelectorAll
                 */
                ac_dom_traversal.querySelectorAll = function(selector, context) {
                    var children;
                    var matches;

                    context = context || document;

                    validate.parentNode(context, true, 'querySelectorAll', 'context');
                    validate.selector(selector, true, 'querySelectorAll');

                    if (ac_dom_nodes.isDocumentFragment(context)) {
                        children = ac_dom_traversal.children(context);
                        matches = [];

                        children.forEach(function(node) {
                            var childMatches;

                            // check the child node
                            if (sizzle.matchesSelector(node, selector)) {
                                matches.push(node);
                            }

                            // check the child node's children
                            childMatches = sizzle(selector, node);
                            if (childMatches.length) {
                                matches = matches.concat(childMatches);
                            }
                        });

                        return matches;
                    }

                    return sizzle(selector, context);
                };

                /**
                 * module:ac-dom-traversal.querySelector shim for IE < 8
                 * Fallback to sizzle needed due to lack of native querySelector
                 */
                ac_dom_traversal.querySelector = function(selector, context) {
                    var allResults;

                    context = context || document;

                    validate.parentNode(context, true, 'querySelector', 'context');
                    validate.selector(selector, true, 'querySelector');

                    allResults = ac_dom_traversal.querySelectorAll(selector, context);

                    return allResults.length ? allResults[0] : null;
                };
            }

            if (forceShim || !nativeMatches) {
                /**
                 * module:ac-dom-traversal.matchesSelector shim for IE < 10
                 * Fallback to sizzle needed due to lack of native matches or msMatchesSelector
                 */
                ac_dom_traversal.matchesSelector = function(node, selector) {
                    return sizzle.matchesSelector(node, selector);
                };
            }
        };

    }, {
        "../helpers/nativeMatches": 219,
        "../helpers/validate": 220,
        "../vendor/sizzle/sizzle": 231,
        "ac-dom-nodes": 191
    }],
    230: [function(require, module, exports) {
        /**
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var children = require('./children');
        var validate = require('./helpers/validate');

        /**
         * @name module:ac-dom-traversal.siblings
         *
         * @function
         *
         * @desc Returns an Array of Elements that are siblings of the specified Node, matching an optional CSS selector.
         *
         * @param {Node} node
         *        The Element, TextNode, or Comment.
         *
         * @param {String} [selector]
         *        Optional CSS selectors, separated by commas, to filter sibling Elements by.
         *
         * @returns {Element[]} Array of matching sibling Elements, in DOM order.
         */
        module.exports = function siblings(node, selector) {
            var els = [];

            validate.childNode(node, true, 'siblings');
            validate.selector(selector, false, 'siblings');

            if (node.parentNode) {
                els = children(node.parentNode, selector);
                els = els.filter(function(el) {
                    return (el !== node);
                });
            }

            return els;
        };

    }, {
        "./children": 216,
        "./helpers/validate": 220
    }],
    231: [function(require, module, exports) {
        /*!
         * Sizzle CSS Selector Engine
         *  Copyright 2012, The Dojo Foundation
         *  Released under the MIT, BSD, and GPL Licenses.
         *  More information: http://sizzlejs.com/
         */
        /**
         * Finally found the exact commit for this version of Sizzle
         * commit: 683924fb73bafc5447b86cc5a38a4d99108e1196
         * @see https://github.com/jquery/sizzle/tree/683924fb73bafc5447b86cc5a38a4d99108e1196
         *
         * This is an unreleased version in between 1.7.2 and 1.8.0 committed 2012-07-23
         * It was basic tag: 1.8.0~9
         *
         * Since then this has been modified with:
         * - 2014-05-13 jisaacs: This comment block (cut a fork of the above mentioned commit)
         * - 2014-01-14 glan: CommonJS module.exports at the bottom of the file (ac-base)
         */
        (function(window, undefined) {

            var cachedruns,
                dirruns,
                sortOrder,
                siblingCheck,
                assertGetIdNotName,

                document = window.document,
                docElem = document.documentElement,

                strundefined = "undefined",
                hasDuplicate = false,
                baseHasDuplicate = true,
                done = 0,
                slice = [].slice,
                push = [].push,

                expando = ("sizcache" + Math.random()).replace(".", ""),

                // Regex

                // Whitespace characters http://www.w3.org/TR/css3-selectors/#whitespace
                whitespace = "[\\x20\\t\\r\\n\\f]",
                // http://www.w3.org/TR/css3-syntax/#characters
                characterEncoding = "(?:\\\\.|[-\\w]|[^\\x00-\\xa0])",

                // Loosely modeled on Javascript identifier characters
                identifier = "(?:[\\w#_-]|[^\\x00-\\xa0]|\\\\.)",
                // Acceptable operators http://www.w3.org/TR/selectors/#attribute-selectors
                operators = "([*^$|!~]?=)",
                attributes = "\\[" + whitespace + "*(" + characterEncoding + "+)" + whitespace +
                "*(?:" + operators + whitespace + "*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|(" + identifier + "+)|)|)" + whitespace + "*\\]",
                pseudos = ":(" + characterEncoding + "+)(?:\\((?:(['\"])((?:\\\\.|[^\\\\])*?)\\2|(.*))\\)|)",
                pos = ":(nth|eq|gt|lt|first|last|even|odd)(?:\\((\\d*)\\)|)(?=[^-]|$)",
                combinators = whitespace + "*([\\x20\\t\\r\\n\\f>+~])" + whitespace + "*",
                groups = "(?=[^\\x20\\t\\r\\n\\f])(?:\\\\.|" + attributes + "|" + pseudos.replace(2, 7) + "|[^\\\\(),])+",

                // Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
                rtrim = new RegExp("^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g"),

                rcombinators = new RegExp("^" + combinators),

                // All simple (non-comma) selectors, excluding insignifant trailing whitespace
                rgroups = new RegExp(groups + "?(?=" + whitespace + "*,|$)", "g"),

                // A selector, or everything after leading whitespace
                // Optionally followed in either case by a ")" for terminating sub-selectors
                rselector = new RegExp("^(?:(?!,)(?:(?:^|,)" + whitespace + "*" + groups + ")*?|" + whitespace + "*(.*?))(\\)|$)"),

                // All combinators and selector components (attribute test, tag, pseudo, etc.), the latter appearing together when consecutive
                rtokens = new RegExp(groups.slice(19, -6) + "\\x20\\t\\r\\n\\f>+~])+|" + combinators, "g"),

                // Easily-parseable/retrievable ID or TAG or CLASS selectors
                rquickExpr = /^(?:#([\w\-]+)|(\w+)|\.([\w\-]+))$/,

                rsibling = /[\x20\t\r\n\f]*[+~]/,
                rendsWithNot = /:not\($/,

                rheader = /h\d/i,
                rinputs = /input|select|textarea|button/i,

                rbackslash = /\\(?!\\)/g,

                matchExpr = {
                    "ID": new RegExp("^#(" + characterEncoding + "+)"),
                    "CLASS": new RegExp("^\\.(" + characterEncoding + "+)"),
                    "NAME": new RegExp("^\\[name=['\"]?(" + characterEncoding + "+)['\"]?\\]"),
                    "TAG": new RegExp("^(" + characterEncoding.replace("[-", "[-\\*") + "+)"),
                    "ATTR": new RegExp("^" + attributes),
                    "PSEUDO": new RegExp("^" + pseudos),
                    "CHILD": new RegExp("^:(only|nth|last|first)-child(?:\\(" + whitespace +
                        "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
                        "*(\\d+)|))" + whitespace + "*\\)|)", "i"),
                    "POS": new RegExp(pos, "ig"),
                    // For use in libraries implementing .is()
                    "needsContext": new RegExp("^" + whitespace + "*[>+~]|" + pos, "i")
                },

                classCache = {},
                cachedClasses = [],
                compilerCache = {},
                cachedSelectors = [],

                // Mark a function for use in filtering
                markFunction = function(fn) {
                    fn.sizzleFilter = true;
                    return fn;
                },

                // Returns a function to use in pseudos for input types
                createInputFunction = function(type) {
                    return function(elem) {
                        // Check the input's nodeName and type
                        return elem.nodeName.toLowerCase() === "input" && elem.type === type;
                    };
                },

                // Returns a function to use in pseudos for buttons
                createButtonFunction = function(type) {
                    return function(elem) {
                        var name = elem.nodeName.toLowerCase();
                        return (name === "input" || name === "button") && elem.type === type;
                    };
                },

                // Used for testing something on an element
                assert = function(fn) {
                    var pass = false,
                        div = document.createElement("div");
                    try {
                        pass = fn(div);
                    } catch (e) {}
                    // release memory in IE
                    div = null;
                    return pass;
                },

                // Check if attributes should be retrieved by attribute nodes
                assertAttributes = assert(function(div) {
                    div.innerHTML = "<select></select>";
                    var type = typeof div.lastChild.getAttribute("multiple");
                    // IE8 returns a string for some attributes even when not present
                    return type !== "boolean" && type !== "string";
                }),

                // Check if getElementById returns elements by name
                // Check if getElementsByName privileges form controls or returns elements by ID
                assertUsableName = assert(function(div) {
                    // Inject content
                    div.id = expando + 0;
                    div.innerHTML = "<a name='" + expando + "'></a><div name='" + expando + "'></div>";
                    docElem.insertBefore(div, docElem.firstChild);

                    // Test
                    var pass = document.getElementsByName &&
                        // buggy browsers will return fewer than the correct 2
                        document.getElementsByName(expando).length ===
                        // buggy browsers will return more than the correct 0
                        2 + document.getElementsByName(expando + 0).length;
                    assertGetIdNotName = !document.getElementById(expando);

                    // Cleanup
                    docElem.removeChild(div);

                    return pass;
                }),

                // Check if the browser returns only elements
                // when doing getElementsByTagName("*")
                assertTagNameNoComments = assert(function(div) {
                    div.appendChild(document.createComment(""));
                    return div.getElementsByTagName("*").length === 0;
                }),

                // Check if getAttribute returns normalized href attributes
                assertHrefNotNormalized = assert(function(div) {
                    div.innerHTML = "<a href='#'></a>";
                    return div.firstChild && typeof div.firstChild.getAttribute !== strundefined &&
                        div.firstChild.getAttribute("href") === "#";
                }),

                // Check if getElementsByClassName can be trusted
                assertUsableClassName = assert(function(div) {
                    // Opera can't find a second classname (in 9.6)
                    div.innerHTML = "<div class='hidden e'></div><div class='hidden'></div>";
                    if (!div.getElementsByClassName || div.getElementsByClassName("e").length === 0) {
                        return false;
                    }

                    // Safari caches class attributes, doesn't catch changes (in 3.2)
                    div.lastChild.className = "e";
                    return div.getElementsByClassName("e").length !== 1;
                });

            var Sizzle = function(selector, context, results, seed) {
                results = results || [];
                context = context || document;
                var match, elem, xml, m,
                    nodeType = context.nodeType;

                if (nodeType !== 1 && nodeType !== 9) {
                    return [];
                }

                if (!selector || typeof selector !== "string") {
                    return results;
                }

                xml = isXML(context);

                if (!xml && !seed) {
                    if ((match = rquickExpr.exec(selector))) {
                        // Speed-up: Sizzle("#ID")
                        if ((m = match[1])) {
                            if (nodeType === 9) {
                                elem = context.getElementById(m);
                                // Check parentNode to catch when Blackberry 4.6 returns
                                // nodes that are no longer in the document #6963
                                if (elem && elem.parentNode) {
                                    // Handle the case where IE, Opera, and Webkit return items
                                    // by name instead of ID
                                    if (elem.id === m) {
                                        results.push(elem);
                                        return results;
                                    }
                                } else {
                                    return results;
                                }
                            } else {
                                // Context is not a document
                                if (context.ownerDocument && (elem = context.ownerDocument.getElementById(m)) &&
                                    contains(context, elem) && elem.id === m) {
                                    results.push(elem);
                                    return results;
                                }
                            }

                            // Speed-up: Sizzle("TAG")
                        } else if (match[2]) {
                            push.apply(results, slice.call(context.getElementsByTagName(selector), 0));
                            return results;

                            // Speed-up: Sizzle(".CLASS")
                        } else if ((m = match[3]) && assertUsableClassName && context.getElementsByClassName) {
                            push.apply(results, slice.call(context.getElementsByClassName(m), 0));
                            return results;
                        }
                    }
                }

                // All others
                return select(selector, context, results, seed, xml);
            };

            var Expr = Sizzle.selectors = {

                // Can be adjusted by the user
                cacheLength: 50,

                match: matchExpr,

                order: ["ID", "TAG"],

                attrHandle: {},

                createPseudo: markFunction,

                find: {
                    "ID": assertGetIdNotName ?
                        function(id, context, xml) {
                            if (typeof context.getElementById !== strundefined && !xml) {
                                var m = context.getElementById(id);
                                // Check parentNode to catch when Blackberry 4.6 returns
                                // nodes that are no longer in the document #6963
                                return m && m.parentNode ? [m] : [];
                            }
                        } : function(id, context, xml) {
                            if (typeof context.getElementById !== strundefined && !xml) {
                                var m = context.getElementById(id);

                                return m ?
                                    m.id === id || typeof m.getAttributeNode !== strundefined && m.getAttributeNode("id").value === id ? [m] :
                                    undefined : [];
                            }
                        },

                    "TAG": assertTagNameNoComments ?
                        function(tag, context) {
                            if (typeof context.getElementsByTagName !== strundefined) {
                                return context.getElementsByTagName(tag);
                            }
                        } : function(tag, context) {
                            var results = context.getElementsByTagName(tag);

                            // Filter out possible comments
                            if (tag === "*") {
                                var elem,
                                    tmp = [],
                                    i = 0;

                                for (;
                                    (elem = results[i]); i++) {
                                    if (elem.nodeType === 1) {
                                        tmp.push(elem);
                                    }
                                }

                                return tmp;
                            }
                            return results;
                        }
                },

                relative: {
                    ">": {
                        dir: "parentNode",
                        first: true
                    },
                    " ": {
                        dir: "parentNode"
                    },
                    "+": {
                        dir: "previousSibling",
                        first: true
                    },
                    "~": {
                        dir: "previousSibling"
                    }
                },

                preFilter: {
                    "ATTR": function(match) {
                        match[1] = match[1].replace(rbackslash, "");

                        // Move the given value to match[3] whether quoted or unquoted
                        match[3] = (match[4] || match[5] || "").replace(rbackslash, "");

                        if (match[2] === "~=") {
                            match[3] = " " + match[3] + " ";
                        }

                        return match.slice(0, 4);
                    },

                    "CHILD": function(match) {
                        /* matches from matchExpr.CHILD
				1 type (only|nth|...)
				2 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				3 xn-component of xn+y argument ([+-]?\d*n|)
				4 sign of xn-component
				5 x of xn-component
				6 sign of y-component
				7 y of y-component
			*/
                        match[1] = match[1].toLowerCase();

                        if (match[1] === "nth") {
                            // nth-child requires argument
                            if (!match[2]) {
                                Sizzle.error(match[0]);
                            }

                            // numeric x and y parameters for Expr.filter.CHILD
                            // remember that false/true cast respectively to 0/1
                            match[3] = +(match[3] ? match[4] + (match[5] || 1) : 2 * (match[2] === "even" || match[2] === "odd"));
                            match[4] = +((match[6] + match[7]) || match[2] === "odd");

                            // other types prohibit arguments
                        } else if (match[2]) {
                            Sizzle.error(match[0]);
                        }

                        return match;
                    },

                    "PSEUDO": function(match) {
                        var argument,
                            unquoted = match[4];

                        if (matchExpr["CHILD"].test(match[0])) {
                            return null;
                        }

                        // Relinquish our claim on characters in `unquoted` from a closing parenthesis on
                        if (unquoted && (argument = rselector.exec(unquoted)) && argument.pop()) {

                            match[0] = match[0].slice(0, argument[0].length - unquoted.length - 1);
                            unquoted = argument[0].slice(0, -1);
                        }

                        // Quoted or unquoted, we have the full argument
                        // Return only captures needed by the pseudo filter method (type and argument)
                        match.splice(2, 3, unquoted || match[3]);
                        return match;
                    }
                },

                filter: {
                    "ID": assertGetIdNotName ?
                        function(id) {
                            id = id.replace(rbackslash, "");
                            return function(elem) {
                                return elem.getAttribute("id") === id;
                            };
                        } : function(id) {
                            id = id.replace(rbackslash, "");
                            return function(elem) {
                                var node = typeof elem.getAttributeNode !== strundefined && elem.getAttributeNode("id");
                                return node && node.value === id;
                            };
                        },

                    "TAG": function(nodeName) {
                        if (nodeName === "*") {
                            return function() {
                                return true;
                            };
                        }
                        nodeName = nodeName.replace(rbackslash, "").toLowerCase();

                        return function(elem) {
                            return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
                        };
                    },

                    "CLASS": function(className) {
                        var pattern = classCache[className];
                        if (!pattern) {
                            pattern = classCache[className] = new RegExp("(^|" + whitespace + ")" + className + "(" + whitespace + "|$)");
                            cachedClasses.push(className);
                            // Avoid too large of a cache
                            if (cachedClasses.length > Expr.cacheLength) {
                                delete classCache[cachedClasses.shift()];
                            }
                        }
                        return function(elem) {
                            return pattern.test(elem.className || (typeof elem.getAttribute !== strundefined && elem.getAttribute("class")) || "");
                        };
                    },

                    "ATTR": function(name, operator, check) {
                        if (!operator) {
                            return function(elem) {
                                return Sizzle.attr(elem, name) != null;
                            };
                        }

                        return function(elem) {
                            var result = Sizzle.attr(elem, name),
                                value = result + "";

                            if (result == null) {
                                return operator === "!=";
                            }

                            switch (operator) {
                                case "=":
                                    return value === check;
                                case "!=":
                                    return value !== check;
                                case "^=":
                                    return check && value.indexOf(check) === 0;
                                case "*=":
                                    return check && value.indexOf(check) > -1;
                                case "$=":
                                    return check && value.substr(value.length - check.length) === check;
                                case "~=":
                                    return (" " + value + " ").indexOf(check) > -1;
                                case "|=":
                                    return value === check || value.substr(0, check.length + 1) === check + "-";
                            }
                        };
                    },

                    "CHILD": function(type, argument, first, last) {

                        if (type === "nth") {
                            var doneName = done++;

                            return function(elem) {
                                var parent, diff,
                                    count = 0,
                                    node = elem;

                                if (first === 1 && last === 0) {
                                    return true;
                                }

                                parent = elem.parentNode;

                                if (parent && (parent[expando] !== doneName || !elem.sizset)) {
                                    for (node = parent.firstChild; node; node = node.nextSibling) {
                                        if (node.nodeType === 1) {
                                            node.sizset = ++count;
                                            if (node === elem) {
                                                break;
                                            }
                                        }
                                    }

                                    parent[expando] = doneName;
                                }

                                diff = elem.sizset - last;

                                if (first === 0) {
                                    return diff === 0;

                                } else {
                                    return (diff % first === 0 && diff / first >= 0);
                                }
                            };
                        }

                        return function(elem) {
                            var node = elem;

                            switch (type) {
                                case "only":
                                case "first":
                                    while ((node = node.previousSibling)) {
                                        if (node.nodeType === 1) {
                                            return false;
                                        }
                                    }

                                    if (type === "first") {
                                        return true;
                                    }

                                    node = elem;

                                    /* falls through */
                                case "last":
                                    while ((node = node.nextSibling)) {
                                        if (node.nodeType === 1) {
                                            return false;
                                        }
                                    }

                                    return true;
                            }
                        };
                    },

                    "PSEUDO": function(pseudo, argument, context, xml) {
                        // pseudo-class names are case-insensitive
                        // http://www.w3.org/TR/selectors/#pseudo-classes
                        // Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
                        var fn = Expr.pseudos[pseudo] || Expr.pseudos[pseudo.toLowerCase()];

                        if (!fn) {
                            Sizzle.error("unsupported pseudo: " + pseudo);
                        }

                        // The user may set fn.sizzleFilter to indicate
                        // that arguments are needed to create the filter function
                        // just as Sizzle does
                        if (!fn.sizzleFilter) {
                            return fn;
                        }

                        return fn(argument, context, xml);
                    }
                },

                pseudos: {
                    "not": markFunction(function(selector, context, xml) {
                        // Trim the selector passed to compile
                        // to avoid treating leading and trailing
                        // spaces as combinators
                        var matcher = compile(selector.replace(rtrim, "$1"), context, xml);
                        return function(elem) {
                            return !matcher(elem);
                        };
                    }),

                    "enabled": function(elem) {
                        return elem.disabled === false;
                    },

                    "disabled": function(elem) {
                        return elem.disabled === true;
                    },

                    "checked": function(elem) {
                        // In CSS3, :checked should return both checked and selected elements
                        // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
                        var nodeName = elem.nodeName.toLowerCase();
                        return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
                    },

                    "selected": function(elem) {
                        // Accessing this property makes selected-by-default
                        // options in Safari work properly
                        if (elem.parentNode) {
                            elem.parentNode.selectedIndex;
                        }

                        return elem.selected === true;
                    },

                    "parent": function(elem) {
                        return !!elem.firstChild;
                    },

                    "empty": function(elem) {
                        return !elem.firstChild;
                    },

                    "contains": markFunction(function(text) {
                        return function(elem) {
                            return (elem.textContent || elem.innerText || getText(elem)).indexOf(text) > -1;
                        };
                    }),

                    "has": markFunction(function(selector) {
                        return function(elem) {
                            return Sizzle(selector, elem).length > 0;
                        };
                    }),

                    "header": function(elem) {
                        return rheader.test(elem.nodeName);
                    },

                    "text": function(elem) {
                        var type, attr;
                        // IE6 and 7 will map elem.type to 'text' for new HTML5 types (search, etc)
                        // use getAttribute instead to test this case
                        return elem.nodeName.toLowerCase() === "input" &&
                            (type = elem.type) === "text" &&
                            ((attr = elem.getAttribute("type")) == null || attr.toLowerCase() === type);
                    },

                    // Input types
                    "radio": createInputFunction("radio"),
                    "checkbox": createInputFunction("checkbox"),
                    "file": createInputFunction("file"),
                    "password": createInputFunction("password"),
                    "image": createInputFunction("image"),

                    "submit": createButtonFunction("submit"),
                    "reset": createButtonFunction("reset"),

                    "button": function(elem) {
                        var name = elem.nodeName.toLowerCase();
                        return name === "input" && elem.type === "button" || name === "button";
                    },

                    "input": function(elem) {
                        return rinputs.test(elem.nodeName);
                    },

                    "focus": function(elem) {
                        var doc = elem.ownerDocument;
                        return elem === doc.activeElement && (!doc.hasFocus || doc.hasFocus()) && !!(elem.type || elem.href);
                    },

                    "active": function(elem) {
                        return elem === elem.ownerDocument.activeElement;
                    }
                },

                setFilters: {
                    "first": function(elements, argument, not) {
                        return not ? elements.slice(1) : [elements[0]];
                    },

                    "last": function(elements, argument, not) {
                        var elem = elements.pop();
                        return not ? elements : [elem];
                    },

                    "even": function(elements, argument, not) {
                        var results = [],
                            i = not ? 1 : 0,
                            len = elements.length;
                        for (; i < len; i = i + 2) {
                            results.push(elements[i]);
                        }
                        return results;
                    },

                    "odd": function(elements, argument, not) {
                        var results = [],
                            i = not ? 0 : 1,
                            len = elements.length;
                        for (; i < len; i = i + 2) {
                            results.push(elements[i]);
                        }
                        return results;
                    },

                    "lt": function(elements, argument, not) {
                        return not ? elements.slice(+argument) : elements.slice(0, +argument);
                    },

                    "gt": function(elements, argument, not) {
                        return not ? elements.slice(0, +argument + 1) : elements.slice(+argument + 1);
                    },

                    "eq": function(elements, argument, not) {
                        var elem = elements.splice(+argument, 1);
                        return not ? elements : elem;
                    }
                }
            };

            // Deprecated
            Expr.setFilters["nth"] = Expr.setFilters["eq"];

            // Back-compat
            Expr.filters = Expr.pseudos;

            // IE6/7 return a modified href
            if (!assertHrefNotNormalized) {
                Expr.attrHandle = {
                    "href": function(elem) {
                        return elem.getAttribute("href", 2);
                    },
                    "type": function(elem) {
                        return elem.getAttribute("type");
                    }
                };
            }

            // Add getElementsByName if usable
            if (assertUsableName) {
                Expr.order.push("NAME");
                Expr.find["NAME"] = function(name, context) {
                    if (typeof context.getElementsByName !== strundefined) {
                        return context.getElementsByName(name);
                    }
                };
            }

            // Add getElementsByClassName if usable
            if (assertUsableClassName) {
                Expr.order.splice(1, 0, "CLASS");
                Expr.find["CLASS"] = function(className, context, xml) {
                    if (typeof context.getElementsByClassName !== strundefined && !xml) {
                        return context.getElementsByClassName(className);
                    }
                };
            }

            // If slice is not available, provide a backup
            try {
                slice.call(docElem.childNodes, 0)[0].nodeType;
            } catch (e) {
                slice = function(i) {
                    var elem, results = [];
                    for (;
                        (elem = this[i]); i++) {
                        results.push(elem);
                    }
                    return results;
                };
            }

            var isXML = Sizzle.isXML = function(elem) {
                // documentElement is verified for cases where it doesn't yet exist
                // (such as loading iframes in IE - #4833)
                var documentElement = elem && (elem.ownerDocument || elem).documentElement;
                return documentElement ? documentElement.nodeName !== "HTML" : false;
            };

            // Element contains another
            var contains = Sizzle.contains = docElem.compareDocumentPosition ?
                function(a, b) {
                    return !!(a.compareDocumentPosition(b) & 16);
                } :
                docElem.contains ?
                function(a, b) {
                    var adown = a.nodeType === 9 ? a.documentElement : a,
                        bup = b.parentNode;
                    return a === bup || !!(bup && bup.nodeType === 1 && adown.contains && adown.contains(bup));
                } :
                function(a, b) {
                    while ((b = b.parentNode)) {
                        if (b === a) {
                            return true;
                        }
                    }
                    return false;
                };

            /**
             * Utility function for retrieving the text value of an array of DOM nodes
             * @param {Array|Element} elem
             */
            var getText = Sizzle.getText = function(elem) {
                var node,
                    ret = "",
                    i = 0,
                    nodeType = elem.nodeType;

                if (nodeType) {
                    if (nodeType === 1 || nodeType === 9 || nodeType === 11) {
                        // Use textContent for elements
                        // innerText usage removed for consistency of new lines (see #11153)
                        if (typeof elem.textContent === "string") {
                            return elem.textContent;
                        } else {
                            // Traverse its children
                            for (elem = elem.firstChild; elem; elem = elem.nextSibling) {
                                ret += getText(elem);
                            }
                        }
                    } else if (nodeType === 3 || nodeType === 4) {
                        return elem.nodeValue;
                    }
                    // Do not include comment or processing instruction nodes
                } else {

                    // If no nodeType, this is expected to be an array
                    for (;
                        (node = elem[i]); i++) {
                        // Do not traverse comment nodes
                        ret += getText(node);
                    }
                }
                return ret;
            };

            Sizzle.attr = function(elem, name) {
                var attr,
                    xml = isXML(elem);

                if (!xml) {
                    name = name.toLowerCase();
                }
                if (Expr.attrHandle[name]) {
                    return Expr.attrHandle[name](elem);
                }
                if (assertAttributes || xml) {
                    return elem.getAttribute(name);
                }
                attr = elem.getAttributeNode(name);
                return attr ?
                    typeof elem[name] === "boolean" ?
                    elem[name] ? name : null :
                    attr.specified ? attr.value : null :
                    null;
            };

            Sizzle.error = function(msg) {
                throw new Error("Syntax error, unrecognized expression: " + msg);
            };

            // Check if the JavaScript engine is using some sort of
            // optimization where it does not always call our comparision
            // function. If that is the case, discard the hasDuplicate value.
            //   Thus far that includes Google Chrome.
            [0, 0].sort(function() {
                return (baseHasDuplicate = 0);
            });


            if (docElem.compareDocumentPosition) {
                sortOrder = function(a, b) {
                    if (a === b) {
                        hasDuplicate = true;
                        return 0;
                    }

                    return (!a.compareDocumentPosition || !b.compareDocumentPosition ?
                        a.compareDocumentPosition :
                        a.compareDocumentPosition(b) & 4
                    ) ? -1 : 1;
                };

            } else {
                sortOrder = function(a, b) {
                    // The nodes are identical, we can exit early
                    if (a === b) {
                        hasDuplicate = true;
                        return 0;

                        // Fallback to using sourceIndex (in IE) if it's available on both nodes
                    } else if (a.sourceIndex && b.sourceIndex) {
                        return a.sourceIndex - b.sourceIndex;
                    }

                    var al, bl,
                        ap = [],
                        bp = [],
                        aup = a.parentNode,
                        bup = b.parentNode,
                        cur = aup;

                    // If the nodes are siblings (or identical) we can do a quick check
                    if (aup === bup) {
                        return siblingCheck(a, b);

                        // If no parents were found then the nodes are disconnected
                    } else if (!aup) {
                        return -1;

                    } else if (!bup) {
                        return 1;
                    }

                    // Otherwise they're somewhere else in the tree so we need
                    // to build up a full list of the parentNodes for comparison
                    while (cur) {
                        ap.unshift(cur);
                        cur = cur.parentNode;
                    }

                    cur = bup;

                    while (cur) {
                        bp.unshift(cur);
                        cur = cur.parentNode;
                    }

                    al = ap.length;
                    bl = bp.length;

                    // Start walking down the tree looking for a discrepancy
                    for (var i = 0; i < al && i < bl; i++) {
                        if (ap[i] !== bp[i]) {
                            return siblingCheck(ap[i], bp[i]);
                        }
                    }

                    // We ended someplace up the tree so do a sibling check
                    return i === al ?
                        siblingCheck(a, bp[i], -1) :
                        siblingCheck(ap[i], b, 1);
                };

                siblingCheck = function(a, b, ret) {
                    if (a === b) {
                        return ret;
                    }

                    var cur = a.nextSibling;

                    while (cur) {
                        if (cur === b) {
                            return -1;
                        }

                        cur = cur.nextSibling;
                    }

                    return 1;
                };
            }

            // Document sorting and removing duplicates
            Sizzle.uniqueSort = function(results) {
                var elem,
                    i = 1;

                if (sortOrder) {
                    hasDuplicate = baseHasDuplicate;
                    results.sort(sortOrder);

                    if (hasDuplicate) {
                        for (;
                            (elem = results[i]); i++) {
                            if (elem === results[i - 1]) {
                                results.splice(i--, 1);
                            }
                        }
                    }
                }

                return results;
            };

            function multipleContexts(selector, contexts, results, seed) {
                var i = 0,
                    len = contexts.length;
                for (; i < len; i++) {
                    Sizzle(selector, contexts[i], results, seed);
                }
            }

            function handlePOSGroup(selector, posfilter, argument, contexts, seed, not) {
                var results,
                    fn = Expr.setFilters[posfilter.toLowerCase()];

                if (!fn) {
                    Sizzle.error(posfilter);
                }

                if (selector || !(results = seed)) {
                    multipleContexts(selector || "*", contexts, (results = []), seed);
                }

                return results.length > 0 ? fn(results, argument, not) : [];
            }

            function handlePOS(selector, context, results, seed, groups) {
                var match, not, anchor, ret, elements, currentContexts, part, lastIndex,
                    i = 0,
                    len = groups.length,
                    rpos = matchExpr["POS"],
                    // This is generated here in case matchExpr["POS"] is extended
                    rposgroups = new RegExp("^" + rpos.source + "(?!" + whitespace + ")", "i"),
                    // This is for making sure non-participating
                    // matching groups are represented cross-browser (IE6-8)
                    setUndefined = function() {
                        var i = 1,
                            len = arguments.length - 2;
                        for (; i < len; i++) {
                            if (arguments[i] === undefined) {
                                match[i] = undefined;
                            }
                        }
                    };

                for (; i < len; i++) {
                    // Reset regex index to 0
                    rpos.exec("");
                    selector = groups[i];
                    ret = [];
                    anchor = 0;
                    elements = seed;
                    while ((match = rpos.exec(selector))) {
                        lastIndex = rpos.lastIndex = match.index + match[0].length;
                        if (lastIndex > anchor) {
                            part = selector.slice(anchor, match.index);
                            anchor = lastIndex;
                            currentContexts = [context];

                            if (rcombinators.test(part)) {
                                if (elements) {
                                    currentContexts = elements;
                                }
                                elements = seed;
                            }

                            if ((not = rendsWithNot.test(part))) {
                                part = part.slice(0, -5).replace(rcombinators, "$&*");
                            }

                            if (match.length > 1) {
                                match[0].replace(rposgroups, setUndefined);
                            }
                            elements = handlePOSGroup(part, match[1], match[2], currentContexts, elements, not);
                        }
                    }

                    if (elements) {
                        ret = ret.concat(elements);

                        if ((part = selector.slice(anchor)) && part !== ")") {
                            multipleContexts(part, ret, results, seed);
                        } else {
                            push.apply(results, ret);
                        }
                    } else {
                        Sizzle(selector, context, results, seed);
                    }
                }

                // Do not sort if this is a single filter
                return len === 1 ? results : Sizzle.uniqueSort(results);
            }

            function tokenize(selector, context, xml) {
                var tokens, soFar, type,
                    groups = [],
                    i = 0,

                    // Catch obvious selector issues: terminal ")"; nonempty fallback match
                    // rselector never fails to match *something*
                    match = rselector.exec(selector),
                    matched = !match.pop() && !match.pop(),
                    selectorGroups = matched && selector.match(rgroups) || [""],

                    preFilters = Expr.preFilter,
                    filters = Expr.filter,
                    checkContext = !xml && context !== document;

                for (;
                    (soFar = selectorGroups[i]) != null && matched; i++) {
                    groups.push(tokens = []);

                    // Need to make sure we're within a narrower context if necessary
                    // Adding a descendant combinator will generate what is needed
                    if (checkContext) {
                        soFar = " " + soFar;
                    }

                    while (soFar) {
                        matched = false;

                        // Combinators
                        if ((match = rcombinators.exec(soFar))) {
                            soFar = soFar.slice(match[0].length);

                            // Cast descendant combinators to space
                            matched = tokens.push({
                                part: match.pop().replace(rtrim, " "),
                                captures: match
                            });
                        }

                        // Filters
                        for (type in filters) {
                            if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] ||
                                    (match = preFilters[type](match, context, xml)))) {

                                soFar = soFar.slice(match.shift().length);
                                matched = tokens.push({
                                    part: type,
                                    captures: match
                                });
                            }
                        }

                        if (!matched) {
                            break;
                        }
                    }
                }

                if (!matched) {
                    Sizzle.error(selector);
                }

                return groups;
            }

            function addCombinator(matcher, combinator, context) {
                var dir = combinator.dir,
                    doneName = done++;

                if (!matcher) {
                    // If there is no matcher to check, check against the context
                    matcher = function(elem) {
                        return elem === context;
                    };
                }
                return combinator.first ?
                    function(elem, context) {
                        while ((elem = elem[dir])) {
                            if (elem.nodeType === 1) {
                                return matcher(elem, context) && elem;
                            }
                        }
                    } :
                    function(elem, context) {
                        var cache,
                            dirkey = doneName + "." + dirruns,
                            cachedkey = dirkey + "." + cachedruns;
                        while ((elem = elem[dir])) {
                            if (elem.nodeType === 1) {
                                if ((cache = elem[expando]) === cachedkey) {
                                    return false;
                                } else if (typeof cache === "string" && cache.indexOf(dirkey) === 0) {
                                    if (elem.sizset) {
                                        return elem;
                                    }
                                } else {
                                    elem[expando] = cachedkey;
                                    if (matcher(elem, context)) {
                                        elem.sizset = true;
                                        return elem;
                                    }
                                    elem.sizset = false;
                                }
                            }
                        }
                    };
            }

            function addMatcher(higher, deeper) {
                return higher ?
                    function(elem, context) {
                        var result = deeper(elem, context);
                        return result && higher(result === true ? elem : result, context);
                    } :
                    deeper;
            }

            // ["TAG", ">", "ID", " ", "CLASS"]
            function matcherFromTokens(tokens, context, xml) {
                var token, matcher,
                    i = 0;

                for (;
                    (token = tokens[i]); i++) {
                    if (Expr.relative[token.part]) {
                        matcher = addCombinator(matcher, Expr.relative[token.part], context);
                    } else {
                        token.captures.push(context, xml);
                        matcher = addMatcher(matcher, Expr.filter[token.part].apply(null, token.captures));
                    }
                }

                return matcher;
            }

            function matcherFromGroupMatchers(matchers) {
                return function(elem, context) {
                    var matcher,
                        j = 0;
                    for (;
                        (matcher = matchers[j]); j++) {
                        if (matcher(elem, context)) {
                            return true;
                        }
                    }
                    return false;
                };
            }

            var compile = Sizzle.compile = function(selector, context, xml) {
                var tokens, group, i,
                    cached = compilerCache[selector];

                // Return a cached group function if already generated (context dependent)
                if (cached && cached.context === context) {
                    cached.dirruns++;
                    return cached;
                }

                // Generate a function of recursive functions that can be used to check each element
                group = tokenize(selector, context, xml);
                for (i = 0;
                    (tokens = group[i]); i++) {
                    group[i] = matcherFromTokens(tokens, context, xml);
                }

                // Cache the compiled function
                cached = compilerCache[selector] = matcherFromGroupMatchers(group);
                cached.context = context;
                cached.runs = cached.dirruns = 0;
                cachedSelectors.push(selector);
                // Ensure only the most recent are cached
                if (cachedSelectors.length > Expr.cacheLength) {
                    delete compilerCache[cachedSelectors.shift()];
                }
                return cached;
            };

            Sizzle.matches = function(expr, elements) {
                return Sizzle(expr, null, null, elements);
            };

            Sizzle.matchesSelector = function(elem, expr) {
                return Sizzle(expr, null, null, [elem]).length > 0;
            };

            var select = function(selector, context, results, seed, xml) {
                // Remove excessive whitespace
                selector = selector.replace(rtrim, "$1");
                var elements, matcher, i, len, elem, token,
                    type, findContext, notTokens,
                    match = selector.match(rgroups),
                    tokens = selector.match(rtokens),
                    contextNodeType = context.nodeType;

                // POS handling
                if (matchExpr["POS"].test(selector)) {
                    return handlePOS(selector, context, results, seed, match);
                }

                if (seed) {
                    elements = slice.call(seed, 0);

                    // To maintain document order, only narrow the
                    // set if there is one group
                } else if (match && match.length === 1) {

                    // Take a shortcut and set the context if the root selector is an ID
                    if (tokens.length > 1 && contextNodeType === 9 && !xml &&
                        (match = matchExpr["ID"].exec(tokens[0]))) {

                        context = Expr.find["ID"](match[1], context, xml)[0];
                        if (!context) {
                            return results;
                        }

                        selector = selector.slice(tokens.shift().length);
                    }

                    findContext = ((match = rsibling.exec(tokens[0])) && !match.index && context.parentNode) || context;

                    // Get the last token, excluding :not
                    notTokens = tokens.pop();
                    token = notTokens.split(":not")[0];

                    for (i = 0, len = Expr.order.length; i < len; i++) {
                        type = Expr.order[i];

                        if ((match = matchExpr[type].exec(token))) {
                            elements = Expr.find[type]((match[1] || "").replace(rbackslash, ""), findContext, xml);

                            if (elements == null) {
                                continue;
                            }

                            if (token === notTokens) {
                                selector = selector.slice(0, selector.length - notTokens.length) +
                                    token.replace(matchExpr[type], "");

                                if (!selector) {
                                    push.apply(results, slice.call(elements, 0));
                                }
                            }
                            break;
                        }
                    }
                }

                // Only loop over the given elements once
                // If selector is empty, we're already done
                if (selector) {
                    matcher = compile(selector, context, xml);
                    dirruns = matcher.dirruns;

                    if (elements == null) {
                        elements = Expr.find["TAG"]("*", (rsibling.test(selector) && context.parentNode) || context);
                    }
                    for (i = 0;
                        (elem = elements[i]); i++) {
                        cachedruns = matcher.runs++;
                        if (matcher(elem, context)) {
                            results.push(elem);
                        }
                    }
                }

                return results;
            };

            if (document.querySelectorAll) {
                (function() {
                    var disconnectedMatch,
                        oldSelect = select,
                        rescape = /'|\\/g,
                        rattributeQuotes = /\=[\x20\t\r\n\f]*([^'"\]]*)[\x20\t\r\n\f]*\]/g,
                        rbuggyQSA = [],
                        // matchesSelector(:active) reports false when true (IE9/Opera 11.5)
                        // A support test would require too much code (would include document ready)
                        // just skip matchesSelector for :active
                        rbuggyMatches = [":active"],
                        matches = docElem.matchesSelector ||
                        docElem.mozMatchesSelector ||
                        docElem.webkitMatchesSelector ||
                        docElem.oMatchesSelector ||
                        docElem.msMatchesSelector;

                    // Build QSA regex
                    // Regex strategy adopted from Diego Perini
                    assert(function(div) {
                        div.innerHTML = "<select><option selected></option></select>";

                        // IE8 - Some boolean attributes are not treated correctly
                        if (!div.querySelectorAll("[selected]").length) {
                            rbuggyQSA.push("\\[" + whitespace + "*(?:checked|disabled|ismap|multiple|readonly|selected|value)");
                        }

                        // Webkit/Opera - :checked should return selected option elements
                        // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
                        // IE8 throws error here (do not put tests after this one)
                        if (!div.querySelectorAll(":checked").length) {
                            rbuggyQSA.push(":checked");
                        }
                    });

                    assert(function(div) {

                        // Opera 10-12/IE9 - ^= $= *= and empty values
                        // Should not select anything
                        div.innerHTML = "<p test=''></p>";
                        if (div.querySelectorAll("[test^='']").length) {
                            rbuggyQSA.push("[*^$]=" + whitespace + "*(?:\"\"|'')");
                        }

                        // FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
                        // IE8 throws error here (do not put tests after this one)
                        div.innerHTML = "<input type='hidden'>";
                        if (!div.querySelectorAll(":enabled").length) {
                            rbuggyQSA.push(":enabled", ":disabled");
                        }
                    });

                    rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join("|"));

                    select = function(selector, context, results, seed, xml) {
                        // Only use querySelectorAll when not filtering,
                        // when this is not xml,
                        // and when no QSA bugs apply
                        if (!seed && !xml && (!rbuggyQSA || !rbuggyQSA.test(selector))) {
                            if (context.nodeType === 9) {
                                try {
                                    push.apply(results, slice.call(context.querySelectorAll(selector), 0));
                                    return results;
                                } catch (qsaError) {}
                                // qSA works strangely on Element-rooted queries
                                // We can work around this by specifying an extra ID on the root
                                // and working up from there (Thanks to Andrew Dupont for the technique)
                                // IE 8 doesn't work on object elements
                            } else if (context.nodeType === 1 && context.nodeName.toLowerCase() !== "object") {
                                var old = context.getAttribute("id"),
                                    nid = old || expando,
                                    newContext = rsibling.test(selector) && context.parentNode || context;

                                if (old) {
                                    nid = nid.replace(rescape, "\\$&");
                                } else {
                                    context.setAttribute("id", nid);
                                }

                                try {
                                    push.apply(results, slice.call(newContext.querySelectorAll(
                                        selector.replace(rgroups, "[id='" + nid + "'] $&")
                                    ), 0));
                                    return results;
                                } catch (qsaError) {} finally {
                                    if (!old) {
                                        context.removeAttribute("id");
                                    }
                                }
                            }
                        }

                        return oldSelect(selector, context, results, seed, xml);
                    };

                    if (matches) {
                        assert(function(div) {
                            // Check to see if it's possible to do matchesSelector
                            // on a disconnected node (IE 9)
                            disconnectedMatch = matches.call(div, "div");

                            // This should fail with an exception
                            // Gecko does not error, returns false instead
                            try {
                                matches.call(div, "[test!='']:sizzle");
                                rbuggyMatches.push(Expr.match.PSEUDO);
                            } catch (e) {}
                        });

                        // rbuggyMatches always contains :active, so no need for a length check
                        rbuggyMatches = /* rbuggyMatches.length && */ new RegExp(rbuggyMatches.join("|"));

                        Sizzle.matchesSelector = function(elem, expr) {
                            // Make sure that attribute selectors are quoted
                            expr = expr.replace(rattributeQuotes, "='$1']");

                            // rbuggyMatches always contains :active, so no need for an existence check
                            if (!isXML(elem) && !rbuggyMatches.test(expr) && (!rbuggyQSA || !rbuggyQSA.test(expr))) {
                                try {
                                    var ret = matches.call(elem, expr);

                                    // IE 9's matchesSelector returns false on disconnected nodes
                                    if (ret || disconnectedMatch ||
                                        // As well, disconnected nodes are said to be in a document
                                        // fragment in IE 9
                                        elem.document && elem.document.nodeType !== 11) {
                                        return ret;
                                    }
                                } catch (e) {}
                            }

                            return Sizzle(expr, null, null, [elem]).length > 0;
                        };
                    }
                })();
            }

            // EXPOSE

            if (typeof module === 'object' && module.exports) {
                module.exports = Sizzle;
            } else {
                window.Sizzle = Sizzle;
            }
            // EXPOSE

        })(window);

    }, {}],
    232: [function(require, module, exports) {
        /** 
         * @module ac-dom-emitter
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        module.exports = {
            DOMEmitter: require('./ac-dom-emitter/DOMEmitter')
        };

    }, {
        "./ac-dom-emitter/DOMEmitter": 233
    }],
    233: [function(require, module, exports) {
        /** 
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';
        var proto;

        var EventEmitter = require('ac-event-emitter').EventEmitter,
            ac_dom_events = require('ac-dom-events'),
            ac_dom_traversal = require('ac-dom-traversal');

        /**
         * @name .DOMEmitter
         * @class DOMEmitter
         * <pre>DOMEmitter = require('/DOMEmitter');</pre>
         */

        var internalEventPrefix = 'dom-emitter';

        function DOMEmitter(el) {
            if (el === null) {
                return;
            }
            this.el = el;
            this._bindings = {};
            this._delegateFuncs = {};
            this._eventEmitter = new EventEmitter();
        }

        proto = DOMEmitter.prototype;

        proto._parseEventNames = function(evt) {
            // handle any undefined/nulls and send em back
            if (!evt) {
                return [evt];
            }
            // remove empty string events
            return evt.split(' ');
        };

        proto._onListenerEvent = function(evtName, e) {
            this.trigger(evtName, e, false);
        };

        proto._setListener = function(evt) {
            this._bindings[evt] = this._onListenerEvent.bind(this, evt);
            ac_dom_events.addEventListener(this.el, evt, this._bindings[evt]);
        };

        proto._removeListener = function(evt) {
            ac_dom_events.removeEventListener(this.el, evt, this._bindings[evt]);
            this._bindings[evt] = null;
        };

        proto._triggerInternalEvent = function(evt, data) {
            this.trigger(internalEventPrefix + ':' + evt, data);
        };

        proto._normalizeArgumentsAndCall = function(argsArr, func) {
            /**
             * We use this method to normalize these options:
             *  // Sans-delegation
             *  domEmitter.on( 'click touchend', myFunc ); // 2-arg; string, function
             *  domEmitter.on( 'click touchend', myFunc, ctx ); // 3-arg; string, function, object
             *
             *  // With Delegation
             *  domEmitter.on( 'click touchend', '.delegate query', myFunc ); // 3-arg; string, string, function
             *  domEmitter.on( 'click touchend', '.delegate query', myFunc, ctx ); // 4-arg; string, string, function, object
             *
             *  // Object syntax
             *  domEmitter.on({
             *      'click touchend' : myFunc, // Sans-delegation
             *      'click touchend: .delegate query' : myFunc // With delegation
             *  }); // 1-arg; object
             *
             *  domEmitter.on({
             *      'click' : myFunc,
             *      'click: .delegate query' : myFunc // With delegation
             *  }, ctx ); // 2-arg; object, object
             *
             * domEmitter.off(); // no args
             *
             **/

            var binding = {};

            // handle no-arg situation
            if (argsArr.length === 0) {
                func.call(this, binding);
                return;
            }

            // handle non-object based syntax first
            if (typeof argsArr[0] === 'string' || argsArr[0] === null) {
                argsArr = this._cleanStringData(argsArr);
                binding.events = argsArr[0];

                // handle delegate query
                if (typeof argsArr[1] === 'string') {
                    binding.delegateQuery = argsArr[1];
                    binding.callback = argsArr[2];
                    binding.context = argsArr[3];
                } else {
                    // handle non-delegate query
                    binding.callback = argsArr[1];
                    binding.context = argsArr[2];
                }

                func.call(this, binding);
                return;
            }

            // assume type is object here
            var i,
                splits,
                splitChar = ':',
                obj = argsArr[0];
            for (i in obj) {
                if (obj.hasOwnProperty(i)) {
                    binding = {};
                    // if a colon exists, which will split delegate queries and event names
                    splits = this._cleanStringData(i.split(splitChar));

                    // save both. if splits[ 1 ] DNE then it will simply be undefined anyway
                    binding.events = splits[0];
                    binding.delegateQuery = splits[1];

                    // set callback and context
                    binding.callback = obj[i];
                    binding.context = argsArr[1];

                    func.call(this, binding);
                }
            }
        };

        proto._registerDelegateFunc = function(evt, delegateQuery, callback, unboundCallback, context) {
            // bind a new delegateFunc
            var delegateFunc = this._delegateFunc.bind(this, evt, delegateQuery, callback, context);
            // create an array for delegate funcs with this key if DNE
            this._delegateFuncs[delegateQuery] = this._delegateFuncs[delegateQuery] || {};
            this._delegateFuncs[delegateQuery][evt] = this._delegateFuncs[delegateQuery][evt] || [];
            this._delegateFuncs[delegateQuery][evt].push({
                func: unboundCallback,
                context: context,
                delegateFunc: delegateFunc
            });

            return delegateFunc;
        };

        // remove whitespace before/after strings, as well as any empty strings in arrays
        proto._cleanStringData = function(arr) {
            // force it into an array if just a string is passed
            var isString = false;
            if (typeof arr === 'string') {
                arr = [arr];
                isString = true;
            }

            var result = [],
                i,
                val,
                valLen,
                spaceIdx,
                len = arr.length;

            for (i = 0; i < len; i++) {
                val = arr[i];

                // if it's a string, check to see if we want it
                if (typeof val === 'string') {
                    // if it's an empty string or space, we don't want it. continue
                    if (val === '' || val === ' ') {
                        continue;
                    }

                    // we'll remove whitespace in the beginning recursively
                    valLen = val.length;
                    while (val[0] === ' ') {
                        val = val.slice(1, valLen);
                        valLen--;
                    }

                    // recursively remove whitespace in the end of the string
                    while (val[valLen - 1] === ' ') {
                        val = val.slice(0, valLen - 1);
                        valLen--;
                    }
                }

                result.push(val);
            }

            if (isString) {
                return result[0];
            }

            return result;
        };

        proto._unregisterDelegateFunc = function(evt, delegateQuery, unboundCallback, context) {
            // if no delegate functions exist, return
            if (!this._delegateFuncs[delegateQuery] || !this._delegateFuncs[delegateQuery][evt]) {
                return;
            }

            // find the index where the binding exists at
            var matchIdx = this._getDelegateFuncBindingIdx(evt, delegateQuery, unboundCallback, context),
                delegateFunc;

            // if an index was found, remove it from the delegateFunc array
            if (matchIdx > -1) {
                // save the delegate function so it can be unbound via EventEmitter later
                delegateFunc = this._delegateFuncs[delegateQuery][evt][matchIdx].delegateFunc;
                // remove this registry in the array
                this._delegateFuncs[delegateQuery][evt].splice(matchIdx, 1);
                // if there aren't any left in the array, nullify this._delegateFuncs[ delegateQuery ][ evt ]
                if (this._delegateFuncs[delegateQuery][evt].length === 0) {
                    this._delegateFuncs[delegateQuery][evt] = null;
                }
            }

            return delegateFunc;

        };

        proto._unregisterDelegateFuncs = function(evt, delegateQuery) {
            // only continue if there are events that need to be removed
            if (!this._delegateFuncs[delegateQuery]) {
                return;
            }

            if (evt !== null && !this._delegateFuncs[delegateQuery][evt]) {
                return;
            }

            // if the event is null, we just want to iterate over all and unbind
            if (evt === null) {
                var i;
                for (i in this._delegateFuncs[delegateQuery]) {
                    if (this._delegateFuncs[delegateQuery].hasOwnProperty(i)) {
                        this._unbindDelegateFunc(i, delegateQuery);
                    }
                }
                return;
            }

            // unbind callbacks just for that event
            this._unbindDelegateFunc(evt, delegateQuery);
        };

        proto._unbindDelegateFunc = function(evt, delegateQuery) {
            var binding,
                preRemoveLen,
                i = 0;

            while (this._delegateFuncs[delegateQuery][evt] && this._delegateFuncs[delegateQuery][evt][i]) {
                binding = this._delegateFuncs[delegateQuery][evt][i];

                // save the length of the events for the delegateQuery stack
                preRemoveLen = this._delegateFuncs[delegateQuery][evt][i].length;
                this._off({
                    events: evt,
                    delegateQuery: delegateQuery,
                    callback: binding.func,
                    context: binding.context
                });

                // test if an unbind did occur, and if not, we'll add one to 'i' to continue looking for new events
                // if it has changed, we want to keep the current idx because the array has already shifted
                if (this._delegateFuncs[delegateQuery][evt] && preRemoveLen === this._delegateFuncs[delegateQuery][evt].length) {
                    i++;
                }
            }

            binding = preRemoveLen = null;
        };

        proto._unregisterDelegateFuncsByEvent = function(evt) {
            var i;
            // for each delegate query
            for (i in this._delegateFuncs) {
                if (this._delegateFuncs.hasOwnProperty(i)) {
                    this._unregisterDelegateFuncs(evt, i);
                }
            }
        };

        proto._delegateFunc = function(evt, delegateQuery, callback, context, e) {
            if (ac_dom_traversal.matchesSelector(ac_dom_events.target(e), delegateQuery)) {

                var args = Array.prototype.slice.call(arguments, 0),
                    // remove the four arguments we added ourselves
                    unboundArgs = args.slice(4, args.length);

                context = context || window;
                // if it was a CustomEvent, just get the event data and ignore the rest from the DOM
                if (typeof e.detail === 'object') {
                    unboundArgs[0] = e.detail;
                }
                // call the callback with the natural arguments, minus the three we added ourselves
                callback.call(context, unboundArgs);
            }
        };

        proto.on = function() {
            this._normalizeArgumentsAndCall(Array.prototype.slice.call(arguments, 0), this._on);
            return this;
        };

        proto.once = function() {
            this._normalizeArgumentsAndCall(Array.prototype.slice.call(arguments, 0), this._once);
            return this;
        };

        proto.off = function() {
            this._normalizeArgumentsAndCall(Array.prototype.slice.call(arguments, 0), this._off);
            return this;
        };

        proto._on = function(binding) {
            var evts = binding.events,
                callback = binding.callback,
                delegateQuery = binding.delegateQuery,
                context = binding.context,
                unboundCallback = binding.unboundCallback || callback;

            evts = this._parseEventNames(evts);
            evts.forEach(function(callback, unboundCallback, context, delegateQuery, evt) {

                if (!this.has(evt)) {
                    this._setListener(evt);
                }

                // if this should be delegated, register a delegationFunc for it
                if (typeof delegateQuery === 'string') {
                    callback = this._registerDelegateFunc(evt, delegateQuery, callback, unboundCallback, context);
                }

                this._triggerInternalEvent('willon', {
                    evt: evt,
                    callback: callback,
                    context: context,
                    delegateQuery: delegateQuery
                });

                this._eventEmitter.on(evt, callback, context);

                this._triggerInternalEvent('didon', {
                    evt: evt,
                    callback: callback,
                    context: context,
                    delegateQuery: delegateQuery
                });

            }.bind(this, callback, unboundCallback, context, delegateQuery));

            evts = callback = unboundCallback = delegateQuery = context = null;
        };

        proto._off = function(binding) {
            var evts = binding.events,
                callback = binding.callback,
                delegateQuery = binding.delegateQuery,
                context = binding.context,
                unboundCallback = binding.unboundCallback || callback;

            // Handle unbinding all events ( this.off(); )
            if (typeof evts === 'undefined') {
                this._eventEmitter.off();

                // for each event, unbind it
                var i;
                for (i in this._bindings) {
                    if (this._bindings.hasOwnProperty(i)) {
                        this._removeListener(i);
                    }
                }

                // for each event in the _delegateFuncs, remove them
                for (i in this._delegateFuncs) {
                    if (this._delegateFuncs.hasOwnProperty(i)) {
                        this._delegateFuncs[i] = null;
                    }
                }
                return;
            }

            evts = this._parseEventNames(evts);
            evts.forEach(function(callback, unboundCallback, context, delegateQuery, evt) {

                // if this should be delegated, register a delegationFunc for it
                if (typeof delegateQuery === 'string' && typeof unboundCallback === 'function') {
                    callback = this._unregisterDelegateFunc(evt, delegateQuery, unboundCallback, context);
                    // if a callback isn't found here, it means that the query was incorrect.
                    // this could cause some issues if we let it continue, so we'll return false here
                    if (!callback) {
                        return;
                    }
                }

                // if a delegate string was added, but no callback was given, it's essentially .off() just for that query
                if (typeof delegateQuery === 'string' && typeof callback === 'undefined') {
                    // we'll iterate over each one and unbind them seperately
                    this._unregisterDelegateFuncs(evt, delegateQuery);
                    return;
                }

                // if an event was called, with no other params, we want to make sure we remove related delegateBindings from memory too
                if (typeof evt === 'string' && typeof callback === 'undefined') {
                    this._unregisterDelegateFuncsByEvent(evt);
                    // don't continue here if we had a delegate query, since it will run through this again with correct params
                    if (typeof delegateQuery === 'string') {
                        return;
                    }
                }

                this._triggerInternalEvent('willoff', {
                    evt: evt,
                    callback: callback,
                    context: context,
                    delegateQuery: delegateQuery
                });

                this._eventEmitter.off(evt, callback, context);

                this._triggerInternalEvent('didoff', {
                    evt: evt,
                    callback: callback,
                    context: context,
                    delegateQuery: delegateQuery
                });

                // for specific events
                if (!this.has(evt)) {
                    this._removeListener(evt);
                }

            }.bind(this, callback, unboundCallback, context, delegateQuery));

            evts = callback = unboundCallback = delegateQuery = context = null;
        };

        proto._once = function(binding) {
            var evts = binding.events,
                callback = binding.callback,
                delegateQuery = binding.delegateQuery,
                context = binding.context;

            evts = this._parseEventNames(evts);
            evts.forEach(function(callback, context, delegateQuery, evt) {

                // .once() on a delegate is tricky, because it needs to stay bound until it triggers the callback on the delegate, not this.el
                if (typeof delegateQuery === 'string') {
                    // to handle this, it's easiest to polyfill a delegate's .once() on our own
                    return this._handleDelegateOnce(evt, callback, context, delegateQuery);
                }

                if (!this.has(evt)) {
                    this._setListener(evt);
                }

                this._triggerInternalEvent('willonce', {
                    evt: evt,
                    callback: callback,
                    context: context,
                    delegateQuery: delegateQuery
                });

                // we can trick EventEmitter with .call here, where when it calls .on() internally, it call this.on() instead
                this._eventEmitter.once.call(this, evt, callback, context);

                this._triggerInternalEvent('didonce', {
                    evt: evt,
                    callback: callback,
                    context: context,
                    delegateQuery: delegateQuery
                });

            }.bind(this, callback, context, delegateQuery));

            evts = callback = delegateQuery = context = null;
        };

        proto._handleDelegateOnce = function(evt, callback, context, delegateQuery) {
            this._triggerInternalEvent('willonce', {
                evt: evt,
                callback: callback,
                context: context,
                delegateQuery: delegateQuery
            });

            // bind the event with a naturalCallback so we can match correctly
            this._on({
                events: evt,
                context: context,
                delegateQuery: delegateQuery,
                callback: this._getDelegateOnceCallback.bind(this, evt, callback, context, delegateQuery),
                unboundCallback: callback
            });

            this._triggerInternalEvent('didonce', {
                evt: evt,
                callback: callback,
                context: context,
                delegateQuery: delegateQuery
            });

            return this;
        };

        proto._getDelegateOnceCallback = function(evt, callback, context, delegateQuery) {
            // there could be any number of arguments, so we'll get them all
            var args = Array.prototype.slice.call(arguments, 0),
                // strip the args we added ourselves
                passedArgs = args.slice(4, args.length);
            // if context, call the callback with the context given and the args
            callback.apply(context, passedArgs);
            // unbind the event after it was called with this.off();
            this._off({
                events: evt,
                delegateQuery: delegateQuery,
                callback: callback,
                context: context
            });
        };

        proto._getDelegateFuncBindingIdx = function(evt, delegateQuery, unboundCallback, context, ignoreFuncMatch) {
            var idx = -1;

            if (this._delegateFuncs[delegateQuery] && this._delegateFuncs[delegateQuery][evt]) {
                var i,
                    bindingObj,
                    len = this._delegateFuncs[delegateQuery][evt].length;
                for (i = 0; i < len; i++) {
                    bindingObj = this._delegateFuncs[delegateQuery][evt][i];

                    // sometimes we want to match on whether or not the callback is defined, specifically for .has()
                    if (ignoreFuncMatch && typeof unboundCallback === 'undefined') {
                        unboundCallback = bindingObj.func;
                    }

                    if (bindingObj.func === unboundCallback && bindingObj.context === context) {
                        idx = i;
                        break;
                    }
                }
            }

            return idx;
        };

        proto._triggerDelegateEvents = function(evt, delegateQuery, data) {
            var targets = ac_dom_traversal.querySelectorAll(delegateQuery, this.el);

            var i,
                target,
                len = targets.length;
            for (i = 0; i < len; i++) {
                target = targets[i];
                // Expects polyfill for CustomEvent constructor
                if (document.createEvent) {
                    target.dispatchEvent(new CustomEvent(evt, {
                        bubbles: true,
                        cancelable: false,
                        detail: data
                    }));
                } else {
                    var eventObject = document.createEventObject();
                    eventObject.detail = data;
                    target.fireEvent('on' + evt, eventObject);
                }
                return target;
            }
        };

        proto.has = function(evt, callbackOrDelegateQuery, callbackOrContext, context) {
            // normalize input a bit here
            var delegateQuery,
                callback;

            if (typeof callbackOrDelegateQuery === 'string') {
                delegateQuery = callbackOrDelegateQuery;
                callback = callbackOrContext;
            } else {
                callback = callbackOrDelegateQuery;
                context = callbackOrContext;
            }

            // if a delegateQuery exists, we check inside of this._delegateFuncs for binding info
            if (delegateQuery) {
                var matchIdx = this._getDelegateFuncBindingIdx(evt, delegateQuery, callback, context, true);
                if (matchIdx > -1) {
                    return true;
                }
                return false;
            }

            if (this._eventEmitter && this._eventEmitter.has.apply(this._eventEmitter, arguments)) {
                return true;
            }
            return false;
        };

        proto.trigger = function(evts, dataOrDelegateQuery, doNotPropogateOrData, doNotPropogate) {
            evts = this._parseEventNames(evts);

            var delegateQuery,
                data;

            if (typeof dataOrDelegateQuery === 'string') {
                delegateQuery = this._cleanStringData(dataOrDelegateQuery);
                data = doNotPropogateOrData;
            } else {
                data = dataOrDelegateQuery;
                doNotPropogate = doNotPropogateOrData;
            }

            // clean strings for matching
            evts = this._cleanStringData(evts);

            evts.forEach(function(delegateQuery, data, doNotPropogate, evt) {
                // if a delegateQuery exists, we have to trigger DOM events to properly catch all of the matches
                if (delegateQuery) {
                    this._triggerDelegateEvents(evt, delegateQuery, data);
                    return;
                }
                this._eventEmitter.trigger(evt, data, doNotPropogate);
            }.bind(this, delegateQuery, data, doNotPropogate));

            return this;

        };

        proto.propagateTo = function(eventEmitter, prefix) {
            this._eventEmitter.propagateTo(eventEmitter, prefix);
            return this;
        };

        proto.stopPropagatingTo = function(eventEmitter) {
            this._eventEmitter.stopPropagatingTo(eventEmitter);
            return this;
        };

        proto.destroy = function() {
            this._triggerInternalEvent('willdestroy');
            this.off();
            this.el = this._eventEmitter = this._bindings = this._delegateFuncs = null;
        };

        module.exports = DOMEmitter;
    }, {
        "ac-dom-events": 212,
        "ac-dom-traversal": 213,
        "ac-event-emitter": 270
    }],
    234: [function(require, module, exports) {
        /** 
         * @module ac-shared-instance
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        module.exports = {
            SharedInstance: require('./ac-shared-instance/SharedInstance')
        };

    }, {
        "./ac-shared-instance/SharedInstance": 235
    }],
    235: [function(require, module, exports) {
        /** 
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        var instanceScope = window,
            instanceSharedInstanceNamespace = 'AC',
            instanceExportKey = 'SharedInstance',
            instanceTarget = instanceScope[instanceSharedInstanceNamespace];

        var SharedInstance = (function() {

            var registry = {};

            return {

                get: function(name, version) {
                    var module = null;

                    // See if a version currently exists for the defined module
                    if (registry[name] && registry[name][version]) {
                        module = registry[name][version];
                    }

                    return module;
                },

                set: function(name, version, Module) {
                    // Ensure that a namespace for this module name exists
                    if (!registry[name]) {
                        registry[name] = {};
                    }

                    // Test whether or not the Module is a function (constructor) or not
                    if (typeof Module === 'function') {
                        // If it is, construct away...
                        registry[name][version] = new Module();
                    } else {
                        // Otherwise, we can assume that this is something we should exec
                        registry[name][version] = Module;
                    }

                    return registry[name][version];
                },

                share: function(name, version, Module) {
                    var module = this.get(name, version);

                    if (!module) {
                        module = this.set(name, version, Module);
                    }

                    return module;
                },

                remove: function(name, version) {
                    // This can do two things. Remove all instances under "name" without a version arg
                    // Or remove name + version combo with both arguments
                    var versionType = typeof version;
                    if (versionType === 'string' || versionType === 'number') {

                        if (!registry[name] || !registry[name][version]) {
                            return;
                        }

                        registry[name][version] = null;
                        return;
                    }

                    // If no version exists, we're asking to remove all references under "name"
                    if (registry[name]) {
                        registry[name] = null;
                    }
                }
            };

        }());

        // Ensure an AC namespace exists
        if (!instanceTarget) {
            instanceTarget = instanceScope[instanceSharedInstanceNamespace] = {};
        }

        // Move SharedInstance to the namespace if it does not yet exist there
        if (!instanceTarget[instanceExportKey]) {
            instanceTarget[instanceExportKey] = SharedInstance;
        }


        // Export the instance of SharedInstance that should be used
        module.exports = instanceTarget[instanceExportKey];

    }, {}],
    236: [function(require, module, exports) {
        /** 
         * @module ac-window-delegate
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        module.exports = {
            WindowDelegate: require('./ac-window-delegate/WindowDelegate'),
            WindowDelegateOptimizer: require('./ac-window-delegate/WindowDelegateOptimizer'),
            WindowDelegateCustomEvent: require('./ac-window-delegate/WindowDelegateCustomEvent')
        };

    }, {
        "./ac-window-delegate/WindowDelegate": 239,
        "./ac-window-delegate/WindowDelegateCustomEvent": 240,
        "./ac-window-delegate/WindowDelegateOptimizer": 241
    }],
    237: [function(require, module, exports) {
        'use strict';

        var EventEmitter = require('ac-event-emitter').EventEmitter;

        var CustomEventController = function() {
            this._emitter = new EventEmitter();
            this._customEvents = {};
        };

        var proto = CustomEventController.prototype;

        proto.on = function(evts, callback, context) {
            this._activateCustomEvents(evts);
            this._emitterOn.apply(this, arguments);
            return this;
        };

        proto.once = function(evts, callback, context) {
            this._emitterOnce.apply(this, arguments);
            return this;
        };

        proto.off = function(evts, callback, context) {
            this._emitterOff.apply(this, arguments);
            this._deactivateCustomEvents(evts);
            return this;
        };

        proto.has = function(evt, callback, context) {
            return this._emitter.has.apply(this._emitter, arguments);
        };

        proto.trigger = function() {
            this._emitter.trigger.apply(this._emitter, arguments);
            return this;
        };

        proto.propagateTo = function() {
            this._emitter.propagateTo.apply(this._emitter, arguments);
            return this;
        };

        proto.stopPropagatingTo = function() {
            this._emitter.stopPropagatingTo.apply(this._emitter, arguments);
            return this;
        };

        proto.add = function(customEvent) {
            this._customEvents[customEvent.name] = customEvent;
        };

        proto.canHandleCustomEvent = function(evt) {
            return this._customEvents.hasOwnProperty(evt);
        };

        proto.isHandlingCustomEvent = function(evt) {
            if (this._customEvents[evt] && this._customEvents[evt].active) {
                return true;
            }
            return false;
        };

        proto._activateCustomEvents = function(evts) {
            var evtsArr = evts.split(' '),
                evt,
                i,
                len = evtsArr.length;

            for (i = 0; i < len; i++) {
                evt = evtsArr[i];
                if (this._customEvents[evt] && !this._customEvents[evt].active) {
                    this._customEvents[evt].initialize();
                    this._customEvents[evt].active = true;
                }
            }
        };

        proto._deactivateCustomEvents = function(evts) {
            var i;

            // handle .off() (no args) scenario
            if (!evts || evts.length === 0) {
                for (i in this._customEvents) {
                    if (this._customEvents.hasOwnProperty(i)) {
                        this._deactivateCustomEvent(i);
                    }
                }
                return;
            }

            var evtsArr = evts.split(' '),
                len = evtsArr.length;

            for (i = 0; i < len; i++) {
                this._deactivateCustomEvent(evtsArr[i]);
            }
        };

        proto._deactivateCustomEvent = function(evt) {
            if (!this.has(evt) && this._customEvents[evt] && this._customEvents[evt].active) {
                this._customEvents[evt].deinitialize();
                this._customEvents[evt].active = false;
            }
        };

        proto._emitterOn = function() {
            this._emitter.on.apply(this._emitter, arguments);
        };

        proto._emitterOnce = function() {
            this._emitter.once.apply(this._emitter, arguments);
        };

        proto._emitterOff = function() {
            this._emitter.off.apply(this._emitter, arguments);
        };


        module.exports = CustomEventController;
    }, {
        "ac-event-emitter": 270
    }],
    238: [function(require, module, exports) {
        'use strict';

        var EventEmitter = require('ac-event-emitter').EventEmitter;

        var proto;

        var OptimizerController = function(optimizers) {
            EventEmitter.call(this);

            this.optimizers = optimizers;

            this._events = {};
            this._properties = {};

            this._initialize();
        };

        proto = OptimizerController.prototype = new EventEmitter(null);

        proto.canOptimizeEvent = function(evt) {
            return this._events.hasOwnProperty(evt);
        };

        proto.canOptimizeProperty = function(prop) {
            return this._properties.hasOwnProperty(prop);
        };

        proto.isOptimizingEvent = function(evt) {
            if (this._events[evt] && this._events[evt].active) {
                return true;
            }
            return false;
        };

        proto.isOptimizingProperty = function(prop) {
            if (this._properties[prop] && this._properties[prop].active) {
                return true;
            }
            return false;
        };

        proto.add = function(optimizer) {
            this._setOptimizerEvents(optimizer);
            this._setOptimizerProperties(optimizer);

            optimizer.on('update', this._onUpdate, this);
            optimizer.on('activate', this._onActivate, this);
            optimizer.on('deactivate', this._onDeactivate, this);
        };

        proto.get = function(prop) {
            if (this.isOptimizingProperty(prop)) {
                return this._properties[prop].value;
            }
            return null;
        };

        proto.set = function(prop, val) {
            if (!this._properties[prop]) {
                return false;
            }
            this._properties[prop].value = val;
            return this;
        };

        proto.getOptimizerByEvent = function(evt) {
            if (this._events[evt]) {
                return this._events[evt];
            }
            return null;
        };

        proto._initialize = function() {
            var i,
                optimizer;
            for (i in this.optimizers) {
                if (this.optimizers.hasOwnProperty(i)) {
                    this.add(this.optimizers[i]);
                }
            }
        };

        proto._onUpdate = function(e) {
            this.set(e.prop, e.val);
        };

        proto._onActivate = function(optimizer) {
            var propertyNames = optimizer.propertyNames,
                i,
                len = propertyNames.length;

            for (i = 0; i < len; i++) {
                this._properties[propertyNames[i]].active = true;
            }
        };

        proto._onDeactivate = function(optimizer) {
            var propertyNames = optimizer.propertyNames,
                i,
                len = propertyNames.length;

            for (i = 0; i < len; i++) {
                this._properties[propertyNames[i]].active = false;
            }
        };

        proto._setOptimizerEvents = function(optimizer) {
            var i,
                optimizerEvents = optimizer.eventNames,
                len = optimizerEvents.length;

            for (i = 0; i < len; i++) {
                this._setOptimizerEvent(optimizerEvents[i], optimizer);
            }
        };

        proto._setOptimizerEvent = function(evt, optimizer) {
            // Currently, only one optimizer per event is supported 
            if (this._events[evt]) {
                return;
            }
            this._events[evt] = optimizer;
        };

        proto._setOptimizerProperties = function(optimizer) {
            var i,
                optimizeProperties = optimizer.propertyNames,
                len = optimizeProperties.length;

            for (i = 0; i < len; i++) {
                this._setOptimizerProperty(optimizeProperties[i]);
            }
        };

        proto._setOptimizerProperty = function(prop) {
            if (this._properties.hasOwnProperty(prop)) {
                return;
            }

            this._properties[prop] = {};
            this._properties[prop].active = false;
            this._properties[prop].value = null;
        };

        module.exports = OptimizerController;
    }, {
        "ac-event-emitter": 270
    }],
    239: [function(require, module, exports) {
        /** 
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        var proto;

        var SharedInstance = require('ac-shared-instance').SharedInstance,
            DOMEmitter = require('ac-dom-emitter').DOMEmitter,
            OptimizerController = require('./OptimizerController'),
            CustomEventController = require('./CustomEventController'),
            queries = require('./queries/queries'),
            optimizers = require('./optimizers/optimizers');

        var sharedInstanceName = 'ac-window-delegate:WindowDelegate',
            sharedInstanceVersion = '2.0.1';

        /**
         * @name .WindowDelegate
         * @class WindowDelegate
         * <pre>WindowDelegate = require('/WindowDelegate');</pre>
         */
        function WindowDelegate() {

            this._emitter = new DOMEmitter(window);
            this._controllers = {
                optimizer: new OptimizerController(optimizers),
                customEvent: new CustomEventController()
            };

            // Set property queries dynamically
            var i;
            for (i in queries) {
                if (queries.hasOwnProperty(i)) {
                    // Set instance functions for getting each poperty
                    this[i] = this._getProperty.bind(this, i);
                    // Override query functions to bind to WindowDelegate
                    queries[i] = queries[i].bind(this);
                }
            }

            this._bindEvents();
        }

        proto = WindowDelegate.prototype;

        /* Event Emitter Delegation */

        proto.on = function(evts, callback, context) {
            var evtsObj = this._seperateCustomEvents(evts);
            this._optimizeEvents(evtsObj.standardEvents);
            this._customEventOn(evtsObj.customEvents, callback, context);
            this._emitterOn.apply(this, arguments);
            return this;
        };

        proto.once = function(evts, callback, context) {
            var evtsObj = this._seperateCustomEvents(evts);
            this._optimizeEvents(evtsObj.standardEvents);
            this._customEventOnce(evtsObj.customEvents, callback, context);
            this._emitterOnce.apply(this, arguments);
            return this;
        };

        proto.off = function(evts, callback, context) {
            var evtsObj = this._seperateCustomEvents(evts),
                force = false;

            if (!evts) {
                force = true;
            }

            this._customEventOff(evtsObj.customEvents, callback, context, force);
            this._emitterOff.apply(this, arguments);

            /* If no arguments are passed, we have to assume that all events from windowEmitter have been removed.
             * In this case, we have to rebind our internal events after this fact and assume they didn't fire.
             * A try/catch makes sense here in case .destroy() was called, in which case it would fail.
             */
            if (force) {
                try {

                    // Deoptimize all events
                    var evt;
                    for (evt in this._controllers.optimizer._events) {
                        if (this._controllers.optimizer._events.hasOwnProperty(evt) && this._shouldDeoptimizeEvent(evt, true)) {
                            this._deoptimizeEvent(evt);
                        }
                    }

                    // Rebind internal events
                    this._bindEvents();
                } catch (e) {}
            }

            return this;
        };

        proto.has = function(evt, callback, context) {
            return this._emitter.has.apply(this._emitter, arguments);
        };

        proto.trigger = function() {
            this._emitter.trigger.apply(this._emitter, arguments);
            return this;
        };

        proto.propagateTo = function() {
            this._emitter.propagateTo.apply(this._emitter, arguments);
            return this;
        };

        proto.stopPropagatingTo = function() {
            this._emitter.stopPropagatingTo.apply(this._emitter, arguments);
            return this;
        };

        proto.addOptimizer = function(optimizer) {
            this._controllers.optimizer.add(optimizer);
            return this;
        };

        proto.addCustomEvent = function(customEvent) {
            this._controllers.customEvent.add(customEvent);
            return this;
        };

        proto._emitterOn = function() {
            this._emitter.on.apply(this._emitter, arguments);
        };

        proto._emitterOnce = function() {
            this._emitter.once.apply(this._emitter, arguments);
        };

        proto._emitterOff = function() {
            this._emitter.off.apply(this._emitter, arguments);
        };

        proto._onEventUnbound = function(e) {
            var evt = e.evt;
            if (this._shouldDeoptimizeEvent(evt)) {
                this._deoptimizeEvent(evt);
            }
        };

        proto._customEventOn = function(evtsArr, callback, context) {
            if (evtsArr.length === 0) {
                return;
            }
            this._controllers.customEvent.on(evtsArr.join(' '), callback, context);
        };

        proto._customEventOnce = function(evtsArr, callback, context) {
            if (evtsArr.length === 0) {
                return;
            }
            this._controllers.customEvent.once(evtsArr.join(' '), callback, context);
        };

        proto._customEventOff = function(evtsArr, callback, context, force) {
            if (!force && evtsArr.length === 0) {
                return;
            }

            // handle the WindowDelegate.off() (no args) scenario
            if (force && evtsArr.length === 0) {
                this._controllers.customEvent.off();
                return;
            }

            this._controllers.customEvent.off(evtsArr.join(' '), callback, context);
        };

        /* WindowDelegate specific functionality */

        proto._getProperty = function(prop, forceQuery) {
            var value = null;

            if (!forceQuery) {
                value = this._getOptimizedValue(prop);
            }

            if (value === null) {
                value = queries[prop].call(this, forceQuery);
            }

            return value;
        };

        proto._optimizeEvents = function(evts) {
            var evt,
                i,
                len = evts.length;
            for (i = 0; i < len; i++) {
                evt = evts[i];
                if (this._shouldOptimizeEvent(evt)) {
                    this._optimizeEvent(evt);
                }
            }
        };

        proto._shouldOptimizeEvent = function(evt) {
            if (this._controllers.optimizer.canOptimizeEvent(evt) && !this._controllers.optimizer.isOptimizingEvent(evt)) {
                return true;
            }
            return false;
        };

        proto._shouldDeoptimizeEvent = function(evt, force) {
            // if we know we have one event bound (the optimization) and that's all that's left to be fired, we'll remove it
            if (this._controllers.optimizer.isOptimizingEvent(evt) && (force || this._emitter._eventEmitter._events[evt].length <= 1)) {
                return true;
            }
            return false;
        };

        proto._optimizeEvent = function(evt) {
            var optimizer = this._controllers.optimizer.getOptimizerByEvent(evt);
            optimizer.activate();
            this._emitterOn(evt, optimizer.callback, optimizer);
        };

        proto._deoptimizeEvent = function(evt) {
            var optimizer = this._controllers.optimizer.getOptimizerByEvent(evt);
            optimizer.deactivate();
            this._emitterOff(evt, optimizer.callback, optimizer);
        };

        proto._getOptimizedValue = function(prop) {
            return this._controllers.optimizer.get(prop);
        };

        proto._seperateCustomEvents = function(evtString) {

            var result = {
                customEvents: [],
                standardEvents: []
            };

            if (typeof evtString === 'string') {
                var evtsArray = evtString.split(' '),
                    evt,
                    i,
                    len = evtsArray.length;
                for (i = 0; i < len; i++) {
                    evt = evtsArray[i];
                    if (this._controllers.customEvent.canHandleCustomEvent(evt)) {
                        result.customEvents.push(evt);
                    } else {
                        result.standardEvents.push(evt);
                    }
                }
            }

            return result;
        };

        proto._bindEvents = function() {
            // Bind to DOMEmitter's internal 'off' event to help us determine if we should remove optimizations
            this._emitter.on('dom-emitter:didoff', this._onEventUnbound, this);
        };

        module.exports = SharedInstance.share(sharedInstanceName, sharedInstanceVersion, WindowDelegate);
    }, {
        "./CustomEventController": 237,
        "./OptimizerController": 238,
        "./optimizers/optimizers": 244,
        "./queries/queries": 253,
        "ac-dom-emitter": 232,
        "ac-shared-instance": 234
    }],
    240: [function(require, module, exports) {
        /** 
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        var EventEmitter = require('ac-event-emitter').EventEmitter;

        /**
         * @name module:ac-window-delegate-custom-event.WindowDelegateCustomEvent
         * @class
         *
         * @desc Custom event pattern for WindowDelegate plugins
         *
         * @param {Object} [options]
         *        Options to initialize the instance with
         */
        function WindowDelegateCustomEvent(name, initializeFunc, deinitializeFunc) {
            // constructor code goes here
            EventEmitter.call(this);
            this.name = name;
            this.active = false;
            this._initializeFunc = initializeFunc;
            this._deinitializeFunc = deinitializeFunc;
        }

        var proto = WindowDelegateCustomEvent.prototype = new EventEmitter(null);

        proto.initialize = function() {
            if (this._initializeFunc) {
                this._initializeFunc();
            }
            return this;
        };

        proto.deinitialize = function() {
            if (this._deinitializeFunc) {
                this._deinitializeFunc();
            }
            return this;
        };

        module.exports = WindowDelegateCustomEvent;

    }, {
        "ac-event-emitter": 270
    }],
    241: [function(require, module, exports) {
        /** 
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        var EventEmitter = require('ac-event-emitter').EventEmitter;

        /**
         * @name module:ac-window-delegate-optimizer.WindowDelegateOptimizer
         * @class
         *
         * @desc Optimizer constructor pattern used to create optimizations for WindowDelegate events
         *
         * @param {Object} [options]
         *        Options to initialize the instance with
         */
        function WindowDelegateOptimizer(config, callback) {
            EventEmitter.call(this);

            this.active = false;
            this.eventNames = config.eventNames;
            this.propertyNames = config.propertyNames;
            this.options = config.options || {};
            this.callback = callback;
        }

        var proto = WindowDelegateOptimizer.prototype = new EventEmitter(null);

        proto.update = function(prop, val) {
            this.trigger('update', {
                prop: prop,
                val: val
            });
        };

        proto.activate = function() {
            this.active = true;
            this.trigger('activate', this);
        };

        proto.deactivate = function() {
            this.active = false;
            this.trigger('deactivate', this);
        };

        module.exports = WindowDelegateOptimizer;

    }, {
        "ac-event-emitter": 270
    }],
    242: [function(require, module, exports) {
        'use strict';

        var Optimizer = require('../../WindowDelegateOptimizer'),
            queries = require('../../queries/queries');

        /* TOFO: What happens on orientationchange? We should try to make sure both are bound */
        var config = {
            eventNames: ['resize'],
            propertyNames: ['clientWidth', 'clientHeight', 'innerWidth', 'innerHeight']
        };

        var resizeOptimizer = new Optimizer(config, function(e) {

            var i,
                propertyNames = config.propertyNames,
                len = propertyNames.length;

            for (i = 0; i < len; i++) {
                this.update(propertyNames[i], queries[propertyNames[i]](true));
            }

        });

        module.exports = resizeOptimizer;
    }, {
        "../../WindowDelegateOptimizer": 241,
        "../../queries/queries": 253
    }],
    243: [function(require, module, exports) {
        'use strict';

        var Optimizer = require('../../WindowDelegateOptimizer'),
            queries = require('../../queries/queries');

        var config = {
            eventNames: ['scroll'],
            propertyNames: ['scrollX', 'scrollY', 'maxScrollX', 'maxScrollY']
        };

        var scrollOptimizer = new Optimizer(config, function(e) {

            var i,
                propertyNames = config.propertyNames,
                len = propertyNames.length;

            for (i = 0; i < len; i++) {
                this.update(propertyNames[i], queries[propertyNames[i]](true));
            }

        });

        module.exports = scrollOptimizer;
    }, {
        "../../WindowDelegateOptimizer": 241,
        "../../queries/queries": 253
    }],
    244: [function(require, module, exports) {
        'use strict';

        var resizeEvt = require('./events/resize'),
            scrollEvt = require('./events/scroll');

        module.exports = [
            resizeEvt,
            scrollEvt
        ];
    }, {
        "./events/resize": 242,
        "./events/scroll": 243
    }],
    245: [function(require, module, exports) {
        'use strict';

        var queryClientHeight = function(forceQuery) {
            return document.documentElement.clientHeight;
        };

        module.exports = queryClientHeight;
    }, {}],
    246: [function(require, module, exports) {
        'use strict';

        var queryClientWidth = function(forceQuery) {
            return document.documentElement.clientWidth;
        };

        module.exports = queryClientWidth;
    }, {}],
    247: [function(require, module, exports) {
        'use strict';

        var queryInnerHeight = function(forceQuery) {
            return window.innerHeight || this.clientHeight(forceQuery);
        };

        module.exports = queryInnerHeight;
    }, {}],
    248: [function(require, module, exports) {
        'use strict';

        var queryInnerWidth = function(forceQuery) {
            return window.innerWidth || this.clientWidth(forceQuery);
        };

        module.exports = queryInnerWidth;
    }, {}],
    249: [function(require, module, exports) {
        'use strict';

        var queryMaxScrollX = function(forceQuery) {
            // innerWidth is updated from other queries, so we shouldn't force it
            return document.body.scrollWidth - this.innerWidth();
        };

        module.exports = queryMaxScrollX;
    }, {}],
    250: [function(require, module, exports) {
        'use strict';

        var queryMaxScrollY = function(forceQuery) {
            // innerHeight is updated from other queries, so we shouldn't force it
            return document.body.scrollHeight - this.innerHeight();
        };

        module.exports = queryMaxScrollY;
    }, {}],
    251: [function(require, module, exports) {
        'use strict';

        var queryScrollX = function(forceQuery) {
            var offset = window.pageXOffset;

            if (!offset) {
                var target = document.documentElement || document.body.parentNode || document.body;
                offset = target.scrollLeft;
            }

            return offset;
        };

        module.exports = queryScrollX;
    }, {}],
    252: [function(require, module, exports) {
        'use strict';

        var queryScrollY = function(forceQuery) {
            var offset = window.pageYOffset;

            if (!offset) {
                var target = document.documentElement || document.body.parentNode || document.body;
                offset = target.scrollTop;
            }

            return offset;
        };

        module.exports = queryScrollY;
    }, {}],
    253: [function(require, module, exports) {
        'use strict';

        var queryInnerWidth = require('./methods/innerWidth'),
            queryInnerHeight = require('./methods/innerHeight'),
            queryClientWidth = require('./methods/clientWidth'),
            queryClientHeight = require('./methods/clientHeight'),
            queryScrollX = require('./methods/scrollX'),
            queryScrollY = require('./methods/scrollY'),
            queryMaxScrollX = require('./methods/maxScrollX'),
            queryMaxScrollY = require('./methods/maxScrollY');

        module.exports = {

            innerWidth: queryInnerWidth,
            innerHeight: queryInnerHeight,
            clientWidth: queryClientWidth,
            clientHeight: queryClientHeight,
            scrollX: queryScrollX,
            scrollY: queryScrollY,
            maxScrollX: queryMaxScrollX,
            maxScrollY: queryMaxScrollY

        };
    }, {
        "./methods/clientHeight": 245,
        "./methods/clientWidth": 246,
        "./methods/innerHeight": 247,
        "./methods/innerWidth": 248,
        "./methods/maxScrollX": 249,
        "./methods/maxScrollY": 250,
        "./methods/scrollX": 251,
        "./methods/scrollY": 252
    }],
    254: [function(require, module, exports) {
        var ElementTracker = require('./ac-element-tracker/ElementTracker');
        module.exports = new ElementTracker();
        module.exports.ElementTracker = ElementTracker;

    }, {
        "./ac-element-tracker/ElementTracker": 255
    }],
    255: [function(require, module, exports) {
        /**
         *  @desc Tracks, reports metrics, and emits events for various elements on the page
         *  @module ElementTracker
         */

        'use strict';

        var proto;
        var ac_Object = require('ac-object');
        var ac_dom_nodes = require('ac-dom-nodes');
        var ac_dom_metrics = require('ac-dom-metrics');
        var ac_Array = require('ac-array');
        var windowDelegate = require('ac-window-delegate').WindowDelegate;
        var TrackedElement = require('./TrackedElement');
        var EventEmitter = require('ac-event-emitter').EventEmitter;

        // default autoStart to false because it gives the user a chance to attach their event listeners
        // before things start firing events.
        var defaultOptions = {
            autoStart: false
        };

        /**
         * @constructor
         * @name ElementTracker
         * @param {(Array|NodeList)} elements - Array or Nodelist of DOM elements to track
         * @param {Object} [options] - Hash of user defined options
         */
        function ElementTracker(elements, options) {

            this.options = ac_Object.clone(defaultOptions);
            this.options = typeof options === 'object' ? ac_Object.extend(this.options, options) : this.options;
            this.windowDelegate = windowDelegate;

            // are we tracking?
            this.tracking = false;

            // array of tracked element objects
            this.elements = [];

            // add elements if we get a valid Element object, Array or NodeList
            if (elements && (Array.isArray(elements) || ac_dom_nodes.isNodeList(elements) || ac_dom_nodes.isElement(elements))) {
                this.addElements(elements);
            }

            // only start if autoStart
            if (this.options.autoStart) {
                this.start();
            }

        }

        proto = ElementTracker.prototype = ac_Object.create(EventEmitter.prototype);

        var nodelistToStringPattern = /^\[object (HTMLCollection|NodeList|Object)\]$/;


        /**
         * @desc Accepts single DOM Elements or an array of DOM Elements. Turns DOM Elements into TrackedElement objects and pushes them to this.elements
         * @private
         */
        proto._registerElements = function(elements) {
            // make sure we use an array
            elements = [].concat(elements);

            elements.forEach(function(element) {
                // only register elements that are present in the DOM
                if (this._elementInDOM(element)) {
                    var trackedElement = new TrackedElement(element);
                    // we only want to get this once intially for now
                    trackedElement.offsetTop = trackedElement.element.offsetTop;

                    this.elements.push(trackedElement);
                }

            }, this);
        };


        /**
         * @desc Register objects that are already TrackedElement instances. Will accept a single object or an array of objects
         * @private
         */
        proto._registerTrackedElements = function(trackedElements) {
            var objects = [].concat(trackedElements);

            objects.forEach(function(object) {
                // only register objects in DOM
                if (this._elementInDOM(object.element)) {
                    object.offsetTop = object.element.offsetTop;
                    this.elements.push(object);
                }
            }, this);
        };

        /**
         * @desc returns true if the element is a valid element and exists in the DOM
         * @private
         */
        proto._elementInDOM = function(element) {
            var assertion = false;
            var body = document.getElementsByTagName('body')[0];

            if (ac_dom_nodes.isElement(element) && body.contains(element)) {
                assertion = true;
            }

            return assertion;
        };

        /**
         * @private
         */
        proto._onVPChange = function() {
            this.elements.forEach(function(elementObj) {
                this.refreshElementState(elementObj);
            }, this);
        };


        /**
         * @private
         */
        proto._elementPercentInView = function(elementObj) {
            return elementObj.pixelsInView / elementObj.height;
        };

        /**
         * @private
         */
        proto._elementPixelsInView = function(elementObj) {
            // pixels in view will be 0 if none of the conditions below are met
            var pixels = 0;
            var top = elementObj.top;
            var bottom = elementObj.bottom;
            var winHeight = this.windowDelegate.innerHeight();

            // if both element top and bottom extend beyond viewport
            if (top <= 0 && bottom >= winHeight) {
                pixels = winHeight;

                // if element top is in view, but bottom isn't
            } else if (top >= 0 && top < winHeight && bottom > winHeight) {
                pixels = winHeight - top;

                // if element top is not in view, but bottom is
            } else if (top < 0 && (bottom < winHeight && bottom >= 0)) {
                pixels = elementObj.bottom;

                // if element is entirely in view
            } else if (top >= 0 && bottom <= winHeight) {
                pixels = elementObj.height;
            }

            return pixels;
        };

        /**
         * @desc Conditions to meet and actions to take when refreshing the element's state if is in view, but was not necessarily already in view.
         * @private
         */
        proto._ifInView = function(trackedElement, alreadyInView) {
            // if the element enters view
            if (!alreadyInView) {
                trackedElement.trigger('enterview', trackedElement);
            }
        };

        /**
         * @desc Conditions to meet and actions to take when refreshing the element's state if it was already in view, but not necessarily in view anymore.
         * @private
         */
        proto._ifAlreadyInView = function(trackedElement) {
            // if the element exits view
            if (!trackedElement.inView) {
                trackedElement.trigger('exitview', trackedElement);
            }
        };

        /**
         * Public Methods
         */


        /**
         * @name ElementTracker#addElements
         * @desc Add elements to the element index. Accepts single element or array of elements or a nodelist
         * @public
         * @method
         * @param {(Element|Array|NodeList)} collection - A single DOM Element or an array of DOM Elements or a NodeList
         */
        proto.addElements = function(collection) {
            collection = ac_dom_nodes.isNodeList(collection) ? ac_Array.toArray(collection) : [].concat(collection);
            collection.forEach(function(element) {
                this.addElement(element);
            }, this);
        };

        /**
         * @name ElementTracker#addElement
         * @desc Add a single element to be tracked. Pass just the DOM Element to use the default options, or pass an object with properties that match the `TrackedElement` API.
         * @public
         * @method
         * @param {Element} element - A DOM Element object
         * @returns a new instance of a `TrackedElement` object.
         * @throws TypeError if the supplied element is not a valid DOM Element
         */
        proto.addElement = function(element) {
            var trackedElement;

            if (ac_dom_nodes.isElement(element)) {
                trackedElement = new TrackedElement(element);
                this._registerTrackedElements(trackedElement);
            }

            return trackedElement;
        };

        /**
         * @name ElementTracker#removeElement
         * @desc Remove an element object from the element index. Will remove any duplicates of passed element.
         * @public
         * @method
         * @param {(Element|Object)} element - A DOM Element or a valid `TrackedElement` object
         */
        proto.removeElement = function(element) {
            var indexes = [];
            var filtered;

            this.elements.forEach(function(elementObj, i) {
                if (elementObj === element || elementObj.element === element) {
                    indexes.push(i);
                }
            });

            // remove matched elements at specified indexes
            filtered = this.elements.filter(function(element, i) {
                return indexes.indexOf(i) < 0 ? true : false;
            });

            this.elements = filtered;
        };

        /**
         * @name ElementTracker#stop
         * @desc Stop tracking. Removes the scroll listener.
         * @public
         * @method
         */
        proto.stop = function() {
            if (this.tracking === true) {
                this.tracking = false;
                this.windowDelegate.off('scroll resize orientationchange', this._onVPChange, this);
            }
        };

        /**
         * @name ElementTracker#start
         * @desc Start tracking. Adds the scroll listener.
         * @public
         * @method
         */
        proto.start = function() {
            if (this.tracking === false) {
                this.tracking = true;
                this.windowDelegate.on('scroll resize orientationchange', this._onVPChange, this);
                this.refreshAllElementStates();
            }
        };

        /**
         * @name ElementTracker#refershAllElementStates
         * @desc Force a metric and state update on all tracked elements
         * @public
         * @method
         */
        proto.refreshAllElementStates = function() {
            this.elements.forEach(function(trackedElement) {
                this.refreshElementState(trackedElement);
            }, this);
        };

        /**
         * @name ElementTracker#refershAllElementStates
         * @desc Force a metric and state update provided tracked element
         * @param {Object} trackedElement - the `TrackedElement` object of the elemet you want to update.
         * @public
         * @method
         * @returns the passed `trackedElement` object
         */
        proto.refreshElementState = function(trackedElement) {
            var box = ac_dom_metrics.getBoundingBox(trackedElement.element);
            var alreadyInView = trackedElement.inView;

            trackedElement = ac_Object.extend(trackedElement, box);
            trackedElement.pixelsInView = this._elementPixelsInView(trackedElement);
            trackedElement.percentInView = this._elementPercentInView(trackedElement);
            trackedElement.inView = trackedElement.pixelsInView > 0;

            if (trackedElement.inView) {
                this._ifInView(trackedElement, alreadyInView);
            }

            if (alreadyInView) {
                this._ifAlreadyInView(trackedElement);
            }

            return trackedElement;
        };



        module.exports = ElementTracker;

    }, {
        "./TrackedElement": 256,
        "ac-array": 168,
        "ac-dom-metrics": 180,
        "ac-dom-nodes": 191,
        "ac-event-emitter": 270,
        "ac-object": 258,
        "ac-window-delegate": 236
    }],
    256: [function(require, module, exports) {
        /**
         *  @desc Extends DOMEmitter and wraps a DOM Element with metrics related to its position in the viewport.
         *  @module TrackedElement
         */

        'use strict';

        var proto;
        var DOMEmitter = require('ac-dom-emitter').DOMEmitter;
        var ac_dom_nodes = require('ac-dom-nodes');
        var ac_Object = require('ac-object');

        /**
         * @constructor
         * @name TrackedElement
         * @param {Element} element - A valid DOM element
         */
        function TrackedElement(element) {

            // if just an element is passed
            if (ac_dom_nodes.isElement(element)) {
                this.element = element;
            } else {
                throw new TypeError('TrackedElement: ' + element + ' is not a valid DOM element');
            }

            // baseline property values
            this.inView = false;
            this.percentInView = 0;
            this.pixelsInView = 0;
            this.offsetTop = 0;
            this.top = 0;
            this.right = 0;
            this.bottom = 0;
            this.left = 0;
            this.width = 0;
            this.height = 0;

            DOMEmitter.call(this, element);

        }

        proto = TrackedElement.prototype = ac_Object.create(DOMEmitter.prototype);


        module.exports = TrackedElement;

    }, {
        "ac-dom-emitter": 175,
        "ac-dom-nodes": 191,
        "ac-object": 258
    }],
    257: [function(require, module, exports) {
        module.exports = require(126)
    }, {}],
    258: [function(require, module, exports) {
        /**
         * @module ac-object
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        module.exports = {
            clone: require('./ac-object/clone'),
            create: require('./ac-object/create'),
            defaults: require('./ac-object/defaults'),
            extend: require('./ac-object/extend'),
            getPrototypeOf: require('./ac-object/getPrototypeOf'),
            isDate: require('./ac-object/isDate'),
            isEmpty: require('./ac-object/isEmpty'),
            isRegExp: require('./ac-object/isRegExp'),
            toQueryParameters: require('./ac-object/toQueryParameters')
        };

    }, {
        "./ac-object/clone": 259,
        "./ac-object/create": 260,
        "./ac-object/defaults": 261,
        "./ac-object/extend": 262,
        "./ac-object/getPrototypeOf": 263,
        "./ac-object/isDate": 264,
        "./ac-object/isEmpty": 265,
        "./ac-object/isRegExp": 266,
        "./ac-object/toQueryParameters": 267
    }],
    259: [function(require, module, exports) {
        /** 
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var extend = require('./extend');

        /**
         * @name module:ac-object.clone
         *
         * @function
         *
         * @desc Create a new Object that has the same properties as the original.
         *
         * @param {Object} object
         *        The Object to make a clone of.
         *
         * @returns {Object} The cloned object.
         */
        module.exports = function clone(object) {
            return extend({}, object);
        };

    }, {
        "./extend": 262
    }],
    260: [function(require, module, exports) {
        /**
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var F = function() {};

        /**
         * @name module:ac-object.create
         *
         * @function
         *
         * @desc Create a new Object who’s prototype is the object passed
         *
         * @see  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create
         *
         * @param {Object} proto
         *        The prototype for the new Object
         *
         * @returns {Object} The new Object
         */
        module.exports = function create(proto) {
            // Don’t support second argument because it is not possible to accurately polyfill
            if (arguments.length > 1) {
                throw new Error('Second argument not supported');
            }

            // Prototype object is required
            if (proto === null || typeof proto !== 'object') {
                throw new TypeError('Object prototype may only be an Object.');
            }

            // If native Object.create exists, use it!
            if (typeof Object.create === 'function') {
                return Object.create(proto);

                // Otherwise create a new Object F with the prototype provided assigned to it
            } else {
                F.prototype = proto;
                return new F();
            }
        };

    }, {}],
    261: [function(require, module, exports) {
        /** 
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var extend = require('./extend');

        /**
         * @name module:ac-object.defaults
         *
         * @function
         *
         * @desc Combines defaults and options into a new object and returns it.
         *
         * @param {Object} defaultsObj
         *        The defaults object.
         *
         * @param {Object} options
         *        The options object.
         *
         * @returns {Object} An object resulting from the combination of defaults and options.
         */
        module.exports = function defaults(defaultsObj, options) {
            if (typeof defaultsObj !== 'object') {
                throw new TypeError('defaults: must provide a defaults object');
            }
            options = options || {};
            if (typeof options !== 'object') {
                throw new TypeError('defaults: options must be a typeof object');
            }
            return extend({}, defaultsObj, options);
        };

    }, {
        "./extend": 262
    }],
    262: [function(require, module, exports) {
        /** 
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var hasOwnProp = Object.prototype.hasOwnProperty;

        /**
         * @name module:ac-object.extend
         *
         * @function
         *
         * @desc Add properties from one object into another. Not a deep copy.
         *
         * @param {Object} destination
         *        The object where the properties will end up. Properties in this Object
         *        that have the same key as properties in the source object will be
         *        overwritten with the source property’s value. If destination is not
         *        provided a blank object is created.
         *
         * @param {Object} source
         *        The properties to add / overwrite in the destination Object. An infinite
         *        number of source paramaters may be passed.
         *
         * @returns {Object} The extended object.
         */
        module.exports = function extend() {
            var args;
            var dest;

            if (arguments.length < 2) {
                args = [{}, arguments[0]];
            } else {
                args = [].slice.call(arguments);
            }

            dest = args.shift();

            args.forEach(function(source) {
                if (source != null) {
                    for (var property in source) {
                        // Anything that does not prototype Object will not have this method
                        if (hasOwnProp.call(source, property)) {
                            dest[property] = source[property];
                        }
                    }
                }
            });

            return dest;
        };

    }, {}],
    263: [function(require, module, exports) {
        /** 
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var hasOwnProp = Object.prototype.hasOwnProperty;

        /**
         * @name module:ac-object.getPrototypeOf
         *
         * @function
         *
         * @desc Returns the prototype (i.e. the internal [[Prototype]]) of the specified object.
         *
         * @param {Object} obj
         *        The object whose prototype is to be returned.
         *
         * @returns {Object} The prototype of the specified object.
         */
        module.exports = function getPrototypeOf(obj) {
            if (Object.getPrototypeOf) {
                return Object.getPrototypeOf(obj);
            } else {
                if (typeof obj !== 'object') {
                    throw new Error('Requested prototype of a value that is not an object.');
                } else if (typeof this.__proto__ === 'object') {
                    return obj.__proto__;
                } else {
                    var constructor = obj.constructor;
                    var oldConstructor;
                    if (hasOwnProp.call(obj, 'constructor')) {
                        oldConstructor = constructor;
                        // reset constructor
                        if (!(delete obj.constructor)) {
                            // can't delete obj.constructor, return null
                            return null;
                        }
                        // get real constructor
                        constructor = obj.constructor;
                        // restore constructor
                        obj.constructor = oldConstructor;
                    }
                    // needed for IE
                    return constructor ? constructor.prototype : null;
                }
            }
        };

    }, {}],
    264: [function(require, module, exports) {
        /** 
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /**
         * @name module:ac-object.isDate
         *
         * @function
         *
         * @desc Test an Object to see if it is an instance of the Date constructor or not.
         *
         * @param {Object} date
         *        The Object to test.
         *
         * @returns {Boolean} If the Object is a Date or not.
         */
        module.exports = function isDate(date) {
            return Object.prototype.toString.call(date) === '[object Date]';
        };

    }, {}],
    265: [function(require, module, exports) {
        /** 
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var hasOwnProp = Object.prototype.hasOwnProperty;

        /**
         * @name module:ac-object.isEmpty
         *
         * @function
         *
         * @desc Check if an empty object.
         *
         * @param {Object} object
         *        The Object to check if empty.
         *
         * @returns {Boolean} Return true if and only if object is empty ({}).
         */
        module.exports = function isEmpty(object) {
            var prop;

            if (typeof object !== 'object') {
                throw new TypeError('ac-base.Object.isEmpty : Invalid parameter - expected object');
            }

            for (prop in object) {
                if (hasOwnProp.call(object, prop)) {
                    return false;
                }
            }

            return true;
        };

    }, {}],
    266: [function(require, module, exports) {
        /** 
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /**
         * @name module:ac-object.isRegExp
         *
         * @function
         *
         * @desc Test whether or not an Object is a Regular Expression.
         *
         * @param {Object} obj
         *        Object to test whether or not it is a Regular Expression.
         *
         * @returns {Boolean} Whether or not it is a Regular Expression.
         */
        module.exports = function isRegExp(obj) {
            return window.RegExp ? obj instanceof RegExp : false;
        };

    }, {}],
    267: [function(require, module, exports) {
        /** 
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /** @ignore */
        var qs = require('qs');

        /**
         * @name module:ac-object.toQueryParameters
         *
         * @function
         *
         * @desc Convert object to query string.
         *
         * @param {Object} object
         *        The Object to convert to a query string.
         *
         * @returns {String} Returns query string representation of object.
         */
        module.exports = function toQueryParameters(object) {
            if (typeof object !== 'object') {
                throw new TypeError('toQueryParameters error: argument is not an object');
            }
            return qs.stringify(object);
        };

    }, {
        "qs": 257
    }],
    268: [function(require, module, exports) {
        var ElementEngagement = require('./ac-element-engagement/ElementEngagement');

        module.exports = new ElementEngagement();
        module.exports.ElementEngagement = ElementEngagement;

    }, {
        "./ac-element-engagement/ElementEngagement": 269
    }],
    269: [function(require, module, exports) {
        /**
         *  @desc Reports user engagement on tracked elements
         *  @module ElementEngagement
         */

        'use strict';

        var proto;
        var ac_Object = require('ac-object');
        var Super = require('ac-element-tracker').ElementTracker;

        var trackedElementDefaults = {
            timeToEngage: 500,
            inViewThreshold: 0.75,
            stopOnEngaged: true
        };

        // defaults for when we decorate the TrackedElement objects
        var extendedTrackedElementProps = {
            thresholdEnterTime: 0,
            thresholdExitTime: 0,
            inThreshold: false,
            engaged: false,
            tracking: true
        };


        /**
         * @constructor
         * @todo Think about implementing real time engagement tracking.
         *         current behavior is to report engagement only on thresholdexit.
         *         This mirrors the current track-section-engagement script.
         * @name ElementEngagement
         */

        var ElementEngagement = function() {
            Super.call(this);
        };

        proto = ElementEngagement.prototype = ac_Object.create(Super.prototype);

        /**
         * @desc decorates the TrackedElement instances with ElementEngagement specific properties
         * @private
         */
        proto._decorateTrackedElement = function(trackedElement, options) {
            var extendedDefaults;

            // merge user specified options with defaults
            extendedDefaults = ac_Object.defaults(trackedElementDefaults, options || {});
            ac_Object.extend(trackedElement, extendedDefaults);
            ac_Object.extend(trackedElement, extendedTrackedElementProps);
        };


        /**
         * @desc Adds EventEmitter listeners to an individual TrackedElement object
         * @private
         */
        proto._attachElementListeners = function(trackedElement) {
            trackedElement.on('thresholdenter', this._thresholdEnter, this);
            trackedElement.on('thresholdexit', this._thresholdExit, this);
            trackedElement.on('enterview', this._enterView, this);
            trackedElement.on('exitview', this._exitView, this);
        };

        /**
         * @desc Removes EventEmitter listeners from an individaul TrackedElement object
         * @private
         */
        proto._removeElementListeners = function(trackedElement) {
            trackedElement.off('thresholdenter', this._thresholdEnter);
            trackedElement.off('thresholdexit', this._thresholdExit);
            trackedElement.off('enterview', this._enterView);
            trackedElement.off('exitview', this._exitView);
        };

        /**
         * @desc Attaches EventEmitter listeners to all TrackedElement objects
         * @private
         */
        proto._attachAllElementListeners = function() {
            this.elements.forEach(function(trackedElement) {
                if (!trackedElement.stopOnEngaged) {
                    this._attachElementListeners(trackedElement);
                } else if (!trackedElement.engaged) {
                    this._attachElementListeners(trackedElement);
                }
            }, this);
        };

        /**
         * @desc Removes EventEmitter listeners from all TrackedElement objects
         * @private
         */
        proto._removeAllElementListeners = function() {
            this.elements.forEach(function(trackedElement) {
                this._removeElementListeners(trackedElement);
            }, this);
        };


        /**
         * @desc is the element in view past its defined threshold? Offset if viewport is >= element height.
         * @private
         */
        proto._elementInViewPastThreshold = function(trackedElement) {
            var winHeight = this.windowDelegate.innerHeight();
            var isIt = false;

            // if the whole viewport is filled with the element, then we consider that enough in view
            if (trackedElement.pixelsInView === winHeight) {
                isIt = true;
            } else {
                isIt = (trackedElement.percentInView > trackedElement.inViewThreshold);
            }

            return isIt;
        };


        /**
         * @desc Conditions to meet and actions to take when refreshing the element's state if is in view, but was not necessarily already in view.
         * @private
         */
        proto._ifInView = function(trackedElement, alreadyInView) {
            var alreadyInThreshold = trackedElement.inThreshold;
            Super.prototype._ifInView.apply(this, arguments);

            // if element enters view threshold
            if (!alreadyInThreshold && this._elementInViewPastThreshold(trackedElement)) {
                trackedElement.inThreshold = true;
                trackedElement.trigger('thresholdenter', trackedElement);

                if (typeof trackedElement.timeToEngage === 'number' && trackedElement.timeToEngage >= 0) {
                    trackedElement.engagedTimeout = window.setTimeout(this._engaged.bind(this, trackedElement), trackedElement.timeToEngage);
                }
            }
        };

        /**
         * @desc Conditions to meet and actions to take when refreshing the element's state if it was already in view, but not necessarily in view anymore.
         * @private
         */
        proto._ifAlreadyInView = function(trackedElement) {
            var alreadyInThreshold = trackedElement.inThreshold;
            Super.prototype._ifAlreadyInView.apply(this, arguments);

            // if element exits view threshold
            if (alreadyInThreshold && !this._elementInViewPastThreshold(trackedElement)) {
                trackedElement.inThreshold = false;
                trackedElement.trigger('thresholdexit', trackedElement);

                if (trackedElement.engagedTimeout) {
                    window.clearTimeout(trackedElement.engagedTimeout);
                    trackedElement.engagedTimeout = null;
                }
            }
        };

        proto._engaged = function(trackedElement) {
            trackedElement.engagedTimeout = null;
            this._elementEngaged(trackedElement);
            trackedElement.trigger('engaged', trackedElement);
            this.trigger('engaged', trackedElement);
        };

        /**
         * @desc Method that gets fired on EventEmitter 'thresholdenter' event
         * @private
         */
        proto._thresholdEnter = function(trackedElement) {
            // replace old values
            trackedElement.thresholdEnterTime = Date.now();
            trackedElement.thresholdExitTime = 0;

            // fire thresholdenter event
            this.trigger('thresholdenter', trackedElement);
        };

        /**
         * @desc Method that gets fired on EventEmitter 'thresholdexit' event
         * @private
         **/
        proto._thresholdExit = function(trackedElement) {
            // set exit time
            trackedElement.thresholdExitTime = Date.now();

            // fire thresholdexit event
            this.trigger('thresholdexit', trackedElement);
        };

        proto._enterView = function(trackedElement) {
            this.trigger('enterview', trackedElement);
        };

        proto._exitView = function(trackedElement) {
            this.trigger('exitview', trackedElement);
        };

        /**
         * @desc Method that fires on EventEmitter 'engaged' event
         * @private
         */
        proto._elementEngaged = function(trackedElement) {
            trackedElement.engaged = true;
            // stop tracking element if stopOnEngaged is true
            if (trackedElement.stopOnEngaged) {
                this.stop(trackedElement);
            }
        };


        /**
         * Public methods
         */

        /**
         * @method
         * @public
         * @desc Remove tracking from all elements. Or pass a single TrackedElement object to
         *       remove tracking from only that element.
         * @name ElementEngagement#stop
         * @param {Object} [trackedElement] - A TrackedElement object that is provided to ElementEngagement
         *                                    by ElementTracker.
         */
        proto.stop = function(trackedElement) {
            // stop everything
            if (this.tracking && !trackedElement) {
                this._removeAllElementListeners();
                Super.prototype.stop.call(this);
            }

            // just stop tracking the trackedElement
            if (trackedElement && trackedElement.tracking) {
                trackedElement.tracking = false;
                this._removeElementListeners(trackedElement);
            }

        };

        /**
         * @method
         * @public
         * @desc Start tracking all elements, or pass a single TrackedElement object to start
         *       tracking only that element. Will not resume tracking on elements that have
         *       already been engaged.
         * @name ElementEngagement#start
         * @param {Object} [trackedElement] - A TrackedElement object that is provided to ElementEngagement
         *                                    by ElementTracker.
         */
        proto.start = function(trackedElement) {
            // start everything
            if (!trackedElement) {
                this._attachAllElementListeners();
            }

            // just start tracking the trackedElement
            if (trackedElement && !trackedElement.tracking) {
                if (!trackedElement.stopOnEngaged) {
                    trackedElement.tracking = true;
                    this._attachElementListeners(trackedElement);
                } else if (!trackedElement.engaged) {
                    trackedElement.tracking = true;
                    this._attachElementListeners(trackedElement);
                }
            }

            // Start tracking if not already. Else, just refresh the elements
            if (!this.tracking) {
                Super.prototype.start.call(this);
            } else {
                this.refreshAllElementStates();
            }

        };

        // add a single element
        proto.addElement = function(element, options) {
            var trackedElement = Super.prototype.addElement.call(this, element);
            this._decorateTrackedElement(trackedElement, options);

            return trackedElement;
        };

        // add a bunch of elements that all use the same options
        proto.addElements = function(collection, options) {
            // call forEach with collection as context to iterate over nodelist or array
            [].forEach.call(collection, function(element) {
                this.addElement(element, options);
            }, this);
        };


        module.exports = ElementEngagement;

    }, {
        "ac-element-tracker": 254,
        "ac-object": 258
    }],
    270: [function(require, module, exports) {
        /** 
         * @module ac-event-emitter
         * @author Ronald "Doctor" Jett <rjett@apple.com>
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        module.exports.EventEmitter = require('./ac-event-emitter/EventEmitter');
    }, {
        "./ac-event-emitter/EventEmitter": 271
    }],
    271: [function(require, module, exports) {
        /** 
         * @module ac-event-emitter/EventEmitter
         * @classdesc An object that provides an event system
         */
        'use strict';

        var propagationName = 'EventEmitter:propagation';

        /**
         * @constructor
         */
        var EventEmitter = function(context) {
            // we should only create a context property if
            // the user is using EventEmitter through composition
            // and not using it as a part of their prototype chain
            if (context) {
                this.context = context;
            }
        };

        // shorthand to the prototype 
        var proto = EventEmitter.prototype;

        // test to see if the instant has an object
        // that as been allocated to store events
        var getEvents = function() {
            if (!this.hasOwnProperty('_events') && typeof this._events !== 'object') {
                this._events = {};
            }
            return this._events;
        };

        // @arguments arguments Could be:
        //  event Single string event, space seperated string, or map of events/callbacks
        //  callback Callback function for space seperated or single events
        //  context Context to apply to callbacks when invoked
        // @argument register The function that will get called for each event/callback/context
        var parseEvents = function(args, register) {
            var event = args[0];
            var callback = args[1];
            var context = args[2];

            // event should be a string or an plain object (not an array or null)
            if ((typeof event !== 'string' && typeof event !== 'object') || event === null || Array.isArray(event)) {
                throw new TypeError('Expecting event name to be a string or object.');
            }

            // ensure that calls to on/once with a string for event names
            // also come with a callback function
            if ((typeof event === 'string') && !callback) {
                throw new Error('Expecting a callback function to be provided.');
            }

            // callback should be a function
            if (callback && (typeof callback !== 'function')) {
                // unless we have a map of events/callbacks, then it could actually
                // be a context object
                if (typeof event === 'object' && typeof callback === 'object') {
                    context = callback;
                } else {
                    throw new TypeError('Expecting callback to be a function.');
                }
            }

            // we have a map of events/callbacks
            if (typeof event === 'object') {
                for (var evt in event) {
                    register.call(this, evt, event[evt], context);
                }
            }

            // we have a string of events
            if (typeof event === 'string') {
                event = event.split(' ');
                event.forEach(function(evt) {
                    register.call(this, evt, callback, context);
                }, this);
            }
        };

        // Finds the array of callback objects for 
        // a given event name, then executes the provided
        // callback for each one of them. Passing the callback
        // object and the index.
        var each = function(event, callback) {
            var eventsArray;
            var i;
            var length;

            eventsArray = getEvents.call(this)[event];

            if (!eventsArray || eventsArray.length === 0) {
                return;
            }

            // copy it in case anything we call tries to modify it
            eventsArray = eventsArray.slice();

            // reset this._stoppedImmediatePropagation for the run loop
            this._stoppedImmediatePropagation = false;

            for (i = 0, length = eventsArray.length; i < length; i++) {
                // if the event has been stopped via the run loop, break early
                if (this._stoppedImmediatePropagation || callback(eventsArray[i], i)) {
                    break;
                }
            }
        };

        // Remove a callback for a given event
        var removeSpecificCallback = function(events, event, callback) {
            // looking for a specific callback
            var i = -1;
            each.call(this, event, function(callbackObject, index) {
                if (callbackObject.callback === callback) {
                    i = index;
                    return true;
                }
            });

            if (i === -1) {
                return;
            }

            events[event].splice(i, 1);
        };


        /**
         * A method for adding a callback for a given event
         * @method
         * @param {string} event Event name
         * @param {function} callback A function to invoke when an event is triggered
         * @param {object} [context] A context to bind to the callback
         */
        proto.on = function() {
            var events = getEvents.call(this);

            parseEvents.call(this, arguments, function(event, callback, context) {
                events[event] = events[event] || (events[event] = []);
                events[event].push({
                    callback: callback,
                    context: context
                });
            });

            return this;
        };

        /**
         * A method for adding a callback for an event that will only execute once
         * and then be removed.
         * @method
         * @param {string} event Event name
         * @param {function} callback A function to invoke when an event is triggered
         * @param {object} [context] A context to bind to the callback
         */
        proto.once = function() {
            parseEvents.call(this, arguments, function(event, callback, context) {
                var wrapper = function(data) {
                    callback.call(context || this, data);
                    this.off(event, wrapper);
                };
                this.on(event, wrapper, this);
            });

            return this;
        };

        /**
         * A method for removing a callback for a given event
         * If no arguments are specified, all handlers are removed.
         * @method
         * @param {string} [event] Event name
         * @param {function} [callback] A function to remove
         */
        proto.off = function(event, callback) {
            var events = getEvents.call(this);

            // if no arguments are specified
            // we will drop all callbacks
            if (arguments.length === 0) {
                this._events = {};
            }
            // event names should be a string
            else if (!event || (typeof event !== 'string' && typeof event !== 'object') || Array.isArray(event)) {
                throw new TypeError('Expecting event name to be a string or object.');
            }

            if (typeof event === 'object') {
                for (var e in event) {
                    removeSpecificCallback.call(this, events, e, event[e]);
                }
            }

            // one or more events passed as string
            if (typeof event === 'string') {
                var split = event.split(' ');

                // only one event passed
                if (split.length === 1) {
                    // if a callback was specified remove that callback
                    if (callback) {
                        removeSpecificCallback.call(this, events, event, callback);
                    }
                    // otherwise, remove all the callbacks for that event
                    else {
                        events[event] = [];
                    }
                }
                // space seperated events passed
                else {
                    split.forEach(function(event) {
                        events[event] = [];
                    });
                }
            }

            return this;
        };

        /**
         * A method for firing/triggering an event
         * @method
         * @param {string} event Event name
         * @param {object} [data] Data to pass to the listening callbacks
         * @param {boolean} [doNotPropagate] Flag to silence propagation
         */
        proto.trigger = function(event, data, doNotPropagate) {
            // you need at least an event
            if (!event) {
                throw new Error('trigger method requires an event name');
            }

            // event names should be a string
            if (typeof event !== 'string') {
                throw new TypeError('Expecting event names to be a string.');
            }

            // doNotPropagate flag should be a boolean
            if (doNotPropagate && typeof doNotPropagate !== 'boolean') {
                throw new TypeError('Expecting doNotPropagate to be a boolean.');
            }

            // split events incase we are trigger multiples with a space delimiter
            event = event.split(' ');

            // loop through the events
            event.forEach(function(evt) {

                // call all the callbacks for the given event
                each.call(this, evt, function(callbackObject) {
                    callbackObject.callback.call(callbackObject.context || this.context || this, data);
                }.bind(this));

                // propagate event if anyone else is listening, unless told not to
                if (!doNotPropagate) {
                    each.call(this, propagationName, function(propagation) {
                        var eventName = evt;

                        if (propagation.prefix) {
                            eventName = propagation.prefix + eventName;
                        }

                        propagation.emitter.trigger(eventName, data);
                    });
                }

            }, this);

            return this;
        };

        /**
         * A method for propagating events to another EventEmitter
         * @method
         * @param {object} eventEmitter An event emitting object to propagate events to
         * @param {string} [prefix] A prefix to be appended to the name of a propagating event
         */
        proto.propagateTo = function(eventEmitter, prefix) {
            var events = getEvents.call(this);

            if (!events[propagationName]) {
                this._events[propagationName] = [];
            }

            events[propagationName].push({
                emitter: eventEmitter,
                prefix: prefix
            });
        };

        /**
         * A method for removing propagation
         * @method
         * @param {object} [eventEmitter] The event emitter to stop propagating to
         */
        proto.stopPropagatingTo = function(eventEmitter) {
            var events = getEvents.call(this);

            // If an argument was not specified,
            // all propagations will be removed.
            if (!eventEmitter) {
                events[propagationName] = [];
                return;
            }

            // If an event emitter was passed in,
            // just removed propagation to that object
            var propagationTargets = events[propagationName];
            var length = propagationTargets.length;
            var i;

            for (i = 0; i < length; i++) {
                if (propagationTargets[i].emitter === eventEmitter) {
                    propagationTargets.splice(i, 1);
                    break;
                }
            }
        };

        /**
         * A method for cancelling future callbacks from firing in a event trigger loop
         * @method
         */
        proto.stopImmediatePropagation = function() {
            this._stoppedImmediatePropagation = true;
        };

        /**
         * A method for checking whether or not there are callbacks for a given event
         * @method
         * @param {string} evt An event name to check
         * @param {function} [callback] A callback to check for
         * @parma {object} [context] A particular context
         */
        proto.has = function(evt, callback, context) {
            var events = getEvents.call(this);
            var eventsArray = events[evt];

            // return an array of all events if no arguments specified
            if (arguments.length === 0) {
                return Object.keys(events);
            }

            // If there's no events, exit.
            if (!eventsArray) {
                return false;
            }

            // If we are not looking for a particular callback,
            // check the length of the events array
            if (!callback) {
                return (eventsArray.length > 0) ? true : false;
            }

            // If we are looking for a particular callback/context, loop through 
            // the array of callbacks for the given event name
            for (var i = 0, length = eventsArray.length; i < length; i++) {
                var callbackContainer = eventsArray[i];

                // looking for both a callback and a context
                if (context && callback && callbackContainer.context === context && callbackContainer.callback === callback) {
                    return true;
                }
                // just looking for a callback
                else if (callback && !context && callbackContainer.callback === callback) {
                    return true;
                }
            }

            return false;
        };

        module.exports = EventEmitter;

    }, {}],
    272: [function(require, module, exports) {
        /** 
         * @module ac-checksum
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        module.exports = {
            adler32: require('./ac-checksum/adler32')
        };

    }, {
        "./ac-checksum/adler32": 273
    }],
    273: [function(require, module, exports) {
        /** 
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        /**
         * @name module:ac-checksum.adler32
         *
         * @function
         *
         * @desc Adler-32 checksum for string provided.
         *
         * @reference http://en.wikipedia.org/wiki/Adler-32
         *
         * @param {String} string
         *        The string you want to get the checksum for.
         *
         * @returns {Integer} Adler-32 checksum for string provided.
         */
        module.exports = function adler32(string) {
            var adlerModulo = 65521;
            var checksum16a = 1;
            var checksum16b = 0;
            var unicodeValueForCurrentChar;
            var i;

            for (i = 0; i < string.length; i += 1) {
                unicodeValueForCurrentChar = string.charCodeAt(i);
                checksum16a = (checksum16a + unicodeValueForCurrentChar) % adlerModulo;
                checksum16b = (checksum16b + checksum16a) % adlerModulo;
            }

            return (checksum16b << 16) | checksum16a;
        };

    }, {}],
    274: [function(require, module, exports) {
        /** 
         * @module ac-console
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        module.exports = {
            log: require('./ac-console/log')
        };

    }, {
        "./ac-console/log": 275
    }],
    275: [function(require, module, exports) {
        /** 
         * @copyright 2014 Apple Inc. All rights reserved.
         */
        'use strict';

        var debugMessagingKey = 'f7c9180f-5c45-47b4-8de4-428015f096c0';
        var allowDebugMessaging = !!(function() {
            try {
                return window.localStorage.getItem(debugMessagingKey);
            } catch (err) {}
        }());

        module.exports = function log(message) {
            if (window.console && typeof console.log !== 'undefined' && allowDebugMessaging) {
                console.log(message);
            }
        };

    }, {}],
    276: [function(require, module, exports) {
        module.exports = require(182)
    }, {}],
    277: [function(require, module, exports) {
        module.exports = require(183)
    }, {}],
    278: [function(require, module, exports) {
        module.exports = require(184)
    }, {}],
    279: [function(require, module, exports) {
        module.exports = require(185)
    }, {}],
    280: [function(require, module, exports) {
        module.exports = require(186)
    }, {}],
    281: [function(require, module, exports) {
        module.exports = require(187)
    }, {}],
    282: [function(require, module, exports) {
        module.exports = require(188)
    }, {}],
    283: [function(require, module, exports) {
        module.exports = require(189)
    }, {
        "./ELEMENT_NODE": 280,
        "./internal/isNodeType": 291,
        "ac-polyfills/Array/prototype.filter": 301,
        "ac-polyfills/Array/prototype.slice": 303
    }],
    284: [function(require, module, exports) {
        module.exports = require(190)
    }, {}],
    285: [function(require, module, exports) {
        module.exports = require(191)
    }, {
        "./COMMENT_NODE": 276,
        "./DOCUMENT_FRAGMENT_NODE": 277,
        "./DOCUMENT_NODE": 278,
        "./DOCUMENT_TYPE_NODE": 279,
        "./ELEMENT_NODE": 280,
        "./TEXT_NODE": 281,
        "./createDocumentFragment": 282,
        "./filterByNodeType": 283,
        "./hasAttribute": 284,
        "./indexOf": 286,
        "./insertAfter": 287,
        "./insertBefore": 288,
        "./insertFirstChild": 289,
        "./insertLastChild": 290,
        "./isComment": 293,
        "./isDocument": 294,
        "./isDocumentFragment": 295,
        "./isDocumentType": 296,
        "./isElement": 297,
        "./isNode": 298,
        "./isNodeList": 299,
        "./isTextNode": 300,
        "./remove": 304,
        "./replace": 305
    }],
    286: [function(require, module, exports) {
        module.exports = require(192)
    }, {
        "./filterByNodeType": 283,
        "./internal/validate": 292,
        "ac-polyfills/Array/prototype.indexOf": 302,
        "ac-polyfills/Array/prototype.slice": 303
    }],
    287: [function(require, module, exports) {
        module.exports = require(193)
    }, {
        "./internal/validate": 292
    }],
    288: [function(require, module, exports) {
        module.exports = require(194)
    }, {
        "./internal/validate": 292
    }],
    289: [function(require, module, exports) {
        module.exports = require(195)
    }, {
        "./internal/validate": 292
    }],
    290: [function(require, module, exports) {
        module.exports = require(196)
    }, {
        "./internal/validate": 292
    }],
    291: [function(require, module, exports) {
        module.exports = require(197)
    }, {
        "../isNode": 298
    }],
    292: [function(require, module, exports) {
        module.exports = require(198)
    }, {
        "../COMMENT_NODE": 276,
        "../DOCUMENT_FRAGMENT_NODE": 277,
        "../ELEMENT_NODE": 280,
        "../TEXT_NODE": 281,
        "./isNodeType": 291
    }],
    293: [function(require, module, exports) {
        module.exports = require(199)
    }, {
        "./COMMENT_NODE": 276,
        "./internal/isNodeType": 291
    }],
    294: [function(require, module, exports) {
        module.exports = require(200)
    }, {
        "./DOCUMENT_NODE": 278,
        "./internal/isNodeType": 291
    }],
    295: [function(require, module, exports) {
        module.exports = require(201)
    }, {
        "./DOCUMENT_FRAGMENT_NODE": 277,
        "./internal/isNodeType": 291
    }],
    296: [function(require, module, exports) {
        module.exports = require(202)
    }, {
        "./DOCUMENT_TYPE_NODE": 279,
        "./internal/isNodeType": 291
    }],
    297: [function(require, module, exports) {
        module.exports = require(203)
    }, {
        "./ELEMENT_NODE": 280,
        "./internal/isNodeType": 291
    }],
    298: [function(require, module, exports) {
        module.exports = require(204)
    }, {}],
    299: [function(require, module, exports) {
        module.exports = require(205)
    }, {}],
    300: [function(require, module, exports) {
        module.exports = require(206)
    }, {
        "./TEXT_NODE": 281,
        "./internal/isNodeType": 291
    }],
    301: [function(require, module, exports) {
        module.exports = require(106)
    }, {}],
    302: [function(require, module, exports) {
        module.exports = require(208)
    }, {}],
    303: [function(require, module, exports) {
        module.exports = require(209)
    }, {}],
    304: [function(require, module, exports) {
        module.exports = require(210)
    }, {
        "./internal/validate": 292
    }],
    305: [function(require, module, exports) {
        module.exports = require(211)
    }, {
        "./internal/validate": 292
    }],
    306: [function(require, module, exports) {
        'use strict';

        /**
         * @module module:ac-feature
         */
        var feature = {
            cssPropertyAvailable: require('./ac-feature/cssPropertyAvailable'),
            localStorageAvailable: require('./ac-feature/localStorageAvailable')
        };

        var hasOwnProp = Object.prototype.hasOwnProperty;

        /**
         * Returns whether the browser supports the 3d media query
         * @returns {Boolean} whether or not the browser supports the 3d media query
         * @name module:ac-feature.threeDTransformsAvailable
         * @kind function
         */
        feature.threeDTransformsAvailable = function() {
            // Memoize previously returned value
            if (typeof this._threeDTransformsAvailable !== 'undefined') {
                return this._threeDTransformsAvailable;
            }

            var div, style;

            try {
                this._threeDTransformsAvailable = false;

                if (hasOwnProp.call(window, 'styleMedia')) {
                    this._threeDTransformsAvailable = window.styleMedia.matchMedium('(-webkit-transform-3d)');

                } else if (hasOwnProp.call(window, 'media')) {
                    this._threeDTransformsAvailable = window.media.matchMedium('(-webkit-transform-3d)');
                }

                // chrome returns all the values as true, but doesn't actually have 3d support
                if (!this._threeDTransformsAvailable) {
                    if (!(style = document.getElementById('supportsThreeDStyle'))) {
                        style = document.createElement('style');
                        style.id = 'supportsThreeDStyle';
                        style.textContent = '@media (transform-3d),(-o-transform-3d),(-moz-transform-3d),(-ms-transform-3d),(-webkit-transform-3d) { #supportsThreeD { height:3px } }';
                        document.querySelector('head').appendChild(style);
                    }

                    if (!(div = document.querySelector('#supportsThreeD'))) {
                        div = document.createElement('div');
                        div.id = 'supportsThreeD';
                        document.body.appendChild(div);
                    }
                    this._threeDTransformsAvailable = (div.offsetHeight === 3) || style.style['MozTransform'] !== undefined || style.style['WebkitTransform'] !== undefined;
                }

                return this._threeDTransformsAvailable;
            } catch (e) {
                return false;
            }
        };

        /**
         * Detects whether or not the browser understands the HTML5 Canvas API.
         * @returns {Boolean} true if the browser supports canvas.
         * @name module:ac-feature.canvasAvailable
         * @kind function
         */
        feature.canvasAvailable = function() {
            // Memoize previously returned value
            if (typeof this._canvasAvailable !== 'undefined') {
                return this._canvasAvailable;
            }

            var canvas = document.createElement('canvas');

            this._canvasAvailable = !!(typeof canvas.getContext === 'function' && canvas.getContext('2d'));
            return this._canvasAvailable;
        };

        /**
         * Returns whether the browser supports HTML5 sessionStorage, and
         * does not have privacy mode enabled or cookies turned off.
         * @returns {Boolean} true if the browser supports sessionStorage
         * @name module:ac-feature.sessionStorageAvailable
         * @kind function
         */
        feature.sessionStorageAvailable = function() {
            // Memoize previously returned value
            if (typeof this._sessionStorageAvailable !== 'undefined') {
                return this._sessionStorageAvailable;
            }

            try {
                if (typeof window.sessionStorage !== 'undefined' && typeof window.sessionStorage.setItem === 'function') {
                    window.sessionStorage.setItem('ac_browser_detect', 'test');
                    this._sessionStorageAvailable = true;
                    window.sessionStorage.removeItem('ac_browser_detect', 'test');
                } else {
                    this._sessionStorageAvailable = false;
                }
            } catch (e) {
                this._sessionStorageAvailable = false;
            }
            return this._sessionStorageAvailable;
        };

        /**
         * Returns whether the browser has cookies enabled.
         * @returns {Boolean} true if cookies are enabled.
         * @name module:ac-feature.cookiesAvailable
         * @kind function
         */
        feature.cookiesAvailable = function() {
            // Memoize previously returned value
            if (typeof this._cookiesAvailable !== 'undefined') {
                return this._cookiesAvailable;
            }
            this._cookiesAvailable = (hasOwnProp.call(document, 'cookie') && !!navigator.cookieEnabled) ? true : false;
            return this._cookiesAvailable;
        };


        // Some devices swap the width/height when in landscape, so we want to make
        // sure we're always reporting width as the lesser value. Except when the
        // device isn't orientable, then we want to honor window.screen.width.
        /** @ignore */
        feature.__normalizedScreenWidth = function() {
            // We only care if the device is orientable
            if (typeof window.orientation === 'undefined') {
                return window.screen.width;
            }
            return window.screen.width < window.screen.height ? window.screen.width : window.screen.height;
        };

        /**
         * Tests for touch support on the device.
         * DocumentTouch is specific to Firefox <25 support.
         * @returns {Boolean} true if the device supports touch.
         * @name module:ac-feature.touchAvailable
         * @kind function
         */
        feature.touchAvailable = function() {
            return !!(('ontouchstart' in window) || window.DocumentTouch && document instanceof window.DocumentTouch);
        };

        /**
         * Attempts to determine if device is a desktop. The test is based on the assumptions
         * that desktop machines don't support touch and aren't orientable
         * @returns {Boolean} true if device has no support for touch and orientation
         * @name module:ac-feature.isDesktop
         * @kind function
         */
        feature.isDesktop = function() {
            if (!this.touchAvailable() && !window.orientation) {
                return true;
            }
            return false;
        };

        /**
         * Attempts to determine if device is handheld. e.g. phones and iPod Touches.
         * The test is based on the value of module:ac-feature.isDesktop() and
         * if the device screen width is less than or equal to 480 pixels.
         * @returns {Boolean} true if the device is determined to be handheld
         * @name module:ac-feature.isHandheld
         * @kind function
         */
        feature.isHandheld = function() {
            return !this.isDesktop() && !this.isTablet();
        };

        /**
         * Attempts to determine if device is a tablet. i.e. iPad or Nexus 7.
         * The test is based on the value of module:ac-feature.isDesktop() and
         * if the device screen width is greater than 480 pixels.
         * @returns {Boolean} true if the device is determined to be a tablet
         * @name module:ac-feature.isTablet
         * @kind function
         */
        feature.isTablet = function() {
            return !this.isDesktop() && this.__normalizedScreenWidth() > 480;
        };

        /**
         * Attempts to determine whether the display is retina.
         * @returns {Boolean} true if DPR is determined to be greater than or equal to 1.5
         * @name module:ac-feature.isRetina
         * @kind function
         */
        feature.isRetina = function() {
            // Vendor prefixes and media queries for DPR detection are a mess
            var mediaQueryStrings = [
                'min-device-pixel-ratio:1.5',
                '-webkit-min-device-pixel-ratio:1.5',
                'min-resolution:1.5dppx',
                'min-resolution:144dpi',
                'min--moz-device-pixel-ratio:1.5'
            ];
            var i;

            // Use devicePixelRatio if available
            if (window.devicePixelRatio !== undefined) {
                if (window.devicePixelRatio >= 1.5) {
                    return true;
                }

                // Else resort to matchMedia
            } else {
                for (i = 0; i < mediaQueryStrings.length; i += 1) {
                    if (window.matchMedia('(' + mediaQueryStrings[i] + ')').matches === true) {
                        return true;
                    }
                }
            }

            // Otherwise return false
            return false;
        };

        /**
         * Browser support for SVG in background images very closely matches that of SVG in <img> tags.
         * Detecting this feature checks for support as both inline and background images.
         * @returns {Boolean} true if SVG support is available
         * @name module:ac-feature.svgAvailable
         * @kind function
         */
        feature.svgAvailable = function() {
            return document.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#Image', '1.1');
        };

        module.exports = feature;

    }, {
        "./ac-feature/cssPropertyAvailable": 307,
        "./ac-feature/localStorageAvailable": 308
    }],
    307: [function(require, module, exports) {
        'use strict';

        var style = null;
        var prefixes = null;
        var preFixes = null;
        var css = null;

        /**
         * Sets all the vendor specific style property to value on element.
         * @param {String} property The CSS property to test, can be of the form: webkitBorderRadius, mozBorderRadius, etc.; borderRadius -webkit-border-radius, -moz-border-radius, etc.; border-radius
         * @returns true if the current browser supports the given CSS property, otherwise, returns false.
         * @name module:ac-feature.cssPropertyAvailable
         * @kind function
         */
        module.exports = function(property) {

            if (style === null) {
                style = document.createElement('browserdetect').style;
            }
            if (prefixes === null) {
                prefixes = ['-webkit-', '-moz-', '-o-', '-ms-', '-khtml-', ''];
            }
            if (preFixes === null) {
                preFixes = ['Webkit', 'Moz', 'O', 'ms', 'Khtml', ''];
            }
            if (css === null) {
                css = {};
            }

            property = property.replace(/([A-Z]+)([A-Z][a-z])/g, '$1\\-$2').replace(/([a-z\d])([A-Z])/g, '$1\\-$2').replace(/^(\-*webkit|\-*moz|\-*o|\-*ms|\-*khtml)\-/, '').toLowerCase();
            switch (property) {
                case 'gradient':
                    if (css.gradient !== undefined) {
                        return css.gradient;
                    }

                    property = 'background-image:';
                    var value1 = 'gradient(linear,left top,right bottom,from(#9f9),to(white));';
                    var value2 = 'linear-gradient(left top,#9f9, white);';

                    style.cssText = (property + prefixes.join(value1 + property) + prefixes.join(value2 + property)).slice(0, -property.length);
                    css.gradient = (style.backgroundImage.indexOf('gradient') !== -1);
                    return css.gradient;

                case 'inset-box-shadow':
                    if (css['inset-box-shadow'] !== undefined) {
                        return css['inset-box-shadow'];
                    }

                    property = 'box-shadow:';
                    var value = '#fff 0 1px 1px inset;';

                    style.cssText = prefixes.join(property + value);
                    css['inset-box-shadow'] = (style.cssText.indexOf('inset') !== -1);
                    return css['inset-box-shadow'];

                default:
                    var properties = property.split('-');
                    var length = properties.length;
                    var Property;
                    var i;
                    var j;

                    if (properties.length > 0) {
                        property = properties[0];
                        for (i = 1; i < length; i += 1) {
                            property += properties[i].substr(0, 1).toUpperCase() + properties[i].substr(1);
                        }
                    }
                    Property = property.substr(0, 1).toUpperCase() + property.substr(1);

                    if (css[property] !== undefined) {
                        return css[property];
                    }

                    for (j = preFixes.length - 1; j >= 0; j -= 1) {
                        if (style[preFixes[j] + property] !== undefined || style[preFixes[j] + Property] !== undefined) {
                            css[property] = true;
                            return true;
                        }
                    }
                    return false;
            }
        };

    }, {}],
    308: [function(require, module, exports) {
        'use strict';

        var isAvailable = null;

        /**
         * Returns whether the browser supports HTML5 localStorage, and
         * does not have privacy mode enabled or cookies turned off.
         * NOTE: Does not support Firefox <= 13 because of a bug where Firefox interprets a nonexistent item as null instead of undefined
         * @returns {Boolean} true if the browser supports localStorage
         * @name module:ac-feature.localStorageAvailable
         * @kind function
         */
        module.exports = function localStorageAvailable() {
            // Memoize previously returned value
            if (isAvailable === null) {
                isAvailable = !!(window.localStorage && window.localStorage.non_existent !== null);
            }
            return isAvailable;
        };

    }, {}],
    309: [function(require, module, exports) {
        module.exports = require(126)
    }, {}],
    310: [function(require, module, exports) {
        module.exports = require(258)
    }, {
        "./ac-object/clone": 311,
        "./ac-object/create": 312,
        "./ac-object/defaults": 313,
        "./ac-object/extend": 314,
        "./ac-object/getPrototypeOf": 315,
        "./ac-object/isDate": 316,
        "./ac-object/isEmpty": 317,
        "./ac-object/isRegExp": 318,
        "./ac-object/toQueryParameters": 319
    }],
    311: [function(require, module, exports) {
        module.exports = require(259)
    }, {
        "./extend": 314
    }],
    312: [function(require, module, exports) {
        module.exports = require(260)
    }, {}],
    313: [function(require, module, exports) {
        module.exports = require(261)
    }, {
        "./extend": 314
    }],
    314: [function(require, module, exports) {
        module.exports = require(262)
    }, {}],
    315: [function(require, module, exports) {
        module.exports = require(263)
    }, {}],
    316: [function(require, module, exports) {
        module.exports = require(264)
    }, {}],
    317: [function(require, module, exports) {
        module.exports = require(265)
    }, {}],
    318: [function(require, module, exports) {
        module.exports = require(266)
    }, {}],
    319: [function(require, module, exports) {
        module.exports = require(267)
    }, {
        "qs": 309
    }],
    320: [function(require, module, exports) {
        /**
         * @module ac-storage
         * @copyright 2014 Apple Inc. All rights reserved.
         *
         * @description
         * Wrapper for localStorage and sessionStorage for key/value pair storage outside of the page context.
         *
         * Instance of {@link Storage} with empty namespace.
         *
         */
        'use strict';

        var DEFAULT_NAMESPACE = 'ac-storage-';

        var Item = require('./ac-storage/Item');
        var Storage = require('./ac-storage/Storage');
        var storageAvailable = require('./ac-storage/Storage/storageAvailable');

        var ac_Storage = new Storage(DEFAULT_NAMESPACE);

        // Expose Item constructor
        ac_Storage.Item = Item;

        // Expose storageAvailable method
        ac_Storage.storageAvailable = storageAvailable;

        module.exports = ac_Storage;

    }, {
        "./ac-storage/Item": 321,
        "./ac-storage/Storage": 328,
        "./ac-storage/Storage/storageAvailable": 330
    }],
    321: [function(require, module, exports) {
        'use strict';

        var ac_adler32 = require('ac-checksum').adler32;
        var ac_Object = require('ac-object');
        var apis = require('./Item/apis');
        var createExpirationDate = require('./Item/createExpirationDate');
        var encoder = require('./Item/encoder');

        var DAY = 1000 * 60 * 60 * 24; // 1000ms * 60s * 60m * 24hr
        var DEFAULT_DAYS_TO_EXPIRE_IN = 30; // in days

        /**
         * Constructor for objects that contain key and value information for the purpose
         * of storing after the page context unloads. Has additional features as well, such
         * as mimicking cookie expiration, invalidating the value based on a provided checksum
         * and saving various other metadata.
         *
         * Value is allowed to be any object that can be stringified into JSON and parsed back
         * again. It will not provide the object as a pointer to the same place on the disk, which
         * would no longer exist, but it does provide a new object containing the same owned properties.
         *
         * @constructor Item
         *
         * @param {String} key
         *
         * @property {String}  key            Protected; Storage key for this Item
         * @property {String}  checksum       String that describes information about the validity of this Item’s value.
         * @property {Mixed}   value          Value of this Item
         * @property {Integer} expirationDate Date after which this item will expire, as a timestamp
         * @property {Object}  metadata       Extra information that can be stored on this Item and used in other ways
         *
         */
        function Item(key) {
            if (!key || typeof key !== 'string') {
                throw 'ac-storage/Item: Key for Item must be a string';
            }

            // New Item has only a key until state is loaded or otherwise manipulated
            this._key = key;
            this._checksum = null;
            this._expirationDate = null;
            this._metadata = null;
            this._value = null;

            // Set to 30 days from now, as accurate as 1 day
            this.setExpirationDate(Item.createExpirationDate(DEFAULT_DAYS_TO_EXPIRE_IN));
        }

        Item.prototype = {
            /**
             * Save the state of this Item in storage
             *
             * @memberOf Item#
             *
             * @return {Boolean}
             */
            save: function() {
                var api;
                var stateObj;
                var value;
                var options = {};

                // Get the best available API for the options
                api = apis.best(options);

                // If an api to store on is available, use it!
                if (api) {
                    if (this.value() === null && typeof api.removeItem === 'function') {
                        return api.removeItem(this.key());

                    } else if (typeof api.setItem === 'function') {

                        // Get object that represents the state of the Item
                        stateObj = this.__state();

                        // Encode the state as a string
                        value = encoder.encode(stateObj);

                        // Store state in persistent storage
                        return api.setItem(this.key(), value, this.expirationDate());
                    }

                }

                return false;
            },


            /**
             * Load the state of this Item from storage
             *
             * @memberOf Item#
             *
             * @return {Boolean}
             *
             */
            load: function() {
                var api;
                var value;

                // Get the best available API
                api = apis.best();

                // If an api to load from is available, use it!
                if (api && typeof api.getItem === 'function') {
                    value = api.getItem(this.key());

                    // Update the state of this object based on value
                    this.__updateState(encoder.decode(value));

                    if (value === null || this.hasExpired()) {
                        // Update persistent storage to remove item
                        this.remove();

                        return false;

                    } else {

                        return true;
                    }

                } else {
                    return false;
                }
            },


            /**
             * Remove this item for storage, no matter which type of storage it was saved in
             *
             * @memberOf Item#
             *
             * @return {Boolean}
             *
             */
            remove: function() {
                var api;

                // Clear object state
                this.__updateState(null);

                // Get the best available API
                api = apis.best();

                // Remove the item for this key for the best available API.
                // Most likely if this browser had chosen best api for getItem it will be the same for removeItem
                return api.removeItem(this.key());
            },


            /**
             * Whether the state of this object is still valid
             *
             * @memberOf Item#
             *
             * @param {String} checksum Optional;
             *
             * @return {Boolean} Is the state still valid?
             *
             */
            hasExpired: function(checksum) {
                // Expired if expiration date is in the past (or right now)
                // or that checksum is no longer valid
                // false means session storage, so it’s valid if it exists and checksum is valid!
                if (((this.expirationDate() !== false) && (this.expirationDate() <= Date.now())) || !this.__checksumIsValid(checksum)) {
                    return true;
                }

                // We got this far! Item’s value is still good, as long as we loaded state history first.
                return false;
            },


            /**
             * Getter for `value` property. Removes Item and returns null if it has expired.
             *
             * @method
             * @memberOf Item#
             *
             * @param {String} checksum Optional;
             *
             * @return  {Mixed} value `null` if value hasExpired
             *
             */
            value: function(checksum) {
                // If value is not valid anymore
                if (this.hasExpired(checksum)) {
                    this.remove();
                }

                // Return value. If it has expired, value will be `null`
                return this._value;
            },

            /**
             * @module 	ac-storage.Item#setValue
             * @desc 	Sets the current value for this item.
             * Note there are no validity checks in place
             *
             * @function
             *
             * @param {Object|null} value
             **/
            setValue: function(value) {
                this._value = value;
            },


            /**
             * Setter for `checksum` property
             *
             * @method
             * @memberOf Item#
             *
             * @param  {String} checksum A string that represents all the information in a particular syntax that needs to remain consistent for the state of this Item to remain valid. This string is ran through the Adler32 algorithm to save space in storage.
             *
             */
            setChecksum: function(checksum) {
                if (checksum === null) {
                    this._checksum = checksum;
                } else if (typeof checksum === 'string' && checksum !== '') {
                    this._checksum = ac_adler32(checksum);
                } else {
                    throw 'ac-storage/Item#setChecksum: Checksum must be null or a string';
                }
            },

            /**
             * @module ac-storage.Item#checksum
             * @function
             *
             * @returns {String} Returns an Adler32 encoded string representing the checksum for this object
             */
            checksum: function() {
                return this._checksum;
            },


            /**
             * Setter for `expirationDate` property
             *
             * @method
             * @memberOf Item#
             *
             * @param  {Mixed} expirationDate Set the expiration date to a certain day in the future. Use a Date object, a date string, or a timestamp to define a date. Use `false` to save this Item just for the user’s session.
             *
             */
            setExpirationDate: function(expirationDate) {
                if (expirationDate === null) {
                    expirationDate = Item.createExpirationDate(DEFAULT_DAYS_TO_EXPIRE_IN);
                }

                // False means use sessionStorage
                if (expirationDate !== false) {
                    // Parse date string to timestamp
                    if (typeof expirationDate === 'string') {
                        expirationDate = new Date(expirationDate).getTime();
                    }

                    // Parse date object to timestamp
                    if (expirationDate && typeof expirationDate.getTime === 'function') {
                        expirationDate = expirationDate.getTime();
                    }

                    // Validate as timestamp, which is really just a number. 0 is considered invalid as new Date(null).getTime() === 0
                    if (!expirationDate || isNaN(expirationDate)) {
                        throw 'ac-storage/Item: Invalid date object provided as expirationDate';
                    }

                    // Round down expiration date to midnight (UTC timezone)
                    expirationDate -= expirationDate % DAY;

                    // Expiring today or in the past is treated as session storage
                    if (expirationDate <= Date.now()) {
                        expirationDate = false;
                    }
                }

                // Update expiration date in context
                this._expirationDate = expirationDate;
            },

            /**
             * @module ac-storage.Item#experationDate
             * @function
             *
             * @returns {Date|String|Boolean} Returns a Date object, a date string, or a timestamp to define a date. `false` is means this Item is saved only for the current session.
             */
            expirationDate: function() {
                return this._expirationDate;
            },


            /**
             * Represent the state of this Item as an object
             *
             * @memberOf Item#
             * @private
             * @ignore
             *
             * @return {Object} Object that represents the state of the Item, for storing
             */
            __state: function() {
                var stateObj = {};

                stateObj.checksum = this.checksum();
                stateObj.expirationDate = this.expirationDate();
                stateObj.metadata = this.metadata();
                stateObj.value = this.value();

                return stateObj;
            },


            /**
             * Update this item based on a stateObj. Used for loading.
             *
             * @memberOf Item#
             * @private
             * @ignore
             *
             * @param  {Object} stateObj Object that represents the state of the Item. Use `null` to clear state (retains key).
             *
             */
            __updateState: function(stateObj) {
                var prop;
                var setter;

                // For clearing out state
                if (stateObj === null) {
                    stateObj = {
                        checksum: null,
                        expirationDate: null,
                        metadata: null,
                        value: null
                    };
                }

                // For every proper in the state object
                for (prop in stateObj) {
                    // Figure out setter name
                    setter = 'set' + prop.charAt(0).toUpperCase() + prop.slice(1);

                    // If a setter exists for this prop
                    if (typeof this[setter] === 'function') {

                        // Set the new value for the property
                        this[setter](stateObj[prop]);
                    }
                }
            },


            /**
             * Update this item based on a stateObj. Used for loading.
             *
             * @memberOf Item#
             * @private
             * @ignore
             *
             * @param  {String} checksum Checksum value to check against checksum in state
             *
             */
            __checksumIsValid: function(checksum) {
                // If a checksum was passed
                if (checksum) {

                    // Convert to Adler32 checksum format first
                    checksum = ac_adler32(checksum);

                    // If the Item’s state does not have a checksum
                    if (!this.checksum()) {
                        throw 'ac-storage/Item: No checksum exists to determine if this Item’s value is valid. Try loading context from persistent storage first.';

                        // If they are exactly equal, our Item’s value is still valid
                    } else if (checksum === this.checksum()) {
                        return true;
                    }

                    // If we’ve made it this far, then our value is no longer valid :[
                    return false;

                    // We were not expecting a checksum to exist in the state because we didn’t pass one!
                } else if (this.checksum()) {
                    throw 'ac-storage/Item: No checksum passed, but checksum exists in Item’s state.';
                }

                return true;
            },


            /**
             *
             * @memberOf Item#
             * @private
             * @ignore
             *
             */
            setKey: function() {
                throw 'ac-storage/Item: Cannot set key /after/ initialization!';
            },

            /**
             * @module 	ac-storage.Item#key
             * @desc 	Returns the key used for this item
             *
             * @function
             * @returns {Object} Key used for this item
             **/
            key: function() {
                return this._key;
            },

            /**
             * @module ac-storage.Item#metadata
             * @function
             *
             * @returns {Object} Extra information that can be stored on this Item and used in other ways
             */
            metadata: function() {
                return this._metadata;
            },

            /**
             * @module 	ac-storage.Item#setMetadata
             * @function
             *
             * @param {Object} value User defined object which can be stored on in this Item for later use
             **/
            setMetadata: function(value) {
                this._metadata = value;
            }
        };



        /**
         * Getter for `key` property
         *
         * @method
         * @memberOf Item#
         * @name Item#key
         *
         * @return  {String} Key
         *
         */

        /**
         * Getter for `checksum` property
         *
         * @method
         * @memberOf Item#
         * @name Item#checksum
         *
         * @return  {String} checksum
         *
         */

        /**
         * Getter for `expirationDate` property
         *
         * @method
         * @memberOf Item#
         * @name Item#expirationDate
         *
         * @return  {Date} expirationDate
         *
         */

        /**
         * Getter for `metadata` property
         *
         * @method
         * @memberOf Item#
         * @name Item#metadata
         *
         * @return  {Object} metadata
         *
         */

        /**
         * Setter for `metadata` property
         *
         * @method
         * @memberOf Item#
         * @name Item#setMetadata
         *
         * @param  {Object} metadata
         *
         */

        /**
         * Setter for `value` property
         *
         * @method
         * @memberOf Item#
         * @name Item#setValue
         *
         * @param  {Mixed} value
         *
         */


        Item.createExpirationDate = createExpirationDate;

        module.exports = Item;

    }, {
        "./Item/apis": 322,
        "./Item/createExpirationDate": 325,
        "./Item/encoder": 326,
        "ac-checksum": 272,
        "ac-object": 310
    }],
    322: [function(require, module, exports) {
        'use strict';

        var ac_Log = require('ac-console').log;
        var api_localStorage = require('./apis/localStorage');
        var api_userData = require('./apis/userData');

        /**
         * Method to access Normalized Storage APIs for storing key/value pairs
         * in the browser for use after page context is unloaded.
         *
         * @namespace Item/apis
         *
         * @todo  {@link https://interactive-git.apple.com/Interactive-Interfaces/ac-storage/issues/21 | storage/Item/apis : If feature unavailable, remove from list}
         */
        var apis = {
            /**
             * List of available APIs for storing key/value pairs using
             *
             * @memberOf Item/apis
             * @private
             *
             * @type {Array}
             */
            _list: [
                api_localStorage,
                api_userData
            ],


            /**
             * Access the list of APIs
             *
             * @memberOf Item/apis
             *
             * @return {Array}
             */
            list: function() {
                return this._list;
            },


            /**
             * Run a method on all of the available APIs defined.
             *
             * @memberOf Item/apis
             *
             * @param  {String} method Name of the method to run
             *
             * @return {Array} An array of results for whatever the provided method returns for each api
             * @deprecated
             */
            all: function(method) {

                ac_Log('ac-storage/Item/apis.all: Method is deprecated');

                // Pass subsequent arguments to method
                var args = Array.prototype.slice.call(arguments, 1);

                if (typeof method !== 'string') {
                    throw 'ac-storage/Item/apis.all: Method name must be provided as a string';
                }

                var results = this.list().map(function(api) {
                    if (api.available()) {
                        if (typeof api[method] === 'function') {
                            return api[method].apply(api, args);
                        } else {
                            throw 'ac-storage/Item/apis.all: Method not available on api';
                        }
                    }

                    return false;
                });

                return results;
            },


            /**
             * Get the best API available to save storage on
             *
             * @memberOf Item/apis
             *
             * @return {Object} Normalized Storage API
             */
            best: function() {
                var best = null;

                this.list().some(function(api) {
                    if (api.available()) {
                        best = api;
                        return true;
                    }
                });

                return best;
            }
        };

        module.exports = apis;

    }, {
        "./apis/localStorage": 323,
        "./apis/userData": 324,
        "ac-console": 274
    }],
    323: [function(require, module, exports) {
        'use strict';

        var AC_Environment_Feature = require('ac-feature');

        var api = window.localStorage;
        var api_session = window.sessionStorage;

        var available;

        /**
         * Wrapper for the localStorage API
         *
         * @memberOf Item/apis
         * @namespace Item/apis/localStorage
         *
         * @see {@link https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Storage|MDN: DOM Storage guide}
         *
         */
        var api_localStorage = {

            name: 'localStorage',

            /**
             * Whether this API is available to use for this purpose.
             *
             * @memberOf Item/apis/localStorage
             *
             * @return {Boolean}
             */
            available: function() {
                // Prevent errors on Safari with "private mode" enabled.
                try {
                    localStorage.setItem('localStorage', 1);
                    localStorage.removeItem('localStorage');
                } catch (e) {
                    return false;
                }
                // then test normally, if no private-mode errors occur.
                if (available === undefined) {
                    available = AC_Environment_Feature.localStorageAvailable();
                }
                return available;
            },

            /**
             * Whether this API is available to use for this purpose.
             *
             * @memberOf Item/apis/localStorage
             *
             * @param  {String} key
             *
             * @return {String}
             */
            getItem: function(key) {
                return api.getItem(key) || api_session.getItem(key);
            },

            /**
             * Store a key/value pair.
             *
             * @memberOf Item/apis/localStorage
             *
             * @param  {String} key
             * @param  {String} Value
             * @param  {Date | Boolean} expirationDate The date on which this Item expires. False means valid only for session.
             *
             * @return {Boolean}
             */
            setItem: function(key, value, expirationDate) {
                // Session Storage
                if (expirationDate === false) {
                    api_session.setItem(key, value);

                    // Local Storage
                } else {
                    api.setItem(key, value);
                }

                return true;
            },

            /**
             * Remove an item from storage.
             *
             * @memberOf Item/apis/localStorage
             *
             * @param  {String} key
             *
             * @return {Boolean}
             */
            removeItem: function(key) {
                api.removeItem(key);
                api_session.removeItem(key);

                return true;
            }
        };

        module.exports = api_localStorage;

    }, {
        "ac-feature": 306
    }],
    324: [function(require, module, exports) {
        'use strict';

        var AC_Element = require('ac-dom-nodes');

        var DAY = 1000 * 60 * 60 * 24; // 1000ms * 60s * 60m * 24hr

        var storeID = 'ac-storage';
        var available;

        /**
         * Wrapper for the IE #userData API, which can be used to shim localStorage for IE < 8
         *
         * @memberOf Item/apis
         * @namespace Item/apis/userData
         *
         * @see {@link http://msdn.microsoft.com/en-us/library/ms531424|Microsoft.com: userData Behavior}
         *
         */
        var api_userData = {

            name: 'userData',

            /**
             * Whether this API is available to use for this purpose.
             *
             * @memberOf Item/apis/userData
             *
             * @return {Boolean}
             */
            available: function() {
                if (available === undefined) {
                    available = false;

                    // Requires a DOM be available
                    if (document && document.body) {
                        var el = this.element();

                        // IE7 returns typeof el.addBehavior as 'object', even though it is a function...
                        if (AC_Element.isElement(el) && el.addBehavior !== undefined) {
                            available = true;
                        }

                        // If userData is not available then remove the element from DOM.
                        if (available === false) {
                            this.removeElement();
                        }
                    } else {
                        throw 'ac-storage/Item/apis/userData: DOM must be ready before using #userData.';
                    }
                }

                return available;
            },

            /**
             * Whether this API is available to use for this purpose.
             *
             * @memberOf Item/apis/userData
             *
             * @param  {String} key
             *
             * @return {String}
             */
            getItem: function(key) {
                var el = this.element();

                // Load saved #userData attributes
                el.load(storeID);

                return el.getAttribute(key) || null;
            },

            /**
             * Store a key/value pair.
             *
             * @memberOf Item/apis/userData
             *
             * @param  {String} key
             * @param  {String} Value
             * @param  {Date | Boolean} expirationDate The date on which this Item expires. False means valid only for session.
             *
             * @return {Promise}
             */
            setItem: function(key, value, expirationDate) {
                var el = this.element();

                // Storage the value on the attribute
                el.setAttribute(key, value);

                // Session Storage
                if (expirationDate === false) {
                    // Set expiration date to tomorrow, as sessionStorage does not exist in #userData
                    expirationDate = new Date(Date.now() + DAY);
                }

                // Set expiration date
                if (expirationDate && typeof expirationDate.toUTCString === 'function') {
                    el.expires = expirationDate.toUTCString();
                }

                // Save the #userData attributes to the key
                el.save(storeID);

                return true;
            },

            /**
             * Remove an item from storage.
             *
             * @memberOf Item/apis/userData
             *
             * @param  {String} key
             *
             * @return {Promise}
             */
            removeItem: function(key) {
                var el = this.element();

                // Remove the attribute with persistent data
                el.removeAttribute(key);

                // Save the #userData to the key
                el.save(storeID);

                return true;
            },


            _element: null,
            /**
             * @inner
             */
            element: function() {
                if (this._element === null) {
                    this._element = document.createElement('meta');
                    this._element.setAttribute('id', 'userData');
                    this._element.setAttribute('name', 'ac-storage');
                    this._element.style.behavior = "url('#default#userData')";
                    document.getElementsByTagName('head')[0].appendChild(this._element);
                }

                return this._element;
            },

            removeElement: function() {
                if (this._element !== null) {
                    AC_Element.remove(this._element);
                }

                return this._element;
            }
        };

        module.exports = api_userData;

    }, {
        "ac-dom-nodes": 285
    }],
    325: [function(require, module, exports) {
        'use strict';

        var DAY = 1000 * 60 * 60 * 24; // 1000ms * 60s * 60m * 24hr

        /**
         * Figure out the expiration date based on the current date or the supplied date object,
         * and the amount of days until it is set to expire.
         *
         * @memberOf Item
         * @static
         *
         * @param  {Integer} days How many days from the fromDate do we want this to expire in?
         * @param  {Date|Integer} fromDate If not right now, when do we start couting? As a Date object or timestamp.
         *
         * @return {Integer} Timestamp
         *
         */
        var createExpirationDate = function(days, fromDate) {
            if (typeof days !== 'number') {
                throw 'ac-storage/Item/createExpirationDate: days parameter must be a number.';
            }

            // fromDate can be a Date object or timestamp
            if (fromDate === undefined || typeof fromDate === 'number') {
                fromDate = fromDate === undefined ? new Date() : new Date(fromDate);
            }

            if (typeof fromDate.toUTCString !== 'function' || fromDate.toUTCString() === 'Invalid Date') {
                throw 'ac-storage/Item/createExpirationDate: fromDate must be a date object, timestamp, or undefined.';
            }

            fromDate.setTime(fromDate.getTime() + (days * DAY));

            // Return as time stamp (e.g. 1322849543460)
            return fromDate.getTime();
        };


        module.exports = createExpirationDate;

    }, {}],
    326: [function(require, module, exports) {
        'use strict';

        var compressor = require('./encoder/compressor');

        /**
         * Compress an item’s state object before serializing for storage
         *
         * @memberOf Item
         * @namespace Item/encoder
         *
         * @type {Object}
         *
         */
        var encoder = {
            /**
             * Encode and compress JSON string to store state of this Item
             *
             * @memberOf Item/encoder
             *
             * @param {Object} stateObj Uncompressed state object
             *
             * @return {String} Compressed state object string
             */
            encode: function(stateObj) {
                var stateObjString;
                var compressedStateObj;

                compressedStateObj = compressor.compress(stateObj);

                try {
                    stateObjString = JSON.stringify(compressedStateObj);
                } catch (ignore) {}

                if (!this.__isValidStateObjString(stateObjString)) {
                    throw 'ac-storage/Item/encoder/encode: state object is invalid or cannot be saved as string';
                }

                return stateObjString;
            },


            /**
             * Decode and decompress JSON string to state object
             *
             * @memberOf Item/encoder
             *
             * @param {String} stateObjString Compressed state object as string
             *
             * @return {Object} Decompressed state object
             */
            decode: function(stateObjString) {
                var stateObj;
                var decompressedStateObj;

                if (!this.__isValidStateObjString(stateObjString)) {
                    if (stateObjString === undefined || stateObjString === null || stateObjString === '') {
                        return null;
                    }

                    throw 'ac-storage/Item/encoder/decode: state string does not contain a valid state object';
                }

                try {
                    stateObj = JSON.parse(stateObjString);
                } catch (ignore) {
                    throw 'ac-storage/Item/encoder/decode: Item state object could not be decoded';
                }

                decompressedStateObj = compressor.decompress(stateObj);

                return decompressedStateObj;
            },


            /**
             * Check if the state object string containts a valid state object
             *
             * @memberOf Item/encoder
             * @private
             * @ignore
             *
             * @param  {Mixed} stateObjString to be validated
             *
             * @return {Boolean} Is the argument passed in a valid state object?
             */
            __isValidStateObjString: function(stateObjString) {
                try {
                    if (stateObjString !== undefined && stateObjString.substring(0, 1) === '{') {
                        return true;
                    }
                    return false;
                } catch (e) {
                    return false;
                }

            }
        };

        module.exports = encoder;

    }, {
        "./encoder/compressor": 327
    }],
    327: [function(require, module, exports) {
        /**
         * Compress an item’s state object before serializing for storage
         *
         * @memberOf Item/encoder
         * @namespace Item/encoder/compressor
         *
         * @type {Object}
         *
         */

        var DAY = 1000 * 60 * 60 * 24; // 1000ms * 60s * 60m * 24hr
        var DATE_KEY = 14975; // number of days (rounded down) from Jan 01 2011

        var compressor = {

            mapping: {
                key: 'k',
                checksum: 'c',
                expirationDate: 'e',
                metadata: 'm',
                value: 'v'
            },

            /**
             * Compress object to save bytes when storing Item state
             *
             * @memberOf Item/encoder/compressor
             *
             * @param {Object} stateObj Uncompressed state object
             *
             * @return {Object} Compressed state object
             */
            compress: function(stateObj) {

                var compressedStateObj = {};
                var mapping = compressor.mapping;

                for (var prop in mapping) {

                    if (stateObj.hasOwnProperty(prop) && stateObj[prop]) {

                        if (prop === 'expirationDate') {
                            // convert the expiration date to days
                            var days = this.millisecondsToOffsetDays(stateObj[prop]);

                            compressedStateObj[mapping[prop]] = days;
                        } else {
                            compressedStateObj[mapping[prop]] = stateObj[prop];
                        }
                    }
                }

                return compressedStateObj;
            },

            /**
             * Compress object to restore Item state
             *
             * @memberOf Item/encoder/compressor
             *
             * @param {Object} stateObj Compressed state object
             *
             * @return {Object} Decompressed state object
             */
            decompress: function(compressedStateObj) {

                var stateObj = {};
                var mapping = compressor.mapping;


                for (var prop in mapping) {

                    if (compressedStateObj.hasOwnProperty(mapping[prop])) {

                        if (prop === 'expirationDate') {
                            // convert the expiration date back to milliseconds
                            var milliseconds = this.offsetDaysToMilliseconds(compressedStateObj[mapping[prop]]);

                            stateObj[prop] = milliseconds;
                        } else {
                            stateObj[prop] = compressedStateObj[mapping[prop]];
                        }
                    }

                }

                return stateObj;
            },

            /**
             * Convert milliseconds to days
             * Rounds down to the nearest day
             *
             * @memberOf Item/encoder/compressor
             *
             * @param  {Integer} number of milliseconds
             *
             * @return {Integer} number of days
             */
            millisecondsToOffsetDays: function(milliseconds) {
                return Math.floor(milliseconds / DAY) - DATE_KEY;
            },

            /**
             * Convert days to milliseconds
             *
             * @memberOf Item/encoder/compressor
             *
             * @param  {Integer} number of days
             *
             * @return {Integer} number of milliseconds
             */
            offsetDaysToMilliseconds: function(days) {
                return (days + DATE_KEY) * DAY;
            }
        };

        module.exports = compressor;

    }, {}],
    328: [function(require, module, exports) {
        'use strict';

        var ac_Object = require('ac-object');
        var api_localStorage = require('./Item/apis/localStorage');
        var registry = require('./Storage/registry');

        /**
         * Default options for Storage instances. Currently there are none.
         *
         * @memberOf Storage~
         * @private
         *
         * @type {Object}
         */
        var defaultOptions = {};

        /**
         * Wrapper for localStorage and sessionStorage for key/value pair storage outside of the page context.
         *
         * @constructor Storage
         *
         * @param {String} namespace
         * @param {Object} options Optional; Override default options if applicable
         *
         * @property {String} namespace Any item accessed through an instance of Storage will have this string prepending it’s key.
         * @property {Object} options Configuration object for this instance
         *
         */
        function Storage(namespace, options) {
            this._namespace = namespace || '';
            this._options = ac_Object.extend(ac_Object.clone(defaultOptions), options || {});
        }

        Storage.prototype = {
            /**
             * Get the value of an Item for a key from storage
             *
             * @memberOf Storage#
             *
             * @param {String} key
             *
             * @return {Mixed | null} Value of item for key
             */
            getItem: function(key) {
                // Get the Item object from the registry
                var item = this.__item(key);

                // Load the saved state from storage
                item.load();

                // Return the item’s value
                return item.value();
            },



            /**
             * Store a value for a key.
             *
             * @memberOf Storage#
             *
             * @param {String} key
             * @param {Mixed} value Value can be any simple object. It will be stringified into JSON, then parse back when retrieved.
             *
             * @return {Boolean}
             */
            setItem: function(key, value) {

                // Get the Item object from the registry
                var item = this.__item(key);

                if (value === undefined) {
                    throw 'ac-storage/Storage#setItem: Must provide value to set key to. Use #removeItem to remove.';
                }

                // Update item’s state
                item.setValue(value);

                return item.save();
            },



            /**
             * Remove an item from storage
             *
             * @memberOf Storage#
             *
             * @param {String} key
             *
             * @return {Boolean}
             */
            removeItem: function(key) {
                // Get the Item object from the registry
                var item = this.__item(key);

                // Remove item from registry
                registry.remove(item.key(), true);

                // Remove the item from storage
                return item.save();
            },

            // /**
            //  * Removes all localStorage values that have expired.
            //  * Also removes any #userData values with the same key.
            //  *
            //  * @memberOf Storage
            //  * @name removeExpired
            //  * @method
            //  *
            // */
            removeExpired: function() {
                var item;
                var i;

                // Expiration is only relevant for localStorage and #userData,

                if (api_localStorage.available()) {

                    // Iterate over all localStorage items
                    for (i = 0; i < window.localStorage.length; i++) {
                        // Get the item object from the key
                        item = this.__item(window.localStorage.key(i));

                        //Remove if expired
                        if (item.hasExpired() && JSON.parse(window.localStorage[window.localStorage.key(i)]).v !== 'undefined') {
                            item.remove();
                        }
                    }

                } else {

                    // Iterate over all userData items
                    var storeID = 'ac-storage';
                    var el = document.getElementById('userData');
                    el.load(storeID);
                    var attr;
                    var doc = el.xmlDocument; // the reference to the XMLDocument
                    var attributes = doc.firstChild.attributes; // the root element will always be the firstChild of the XMLDocument
                    var len = attributes.length;

                    i = -1;

                    while (++i < len) {
                        attr = attributes[i];
                        item = this.__item(attr.nodeName);
                        if (item.hasExpired() && JSON.parse(attr.nodeValue).v !== 'undefined') {
                            item.remove();
                        }
                    }
                }

            },

            /**
             * Gets Item instance for key using registry, pre-pending with namespace
             *
             * @memberOf Storage#
             * @private
             *
             * @param  {String} key
             *
             * @return {Object} Instance of {@link Item} for the key provided, prepended by namespace.
             *
             */
            __item: function(key) {
                if (typeof key !== 'string' || key === '') {
                    throw 'ac-storage/Storage: Key must be a String.';
                }

                // Get the Item object from the registry
                var item = registry.item(this.namespace() + key);

                return item;
            },

            /// Explicit Accessors
            /**
             * @module ac-storage.Storage#namespace
             * @function
             *
             * @returns {String} The namespace for this Storage object, which will be prepended to any keys
             */
            namespace: function() {
                return this._namespace;
            },

            /**
             * @module 	ac-storage.Storage#setNamespace
             * @desc 	Sets the namespace for this Storage object, which will be prepended to any keys
             * @function
             *
             * @param {String} value
             **/
            setNamespace: function(value) {
                this._namespace = value;
            },

            /**
             * @module ac-storage.Storage#options
             * @function
             *
             * @returns {Object} options Configuration object for this instance
             */
            options: function() {
                return this._namespace;
            },

            /**
             * @module 	ac-storage.Storage#setOptions
             * @desc 	Sets the Configuration object for this instance
             * @function
             *
             * @param {Object} value
             **/
            setOptions: function(value) {
                this._namespace = value;
            }
        };

        module.exports = Storage;

    }, {
        "./Item/apis/localStorage": 323,
        "./Storage/registry": 329,
        "ac-object": 310
    }],
    329: [function(require, module, exports) {
        'use strict';

        var Item = require('../Item');

        var items = {};

        /**
         * Singleton for storing instances of items for use with storage/storage.
         * Not used when referencing storage/Item directly.
         *
         * @memberOf Storage
         * @namespace Storage/registry
         *
         */
        var registry = {
            /**
             * Get an item from the registry by key. If the item does not exist
             * in the registry yet, it will create a new Item with that key and
             * load it’s state from storage.
             *
             * @memberOf Storage/registry
             *
             * @param  {String} key
             *
             * @return {Item}
             *
             */
            item: function(key) {
                var item = items[key];

                if (!item) {
                    item = this.register(key);
                }

                return item;
            },

            /**
             * Register a new Item for easy lookup later
             *
             * @memberOf Storage/registry
             *
             * @param  {String} key
             *
             * @return {Item}
             *
             */
            register: function(key) {
                var item = items[key];

                if (!item) {
                    // Create a new Item in page memory
                    item = new Item(key);

                    // Add item to registry list
                    items[key] = item;
                }

                return item;
            },

            /**
             * Clear the whole registry
             *
             * @memberOf Storage/registry
             *
             * @param {Boolean} alsoRemoveItemFromStorage Default is `false`; Whether we should manually clear the page memory as well.
             *
             * @return {Promise}
             */
            clear: function(alsoRemoveItemFromStorage) {
                var key;

                for (key in items) {
                    this.remove(key, alsoRemoveItemFromStorage);
                }

                return true;
            },

            /**
             * Remove an item from the registry
             *
             * @memberOf Storage/registry
             *
             * @param {String} key
             * @param {Boolean} alsoRemoveItemFromStorage Default is `false` Whether we should manually clear the page memory as well.
             *
             * @return {Promise}
             */
            remove: function(key, alsoRemoveItemFromStorage) {
                var item = items[key];

                if (item && !!alsoRemoveItemFromStorage) {
                    item.remove();
                }

                items[key] = null;

                return true;
            }
        };

        module.exports = registry;

    }, {
        "../Item": 321
    }],
    330: [function(require, module, exports) {
        'use strict';

        var apis = require('../Item/apis');

        var available;

        /**
         *
         * @namespace Storage
         *
         * @return {Boolean} Whether or not there are any available APIs for which to store persistent data.
         *
         */

        module.exports = function storageAvailable() {

            // Memoize
            if (available !== undefined) {
                return available;
            }

            // If there is no best API, then assume no APIs are available.
            available = !!apis.best();

            return available;
        };

    }, {
        "../Item/apis": 322
    }],
    "++O3BW": [function(require, module, exports) {
        /**
         * @module ac-analytics
         * @copyright 2015 Apple Inc. All rights reserved.
         */
        module.exports = {
            observer: {
                Audio: require('./ac-analytics/observer/Audio'),
                Click: require('./ac-analytics/observer/Click'),
                Event: require('./ac-analytics/observer/Event'),
                Exit: require('./ac-analytics/observer/Exit'),
                Gallery: require('./ac-analytics/observer/Gallery'),
                Link: require('./ac-analytics/observer/Link'),
                Overlay: require('./ac-analytics/observer/Overlay'),
                Page: require('./ac-analytics/observer/Page'),
                Section: require('./ac-analytics/observer/Section'),
                Video: require('./ac-analytics/observer/Video')
            },
            regions: require('./ac-analytics/regions/regions'),
            createBasicObserverSuite: require('./ac-analytics/factory/basicObserverSuite').create,
            reset: require('./ac-analytics/reset')
        };
    }, {
        "./ac-analytics/factory/basicObserverSuite": "eT/lVE",
        "./ac-analytics/observer/Audio": "0uVCsT",
        "./ac-analytics/observer/Click": "smIHK0",
        "./ac-analytics/observer/Event": "FP42yW",
        "./ac-analytics/observer/Exit": "G1nVnI",
        "./ac-analytics/observer/Gallery": "7OkBs0",
        "./ac-analytics/observer/Link": "csLHIR",
        "./ac-analytics/observer/Overlay": "ZDCq+L",
        "./ac-analytics/observer/Page": "2ltmNh",
        "./ac-analytics/observer/Section": "ft2q1p",
        "./ac-analytics/observer/Video": "EVr9gK",
        "./ac-analytics/regions/regions": "DxeItO",
        "./ac-analytics/reset": "DebV0p"
    }],
    "@marcom/ac-analytics": [function(require, module, exports) {
        module.exports = require('++O3BW');
    }, {}],
    "@marcom/ac-analytics/Queue": [function(require, module, exports) {
        module.exports = require('ZTQIFU');
    }, {}],
    "ZTQIFU": [function(require, module, exports) {
        'use strict';

        var proto;
        var ac_Array = require('@marcom/ac-array');
        var errorHandler = require('./error-handler/ErrorHandler');
        var ac_Storage = require('ac-storage');
        var STORAGE_KEY = require('./storageKey').analyticsQueue;

        function Queue() {
            this._storage = ac_Storage;
            this._arr = [];
            this._length = 0;
        }

        proto = Queue.prototype;

        proto.add = function(item) {
            if (!item) {
                errorHandler.log('Queue', 'add', item + ' is not a valid object');
            }

            if (errorHandler.exception) {
                return;
            }

            this._arr.push(item);
            this._updateQueueSize();
        };

        proto.remove = function() {
            if (this.size() > 0) {
                this._arr.shift();
                this._updateQueueSize();
            }
        };

        proto.reset = function() {
            this._arr = [];
            this._length = 0;
        };

        proto.peek = function() {
            if (this.size() > 0) {
                return this._arr[0];
            }
        };

        proto.isEmpty = function() {
            return (this.size() === 0);
        };

        proto.size = function() {
            return this._length;
        };

        proto.load = function() {
            var analyticsData = this._storage.getItem(STORAGE_KEY);

            if (Array.isArray(analyticsData)) {
                this._arr = analyticsData;
                this._storage.removeItem(STORAGE_KEY);
                this._updateQueueSize();
            }
        };

        proto.save = function() {
            this._storage.setItem(STORAGE_KEY, this._arr);
            this.reset();
        };

        proto.collect = function() {
            var analyticsQueue = this._arr;
            var analyticsData = this._storage.getItem(STORAGE_KEY);

            if (Array.isArray(analyticsData)) {
                var temp = analyticsData;
                analyticsQueue = temp.concat(analyticsQueue);
            }
            this._storage.setItem(STORAGE_KEY, analyticsQueue);
            this.reset();
        };

        proto.canSave = function() {
            return this._storage.storageAvailable();
        };

        proto._updateQueueSize = function() {
            this._length = this._arr.length;
        };

        module.exports = Queue;

    }, {
        "./error-handler/ErrorHandler": "yoExqy",
        "./storageKey": "ntdzZF",
        "@marcom/ac-array": 2,
        "ac-storage": 320
    }],
    "vBwaVP": [function(require, module, exports) {
        'use strict';

        var proto;

        var Deferred = require('ac-deferred').Deferred;
        var Queue = require('./Queue');
        var plugins = require('./plugins/plugins');
        var translator = require('./translator/translator');
        var errorHandler = require('./error-handler/ErrorHandler');
        var moduleName = 'Tracker';

        // A singleton that collects, queues and runs an analytics queue asynchronously
        function Tracker(plugin) {

            if (typeof plugins[plugin] === 'function') {
                this.plugin = new plugins[plugin]();
            } else {
                errorHandler.log(moduleName, null, 'Could not create a Tracker. "' + plugin + '" is not a valid plugin');
            }

            if (errorHandler.exception) {
                return;
            }

            this.paused = false;

            this._queue = new Queue();

            // If there is something left in the storage that we want to flush out
            this.resume();
        }

        proto = Tracker.prototype;

        // Adds an analytics request to the queue and runs the queue
        proto.track = function(request) {
            var translatedRequest;

            if (!request || typeof request !== 'object' || !request.type) {
                errorHandler.log(moduleName, 'track', request + ' is not a valid request object');
            }

            if (errorHandler.exception) {
                return;
            }

            // Translate the request into a generic format
            translatedRequest = translator.translate(request);

            // Translate the generic request into plugin (sCode) specific format
            translatedRequest = this.plugin.translate(translatedRequest);
            this._queue.add(translatedRequest);

            if (this.paused === true) {
                this._queue.collect();
                return;
            }

            this._run();
        };

        // Checks if the Tracker is paused
        proto.isPaused = function() {
            return this.paused;
        };

        // Resumes a paused analytics queue and sets paused property of the Tracker to false
        proto.resume = function() {

            this._queue.load();

            var queueSize = this._queue.size();

            if (queueSize === 0) {
                return;
            }

            this.paused = false;

            this._run();
        };

        // Runs the analytics queue by submitting requests to the analytics plugin in sync or async
        proto._run = function() {
            var promise;

            if (this._queue.size() === 0) {
                return;
            }

            // Adding logic to run requests synchronously
            var request = this._queue.peek();

            var options = request.options || {};

            // If we didnt find async option then we assume async is true
            if (typeof options.async === 'undefined') {
                options.async = true;
            }

            if (options.async === false) {
                promise = this.sync(this.send.bind(this));
            } else {
                promise = this.async(this.send.bind(this));
            }

            promise.then(function() {
                if (!this.paused && this._queue.size() > 0) {
                    this._run();
                }

            }.bind(this));

        };

        // Sends the queue for processing single request at a time
        proto.send = function() {

            if (typeof this.plugin.submit !== 'function') {
                errorHandler.log(moduleName, 'send', 'provided plugin does not contain a valid submit method');
            }

            if (errorHandler.exception) {
                return;
            }

            if (this._queue.size() === 0) {
                return;
            }

            var request = this._queue.peek();

            this.plugin.submit(request);
            this._queue.remove();
        };

        // Pauses an analytics queue and sets paused property of the Tracker to true
        proto.pause = function() {

            if (this.paused === true) {
                return;
            }

            if (!this.canPause()) {
                return;
            }

            if (this._queue.size() > 0) {
                this._queue.save();
            }

            this.paused = true;
        };

        // Checks if the Tracker can be paused
        proto.canPause = function() {

            return this._queue.canSave();
        };

        // Runs a function in a zero second setTimeout
        proto.async = function(callback) {

            var defer = new Deferred();

            if ((!callback) || (typeof(callback) !== 'function')) {
                errorHandler.log(moduleName, 'async', 'Provided callback "' + callback + '" is not a function');
            }

            if (errorHandler.exception) {
                return;
            }

            setTimeout(function() {

                callback();

                defer.resolve();

            }, 0);

            return defer.promise();
        };

        // Executes a callback synchronously
        proto.sync = function(callback) {

            var defer = new Deferred();

            if ((!callback) || (typeof(callback) !== 'function')) {
                errorHandler.log(moduleName, 'sync', 'Provided callback "' + callback + '" is not a function');
            }

            if (errorHandler.exception) {
                return;
            }

            callback();

            defer.resolve();

            return defer.promise();
        };

        module.exports = Tracker;

    }, {
        "./Queue": "ZTQIFU",
        "./error-handler/ErrorHandler": "yoExqy",
        "./plugins/plugins": "kyzDBL",
        "./translator/translator": "eq7uW9",
        "ac-deferred": 167
    }],
    "@marcom/ac-analytics/Tracker": [function(require, module, exports) {
        module.exports = require('vBwaVP');
    }, {}],
    "FmX+Kz": [function(require, module, exports) {
        'use strict';

        var proto;

        var ac_DOMNodes = require('@marcom/ac-dom-nodes');
        var ac_DOMEvents = require('@marcom/ac-dom-events');
        var errorHandler = require('../error-handler/ErrorHandler');

        var moduleName = 'TouchController';

        /**
         * Tracks an actual click on a DOM element on touch devices.
         * @constructor TouchController
         * @param {object} element A DOM element
         * @requires module:ac-dom-nodes
         * @requires module:ac-dom-events
         * @requires module:ErrorHandler
         */

        function TouchController(element, eventCallback) {

            if (!ac_DOMNodes.isElement(element)) {
                errorHandler.log(moduleName, null, element + ' is not a valid DOM element');
            }

            if (typeof eventCallback !== 'function') {
                errorHandler.log(moduleName, null, eventCallback + ' is not a valid function');
            }

            if (errorHandler.exception) {
                return;
            }

            this._element = element;

            this._eventCallback = eventCallback;

            this.addEventListener();
        }

        proto = TouchController.prototype;

        /**
         * @name TouchController#addEventListener
         *
         * @function
         *
         * @desc Adds a touchstart event listener to a DOM element.
         */
        proto.addEventListener = function() {
            ac_DOMEvents.addEventListener(this._element, 'touchstart', this._onTouchStart.bind(this));
        };

        /**
         * @name TouchController#removeEventListener
         *
         * @function
         *
         * @desc Removes a touchstart event listener from a DOM element.
         */
        proto.removeEventListener = function() {
            ac_DOMEvents.removeEventListener(this._element, 'touchstart', this._boundOnTouchStart);
            ac_DOMEvents.removeEventListener(this._element, 'touchmove', this._boundOnTouchMove);
            ac_DOMEvents.removeEventListener(this._element, 'touchend', this._boundOnTouchEnd);
        };

        /**
         * @name TouchController#_onTouchStart
         *
         * @private
         *
         * @desc Listens to the touchstart event.
         */
        proto._onTouchStart = function(e) {
            this.moved = false;

            this._boundOnTouchMove = this._onTouchMove.bind(this);
            this._boundOnTouchEnd = this._onTouchEnd.bind(this);

            ac_DOMEvents.addEventListener(this._element, 'touchmove', this._boundOnTouchMove);
            ac_DOMEvents.addEventListener(this._element, 'touchend', this._boundOnTouchEnd);
        };

        /**
         * @name TouchController#_onTouchMove
         *
         * @private
         *
         * @desc Listens to the touchmove event.
         */
        proto._onTouchMove = function(e) {
            this.moved = true;
        };

        /**
         * @name TouchController#_onTouchEnd
         *
         * @private
         *
         * @desc Listens to the touchend event.
         */
        proto._onTouchEnd = function(e) {
            ac_DOMEvents.removeEventListener(this._element, 'touchmove', this._boundOnTouchMove);
            ac_DOMEvents.removeEventListener(this._element, 'touchend', this._boundOnTouchEnd);

            if (!this.moved) {
                this._eventCallback(e);
            }
        };

        /**
         * @name TouchController#destroy
         *
         * @desc Kills the touch observer events and properties.
         */
        proto.destroy = function() {
            this.removeEventListener();
            this._element = null;
            this._eventCallback = null;
            this._boundOnTouchStart = null;
        };

        module.exports = TouchController;
    }, {
        "../error-handler/ErrorHandler": "yoExqy",
        "@marcom/ac-dom-events": 13,
        "@marcom/ac-dom-nodes": 37
    }],
    "@marcom/ac-analytics/controller/Touch": [function(require, module, exports) {
        module.exports = require('FmX+Kz');
    }, {}],
    "DckvZc": [function(require, module, exports) {
        (function() {
            'use strict';

            // parse options from a data-attribute string
            // returns an object with options
            // assumes string is colon/comma separated
            // e.g. data-foo="color:blue,format:landscape"
            function dataStringToObject(data) {
                var options;
                var optionsObj = {};
                var splitOption;

                if (data && typeof data === 'string' && data.length > 0) {
                    options = data.split(',');
                    if (options && options.length > 0) {
                        options.forEach(function(option) {
                            splitOption = option.split(':');
                            optionsObj[splitOption[0].trim()] = (splitOption[1]) ? splitOption[1].trim() : splitOption[1];
                        });
                    }
                }

                return optionsObj;
            }

            module.exports = {
                dataStringToObject: dataStringToObject
            };
        }());
    }, {}],
    "@marcom/ac-analytics/data-attr/helper": [function(require, module, exports) {
        module.exports = require('DckvZc');
    }, {}],
    "yoExqy": [function(require, module, exports) {
        'use strict';

        var proto;
        var ac_console = require('@marcom/ac-console');
        var messagePrefix = 'Analytics';

        function ErrorHandler() {
            this.exception = false;
            this.errors = [];
        }

        proto = ErrorHandler.prototype;

        proto.log = function(moduleName, methodName, message) {
            var formattedMessage = this._formatMessage(moduleName, methodName, message);

            this.exception = true;

            this.errors.push({
                instance: moduleName,
                method: methodName,
                message: formattedMessage
            });

            ac_console.log(formattedMessage);

        };

        proto.report = function(index) {
            var out = '';
            if (typeof index === 'number' && this.errors[index]) {
                out = this.errors[index].message;
                ac_console.log(this.errors[index].message);
            } else {
                this.errors.forEach(function(err) {
                    out += err.message + '\r\n';
                });
                ac_console.log(out);
            }

            return out;
        };


        proto._formatMessage = function(moduleName, methodName, message) {
            var thrower;
            var throwerString = '';
            var separator = ' : ';
            var throwerSep;

            if (!!moduleName || !!methodName) {
                throwerSep = (moduleName && methodName) ? '.' : '';
                throwerString = (moduleName || '') + throwerSep + (methodName || '') + separator;
            }

            return messagePrefix + separator + throwerString + message;
        };

        module.exports = new ErrorHandler();

    }, {
        "@marcom/ac-console": 9
    }],
    "@marcom/ac-analytics/error-handler/ErrorHandler": [function(require, module, exports) {
        module.exports = require('yoExqy');
    }, {}],
    "eT/lVE": [function(require, module, exports) {
        'use strict';

        var PageObserver = require('../observer/Page');
        var LinkObserver = require('../observer/Link');
        var ClickObserver = require('../observer/Click');
        var SectionObserver = require('../observer/Section');
        var ac_Object = require('@marcom/ac-object');
        var onDocumentReady = require('../onDocumentReady');

        var defaults = {
            page: {
                // allow page observer to enable as soon as possible
            },
            link: {
                autoEnable: false
            },
            click: {
                autoEnable: false
            },
            section: {
                autoEnable: false
            }
        };

        function _enableObservers(observers) {
            for (var prop in observers) {
                if (observers.hasOwnProperty(prop)) {
                    if (typeof observers[prop].enable === 'function') {
                        observers[prop].enable();
                    }
                }
            }
        }

        function create(options) {
            options = ac_Object.extend(defaults, options || {});

            var observers = {
                page: new PageObserver(options.page),
                link: new LinkObserver(options.link),
                click: new ClickObserver(options.click),
                section: new SectionObserver(options.section)
            };

            onDocumentReady(function() {
                _enableObservers(observers);
            });

            return observers;
        }

        module.exports = {
            create: create
        };

    }, {
        "../observer/Click": "smIHK0",
        "../observer/Link": "csLHIR",
        "../observer/Page": "2ltmNh",
        "../observer/Section": "ft2q1p",
        "../onDocumentReady": "s+JdTz",
        "@marcom/ac-object": 122
    }],
    "@marcom/ac-analytics/factory/basicObserverSuite": [function(require, module, exports) {
        module.exports = require('eT/lVE');
    }, {}],
    "W+q+EN": [function(require, module, exports) {
        (function() {
            'use strict';

            var ac_Array = require('@marcom/ac-array');
            var errorHandler = require('./error-handler/ErrorHandler');
            var head = document.getElementsByTagName('head')[0];
            var metaTags = ac_Array.toArray(head.getElementsByTagName('meta'));
            var metaPropertyPrefix = 'analytics';
            var prefixPattern = '^' + metaPropertyPrefix + '-';
            var patternRegex = new RegExp(prefixPattern);
            var metaObject;
            var initialTimeStamp = Date.now();
            var moduleName = 'metadata';

            // Gets the name of the product used in the track meta tag
            function _getProductName(metaObject) {

                var analyticsPageTitle = _strToArray(metaObject.track);

                if (!Array.isArray(analyticsPageTitle) || analyticsPageTitle.length === 0) {
                    errorHandler.log(moduleName, '_getProductname', '"track" meta tag value is malformed. e.g. "product name - page name"');
                }

                if (errorHandler.exception) {
                    return;
                }

                return analyticsPageTitle[0].trim();
            }

            // Gets the page name from track meta tag
            function _getPageName(metaObject) {

                if (!metaObject.track || metaObject.track === '') {
                    errorHandler.log(moduleName, '_getPageName', '"track" meta tag value is malformed. e.g. "product name - page name"');
                }

                if (errorHandler.exception) {
                    return;
                }

                return metaObject.track.toLowerCase();
            }

            // Gets the current locale
            function _getLocale() {

                var htmlEl = document.documentElement;
                var locale = htmlEl.getAttribute('data-locale') || htmlEl.lang;

                if (!locale) {
                    errorHandler.log(moduleName, '_getLocale', 'html lang attribute can not be empty');
                }

                if (errorHandler.exception) {
                    return;
                }
                return locale;
            }

            // dump all meta tags into an object where the key/value pairs map to
            // the property/content attributes respectively.
            function _metaTagsToObject(tags) {
                tags = _filterMetaTags(tags);
                var metaObject = {};

                tags.forEach(function(tag) {
                    var key = _transformPropertyName(tag.getAttribute('property'));
                    var value = tag.getAttribute('content');
                    metaObject[key] = value;
                });

                return metaObject;
            }

            // filters out all meta tags not prefixed with our defined prefix
            function _filterMetaTags(tags) {
                var filtered = tags.filter(function(tag) {
                    var propName = tag.getAttribute('property');
                    return patternRegex.test(propName);
                });

                return filtered;
            }

            // removes analytics property prefix and camelCases what remains
            function _transformPropertyName(name) {
                var transformed = name.replace(metaPropertyPrefix + '-', '');

                return transformed.replace(/-+(.)?/g, function(match, character) {
                    return character ? character.toUpperCase() : '';
                });

            }

            // adds some normalized prperties to the meta object that we always
            // want to always provide
            function _augmentMetaObject(metaObject) {
                metaObject.pageName = metaObject.pageName || _getPageName(metaObject);
                metaObject.productName = metaObject.productName || _getProductName(metaObject);
                metaObject.locale = metaObject.locale || _getLocale();
                metaObject.initialTimeStamp = initialTimeStamp;

                return metaObject;
            }

            // converts a string to array based on a separator, defaults to '-'
            function _strToArray(str, separator) {
                separator = separator || '-';

                if (typeof str !== 'string') {
                    errorHandler.log(moduleName, '_strToArray', str + ' is not a valid string');
                }

                if (errorHandler.exception) {
                    return;
                }

                return str.split(separator);
            }

            function bundleMetaObject(metaTags) {
                metaObject = _metaTagsToObject(metaTags);
            }

            function getMetadata() {
                return _augmentMetaObject(metaObject);
            }

            function refreshMetadata() {
                metaTags = ac_Array.toArray(head.getElementsByTagName('meta'));
                metaObject = null;
                initialTimeStamp = Date.now();

                bundleMetaObject(metaTags);

                return _augmentMetaObject(metaObject);
            }

            bundleMetaObject(metaTags);

            module.exports = {
                getMetadata: getMetadata,
                refreshMetadata: refreshMetadata
            };

        }());
    }, {
        "./error-handler/ErrorHandler": "yoExqy",
        "@marcom/ac-array": 2
    }],
    "@marcom/ac-analytics/metadata": [function(require, module, exports) {
        module.exports = require('W+q+EN');
    }, {}],
    "nHWlaR": [function(require, module, exports) {
        'use strict';

        /** A module that exports a single instance of the Tracker with the default sCode plugin and also exports the Tracker constructor. Also exports the Tracker constructor.
         *  @module metricsTracker
         */
        var Tracker = require('./Tracker');

        module.exports = new Tracker('sCode');
        module.exports.Tracker = Tracker;

    }, {
        "./Tracker": "vBwaVP"
    }],
    "@marcom/ac-analytics/metricsTracker": [function(require, module, exports) {
        module.exports = require('nHWlaR');
    }, {}],
    "@marcom/ac-analytics/observer/Audio": [function(require, module, exports) {
        module.exports = require('0uVCsT');
    }, {}],
    "0uVCsT": [function(require, module, exports) {
        'use strict';

        var proto;

        var ac_Object = require('@marcom/ac-object');
        var ac_DOMEvents = require('@marcom/ac-dom-events');
        var metricsTracker = require('../metricsTracker');
        var errorHandler = require('../error-handler/ErrorHandler');

        var defaultOptions = {
            mediaEvents: ['play', 'pause', 'ended']
        };

        var moduleName = 'AudioAnalyticsObserver';

        /**
         * Tracks HTML5 audio events and submits it to the Tracker.
         * @constructor AudioAnalyticsObserver
         * @param {object} audio A reference to the audio tag in the dom.
         * @param {object} options An options object that hold custom options for the observer.
         * @requires module:ac-object
         * @requires module:ac-dom-events
         * @requires module:metricsTracker
         * @requires module:ErrorHandler
         */
        function AudioAnalyticsObserver(audio, options) {

            if (!audio) {
                errorHandler.log(moduleName, null, audio + ' is not a valid audio object');
            }

            defaultOptions.mediaEventCallbacks = {
                'ended': this._onEnded.bind(this)
            };

            this.options = ac_Object.defaults(defaultOptions, options || {});

            if (!Array.isArray(this.options.mediaEvents)) {
                errorHandler.log(moduleName, null, this.options.mediaEvents + ' is not a valid media events array');
            }

            if (errorHandler.exception) {
                return;
            }

            this.audio = audio;
            this.tracker = metricsTracker;
            this.defaultTracking = this.track.bind(this);

            this.attachEvents();
        }

        proto = AudioAnalyticsObserver.prototype;

        /**
         * @name AudioAnalyticsObserver#attachEvents
         *
         * @function
         *
         * @desc Attach multiple event handlers to the audio element.
         */
        proto.attachEvents = function() {
            var options = this.options;
            var customCallback;
            var mediaEventCallback;

            options.mediaEvents.forEach(function(mediaEvent) {
                customCallback = options.mediaEventCallbacks[mediaEvent];
                mediaEventCallback = (typeof customCallback === 'function') ? customCallback : this.defaultTracking;
                this.addListener(mediaEvent, mediaEventCallback);
            }.bind(this));
        };

        /**
         * @name AudioAnalyticsObserver#detachEvents
         *
         * @function
         *
         * @desc Detach multiple event handlers from the audio element.
         */
        proto.detachEvents = function() {
            var options = this.options;
            var customCallback;
            var mediaEventCallback;

            options.mediaEvents.forEach(function(mediaEvent) {
                customCallback = options.mediaEventCallbacks[mediaEvent];
                mediaEventCallback = (typeof customCallback === 'function') ? customCallback : this.defaultTracking;
                this.removeListener(mediaEvent, mediaEventCallback);
            }.bind(this));
        };

        /**
         * @name AudioAnalyticsObserver#addListener
         *
         * @function
         *
         * @desc Adds an event handler to the audio element.
         * @param {string} eventName An event name.
         * @param {function} callback A callback function to call at the time of event.
         */
        proto.addListener = function(eventName, callback) {
            ac_DOMEvents.addEventListener(this.audio, eventName, callback);
        };

        /**
         * @name AudioAnalyticsObserver#removeListener
         *
         * @function
         *
         * @desc Removes an event handler from the audio element.
         * @param {string} eventName An event name.
         * @param {function} callback A callback function to call at the time of event.
         */
        proto.removeListener = function(eventName, callback) {
            ac_DOMEvents.removeEventListener(this.audio, eventName, callback);
        };

        /**
         * @name AudioAnalyticsObserver#_onEnded
         *
         * @private
         *
         * @desc Adds an event handler to the 'ended' event of the audio element.
         */
        proto._onEnded = function(e) {
            this.ended = true;
            this.track(e);
        };

        /**
         * @name AudioAnalyticsObserver#track
         *
         * @function
         *
         * @desc Submits a tracking request to the Tracker.
         * @param {object} e The event data object.
         */
        proto.track = function(e) {

            var data = {};

            data.ended = this.ended;

            this.tracker.track({
                "type": "audio",
                "event": e,
                "data": data,
                "options": this.options
            });
        };

        /**
         * @name AudioAnalyticsObserver#destroy
         *
         * @desc Kills the audio observer events and properties.
         */
        proto.destroy = function() {
            this.detachEvents();
            this.options = null;
            this.tracker = null;
            this.audio = null;
            this.defaultTracking = null;
        };

        module.exports = AudioAnalyticsObserver;

    }, {
        "../error-handler/ErrorHandler": "yoExqy",
        "../metricsTracker": "nHWlaR",
        "@marcom/ac-dom-events": 13,
        "@marcom/ac-object": 122
    }],
    "smIHK0": [function(require, module, exports) {
        'use strict';

        var proto;

        var ac_DOMTraversal = require('@marcom/ac-dom-traversal');
        var ac_DOMNodes = require('@marcom/ac-dom-nodes');
        var ac_Object = require('@marcom/ac-object');
        var ac_Feature = require('@marcom/ac-feature');
        var ac_DOMEvents = require('@marcom/ac-dom-events');
        var metricsTracker = require('../metricsTracker');
        var errorHandler = require('../error-handler/ErrorHandler');
        var TouchController = require('../controller/Touch');
        var EventEmitter = require('ac-event-emitter').EventEmitter;

        var defaultOptions = {
            dataAttribute: 'analytics-click',
            titleDataAttribute: 'analytics-title',
            autoEnable: true
        };

        var moduleName = 'ClickAnalyticsObserver';

        /**
         * Tracks click interaction with any DOM element that has the data-analytics-click attribute.
         * @constructor ClickAnalyticsObserver
         * @param {object} options An options object that hold custom options for the observer.
         * @requires module:ac-dom-traversal
         * @requires module:ac-dom-nodes
         * @requires module:ac-dom-events
         * @requires module:ac-object
         * @requires module:ac-feature
         * @requires module:metricsTracker
         * @requires module:ErrorHandler
         * @requires module:ac-gesture-touchclick
         */
        function ClickAnalyticsObserver(options) {

            if (errorHandler.exception) {
                return;
            }

            this.options = ac_Object.defaults(defaultOptions, options || {});
            this.tracker = metricsTracker;
            this.isEnabled = false;
            this._boundOnInteraction = this._onInteraction.bind(this);
            this._touchGesture = [];
            this._elements = null;

            if (this.options.autoEnable === true) {
                this.enable();
            }

        }

        proto = ClickAnalyticsObserver.prototype = ac_Object.create(EventEmitter.prototype);

        /**
         * @desc Queries the DOM, and attaches event listeners
         */
        proto.enable = function() {
            if (!this.isEnabled) {
                this.addListener();
                this.isEnabled = true;
                this.trigger('enabled');
            }
        };

        /**
         * @name ClickAnalyticsObserver#addListener
         *
         * @function
         *
         * @desc Adds a listener to the document.body element and captures an interaction of click, mouseup or touch.
         */
        proto.addListener = function() {
            var element = document.body;

            if (!ac_Feature.touchAvailable()) {
                ac_DOMEvents.addEventListener(element, 'mouseup', this._boundOnInteraction);
            } else {
                this._elements = ac_DOMTraversal.querySelectorAll('*[data-' + this.options.dataAttribute + ']');

                this._elements.forEach(function(element, i) {
                    this._touchGesture[i] = new TouchController(element, this._boundOnInteraction);
                }.bind(this));
            }
        };

        /**
         * @name ClickAnalyticsObserver#removeListener
         *
         * @function
         *
         * @desc Removes a listener from the document.body for mouseup, click or touch if it exists.
         */
        proto.removeListener = function() {
            var element = document.body;
            ac_DOMEvents.removeEventListener(element, 'mouseup', this._boundOnInteraction);
            if (this._touchGesture.length > 0) {

                this._touchGesture.forEach(function(touchgesture) {
                    touchgesture.destroy();
                });
            }
        };

        /**
         * @name ClickAnalyticsObserver#_onInteraction
         *
         * @private
         *
         * @desc Determines the target element to be used for the request and calls track if the target element has the analytics data attribute.
         */
        proto._onInteraction = function(e) {

            var targetEl = ac_DOMEvents.target(e);
            var linkAncestor;

            if (!targetEl.getAttribute('data-' + this.options.dataAttribute)) {
                linkAncestor = ac_DOMTraversal.ancestor(targetEl, '[' + this.options.dataAttribute + ']');

                if (linkAncestor) {
                    targetEl = linkAncestor;
                }
            }

            if (targetEl.getAttribute('data-' + this.options.dataAttribute)) {
                this.track(e, targetEl);
            }
        };

        /**
         * @function
         *
         * @name ClickAnalyticsObserver#track
         *
         * @desc Tracks a mouseup event.
         */
        proto.track = function(e, targetEl) {

            var data = {};

            if (!ac_DOMNodes.isElement(targetEl)) {
                errorHandler.log(moduleName, 'track', targetEl + ' is not a valid DOM element');
            }

            if (errorHandler.exception) {
                return;
            }

            data.targetEl = targetEl;

            this.tracker.track({
                "type": "click",
                "event": e,
                "data": data,
                "options": this.options
            });
        };

        /**
         * @name ClickAnalyticsObserver#destroy
         *
         * @desc Kills the click observer events and properties.
         */
        proto.destroy = function() {
            this.removeListener();
            this.options = null;
            this.tracker = null;
            this.isEnabled = null;
            this._boundOnInteraction = null;
            this._touchGesture = [];
            this._elements = null;
        };

        module.exports = ClickAnalyticsObserver;

    }, {
        "../controller/Touch": "FmX+Kz",
        "../error-handler/ErrorHandler": "yoExqy",
        "../metricsTracker": "nHWlaR",
        "@marcom/ac-dom-events": 13,
        "@marcom/ac-dom-nodes": 37,
        "@marcom/ac-dom-traversal": 55,
        "@marcom/ac-feature": 84,
        "@marcom/ac-object": 122,
        "ac-event-emitter": 270
    }],
    "@marcom/ac-analytics/observer/Click": [function(require, module, exports) {
        module.exports = require('smIHK0');
    }, {}],
    "FP42yW": [function(require, module, exports) {
        'use strict';

        var proto;

        var ac_Object = require('@marcom/ac-object');
        var errorHandler = require('../error-handler/ErrorHandler');
        var metricsTracker = require('../metricsTracker');

        var defaultOptions = {
            interactionEvents: [],
            interactionEventCallbacks: {}
        };

        var moduleName = 'EventAnalyticsObserver';

        /**
         * Tracks any custom events passed to it in options object with the properties passed with options.data object.
         * @constructor EventAnalyticsObserver
         * @param {object} targetObj An object that is an EventEmitter or DOMEmitter.
         * @param {object} options An options object that hold custom options for the observer.
         * @requires module:ac-object
         * @requires module:metricsTracker
         */
        function EventAnalyticsObserver(targetObj, options) {

            if (!targetObj || typeof targetObj !== 'object' || typeof targetObj.on !== 'function' || typeof targetObj.off !== 'function') {
                errorHandler.log(moduleName, null, targetObj + ' does not appear to be a valid EventEmitter or DOMEmitter');
            }

            this.options = ac_Object.defaults(defaultOptions, options || {});

            if (!Array.isArray(this.options.interactionEvents)) {
                errorHandler.log(moduleName, null, this.options.interactionEvents + ' is not an array');
            }

            if (errorHandler.exception) {
                return;
            }

            this.tracker = metricsTracker;
            this.targetObj = targetObj;
            this._callbacks = {};

            this.attachEvents();
        }

        proto = EventAnalyticsObserver.prototype;

        /**
         * @name EventAnalyticsObserver#attachEvents
         *
         * @function
         *
         * @desc Attach multiple event handlers to the target object. One callback is allowed per event.
         */
        proto.attachEvents = function() {
            var options = this.options;
            var interactionEventCallback;
            var instanceCallbackName;

            options.interactionEvents.forEach(function(interactionEvent) {
                // use provided callback for event or default to this.track
                interactionEventCallback = options.interactionEventCallbacks[interactionEvent];
                interactionEventCallback = (typeof interactionEventCallback === 'function') ? interactionEventCallback : this.track.bind(this);

                // store callback for access later
                this._callbacks[interactionEvent] = interactionEventCallback;

                // attach
                this.addListener(interactionEvent, interactionEventCallback);
            }, this);
        };

        /**
         * @name EventAnalyticsObserver#detachEvents
         *
         * @function
         *
         * @desc Detach multiple event handlers from the target object.
         */
        proto.detachEvents = function() {
            var options = this.options;
            var instanceCallbackName;

            // loop through stashed callbacks and remove the listeners
            Object.keys(this._callbacks).forEach(function(callbackName) {
                this.removeListener(callbackName, this._callbacks[callbackName]);
            }, this);
        };

        /**
         * @name EventAnalyticsObserver#addListener
         *
         * @function
         *
         * @desc Adds an event handler to the target object.
         * @param {string} eventType An event name.
         * @param {function} callback A callback function to call at the time of event.
         */
        proto.addListener = function(eventType, callback) {
            this.targetObj.on(eventType, callback);
        };

        /**
         * @name EventAnalyticsObserver#removeListener
         *
         * @function
         *
         * @desc Removes an event handler from the target object.
         * @param {string} eventType An event name.
         * @param {function} callback A callback function to call at the time of event.
         */
        proto.removeListener = function(eventType, callback) {
            this.targetObj.off(eventType, callback);
        };

        /**
         * @name EventAnalyticsObserver#track
         *
         * @function
         *
         * @desc Submits a tracking request to the Tracker.
         */
        proto.track = function(data) {

            this.tracker.track({
                "type": "event",
                "data": data,
                "options": this.options
            });
        };

        /**
         * @name EventAnalyticsObserver#destroy
         *
         * @desc Kills the event observer events and properties.
         */
        proto.destroy = function() {
            this.detachEvents();
            this.options = null;
            this.tracker = null;
            this.targetObj = null;
            this._callbacks = null;
        };

        module.exports = EventAnalyticsObserver;

    }, {
        "../error-handler/ErrorHandler": "yoExqy",
        "../metricsTracker": "nHWlaR",
        "@marcom/ac-object": 122
    }],
    "@marcom/ac-analytics/observer/Event": [function(require, module, exports) {
        module.exports = require('FP42yW');
    }, {}],
    "G1nVnI": [function(require, module, exports) {
        'use strict';

        var proto;

        var ac_Object = require('@marcom/ac-object');
        var ac_DOMEvents = require('@marcom/ac-dom-events');
        var metricsTracker = require('../metricsTracker');
        var errorHandler = require('../error-handler/ErrorHandler');

        var defaultOptions = {
            async: false
        };

        /**
         * Tracks the exit of a user from a page.
         * @constructor ExitAnalyticsObserver
         * @param {object} options An options object that hold custom options for the observer.
         * @requires module:ac-object
         * @requires module:ac-dom-events
         * @requires module:metricsTracker
         * @requires module:ErrorHandler
         */
        function ExitAnalyticsObserver(options) {

            if (errorHandler.exception) {
                return;
            }

            this.options = ac_Object.defaults(defaultOptions, options || {});

            this.tracker = metricsTracker;

            this._boundOnBeforeUnload = this._onBeforeUnload.bind(this);

            this.addExitListener();
        }

        proto = ExitAnalyticsObserver.prototype;

        /**
         * @name ExitAnalyticsObserver#addExitListener
         *
         * @function
         *
         * @desc Add an event listener to the window onbeforeunload event if it is available.
         */
        proto.addExitListener = function() {

            if ('onbeforeunload' in window) {
                ac_DOMEvents.addEventListener(window, 'beforeunload', this._boundOnBeforeUnload);
            }
        };

        /**
         * @name ExitAnalyticsObserver#removeExitListener
         *
         * @function
         *
         * @desc Removes an event listener from the window onbeforeunload event if it is available.
         */
        proto.removeExitListener = function() {

            if ('onbeforeunload' in window) {
                ac_DOMEvents.removeEventListener(window, 'beforeunload', this._boundOnBeforeUnload);
            }
        };

        /**
         * @name ExitAnalyticsObserver#_onBeforeUnload
         *
         * @private
         *
         * @desc Submits a page analytics request when user is exiting the page.
         */
        proto._onBeforeUnload = function(e) {

            var data = {};

            data.exitTimeStamp = e.timeStamp;

            this.tracker.track({
                "type": "exit",
                "event": e,
                "data": data,
                "options": this.options
            });
        };

        /**
         * @name ExitAnalyticsObserver#destroy
         *
         * @desc Kills the exit observer events and properties.
         */
        proto.destroy = function() {
            this.removeExitListener();
            this.options = null;
            this.tracker = null;
            this._boundOnBeforeUnload = null;
        };

        module.exports = ExitAnalyticsObserver;

    }, {
        "../error-handler/ErrorHandler": "yoExqy",
        "../metricsTracker": "nHWlaR",
        "@marcom/ac-dom-events": 13,
        "@marcom/ac-object": 122
    }],
    "@marcom/ac-analytics/observer/Exit": [function(require, module, exports) {
        module.exports = require('G1nVnI');
    }, {}],
    "7OkBs0": [function(require, module, exports) {
        'use strict';

        var proto;

        var ac_Object = require('@marcom/ac-object');
        var metricsTracker = require('../metricsTracker');
        var metadata = require('../metadata').getMetadata();
        var errorHandler = require('../error-handler/ErrorHandler');

        var defaultOptions = {
            trackAutoRotate: false,
            beforeUpdateEvent: 'willShow',
            afterUpdateEvent: 'didShow'
        };

        var moduleName = 'GalleryAnalyticsObserver';

        /**
         * Tracks user interaction with ac-gallery.
         * @constructor GalleryAnalyticsObserver
         * @param {object} gallery An instance of ac-gallery.
         * @param {object} options An options object that hold custom options for the observer.
         * @requires module:ac-object
         * @requires module:metricsTracker
         * @requires module:metadata
         * @requires module:ErrorHandler
         */
        function GalleryAnalyticsObserver(gallery, options) {

            if (!gallery || typeof gallery !== 'object') {
                errorHandler.log(moduleName, null, gallery + ' is not an object');
            }

            if (errorHandler.exception) {
                return;
            }

            this.options = ac_Object.defaults(defaultOptions, options || {});
            this.gallery = gallery;
            this.tracker = metricsTracker;
            this.trackedInteractionTypes = [];
            this.outgoingSlideInteractionType = 'auto';
            this.incomingSlideTimestamp = metadata.initialTimeStamp;

            this._onUpdate = this._onUpdate.bind(this);
            this._onComplete = this.track.bind(this);

            this.addListener();
        }

        proto = GalleryAnalyticsObserver.prototype;

        /**
         * @name GalleryAnalyticsObserver#addListener
         *
         * @function
         *
         * @desc Adds event listeners to the ac-gallery events.
         */
        proto.addListener = function() {
            if (this.options.beforeUpdateEvent) {
                this.gallery.on(this.options.beforeUpdateEvent, this._onUpdate);
            }
            if (this.options.afterUpdateEvent) {
                this.gallery.on(this.options.afterUpdateEvent, this._onComplete);
            }
        };

        /**
         * @name GalleryAnalyticsObserver#removeListener
         *
         * @function
         *
         * @desc Removes event listeners from the ac-gallery events.
         */
        proto.removeListener = function() {
            if (this.options.beforeUpdateEvent) {
                this.gallery.off(this.options.beforeUpdateEvent, this._onUpdate);
            }
            if (this.options.afterUpdateEvent) {
                this.gallery.off(this.options.afterUpdateEvent, this._onComplete);
            }
        };

        /**
         * @name GalleryAnalyticsObserver#_createInteractionEvent
         *
         * @private
         */
        proto._createInteractionEvent = function(evt) {
            // Keyboard: interactionEvent and originalEvent both have the event data
            // Touch: originalEvent has the actual event data
            var interactionEvent = evt.interactionEvent.originalEvent || evt.interactionEvent;

            if (interactionEvent) {
                // IE bug when sending Event info in a setTimeOut event reference is lost (member not found)
                return interactionEvent = {
                    type: interactionEvent.type,
                    target: interactionEvent.target,
                    srcElement: interactionEvent.srcElement
                };
            }

            return null;
        };

        /**
         * @name GalleryAnalyticsObserver#_onUpdate
         *
         * @private
         *
         * @desc Tracks event data on ac-gallery 'willShow' event before it gets through any timeouts.
         */
        proto._onUpdate = function(d) {

            var interactionEvent;
            this.interactionEvent = null;

            // If interaction event is available then clone the required properties
            if (d.interactionEvent) {
                this.interactionEvent = this._createInteractionEvent(d);
            }
        };

        /**
         * @name GalleryAnalyticsObserver#_getSlideId
         *
         * @private
         *
         * @desc Set the id for the given slide(s).
         */
        proto._getSlideId = function(slide) {
            var slideId = '';
            var length = 0;

            if (slide && Array.isArray(slide)) {
                length = slide.length;

                for (var i = 0; i < length; i++) {
                    if (typeof slide[i].getElementId === 'function') {
                        slideId += slide[i].getElementId() + '-';
                    }
                }
            }

            return slideId.slice(0, slideId.length - 1);
        };

        /**
         * @name GalleryAnalyticsObserver#track
         *
         * @private
         *
         * @desc Submits a tracking request to the Tracker when a slide has updated successfully.
         */
        proto.track = function(d) {

            // Don't track an auto rotation that is not triggered by the user
            // On auto interaction ac-gallery can pass no interactionEvent or an instance of gallery
            if (this.options.trackAutoRotate === false) {
                if (!d.interactionEvent || (d.interactionEvent.gallery && d.interactionEvent.gallery === this.gallery)) {
                    return;
                }
            }

            var data = ac_Object.clone(d);

            // Pass the previous interactionEvent for extracting the previous slide information
            data.interactionEvent = this.interactionEvent || this._createInteractionEvent(d);

            // A gallery name will always be passed to the Gallery Analytics Observer
            if (!this.options.galleryName) {
                errorHandler.log(moduleName, 'track', this.options.galleryName + ' is not a valid gallery name');
            }

            if (errorHandler.exception) {
                return;
            }

            // Get the ID for both incoming and outgoing slides if it's ac-gallery 2.0
            if (data.incoming && typeof data.incoming.id !== 'string') {
                data.incoming.id = this._getSlideId(data.incoming);
            }

            if (data.outgoing && typeof data.outgoing.id !== 'string') {
                data.outgoing.id = this._getSlideId(data.outgoing);
            }

            this.outgoingSlideTimestamp = this.incomingSlideTimestamp;
            this.incomingSlideTimestamp = Date.now();

            data.incomingSlideTimestamp = this.incomingSlideTimestamp;
            data.outgoingSlideTimestamp = this.outgoingSlideTimestamp;

            // Required data:
            // `data.incoming.id` - the ID attribute of the incoming item's `Element`
            // `data.outgoing.id` - the ID attribute of the outgoing item's `Element`
            // `data.interactionEvent` - the `Event` object that triggered the gallery update
            this.tracker.track({
                "type": "gallery",
                "data": data,
                "observer": this,
                "options": this.options
            });
        };

        /**
         * @name GalleryAnalyticsObserver#destroy
         *
         * @desc Kills the gallery observer events and properties.
         */
        proto.destroy = function() {

            if (!this.gallery) {
                errorHandler.log(moduleName, 'destroy', this.gallery + ' is not an object');
            }

            if (errorHandler.exception) {
                return;
            }

            this.removeListener();
            this.options = null;
            this.tracker = null;
            this.gallery = null;
            this.trackedInteractionTypes = null;
            this.interactionEvent = null;
        };

        module.exports = GalleryAnalyticsObserver;
    }, {
        "../error-handler/ErrorHandler": "yoExqy",
        "../metadata": "W+q+EN",
        "../metricsTracker": "nHWlaR",
        "@marcom/ac-object": 122
    }],
    "@marcom/ac-analytics/observer/Gallery": [function(require, module, exports) {
        module.exports = require('7OkBs0');
    }, {}],
    "csLHIR": [function(require, module, exports) {
        'use strict';

        var ac_DOMTraversal = require('@marcom/ac-dom-traversal');
        var ac_Object = require('@marcom/ac-object');
        var ac_DOMEvents = require('@marcom/ac-dom-events');
        var metricsTracker = require('../metricsTracker');
        var errorHandler = require('../error-handler/ErrorHandler');
        var EventEmitter = require('ac-event-emitter').EventEmitter;

        var proto;

        var defaultOptions = {
            dataAttribute: 'analytics-link',
            titleDataAttribute: 'analytics-title',
            silent: true,
            autoEnable: true
        };

        /**
         * Tracks link clicks that bubble up to the document.body and submits tracking requests. If a link needs not to be tracked propogation must be stopped on it.
         * @constructor LinkAnalyticsObserver
         * @param {object} options An options object that hold custom options for the observer.
         * @requires module:ac-dom-traversal
         * @requires module:ac-object
         * @requires module:ac-dom-events
         * @requires module:metricsTracker
         * @requires module:ErrorHandler
         */
        function LinkAnalyticsObserver(options) {

            if (errorHandler.exception) {
                return;
            }

            this.options = ac_Object.defaults(defaultOptions, options || {});
            this.tracker = metricsTracker;
            this.isEnabled = false;
            this.defaultTracking = this.track.bind(this);

            if (this.options.autoEnable === true) {
                this.enable();
            }
        }

        proto = LinkAnalyticsObserver.prototype = ac_Object.create(EventEmitter.prototype);

        /**
         * @desc Queries the DOM, and attaches event listeners
         */
        proto.enable = function() {
            if (!this.isEnabled) {
                this.addListener();
                this.isEnabled = true;
                this.trigger('enabled');
            }
        };

        /**
         * @name LinkAnalyticsObserver#addListener
         *
         * @function
         *
         * @desc Adds a mouseup handler to document.body for anchor tags.
         */
        proto.addListener = function() {
            var element = document.body;
            ac_DOMEvents.addEventListener(element, 'mouseup', this.defaultTracking);
        };

        /**
         * @name LinkAnalyticsObserver#removeListener
         *
         * @function
         *
         * @desc Removes the mouseup handler from document.body for anchor tags.
         */
        proto.removeListener = function() {
            var element = document.body;
            ac_DOMEvents.removeEventListener(element, 'mouseup', this.defaultTracking);
        };

        /**
         * @name LinkAnalyticsObserver#track
         *
         * @private
         *
         * @desc Tracks a mouseup event.
         */
        proto.track = function(e) {

            var data = {};

            var targetEl;

            var linkAncestor;

            var element = ac_DOMEvents.target(e);

            if (element.nodeName.toLowerCase() === 'a') {
                targetEl = element;
            }

            if (!targetEl) {

                linkAncestor = ac_DOMTraversal.ancestor(element, 'a');

                if (linkAncestor) {
                    targetEl = linkAncestor;
                }
            }

            if (targetEl) {

                data.targetEl = targetEl;

                this.tracker.track({
                    "type": "link",
                    "event": e,
                    "data": data,
                    "options": this.options
                });
            }
        };

        /**
         * @name LinkAnalyticsObserver#destroy
         *
         * @desc Kills the link observer events and properties.
         */
        proto.destroy = function() {
            this.removeListener();
            this.options = null;
            this.tracker = null;
            this.isEnabled = null;
            this.defaultTracking = null;
        };

        module.exports = LinkAnalyticsObserver;

    }, {
        "../error-handler/ErrorHandler": "yoExqy",
        "../metricsTracker": "nHWlaR",
        "@marcom/ac-dom-events": 13,
        "@marcom/ac-dom-traversal": 55,
        "@marcom/ac-object": 122,
        "ac-event-emitter": 270
    }],
    "@marcom/ac-analytics/observer/Link": [function(require, module, exports) {
        module.exports = require('csLHIR');
    }, {}],
    "ZDCq+L": [function(require, module, exports) {
        'use strict';

        var proto;

        var ac_Object = require('@marcom/ac-object');
        var metricsTracker = require('../metricsTracker');
        var errorHandler = require('../error-handler/ErrorHandler');

        var defaultOptions = {
            interactionEvents: ['open', 'close', 'reopen']
        };

        var moduleName = 'OverlayAnalyticsObserver';

        /**
         * Tracks interaction events with an overlay and submits it to the Tracker.
         * @constructor OverlayAnalyticsObserver
         * @param {object} overlay An instance of the overlay.
         * @param {object} options An options object that hold custom options for the observer.
         * @requires module:ac-object
         * @requires module:metricsTracker
         * @requires module:ErrorHandler
         */
        function OverlayAnalyticsObserver(overlay, options) {

            if (!overlay || typeof overlay !== 'object' || typeof overlay.on !== 'function' || typeof overlay.off !== 'function') {
                errorHandler.log(moduleName, null, overlay + ' is not an object');
            }

            defaultOptions.interactionEventCallbacks = {
                'open': this._onOpen.bind(this),
                'close': this._onClose.bind(this),
                'reopen': this._onReopen.bind(this)
            };

            this.options = ac_Object.defaults(defaultOptions, options || {});

            if (!Array.isArray(this.options.interactionEvents)) {
                errorHandler.log(moduleName, null, this.options.interactionEvents + ' is not a valid interaction events array');
            }

            if (errorHandler.exception) {
                return;
            }

            this.overlay = overlay;
            this.tracker = metricsTracker;
            this.active = false;
            this.defaultTracking = this.track.bind(this);

            this.attachEvents();
        }

        proto = OverlayAnalyticsObserver.prototype;

        /**
         * @name OverlayAnalyticsObserver#attachEvents
         *
         * @function
         *
         * @desc Attach multiple event handlers to the overlay element.
         */
        proto.attachEvents = function() {
            var options = this.options;
            var customCallback;
            var interactionEventCallback;

            options.interactionEvents.forEach(function(interactionEvent) {
                customCallback = options.interactionEventCallbacks[interactionEvent];
                interactionEventCallback = (typeof customCallback === 'function') ? customCallback : this.defaultTracking;
                this.addListener(interactionEvent, interactionEventCallback);
            }.bind(this));
        };

        /**
         * @name OverlayAnalyticsObserver#detachEvents
         *
         * @function
         *
         * @desc Detach multiple event handlers from the overlay element.
         */
        proto.detachEvents = function() {
            var options = this.options;
            var customCallback;
            var interactionEventCallback;

            options.interactionEvents.forEach(function(interactionEvent) {
                customCallback = options.interactionEventCallbacks[interactionEvent];
                interactionEventCallback = (typeof customCallback === 'function') ? customCallback : this.defaultTracking;
                this.removeListener(interactionEvent, interactionEventCallback);
            }.bind(this));
        };

        /**
         * @name OverlayAnalyticsObserver#addListener
         *
         * @function
         *
         * @desc Adds an event handler to the overlay element.
         * @param {string} eventName An event name.
         * @param {function} callback A callback function to call at the time of event.
         */
        proto.addListener = function(eventName, callback) {
            this.overlay.on(eventName, callback);
        };

        /**
         * @name OverlayAnalyticsObserver#removeListener
         *
         * @function
         *
         * @desc Removes an event handler from the overlay element.
         * @param {string} eventName An event name.
         * @param {function} callback A callback function to call at the time of event.
         */
        proto.removeListener = function(eventName, callback) {
            this.overlay.off(eventName, callback);
        };

        /**
         * @name OverlayAnalyticsObserver#_onOpen
         *
         * @private
         *
         * @desc Adds an event handler to the 'open' event of the overlay element.
         */
        proto._onOpen = function(e) {
            this.active = true;
            this.track(e);
        };

        /**
         * @name OverlayAnalyticsObserver#_onReopen
         *
         * @private
         *
         * @desc Adds an event handler to the 'reopen' event of the overlay element.
         */
        proto._onReopen = function(e) {
            this.active = true;
            this.track(e);
        };

        /**
         * @name OverlayAnalyticsObserver#_onClose
         *
         * @private
         *
         * @desc Adds an event handler to the 'close' event of the overlay element.
         */
        proto._onClose = function(e) {
            this.active = false;
            this.track(e);
        };

        /**
         * @name OverlayAnalyticsObserver#track
         *
         * @function
         *
         * @desc Submits an overlay interaction event tracking request to the Tracker.
         * @param {object} e The event data object.
         */
        proto.track = function(e) {
            var data = this.options.data || {};

            data.active = this.active;

            this.tracker.track({
                "type": "overlay",
                "event": e,
                "data": data,
                "options": this.options
            });
        };

        /**
         * @name OverlayAnalyticsObserver#destroy
         *
         * @desc Kills the overlay observer events and properties.
         */
        proto.destroy = function() {
            this.detachEvents();
            this.options = null;
            this.tracker = null;
            this.overlay = null;
            this.active = null;
            this.defaultTracking = null;
        };

        module.exports = OverlayAnalyticsObserver;

    }, {
        "../error-handler/ErrorHandler": "yoExqy",
        "../metricsTracker": "nHWlaR",
        "@marcom/ac-object": 122
    }],
    "@marcom/ac-analytics/observer/Overlay": [function(require, module, exports) {
        module.exports = require('ZDCq+L');
    }, {}],
    "@marcom/ac-analytics/observer/Page": [function(require, module, exports) {
        module.exports = require('2ltmNh');
    }, {}],
    "2ltmNh": [function(require, module, exports) {
        'use strict';

        var proto;

        var ac_Object = require('@marcom/ac-object');
        var metricsTracker = require('../metricsTracker');
        var errorHandler = require('../error-handler/ErrorHandler');
        var EventEmitter = require('ac-event-emitter').EventEmitter;

        var defaultOptions = {
            autoEnable: true
        };

        /**
         * Tracks a single page load request and submits it to the Tracker.
         * @constructor PageAnalyticsObserver
         * @param {object} options An options object that hold custom options for the observer.
         * @requires module:ac-object
         * @requires module:metricsTracker
         * @requires module:ErrorHandler
         */
        function PageAnalyticsObserver(options) {

            if (errorHandler.exception) {
                return;
            }

            this.options = ac_Object.defaults(defaultOptions, options || {});
            this.tracker = metricsTracker;
            this.data = this.options.data || {};
            this.isEnabled = false;

            if (this.options.autoEnable === true) {
                this.enable();
            }
        }

        proto = PageAnalyticsObserver.prototype = ac_Object.create(EventEmitter.prototype);

        proto.enable = function() {
            if (!this.isEnabled) {
                this.track();
                this.isEnabled = true;
                this.trigger('enabled');
            }
        };

        /**
         * @name PageAnalyticsObserver#track
         *
         * @private
         *
         * @desc Submits a page analytics request.
         */
        proto.track = function(e) {

            var data = this.options.data || {};

            this.tracker.track({
                "type": "page",
                "event": e,
                "data": data,
                "options": this.options
            });

        };

        /**
         * @name PageAnalyticsObserver#destroy
         *
         * @desc Kills the page observer properties.
         */
        proto.destroy = function() {
            this.options = null;
            this.tracker = null;
            this.data = null;
            this.isEnabled = null;
        };

        module.exports = PageAnalyticsObserver;

    }, {
        "../error-handler/ErrorHandler": "yoExqy",
        "../metricsTracker": "nHWlaR",
        "@marcom/ac-object": 122,
        "ac-event-emitter": 270
    }],
    "@marcom/ac-analytics/observer/Section": [function(require, module, exports) {
        module.exports = require('ft2q1p');
    }, {}],
    "ft2q1p": [function(require, module, exports) {
        'use strict';

        var proto;

        var ac_Object = require('@marcom/ac-object');
        var ac_DOMTraversal = require('@marcom/ac-dom-traversal');
        var ElementEngagement = require('ac-element-engagement').ElementEngagement;
        var metricsTracker = require('../metricsTracker');
        var errorHandler = require('../error-handler/ErrorHandler');
        var dataAttr = require('../data-attr/helper');
        var EventEmitter = require('ac-event-emitter').EventEmitter;

        var defaultOptions = {
            dataAttribute: 'analytics-section-engagement',
            autoEnable: true
        };

        var trackedElementDefaults = {
            stopOnEngaged: false,
            timeToEngage: 1000
        };

        /**
         * Tracks section engagement for all elements with a dataAttribute passed in via options (defaults to data-analytics-section-engagement).
         * @constructor SectionAnalyticsObserver
         * @param {object} options An options object that hold custom options for the observer.
         * @requires module:ac-dom-traversal
         * @requires module:ac-element-engagement
         * @requires module:ac-object
         * @requires module:metricsTracker
         * @requires module:ErrorHandler
         * @requires module:dataAttr
         */

        function SectionAnalyticsObserver(options) {

            if (errorHandler.exception) {
                return;
            }

            this.options = ac_Object.defaults(defaultOptions, options || {});
            this.tracker = metricsTracker;
            this.elementEngagement = new ElementEngagement();
            this.isEnabled = false;

            if (this.options.autoEnable === true) {
                this.enable();
            }
        }

        proto = SectionAnalyticsObserver.prototype = ac_Object.create(EventEmitter.prototype);

        /**
         * @desc Queries the DOM, loads up the element engagement and starts tracking
         */
        proto.enable = function() {
            if (!this.isEnabled) {
                this._loadSections();
                this.isEnabled = true;
                this.trigger('enabled');
            }
        };

        /**
         * @name SectionAnalyticsObserver#_onDOMReady
         *
         * @private
         *
         * @desc Selects all elements onDOMReady, instantiates ElementEngagement with those elements and binds events.
         */
        proto._loadSections = function() {
            this.sections = ac_DOMTraversal.querySelectorAll('[data-' + this.options.dataAttribute + ']');

            this.sections.forEach(function(section) {
                var options;
                var dataString = section.getAttribute('data-' + this.options.dataAttribute);

                // apply any options from the data attribute
                options = dataAttr.dataStringToObject(dataString);
                options = this._castDataAttributeOptions(options);

                // apply data attribute options using ttackedElementDefaults as the base
                options = ac_Object.defaults(trackedElementDefaults, options);

                this.elementEngagement.addElement(section, options);
            }, this);

            if (this.sections && this.sections.length > 0) {
                this._setPosition();
                this.options.elements = this.sections;
                this._bindEvents();
                this.elementEngagement.start();
            }
        };

        /**
         * @name SectionAnalyticsObserver#_setPosition
         *
         * @private
         *
         * @desc Add a section number for each section on the page.
         */
        proto._setPosition = function() {
            var i;
            var totalSections = this.sections.length;

            for (i = 0; i < totalSections; i += 1) {
                // Start with 1
                this.sections[i].position = i + 1;
            }
        };

        /**
         * @desc options from the data attribute arrive in the form of a string.
         *       We need to convert them to their appropriate types
         * @private
         */
        proto._castDataAttributeOptions = function(options) {
            var inViewThreshold;
            var timeToEngage;
            var trackOnce;
            options = ac_Object.clone(options);


            Object.keys(options).forEach(function(key) {
                var value = options[key];
                var castValue;

                // if boolean
                if (value === 'false') {
                    castValue = false;
                } else if (value === 'true') {
                    castValue = true;

                    // numbers
                } else if (!isNaN(parseFloat(value))) {
                    castValue = parseFloat(value);

                    // else, it's just a string
                } else {
                    castValue = value;
                }

                options[key] = castValue;
            });

            return options;
        };

        /**
         * @name SectionAnalyticsObserver#_bindEvents
         *
         * @private
         *
         * @desc Bind event callbacks for section engagement events.
         */
        proto._bindEvents = function() {
            this.elementEngagement.on('thresholdexit', this._onThresholdExit, this);
            this.elementEngagement.windowDelegate.on('scroll', this._onScroll, this);
        };

        /**
         * @name SectionAnalyticsObserver#_unbindEvents
         *
         * @private
         *
         * @desc Unbind event callbacks for section engagement events.
         */
        proto._unbindEvents = function() {
            this.elementEngagement.off('thresholdexit', this._onThresholdExit, this);
            this.elementEngagement.windowDelegate.off('scroll', this._onScroll, this);
        };

        /**
         * @name SectionAnalyticsObserver#_onThresholdExit
         *
         * @private
         *
         * @desc ‘thresholdexit‘ event callback.
         */
        proto._onThresholdExit = function(trackedElement) {
            if (trackedElement.engaged) {
                var data = {
                    element: trackedElement
                };
                this.elementEngagement.stop(trackedElement);
                this.track(data);
            }
        };

        proto._onScroll = function() {
            var windowDelegate = this.elementEngagement.windowDelegate;
            if (windowDelegate.scrollY() >= windowDelegate.maxScrollY()) {
                this._pageEnd();
            }
        };

        /**
         * Since we can't scroll any farther:
         * When we hit the bottom of the page we need to track any sections that are engaged
         * and we need to listen for engaged on inView sections that are not yet engaged
         */
        proto._pageEnd = function() {
            var len = this.elementEngagement.elements.length;
            var sectionsInView = [];

            this.elementEngagement.elements.forEach(function(element) {
                if (element.inView && element.inThreshold && element.tracking) {
                    sectionsInView.push(element);
                }
            });

            sectionsInView.forEach(function(section) {
                if (section.engaged) {
                    this._forceTracking(section);
                } else {
                    if (section.has('engaged') === false) {
                        section.once('engaged', this._forceTracking, this);
                    }
                }
            }, this);
        };

        proto._forceTracking = function(trackedElement) {
            // we need to enter a valid value for thresholdExitTime
            trackedElement.thresholdExitTime = Date.now();
            this.elementEngagement.stop(trackedElement);
            this.track({
                element: trackedElement
            });
        };

        /**
         * @name SectionAnalyticsObserver#track
         *
         * @private
         *
         * @desc Submits a section engaged analytics request to the Tracker.
         */
        proto.track = function(data) {
            this.tracker.track({
                type: 'section',
                data: data,
                options: this.options
            });
        };

        /**
         * @name SectionAnalyticsObserver#destroy
         *
         * @desc Kills the section observer events and properties.
         */
        proto.destroy = function() {
            if (this.elementEngagement) {
                this.elementEngagement.stop();
            }
            this._unbindEvents();
            this.options = null;
            this.elementEngagement = null;
            this.tracker = null;
            this.sections = null;
        };

        module.exports = SectionAnalyticsObserver;

    }, {
        "../data-attr/helper": "DckvZc",
        "../error-handler/ErrorHandler": "yoExqy",
        "../metricsTracker": "nHWlaR",
        "@marcom/ac-dom-traversal": 55,
        "@marcom/ac-object": 122,
        "ac-element-engagement": 268,
        "ac-event-emitter": 270
    }],
    "@marcom/ac-analytics/observer/Video": [function(require, module, exports) {
        module.exports = require('EVr9gK');
    }, {}],
    "EVr9gK": [function(require, module, exports) {
        'use strict';

        var proto;

        var ac_Object = require('@marcom/ac-object');
        var errorHandler = require('../error-handler/ErrorHandler');
        var metricsTracker = require('../metricsTracker');
        var ac_DOMNodes_isElement = require('@marcom/ac-dom-nodes/isElement');

        /**
         * mediaEventCallbacks object should follow this format
         *
         * mediaEventCallbacks = {
         *   play: myPlaCallback.bind(someContext, 'play'),
         *   ended: myEndedCallback.bind(someContext, 'ended')
         * };
         */
        var defaultOptions = {
            mediaEvents: [],
            mediaEventCallbacks: {},
            mediaEventPrefix: ''
        };

        var moduleName = 'VideoAnalyticsObserver';

        var dataAttributeAnalyticsId = "data-analytics-id";

        /**
         * Tracks HTML5 video events and submits it to the Tracker.
         * @constructor VideoAnalyticsObserver
         * @param {object} video An instance of ac-video.
         * @param {object} options An options object that hold custom options for the observer.
         * @requires module:ac-object
         * @requires module:metricsTracker
         */
        function VideoAnalyticsObserver(video, options) {
            var prefix;

            if (!video || typeof video !== 'object') {
                errorHandler.log(moduleName, null, video + ' is not an object');
            }

            this.options = ac_Object.defaults(defaultOptions, options || {});

            if (!Array.isArray(this.options.mediaEvents)) {
                errorHandler.log(moduleName, null, this.options.mediaEvents + ' is not a valid media events array');
            }

            if (errorHandler.exception) {
                return;
            }

            this.tracker = metricsTracker;
            this.video = video;
            this.playCount = 0;
            this.captionsEnableCount = 0;
            this._callbacks = {};

            prefix = this.options.mediaEventPrefix;

            this._events = {
                play: prefix + 'play',
                ended: prefix + 'ended',
                timeupdate: prefix + 'timeupdate',
                scrubStart: prefix + 'scrub-start',
                scrubEnd: prefix + 'scrub-end',
                captionsEnabled: prefix + 'captions-enabled'
            };

            this.attachEvents();
        }

        proto = VideoAnalyticsObserver.prototype;

        /**
         * @name VideoAnalyticsObserver#attachEvents
         *
         * @function
         *
         * @desc Attach multiple event handlers to the video element. One callback is allowed per event.
         */
        proto.attachEvents = function() {
            var options = this.options;
            var mediaEventCallback;

            // Wire up user provided callbacks
            options.mediaEvents.forEach(function(mediaEvent) {
                // use provided callback for event or default to this.track
                mediaEventCallback = options.mediaEventCallbacks[mediaEvent];
                mediaEventCallback = (typeof mediaEventCallback === 'function') ? mediaEventCallback : this._defaultTracking.bind(this, mediaEvent);

                // store callback for access later
                this._callbacks[mediaEvent] = mediaEventCallback;

                // attach
                this.addListener(options.mediaEventPrefix + mediaEvent, this._callbacks[mediaEvent]);
            }.bind(this));

            // attach our private events
            this._bindPlay();
            this.video.on(this._events.ended, this._onEnded, this);
            this.video.on(this._events.captionsEnabled, this._onCaptionsEnabled, this);
            this.video.on(this._events.timeupdate, this._onTimeupdate, this);
        };

        /**
         * @name VideoAnalyticsObserver#detachEvents
         *
         * @function
         *
         * @desc Detach multiple event handlers from the video element.
         */
        proto.detachEvents = function() {
            var options = this.options;

            options.mediaEvents.forEach(function(mediaEvent) {
                this.removeListener(options.mediaEventPrefix + mediaEvent, this._callbacks[mediaEvent]);
            }.bind(this));
        };

        /**
         * @private
         * @name VideoAnalyticsObserver#_onPlay
         *
         * @desc Adds an event handler to the 'play' event of the video element.
         */
        proto._onPlay = function(e) {
            var data = this._bundleTrackingData('play', e);
            data.playCount = this.playCount;
            this.track(data);
            this.playCount += 1;
            this._playBound = false;
        };

        proto._onTimeupdate = function(e) {
            if (e.currentTime === 0 && !this.ended) {
                // don't bind on first play since the timeupdate event fires before the play event
                if (this.playCount > 0) {
                    this._bindPlay();
                }
            }
        };

        proto._bindPlay = function() {
            if (!this._playBound) {
                this.video.once(this._events.play, this._onPlay, this);
                this._playBound = true;
            }
        };

        /**
         * @private
         * @name VideoAnalyticsObserver#_onCaptionsEnabled
         *
         * @desc Adds an event handler to the 'captions-enabled' event of ac-video.
         */
        proto._onCaptionsEnabled = function(e) {
            var data = this._bundleTrackingData('captions-enabled', e);
            data.captionsEnableCount = this.captionsEnableCount;
            this.track(data);
            this.captionsEnableCount += 1;
        };

        /**
         * @private
         * @name VideoAnalyticsObserver#_onEnded
         *
         * @desc Adds an event handler to the 'ended' event of the video element.
         */
        proto._onEnded = function(e) {
            var data = this._bundleTrackingData('ended', e);
            this.ended = true;
            this.track(data);
            // we don't always get a timeupdate back to 0 on ended.
            // so make sure we reattach the play listener
            this._bindPlay();
        };

        /**
         * @name VideoAnalyticsObserver#addListener
         *
         * @function
         *
         * @desc Adds an event handler to the video element.
         * @param {string} eventType An event name.
         * @param {function} callback A callback function to call at the time of event.
         */
        proto.addListener = function(eventType, callback) {
            this.video.on(eventType, callback);
        };

        /**
         * @name VideoAnalyticsObserver#removeListener
         *
         * @function
         *
         * @desc Removes an event handler from the video element.
         * @param {string} eventType An event name.
         * @param {function} callback A callback function to call at the time of event.
         */
        proto.removeListener = function(eventType, callback) {
            this.video.off(eventType, callback);
        };

        /**
         * @private
         * @name VideoAnalyticsObserver#_setCommonVideoData
         *
         * @desc Sets the common properties for each tracking request.
         */
        proto._getCommonVideoData = function() {
            var data = {};
            var videoIdFromDataAttr;

            data.targetEl = this.video.el || this.video.element || null;
            videoIdFromDataAttr = (data.targetEl && ac_DOMNodes_isElement(data.targetEl)) ? data.targetEl.getAttribute(dataAttributeAnalyticsId) : '';

            data.videoId = (videoIdFromDataAttr) ? videoIdFromDataAttr : this.video.targetId;
            data.ended = this.ended;

            return data;
        };

        /**
         * @private
         * @name VideoAnalyticsObserver#_bundleTrackingData
         *
         * @desc Gets the currentTime property from an event object.
         */
        proto._bundleTrackingData = function(eventType, e) {
            var commonTrackingData = this._getCommonVideoData();
            commonTrackingData.eventType = eventType;
            return ac_Object.extend(ac_Object.clone(e), commonTrackingData);
        };

        /**
         * @private
         * @name VideoAnalyticsObserver#_defaultTracking
         *
         * @desc Default tracking for media events.
         */
        proto._defaultTracking = function(eventType, e) {
            var data = this._bundleTrackingData(eventType, e);
            this.track(data);
        };

        /**
         * @name VideoAnalyticsObserver#track
         * @function
         *
         * @desc Submits a tracking request to the Tracker.
         */
        proto.track = function(data) {
            this.tracker.track({
                type: "video",
                data: data,
                options: this.options
            });
        };

        /**
         * @name VideoAnalyticsObserver#destroy
         *
         * @desc Kills the video observer events and properties.
         */
        proto.destroy = function() {
            this.detachEvents();
            this.options = null;
            this.tracker = null;
            this.video = null;
            this.playCount = null;
            this.captionsEnableCount = null;
            this._events = null;
            this._callbacks = null;
        };

        module.exports = VideoAnalyticsObserver;

    }, {
        "../error-handler/ErrorHandler": "yoExqy",
        "../metricsTracker": "nHWlaR",
        "@marcom/ac-dom-nodes/isElement": 49,
        "@marcom/ac-object": 122
    }],
    "@marcom/ac-analytics/onDocumentReady": [function(require, module, exports) {
        module.exports = require('s+JdTz');
    }, {}],
    "s+JdTz": [function(require, module, exports) {
        'use strict';

        var isLoaded = false;
        var ac_DOMEvents = require('@marcom/ac-dom-events');



        function onDocumentReady(func) {

            function _documentReadyCallback() {
                if (document.readyState === 'complete') {
                    func();
                    ac_DOMEvents.removeEventListener(document, 'readystatechange', _documentReadyCallback);
                }
            }

            if (document.readyState === 'complete') {
                func();
            } else {
                ac_DOMEvents.addEventListener(document, 'readystatechange', _documentReadyCallback);
            }
        }

        module.exports = onDocumentReady;

    }, {
        "@marcom/ac-dom-events": 13
    }],
    "@marcom/ac-analytics/plugins/plugins": [function(require, module, exports) {
        module.exports = require('kyzDBL');
    }, {}],
    "kyzDBL": [function(require, module, exports) {
        'use strict';

        module.exports = {
            sCode: require('./s-code/sCode')
        };

    }, {
        "./s-code/sCode": "2v3JQJ"
    }],
    "@marcom/ac-analytics/plugins/s-code/helpers/DOM": [function(require, module, exports) {
        module.exports = require('M8C1F0');
    }, {}],
    "M8C1F0": [function(require, module, exports) {
        (function() {

            'use strict';

            var ac_DOMNodes = require('@marcom/ac-dom-nodes');
            var errorHandler = require('../../../error-handler/ErrorHandler');
            var storeUrlPattern = require('../../../regexp/storeUrlPattern');
            var moduleName = 'sCodePluginHelper-DOM';

            function isIntraPageLink(element) {
                var internalLink = true;
                if (ac_DOMNodes.isElement(element) && element.href) {
                    var href = element.getAttribute('href');
                    if (href.charAt(0) !== '#' && href.indexOf('javascript:') === -1) {
                        internalLink = false;
                    }
                }
                return internalLink;
            }

            function isStoreLink(url) {

                if (typeof url !== 'string') {
                    errorHandler.log(moduleName, 'isStoreLink', url + ' is not a valid string');
                }

                if (errorHandler.exception) {
                    return;
                }

                return storeUrlPattern.test(url);
            }

            function getLinkHref(targetEl) {
                return targetEl.getAttribute('href') || '';
            }

            module.exports = {
                isIntraPageLink: isIntraPageLink,
                isStoreLink: isStoreLink,
                getLinkHref: getLinkHref
            };

        }());

    }, {
        "../../../error-handler/ErrorHandler": "yoExqy",
        "../../../regexp/storeUrlPattern": "rjjbV7",
        "@marcom/ac-dom-nodes": 37
    }],
    "WZEdYN": [function(require, module, exports) {
        (function() {

            'use strict';

            var errorHandler = require('../../../error-handler/ErrorHandler');
            var moduleName = 'sCodePluginFormatter';
            var separator = require('./separator');

            // A collection of helper methods that deal with 
            // formatting strings specifically for s-code requests
            function productName(value) {
                return lowerCaseString(value);
            }

            function channel(value, locale) {
                var prefix = 'www.';
                var customCountryCodeFormat = {
                    "fr-ca": "ca.fr"
                };

                prefix += customCountryCodeFormat[locale] ? customCountryCodeFormat[locale] : legacyCountryCode(locale);

                return prefix + '.' + value;
            }

            function pageName(originalPageName, locale) {
                var suffix = '';
                // certain country codes are expressed differently in s-code
                var customCountryCodes = {
                    "fr-ca": "ca-fr"
                };
                var customCode = customCountryCodes[locale];

                originalPageName = originalPageName || '';

                if (typeof locale === 'string') {
                    locale = locale.toLowerCase();
                    suffix = customCode ? customCode : legacyCountryCode(locale);
                    suffix = _decorateCountryCode(suffix);
                }

                return lowerCaseString(originalPageName) + suffix;
            }


            // takes a prefix and a suffix to return a string used to represent specific events
            // that took place on the page: eg 's@v'
            // This string is typically used at the front of the s_code request strings.
            function eventString(prefix, suffix) {
                prefix = prefix || '';
                suffix = suffix || '';

                return !!prefix ? (prefix + '@' + suffix) : suffix;
            }


            // returns a value suitable for replacing the COUNTRY_CODE_FILTER template variable
            // This is used to identify internal vs outgoing links
            function countryCodeFilter(locale) {
                var translated;
                var customCountryFilter = {
                    "fr-ca": "ca/fr",
                    "en-419": "lae",
                    "es-419": "la",
                    "en-ap": "asia"
                };

                var reversedLocales = [
                    'fr-be',
                    'nl-be',
                    'fr-ch',
                    'de-ch'
                ];

                if (customCountryFilter[locale]) {
                    translated = customCountryFilter[locale];

                } else if (reversedLocales.indexOf(locale) >= 0) {
                    var localeStr = _transformLocale(locale);
                    translated = localeStr.reverse().join('-');

                } else {
                    translated = _getCountryCodeFromLocale(locale);
                }

                return translated;
            }

            // returns the country code format for certain locales used in some of the
            // older metrics implemenation on apple.com
            function legacyCountryCode(locale) {
                var legacy;
                var customCountryCode = {
                    "fr-be": "bf",
                    "nl-be": "bl",
                    "fr-ch": "cr",
                    "de-ch": "ce",
                    "en-419": "la",
                    "es-419": "la",
                    "en-gb": "uk"
                };

                if (customCountryCode[locale]) {
                    legacy = customCountryCode[locale];
                } else {
                    legacy = _getCountryCodeFromLocale(locale);
                }

                return legacy;
            }

            // Cleans the property values in the properties object from any special characters.
            function cleanProps(properties) {

                var cleanProperties = {};

                if (typeof(properties) === 'object') {

                    for (var key in properties) {
                        cleanProperties[key] = _sanitize(properties[key]);
                    }
                }

                return cleanProperties;
            }

            // Replaces all occurances of a target from a given string.
            function stringReplacer(str, target, replaceWith) {

                var transformedStr = str;

                target = (typeof target === 'string') ? target : '';

                replaceWith = (typeof replaceWith === 'string') ? replaceWith : '';

                if (typeof transformedStr === 'string') {
                    transformedStr = transformedStr.replace(new RegExp(target, 'gi'), replaceWith);
                }

                return transformedStr;
            }

            function getRegionAncestry(data) {
                var regionAncestry = '';

                if (Array.isArray(data.regionAncestry)) {
                    data.regionAncestry.forEach(function(region) {
                        regionAncestry += region.name + separator.pipe;
                    });
                }

                return regionAncestry;
            }

            function lowerCaseString(str) {
                if (typeof str === 'string') {
                    str = str.toLowerCase();
                }

                return str;
            }

            /**
             * PRIVATE FUNCTIONS
             */

            // returns the lower-cased country abbreviation from a properly formatted locale abbreviation.
            // e.g. en-US => us
            // this appears to only be used for the sole purpose of supporting the legacy country code formats
            function _getCountryCodeFromLocale(locale) {

                if (!locale) {
                    errorHandler.log(moduleName, '_getCountryCodeFromLocale', 'locale should be a valid string');
                }

                if (errorHandler.exception) {
                    return;
                }

                var temp = _transformLocale(locale);
                var country;

                if (temp.length > 1) {
                    country = lowerCaseString(temp[1]);
                }

                return country;
            }


            // returns a value appropriate for using in an s_code request string
            function _decorateCountryCode(countryCode) {

                if (!countryCode) {
                    errorHandler.log(moduleName, '_decorateCountryCode', 'countryCode should be a valid string');
                }

                if (errorHandler.exception) {
                    return;
                }

                return ' (' + lowerCaseString(countryCode) + ')';
            }

            // Cleans a string from special characters.

            var whitelist = /[\ì\î\ë\í]/g;

            function _sanitize(value) {

                if (typeof value === 'string') {
                    value = value.replace(whitelist, '');
                }

                return value;
            }

            function _transformLocale(locale) {
                return locale.split(/[-_]/);
            }

            module.exports = {
                productName: productName,
                channel: channel,
                pageName: pageName,
                eventString: eventString,
                countryCodeFilter: countryCodeFilter,
                legacyCountryCode: legacyCountryCode,
                cleanProps: cleanProps,
                stringReplacer: stringReplacer,
                lowerCaseString: lowerCaseString,
                getRegionAncestry: getRegionAncestry
            };

        }());

    }, {
        "../../../error-handler/ErrorHandler": "yoExqy",
        "./separator": "9JEe2W"
    }],
    "@marcom/ac-analytics/plugins/s-code/helpers/formatter": [function(require, module, exports) {
        module.exports = require('WZEdYN');
    }, {}],
    "DHq73b": [function(require, module, exports) {
        (function() {

            'use strict';

            var errorHandler = require('../../../error-handler/ErrorHandler');
            var sProps = {
                channel: 'sChannel',
                campaign: 'sCampaign',
                bucket: 'sBucket',
                bucketProduct: 'sBucketProduct',
                bucketStore: 'sBucketStore'
            };

            var moduleName = 'sCodePluginMetadataHelper';

            function channel(topLevelMetadata) {
                var value = topLevelMetadata[sProps.channel];

                if (!value) {
                    errorHandler.log(moduleName, 'channel', 'analytics-s-channel metadata tag must exist');
                }

                if (errorHandler.exception) {
                    return;
                }

                value = value.toLowerCase().split(' ').join('.');

                return value;
            }

            function bucket(bucketIndex, topLevelMetadata) {
                var bucketProp = sProps.bucket + bucketIndex;

                if (!topLevelMetadata[bucketProp]) {
                    errorHandler.log(moduleName, 'bucket', 'analytics-s-bucket-' + bucketIndex + ' metadata tag must exist');
                }

                if (errorHandler.exception) {
                    return;
                }

                return topLevelMetadata[bucketProp];
            }

            // Gets the product string for bucket data. The bucket product for bucket 0,1,2 is optional. 
            // If we find it we append it to the bucket.
            function bucketProduct(bucketIndex, topLevelMetadata) {
                var bucketProductProp = sProps.bucketProduct + bucketIndex;
                var bucketProd = topLevelMetadata[bucketProductProp];

                return bucketProd;
            }

            // Gets the bucket string for store.
            function bucketStore(topLevelMetadata) {
                return topLevelMetadata[sProps.bucketStore] || '';
            }

            function campaign(topLevelMetadata) {
                return topLevelMetadata[sProps.campaign] || '';
            }

            function platform() {
                var value = 'other';
                var userAgent = navigator.userAgent;
                var patterns = {
                    'mobile other': '/(kindle|silk-accelerated|android|webos|rim tablet os|windows phone)/i',
                    'windows': /windows/i,
                    'iphone/ipod touch': /(iphone|ipod)/i,
                    'ipad': /(ipad)/i,
                    'Mac': /Mac OS X/i
                };

                for (var key in patterns) {
                    if (userAgent.match(patterns[key])) {
                        value = key;
                        break;
                    }
                }

                return value;
            }

            module.exports = {
                channel: channel,
                bucket: bucket,
                bucketProduct: bucketProduct,
                bucketStore: bucketStore,
                platform: platform,
                campaign: campaign
            };
        }());

    }, {
        "../../../error-handler/ErrorHandler": "yoExqy"
    }],
    "@marcom/ac-analytics/plugins/s-code/helpers/metadata": [function(require, module, exports) {
        module.exports = require('DHq73b');
    }, {}],
    "@marcom/ac-analytics/plugins/s-code/helpers/separator": [function(require, module, exports) {
        module.exports = require('9JEe2W');
    }, {}],
    "9JEe2W": [function(require, module, exports) {
        (function() {

            'use strict';

            module.exports = {
                pipe: ' | ',
                hyphen: ' - ',
                colon: ': '
            };

        }());
    }, {}],
    "fEHkLg": [function(require, module, exports) {
        (function() {

            /**
             * A module to store the navigation source data to the localStorage, to be retrieved by the page translator.
             * @module setNavigationSrc
             */

            'use strict';

            var STORAGE_KEY = require('../../../storageKey').appleMetrics;
            var ac_Storage = require('ac-storage');
            var ac_feature = require('@marcom/ac-feature');
            var separator = require('./separator');
            var DOMHelper = require('./DOM');

            /** @function
             * @name setNavigationSrc
             *
             * @desc Set the navigation source data on a click interaction to the localStorage
             *
             * @param {Object} data The data object with tracking variables.
             * @param {Object} metadata The object with global tracking meta data.
             * @param {String} linkUrl The href string for the link.
             */
            function setNavigationSrc(data, metadata, linkUrl) {

                var navSrcObj = {};
                var navSrcStr;
                var regionAncestry = _getRegionAncestry(data);
                var label = (data.targetEl.getAttribute('data-label') || '');

                if (data.region) {
                    navSrcObj.region = data.region;
                }

                navSrcObj.pageName = metadata.pageName || '';
                navSrcObj.linkText = data.linkText || '';
                navSrcObj.eVar1 = (navSrcObj.pageName + separator.pipe + regionAncestry + navSrcObj.linkText);

                // Add to storage as well so store can pick it
                if (data.region === 'search') {
                    navSrcObj.prop7 = 'www' + separator.colon + label;
                    navSrcObj.eVar2 = label;
                    navSrcObj.events = 'event8';
                }

                navSrcStr = JSON.stringify(navSrcObj);

                // If it is a link going to the store use window.localStorage
                // else use ac-storage
                if (DOMHelper.isStoreLink(linkUrl) === false) {
                    ac_Storage.setItem(STORAGE_KEY, navSrcStr);
                } else {
                    _navPathInfoHandOff(navSrcStr);
                }
            }

            function _getRegionAncestry(data) {
                var regionAncestry = '';

                if (Array.isArray(data.regionAncestry)) {
                    data.regionAncestry.forEach(function(region) {
                        regionAncestry += region.name + separator.pipe;
                    });
                }

                return regionAncestry;
            }

            // If it is a link going to the store then prepare to handoff via html5 localStorage
            // Store will be resposible to remove the data from localStorage
            function _navPathInfoHandOff(navSrcStr) {
                if (ac_feature.localStorageAvailable() === true) {
                    window.localStorage.setItem(STORAGE_KEY, navSrcStr);
                }
            }

            module.exports = setNavigationSrc;

        }());

    }, {
        "../../../storageKey": "ntdzZF",
        "./DOM": "M8C1F0",
        "./separator": "9JEe2W",
        "@marcom/ac-feature": 84,
        "ac-storage": 320
    }],
    "@marcom/ac-analytics/plugins/s-code/helpers/setNavigationSrc": [function(require, module, exports) {
        module.exports = require('fEHkLg');
    }, {}],
    "AtGs6E": [function(require, module, exports) {
        (function() {

            'use strict';

            var DOMHelper = require('./DOM');

            function async(data) {
                var isIntraPageLink = DOMHelper.isIntraPageLink(data.targetEl);
                var isAsync = true;

                // If it is an outgoing link then don't run it in async
                if (!isIntraPageLink) {
                    isAsync = false;
                }
                return isAsync;
            }

            module.exports = {
                async: async
            };

        }());
    }, {
        "./DOM": "M8C1F0"
    }],
    "@marcom/ac-analytics/plugins/s-code/helpers/setOptions": [function(require, module, exports) {
        module.exports = require('AtGs6E');
    }, {}],
    "@marcom/ac-analytics/plugins/s-code/helpers/templateVar": [function(require, module, exports) {
        module.exports = require('2ZvpEb');
    }, {}],
    "2ZvpEb": [function(require, module, exports) {
        (function() {

            'use strict';

            var formatter = require('./formatter');

            function set(metadata, originalMetaData) {
                return [{
                    name: "{PAGE_NAME}",
                    value: metadata.pageName
                }, {
                    name: "{PAGE_NAME_NO_LOCALE}",
                    value: originalMetaData.pageName
                }, {
                    name: "{CHANNEL}",
                    value: metadata.channel
                }, {
                    name: "{CAMPAIGN}",
                    value: metadata.campaign
                }, {
                    name: "{COUNTRY_CODE}",
                    value: metadata.legacyCountryCode
                }, {
                    name: "{COUNTRY_CODE_FILTER}",
                    value: metadata.countryCodeFilter
                }, {
                    name: "{PRODUCT_NAME}",
                    value: metadata.productName
                }, {
                    name: "{PLATFORM}",
                    value: metadata.platform
                }];
            }

            function translate(str, templateVarArr) {
                if (typeof str === 'string') {
                    templateVarArr.forEach(function(templateVar) {
                        if (templateVar.name && typeof templateVar.name === 'string') {
                            if (str.toLowerCase().indexOf(templateVar.name.toLowerCase()) > -1) {
                                str = formatter.stringReplacer(str, templateVar.name, templateVar.value);
                            }
                        }
                    });
                }

                return str;
            }

            module.exports = {
                set: set,
                translate: translate
            };
        }());
    }, {
        "./formatter": "WZEdYN"
    }],
    "@marcom/ac-analytics/plugins/s-code/sCode": [function(require, module, exports) {
        module.exports = require('2v3JQJ');
    }, {}],
    "2v3JQJ": [function(require, module, exports) {
        'use strict';

        var proto;

        var errorHandler = require('../../error-handler/ErrorHandler');
        var ac_Object = require('@marcom/ac-object');
        var ac_sCode = require('@marcom/ac-s-code');
        var topLevelMetadata = require('../../metadata');
        var formatter = require('./helpers/formatter');
        var metadataHelper = require('./helpers/metadata');
        var translator = require('./translator/translator');
        var submitMethods = require('./submit-methods/submitMethods');
        var templateVarHelper = require('./helpers/templateVar');

        var countryBucket = [
            'us',
            'au|ca|cn|de|es|fr|it|jp|uk',
            'ap|at|bf|bl|br|ce|cr|dk|fi|hk|ie|in|kr|la|mx|nl|no|nz|pl|pt|ru|se|sg|th|tw|za'
        ];

        var moduleName = 'SCodePlugin';

        function SCodePlugin() {
            if (errorHandler.exception) {
                return;
            }

            this._initializePlugin(topLevelMetadata.getMetadata());
        }

        proto = SCodePlugin.prototype;

        proto.reset = function() {
            var options = {
                force: true
            };

            this.clearProps();
            this._initializePlugin(topLevelMetadata.refreshMetadata(), options);
        };

        proto._initializePlugin = function(topLevelMetadataObj, options) {
            this.setPageMetadata(topLevelMetadataObj);
            this.setFormattedValues();
            this.setTemplateVars();

            // @TODO: This code has become very sequence dependent
            // Try to make the individual tasks independent of each other as much as we can
            // Replace any template token used for channel
            this.formattedValues.channel = this._replaceTemplateVars(this.formattedValues.channel);

            this.initializeSCode(topLevelMetadataObj, options);
        };

        proto.initializeSCode = function(topLevelMetadataObj, options) {
            options = options || {};
            options.bucket = this.getBucket(topLevelMetadataObj);
            options.channel = this.formattedValues.channel;
            options.pageName = this.formattedValues.pageName;
            options.linkInternalFilters = this.getLinkInternalFilters();

            ac_sCode.init(options);
        };

        proto.setPageMetadata = function(topLevelMetadataObj) {
            this.pageMetadata = ac_Object.clone(topLevelMetadataObj);
            this.pageMetadata.platform = metadataHelper.platform();
            this.pageMetadata.campaign = metadataHelper.campaign(topLevelMetadataObj);
            this.pageMetadata.channel = metadataHelper.channel(topLevelMetadataObj);

            // Lowercase the original metadata as well
            this.pageMetadata.pageName = formatter.lowerCaseString(this.pageMetadata.pageName);
            this.pageMetadata.locale = formatter.lowerCaseString(this.pageMetadata.locale);
        };

        proto.setFormattedValues = function() {
            this.formattedValues = {
                pageName: formatter.pageName(this.pageMetadata.pageName, this.pageMetadata.locale),
                channel: formatter.channel(this.pageMetadata.channel, this.pageMetadata.locale),
                productName: formatter.productName(this.pageMetadata.productName),
                countryCodeFilter: formatter.countryCodeFilter(this.pageMetadata.locale),
                legacyCountryCode: formatter.legacyCountryCode(this.pageMetadata.locale),
                campaign: this.pageMetadata.campaign,
                platform: this.pageMetadata.platform
            };
        };

        proto.setTemplateVars = function() {
            this.templateVarArr = templateVarHelper.set(this.formattedValues, this.pageMetadata);
        };

        // Resets global s_code properties
        proto.clearProps = function() {
            var sCode = ac_sCode.getInstance();
            if (typeof sCode === 'object') {
                sCode.prop6 = sCode.g_prop6 = sCode.pageURL = sCode.g_pageURL = sCode.g_channel = '';
            }
        };


        // Translates the properties into s_code specific format.
        proto.translate = function(request) {
            if (!request || typeof request !== 'object') {
                errorHandler.log(moduleName, 'translate', 'Request param (' + request + ') is not an object');
            }

            if (errorHandler.exception) {
                return;
            }

            // set properties as translated request
            request = translator.translate(request, this.formattedValues, this.pageMetadata);

            return request;
        };

        // Determines the type of analytics request and fires the appropriate s call.
        proto.submit = function(translatedRequest) {

            var options;
            var sCode = ac_sCode.getInstance();

            if (!translatedRequest || typeof translatedRequest !== 'object') {
                errorHandler.log(moduleName, 'submit', 'Request param (' + translatedRequest + ') is not an object');
            }

            if (errorHandler.exception) {
                return;
            }

            if (!translatedRequest.type || typeof translatedRequest.type !== 'string') {
                errorHandler.log(moduleName, 'submit', 'property "type" (' + translatedRequest.type + '") must be a string');
            }

            if (!window.s || typeof window.s !== 'object') {
                errorHandler.log(moduleName, 'submit', 'sCode (' + window.s + ') is not an object');
            }

            if (errorHandler.exception) {
                return;
            }

            options = translatedRequest.options || {};

            // Loop through and assign the properties to s_code before the final call
            this._setSCodeProps(translatedRequest);

            if (options.silent !== true) {
                if (translatedRequest.submitMethod && submitMethods[translatedRequest.submitMethod]) {
                    submitMethods[translatedRequest.submitMethod](translatedRequest, this.formattedValues, sCode);
                }
            }
        };

        // set the s.linkInternalFilters property to let s-code differentiate between internal and external links
        proto.getLinkInternalFilters = function() {
            var value;

            if (this.formattedValues.countryCodeFilter !== 'us') {
                value = this.formattedValues.countryCodeFilter;
            }

            return value;
        };

        // set properties on the global `s` object prior to submitting tracking requests
        proto._setSCodeProps = function(request) {
            var properties = request.properties || {};
            var sCode = ac_sCode.getInstance();

            // Reset link tracking events for each request
            sCode.linkTrackEvents = '';

            request.data.linkTrackVars = request.data.linkTrackVars || [];

            for (var key in properties) {
                if (key === 'events') {
                    sCode.linkTrackEvents = properties[key];
                }

                if (key !== 'title') {
                    request.data.linkTrackVars.push(key);
                    sCode[key] = properties[key];
                }
            }
        };

        proto.getBucket = function(topLevelMetadataObj) {

            var countryBucketSize = countryBucket.length;

            // Default index to bucket 2
            var index = 2;

            // Determine which tier the country falls under
            for (var i = 0; i < countryBucketSize; i++) {
                if (countryBucket[i].indexOf(this.formattedValues.legacyCountryCode) !== -1) {
                    index = i;
                    break;
                }
            }

            // Get the bucket string from the meta tag for the current tier
            var bucketMetaTagValue = metadataHelper.bucket(index, topLevelMetadataObj);

            var bucket = this._replaceTemplateVars(bucketMetaTagValue);

            // Get the bucket product string from the meta tag for the current tier
            var bucketProduct = this._replaceTemplateVars(metadataHelper.bucketProduct(index, topLevelMetadataObj));

            // Get the store bucket string if available
            var bucketStore = this._replaceTemplateVars(metadataHelper.bucketStore(topLevelMetadataObj));

            return bucket + (!!bucketProduct ? (',' + bucketProduct) : '') + (!!bucketStore ? (',' + bucketStore) : '');
        };

        // Replaces template
        proto._replaceTemplateVars = function(str) {
            return templateVarHelper.translate(str, this.templateVarArr);
        };

        module.exports = SCodePlugin;

    }, {
        "../../error-handler/ErrorHandler": "yoExqy",
        "../../metadata": "W+q+EN",
        "./helpers/formatter": "WZEdYN",
        "./helpers/metadata": "DHq73b",
        "./helpers/templateVar": "2ZvpEb",
        "./submit-methods/submitMethods": "1e2jY8",
        "./translator/translator": "LJ68Kt",
        "@marcom/ac-object": 122,
        "@marcom/ac-s-code": 151
    }],
    "reNdTz": [function(require, module, exports) {
        (function() {

            'use strict';

            function submit(request, metadata, sCode) {

                var url = window.location.href;
                var title = request.properties.title || '';
                var src;
                var img1x1;

                if (typeof sCode === 'object') {
                    src = _getBasePath(url) + ((metadata.countryCodeFilter !== 'us') ? metadata.countryCodeFilter : '') +
                        '/b/ss/' + sCode.un + '/' + (sCode.mobile ? '5.1' : '1') + '/' + sCode.version +
                        '/s0' + Date.now() + '?ndh=1&t=' + _getTimestamp() + '&fid=' + sCode.fid + '&g=' + url +
                        '&pageName=' + metadata.pageName + '&cc=' + sCode.currencyCode + '&c3=' + title + '&h1=' + sCode.channel +
                        '&pe=lnk_e&pev2=' + title + '&s=' + sCode.resolution + '&c=' + sCode.colorDepth +
                        '&j=' + sCode.javascriptVersion + '&v=' + sCode.javaEnabled + '&k=' + sCode.cookiesEnabled + '&bw=' + sCode.browserWidth +
                        '&bh=' + sCode.browserHeight + '&p=' + sCode.plugins + '&r=' + sCode.eVar49;

                    img1x1 = document.createElement('img');
                    img1x1.setAttribute('width', '1');
                    img1x1.setAttribute('height', '1');
                    img1x1.setAttribute('border', '0');
                    img1x1.src = src;

                    return img1x1;
                }
            }

            function _getBasePath(url) {
                var protocol;
                var host;

                url = url.split('/');
                protocol = url[0];
                host = url[2];

                return protocol + '//' + host + '/';
            }

            function _getTimestamp() {
                var now = new Date();
                return now.getDate() + '/' + now.getMonth() + '/' + now.getFullYear() + ' ' + now.getHours() + ':' + now.getMinutes() + ':' + now.getSeconds() + ' ' + now.getDay() + ' ' + now.getTimezoneOffset();
            }

            module.exports = submit;

        }());

    }, {}],
    "@marcom/ac-analytics/plugins/s-code/submit-methods/manual": [function(require, module, exports) {
        module.exports = require('reNdTz');
    }, {}],
    "@marcom/ac-analytics/plugins/s-code/submit-methods/submitMethods": [function(require, module, exports) {
        module.exports = require('1e2jY8');
    }, {}],
    "1e2jY8": [function(require, module, exports) {
        var t = require('./t');
        var tl = require('./tl');
        var manual = require('./manual');

        module.exports = {
            t: t,
            tl: tl,
            manual: manual
        };

    }, {
        "./manual": "reNdTz",
        "./t": "Jo4tJj",
        "./tl": "0Vhqq3"
    }],
    "Jo4tJj": [function(require, module, exports) {
        (function() {

            'use strict';

            function submit(request, metadata, sCode) {

                if (typeof sCode === 'object' && typeof sCode.t === 'function') {
                    // Set the global properties for s_code page view tracking.
                    sCode.pageName = metadata.pageName;
                    sCode.channel = metadata.channel;

                    sCode.t();
                }
            }

            module.exports = submit;

        }());

    }, {}],
    "@marcom/ac-analytics/plugins/s-code/submit-methods/t": [function(require, module, exports) {
        module.exports = require('Jo4tJj');
    }, {}],
    "0Vhqq3": [function(require, module, exports) {
        (function() {

            'use strict';

            var errorHandler = require('../../../error-handler/ErrorHandler');

            var moduleName = 'sCodePluginSubmitMethodtl';

            var DOMHelper = require('../helpers/DOM');

            function submit(request, metadata, sCode) {
                var linkType;
                var targetEl;

                // don't even think about doing anything if sCode or the tl method don't exist.
                if (typeof sCode === 'object' && typeof sCode.tl === 'function') {

                    if (typeof request.data !== 'object') {
                        errorHandler.log(moduleName, 'submit', 'Request param data (' + request.data + ') is not an object');
                    }

                    if (typeof request.properties.title !== 'string') {
                        errorHandler.log(moduleName, 'submit', 'Request param title (' + request.properties.title + ') is not a string');
                    }

                    if (errorHandler.exception) {
                        return;
                    }

                    // Set default linkTrackVars for referrer and current location
                    sCode.linkTrackVars = 'eVar54,eVar49';

                    if (request.data.linkTrackVars && request.data.linkTrackVars.length > 0) {
                        sCode.linkTrackVars += ',' + request.data.linkTrackVars.join(',');
                    }

                    // Default to custom link type if link type is not defined
                    linkType = request.data.linkType || 'o';

                    // s.tl method needs the first parameter to be either a valid DOM element or `true`
                    targetEl = _targetEl(request.data.targetEl);

                    // set s_code's internal timeout to 0 if not tracking a link
                    sCode.forcedLinkTrackingTimeout = _forcedLinkTrackingTimeout(request);

                    // Call s.tl for all other tracking calls
                    sCode.tl(targetEl, linkType, request.properties.title);

                    _clearTrackingData(sCode);
                }
            }

            /**
             * Priavte Functions
             */

            // Clear the link tracking custom properties and events after each s.tl request
            function _clearTrackingData(sCode) {
                sCode.linkTrackVars = '';
                sCode.linkTrackEvents = '';
            }

            // set s_code's timeout 0 if not tracking a link
            function _forcedLinkTrackingTimeout(request) {
                var duration = 0;
                var element = request.data.targetEl;
                var href;

                if (request.type && request.type === 'link' || request.type === 'click') {
                    if (_isOutgoingLink(element) === true) {
                        duration = 500;
                    }
                }

                return duration;
            }

            function _targetEl(element) {
                var result = _isOutgoingLink(element);
                return (result === true) ? element : true;
            }

            function _isOutgoingLink(element) {
                var isOutgoingLink = true;
                var isIntraPageLink = DOMHelper.isIntraPageLink(element);

                if (!element || isIntraPageLink === true) {
                    isOutgoingLink = false;
                }

                return isOutgoingLink;
            }

            module.exports = submit;

        }());

    }, {
        "../../../error-handler/ErrorHandler": "yoExqy",
        "../helpers/DOM": "M8C1F0"
    }],
    "@marcom/ac-analytics/plugins/s-code/submit-methods/tl": [function(require, module, exports) {
        module.exports = require('0Vhqq3');
    }, {}],
    "g4AmU0": [function(require, module, exports) {
        (function() {

            'use strict';

            var formatter = require('../../helpers/formatter');

            function translate(request, metadata, originalMetaData) {

                var translatedRequest = request;

                var data = translatedRequest.data;

                var interactionTypePrefix = {
                    "play": "s",
                    "replay": "r",
                    "ended": "e",
                    "pause": "p"
                };

                var divider = ' - ';

                var properties = {};

                properties.prop13 = formatter.eventString('a', interactionTypePrefix[data.interactionType]) + divider + originalMetaData.pageName;

                properties.prop3 = properties.title = formatter.eventString('a', interactionTypePrefix[data.interactionType]) + divider + originalMetaData.pageName + divider + formatter.lowerCaseString(data.title);

                properties.prop4 = data.audioSrc;

                translatedRequest.properties = properties;

                translatedRequest.submitMethod = 'tl';

                return translatedRequest;
            }

            module.exports = {
                translate: translate
            };

        }());

    }, {
        "../../helpers/formatter": "WZEdYN"
    }],
    "@marcom/ac-analytics/plugins/s-code/translator/component/audio": [function(require, module, exports) {
        module.exports = require('g4AmU0');
    }, {}],
    "hIhnjJ": [function(require, module, exports) {
        (function() {

            'use strict';
            var setOptions = require('../../helpers/setOptions');
            var separator = require('../../helpers/separator');
            var formatter = require('../../helpers/formatter');

            function translate(request, metadata, originalMetaData) {

                var translatedRequest = request;

                // Add properties to a separate object
                translatedRequest.properties = {};

                // Set default tracking properties for click tracking
                _setDefaultTrackingProps(translatedRequest, originalMetaData);

                // Set async to false on outgoing links
                translatedRequest.options.async = setOptions.async(translatedRequest.data);

                translatedRequest.submitMethod = 'tl';

                return translatedRequest;
            }

            function _setDefaultTrackingProps(translatedRequest, originalMetaData) {
                var linkText = translatedRequest.data.linkText.toLowerCase();
                var defaultText = originalMetaData.pageName + separator.hyphen + (translatedRequest.data.linkImg || linkText);
                var regionAncestry = formatter.getRegionAncestry(translatedRequest.data);

                // Mandatory property for the s.tl call (aka pev2)
                translatedRequest.properties.title = defaultText;

                // Set default prop3
                translatedRequest.properties.prop3 = defaultText;
                translatedRequest.properties.eVar1 = originalMetaData.pageName + separator.hyphen + (regionAncestry || '') + linkText;

                // Add the custom properties to the translated request
                _setCustomTrackingProps(translatedRequest);
            }

            function _setCustomTrackingProps(translatedRequest) {

                if (!translatedRequest.data.dataAnalyticsClick && typeof translatedRequest.data.dataAnalyticsClick !== 'object') {
                    return;
                }

                for (var key in translatedRequest.data.dataAnalyticsClick) {
                    translatedRequest.properties[key] = translatedRequest.data.dataAnalyticsClick[key];
                }

                _formatDefaultProps(translatedRequest);
            }

            function _formatDefaultProps(translatedRequest) {
                // Add a prefix to prop3 if available, keep for backwards compatibility
                // Ideally prop3 should be passed as `prop3: t@mac`
                if (translatedRequest.data.dataAnalyticsClick.prefix && translatedRequest.properties.prop3) {
                    formatter.eventString(translatedRequest.data.dataAnalyticsClick.prefix, translatedRequest.properties.prop3);
                }
            }

            module.exports = {
                translate: translate
            };

        }());
    }, {
        "../../helpers/formatter": "WZEdYN",
        "../../helpers/separator": "9JEe2W",
        "../../helpers/setOptions": "AtGs6E"
    }],
    "@marcom/ac-analytics/plugins/s-code/translator/component/click": [function(require, module, exports) {
        module.exports = require('hIhnjJ');
    }, {}],
    "@marcom/ac-analytics/plugins/s-code/translator/component/event": [function(require, module, exports) {
        module.exports = require('6NDW85');
    }, {}],
    "6NDW85": [function(require, module, exports) {
        (function() {

            'use strict';

            var formatter = require('../../helpers/formatter');

            var templateVarHelper = require('../../helpers/templateVar');

            function translate(request, metadata, originalMetaData) {

                var translatedRequest = request;

                var data = translatedRequest.data;

                var templateVarArr = templateVarHelper.set(metadata, originalMetaData);

                var properties = {};

                for (var key in data) {
                    properties[key] = data[key];

                    if (typeof properties[key] === 'string') {
                        properties[key] = templateVarHelper.translate(properties[key], templateVarArr);
                    }
                }

                translatedRequest.properties = properties;

                translatedRequest.submitMethod = 'tl';

                return translatedRequest;
            }

            module.exports = {
                translate: translate
            };

        }());
    }, {
        "../../helpers/formatter": "WZEdYN",
        "../../helpers/templateVar": "2ZvpEb"
    }],
    "@marcom/ac-analytics/plugins/s-code/translator/component/exit": [function(require, module, exports) {
        module.exports = require('YjpnJy');
    }, {}],
    "YjpnJy": [function(require, module, exports) {
        (function() {

            'use strict';

            var formatter = require('../../helpers/formatter');

            function translate(request, metadata, originalMetaData) {

                var translatedRequest = request;

                var data = translatedRequest.data;

                var divider = ' - ';

                var properties = {};

                var timeSpentOnPage = ((data.exitTimeStamp - originalMetaData.initialTimeStamp) * 0.001).toFixed(2);

                properties.prop3 = timeSpentOnPage;

                properties.title = formatter.eventString(timeSpentOnPage, originalMetaData.pageName);

                translatedRequest.properties = properties;

                translatedRequest.submitMethod = 'manual';

                return translatedRequest;
            }

            module.exports = {
                translate: translate
            };

        }());
    }, {
        "../../helpers/formatter": "WZEdYN"
    }],
    "paaDxu": [function(require, module, exports) {
        (function() {

            'use strict';

            var errorHandler = require('../../../../error-handler/ErrorHandler');
            var formatter = require('../../helpers/formatter');
            var moduleName = 'sCodePluginGalleryTranslator';

            function translate(request, metadata, originalMetaData) {

                var translatedRequest = request;

                var data = translatedRequest.data;

                var divider = ' - ';

                var interactionTypeMap = {
                    "click": "ci",
                    "keydown": "ki",
                    "swipe": "si",
                    "dot": "bi",
                    "thumb": "ci",
                    "paddle": "pi",
                    "auto": "ai"
                };

                var outgoingInteractionType;

                var incomingInteractionType;

                var properties = {};

                var propString = '';

                _clearConditionalsCodeProps(properties);

                if (data.incomingInteractionType) {

                    if (interactionTypeMap[data.incomingInteractionType]) {
                        incomingInteractionType = interactionTypeMap[data.incomingInteractionType];
                    }
                }

                if (data.outgoingInteractionType) {

                    if (interactionTypeMap[data.outgoingInteractionType]) {
                        outgoingInteractionType = interactionTypeMap[data.outgoingInteractionType];
                    }
                }

                if (!incomingInteractionType) {
                    errorHandler.log(moduleName, 'translate', incomingInteractionType + '" is not a valid interaction type for the incoming slide');
                }

                if (!outgoingInteractionType) {
                    errorHandler.log(moduleName, 'translate', outgoingInteractionType + '" is not a valid interaction type for the outgoing slide');
                }

                if (errorHandler.exception) {
                    return;
                }

                propString = originalMetaData.pageName + divider + request.options.galleryName + divider;

                properties.prop2 = formatter.eventString(outgoingInteractionType, '') + propString + data.outgoing.id;

                properties.prop3 = properties.title = formatter.eventString(incomingInteractionType, '') + propString + data.incoming.id;

                if (data.galleryFirstTimeTrigger === true) {

                    properties.prop16 = 'gallery interaction';

                    properties.eVar16 = (request.options.galleryName ? request.options.galleryName + ' ' : '') + 'gallery interaction';

                    properties.events = 'event1';
                }

                translatedRequest.properties = properties;

                translatedRequest.submitMethod = 'tl';

                return translatedRequest;
            }

            // If s. (props) were set in a condition in previous request
            // make sure they are cleared on the next request
            function _clearConditionalsCodeProps(properties) {
                properties.prop16 = properties.eVar16 = '';
            }

            module.exports = {
                translate: translate
            };

        }());

    }, {
        "../../../../error-handler/ErrorHandler": "yoExqy",
        "../../helpers/formatter": "WZEdYN"
    }],
    "@marcom/ac-analytics/plugins/s-code/translator/component/gallery": [function(require, module, exports) {
        module.exports = require('paaDxu');
    }, {}],
    "iCOMu/": [function(require, module, exports) {
        (function() {

            'use strict';

            var setOptions = require('../../helpers/setOptions');
            var separator = require('../../helpers/separator');
            var formatter = require('../../helpers/formatter');
            var DOMHelper = require('../../helpers/DOM');
            var dataAttrHelper = require('../../../../data-attr/helper');
            var templateVarHelper = require('../../helpers/templateVar');
            var setNavigationSrc = require('../../helpers/setNavigationSrc');

            function translate(request, metadata, originalMetaData) {

                var translatedRequest = request;
                var linkUrl = DOMHelper.getLinkHref(translatedRequest.data.targetEl);

                // Add properties to a separate object
                translatedRequest.properties = {};

                // Set async to false on outgoing links
                translatedRequest.options.async = setOptions.async(translatedRequest.data);

                // Set tracking properties for link tracking (this prop is not used at the moment)
                // Link tracking only tracks the user's navigation path througout the site
                _setDefaultTrackingProps(translatedRequest, originalMetaData, linkUrl);

                // Set any custom properties sent via the data attribute
                _setCustomProps(translatedRequest, metadata, originalMetaData);

                // Set user's navigation path info to storage, to be retrieved on the next page request (s.t)
                setNavigationSrc(translatedRequest.data, metadata, linkUrl);

                // Just in case link observer ever needed to fire a tracking request on each link click
                translatedRequest.submitMethod = 'tl';

                return translatedRequest;
            }

            function _setDefaultTrackingProps(translatedRequest, originalMetaData, linkUrl) {
                // Get the text for title (pev2)
                var identityStr = '';
                var defaultLinkTitle = _getDefaultLinkTitle(translatedRequest.data, originalMetaData);

                if (linkUrl.indexOf('http://') > -1 || linkUrl.indexOf('https://') > -1) {
                    identityStr = separator.hyphen + (linkUrl.split('/')[2].split('.')[0] + ' link');
                }

                translatedRequest.properties.title = defaultLinkTitle + identityStr;
            }

            function _setCustomProps(translatedRequest, metadata, originalMetaData) {
                // Check if there are custom properties in the data-attribute
                var dataAttrValue = translatedRequest.data.targetEl.getAttribute('data-' + translatedRequest.options.dataAttribute);
                var templateVarArr = templateVarHelper.set(metadata, originalMetaData); // Need to reset TOKEN values, in case the values have been refreshed
                var customProperties;

                if (dataAttrValue) {
                    customProperties = dataAttrHelper.dataStringToObject(dataAttrValue);

                    for (var prop in customProperties) {
                        if (customProperties.hasOwnProperty(prop)) {
                            translatedRequest.properties[prop] = customProperties[prop];

                            if (typeof translatedRequest.properties[prop] === 'string') {
                                translatedRequest.properties[prop] = templateVarHelper.translate(translatedRequest.properties[prop], templateVarArr);
                            }
                        }
                    }
                }
            }

            function _getDefaultLinkTitle(data, originalMetaData) {

                var title = originalMetaData.pageName + separator.hyphen + data.linkText;
                var postfix = data.linkImg || data.linkText || data.linkId || '';

                if (data.region) {
                    title = formatter.eventString(data.region.charAt(0), postfix);
                }

                return title;
            }

            module.exports = {
                translate: translate
            };

        }());
    }, {
        "../../../../data-attr/helper": "DckvZc",
        "../../helpers/DOM": "M8C1F0",
        "../../helpers/formatter": "WZEdYN",
        "../../helpers/separator": "9JEe2W",
        "../../helpers/setNavigationSrc": "fEHkLg",
        "../../helpers/setOptions": "AtGs6E",
        "../../helpers/templateVar": "2ZvpEb"
    }],
    "@marcom/ac-analytics/plugins/s-code/translator/component/link": [function(require, module, exports) {
        module.exports = require('iCOMu/');
    }, {}],
    "@marcom/ac-analytics/plugins/s-code/translator/component/overlay": [function(require, module, exports) {
        module.exports = require('94pkSs');
    }, {}],
    "94pkSs": [function(require, module, exports) {
        (function() {

            'use strict';

            var formatter = require('../../helpers/formatter');

            function translate(request, metadata, originalMetaData) {

                var translatedRequest = request;

                var properties = {};

                translatedRequest.properties = properties;

                translatedRequest.submitMethod = 'tl';

                return translatedRequest;
            }

            module.exports = {
                translate: translate
            };

        }());

    }, {
        "../../helpers/formatter": "WZEdYN"
    }],
    "BagcUO": [function(require, module, exports) {
        (function() {

            'use strict';

            var STORAGE_KEY = require('../../../../storageKey').appleMetrics;
            var separator = require('../../helpers/separator');
            var ac_Storage = require('ac-storage');
            var formatter = require('../../helpers/formatter');
            var DOMHelper = require('../../helpers/DOM');
            var templateVarHelper = require('../../helpers/templateVar');
            var errorHandler = require('../../../../error-handler/ErrorHandler');
            var ac_feature = require('@marcom/ac-feature');
            var w = window;

            var moduleName = 'sCodePageTranslator';

            function translate(request, metadata, originalMetaData) {

                var translatedRequest = request;

                // Add properties to a separate object
                translatedRequest.properties = {};

                // Set default properties before the tokens get transformed
                _setDefaultProps(translatedRequest);

                // Replace all tokens and assign to the properties object. Dont touch data.
                _replaceTemplateVars(translatedRequest, metadata, originalMetaData);

                // Set the page load request properties
                _setPageRequestProps(translatedRequest, metadata);

                // Add page request properties for navigation source
                _setNavSrcProps(translatedRequest, metadata);

                translatedRequest.submitMethod = 't';

                return translatedRequest;
            }

            function _setDefaultProps(translatedRequest) {
                translatedRequest.data.prop20 = translatedRequest.data.prop20 || 'AOS' + separator.colon + '{COUNTRY_CODE}';
            }

            function _setPageRequestProps(translatedRequest, metadata) {

                if (typeof translatedRequest.properties !== 'object') {
                    errorHandler.log(moduleName, '_setPageRequestProps', translatedRequest.properties + ' is not a valid properties object in the analytics request');
                }

                if (errorHandler.exception) {
                    return;
                }

                translatedRequest.properties.prop19 = translatedRequest.properties.prop20 + separator.colon + metadata.pageName;
                translatedRequest.properties.eVar3 = translatedRequest.properties.prop20;
            }

            function _setNavSrcProps(translatedRequest, metadata) {
                // Get nav path info
                var navSrcData = _getNavPathInfo() || {};

                translatedRequest.properties.prop25 = _getNavSource(navSrcData);

                // Props for the store
                translatedRequest.properties.eVar1 = navSrcData.eVar1 || null;
                translatedRequest.properties.products = navSrcData.products || null;

                // Only available with search link clicked
                translatedRequest.properties.eVar2 = navSrcData.eVar2 || null;
                translatedRequest.properties.prop7 = navSrcData.prop7 || null;

                if (navSrcData.events) {
                    translatedRequest.properties.events = navSrcData.events;
                }
            }

            function _getNavPathInfo() {
                var isArrivingFromStore = _isArrivingFromStore();
                var navSrcStr;
                var navSrcObj;

                if (isArrivingFromStore === true && ac_feature.localStorageAvailable() === true) {
                    navSrcStr = w.localStorage.getItem(STORAGE_KEY);
                    navSrcObj = _transformLocalStorageStrtoObject(w.localStorage, navSrcStr);
                } else {
                    navSrcStr = ac_Storage.getItem(STORAGE_KEY);
                    navSrcObj = _transformLocalStorageStrtoObject(ac_Storage, navSrcStr);
                }

                return navSrcObj;
            }

            function _transformLocalStorageStrtoObject(storageObj, str) {
                var obj;

                if (str) {
                    storageObj.removeItem(STORAGE_KEY);
                    obj = JSON.parse(str);
                }

                return obj;
            }

            function _isArrivingFromStore() {

                var referrer = document.referrer;
                return (referrer && DOMHelper.isStoreLink(referrer));
            }

            function _replaceTemplateVars(translatedRequest, metadata, originalMetaData) {

                var templateVarArr = templateVarHelper.set(metadata, originalMetaData);

                if (typeof translatedRequest.data !== 'object') {
                    errorHandler.log(moduleName, '_replaceTemplateVars', translatedRequest.data + ' is not a valid data object in the analytics request');
                }

                if (errorHandler.exception) {
                    return;
                }

                for (var key in translatedRequest.data) {
                    if (translatedRequest.data.hasOwnProperty(key)) {
                        translatedRequest.properties[key] = translatedRequest.data[key];

                        if (typeof translatedRequest.properties[key] === 'string') {
                            translatedRequest.properties[key] = templateVarHelper.translate(translatedRequest.properties[key], templateVarArr);
                        }
                    }
                }
            }

            function _getNavSource(navSourceData) {
                var entryPoint = _getEntryPointStr();

                if (navSourceData.region) {
                    return navSourceData.region;
                }

                if (entryPoint) {
                    return entryPoint;
                }

                return 'other nav or none';
            }

            function _getEntryPointStr() {
                var referrer = document.referrer;
                var currentDomain = window.location.host;
                var entryPoint;

                if (!referrer) {
                    entryPoint = 'direct entry';
                }

                if (referrer && referrer !== '' && referrer.split('?')[0].indexOf(currentDomain) === -1) {
                    entryPoint = 'third party';
                }

                return entryPoint;
            }

            module.exports = {
                translate: translate
            };

        }());
    }, {
        "../../../../error-handler/ErrorHandler": "yoExqy",
        "../../../../storageKey": "ntdzZF",
        "../../helpers/DOM": "M8C1F0",
        "../../helpers/formatter": "WZEdYN",
        "../../helpers/separator": "9JEe2W",
        "../../helpers/templateVar": "2ZvpEb",
        "@marcom/ac-feature": 84,
        "ac-storage": 320
    }],
    "@marcom/ac-analytics/plugins/s-code/translator/component/page": [function(require, module, exports) {
        module.exports = require('BagcUO');
    }, {}],
    "@marcom/ac-analytics/plugins/s-code/translator/component/section": [function(require, module, exports) {
        module.exports = require('+0a7ZJ');
    }, {}],
    "+0a7ZJ": [function(require, module, exports) {
        (function() {

            'use strict';

            function translate(request, metadata, originalMetaData) {

                var translatedRequest = request;

                var trackedElement = translatedRequest.data.element;

                var divider = ' - ';

                var properties = {};

                var elementName = trackedElement.name || trackedElement.id || '';

                var timeInThreshold = trackedElement.thresholdExitTime - trackedElement.thresholdEnterTime;

                var sectionNumber = (trackedElement.element && trackedElement.element.position) ? ' .' + trackedElement.element.position : '';

                properties.prop34 = properties.title = originalMetaData.pageName + divider + elementName + divider + 'section engaged' + sectionNumber;

                properties.prop35 = (timeInThreshold / 1000).toFixed(2);

                translatedRequest.properties = properties;

                translatedRequest.submitMethod = 'tl';

                return translatedRequest;
            }

            module.exports = {
                translate: translate
            };

        }());

    }, {}],
    "@marcom/ac-analytics/plugins/s-code/translator/component/video": [function(require, module, exports) {
        module.exports = require('5BgK4Z');
    }, {}],
    "5BgK4Z": [function(require, module, exports) {
        (function() {

            'use strict';

            var formatter = require('../../helpers/formatter');

            function translate(request, metadata, originalMetaData) {

                var translatedRequest = request;

                var data = translatedRequest.data;

                var divider = ' - ';

                var eventTypeMap = {
                    "started": "s",
                    "replay": "rp",
                    "ended": "e",
                    "reended": "re",
                    "captions-enabled": "ce"
                };

                var eventType = (data.eventType && eventTypeMap[data.eventType]) ? eventTypeMap[data.eventType] : data.eventType;

                var properties = {};

                // If any event is not in our mapping then dont fire an s.tl for it
                // mainly because we want to track one video session per user
                if (!eventTypeMap[data.eventType]) {
                    translatedRequest.options.silent = true;
                } else {
                    translatedRequest.options.silent = false;
                }

                _clearConditionalsCodeProps(properties);

                properties.title = properties.prop13 = formatter.eventString('v', eventType) + ': ' + originalMetaData.pageName + divider + data.videoId;

                if (data.eventType === 'started') {
                    properties.prop16 = properties.eVar16 = 'video plays';
                    properties.events = 'event2';

                } else if (data.eventType === 'ended') {
                    properties.prop16 = properties.eVar16 = 'video ends';
                }

                if (data.eventType === 'captions-enabled') {
                    properties.title = properties.prop2 = originalMetaData.pageName + divider + data.videoId + divider + 'cc';
                    properties.prop13 = ''; //We dont need this prop for captions-enabled event
                }

                if (data.videoType && data.playerType) {
                    properties.prop18 = data.videoType + ' via ' + data.playerType;
                }

                translatedRequest.properties = properties;

                translatedRequest.submitMethod = 'tl';

                return translatedRequest;
            }

            // If s. (props) were set in a condition in previous request
            // make sure they are cleared on the next request
            function _clearConditionalsCodeProps(properties) {
                properties.prop16 = properties.eVar16 = properties.prop18 = properties.prop2 = '';
            }

            module.exports = {
                translate: translate
            };

        }());

    }, {
        "../../helpers/formatter": "WZEdYN"
    }],
    "@marcom/ac-analytics/plugins/s-code/translator/translator": [function(require, module, exports) {
        module.exports = require('LJ68Kt');
    }, {}],
    "LJ68Kt": [function(require, module, exports) {
        (function() {
            'use strict';

            var components = {
                audio: require('./component/audio'),
                gallery: require('./component/gallery'),
                link: require('./component/link'),
                click: require('./component/click'),
                overlay: require('./component/overlay'),
                page: require('./component/page'),
                section: require('./component/section'),
                video: require('./component/video'),
                exit: require('./component/exit'),
                event: require('./component/event')
            };

            function translate(request, metaData, originalMetaData) {
                var translatedRequest = request;

                if (request.type && components[request.type]) {
                    translatedRequest = components[request.type].translate(request, metaData, originalMetaData);
                }

                return translatedRequest;
            }

            module.exports = {
                translate: translate,
                components: components
            };
        }());

    }, {
        "./component/audio": "g4AmU0",
        "./component/click": "hIhnjJ",
        "./component/event": "6NDW85",
        "./component/exit": "YjpnJy",
        "./component/gallery": "paaDxu",
        "./component/link": "iCOMu/",
        "./component/overlay": "94pkSs",
        "./component/page": "BagcUO",
        "./component/section": "+0a7ZJ",
        "./component/video": "5BgK4Z"
    }],
    "@marcom/ac-analytics/regexp/curlyBracePattern": [function(require, module, exports) {
        module.exports = require('Fkknw/');
    }, {}],
    "Fkknw/": [function(require, module, exports) {
        'use strict';

        module.exports = new RegExp(/[\{|\}]/g);
    }, {}],
    "rjjbV7": [function(require, module, exports) {
        'use strict';

        module.exports = new RegExp(/^(https?:\/\/.*\.apple\.com)?(\/[a-z\-_0-9]*)?\/shop(\/.*)?$/i);
    }, {}],
    "@marcom/ac-analytics/regexp/storeUrlPattern": [function(require, module, exports) {
        module.exports = require('rjjbV7');
    }, {}],
    "@marcom/ac-analytics/regexp/tokenPattern": [function(require, module, exports) {
        module.exports = require('aNrbqj');
    }, {}],
    "aNrbqj": [function(require, module, exports) {
        'use strict';

        module.exports = new RegExp(/(\{[a-zA-Z][\w-]+?\})/g);
    }, {}],
    "DXveIM": [function(require, module, exports) {
        'use strict';

        var proto;
        var dataAttribute = 'analytics-region';
        var validJSONPattern = /(?:\w+:\w+)(?:,(?=(?:\w+:\w+))|$)/;
        var singleValuePattern = /[\w\s]+/;
        var dataAttrHelper = require('../data-attr/helper');

        /**
         * Creates an object for a region element with details about its parent and child regions.
         * @constructor Region
         * @param {object} regionElement A DOM Element.
         */
        function Region(regionElement) {
            this.element = regionElement;
            this.childRegions = {};
            this.parentRegion = '';
            this.options = this.getDataOptions();
            this.name = this.setName();
        }

        proto = Region.prototype;

        /**
         * @name Region#setName
         *
         * @function
         *
         * @desc Sets the name for a region.
         */
        proto.setName = function() {
            var value = '';

            // pull name from options
            if (this.options.name) {
                value = this.options.name;
            }

            // default to element's id value if not specified
            if (!this.options.name && this.element.id) {
                this.options.name = this.element.id;
            }

            return value;
        };

        /**
         * @name Region#getDataOptions
         *
         * @function
         *
         * @desc Gets options from the data attribute.
         */
        proto.getDataOptions = function() {
            var data = {};
            var value = this.element.getAttribute('data-' + dataAttribute);

            // strip trailing commas
            value = value.charAt(value.length - 1) === ',' ? value.substr(0, value.length - 1) : value;

            if (this._isJSONable(value)) {
                data = dataAttrHelper.dataStringToObject(value);

                // if it's just a single value, set it to the name property
            } else if (this._isSingleValue(value)) {
                data.name = value;
            }

            // return empty object if none of the conditions are met.
            return data;
        };

        /**
         * @name Region#_isJSONable
         *
         * @private
         *
         * @desc Checks if a string passed can be JSONified.
         */
        proto._isJSONable = function(value) {
            return validJSONPattern.test(value);
        };

        /**
         * @name Region#_isSingleValue
         *
         * @private
         *
         * @desc Checks if a string passed is a single value string.
         */
        proto._isSingleValue = function(value) {
            return singleValuePattern.test(value);
        };

        module.exports = {
            Region: Region,
            dataAttribute: dataAttribute
        };
    }, {
        "../data-attr/helper": "DckvZc"
    }],
    "@marcom/ac-analytics/regions/Region": [function(require, module, exports) {
        module.exports = require('DXveIM');
    }, {}],
    "@marcom/ac-analytics/regions/regions": [function(require, module, exports) {
        module.exports = require('DxeItO');
    }, {}],
    "DxeItO": [function(require, module, exports) {
        (function() {

            'use strict';

            /**
             * Provides different methods to get region information for an element in the DOM.
             * @name regions
             * @module
             */

            var ac_DOMTraversal = require('@marcom/ac-dom-traversal');
            var ac_DOMNodes = require('@marcom/ac-dom-nodes');
            var Region = require('./Region').Region;
            var dataAttribute = require('./Region').dataAttribute;

            var allRegions = [];
            var tree = {};

            // Find all regions in the DOM, store in array and also
            // create a hierarchical tree object of the regions.
            function getAllRegions() {

                if (allRegions.length > 0) {
                    return allRegions;
                }

                var allRegionsElements = ac_DOMTraversal.querySelectorAll('[data-' + dataAttribute + ']');
                var topLevelRegion;
                var regionsLen = allRegionsElements.length;
                var i = 0;

                // recursive function that maps nested regions to their parents
                // also creates Region objects of nested regions as it finds them.
                function _getChildRegions(regionObj) {
                    var childRegion;
                    while (ac_DOMNodes.isElement(allRegionsElements[i + 1]) && regionObj.element.contains(allRegionsElements[i + 1])) {
                        childRegion = new Region(allRegionsElements[i + 1]);
                        allRegions.push(childRegion);
                        childRegion.parentRegion = regionObj.name;
                        regionObj.childRegions[childRegion.name] = childRegion;
                        i += 1;
                        _getChildRegions(childRegion);
                    }
                }

                // loop through the regions, store all regions in an array and an object
                for (i; i < regionsLen; i += 1) {
                    topLevelRegion = new Region(allRegionsElements[i]);
                    tree[topLevelRegion.name] = topLevelRegion;
                    allRegions.push(topLevelRegion);
                    _getChildRegions(topLevelRegion);
                }
                return allRegions;
            }

            // returns a hierarchical tree object of the regions
            function getTree() {

                getAllRegions();

                if (Object.keys(tree).length > 0) {
                    return tree;
                }
            }

            // returns the parent region for an element
            function getRegionByElement(element) {
                var parsedRegions = getAllRegions();
                if (ac_DOMNodes.isElement(element)) {
                    var allAncestorRegions = getRegionAncestryByElement(element);
                    if (allAncestorRegions.length > 0) {
                        return allAncestorRegions.pop();
                    }
                }
            }

            // returns all parent regions of an element
            function getRegionAncestryByElement(element) {
                var parsedRegions = getAllRegions();
                if (ac_DOMNodes.isElement(element)) {
                    return parsedRegions.filter(function(region) {
                        return region.element.contains(element);
                    });
                }
            }

            // returns a region by name
            function getRegionByName(name) {
                var parsedRegions = getAllRegions();
                if (typeof name === 'string') {
                    return parsedRegions.filter(function(region) {
                        return region.name === name;
                    });
                }
            }

            // refreshes a region by the region element or object
            function refreshRegion(region) {
                var regionObj = region;
                if (ac_DOMNodes.isElement(region)) {
                    regionObj = getRegionByElement(region);
                }

                if (typeof regionObj === 'object') {
                    allRegions.forEach(function(r) {
                        if (r.element === regionObj.element) {
                            r.options = r.getDataOptions();
                            r.name = r.setName();
                        }
                    });
                }
            }

            module.exports = {
                /** Returns a hierarchical tree object of all the parent level DOM elements with a data attribute of 'data-analytics-region'. */
                getTree: getTree,
                /** Returns an array of all the DOM elements with a data attribute of 'data-analytics-region'. */
                getAllRegions: getAllRegions,
                /** Returns a parent region object for a given DOM element.*/
                getRegionByElement: getRegionByElement,
                /** Returns a region object for a given region name string. */
                getRegionByName: getRegionByName,
                /** Returns an array of all the parent regions of a given DOM element. */
                getRegionAncestryByElement: getRegionAncestryByElement,
                /** Updates state of a region object to match its current state in the DOM. */
                refreshRegion: refreshRegion
            };
        }());

    }, {
        "./Region": "DXveIM",
        "@marcom/ac-dom-nodes": 37,
        "@marcom/ac-dom-traversal": 55
    }],
    "@marcom/ac-analytics/reset": [function(require, module, exports) {
        module.exports = require('DebV0p');
    }, {}],
    "DebV0p": [function(require, module, exports) {
        'use strict';

        var topLevelMetadata = require('./metadata');
        var regions = require('./regions/regions');
        var metricsTracker = require('./metricsTracker');

        function resetACAnalytics() {
            topLevelMetadata.refreshMetadata();
            regions.refreshRegion();
            metricsTracker.plugin.reset();
        }

        module.exports = resetACAnalytics;
    }, {
        "./metadata": "W+q+EN",
        "./metricsTracker": "nHWlaR",
        "./regions/regions": "DxeItO"
    }],
    "@marcom/ac-analytics/storageKey": [function(require, module, exports) {
        module.exports = require('ntdzZF');
    }, {}],
    "ntdzZF": [function(require, module, exports) {
        (function() {

            'use strict';

            module.exports = {
                appleMetrics: 'apple_Metrics',
                analyticsQueue: 'ac-analytics-queue'
            };

        }());
    }, {}],
    "scrVj8": [function(require, module, exports) {
        'use strict';

        var proto;
        var moduleName = 'TokenRegistry';
        var errorHandler = require('../error-handler/ErrorHandler');

        /**
         * Keeps a registry of all tokens used on a page.
         * @constructor TokenRegistry
         */
        function TokenRegistry() {
            this.tokens = {};
            this._size = 0;
        }

        proto = TokenRegistry.prototype;

        /**
         * @name TokenRegistry#setToken
         *
         * @function
         *
         * @desc Adds a token to the tokens object.
         *
         * @param {String} tokenName Name of the token to be added.
         * @param {String} tokenValue Value of the token to be added.
         */
        proto.setToken = function(tokenName, tokenValue) {

            if (typeof tokenName !== 'string') {
                errorHandler.log(moduleName, 'setToken', tokenName + ' is not a valid string');
            }

            if (typeof tokenValue !== 'string') {
                errorHandler.log(moduleName, 'setToken', tokenValue + ' is not a valid string');
            }

            if (errorHandler.exception) {
                return;
            }

            this.tokens[tokenName] = tokenValue;

            this._updateSize();
        };

        /**
         * @name TokenRegistry#removeToken
         *
         * @function
         *
         * @desc Removes a single token from the tokens object.
         *
         * @param {String} tokenName Name of the token to be removed.
         */
        proto.removeToken = function(tokenName) {
            var index;

            if (typeof tokenName !== 'string') {
                errorHandler.log(moduleName, 'removeToken', tokenName + ' is not a valid string');
            }

            if (!this.tokens[tokenName]) {
                errorHandler.log(moduleName, 'removeToken', tokenName + ' doesnt exist');
            }

            if (errorHandler.exception) {
                return;
            }

            delete this.tokens[tokenName];

            this._updateSize();
        };

        /**
         * @name TokenRegistry#getToken
         *
         * @function
         *
         * @desc Finds a given token name in the tokens object.
         *
         * @param {String} tokenName Name of the token to getToken.
         */
        proto.getToken = function(tokenName) {

            if (typeof tokenName !== 'string') {
                errorHandler.log(moduleName, 'getToken', tokenName + ' is not a valid string');
            }

            if (errorHandler.exception) {
                return;
            }

            return this.tokens[tokenName];
        };

        /**
         * @name TokenRegistry#size
         *
         * @function
         *
         * @desc Gets the total number of tokens in the tokens object.
         */
        proto.size = function() {
            return this._size;
        };

        /**
         * @name TokenRegistry#clear
         *
         * @function
         *
         * @desc Clears the tokens object.
         */
        proto.clear = function() {
            this.tokens = {};
            this._size = 0;
        };

        /**
         * @name TokenRegistry#_updateSize
         *
         * @private
         *
         * @desc Updates the memoized size of tokens object.
         */
        proto._updateSize = function() {
            this._size = Object.keys(this.tokens).length;
        };

        module.exports = new TokenRegistry();
    }, {
        "../error-handler/ErrorHandler": "yoExqy"
    }],
    "@marcom/ac-analytics/tokens/Registry": [function(require, module, exports) {
        module.exports = require('scrVj8');
    }, {}],
    "dJInuT": [function(require, module, exports) {
        'use strict';

        var proto;
        var moduleName = 'TokenReplacer';
        var tokenPattern = require('../regexp/tokenPattern');
        var curlysPattern = require('../regexp/curlyBracePattern');
        var tokenRegistry = require('./Registry');
        var errorHandler = require('../error-handler/ErrorHandler');

        /**
         * Utility methods to replace tokens in a given string.
         * @constructor TokenReplacer
         */
        function TokenReplacer() {
            this.registry = tokenRegistry;
        }

        proto = TokenReplacer.prototype;

        /**
         * @name TokenReplacer#replace
         *
         * @function
         *
         * @desc Replace tokens {DOM_ELEMENT_ATTR_REFERENCE} in a given string.
         *
         * @param {String} str A string for token replacement.
         * @param {Object} replacements (optional) An object with tokens and their values.
         */
        proto.replace = function(str, replacements) {

            if (typeof str !== 'string') {
                errorHandler.log(moduleName, 'replace', str + ' is not a valid string');
            }

            if (errorHandler.exception) {
                return;
            }

            // If a replacements object is passed run the replacements
            if (typeof replacements === 'object') {
                str = this._replace(str, replacements);
            }

            // If the registry has tokens run the replacements
            if (this.registry.size() > 0) {
                str = this._replace(str, this.registry.tokens);
            }

            return str;
        };

        /**
         * @name TokenReplacer#parseTokens
         *
         * @function
         *
         * @desc Parses a string for tokens {TOKEN_NAME}.
         *
         * @param {String} str A string for parsing tokens.
         *
         * @return An array of tokens in a string.
         */
        proto.parseTokens = function(str) {
            var tokens;

            if (typeof str !== 'string') {
                errorHandler.log(moduleName, 'parseTokens', str + ' is not a valid string');
            }

            if (errorHandler.exception) {
                return;
            }

            tokens = str.match(tokenPattern);

            if (tokens) {
                return tokens.map(function(value) {
                    return this._removeCurlys(value);
                }.bind(this));
            }
        };

        /**
         * Private Methods
         */

        /**
         * @name TokenReplacer#_replace
         *
         * @private
         *
         * @desc Replaces tokens from the given str using the replacements object.
         *
         * @param {String} str A string that needs token replacement.
         */
        proto._replace = function(str, replacements) {
            return str.replace(tokenPattern, function(match) {
                return ((typeof replacements[this._removeCurlys(match)] === 'string') ? replacements[this._removeCurlys(match)] : match);
            }.bind(this));
        };

        /**
         * @name TokenReplacer#_removeCurlys
         *
         * @private
         *
         * @desc Removes the {} curly brackets from a string.
         *
         * @param {String} str A string that needs curly replacement.
         */
        proto._removeCurlys = function(str) {

            str = str.trim();

            return str.replace(curlysPattern, '');
        };

        module.exports = new TokenReplacer();
    }, {
        "../error-handler/ErrorHandler": "yoExqy",
        "../regexp/curlyBracePattern": "Fkknw/",
        "../regexp/tokenPattern": "aNrbqj",
        "./Registry": "scrVj8"
    }],
    "@marcom/ac-analytics/tokens/Replacer": [function(require, module, exports) {
        module.exports = require('dJInuT');
    }, {}],
    "@marcom/ac-analytics/translator/component/audio": [function(require, module, exports) {
        module.exports = require('8lTacU');
    }, {}],
    "8lTacU": [function(require, module, exports) {
        (function() {

            'use strict';

            var ac_DOMTraversal = require('@marcom/ac-dom-traversal');

            var ac_DOMEvents = require('@marcom/ac-dom-events');

            var interactionTypes = {
                play: function(request) {

                    if (request.data.ended === true) {
                        return 'replay';
                    }

                    return 'play';
                },

                ended: function(request) {

                    return request.event.type;
                },

                pause: function(request) {

                    return request.event.type;
                }
            };

            function translate(request) {

                var translatedRequest = request;

                var targetEl = ac_DOMEvents.target(request.event);

                translatedRequest.data.targetEl = targetEl;

                // Determine audio source
                if (targetEl && targetEl.getAttribute('src')) {
                    translatedRequest.data.audioSrc = targetEl.getAttribute('src');
                }

                if (!translatedRequest.data.audioSrc) {

                    var audioSourceTag = ac_DOMTraversal.querySelector('source', targetEl);

                    if (audioSourceTag && audioSourceTag.getAttribute('src')) {
                        translatedRequest.data.audioSrc = audioSourceTag.getAttribute('src');
                    }
                }

                translatedRequest.data.interactionType = (interactionTypes[request.event.type]) ? interactionTypes[request.event.type](request) : request.event.type;

                translatedRequest.data.title = translatedRequest.data.targetEl.title || 'No title found';

                translatedRequest.data.duration = translatedRequest.data.targetEl.duration;

                translatedRequest.data.currentTime = translatedRequest.data.targetEl.currentTime;

                return translatedRequest;
            }

            module.exports = {
                translate: translate
            };

        }());

    }, {
        "@marcom/ac-dom-events": 13,
        "@marcom/ac-dom-traversal": 55
    }],
    "JuqcqK": [function(require, module, exports) {
        (function() {

            'use strict';

            var ac_DOMTraversal = require('@marcom/ac-dom-traversal');
            var regions = require('../../regions/regions');
            var parseFromDataAttribute = require('./../helpers/parseFromDataAttribute');

            function translate(request) {

                var translatedRequest = request;
                var linkImg = ac_DOMTraversal.querySelector('img', request.data.targetEl);
                var linkImgSrc;
                var targetElParentRegion = regions.getRegionByElement(request.data.targetEl);
                var linkTitle = request.data.targetEl.getAttribute('data-' + request.options.titleDataAttribute);
                var dataAttrValue = request.data.targetEl.getAttribute('data-' + request.options.dataAttribute);
                var customProperties = (dataAttrValue) ? parseFromDataAttribute(dataAttrValue, request.data.targetEl) : '';

                translatedRequest.data.regionAncestry = regions.getRegionAncestryByElement(request.data.targetEl);

                if (linkImg) {
                    linkImgSrc = linkImg.getAttribute('src');
                    translatedRequest.data.linkImg = linkImgSrc.substring(linkImgSrc.lastIndexOf('/') + 1, linkImgSrc.length);

                    if (typeof translatedRequest.data.linkImg === 'string') {
                        translatedRequest.data.linkImg = translatedRequest.data.linkImg.toLowerCase();
                    }
                }

                if (linkTitle) {
                    translatedRequest.data.linkText = linkTitle;
                } else {

                    if (typeof request.data.targetEl.innerText === 'string') {
                        translatedRequest.data.linkText = request.data.targetEl.innerText.trim();
                    } else {
                        translatedRequest.data.linkText = request.data.targetEl.textContent.trim();
                    }
                }

                if (typeof targetElParentRegion === 'object') {
                    translatedRequest.data.region = targetElParentRegion.name;
                }

                if (customProperties) {
                    translatedRequest.data.dataAnalyticsClick = customProperties;
                }

                return translatedRequest;
            }

            module.exports = {
                translate: translate
            };

        }());
    }, {
        "../../regions/regions": "DxeItO",
        "./../helpers/parseFromDataAttribute": "uohxOy",
        "@marcom/ac-dom-traversal": 55
    }],
    "@marcom/ac-analytics/translator/component/click": [function(require, module, exports) {
        module.exports = require('JuqcqK');
    }, {}],
    "kZao3w": [function(require, module, exports) {
        (function() {

            'use strict';

            function translate(request) {

                var translatedRequest = request;

                return translatedRequest;
            }

            module.exports = {
                translate: translate
            };

        }());
    }, {}],
    "@marcom/ac-analytics/translator/component/event": [function(require, module, exports) {
        module.exports = require('kZao3w');
    }, {}],
    "yWnp5u": [function(require, module, exports) {
        (function() {

            'use strict';

            function translate(request) {

                var translatedRequest = request;

                return translatedRequest;
            }

            module.exports = {
                translate: translate
            };

        }());
    }, {}],
    "@marcom/ac-analytics/translator/component/exit": [function(require, module, exports) {
        module.exports = require('yWnp5u');
    }, {}],
    "@marcom/ac-analytics/translator/component/gallery": [function(require, module, exports) {
        module.exports = require('P9nfNI');
    }, {}],
    "P9nfNI": [function(require, module, exports) {
        (function() {
            'use strict';

            var ac_DOMTraversal = require('@marcom/ac-dom-traversal');

            // methods to map interaction types
            var interactionTypes = {

                click: function(request) {
                    var type = 'click';
                    // if the click happened on a dot/paddle/thumb nav, we want to know
                    var navType = _triggerNavType(request);

                    return navType || type;
                },

                auto: function(request) {
                    var type = 'auto';

                    return type;
                },

                keydown: function(request) {
                    var type = 'keydown';

                    return type;
                },

                touchend: function(request) {
                    var type = 'swipe';

                    return type;
                },

                touchstart: function(request) {
                    var type = 'swipe';

                    return type;
                },

                touchmove: function(request) {
                    var type = 'swipe';

                    return type;
                }

            };

            /**
             * Exported translate function
             */
            function translate(request) {
                var interactionEventType = _interactionEventType(request);
                var interactionType = interactionEventType;
                var observer = request.observer;
                var translatedRequest = request;

                if (interactionTypes[interactionEventType]) {
                    interactionType = interactionTypes[interactionEventType](request);
                }

                // add props to the request
                translatedRequest.data.targetEl = _getTargetElement(request);
                translatedRequest.data.slideInViewTime = _slideInViewTime(request);
                translatedRequest.data.outgoingInteractionType = request.observer.outgoingSlideInteractionType;
                translatedRequest.data.incomingInteractionType = interactionType;
                translatedRequest.data.galleryFirstTimeTrigger = _isFirstTimeGalleryTrigger(translatedRequest);

                // update the props on the observer
                observer.outgoingSlideInteractionType = interactionType;

                return translatedRequest;
            }


            /**
             * Private Functions
             */

            // attempts to determine what type of gallery nav was interacted with
            function _triggerNavType(request) {
                var type = false;
                var trigger = _getTargetElement(request);
                var nav;

                if (trigger) {
                    nav = ac_DOMTraversal.ancestor(trigger, 'nav');
                    type = nav ? _getNavTypeFromClassName(nav.className) : type;
                }

                return type;
            }

            // determines if a classname has a specific word.
            // If so, it returns that word, else false.
            function _getNavTypeFromClassName(className) {
                var type = false;

                ['paddle', 'dot', 'thumb'].some(function(typeName) {
                    if (className.indexOf(typeName) >= 0) {
                        type = typeName;
                        return true;
                    }
                });

                return type;
            }

            // return the target element from the interactionEvent in the request, if there is one.
            // else returns false.
            function _getTargetElement(request) {
                var interactionEvent = request.data.interactionEvent;
                var element = false;

                if (interactionEvent) {
                    element = (interactionEvent.target || interactionEvent.srcElement);
                }

                return element;
            }

            // how long was the outgoing slide in view for?
            function _slideInViewTime(request) {
                return request.data.incomingSlideTimestamp - request.data.outgoingSlideTimestamp;
            }

            // We want to know if user has interacted with the gallery
            function _isFirstTimeGalleryTrigger(request) {
                var incomingInteractionType = request.data.incomingInteractionType;
                var observer = request.observer;
                var firstTimeGalleryTrigger = false;

                if (incomingInteractionType !== 'auto' && observer.trackedInteractionTypes.indexOf(incomingInteractionType) === -1) {
                    firstTimeGalleryTrigger = true;
                    observer.trackedInteractionTypes.push(incomingInteractionType);
                }

                return firstTimeGalleryTrigger;
            }

            // determine event type. Default to 'auto'
            function _interactionEventType(request) {
                var data = request.data;
                var type = 'auto';

                if (data.interactionEvent && data.interactionEvent.type) {
                    type = data.interactionEvent.type;
                }

                return type;
            }

            module.exports = {
                translate: translate
            };

        }());

    }, {
        "@marcom/ac-dom-traversal": 55
    }],
    "@marcom/ac-analytics/translator/component/link": [function(require, module, exports) {
        module.exports = require('L1gkGb');
    }, {}],
    "L1gkGb": [function(require, module, exports) {
        (function() {

            'use strict';

            var ac_DOMTraversal = require('@marcom/ac-dom-traversal');
            var regions = require('../../regions/regions');

            function translate(request) {

                var translatedRequest = request;

                var linkImg = ac_DOMTraversal.querySelector('img', request.data.targetEl);

                var linkImgSrc;

                var targetElParentRegion = regions.getRegionByElement(request.data.targetEl);

                var linkTitle = request.data.targetEl.getAttribute('data-' + request.options.titleDataAttribute);

                if (linkTitle) {
                    translatedRequest.data.linkText = linkTitle;
                } else {
                    translatedRequest.data.linkText = (typeof request.data.targetEl.innerText === 'string') ? request.data.targetEl.innerText.trim() : request.data.targetEl.textContent.trim();
                }

                translatedRequest.data.regionAncestry = regions.getRegionAncestryByElement(request.data.targetEl);

                if (request.data.targetEl.id) {
                    translatedRequest.data.linkId = request.data.targetEl.id;
                }

                if (linkImg) {
                    linkImgSrc = linkImg.getAttribute('src');
                    translatedRequest.data.linkImg = linkImgSrc.substring(linkImgSrc.lastIndexOf('/') + 1, linkImgSrc.length);

                    if (typeof translatedRequest.data.linkImg === 'string') {
                        translatedRequest.data.linkImg = translatedRequest.data.linkImg.toLowerCase();
                    }
                }

                if (typeof targetElParentRegion === 'object') {
                    translatedRequest.data.region = targetElParentRegion.name;
                }

                return translatedRequest;
            }

            module.exports = {
                translate: translate
            };

        }());

    }, {
        "../../regions/regions": "DxeItO",
        "@marcom/ac-dom-traversal": 55
    }],
    "vPF0EK": [function(require, module, exports) {
        (function() {

            'use strict';

            function translate(request) {

                var translatedRequest = request;

                return translatedRequest;
            }

            module.exports = {
                translate: translate
            };

        }());

    }, {}],
    "@marcom/ac-analytics/translator/component/overlay": [function(require, module, exports) {
        module.exports = require('vPF0EK');
    }, {}],
    "@marcom/ac-analytics/translator/component/page": [function(require, module, exports) {
        module.exports = require('NcRXMk');
    }, {}],
    "NcRXMk": [function(require, module, exports) {
        (function() {

            'use strict';

            function translate(request) {

                var translatedRequest = request;

                return translatedRequest;
            }

            module.exports = {
                translate: translate
            };

        }());

    }, {}],
    "chF+IX": [function(require, module, exports) {
        (function() {

            'use strict';

            function translate(request) {

                return request;
            }

            module.exports = {
                translate: translate
            };

        }());

    }, {}],
    "@marcom/ac-analytics/translator/component/section": [function(require, module, exports) {
        module.exports = require('chF+IX');
    }, {}],
    "@marcom/ac-analytics/translator/component/video": [function(require, module, exports) {
        module.exports = require('ighRR/');
    }, {}],
    "ighRR/": [function(require, module, exports) {
        (function() {

            'use strict';

            var eventTypes = {

                play: function(request) {

                    if (request.data.ended === true) {
                        return 'replay';
                    }

                    return 'started';
                },

                ended: function(request) {

                    if (request.data.ended === true) {
                        return 'reended';
                    }
                    return 'ended';
                },

                'captions-enabled': function(request) {

                    if (request.data.captionsEnableCount === 0) {
                        return 'captions-enabled';
                    }
                    return 'captions-reenabled';
                }
            };

            var interactionTypes = {

                click: function(request) {
                    return request.data.event.type;
                }
            };

            function translate(request) {

                var translatedRequest = request;

                translatedRequest.data.eventType = (eventTypes[request.data.eventType]) ? eventTypes[request.data.eventType](request) : request.data.eventType;

                if (request.data.event && interactionTypes[request.data.event.type]) {
                    translatedRequest.data.interactionType = interactionTypes[request.data.event.type](request);
                }

                return translatedRequest;
            }

            module.exports = {
                translate: translate
            };

        }());

    }, {}],
    "@marcom/ac-analytics/translator/helpers/parseFromDataAttribute": [function(require, module, exports) {
        module.exports = require('uohxOy');
    }, {}],
    "uohxOy": [function(require, module, exports) {
        (function() {
            'use strict';

            var tokenReplacer = require('./../../tokens/Replacer');
            var dataAttrHelper = require('./../../data-attr/helper');
            var isElement = require('@marcom/ac-dom-nodes/isElement');
            var hasAttribute = require('@marcom/ac-dom-nodes/hasAttribute');

            /**
             * @name parseFromDataAttribute
             *
             * @desc Parses the tokens in a given data attribute value.
             *
             * @param {String} dataAttrValue A string that needs token replacement.
             * @param {Object} el A DOM element with the token as an attribute on it.
             */
            function parseFromDataAttribute(dataAttrValue, el) {
                var dataObj;
                var tokensArr;
                var replacements = {};
                var translatedStr;

                // Find what tokens are in the string
                tokensArr = tokenReplacer.parseTokens(dataAttrValue);

                // Do not proceed if there are no valid tokens in the string
                if (!tokensArr || tokensArr.length === 0) {
                    return;
                }

                // Create a replacements object with tokens and their values
                // ignore tokens that didn't have a value
                replacements = _getTokenValues(el, tokensArr);
                translatedStr = tokenReplacer.replace(dataAttrValue, replacements);
                dataObj = dataAttrHelper.dataStringToObject(translatedStr);

                return dataObj;
            }

            function _getTokenValues(el, tokensArr) {
                var replacements = {};
                var value;
                var len = tokensArr.length;

                if (isElement(el)) {

                    // @TODO: Can we improve this an not getAttribure on tokens we know
                    // are not related to an attribute on the element
                    for (var i = 0; i < len; i++) {
                        if (hasAttribute(el, tokensArr[i])) {
                            value = el.getAttribute(tokensArr[i]);
                            replacements[tokensArr[i]] = value;
                        }
                    }
                }

                return replacements;
            }

            module.exports = parseFromDataAttribute;
        }());
    }, {
        "./../../data-attr/helper": "DckvZc",
        "./../../tokens/Replacer": "dJInuT",
        "@marcom/ac-dom-nodes/hasAttribute": 36,
        "@marcom/ac-dom-nodes/isElement": 49
    }],
    "eq7uW9": [function(require, module, exports) {
        (function() {
            'use strict';
            var errorHandler = require('../error-handler/ErrorHandler');

            var components = {
                audio: require('./component/audio'),
                gallery: require('./component/gallery'),
                link: require('./component/link'),
                click: require('./component/click'),
                overlay: require('./component/overlay'),
                page: require('./component/page'),
                section: require('./component/section'),
                video: require('./component/video'),
                exit: require('./component/exit'),
                event: require('./component/event')
            };

            function translate(request) {
                var translatedRequest = request;

                if (request.type && components[request.type]) {
                    if (typeof request.data !== 'object') {
                        errorHandler.log('Translator', 'translate', 'request.data (' + request.data + ') must be an object');
                    }

                    if (errorHandler.exception) {
                        return;
                    }

                    translatedRequest = components[request.type].translate(request);
                }

                return translatedRequest;
            }

            module.exports = {
                translate: translate,
                components: components
            };
        }());

    }, {
        "../error-handler/ErrorHandler": "yoExqy",
        "./component/audio": "8lTacU",
        "./component/click": "JuqcqK",
        "./component/event": "kZao3w",
        "./component/exit": "yWnp5u",
        "./component/gallery": "P9nfNI",
        "./component/link": "L1gkGb",
        "./component/overlay": "vPF0EK",
        "./component/page": "NcRXMk",
        "./component/section": "chF+IX",
        "./component/video": "ighRR/"
    }],
    "@marcom/ac-analytics/translator/translator": [function(require, module, exports) {
        module.exports = require('eq7uW9');
    }, {}],
    "H9Yz3H": [function(require, module, exports) {
        'use strict';

        // this file exists only to expose @marcom/ac-analytics as 'ac-analytics'
        // see preBundleCB in Gruntfile.js
        module.exports = require('../ac-analytics');

    }, {
        "../ac-analytics": "++O3BW"
    }],
    "ac-analytics": [function(require, module, exports) {
        module.exports = require('H9Yz3H');
    }, {}]
}, {}, ["++O3BW"])
var self = self || {};
var THREE = {
    REVISION: "70"
};
if (typeof module === "object") {
    module.exports = THREE
}
if (Math.sign === undefined) {
    Math.sign = function(a) {
        return (a < 0) ? -1 : (a > 0) ? 1 : 0
    }
}
THREE.MOUSE = {
    LEFT: 0,
    MIDDLE: 1,
    RIGHT: 2
};
THREE.CullFaceNone = 0;
THREE.CullFaceBack = 1;
THREE.CullFaceFront = 2;
THREE.CullFaceFrontBack = 3;
THREE.FrontFaceDirectionCW = 0;
THREE.FrontFaceDirectionCCW = 1;
THREE.BasicShadowMap = 0;
THREE.PCFShadowMap = 1;
THREE.PCFSoftShadowMap = 2;
THREE.FrontSide = 0;
THREE.BackSide = 1;
THREE.DoubleSide = 2;
THREE.NoShading = 0;
THREE.FlatShading = 1;
THREE.SmoothShading = 2;
THREE.NoColors = 0;
THREE.FaceColors = 1;
THREE.VertexColors = 2;
THREE.NoBlending = 0;
THREE.NormalBlending = 1;
THREE.AdditiveBlending = 2;
THREE.SubtractiveBlending = 3;
THREE.MultiplyBlending = 4;
THREE.CustomBlending = 5;
THREE.AddEquation = 100;
THREE.SubtractEquation = 101;
THREE.ReverseSubtractEquation = 102;
THREE.MinEquation = 103;
THREE.MaxEquation = 104;
THREE.ZeroFactor = 200;
THREE.OneFactor = 201;
THREE.SrcColorFactor = 202;
THREE.OneMinusSrcColorFactor = 203;
THREE.SrcAlphaFactor = 204;
THREE.OneMinusSrcAlphaFactor = 205;
THREE.DstAlphaFactor = 206;
THREE.OneMinusDstAlphaFactor = 207;
THREE.DstColorFactor = 208;
THREE.OneMinusDstColorFactor = 209;
THREE.SrcAlphaSaturateFactor = 210;
THREE.MultiplyOperation = 0;
THREE.MixOperation = 1;
THREE.AddOperation = 2;
THREE.UVMapping = 300;
THREE.CubeReflectionMapping = 301;
THREE.CubeRefractionMapping = 302;
THREE.EquirectangularReflectionMapping = 303;
THREE.EquirectangularRefractionMapping = 304;
THREE.SphericalReflectionMapping = 305;
THREE.RepeatWrapping = 1000;
THREE.ClampToEdgeWrapping = 1001;
THREE.MirroredRepeatWrapping = 1002;
THREE.NearestFilter = 1003;
THREE.NearestMipMapNearestFilter = 1004;
THREE.NearestMipMapLinearFilter = 1005;
THREE.LinearFilter = 1006;
THREE.LinearMipMapNearestFilter = 1007;
THREE.LinearMipMapLinearFilter = 1008;
THREE.UnsignedByteType = 1009;
THREE.ByteType = 1010;
THREE.ShortType = 1011;
THREE.UnsignedShortType = 1012;
THREE.IntType = 1013;
THREE.UnsignedIntType = 1014;
THREE.FloatType = 1015;
THREE.UnsignedShort4444Type = 1016;
THREE.UnsignedShort5551Type = 1017;
THREE.UnsignedShort565Type = 1018;
THREE.AlphaFormat = 1019;
THREE.RGBFormat = 1020;
THREE.RGBAFormat = 1021;
THREE.LuminanceFormat = 1022;
THREE.LuminanceAlphaFormat = 1023;
THREE.RGBEFormat = THREE.RGBAFormat;
THREE.RGB_S3TC_DXT1_Format = 2001;
THREE.RGBA_S3TC_DXT1_Format = 2002;
THREE.RGBA_S3TC_DXT3_Format = 2003;
THREE.RGBA_S3TC_DXT5_Format = 2004;
THREE.RGB_PVRTC_4BPPV1_Format = 2100;
THREE.RGB_PVRTC_2BPPV1_Format = 2101;
THREE.RGBA_PVRTC_4BPPV1_Format = 2102;
THREE.RGBA_PVRTC_2BPPV1_Format = 2103;
THREE.Projector = function() {
    console.error("THREE.Projector has been moved to /examples/js/renderers/Projector.js.");
    this.projectVector = function(a, b) {
        console.warn("THREE.Projector: .projectVector() is now vector.project().");
        a.project(b)
    };
    this.unprojectVector = function(a, b) {
        console.warn("THREE.Projector: .unprojectVector() is now vector.unproject().");
        a.unproject(b)
    };
    this.pickingRay = function(a, b) {
        console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().")
    }
};
THREE.CanvasRenderer = function() {
    console.error("THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js");
    this.domElement = document.createElement("canvas");
    this.clear = function() {};
    this.render = function() {};
    this.setClearColor = function() {};
    this.setSize = function() {}
};
THREE.Color = function(a) {
    if (arguments.length === 3) {
        return this.setRGB(arguments[0], arguments[1], arguments[2])
    }
    return this.set(a)
};
THREE.Color.prototype = {
    constructor: THREE.Color,
    r: 1,
    g: 1,
    b: 1,
    set: function(a) {
        if (a instanceof THREE.Color) {
            this.copy(a)
        } else {
            if (typeof a === "number") {
                this.setHex(a)
            } else {
                if (typeof a === "string") {
                    this.setStyle(a)
                }
            }
        }
        return this
    },
    setHex: function(a) {
        a = Math.floor(a);
        this.r = (a >> 16 & 255) / 255;
        this.g = (a >> 8 & 255) / 255;
        this.b = (a & 255) / 255;
        return this
    },
    setRGB: function(d, c, a) {
        this.r = d;
        this.g = c;
        this.b = a;
        return this
    },
    setHSL: function(d, c, b) {
        if (c === 0) {
            this.r = this.g = this.b = b
        } else {
            var a = function(i, h, g) {
                if (g < 0) {
                    g += 1
                }
                if (g > 1) {
                    g -= 1
                }
                if (g < 1 / 6) {
                    return i + (h - i) * 6 * g
                }
                if (g < 1 / 2) {
                    return h
                }
                if (g < 2 / 3) {
                    return i + (h - i) * 6 * (2 / 3 - g)
                }
                return i
            };
            var f = b <= 0.5 ? b * (1 + c) : b + c - (b * c);
            var e = (2 * b) - f;
            this.r = a(e, f, d + 1 / 3);
            this.g = a(e, f, d);
            this.b = a(e, f, d - 1 / 3)
        }
        return this
    },
    setStyle: function(b) {
        if (/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.test(b)) {
            var a = /^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.exec(b);
            this.r = Math.min(255, parseInt(a[1], 10)) / 255;
            this.g = Math.min(255, parseInt(a[2], 10)) / 255;
            this.b = Math.min(255, parseInt(a[3], 10)) / 255;
            return this
        }
        if (/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.test(b)) {
            var a = /^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.exec(b);
            this.r = Math.min(100, parseInt(a[1], 10)) / 100;
            this.g = Math.min(100, parseInt(a[2], 10)) / 100;
            this.b = Math.min(100, parseInt(a[3], 10)) / 100;
            return this
        }
        if (/^\#([0-9a-f]{6})$/i.test(b)) {
            var a = /^\#([0-9a-f]{6})$/i.exec(b);
            this.setHex(parseInt(a[1], 16));
            return this
        }
        if (/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(b)) {
            var a = /^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(b);
            this.setHex(parseInt(a[1] + a[1] + a[2] + a[2] + a[3] + a[3], 16));
            return this
        }
        if (/^(\w+)$/i.test(b)) {
            this.setHex(THREE.ColorKeywords[b]);
            return this
        }
    },
    copy: function(a) {
        this.r = a.r;
        this.g = a.g;
        this.b = a.b;
        return this
    },
    copyGammaToLinear: function(a) {
        this.r = a.r * a.r;
        this.g = a.g * a.g;
        this.b = a.b * a.b;
        return this
    },
    copyLinearToGamma: function(a) {
        this.r = Math.sqrt(a.r);
        this.g = Math.sqrt(a.g);
        this.b = Math.sqrt(a.b);
        return this
    },
    convertGammaToLinear: function() {
        var d = this.r,
            c = this.g,
            a = this.b;
        this.r = d * d;
        this.g = c * c;
        this.b = a * a;
        return this
    },
    convertLinearToGamma: function() {
        this.r = Math.sqrt(this.r);
        this.g = Math.sqrt(this.g);
        this.b = Math.sqrt(this.b);
        return this
    },
    getHex: function() {
        return (this.r * 255) << 16 ^ (this.g * 255) << 8 ^ (this.b * 255) << 0
    },
    getHexString: function() {
        return ("000000" + this.getHex().toString(16)).slice(-6)
    },
    getHSL: function(m) {
        var l = m || {
            h: 0,
            s: 0,
            l: 0
        };
        var a = this.r,
            e = this.g,
            h = this.b;
        var i = Math.max(a, e, h);
        var c = Math.min(a, e, h);
        var f, d;
        var k = (c + i) / 2;
        if (c === i) {
            f = 0;
            d = 0
        } else {
            var j = i - c;
            d = k <= 0.5 ? j / (i + c) : j / (2 - i - c);
            switch (i) {
                case a:
                    f = (e - h) / j + (e < h ? 6 : 0);
                    break;
                case e:
                    f = (h - a) / j + 2;
                    break;
                case h:
                    f = (a - e) / j + 4;
                    break
            }
            f /= 6
        }
        l.h = f;
        l.s = d;
        l.l = k;
        return l
    },
    getStyle: function() {
        return "rgb(" + ((this.r * 255) | 0) + "," + ((this.g * 255) | 0) + "," + ((this.b * 255) | 0) + ")"
    },
    offsetHSL: function(d, c, a) {
        var b = this.getHSL();
        b.h += d;
        b.s += c;
        b.l += a;
        this.setHSL(b.h, b.s, b.l);
        return this
    },
    add: function(a) {
        this.r += a.r;
        this.g += a.g;
        this.b += a.b;
        return this
    },
    addColors: function(b, a) {
        this.r = b.r + a.r;
        this.g = b.g + a.g;
        this.b = b.b + a.b;
        return this
    },
    addScalar: function(a) {
        this.r += a;
        this.g += a;
        this.b += a;
        return this
    },
    multiply: function(a) {
        this.r *= a.r;
        this.g *= a.g;
        this.b *= a.b;
        return this
    },
    multiplyScalar: function(a) {
        this.r *= a;
        this.g *= a;
        this.b *= a;
        return this
    },
    lerp: function(a, b) {
        this.r += (a.r - this.r) * b;
        this.g += (a.g - this.g) * b;
        this.b += (a.b - this.b) * b;
        return this
    },
    equals: function(a) {
        return (a.r === this.r) && (a.g === this.g) && (a.b === this.b)
    },
    fromArray: function(a) {
        this.r = a[0];
        this.g = a[1];
        this.b = a[2];
        return this
    },
    toArray: function() {
        return [this.r, this.g, this.b]
    },
    clone: function() {
        return new THREE.Color().setRGB(this.r, this.g, this.b)
    }
};
THREE.ColorKeywords = {
    aliceblue: 15792383,
    antiquewhite: 16444375,
    aqua: 65535,
    aquamarine: 8388564,
    azure: 15794175,
    beige: 16119260,
    bisque: 16770244,
    black: 0,
    blanchedalmond: 16772045,
    blue: 255,
    blueviolet: 9055202,
    brown: 10824234,
    burlywood: 14596231,
    cadetblue: 6266528,
    chartreuse: 8388352,
    chocolate: 13789470,
    coral: 16744272,
    cornflowerblue: 6591981,
    cornsilk: 16775388,
    crimson: 14423100,
    cyan: 65535,
    darkblue: 139,
    darkcyan: 35723,
    darkgoldenrod: 12092939,
    darkgray: 11119017,
    darkgreen: 25600,
    darkgrey: 11119017,
    darkkhaki: 12433259,
    darkmagenta: 9109643,
    darkolivegreen: 5597999,
    darkorange: 16747520,
    darkorchid: 10040012,
    darkred: 9109504,
    darksalmon: 15308410,
    darkseagreen: 9419919,
    darkslateblue: 4734347,
    darkslategray: 3100495,
    darkslategrey: 3100495,
    darkturquoise: 52945,
    darkviolet: 9699539,
    deeppink: 16716947,
    deepskyblue: 49151,
    dimgray: 6908265,
    dimgrey: 6908265,
    dodgerblue: 2003199,
    firebrick: 11674146,
    floralwhite: 16775920,
    forestgreen: 2263842,
    fuchsia: 16711935,
    gainsboro: 14474460,
    ghostwhite: 16316671,
    gold: 16766720,
    goldenrod: 14329120,
    gray: 8421504,
    green: 32768,
    greenyellow: 11403055,
    grey: 8421504,
    honeydew: 15794160,
    hotpink: 16738740,
    indianred: 13458524,
    indigo: 4915330,
    ivory: 16777200,
    khaki: 15787660,
    lavender: 15132410,
    lavenderblush: 16773365,
    lawngreen: 8190976,
    lemonchiffon: 16775885,
    lightblue: 11393254,
    lightcoral: 15761536,
    lightcyan: 14745599,
    lightgoldenrodyellow: 16448210,
    lightgray: 13882323,
    lightgreen: 9498256,
    lightgrey: 13882323,
    lightpink: 16758465,
    lightsalmon: 16752762,
    lightseagreen: 2142890,
    lightskyblue: 8900346,
    lightslategray: 7833753,
    lightslategrey: 7833753,
    lightsteelblue: 11584734,
    lightyellow: 16777184,
    lime: 65280,
    limegreen: 3329330,
    linen: 16445670,
    magenta: 16711935,
    maroon: 8388608,
    mediumaquamarine: 6737322,
    mediumblue: 205,
    mediumorchid: 12211667,
    mediumpurple: 9662683,
    mediumseagreen: 3978097,
    mediumslateblue: 8087790,
    mediumspringgreen: 64154,
    mediumturquoise: 4772300,
    mediumvioletred: 13047173,
    midnightblue: 1644912,
    mintcream: 16121850,
    mistyrose: 16770273,
    moccasin: 16770229,
    navajowhite: 16768685,
    navy: 128,
    oldlace: 16643558,
    olive: 8421376,
    olivedrab: 7048739,
    orange: 16753920,
    orangered: 16729344,
    orchid: 14315734,
    palegoldenrod: 15657130,
    palegreen: 10025880,
    paleturquoise: 11529966,
    palevioletred: 14381203,
    papayawhip: 16773077,
    peachpuff: 16767673,
    peru: 13468991,
    pink: 16761035,
    plum: 14524637,
    powderblue: 11591910,
    purple: 8388736,
    red: 16711680,
    rosybrown: 12357519,
    royalblue: 4286945,
    saddlebrown: 9127187,
    salmon: 16416882,
    sandybrown: 16032864,
    seagreen: 3050327,
    seashell: 16774638,
    sienna: 10506797,
    silver: 12632256,
    skyblue: 8900331,
    slateblue: 6970061,
    slategray: 7372944,
    slategrey: 7372944,
    snow: 16775930,
    springgreen: 65407,
    steelblue: 4620980,
    tan: 13808780,
    teal: 32896,
    thistle: 14204888,
    tomato: 16737095,
    turquoise: 4251856,
    violet: 15631086,
    wheat: 16113331,
    white: 16777215,
    whitesmoke: 16119285,
    yellow: 16776960,
    yellowgreen: 10145074
};
THREE.Quaternion = function(a, d, c, b) {
    this._x = a || 0;
    this._y = d || 0;
    this._z = c || 0;
    this._w = (b !== undefined) ? b : 1
};
THREE.Quaternion.prototype = {
    constructor: THREE.Quaternion,
    _x: 0,
    _y: 0,
    _z: 0,
    _w: 0,
    get x() {
        return this._x
    },
    set x(a) {
        this._x = a;
        this.onChangeCallback()
    },
    get y() {
        return this._y
    },
    set y(a) {
        this._y = a;
        this.onChangeCallback()
    },
    get z() {
        return this._z
    },
    set z(a) {
        this._z = a;
        this.onChangeCallback()
    },
    get w() {
        return this._w
    },
    set w(a) {
        this._w = a;
        this.onChangeCallback()
    },
    set: function(a, d, c, b) {
        this._x = a;
        this._y = d;
        this._z = c;
        this._w = b;
        this.onChangeCallback();
        return this
    },
    copy: function(a) {
        this._x = a.x;
        this._y = a.y;
        this._z = a.z;
        this._w = a.w;
        this.onChangeCallback();
        return this
    },
    setFromEuler: function(g, h) {
        if (g instanceof THREE.Euler === false) {
            throw new Error("THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.")
        }
        var f = Math.cos(g._x / 2);
        var e = Math.cos(g._y / 2);
        var c = Math.cos(g._z / 2);
        var d = Math.sin(g._x / 2);
        var b = Math.sin(g._y / 2);
        var a = Math.sin(g._z / 2);
        if (g.order === "XYZ") {
            this._x = d * e * c + f * b * a;
            this._y = f * b * c - d * e * a;
            this._z = f * e * a + d * b * c;
            this._w = f * e * c - d * b * a
        } else {
            if (g.order === "YXZ") {
                this._x = d * e * c + f * b * a;
                this._y = f * b * c - d * e * a;
                this._z = f * e * a - d * b * c;
                this._w = f * e * c + d * b * a
            } else {
                if (g.order === "ZXY") {
                    this._x = d * e * c - f * b * a;
                    this._y = f * b * c + d * e * a;
                    this._z = f * e * a + d * b * c;
                    this._w = f * e * c - d * b * a
                } else {
                    if (g.order === "ZYX") {
                        this._x = d * e * c - f * b * a;
                        this._y = f * b * c + d * e * a;
                        this._z = f * e * a - d * b * c;
                        this._w = f * e * c + d * b * a
                    } else {
                        if (g.order === "YZX") {
                            this._x = d * e * c + f * b * a;
                            this._y = f * b * c + d * e * a;
                            this._z = f * e * a - d * b * c;
                            this._w = f * e * c - d * b * a
                        } else {
                            if (g.order === "XZY") {
                                this._x = d * e * c - f * b * a;
                                this._y = f * b * c - d * e * a;
                                this._z = f * e * a + d * b * c;
                                this._w = f * e * c + d * b * a
                            }
                        }
                    }
                }
            }
        }
        if (h !== false) {
            this.onChangeCallback()
        }
        return this
    },
    setFromAxisAngle: function(c, d) {
        var a = d / 2,
            b = Math.sin(a);
        this._x = c.x * b;
        this._y = c.y * b;
        this._z = c.z * b;
        this._w = Math.cos(a);
        this.onChangeCallback();
        return this
    },
    setFromRotationMatrix: function(e) {
        var d = e.elements,
            i = d[0],
            h = d[4],
            g = d[8],
            c = d[1],
            b = d[5],
            a = d[9],
            l = d[2],
            k = d[6],
            j = d[10],
            f = i + b + j,
            n;
        if (f > 0) {
            n = 0.5 / Math.sqrt(f + 1);
            this._w = 0.25 / n;
            this._x = (k - a) * n;
            this._y = (g - l) * n;
            this._z = (c - h) * n
        } else {
            if (i > b && i > j) {
                n = 2 * Math.sqrt(1 + i - b - j);
                this._w = (k - a) / n;
                this._x = 0.25 * n;
                this._y = (h + c) / n;
                this._z = (g + l) / n
            } else {
                if (b > j) {
                    n = 2 * Math.sqrt(1 + b - i - j);
                    this._w = (g - l) / n;
                    this._x = (h + c) / n;
                    this._y = 0.25 * n;
                    this._z = (a + k) / n
                } else {
                    n = 2 * Math.sqrt(1 + j - i - b);
                    this._w = (c - h) / n;
                    this._x = (g + l) / n;
                    this._y = (a + k) / n;
                    this._z = 0.25 * n
                }
            }
        }
        this.onChangeCallback();
        return this
    },
    setFromUnitVectors: function() {
        var c, a;
        var b = 0.000001;
        return function(d, e) {
            if (c === undefined) {
                c = new THREE.Vector3()
            }
            a = d.dot(e) + 1;
            if (a < b) {
                a = 0;
                if (Math.abs(d.x) > Math.abs(d.z)) {
                    c.set(-d.y, d.x, 0)
                } else {
                    c.set(0, -d.z, d.y)
                }
            } else {
                c.crossVectors(d, e)
            }
            this._x = c.x;
            this._y = c.y;
            this._z = c.z;
            this._w = a;
            this.normalize();
            return this
        }
    }(),
    inverse: function() {
        this.conjugate().normalize();
        return this
    },
    conjugate: function() {
        this._x *= -1;
        this._y *= -1;
        this._z *= -1;
        this.onChangeCallback();
        return this
    },
    dot: function(a) {
        return this._x * a._x + this._y * a._y + this._z * a._z + this._w * a._w
    },
    lengthSq: function() {
        return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w
    },
    length: function() {
        return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w)
    },
    normalize: function() {
        var a = this.length();
        if (a === 0) {
            this._x = 0;
            this._y = 0;
            this._z = 0;
            this._w = 1
        } else {
            a = 1 / a;
            this._x = this._x * a;
            this._y = this._y * a;
            this._z = this._z * a;
            this._w = this._w * a
        }
        this.onChangeCallback();
        return this
    },
    multiply: function(a, b) {
        if (b !== undefined) {
            console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.");
            return this.multiplyQuaternions(a, b)
        }
        return this.multiplyQuaternions(this, a)
    },
    multiplyQuaternions: function(l, k) {
        var i = l._x,
            h = l._y,
            g = l._z,
            j = l._w;
        var e = k._x,
            d = k._y,
            c = k._z,
            f = k._w;
        this._x = i * f + j * e + h * c - g * d;
        this._y = h * f + j * d + g * e - i * c;
        this._z = g * f + j * c + i * d - h * e;
        this._w = j * f - i * e - h * d - g * c;
        this.onChangeCallback();
        return this
    },
    multiplyVector3: function(a) {
        console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.");
        return a.applyQuaternion(this)
    },
    slerp: function(c, k) {
        if (k === 0) {
            return this
        }
        if (k === 1) {
            return this.copy(c)
        }
        var i = this._x,
            h = this._y,
            g = this._z,
            j = this._w;
        var b = j * c._w + i * c._x + h * c._y + g * c._z;
        if (b < 0) {
            this._w = -c._w;
            this._x = -c._x;
            this._y = -c._y;
            this._z = -c._z;
            b = -b
        } else {
            this.copy(c)
        }
        if (b >= 1) {
            this._w = j;
            this._x = i;
            this._y = h;
            this._z = g;
            return this
        }
        var d = Math.acos(b);
        var a = Math.sqrt(1 - b * b);
        if (Math.abs(a) < 0.001) {
            this._w = 0.5 * (j + this._w);
            this._x = 0.5 * (i + this._x);
            this._y = 0.5 * (h + this._y);
            this._z = 0.5 * (g + this._z);
            return this
        }
        var f = Math.sin((1 - k) * d) / a,
            e = Math.sin(k * d) / a;
        this._w = (j * f + this._w * e);
        this._x = (i * f + this._x * e);
        this._y = (h * f + this._y * e);
        this._z = (g * f + this._z * e);
        this.onChangeCallback();
        return this
    },
    equals: function(a) {
        return (a._x === this._x) && (a._y === this._y) && (a._z === this._z) && (a._w === this._w)
    },
    fromArray: function(b, a) {
        if (a === undefined) {
            a = 0
        }
        this._x = b[a];
        this._y = b[a + 1];
        this._z = b[a + 2];
        this._w = b[a + 3];
        this.onChangeCallback();
        return this
    },
    toArray: function(b, a) {
        if (b === undefined) {
            b = []
        }
        if (a === undefined) {
            a = 0
        }
        b[a] = this._x;
        b[a + 1] = this._y;
        b[a + 2] = this._z;
        b[a + 3] = this._w;
        return b
    },
    onChange: function(a) {
        this.onChangeCallback = a;
        return this
    },
    onChangeCallback: function() {},
    clone: function() {
        return new THREE.Quaternion(this._x, this._y, this._z, this._w)
    }
};
THREE.Quaternion.slerp = function(d, c, b, a) {
    return b.copy(d).slerp(c, a)
};
THREE.Vector2 = function(a, b) {
    this.x = a || 0;
    this.y = b || 0
};
THREE.Vector2.prototype = {
    constructor: THREE.Vector2,
    set: function(a, b) {
        this.x = a;
        this.y = b;
        return this
    },
    setX: function(a) {
        this.x = a;
        return this
    },
    setY: function(a) {
        this.y = a;
        return this
    },
    setComponent: function(a, b) {
        switch (a) {
            case 0:
                this.x = b;
                break;
            case 1:
                this.y = b;
                break;
            default:
                throw new Error("index is out of range: " + a)
        }
    },
    getComponent: function(a) {
        switch (a) {
            case 0:
                return this.x;
            case 1:
                return this.y;
            default:
                throw new Error("index is out of range: " + a)
        }
    },
    copy: function(a) {
        this.x = a.x;
        this.y = a.y;
        return this
    },
    add: function(b, a) {
        if (a !== undefined) {
            console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.");
            return this.addVectors(b, a)
        }
        this.x += b.x;
        this.y += b.y;
        return this
    },
    addVectors: function(d, c) {
        this.x = d.x + c.x;
        this.y = d.y + c.y;
        return this
    },
    addScalar: function(a) {
        this.x += a;
        this.y += a;
        return this
    },
    sub: function(b, a) {
        if (a !== undefined) {
            console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.");
            return this.subVectors(b, a)
        }
        this.x -= b.x;
        this.y -= b.y;
        return this
    },
    subVectors: function(d, c) {
        this.x = d.x - c.x;
        this.y = d.y - c.y;
        return this
    },
    multiply: function(a) {
        this.x *= a.x;
        this.y *= a.y;
        return this
    },
    multiplyScalar: function(a) {
        this.x *= a;
        this.y *= a;
        return this
    },
    divide: function(a) {
        this.x /= a.x;
        this.y /= a.y;
        return this
    },
    divideScalar: function(b) {
        if (b !== 0) {
            var a = 1 / b;
            this.x *= a;
            this.y *= a
        } else {
            this.x = 0;
            this.y = 0
        }
        return this
    },
    min: function(a) {
        if (this.x > a.x) {
            this.x = a.x
        }
        if (this.y > a.y) {
            this.y = a.y
        }
        return this
    },
    max: function(a) {
        if (this.x < a.x) {
            this.x = a.x
        }
        if (this.y < a.y) {
            this.y = a.y
        }
        return this
    },
    clamp: function(b, a) {
        if (this.x < b.x) {
            this.x = b.x
        } else {
            if (this.x > a.x) {
                this.x = a.x
            }
        }
        if (this.y < b.y) {
            this.y = b.y
        } else {
            if (this.y > a.y) {
                this.y = a.y
            }
        }
        return this
    },
    clampScalar: (function() {
        var b, a;
        return function(c, d) {
            if (b === undefined) {
                b = new THREE.Vector2();
                a = new THREE.Vector2()
            }
            b.set(c, c);
            a.set(d, d);
            return this.clamp(b, a)
        }
    })(),
    floor: function() {
        this.x = Math.floor(this.x);
        this.y = Math.floor(this.y);
        return this
    },
    ceil: function() {
        this.x = Math.ceil(this.x);
        this.y = Math.ceil(this.y);
        return this
    },
    round: function() {
        this.x = Math.round(this.x);
        this.y = Math.round(this.y);
        return this
    },
    roundToZero: function() {
        this.x = (this.x < 0) ? Math.ceil(this.x) : Math.floor(this.x);
        this.y = (this.y < 0) ? Math.ceil(this.y) : Math.floor(this.y);
        return this
    },
    negate: function() {
        this.x = -this.x;
        this.y = -this.y;
        return this
    },
    dot: function(a) {
        return this.x * a.x + this.y * a.y
    },
    lengthSq: function() {
        return this.x * this.x + this.y * this.y
    },
    length: function() {
        return Math.sqrt(this.x * this.x + this.y * this.y)
    },
    normalize: function() {
        return this.divideScalar(this.length())
    },
    distanceTo: function(a) {
        return Math.sqrt(this.distanceToSquared(a))
    },
    distanceToSquared: function(c) {
        var b = this.x - c.x,
            a = this.y - c.y;
        return b * b + a * a
    },
    setLength: function(a) {
        var b = this.length();
        if (b !== 0 && a !== b) {
            this.multiplyScalar(a / b)
        }
        return this
    },
    lerp: function(a, b) {
        this.x += (a.x - this.x) * b;
        this.y += (a.y - this.y) * b;
        return this
    },
    equals: function(a) {
        return ((a.x === this.x) && (a.y === this.y))
    },
    fromArray: function(b, a) {
        if (a === undefined) {
            a = 0
        }
        this.x = b[a];
        this.y = b[a + 1];
        return this
    },
    toArray: function(b, a) {
        if (b === undefined) {
            b = []
        }
        if (a === undefined) {
            a = 0
        }
        b[a] = this.x;
        b[a + 1] = this.y;
        return b
    },
    fromAttribute: function(b, a, c) {
        if (c === undefined) {
            c = 0
        }
        a = a * b.itemSize + c;
        this.x = b.array[a];
        this.y = b.array[a + 1];
        return this
    },
    clone: function() {
        return new THREE.Vector2(this.x, this.y)
    }
};
THREE.Vector3 = function(a, c, b) {
    this.x = a || 0;
    this.y = c || 0;
    this.z = b || 0
};
THREE.Vector3.prototype = {
    constructor: THREE.Vector3,
    set: function(a, c, b) {
        this.x = a;
        this.y = c;
        this.z = b;
        return this
    },
    setX: function(a) {
        this.x = a;
        return this
    },
    setY: function(a) {
        this.y = a;
        return this
    },
    setZ: function(a) {
        this.z = a;
        return this
    },
    setComponent: function(a, b) {
        switch (a) {
            case 0:
                this.x = b;
                break;
            case 1:
                this.y = b;
                break;
            case 2:
                this.z = b;
                break;
            default:
                throw new Error("index is out of range: " + a)
        }
    },
    getComponent: function(a) {
        switch (a) {
            case 0:
                return this.x;
            case 1:
                return this.y;
            case 2:
                return this.z;
            default:
                throw new Error("index is out of range: " + a)
        }
    },
    copy: function(a) {
        this.x = a.x;
        this.y = a.y;
        this.z = a.z;
        return this
    },
    add: function(b, a) {
        if (a !== undefined) {
            console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.");
            return this.addVectors(b, a)
        }
        this.x += b.x;
        this.y += b.y;
        this.z += b.z;
        return this
    },
    addScalar: function(a) {
        this.x += a;
        this.y += a;
        this.z += a;
        return this
    },
    addVectors: function(d, c) {
        this.x = d.x + c.x;
        this.y = d.y + c.y;
        this.z = d.z + c.z;
        return this
    },
    sub: function(b, a) {
        if (a !== undefined) {
            console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.");
            return this.subVectors(b, a)
        }
        this.x -= b.x;
        this.y -= b.y;
        this.z -= b.z;
        return this
    },
    subVectors: function(d, c) {
        this.x = d.x - c.x;
        this.y = d.y - c.y;
        this.z = d.z - c.z;
        return this
    },
    multiply: function(b, a) {
        if (a !== undefined) {
            console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.");
            return this.multiplyVectors(b, a)
        }
        this.x *= b.x;
        this.y *= b.y;
        this.z *= b.z;
        return this
    },
    multiplyScalar: function(a) {
        this.x *= a;
        this.y *= a;
        this.z *= a;
        return this
    },
    multiplyVectors: function(d, c) {
        this.x = d.x * c.x;
        this.y = d.y * c.y;
        this.z = d.z * c.z;
        return this
    },
    applyEuler: function() {
        var a;
        return function(b) {
            if (b instanceof THREE.Euler === false) {
                console.error("THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order.")
            }
            if (a === undefined) {
                a = new THREE.Quaternion()
            }
            this.applyQuaternion(a.setFromEuler(b));
            return this
        }
    }(),
    applyAxisAngle: function() {
        var a;
        return function(b, c) {
            if (a === undefined) {
                a = new THREE.Quaternion()
            }
            this.applyQuaternion(a.setFromAxisAngle(b, c));
            return this
        }
    }(),
    applyMatrix3: function(b) {
        var a = this.x;
        var f = this.y;
        var d = this.z;
        var c = b.elements;
        this.x = c[0] * a + c[3] * f + c[6] * d;
        this.y = c[1] * a + c[4] * f + c[7] * d;
        this.z = c[2] * a + c[5] * f + c[8] * d;
        return this
    },
    applyMatrix4: function(b) {
        var a = this.x,
            f = this.y,
            d = this.z;
        var c = b.elements;
        this.x = c[0] * a + c[4] * f + c[8] * d + c[12];
        this.y = c[1] * a + c[5] * f + c[9] * d + c[13];
        this.z = c[2] * a + c[6] * f + c[10] * d + c[14];
        return this
    },
    applyProjection: function(b) {
        var a = this.x,
            h = this.y,
            g = this.z;
        var c = b.elements;
        var f = 1 / (c[3] * a + c[7] * h + c[11] * g + c[15]);
        this.x = (c[0] * a + c[4] * h + c[8] * g + c[12]) * f;
        this.y = (c[1] * a + c[5] * h + c[9] * g + c[13]) * f;
        this.z = (c[2] * a + c[6] * h + c[10] * g + c[14]) * f;
        return this
    },
    applyQuaternion: function(a) {
        var l = this.x;
        var k = this.y;
        var j = this.z;
        var h = a.x;
        var g = a.y;
        var f = a.z;
        var i = a.w;
        var d = i * l + g * j - f * k;
        var c = i * k + f * l - h * j;
        var b = i * j + h * k - g * l;
        var e = -h * l - g * k - f * j;
        this.x = d * i + e * -h + c * -f - b * -g;
        this.y = c * i + e * -g + b * -h - d * -f;
        this.z = b * i + e * -f + d * -g - c * -h;
        return this
    },
    project: function() {
        var a;
        return function(b) {
            if (a === undefined) {
                a = new THREE.Matrix4()
            }
            a.multiplyMatrices(b.projectionMatrix, a.getInverse(b.matrixWorld));
            return this.applyProjection(a)
        }
    }(),
    unproject: function() {
        var a;
        return function(b) {
            if (a === undefined) {
                a = new THREE.Matrix4()
            }
            a.multiplyMatrices(b.matrixWorld, a.getInverse(b.projectionMatrix));
            return this.applyProjection(a)
        }
    }(),
    transformDirection: function(b) {
        var a = this.x,
            f = this.y,
            d = this.z;
        var c = b.elements;
        this.x = c[0] * a + c[4] * f + c[8] * d;
        this.y = c[1] * a + c[5] * f + c[9] * d;
        this.z = c[2] * a + c[6] * f + c[10] * d;
        this.normalize();
        return this
    },
    divide: function(a) {
        this.x /= a.x;
        this.y /= a.y;
        this.z /= a.z;
        return this
    },
    divideScalar: function(b) {
        if (b !== 0) {
            var a = 1 / b;
            this.x *= a;
            this.y *= a;
            this.z *= a
        } else {
            this.x = 0;
            this.y = 0;
            this.z = 0
        }
        return this
    },
    min: function(a) {
        if (this.x > a.x) {
            this.x = a.x
        }
        if (this.y > a.y) {
            this.y = a.y
        }
        if (this.z > a.z) {
            this.z = a.z
        }
        return this
    },
    max: function(a) {
        if (this.x < a.x) {
            this.x = a.x
        }
        if (this.y < a.y) {
            this.y = a.y
        }
        if (this.z < a.z) {
            this.z = a.z
        }
        return this
    },
    clamp: function(b, a) {
        if (this.x < b.x) {
            this.x = b.x
        } else {
            if (this.x > a.x) {
                this.x = a.x
            }
        }
        if (this.y < b.y) {
            this.y = b.y
        } else {
            if (this.y > a.y) {
                this.y = a.y
            }
        }
        if (this.z < b.z) {
            this.z = b.z
        } else {
            if (this.z > a.z) {
                this.z = a.z
            }
        }
        return this
    },
    clampScalar: (function() {
        var b, a;
        return function(c, d) {
            if (b === undefined) {
                b = new THREE.Vector3();
                a = new THREE.Vector3()
            }
            b.set(c, c, c);
            a.set(d, d, d);
            return this.clamp(b, a)
        }
    })(),
    floor: function() {
        this.x = Math.floor(this.x);
        this.y = Math.floor(this.y);
        this.z = Math.floor(this.z);
        return this
    },
    ceil: function() {
        this.x = Math.ceil(this.x);
        this.y = Math.ceil(this.y);
        this.z = Math.ceil(this.z);
        return this
    },
    round: function() {
        this.x = Math.round(this.x);
        this.y = Math.round(this.y);
        this.z = Math.round(this.z);
        return this
    },
    roundToZero: function() {
        this.x = (this.x < 0) ? Math.ceil(this.x) : Math.floor(this.x);
        this.y = (this.y < 0) ? Math.ceil(this.y) : Math.floor(this.y);
        this.z = (this.z < 0) ? Math.ceil(this.z) : Math.floor(this.z);
        return this
    },
    negate: function() {
        this.x = -this.x;
        this.y = -this.y;
        this.z = -this.z;
        return this
    },
    dot: function(a) {
        return this.x * a.x + this.y * a.y + this.z * a.z
    },
    lengthSq: function() {
        return this.x * this.x + this.y * this.y + this.z * this.z
    },
    length: function() {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)
    },
    lengthManhattan: function() {
        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z)
    },
    normalize: function() {
        return this.divideScalar(this.length())
    },
    setLength: function(a) {
        var b = this.length();
        if (b !== 0 && a !== b) {
            this.multiplyScalar(a / b)
        }
        return this
    },
    lerp: function(a, b) {
        this.x += (a.x - this.x) * b;
        this.y += (a.y - this.y) * b;
        this.z += (a.z - this.z) * b;
        return this
    },
    cross: function(c, b) {
        if (b !== undefined) {
            console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.");
            return this.crossVectors(c, b)
        }
        var a = this.x,
            e = this.y,
            d = this.z;
        this.x = e * c.z - d * c.y;
        this.y = d * c.x - a * c.z;
        this.z = a * c.y - e * c.x;
        return this
    },
    crossVectors: function(d, c) {
        var h = d.x,
            f = d.y,
            e = d.z;
        var j = c.x,
            i = c.y,
            g = c.z;
        this.x = f * g - e * i;
        this.y = e * j - h * g;
        this.z = h * i - f * j;
        return this
    },
    projectOnVector: function() {
        var b, a;
        return function(c) {
            if (b === undefined) {
                b = new THREE.Vector3()
            }
            b.copy(c).normalize();
            a = this.dot(b);
            return this.copy(b).multiplyScalar(a)
        }
    }(),
    projectOnPlane: function() {
        var a;
        return function(b) {
            if (a === undefined) {
                a = new THREE.Vector3()
            }
            a.copy(this).projectOnVector(b);
            return this.sub(a)
        }
    }(),
    reflect: function() {
        var a;
        return function(b) {
            if (a === undefined) {
                a = new THREE.Vector3()
            }
            return this.sub(a.copy(b).multiplyScalar(2 * this.dot(b)))
        }
    }(),
    angleTo: function(a) {
        var b = this.dot(a) / (this.length() * a.length());
        return Math.acos(THREE.Math.clamp(b, -1, 1))
    },
    distanceTo: function(a) {
        return Math.sqrt(this.distanceToSquared(a))
    },
    distanceToSquared: function(d) {
        var c = this.x - d.x;
        var b = this.y - d.y;
        var a = this.z - d.z;
        return c * c + b * b + a * a
    },
    setEulerFromRotationMatrix: function(b, a) {
        console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")
    },
    setEulerFromQuaternion: function(b, a) {
        console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")
    },
    getPositionFromMatrix: function(a) {
        console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().");
        return this.setFromMatrixPosition(a)
    },
    getScaleFromMatrix: function(a) {
        console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().");
        return this.setFromMatrixScale(a)
    },
    getColumnFromMatrix: function(b, a) {
        console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().");
        return this.setFromMatrixColumn(b, a)
    },
    setFromMatrixPosition: function(a) {
        this.x = a.elements[12];
        this.y = a.elements[13];
        this.z = a.elements[14];
        return this
    },
    setFromMatrixScale: function(a) {
        var d = this.set(a.elements[0], a.elements[1], a.elements[2]).length();
        var c = this.set(a.elements[4], a.elements[5], a.elements[6]).length();
        var b = this.set(a.elements[8], a.elements[9], a.elements[10]).length();
        this.x = d;
        this.y = c;
        this.z = b;
        return this
    },
    setFromMatrixColumn: function(b, a) {
        var d = b * 4;
        var c = a.elements;
        this.x = c[d];
        this.y = c[d + 1];
        this.z = c[d + 2];
        return this
    },
    equals: function(a) {
        return ((a.x === this.x) && (a.y === this.y) && (a.z === this.z))
    },
    fromArray: function(b, a) {
        if (a === undefined) {
            a = 0
        }
        this.x = b[a];
        this.y = b[a + 1];
        this.z = b[a + 2];
        return this
    },
    toArray: function(b, a) {
        if (b === undefined) {
            b = []
        }
        if (a === undefined) {
            a = 0
        }
        b[a] = this.x;
        b[a + 1] = this.y;
        b[a + 2] = this.z;
        return b
    },
    fromAttribute: function(b, a, c) {
        if (c === undefined) {
            c = 0
        }
        a = a * b.itemSize + c;
        this.x = b.array[a];
        this.y = b.array[a + 1];
        this.z = b.array[a + 2];
        return this
    },
    clone: function() {
        return new THREE.Vector3(this.x, this.y, this.z)
    }
};
THREE.Vector4 = function(a, d, c, b) {
    this.x = a || 0;
    this.y = d || 0;
    this.z = c || 0;
    this.w = (b !== undefined) ? b : 1
};
THREE.Vector4.prototype = {
    constructor: THREE.Vector4,
    set: function(a, d, c, b) {
        this.x = a;
        this.y = d;
        this.z = c;
        this.w = b;
        return this
    },
    setX: function(a) {
        this.x = a;
        return this
    },
    setY: function(a) {
        this.y = a;
        return this
    },
    setZ: function(a) {
        this.z = a;
        return this
    },
    setW: function(a) {
        this.w = a;
        return this
    },
    setComponent: function(a, b) {
        switch (a) {
            case 0:
                this.x = b;
                break;
            case 1:
                this.y = b;
                break;
            case 2:
                this.z = b;
                break;
            case 3:
                this.w = b;
                break;
            default:
                throw new Error("index is out of range: " + a)
        }
    },
    getComponent: function(a) {
        switch (a) {
            case 0:
                return this.x;
            case 1:
                return this.y;
            case 2:
                return this.z;
            case 3:
                return this.w;
            default:
                throw new Error("index is out of range: " + a)
        }
    },
    copy: function(a) {
        this.x = a.x;
        this.y = a.y;
        this.z = a.z;
        this.w = (a.w !== undefined) ? a.w : 1;
        return this
    },
    add: function(b, a) {
        if (a !== undefined) {
            console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.");
            return this.addVectors(b, a)
        }
        this.x += b.x;
        this.y += b.y;
        this.z += b.z;
        this.w += b.w;
        return this
    },
    addScalar: function(a) {
        this.x += a;
        this.y += a;
        this.z += a;
        this.w += a;
        return this
    },
    addVectors: function(d, c) {
        this.x = d.x + c.x;
        this.y = d.y + c.y;
        this.z = d.z + c.z;
        this.w = d.w + c.w;
        return this
    },
    sub: function(b, a) {
        if (a !== undefined) {
            console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.");
            return this.subVectors(b, a)
        }
        this.x -= b.x;
        this.y -= b.y;
        this.z -= b.z;
        this.w -= b.w;
        return this
    },
    subVectors: function(d, c) {
        this.x = d.x - c.x;
        this.y = d.y - c.y;
        this.z = d.z - c.z;
        this.w = d.w - c.w;
        return this
    },
    multiplyScalar: function(a) {
        this.x *= a;
        this.y *= a;
        this.z *= a;
        this.w *= a;
        return this
    },
    applyMatrix4: function(b) {
        var a = this.x;
        var g = this.y;
        var f = this.z;
        var c = this.w;
        var d = b.elements;
        this.x = d[0] * a + d[4] * g + d[8] * f + d[12] * c;
        this.y = d[1] * a + d[5] * g + d[9] * f + d[13] * c;
        this.z = d[2] * a + d[6] * g + d[10] * f + d[14] * c;
        this.w = d[3] * a + d[7] * g + d[11] * f + d[15] * c;
        return this
    },
    divideScalar: function(b) {
        if (b !== 0) {
            var a = 1 / b;
            this.x *= a;
            this.y *= a;
            this.z *= a;
            this.w *= a
        } else {
            this.x = 0;
            this.y = 0;
            this.z = 0;
            this.w = 1
        }
        return this
    },
    setAxisAngleFromQuaternion: function(b) {
        this.w = 2 * Math.acos(b.w);
        var a = Math.sqrt(1 - b.w * b.w);
        if (a < 0.0001) {
            this.x = 1;
            this.y = 0;
            this.z = 0
        } else {
            this.x = b.x / a;
            this.y = b.y / a;
            this.z = b.z / a
        }
        return this
    },
    setAxisAngleFromRotationMatrix: function(t) {
        var u, j, i, h, D = 0.01,
            k = 0.1,
            g = t.elements,
            C = g[0],
            A = g[4],
            v = g[8],
            e = g[1],
            c = g[5],
            a = g[9],
            r = g[2],
            p = g[6],
            n = g[10];
        if ((Math.abs(A - e) < D) && (Math.abs(v - r) < D) && (Math.abs(a - p) < D)) {
            if ((Math.abs(A + e) < k) && (Math.abs(v + r) < k) && (Math.abs(a + p) < k) && (Math.abs(C + c + n - 3) < k)) {
                this.set(1, 0, 0, 0);
                return this
            }
            u = Math.PI;
            var f = (C + 1) / 2;
            var q = (c + 1) / 2;
            var B = (n + 1) / 2;
            var d = (A + e) / 4;
            var b = (v + r) / 4;
            var o = (a + p) / 4;
            if ((f > q) && (f > B)) {
                if (f < D) {
                    j = 0;
                    i = 0.707106781;
                    h = 0.707106781
                } else {
                    j = Math.sqrt(f);
                    i = d / j;
                    h = b / j
                }
            } else {
                if (q > B) {
                    if (q < D) {
                        j = 0.707106781;
                        i = 0;
                        h = 0.707106781
                    } else {
                        i = Math.sqrt(q);
                        j = d / i;
                        h = o / i
                    }
                } else {
                    if (B < D) {
                        j = 0.707106781;
                        i = 0.707106781;
                        h = 0
                    } else {
                        h = Math.sqrt(B);
                        j = b / h;
                        i = o / h
                    }
                }
            }
            this.set(j, i, h, u);
            return this
        }
        var l = Math.sqrt((p - a) * (p - a) + (v - r) * (v - r) + (e - A) * (e - A));
        if (Math.abs(l) < 0.001) {
            l = 1
        }
        this.x = (p - a) / l;
        this.y = (v - r) / l;
        this.z = (e - A) / l;
        this.w = Math.acos((C + c + n - 1) / 2);
        return this
    },
    min: function(a) {
        if (this.x > a.x) {
            this.x = a.x
        }
        if (this.y > a.y) {
            this.y = a.y
        }
        if (this.z > a.z) {
            this.z = a.z
        }
        if (this.w > a.w) {
            this.w = a.w
        }
        return this
    },
    max: function(a) {
        if (this.x < a.x) {
            this.x = a.x
        }
        if (this.y < a.y) {
            this.y = a.y
        }
        if (this.z < a.z) {
            this.z = a.z
        }
        if (this.w < a.w) {
            this.w = a.w
        }
        return this
    },
    clamp: function(b, a) {
        if (this.x < b.x) {
            this.x = b.x
        } else {
            if (this.x > a.x) {
                this.x = a.x
            }
        }
        if (this.y < b.y) {
            this.y = b.y
        } else {
            if (this.y > a.y) {
                this.y = a.y
            }
        }
        if (this.z < b.z) {
            this.z = b.z
        } else {
            if (this.z > a.z) {
                this.z = a.z
            }
        }
        if (this.w < b.w) {
            this.w = b.w
        } else {
            if (this.w > a.w) {
                this.w = a.w
            }
        }
        return this
    },
    clampScalar: (function() {
        var b, a;
        return function(c, d) {
            if (b === undefined) {
                b = new THREE.Vector4();
                a = new THREE.Vector4()
            }
            b.set(c, c, c, c);
            a.set(d, d, d, d);
            return this.clamp(b, a)
        }
    })(),
    floor: function() {
        this.x = Math.floor(this.x);
        this.y = Math.floor(this.y);
        this.z = Math.floor(this.z);
        this.w = Math.floor(this.w);
        return this
    },
    ceil: function() {
        this.x = Math.ceil(this.x);
        this.y = Math.ceil(this.y);
        this.z = Math.ceil(this.z);
        this.w = Math.ceil(this.w);
        return this
    },
    round: function() {
        this.x = Math.round(this.x);
        this.y = Math.round(this.y);
        this.z = Math.round(this.z);
        this.w = Math.round(this.w);
        return this
    },
    roundToZero: function() {
        this.x = (this.x < 0) ? Math.ceil(this.x) : Math.floor(this.x);
        this.y = (this.y < 0) ? Math.ceil(this.y) : Math.floor(this.y);
        this.z = (this.z < 0) ? Math.ceil(this.z) : Math.floor(this.z);
        this.w = (this.w < 0) ? Math.ceil(this.w) : Math.floor(this.w);
        return this
    },
    negate: function() {
        this.x = -this.x;
        this.y = -this.y;
        this.z = -this.z;
        this.w = -this.w;
        return this
    },
    dot: function(a) {
        return this.x * a.x + this.y * a.y + this.z * a.z + this.w * a.w
    },
    lengthSq: function() {
        return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w
    },
    length: function() {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w)
    },
    lengthManhattan: function() {
        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w)
    },
    normalize: function() {
        return this.divideScalar(this.length())
    },
    setLength: function(a) {
        var b = this.length();
        if (b !== 0 && a !== b) {
            this.multiplyScalar(a / b)
        }
        return this
    },
    lerp: function(a, b) {
        this.x += (a.x - this.x) * b;
        this.y += (a.y - this.y) * b;
        this.z += (a.z - this.z) * b;
        this.w += (a.w - this.w) * b;
        return this
    },
    equals: function(a) {
        return ((a.x === this.x) && (a.y === this.y) && (a.z === this.z) && (a.w === this.w))
    },
    fromArray: function(b, a) {
        if (a === undefined) {
            a = 0
        }
        this.x = b[a];
        this.y = b[a + 1];
        this.z = b[a + 2];
        this.w = b[a + 3];
        return this
    },
    toArray: function(b, a) {
        if (b === undefined) {
            b = []
        }
        if (a === undefined) {
            a = 0
        }
        b[a] = this.x;
        b[a + 1] = this.y;
        b[a + 2] = this.z;
        b[a + 3] = this.w;
        return b
    },
    fromAttribute: function(b, a, c) {
        if (c === undefined) {
            c = 0
        }
        a = a * b.itemSize + c;
        this.x = b.array[a];
        this.y = b.array[a + 1];
        this.z = b.array[a + 2];
        this.w = b.array[a + 3];
        return this
    },
    clone: function() {
        return new THREE.Vector4(this.x, this.y, this.z, this.w)
    }
};
THREE.Euler = function(b, d, c, a) {
    this._x = b || 0;
    this._y = d || 0;
    this._z = c || 0;
    this._order = a || THREE.Euler.DefaultOrder
};
THREE.Euler.RotationOrders = ["XYZ", "YZX", "ZXY", "XZY", "YXZ", "ZYX"];
THREE.Euler.DefaultOrder = "XYZ";
THREE.Euler.prototype = {
    constructor: THREE.Euler,
    _x: 0,
    _y: 0,
    _z: 0,
    _order: THREE.Euler.DefaultOrder,
    get x() {
        return this._x
    },
    set x(a) {
        this._x = a;
        this.onChangeCallback()
    },
    get y() {
        return this._y
    },
    set y(a) {
        this._y = a;
        this.onChangeCallback()
    },
    get z() {
        return this._z
    },
    set z(a) {
        this._z = a;
        this.onChangeCallback()
    },
    get order() {
        return this._order
    },
    set order(a) {
        this._order = a;
        this.onChangeCallback()
    },
    set: function(b, d, c, a) {
        this._x = b;
        this._y = d;
        this._z = c;
        this._order = a || this._order;
        this.onChangeCallback();
        return this
    },
    copy: function(a) {
        this._x = a._x;
        this._y = a._y;
        this._z = a._z;
        this._order = a._order;
        this.onChangeCallback();
        return this
    },
    setFromRotationMatrix: function(e, f, g) {
        var j = THREE.Math.clamp;
        var d = e.elements;
        var k = d[0],
            i = d[4],
            h = d[8];
        var c = d[1],
            b = d[5],
            a = d[9];
        var o = d[2],
            n = d[6],
            l = d[10];
        f = f || this._order;
        if (f === "XYZ") {
            this._y = Math.asin(j(h, -1, 1));
            if (Math.abs(h) < 0.99999) {
                this._x = Math.atan2(-a, l);
                this._z = Math.atan2(-i, k)
            } else {
                this._x = Math.atan2(n, b);
                this._z = 0
            }
        } else {
            if (f === "YXZ") {
                this._x = Math.asin(-j(a, -1, 1));
                if (Math.abs(a) < 0.99999) {
                    this._y = Math.atan2(h, l);
                    this._z = Math.atan2(c, b)
                } else {
                    this._y = Math.atan2(-o, k);
                    this._z = 0
                }
            } else {
                if (f === "ZXY") {
                    this._x = Math.asin(j(n, -1, 1));
                    if (Math.abs(n) < 0.99999) {
                        this._y = Math.atan2(-o, l);
                        this._z = Math.atan2(-i, b)
                    } else {
                        this._y = 0;
                        this._z = Math.atan2(c, k)
                    }
                } else {
                    if (f === "ZYX") {
                        this._y = Math.asin(-j(o, -1, 1));
                        if (Math.abs(o) < 0.99999) {
                            this._x = Math.atan2(n, l);
                            this._z = Math.atan2(c, k)
                        } else {
                            this._x = 0;
                            this._z = Math.atan2(-i, b)
                        }
                    } else {
                        if (f === "YZX") {
                            this._z = Math.asin(j(c, -1, 1));
                            if (Math.abs(c) < 0.99999) {
                                this._x = Math.atan2(-a, b);
                                this._y = Math.atan2(-o, k)
                            } else {
                                this._x = 0;
                                this._y = Math.atan2(h, l)
                            }
                        } else {
                            if (f === "XZY") {
                                this._z = Math.asin(-j(i, -1, 1));
                                if (Math.abs(i) < 0.99999) {
                                    this._x = Math.atan2(n, b);
                                    this._y = Math.atan2(h, k)
                                } else {
                                    this._x = Math.atan2(-a, l);
                                    this._y = 0
                                }
                            } else {
                                console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: " + f)
                            }
                        }
                    }
                }
            }
        }
        this._order = f;
        if (g !== false) {
            this.onChangeCallback()
        }
        return this
    },
    setFromQuaternion: function() {
        var a;
        return function(c, b, d) {
            if (a === undefined) {
                a = new THREE.Matrix4()
            }
            a.makeRotationFromQuaternion(c);
            this.setFromRotationMatrix(a, b, d);
            return this
        }
    }(),
    setFromVector3: function(b, a) {
        return this.set(b.x, b.y, b.z, a || this._order)
    },
    reorder: function() {
        var a = new THREE.Quaternion();
        return function(b) {
            a.setFromEuler(this);
            this.setFromQuaternion(a, b)
        }
    }(),
    equals: function(a) {
        return (a._x === this._x) && (a._y === this._y) && (a._z === this._z) && (a._order === this._order)
    },
    fromArray: function(a) {
        this._x = a[0];
        this._y = a[1];
        this._z = a[2];
        if (a[3] !== undefined) {
            this._order = a[3]
        }
        this.onChangeCallback();
        return this
    },
    toArray: function() {
        return [this._x, this._y, this._z, this._order]
    },
    toVector3: function(a) {
        if (a) {
            return a.set(this._x, this._y, this._z)
        } else {
            return new THREE.Vector3(this._x, this._y, this._z)
        }
    },
    onChange: function(a) {
        this.onChangeCallback = a;
        return this
    },
    onChangeCallback: function() {},
    clone: function() {
        return new THREE.Euler(this._x, this._y, this._z, this._order)
    }
};
THREE.Line3 = function(b, a) {
    this.start = (b !== undefined) ? b : new THREE.Vector3();
    this.end = (a !== undefined) ? a : new THREE.Vector3()
};
THREE.Line3.prototype = {
    constructor: THREE.Line3,
    set: function(b, a) {
        this.start.copy(b);
        this.end.copy(a);
        return this
    },
    copy: function(a) {
        this.start.copy(a.start);
        this.end.copy(a.end);
        return this
    },
    center: function(b) {
        var a = b || new THREE.Vector3();
        return a.addVectors(this.start, this.end).multiplyScalar(0.5)
    },
    delta: function(b) {
        var a = b || new THREE.Vector3();
        return a.subVectors(this.end, this.start)
    },
    distanceSq: function() {
        return this.start.distanceToSquared(this.end)
    },
    distance: function() {
        return this.start.distanceTo(this.end)
    },
    at: function(c, b) {
        var a = b || new THREE.Vector3();
        return this.delta(a).multiplyScalar(c).add(this.start)
    },
    closestPointToPointParameter: function() {
        var b = new THREE.Vector3();
        var a = new THREE.Vector3();
        return function(c, g) {
            b.subVectors(c, this.start);
            a.subVectors(this.end, this.start);
            var f = a.dot(a);
            var e = a.dot(b);
            var d = e / f;
            if (g) {
                d = THREE.Math.clamp(d, 0, 1)
            }
            return d
        }
    }(),
    closestPointToPoint: function(b, e, d) {
        var c = this.closestPointToPointParameter(b, e);
        var a = d || new THREE.Vector3();
        return this.delta(a).multiplyScalar(c).add(this.start)
    },
    applyMatrix4: function(a) {
        this.start.applyMatrix4(a);
        this.end.applyMatrix4(a);
        return this
    },
    equals: function(a) {
        return a.start.equals(this.start) && a.end.equals(this.end)
    },
    clone: function() {
        return new THREE.Line3().copy(this)
    }
};
THREE.Box2 = function(b, a) {
    this.min = (b !== undefined) ? b : new THREE.Vector2(Infinity, Infinity);
    this.max = (a !== undefined) ? a : new THREE.Vector2(-Infinity, -Infinity)
};
THREE.Box2.prototype = {
    constructor: THREE.Box2,
    set: function(b, a) {
        this.min.copy(b);
        this.max.copy(a);
        return this
    },
    setFromPoints: function(c) {
        this.makeEmpty();
        for (var b = 0, a = c.length; b < a; b++) {
            this.expandByPoint(c[b])
        }
        return this
    },
    setFromCenterAndSize: function() {
        var a = new THREE.Vector2();
        return function(b, d) {
            var c = a.copy(d).multiplyScalar(0.5);
            this.min.copy(b).sub(c);
            this.max.copy(b).add(c);
            return this
        }
    }(),
    copy: function(a) {
        this.min.copy(a.min);
        this.max.copy(a.max);
        return this
    },
    makeEmpty: function() {
        this.min.x = this.min.y = Infinity;
        this.max.x = this.max.y = -Infinity;
        return this
    },
    empty: function() {
        return (this.max.x < this.min.x) || (this.max.y < this.min.y)
    },
    center: function(b) {
        var a = b || new THREE.Vector2();
        return a.addVectors(this.min, this.max).multiplyScalar(0.5)
    },
    size: function(b) {
        var a = b || new THREE.Vector2();
        return a.subVectors(this.max, this.min)
    },
    expandByPoint: function(a) {
        this.min.min(a);
        this.max.max(a);
        return this
    },
    expandByVector: function(a) {
        this.min.sub(a);
        this.max.add(a);
        return this
    },
    expandByScalar: function(a) {
        this.min.addScalar(-a);
        this.max.addScalar(a);
        return this
    },
    containsPoint: function(a) {
        if (a.x < this.min.x || a.x > this.max.x || a.y < this.min.y || a.y > this.max.y) {
            return false
        }
        return true
    },
    containsBox: function(a) {
        if ((this.min.x <= a.min.x) && (a.max.x <= this.max.x) && (this.min.y <= a.min.y) && (a.max.y <= this.max.y)) {
            return true
        }
        return false
    },
    getParameter: function(b, c) {
        var a = c || new THREE.Vector2();
        return a.set((b.x - this.min.x) / (this.max.x - this.min.x), (b.y - this.min.y) / (this.max.y - this.min.y))
    },
    isIntersectionBox: function(a) {
        if (a.max.x < this.min.x || a.min.x > this.max.x || a.max.y < this.min.y || a.min.y > this.max.y) {
            return false
        }
        return true
    },
    clampPoint: function(b, c) {
        var a = c || new THREE.Vector2();
        return a.copy(b).clamp(this.min, this.max)
    },
    distanceToPoint: function() {
        var a = new THREE.Vector2();
        return function(b) {
            var c = a.copy(b).clamp(this.min, this.max);
            return c.sub(b).length()
        }
    }(),
    intersect: function(a) {
        this.min.max(a.min);
        this.max.min(a.max);
        return this
    },
    union: function(a) {
        this.min.min(a.min);
        this.max.max(a.max);
        return this
    },
    translate: function(a) {
        this.min.add(a);
        this.max.add(a);
        return this
    },
    equals: function(a) {
        return a.min.equals(this.min) && a.max.equals(this.max)
    },
    clone: function() {
        return new THREE.Box2().copy(this)
    }
};
THREE.Box3 = function(b, a) {
    this.min = (b !== undefined) ? b : new THREE.Vector3(Infinity, Infinity, Infinity);
    this.max = (a !== undefined) ? a : new THREE.Vector3(-Infinity, -Infinity, -Infinity)
};
THREE.Box3.prototype = {
    constructor: THREE.Box3,
    set: function(b, a) {
        this.min.copy(b);
        this.max.copy(a);
        return this
    },
    setFromPoints: function(c) {
        this.makeEmpty();
        for (var b = 0, a = c.length; b < a; b++) {
            this.expandByPoint(c[b])
        }
        return this
    },
    setFromCenterAndSize: function() {
        var a = new THREE.Vector3();
        return function(b, d) {
            var c = a.copy(d).multiplyScalar(0.5);
            this.min.copy(b).sub(c);
            this.max.copy(b).add(c);
            return this
        }
    }(),
    setFromObject: function() {
        var a = new THREE.Vector3();
        return function(b) {
            var c = this;
            b.updateMatrixWorld(true);
            this.makeEmpty();
            b.traverse(function(h) {
                var j = h.geometry;
                if (j !== undefined) {
                    if (j instanceof THREE.Geometry) {
                        var f = j.vertices;
                        for (var g = 0, e = f.length; g < e; g++) {
                            a.copy(f[g]);
                            a.applyMatrix4(h.matrixWorld);
                            c.expandByPoint(a)
                        }
                    } else {
                        if (j instanceof THREE.BufferGeometry && j.attributes.position !== undefined) {
                            var d = j.attributes.position.array;
                            for (var g = 0, e = d.length; g < e; g += 3) {
                                a.set(d[g], d[g + 1], d[g + 2]);
                                a.applyMatrix4(h.matrixWorld);
                                c.expandByPoint(a)
                            }
                        }
                    }
                }
            });
            return this
        }
    }(),
    copy: function(a) {
        this.min.copy(a.min);
        this.max.copy(a.max);
        return this
    },
    makeEmpty: function() {
        this.min.x = this.min.y = this.min.z = Infinity;
        this.max.x = this.max.y = this.max.z = -Infinity;
        return this
    },
    empty: function() {
        return (this.max.x < this.min.x) || (this.max.y < this.min.y) || (this.max.z < this.min.z)
    },
    center: function(b) {
        var a = b || new THREE.Vector3();
        return a.addVectors(this.min, this.max).multiplyScalar(0.5)
    },
    size: function(b) {
        var a = b || new THREE.Vector3();
        return a.subVectors(this.max, this.min)
    },
    expandByPoint: function(a) {
        this.min.min(a);
        this.max.max(a);
        return this
    },
    expandByVector: function(a) {
        this.min.sub(a);
        this.max.add(a);
        return this
    },
    expandByScalar: function(a) {
        this.min.addScalar(-a);
        this.max.addScalar(a);
        return this
    },
    containsPoint: function(a) {
        if (a.x < this.min.x || a.x > this.max.x || a.y < this.min.y || a.y > this.max.y || a.z < this.min.z || a.z > this.max.z) {
            return false
        }
        return true
    },
    containsBox: function(a) {
        if ((this.min.x <= a.min.x) && (a.max.x <= this.max.x) && (this.min.y <= a.min.y) && (a.max.y <= this.max.y) && (this.min.z <= a.min.z) && (a.max.z <= this.max.z)) {
            return true
        }
        return false
    },
    getParameter: function(b, c) {
        var a = c || new THREE.Vector3();
        return a.set((b.x - this.min.x) / (this.max.x - this.min.x), (b.y - this.min.y) / (this.max.y - this.min.y), (b.z - this.min.z) / (this.max.z - this.min.z))
    },
    isIntersectionBox: function(a) {
        if (a.max.x < this.min.x || a.min.x > this.max.x || a.max.y < this.min.y || a.min.y > this.max.y || a.max.z < this.min.z || a.min.z > this.max.z) {
            return false
        }
        return true
    },
    clampPoint: function(b, c) {
        var a = c || new THREE.Vector3();
        return a.copy(b).clamp(this.min, this.max)
    },
    distanceToPoint: function() {
        var a = new THREE.Vector3();
        return function(b) {
            var c = a.copy(b).clamp(this.min, this.max);
            return c.sub(b).length()
        }
    }(),
    getBoundingSphere: function() {
        var a = new THREE.Vector3();
        return function(c) {
            var b = c || new THREE.Sphere();
            b.center = this.center();
            b.radius = this.size(a).length() * 0.5;
            return b
        }
    }(),
    intersect: function(a) {
        this.min.max(a.min);
        this.max.min(a.max);
        return this
    },
    union: function(a) {
        this.min.min(a.min);
        this.max.max(a.max);
        return this
    },
    applyMatrix4: function() {
        var a = [new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3()];
        return function(b) {
            a[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(b);
            a[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(b);
            a[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(b);
            a[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(b);
            a[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(b);
            a[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(b);
            a[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(b);
            a[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(b);
            this.makeEmpty();
            this.setFromPoints(a);
            return this
        }
    }(),
    translate: function(a) {
        this.min.add(a);
        this.max.add(a);
        return this
    },
    equals: function(a) {
        return a.min.equals(this.min) && a.max.equals(this.max)
    },
    clone: function() {
        return new THREE.Box3().copy(this)
    }
};
THREE.Matrix3 = function() {
    this.elements = new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);
    if (arguments.length > 0) {
        console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")
    }
};
THREE.Matrix3.prototype = {
    constructor: THREE.Matrix3,
    set: function(h, g, f, e, d, c, a, j, i) {
        var b = this.elements;
        b[0] = h;
        b[3] = g;
        b[6] = f;
        b[1] = e;
        b[4] = d;
        b[7] = c;
        b[2] = a;
        b[5] = j;
        b[8] = i;
        return this
    },
    identity: function() {
        this.set(1, 0, 0, 0, 1, 0, 0, 0, 1);
        return this
    },
    copy: function(a) {
        var b = a.elements;
        this.set(b[0], b[3], b[6], b[1], b[4], b[7], b[2], b[5], b[8]);
        return this
    },
    multiplyVector3: function(a) {
        console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.");
        return a.applyMatrix3(this)
    },
    multiplyVector3Array: function(b) {
        console.warn("THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.");
        return this.applyToVector3Array(b)
    },
    applyToVector3Array: function() {
        var a = new THREE.Vector3();
        return function(g, f, e) {
            if (f === undefined) {
                f = 0
            }
            if (e === undefined) {
                e = g.length
            }
            for (var d = 0, c = f, b; d < e; d += 3, c += 3) {
                a.x = g[c];
                a.y = g[c + 1];
                a.z = g[c + 2];
                a.applyMatrix3(this);
                g[c] = a.x;
                g[c + 1] = a.y;
                g[c + 2] = a.z
            }
            return g
        }
    }(),
    multiplyScalar: function(a) {
        var b = this.elements;
        b[0] *= a;
        b[3] *= a;
        b[6] *= a;
        b[1] *= a;
        b[4] *= a;
        b[7] *= a;
        b[2] *= a;
        b[5] *= a;
        b[8] *= a;
        return this
    },
    determinant: function() {
        var j = this.elements;
        var s = j[0],
            r = j[1],
            q = j[2],
            p = j[3],
            o = j[4],
            n = j[5],
            m = j[6],
            l = j[7],
            k = j[8];
        return s * o * k - s * n * l - r * p * k + r * n * m + q * p * l - q * o * m
    },
    getInverse: function(b, a) {
        var d = b.elements;
        var f = this.elements;
        f[0] = d[10] * d[5] - d[6] * d[9];
        f[1] = -d[10] * d[1] + d[2] * d[9];
        f[2] = d[6] * d[1] - d[2] * d[5];
        f[3] = -d[10] * d[4] + d[6] * d[8];
        f[4] = d[10] * d[0] - d[2] * d[8];
        f[5] = -d[6] * d[0] + d[2] * d[4];
        f[6] = d[9] * d[4] - d[5] * d[8];
        f[7] = -d[9] * d[0] + d[1] * d[8];
        f[8] = d[5] * d[0] - d[1] * d[4];
        var c = d[0] * f[0] + d[1] * f[3] + d[2] * f[6];
        if (c === 0) {
            var e = "Matrix3.getInverse(): can't invert matrix, determinant is 0";
            if (a || false) {
                throw new Error(e)
            } else {
                console.warn(e)
            }
            this.identity();
            return this
        }
        this.multiplyScalar(1 / c);
        return this
    },
    transpose: function() {
        var b, a = this.elements;
        b = a[1];
        a[1] = a[3];
        a[3] = b;
        b = a[2];
        a[2] = a[6];
        a[6] = b;
        b = a[5];
        a[5] = a[7];
        a[7] = b;
        return this
    },
    flattenToArrayOffset: function(c, b) {
        var a = this.elements;
        c[b] = a[0];
        c[b + 1] = a[1];
        c[b + 2] = a[2];
        c[b + 3] = a[3];
        c[b + 4] = a[4];
        c[b + 5] = a[5];
        c[b + 6] = a[6];
        c[b + 7] = a[7];
        c[b + 8] = a[8];
        return c
    },
    getNormalMatrix: function(a) {
        this.getInverse(a).transpose();
        return this
    },
    transposeIntoArray: function(b) {
        var a = this.elements;
        b[0] = a[0];
        b[1] = a[3];
        b[2] = a[6];
        b[3] = a[1];
        b[4] = a[4];
        b[5] = a[7];
        b[6] = a[2];
        b[7] = a[5];
        b[8] = a[8];
        return this
    },
    fromArray: function(a) {
        this.elements.set(a);
        return this
    },
    toArray: function() {
        var a = this.elements;
        return [a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]]
    },
    clone: function() {
        return new THREE.Matrix3().fromArray(this.elements)
    }
};
THREE.Matrix4 = function() {
    this.elements = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);
    if (arguments.length > 0) {
        console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")
    }
};
THREE.Matrix4.prototype = {
    constructor: THREE.Matrix4,
    set: function(n, m, k, i, f, e, d, c, a, q, p, o, l, j, h, g) {
        var b = this.elements;
        b[0] = n;
        b[4] = m;
        b[8] = k;
        b[12] = i;
        b[1] = f;
        b[5] = e;
        b[9] = d;
        b[13] = c;
        b[2] = a;
        b[6] = q;
        b[10] = p;
        b[14] = o;
        b[3] = l;
        b[7] = j;
        b[11] = h;
        b[15] = g;
        return this
    },
    identity: function() {
        this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
        return this
    },
    copy: function(a) {
        this.elements.set(a.elements);
        return this
    },
    extractPosition: function(a) {
        console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().");
        return this.copyPosition(a)
    },
    copyPosition: function(a) {
        var c = this.elements;
        var b = a.elements;
        c[12] = b[12];
        c[13] = b[13];
        c[14] = b[14];
        return this
    },
    extractBasis: function(b, a, c) {
        var d = this.elements;
        b.set(d[0], d[1], d[2]);
        a.set(d[4], d[5], d[6]);
        c.set(d[8], d[9], d[10]);
        return this
    },
    makeBasis: function(b, a, c) {
        this.set(b.x, a.x, c.x, 0, b.y, a.y, c.y, 0, b.z, a.z, c.z, 0, 0, 0, 0, 1);
        return this
    },
    extractRotation: function() {
        var a = new THREE.Vector3();
        return function(b) {
            var g = this.elements;
            var f = b.elements;
            var e = 1 / a.set(f[0], f[1], f[2]).length();
            var d = 1 / a.set(f[4], f[5], f[6]).length();
            var c = 1 / a.set(f[8], f[9], f[10]).length();
            g[0] = f[0] * e;
            g[1] = f[1] * e;
            g[2] = f[2] * e;
            g[4] = f[4] * d;
            g[5] = f[5] * d;
            g[6] = f[6] * d;
            g[8] = f[8] * c;
            g[9] = f[9] * c;
            g[10] = f[10] * c;
            return this
        }
    }(),
    makeRotationFromEuler: function(o) {
        if (o instanceof THREE.Euler === false) {
            console.error("THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.")
        }
        var k = this.elements;
        var n = o.x,
            m = o.y,
            l = o.z;
        var G = Math.cos(n),
            F = Math.sin(n);
        var D = Math.cos(m),
            A = Math.sin(m);
        var t = Math.cos(l),
            r = Math.sin(l);
        if (o.order === "XYZ") {
            var v = G * t,
                s = G * r,
                h = F * t,
                g = F * r;
            k[0] = D * t;
            k[4] = -D * r;
            k[8] = A;
            k[1] = s + h * A;
            k[5] = v - g * A;
            k[9] = -F * D;
            k[2] = g - v * A;
            k[6] = h + s * A;
            k[10] = G * D
        } else {
            if (o.order === "YXZ") {
                var q = D * t,
                    p = D * r,
                    C = A * t,
                    u = A * r;
                k[0] = q + u * F;
                k[4] = C * F - p;
                k[8] = G * A;
                k[1] = G * r;
                k[5] = G * t;
                k[9] = -F;
                k[2] = p * F - C;
                k[6] = u + q * F;
                k[10] = G * D
            } else {
                if (o.order === "ZXY") {
                    var q = D * t,
                        p = D * r,
                        C = A * t,
                        u = A * r;
                    k[0] = q - u * F;
                    k[4] = -G * r;
                    k[8] = C + p * F;
                    k[1] = p + C * F;
                    k[5] = G * t;
                    k[9] = u - q * F;
                    k[2] = -G * A;
                    k[6] = F;
                    k[10] = G * D
                } else {
                    if (o.order === "ZYX") {
                        var v = G * t,
                            s = G * r,
                            h = F * t,
                            g = F * r;
                        k[0] = D * t;
                        k[4] = h * A - s;
                        k[8] = v * A + g;
                        k[1] = D * r;
                        k[5] = g * A + v;
                        k[9] = s * A - h;
                        k[2] = -A;
                        k[6] = F * D;
                        k[10] = G * D
                    } else {
                        if (o.order === "YZX") {
                            var E = G * D,
                                B = G * A,
                                j = F * D,
                                i = F * A;
                            k[0] = D * t;
                            k[4] = i - E * r;
                            k[8] = j * r + B;
                            k[1] = r;
                            k[5] = G * t;
                            k[9] = -F * t;
                            k[2] = -A * t;
                            k[6] = B * r + j;
                            k[10] = E - i * r
                        } else {
                            if (o.order === "XZY") {
                                var E = G * D,
                                    B = G * A,
                                    j = F * D,
                                    i = F * A;
                                k[0] = D * t;
                                k[4] = -r;
                                k[8] = A * t;
                                k[1] = E * r + i;
                                k[5] = G * t;
                                k[9] = B * r - j;
                                k[2] = j * r - B;
                                k[6] = F * t;
                                k[10] = i * r + E
                            }
                        }
                    }
                }
            }
        }
        k[3] = 0;
        k[7] = 0;
        k[11] = 0;
        k[12] = 0;
        k[13] = 0;
        k[14] = 0;
        k[15] = 1;
        return this
    },
    setRotationFromQuaternion: function(a) {
        console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().");
        return this.makeRotationFromQuaternion(a)
    },
    makeRotationFromQuaternion: function(l) {
        var e = this.elements;
        var h = l.x,
            g = l.y,
            f = l.z,
            i = l.w;
        var n = h + h,
            a = g + g,
            j = f + f;
        var d = h * n,
            c = h * a,
            b = h * j;
        var m = g * a,
            k = g * j,
            r = f * j;
        var s = i * n,
            p = i * a,
            o = i * j;
        e[0] = 1 - (m + r);
        e[4] = c - o;
        e[8] = b + p;
        e[1] = c + o;
        e[5] = 1 - (d + r);
        e[9] = k - s;
        e[2] = b - p;
        e[6] = k + s;
        e[10] = 1 - (d + m);
        e[3] = 0;
        e[7] = 0;
        e[11] = 0;
        e[12] = 0;
        e[13] = 0;
        e[14] = 0;
        e[15] = 1;
        return this
    },
    lookAt: function() {
        var a = new THREE.Vector3();
        var c = new THREE.Vector3();
        var b = new THREE.Vector3();
        return function(e, f, d) {
            var g = this.elements;
            b.subVectors(e, f).normalize();
            if (b.length() === 0) {
                b.z = 1
            }
            a.crossVectors(d, b).normalize();
            if (a.length() === 0) {
                b.x += 0.0001;
                a.crossVectors(d, b).normalize()
            }
            c.crossVectors(b, a);
            g[0] = a.x;
            g[4] = c.x;
            g[8] = b.x;
            g[1] = a.y;
            g[5] = c.y;
            g[9] = b.y;
            g[2] = a.z;
            g[6] = c.z;
            g[10] = b.z;
            return this
        }
    }(),
    multiply: function(a, b) {
        if (b !== undefined) {
            console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.");
            return this.multiplyMatrices(a, b)
        }
        return this.multiplyMatrices(this, a)
    },
    multiplyMatrices: function(Q, P) {
        var s = Q.elements;
        var O = P.elements;
        var c = this.elements;
        var p = s[0],
            n = s[4],
            m = s[8],
            l = s[12];
        var N = s[1],
            M = s[5],
            L = s[9],
            K = s[13];
        var F = s[2],
            E = s[6],
            D = s[10],
            C = s[14];
        var t = s[3],
            r = s[7],
            q = s[11],
            o = s[15];
        var i = O[0],
            g = O[4],
            e = O[8],
            d = O[12];
        var J = O[1],
            I = O[5],
            H = O[9],
            G = O[13];
        var B = O[2],
            A = O[6],
            v = O[10],
            u = O[14];
        var k = O[3],
            j = O[7],
            h = O[11],
            f = O[15];
        c[0] = p * i + n * J + m * B + l * k;
        c[4] = p * g + n * I + m * A + l * j;
        c[8] = p * e + n * H + m * v + l * h;
        c[12] = p * d + n * G + m * u + l * f;
        c[1] = N * i + M * J + L * B + K * k;
        c[5] = N * g + M * I + L * A + K * j;
        c[9] = N * e + M * H + L * v + K * h;
        c[13] = N * d + M * G + L * u + K * f;
        c[2] = F * i + E * J + D * B + C * k;
        c[6] = F * g + E * I + D * A + C * j;
        c[10] = F * e + E * H + D * v + C * h;
        c[14] = F * d + E * G + D * u + C * f;
        c[3] = t * i + r * J + q * B + o * k;
        c[7] = t * g + r * I + q * A + o * j;
        c[11] = t * e + r * H + q * v + o * h;
        c[15] = t * d + r * G + q * u + o * f;
        return this
    },
    multiplyToArray: function(d, c, e) {
        var f = this.elements;
        this.multiplyMatrices(d, c);
        e[0] = f[0];
        e[1] = f[1];
        e[2] = f[2];
        e[3] = f[3];
        e[4] = f[4];
        e[5] = f[5];
        e[6] = f[6];
        e[7] = f[7];
        e[8] = f[8];
        e[9] = f[9];
        e[10] = f[10];
        e[11] = f[11];
        e[12] = f[12];
        e[13] = f[13];
        e[14] = f[14];
        e[15] = f[15];
        return this
    },
    multiplyScalar: function(a) {
        var b = this.elements;
        b[0] *= a;
        b[4] *= a;
        b[8] *= a;
        b[12] *= a;
        b[1] *= a;
        b[5] *= a;
        b[9] *= a;
        b[13] *= a;
        b[2] *= a;
        b[6] *= a;
        b[10] *= a;
        b[14] *= a;
        b[3] *= a;
        b[7] *= a;
        b[11] *= a;
        b[15] *= a;
        return this
    },
    multiplyVector3: function(a) {
        console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.");
        return a.applyProjection(this)
    },
    multiplyVector4: function(a) {
        console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.");
        return a.applyMatrix4(this)
    },
    multiplyVector3Array: function(b) {
        console.warn("THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.");
        return this.applyToVector3Array(b)
    },
    applyToVector3Array: function() {
        var a = new THREE.Vector3();
        return function(g, f, e) {
            if (f === undefined) {
                f = 0
            }
            if (e === undefined) {
                e = g.length
            }
            for (var d = 0, c = f, b; d < e; d += 3, c += 3) {
                a.x = g[c];
                a.y = g[c + 1];
                a.z = g[c + 2];
                a.applyMatrix4(this);
                g[c] = a.x;
                g[c + 1] = a.y;
                g[c + 2] = a.z
            }
            return g
        }
    }(),
    rotateAxis: function(a) {
        console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.");
        a.transformDirection(this)
    },
    crossVector: function(a) {
        console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.");
        return a.applyMatrix4(this)
    },
    determinant: function() {
        var c = this.elements;
        var n = c[0],
            m = c[4],
            k = c[8],
            i = c[12];
        var f = c[1],
            e = c[5],
            d = c[9],
            b = c[13];
        var a = c[2],
            q = c[6],
            p = c[10],
            o = c[14];
        var l = c[3],
            j = c[7],
            h = c[11],
            g = c[15];
        return (l * (+i * d * q - k * b * q - i * e * p + m * b * p + k * e * o - m * d * o) + j * (+n * d * o - n * b * p + i * f * p - k * f * o + k * b * a - i * d * a) + h * (+n * b * q - n * e * o - i * f * q + m * f * o + i * e * a - m * b * a) + g * (-k * e * a - n * d * q + n * e * p + k * f * q - m * f * p + m * d * a))
    },
    transpose: function() {
        var b = this.elements;
        var a;
        a = b[1];
        b[1] = b[4];
        b[4] = a;
        a = b[2];
        b[2] = b[8];
        b[8] = a;
        a = b[6];
        b[6] = b[9];
        b[9] = a;
        a = b[3];
        b[3] = b[12];
        b[12] = a;
        a = b[7];
        b[7] = b[13];
        b[13] = a;
        a = b[11];
        b[11] = b[14];
        b[14] = a;
        return this
    },
    flattenToArrayOffset: function(c, b) {
        var a = this.elements;
        c[b] = a[0];
        c[b + 1] = a[1];
        c[b + 2] = a[2];
        c[b + 3] = a[3];
        c[b + 4] = a[4];
        c[b + 5] = a[5];
        c[b + 6] = a[6];
        c[b + 7] = a[7];
        c[b + 8] = a[8];
        c[b + 9] = a[9];
        c[b + 10] = a[10];
        c[b + 11] = a[11];
        c[b + 12] = a[12];
        c[b + 13] = a[13];
        c[b + 14] = a[14];
        c[b + 15] = a[15];
        return c
    },
    getPosition: function() {
        var a = new THREE.Vector3();
        return function() {
            console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");
            var b = this.elements;
            return a.set(b[12], b[13], b[14])
        }
    }(),
    setPosition: function(a) {
        var b = this.elements;
        b[12] = a.x;
        b[13] = a.y;
        b[14] = a.z;
        return this
    },
    getInverse: function(r, h) {
        var g = this.elements;
        var A = r.elements;
        var p = A[0],
            n = A[4],
            k = A[8],
            i = A[12];
        var v = A[1],
            u = A[5],
            t = A[9],
            s = A[13];
        var d = A[2],
            c = A[6],
            b = A[10],
            a = A[14];
        var q = A[3],
            o = A[7],
            l = A[11],
            j = A[15];
        g[0] = t * a * o - s * b * o + s * c * l - u * a * l - t * c * j + u * b * j;
        g[4] = i * b * o - k * a * o - i * c * l + n * a * l + k * c * j - n * b * j;
        g[8] = k * s * o - i * t * o + i * u * l - n * s * l - k * u * j + n * t * j;
        g[12] = i * t * c - k * s * c - i * u * b + n * s * b + k * u * a - n * t * a;
        g[1] = s * b * q - t * a * q - s * d * l + v * a * l + t * d * j - v * b * j;
        g[5] = k * a * q - i * b * q + i * d * l - p * a * l - k * d * j + p * b * j;
        g[9] = i * t * q - k * s * q - i * v * l + p * s * l + k * v * j - p * t * j;
        g[13] = k * s * d - i * t * d + i * v * b - p * s * b - k * v * a + p * t * a;
        g[2] = u * a * q - s * c * q + s * d * o - v * a * o - u * d * j + v * c * j;
        g[6] = i * c * q - n * a * q - i * d * o + p * a * o + n * d * j - p * c * j;
        g[10] = n * s * q - i * u * q + i * v * o - p * s * o - n * v * j + p * u * j;
        g[14] = i * u * d - n * s * d - i * v * c + p * s * c + n * v * a - p * u * a;
        g[3] = t * c * q - u * b * q - t * d * o + v * b * o + u * d * l - v * c * l;
        g[7] = n * b * q - k * c * q + k * d * o - p * b * o - n * d * l + p * c * l;
        g[11] = k * u * q - n * t * q - k * v * o + p * t * o + n * v * l - p * u * l;
        g[15] = n * t * d - k * u * d + k * v * c - p * t * c - n * v * b + p * u * b;
        var e = p * g[0] + v * g[4] + d * g[8] + q * g[12];
        if (e == 0) {
            var f = "Matrix4.getInverse(): can't invert matrix, determinant is 0";
            if (h || false) {
                throw new Error(f)
            } else {
                console.warn(f)
            }
            this.identity();
            return this
        }
        this.multiplyScalar(1 / e);
        return this
    },
    translate: function(a) {
        console.warn("THREE.Matrix4: .translate() has been removed.")
    },
    rotateX: function(a) {
        console.warn("THREE.Matrix4: .rotateX() has been removed.")
    },
    rotateY: function(a) {
        console.warn("THREE.Matrix4: .rotateY() has been removed.")
    },
    rotateZ: function(a) {
        console.warn("THREE.Matrix4: .rotateZ() has been removed.")
    },
    rotateByAxis: function(a, b) {
        console.warn("THREE.Matrix4: .rotateByAxis() has been removed.")
    },
    scale: function(b) {
        var d = this.elements;
        var a = b.x,
            e = b.y,
            c = b.z;
        d[0] *= a;
        d[4] *= e;
        d[8] *= c;
        d[1] *= a;
        d[5] *= e;
        d[9] *= c;
        d[2] *= a;
        d[6] *= e;
        d[10] *= c;
        d[3] *= a;
        d[7] *= e;
        d[11] *= c;
        return this
    },
    getMaxScaleOnAxis: function() {
        var c = this.elements;
        var d = c[0] * c[0] + c[1] * c[1] + c[2] * c[2];
        var b = c[4] * c[4] + c[5] * c[5] + c[6] * c[6];
        var a = c[8] * c[8] + c[9] * c[9] + c[10] * c[10];
        return Math.sqrt(Math.max(d, Math.max(b, a)))
    },
    makeTranslation: function(a, c, b) {
        this.set(1, 0, 0, a, 0, 1, 0, c, 0, 0, 1, b, 0, 0, 0, 1);
        return this
    },
    makeRotationX: function(a) {
        var d = Math.cos(a),
            b = Math.sin(a);
        this.set(1, 0, 0, 0, 0, d, -b, 0, 0, b, d, 0, 0, 0, 0, 1);
        return this
    },
    makeRotationY: function(a) {
        var d = Math.cos(a),
            b = Math.sin(a);
        this.set(d, 0, b, 0, 0, 1, 0, 0, -b, 0, d, 0, 0, 0, 0, 1);
        return this
    },
    makeRotationZ: function(a) {
        var d = Math.cos(a),
            b = Math.sin(a);
        this.set(d, -b, 0, 0, b, d, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
        return this
    },
    makeRotationAxis: function(a, b) {
        var f = Math.cos(b);
        var k = Math.sin(b);
        var j = 1 - f;
        var i = a.x,
            h = a.y,
            g = a.z;
        var e = j * i,
            d = j * h;
        this.set(e * i + f, e * h - k * g, e * g + k * h, 0, e * h + k * g, d * h + f, d * g - k * i, 0, e * g - k * h, d * g + k * i, j * g * g + f, 0, 0, 0, 0, 1);
        return this
    },
    makeScale: function(a, c, b) {
        this.set(a, 0, 0, 0, 0, c, 0, 0, 0, 0, b, 0, 0, 0, 0, 1);
        return this
    },
    compose: function(a, b, c) {
        this.makeRotationFromQuaternion(b);
        this.scale(c);
        this.setPosition(a);
        return this
    },
    decompose: function() {
        var a = new THREE.Vector3();
        var b = new THREE.Matrix4();
        return function(i, h, g) {
            var f = this.elements;
            var m = a.set(f[0], f[1], f[2]).length();
            var l = a.set(f[4], f[5], f[6]).length();
            var k = a.set(f[8], f[9], f[10]).length();
            var j = this.determinant();
            if (j < 0) {
                m = -m
            }
            i.x = f[12];
            i.y = f[13];
            i.z = f[14];
            b.elements.set(this.elements);
            var e = 1 / m;
            var d = 1 / l;
            var c = 1 / k;
            b.elements[0] *= e;
            b.elements[1] *= e;
            b.elements[2] *= e;
            b.elements[4] *= d;
            b.elements[5] *= d;
            b.elements[6] *= d;
            b.elements[8] *= c;
            b.elements[9] *= c;
            b.elements[10] *= c;
            h.setFromRotationMatrix(b);
            g.x = m;
            g.y = l;
            g.z = k;
            return this
        }
    }(),
    makeFrustum: function(g, q, e, n, i, h) {
        var f = this.elements;
        var p = 2 * i / (q - g);
        var m = 2 * i / (n - e);
        var o = (q + g) / (q - g);
        var l = (n + e) / (n - e);
        var k = -(h + i) / (h - i);
        var j = -2 * h * i / (h - i);
        f[0] = p;
        f[4] = 0;
        f[8] = o;
        f[12] = 0;
        f[1] = 0;
        f[5] = m;
        f[9] = l;
        f[13] = 0;
        f[2] = 0;
        f[6] = 0;
        f[10] = k;
        f[14] = j;
        f[3] = 0;
        f[7] = 0;
        f[11] = -1;
        f[15] = 0;
        return this
    },
    makePerspective: function(e, c, g, b) {
        var a = g * Math.tan(THREE.Math.degToRad(e * 0.5));
        var f = -a;
        var h = f * c;
        var d = a * c;
        return this.makeFrustum(h, d, f, a, g, b)
    },
    makeOrthographic: function(d, n, k, a, g, f) {
        var c = this.elements;
        var m = n - d;
        var e = k - a;
        var b = f - g;
        var l = (n + d) / m;
        var j = (k + a) / e;
        var i = (f + g) / b;
        c[0] = 2 / m;
        c[4] = 0;
        c[8] = 0;
        c[12] = -l;
        c[1] = 0;
        c[5] = 2 / e;
        c[9] = 0;
        c[13] = -j;
        c[2] = 0;
        c[6] = 0;
        c[10] = -2 / b;
        c[14] = -i;
        c[3] = 0;
        c[7] = 0;
        c[11] = 0;
        c[15] = 1;
        return this
    },
    fromArray: function(a) {
        this.elements.set(a);
        return this
    },
    toArray: function() {
        var a = this.elements;
        return [a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]]
    },
    clone: function() {
        return new THREE.Matrix4().fromArray(this.elements)
    }
};
THREE.Ray = function(a, b) {
    this.origin = (a !== undefined) ? a : new THREE.Vector3();
    this.direction = (b !== undefined) ? b : new THREE.Vector3()
};
THREE.Ray.prototype = {
    constructor: THREE.Ray,
    set: function(a, b) {
        this.origin.copy(a);
        this.direction.copy(b);
        return this
    },
    copy: function(a) {
        this.origin.copy(a.origin);
        this.direction.copy(a.direction);
        return this
    },
    at: function(c, b) {
        var a = b || new THREE.Vector3();
        return a.copy(this.direction).multiplyScalar(c).add(this.origin)
    },
    recast: function() {
        var a = new THREE.Vector3();
        return function(b) {
            this.origin.copy(this.at(b, a));
            return this
        }
    }(),
    closestPointToPoint: function(b, c) {
        var a = c || new THREE.Vector3();
        a.subVectors(b, this.origin);
        var d = a.dot(this.direction);
        if (d < 0) {
            return a.copy(this.origin)
        }
        return a.copy(this.direction).multiplyScalar(d).add(this.origin)
    },
    distanceToPoint: function() {
        var a = new THREE.Vector3();
        return function(b) {
            var c = a.subVectors(b, this.origin).dot(this.direction);
            if (c < 0) {
                return this.origin.distanceTo(b)
            }
            a.copy(this.direction).multiplyScalar(c).add(this.origin);
            return a.distanceTo(b)
        }
    }(),
    distanceSqToSegment: function() {
        var b = new THREE.Vector3();
        var a = new THREE.Vector3();
        var c = new THREE.Vector3();
        return function(p, l, m, f) {
            b.copy(p).add(l).multiplyScalar(0.5);
            a.copy(l).sub(p).normalize();
            c.copy(this.origin).sub(b);
            var h = p.distanceTo(l) * 0.5;
            var d = -this.direction.dot(a);
            var n = c.dot(this.direction);
            var k = -c.dot(a);
            var j = c.lengthSq();
            var i = Math.abs(1 - d * d);
            var r, o, e, q;
            if (i > 0) {
                r = d * k - n;
                o = d * n - k;
                q = h * i;
                if (r >= 0) {
                    if (o >= -q) {
                        if (o <= q) {
                            var g = 1 / i;
                            r *= g;
                            o *= g;
                            e = r * (r + d * o + 2 * n) + o * (d * r + o + 2 * k) + j
                        } else {
                            o = h;
                            r = Math.max(0, -(d * o + n));
                            e = -r * r + o * (o + 2 * k) + j
                        }
                    } else {
                        o = -h;
                        r = Math.max(0, -(d * o + n));
                        e = -r * r + o * (o + 2 * k) + j
                    }
                } else {
                    if (o <= -q) {
                        r = Math.max(0, -(-d * h + n));
                        o = (r > 0) ? -h : Math.min(Math.max(-h, -k), h);
                        e = -r * r + o * (o + 2 * k) + j
                    } else {
                        if (o <= q) {
                            r = 0;
                            o = Math.min(Math.max(-h, -k), h);
                            e = o * (o + 2 * k) + j
                        } else {
                            r = Math.max(0, -(d * h + n));
                            o = (r > 0) ? h : Math.min(Math.max(-h, -k), h);
                            e = -r * r + o * (o + 2 * k) + j
                        }
                    }
                }
            } else {
                o = (d > 0) ? -h : h;
                r = Math.max(0, -(d * o + n));
                e = -r * r + o * (o + 2 * k) + j
            }
            if (m) {
                m.copy(this.direction).multiplyScalar(r).add(this.origin)
            }
            if (f) {
                f.copy(a).multiplyScalar(o).add(b)
            }
            return e
        }
    }(),
    isIntersectionSphere: function(a) {
        return this.distanceToPoint(a.center) <= a.radius
    },
    intersectSphere: function() {
        var a = new THREE.Vector3();
        return function(b, d) {
            a.subVectors(b.center, this.origin);
            var i = a.dot(this.direction);
            var f = a.dot(a) - i * i;
            var c = b.radius * b.radius;
            if (f > c) {
                return null
            }
            var h = Math.sqrt(c - f);
            var g = i - h;
            var e = i + h;
            if (g < 0 && e < 0) {
                return null
            }
            if (g < 0) {
                return this.at(e, d)
            }
            return this.at(g, d)
        }
    }(),
    isIntersectionPlane: function(a) {
        var b = a.distanceToPoint(this.origin);
        if (b === 0) {
            return true
        }
        var c = a.normal.dot(this.direction);
        if (c * b < 0) {
            return true
        }
        return false
    },
    distanceToPlane: function(a) {
        var c = a.normal.dot(this.direction);
        if (c == 0) {
            if (a.distanceToPoint(this.origin) == 0) {
                return 0
            }
            return null
        }
        var b = -(this.origin.dot(a.normal) + a.constant) / c;
        return b >= 0 ? b : null
    },
    intersectPlane: function(a, c) {
        var b = this.distanceToPlane(a);
        if (b === null) {
            return null
        }
        return this.at(b, c)
    },
    isIntersectionBox: function() {
        var a = new THREE.Vector3();
        return function(b) {
            return this.intersectBox(b, a) !== null
        }
    }(),
    intersectBox: function(f, l) {
        var c, g, i, a, h, k;
        var e = 1 / this.direction.x,
            d = 1 / this.direction.y,
            b = 1 / this.direction.z;
        var j = this.origin;
        if (e >= 0) {
            c = (f.min.x - j.x) * e;
            g = (f.max.x - j.x) * e
        } else {
            c = (f.max.x - j.x) * e;
            g = (f.min.x - j.x) * e
        }
        if (d >= 0) {
            i = (f.min.y - j.y) * d;
            a = (f.max.y - j.y) * d
        } else {
            i = (f.max.y - j.y) * d;
            a = (f.min.y - j.y) * d
        }
        if ((c > a) || (i > g)) {
            return null
        }
        if (i > c || c !== c) {
            c = i
        }
        if (a < g || g !== g) {
            g = a
        }
        if (b >= 0) {
            h = (f.min.z - j.z) * b;
            k = (f.max.z - j.z) * b
        } else {
            h = (f.max.z - j.z) * b;
            k = (f.min.z - j.z) * b
        }
        if ((c > k) || (h > g)) {
            return null
        }
        if (h > c || c !== c) {
            c = h
        }
        if (k < g || g !== g) {
            g = k
        }
        if (g < 0) {
            return null
        }
        return this.at(c >= 0 ? c : g, l)
    },
    intersectTriangle: function() {
        var d = new THREE.Vector3();
        var b = new THREE.Vector3();
        var a = new THREE.Vector3();
        var c = new THREE.Vector3();
        return function(m, k, j, e, n) {
            b.subVectors(k, m);
            a.subVectors(j, m);
            c.crossVectors(b, a);
            var i = this.direction.dot(c);
            var f;
            if (i > 0) {
                if (e) {
                    return null
                }
                f = 1
            } else {
                if (i < 0) {
                    f = -1;
                    i = -i
                } else {
                    return null
                }
            }
            d.subVectors(this.origin, m);
            var l = f * this.direction.dot(a.crossVectors(d, a));
            if (l < 0) {
                return null
            }
            var g = f * this.direction.dot(b.cross(d));
            if (g < 0) {
                return null
            }
            if (l + g > i) {
                return null
            }
            var h = -f * d.dot(c);
            if (h < 0) {
                return null
            }
            return this.at(h / i, n)
        }
    }(),
    applyMatrix4: function(a) {
        this.direction.add(this.origin).applyMatrix4(a);
        this.origin.applyMatrix4(a);
        this.direction.sub(this.origin);
        this.direction.normalize();
        return this
    },
    equals: function(a) {
        return a.origin.equals(this.origin) && a.direction.equals(this.direction)
    },
    clone: function() {
        return new THREE.Ray().copy(this)
    }
};
THREE.Sphere = function(b, a) {
    this.center = (b !== undefined) ? b : new THREE.Vector3();
    this.radius = (a !== undefined) ? a : 0
};
THREE.Sphere.prototype = {
    constructor: THREE.Sphere,
    set: function(b, a) {
        this.center.copy(b);
        this.radius = a;
        return this
    },
    setFromPoints: function() {
        var a = new THREE.Box3();
        return function(f, g) {
            var b = this.center;
            if (g !== undefined) {
                b.copy(g)
            } else {
                a.setFromPoints(f).center(b)
            }
            var c = 0;
            for (var e = 0, d = f.length; e < d; e++) {
                c = Math.max(c, b.distanceToSquared(f[e]))
            }
            this.radius = Math.sqrt(c);
            return this
        }
    }(),
    copy: function(a) {
        this.center.copy(a.center);
        this.radius = a.radius;
        return this
    },
    empty: function() {
        return (this.radius <= 0)
    },
    containsPoint: function(a) {
        return (a.distanceToSquared(this.center) <= (this.radius * this.radius))
    },
    distanceToPoint: function(a) {
        return (a.distanceTo(this.center) - this.radius)
    },
    intersectsSphere: function(a) {
        var b = this.radius + a.radius;
        return a.center.distanceToSquared(this.center) <= (b * b)
    },
    clampPoint: function(b, d) {
        var c = this.center.distanceToSquared(b);
        var a = d || new THREE.Vector3();
        a.copy(b);
        if (c > (this.radius * this.radius)) {
            a.sub(this.center).normalize();
            a.multiplyScalar(this.radius).add(this.center)
        }
        return a
    },
    getBoundingBox: function(a) {
        var b = a || new THREE.Box3();
        b.set(this.center, this.center);
        b.expandByScalar(this.radius);
        return b
    },
    applyMatrix4: function(a) {
        this.center.applyMatrix4(a);
        this.radius = this.radius * a.getMaxScaleOnAxis();
        return this
    },
    translate: function(a) {
        this.center.add(a);
        return this
    },
    equals: function(a) {
        return a.center.equals(this.center) && (a.radius === this.radius)
    },
    clone: function() {
        return new THREE.Sphere().copy(this)
    }
};
THREE.Frustum = function(f, e, d, c, b, a) {
    this.planes = [(f !== undefined) ? f : new THREE.Plane(), (e !== undefined) ? e : new THREE.Plane(), (d !== undefined) ? d : new THREE.Plane(), (c !== undefined) ? c : new THREE.Plane(), (b !== undefined) ? b : new THREE.Plane(), (a !== undefined) ? a : new THREE.Plane()]
};
THREE.Frustum.prototype = {
    constructor: THREE.Frustum,
    set: function(g, f, e, d, c, b) {
        var a = this.planes;
        a[0].copy(g);
        a[1].copy(f);
        a[2].copy(e);
        a[3].copy(d);
        a[4].copy(c);
        a[5].copy(b);
        return this
    },
    copy: function(c) {
        var a = this.planes;
        for (var b = 0; b < 6; b++) {
            a[b].copy(c.planes[b])
        }
        return this
    },
    setFromMatrix: function(o) {
        var h = this.planes;
        var t = o.elements;
        var l = t[0],
            j = t[1],
            i = t[2],
            g = t[3];
        var f = t[4],
            e = t[5],
            d = t[6],
            c = t[7];
        var b = t[8],
            a = t[9],
            s = t[10],
            r = t[11];
        var q = t[12],
            p = t[13],
            n = t[14],
            k = t[15];
        h[0].setComponents(g - l, c - f, r - b, k - q).normalize();
        h[1].setComponents(g + l, c + f, r + b, k + q).normalize();
        h[2].setComponents(g + j, c + e, r + a, k + p).normalize();
        h[3].setComponents(g - j, c - e, r - a, k - p).normalize();
        h[4].setComponents(g - i, c - d, r - s, k - n).normalize();
        h[5].setComponents(g + i, c + d, r + s, k + n).normalize();
        return this
    },
    intersectsObject: function() {
        var a = new THREE.Sphere();
        return function(b) {
            var c = b.geometry;
            if (c.boundingSphere === null) {
                c.computeBoundingSphere()
            }
            a.copy(c.boundingSphere);
            a.applyMatrix4(b.matrixWorld);
            return this.intersectsSphere(a)
        }
    }(),
    intersectsSphere: function(c) {
        var d = this.planes;
        var a = c.center;
        var b = -c.radius;
        for (var e = 0; e < 6; e++) {
            var f = d[e].distanceToPoint(a);
            if (f < b) {
                return false
            }
        }
        return true
    },
    intersectsBox: function() {
        var b = new THREE.Vector3(),
            a = new THREE.Vector3();
        return function(g) {
            var d = this.planes;
            for (var e = 0; e < 6; e++) {
                var c = d[e];
                b.x = c.normal.x > 0 ? g.min.x : g.max.x;
                a.x = c.normal.x > 0 ? g.max.x : g.min.x;
                b.y = c.normal.y > 0 ? g.min.y : g.max.y;
                a.y = c.normal.y > 0 ? g.max.y : g.min.y;
                b.z = c.normal.z > 0 ? g.min.z : g.max.z;
                a.z = c.normal.z > 0 ? g.max.z : g.min.z;
                var h = c.distanceToPoint(b);
                var f = c.distanceToPoint(a);
                if (h < 0 && f < 0) {
                    return false
                }
            }
            return true
        }
    }(),
    containsPoint: function(a) {
        var b = this.planes;
        for (var c = 0; c < 6; c++) {
            if (b[c].distanceToPoint(a) < 0) {
                return false
            }
        }
        return true
    },
    clone: function() {
        return new THREE.Frustum().copy(this)
    }
};
THREE.Plane = function(b, a) {
    this.normal = (b !== undefined) ? b : new THREE.Vector3(1, 0, 0);
    this.constant = (a !== undefined) ? a : 0
};
THREE.Plane.prototype = {
    constructor: THREE.Plane,
    set: function(b, a) {
        this.normal.copy(b);
        this.constant = a;
        return this
    },
    setComponents: function(a, d, c, b) {
        this.normal.set(a, d, c);
        this.constant = b;
        return this
    },
    setFromNormalAndCoplanarPoint: function(b, a) {
        this.normal.copy(b);
        this.constant = -a.dot(this.normal);
        return this
    },
    setFromCoplanarPoints: function() {
        var b = new THREE.Vector3();
        var a = new THREE.Vector3();
        return function(e, d, g) {
            var f = b.subVectors(g, d).cross(a.subVectors(e, d)).normalize();
            this.setFromNormalAndCoplanarPoint(f, e);
            return this
        }
    }(),
    copy: function(a) {
        this.normal.copy(a.normal);
        this.constant = a.constant;
        return this
    },
    normalize: function() {
        var a = 1 / this.normal.length();
        this.normal.multiplyScalar(a);
        this.constant *= a;
        return this
    },
    negate: function() {
        this.constant *= -1;
        this.normal.negate();
        return this
    },
    distanceToPoint: function(a) {
        return this.normal.dot(a) + this.constant
    },
    distanceToSphere: function(a) {
        return this.distanceToPoint(a.center) - a.radius
    },
    projectPoint: function(a, b) {
        return this.orthoPoint(a, b).sub(a).negate()
    },
    orthoPoint: function(b, d) {
        var c = this.distanceToPoint(b);
        var a = d || new THREE.Vector3();
        return a.copy(this.normal).multiplyScalar(c)
    },
    isIntersectionLine: function(a) {
        var c = this.distanceToPoint(a.start);
        var b = this.distanceToPoint(a.end);
        return (c < 0 && b > 0) || (b < 0 && c > 0)
    },
    intersectLine: function() {
        var a = new THREE.Vector3();
        return function(c, e) {
            var b = e || new THREE.Vector3();
            var f = c.delta(a);
            var g = this.normal.dot(f);
            if (g == 0) {
                if (this.distanceToPoint(c.start) == 0) {
                    return b.copy(c.start)
                }
                return undefined
            }
            var d = -(c.start.dot(this.normal) + this.constant) / g;
            if (d < 0 || d > 1) {
                return undefined
            }
            return b.copy(f).multiplyScalar(d).add(c.start)
        }
    }(),
    coplanarPoint: function(b) {
        var a = b || new THREE.Vector3();
        return a.copy(this.normal).multiplyScalar(-this.constant)
    },
    applyMatrix4: function() {
        var c = new THREE.Vector3();
        var b = new THREE.Vector3();
        var a = new THREE.Matrix3();
        return function(e, f) {
            var h = f || a.getNormalMatrix(e);
            var g = c.copy(this.normal).applyMatrix3(h);
            var d = this.coplanarPoint(b);
            d.applyMatrix4(e);
            this.setFromNormalAndCoplanarPoint(g, d);
            return this
        }
    }(),
    translate: function(a) {
        this.constant = this.constant - a.dot(this.normal);
        return this
    },
    equals: function(a) {
        return a.normal.equals(this.normal) && (a.constant == this.constant)
    },
    clone: function() {
        return new THREE.Plane().copy(this)
    }
};
THREE.Math = {
    generateUUID: function() {
        var d = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split("");
        var b = new Array(36);
        var a = 0,
            c;
        return function() {
            for (var e = 0; e < 36; e++) {
                if (e == 8 || e == 13 || e == 18 || e == 23) {
                    b[e] = "-"
                } else {
                    if (e == 14) {
                        b[e] = "4"
                    } else {
                        if (a <= 2) {
                            a = 33554432 + (Math.random() * 16777216) | 0
                        }
                        c = a & 15;
                        a = a >> 4;
                        b[e] = d[(e == 19) ? (c & 3) | 8 : c]
                    }
                }
            }
            return b.join("")
        }
    }(),
    clamp: function(d, e, c) {
        return (d < e) ? e : ((d > c) ? c : d)
    },
    clampBottom: function(b, c) {
        return b < c ? c : b
    },
    mapLinear: function(b, c, a, e, d) {
        return e + (b - c) * (d - e) / (a - c)
    },
    smoothstep: function(b, c, a) {
        if (b <= c) {
            return 0
        }
        if (b >= a) {
            return 1
        }
        b = (b - c) / (a - c);
        return b * b * (3 - 2 * b)
    },
    smootherstep: function(b, c, a) {
        if (b <= c) {
            return 0
        }
        if (b >= a) {
            return 1
        }
        b = (b - c) / (a - c);
        return b * b * b * (b * (b * 6 - 15) + 10)
    },
    random16: function() {
        return (65280 * Math.random() + 255 * Math.random()) / 65535
    },
    randInt: function(a, b) {
        return Math.floor(this.randFloat(a, b))
    },
    randFloat: function(a, b) {
        return a + Math.random() * (b - a)
    },
    randFloatSpread: function(a) {
        return a * (0.5 - Math.random())
    },
    degToRad: function() {
        var a = Math.PI / 180;
        return function(b) {
            return b * a
        }
    }(),
    radToDeg: function() {
        var a = 180 / Math.PI;
        return function(b) {
            return b * a
        }
    }(),
    isPowerOfTwo: function(a) {
        return (a & (a - 1)) === 0 && a !== 0
    }
};
THREE.Spline = function(n) {
    this.points = n;
    var h = [],
        j = {
            x: 0,
            y: 0,
            z: 0
        },
        m, a, e, d, b, l, k, i, g;
    this.initFromArray = function(c) {
        this.points = [];
        for (var o = 0; o < c.length; o++) {
            this.points[o] = {
                x: c[o][0],
                y: c[o][1],
                z: c[o][2]
            }
        }
    };
    this.getPoint = function(c) {
        m = (this.points.length - 1) * c;
        a = Math.floor(m);
        e = m - a;
        h[0] = a === 0 ? a : a - 1;
        h[1] = a;
        h[2] = a > this.points.length - 2 ? this.points.length - 1 : a + 1;
        h[3] = a > this.points.length - 3 ? this.points.length - 1 : a + 2;
        l = this.points[h[0]];
        k = this.points[h[1]];
        i = this.points[h[2]];
        g = this.points[h[3]];
        d = e * e;
        b = e * d;
        j.x = f(l.x, k.x, i.x, g.x, e, d, b);
        j.y = f(l.y, k.y, i.y, g.y, e, d, b);
        j.z = f(l.z, k.z, i.z, g.z, e, d, b);
        return j
    };
    this.getControlPointsArray = function() {
        var o, r, c = this.points.length,
            q = [];
        for (o = 0; o < c; o++) {
            r = this.points[o];
            q[o] = [r.x, r.y, r.z]
        }
        return q
    };
    this.getLength = function(p) {
        var r, t, u, s, B = 0,
            c = 0,
            q = 0,
            A = new THREE.Vector3(),
            o = new THREE.Vector3(),
            v = [],
            C = 0;
        v[0] = 0;
        if (!p) {
            p = 100
        }
        u = this.points.length * p;
        A.copy(this.points[0]);
        for (r = 1; r < u; r++) {
            t = r / u;
            s = this.getPoint(t);
            o.copy(s);
            C += o.distanceTo(A);
            A.copy(s);
            B = (this.points.length - 1) * t;
            c = Math.floor(B);
            if (c != q) {
                v[c] = C;
                q = c
            }
        }
        v[v.length] = C;
        return {
            chunks: v,
            total: C
        }
    };
    this.reparametrizeByArcLength = function(p) {
        var t, s, A, B, q, o, C, v, u, D = [],
            c = new THREE.Vector3(),
            r = this.getLength();
        D.push(c.copy(this.points[0]).clone());
        for (t = 1; t < this.points.length; t++) {
            C = r.chunks[t] - r.chunks[t - 1];
            v = Math.ceil(p * C / r.total);
            B = (t - 1) / (this.points.length - 1);
            q = t / (this.points.length - 1);
            for (s = 1; s < v - 1; s++) {
                A = B + s * (1 / v) * (q - B);
                u = this.getPoint(A);
                D.push(c.copy(u).clone())
            }
            D.push(c.copy(this.points[t]).clone())
        }
        this.points = D
    };

    function f(v, u, r, q, A, o, c) {
        var s = (r - v) * 0.5,
            p = (q - u) * 0.5;
        return (2 * (u - r) + s + p) * c + (-3 * (u - r) - 2 * s - p) * o + s * A + u
    }
};
THREE.Triangle = function(e, d, f) {
    this.a = (e !== undefined) ? e : new THREE.Vector3();
    this.b = (d !== undefined) ? d : new THREE.Vector3();
    this.c = (f !== undefined) ? f : new THREE.Vector3()
};
THREE.Triangle.normal = function() {
    var a = new THREE.Vector3();
    return function(g, e, i, h) {
        var d = h || new THREE.Vector3();
        d.subVectors(i, e);
        a.subVectors(g, e);
        d.cross(a);
        var f = d.lengthSq();
        if (f > 0) {
            return d.multiplyScalar(1 / Math.sqrt(f))
        }
        return d.set(0, 0, 0)
    }
}();
THREE.Triangle.barycoordFromPoint = function() {
    var a = new THREE.Vector3();
    var c = new THREE.Vector3();
    var b = new THREE.Vector3();
    return function(n, m, k, h, r) {
        a.subVectors(h, m);
        c.subVectors(k, m);
        b.subVectors(n, m);
        var l = a.dot(a);
        var j = a.dot(c);
        var i = a.dot(b);
        var f = c.dot(c);
        var d = c.dot(b);
        var g = (l * f - j * j);
        var q = r || new THREE.Vector3();
        if (g == 0) {
            return q.set(-2, -1, -1)
        }
        var e = 1 / g;
        var p = (f * i - j * d) * e;
        var o = (l * d - j * i) * e;
        return q.set(1 - p - o, o, p)
    }
}();
THREE.Triangle.containsPoint = function() {
    var a = new THREE.Vector3();
    return function(f, g, e, h) {
        var d = THREE.Triangle.barycoordFromPoint(f, g, e, h, a);
        return (d.x >= 0) && (d.y >= 0) && ((d.x + d.y) <= 1)
    }
}();
THREE.Triangle.prototype = {
    constructor: THREE.Triangle,
    set: function(e, d, f) {
        this.a.copy(e);
        this.b.copy(d);
        this.c.copy(f);
        return this
    },
    setFromPointsAndIndices: function(b, d, c, a) {
        this.a.copy(b[d]);
        this.b.copy(b[c]);
        this.c.copy(b[a]);
        return this
    },
    copy: function(a) {
        this.a.copy(a.a);
        this.b.copy(a.b);
        this.c.copy(a.c);
        return this
    },
    area: function() {
        var a = new THREE.Vector3();
        var b = new THREE.Vector3();
        return function() {
            a.subVectors(this.c, this.b);
            b.subVectors(this.a, this.b);
            return a.cross(b).length() * 0.5
        }
    }(),
    midpoint: function(b) {
        var a = b || new THREE.Vector3();
        return a.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3)
    },
    normal: function(a) {
        return THREE.Triangle.normal(this.a, this.b, this.c, a)
    },
    plane: function(b) {
        var a = b || new THREE.Plane();
        return a.setFromCoplanarPoints(this.a, this.b, this.c)
    },
    barycoordFromPoint: function(a, b) {
        return THREE.Triangle.barycoordFromPoint(a, this.a, this.b, this.c, b)
    },
    containsPoint: function(a) {
        return THREE.Triangle.containsPoint(a, this.a, this.b, this.c)
    },
    equals: function(a) {
        return a.a.equals(this.a) && a.b.equals(this.b) && a.c.equals(this.c)
    },
    clone: function() {
        return new THREE.Triangle().copy(this)
    }
};
THREE.Clock = function(a) {
    this.autoStart = (a !== undefined) ? a : true;
    this.startTime = 0;
    this.oldTime = 0;
    this.elapsedTime = 0;
    this.running = false
};
THREE.Clock.prototype = {
    constructor: THREE.Clock,
    start: function() {
        this.startTime = self.performance !== undefined && self.performance.now !== undefined ? self.performance.now() : Date.now();
        this.oldTime = this.startTime;
        this.running = true
    },
    stop: function() {
        this.getElapsedTime();
        this.running = false
    },
    getElapsedTime: function() {
        this.getDelta();
        return this.elapsedTime
    },
    getDelta: function() {
        var b = 0;
        if (this.autoStart && !this.running) {
            this.start()
        }
        if (this.running) {
            var a = self.performance !== undefined && self.performance.now !== undefined ? self.performance.now() : Date.now();
            b = 0.001 * (a - this.oldTime);
            this.oldTime = a;
            this.elapsedTime += b
        }
        return b
    }
};
THREE.EventDispatcher = function() {};
THREE.EventDispatcher.prototype = {
    constructor: THREE.EventDispatcher,
    apply: function(a) {
        a.addEventListener = THREE.EventDispatcher.prototype.addEventListener;
        a.hasEventListener = THREE.EventDispatcher.prototype.hasEventListener;
        a.removeEventListener = THREE.EventDispatcher.prototype.removeEventListener;
        a.dispatchEvent = THREE.EventDispatcher.prototype.dispatchEvent
    },
    addEventListener: function(b, c) {
        if (this._listeners === undefined) {
            this._listeners = {}
        }
        var a = this._listeners;
        if (a[b] === undefined) {
            a[b] = []
        }
        if (a[b].indexOf(c) === -1) {
            a[b].push(c)
        }
    },
    hasEventListener: function(b, c) {
        if (this._listeners === undefined) {
            return false
        }
        var a = this._listeners;
        if (a[b] !== undefined && a[b].indexOf(c) !== -1) {
            return true
        }
        return false
    },
    removeEventListener: function(d, e) {
        if (this._listeners === undefined) {
            return
        }
        var c = this._listeners;
        var a = c[d];
        if (a !== undefined) {
            var b = a.indexOf(e);
            if (b !== -1) {
                a.splice(b, 1)
            }
        }
    },
    dispatchEvent: function(e) {
        if (this._listeners === undefined) {
            return
        }
        var c = this._listeners;
        var a = c[e.type];
        if (a !== undefined) {
            e.target = this;
            var f = [];
            var d = a.length;
            for (var b = 0; b < d; b++) {
                f[b] = a[b]
            }
            for (var b = 0; b < d; b++) {
                f[b].call(this, e)
            }
        }
    }
};
(function(c) {
    c.Raycaster = function(e, g, f, d) {
        this.ray = new c.Ray(e, g);
        this.near = f || 0;
        this.far = d || Infinity;
        this.params = {
            Sprite: {},
            Mesh: {},
            PointCloud: {
                threshold: 1
            },
            LOD: {},
            Line: {}
        }
    };
    var b = function(e, d) {
        return e.distance - d.distance
    };
    var a = function(g, e, k, f) {
        g.raycast(e, k);
        if (f === true) {
            var j = g.children;
            for (var h = 0, d = j.length; h < d; h++) {
                a(j[h], e, k, true)
            }
        }
    };
    c.Raycaster.prototype = {
        constructor: c.Raycaster,
        precision: 0.0001,
        linePrecision: 1,
        set: function(d, e) {
            this.ray.set(d, e)
        },
        setFromCamera: function(e, d) {
            if (d instanceof c.PerspectiveCamera) {
                this.ray.origin.copy(d.position);
                this.ray.direction.set(e.x, e.y, 0.5).unproject(d).sub(d.position).normalize()
            } else {
                if (d instanceof c.OrthographicCamera) {
                    this.ray.origin.set(e.x, e.y, -1).unproject(d);
                    this.ray.direction.set(0, 0, -1).transformDirection(d.matrixWorld)
                } else {
                    console.error("THREE.Raycaster: Unsupported camera type.")
                }
            }
        },
        intersectObject: function(e, d) {
            var f = [];
            a(e, this, f, d);
            f.sort(b);
            return f
        },
        intersectObjects: function(h, e) {
            var g = [];
            if (h instanceof Array === false) {
                return g
            }
            for (var f = 0, d = h.length; f < d; f++) {
                a(h[f], this, g, e)
            }
            g.sort(b);
            return g
        }
    }
}(THREE));
THREE.Object3D = function() {
    Object.defineProperty(this, "id", {
        value: THREE.Object3DIdCount++
    });
    this.uuid = THREE.Math.generateUUID();
    this.name = "";
    this.type = "Object3D";
    this.parent = undefined;
    this.children = [];
    this.up = THREE.Object3D.DefaultUp.clone();
    var d = this;
    var a = new THREE.Vector3();
    var c = new THREE.Euler();
    var f = new THREE.Quaternion();
    var g = new THREE.Vector3(1, 1, 1);
    var e = function() {
        f.setFromEuler(c, false)
    };
    var b = function() {
        c.setFromQuaternion(f, undefined, false)
    };
    c.onChange(e);
    f.onChange(b);
    Object.defineProperties(this, {
        position: {
            enumerable: true,
            value: a
        },
        rotation: {
            enumerable: true,
            value: c
        },
        quaternion: {
            enumerable: true,
            value: f
        },
        scale: {
            enumerable: true,
            value: g
        }
    });
    this.rotationAutoUpdate = true;
    this.matrix = new THREE.Matrix4();
    this.matrixWorld = new THREE.Matrix4();
    this.matrixAutoUpdate = true;
    this.matrixWorldNeedsUpdate = false;
    this.visible = true;
    this.castShadow = false;
    this.receiveShadow = false;
    this.frustumCulled = true;
    this.userData = {}
};
THREE.Object3D.DefaultUp = new THREE.Vector3(0, 1, 0);
THREE.Object3D.prototype = {
    constructor: THREE.Object3D,
    get eulerOrder() {
        console.warn("THREE.Object3D: .eulerOrder has been moved to .rotation.order.");
        return this.rotation.order
    },
    set eulerOrder(a) {
        console.warn("THREE.Object3D: .eulerOrder has been moved to .rotation.order.");
        this.rotation.order = a
    },
    get useQuaternion() {
        console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")
    },
    set useQuaternion(a) {
        console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")
    },
    applyMatrix: function(a) {
        this.matrix.multiplyMatrices(a, this.matrix);
        this.matrix.decompose(this.position, this.quaternion, this.scale)
    },
    setRotationFromAxisAngle: function(a, b) {
        this.quaternion.setFromAxisAngle(a, b)
    },
    setRotationFromEuler: function(a) {
        this.quaternion.setFromEuler(a, true)
    },
    setRotationFromMatrix: function(a) {
        this.quaternion.setFromRotationMatrix(a)
    },
    setRotationFromQuaternion: function(a) {
        this.quaternion.copy(a)
    },
    rotateOnAxis: function() {
        var a = new THREE.Quaternion();
        return function(b, c) {
            a.setFromAxisAngle(b, c);
            this.quaternion.multiply(a);
            return this
        }
    }(),
    rotateX: function() {
        var a = new THREE.Vector3(1, 0, 0);
        return function(b) {
            return this.rotateOnAxis(a, b)
        }
    }(),
    rotateY: function() {
        var a = new THREE.Vector3(0, 1, 0);
        return function(b) {
            return this.rotateOnAxis(a, b)
        }
    }(),
    rotateZ: function() {
        var a = new THREE.Vector3(0, 0, 1);
        return function(b) {
            return this.rotateOnAxis(a, b)
        }
    }(),
    translateOnAxis: function() {
        var a = new THREE.Vector3();
        return function(b, c) {
            a.copy(b).applyQuaternion(this.quaternion);
            this.position.add(a.multiplyScalar(c));
            return this
        }
    }(),
    translate: function(b, a) {
        console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.");
        return this.translateOnAxis(a, b)
    },
    translateX: function() {
        var a = new THREE.Vector3(1, 0, 0);
        return function(b) {
            return this.translateOnAxis(a, b)
        }
    }(),
    translateY: function() {
        var a = new THREE.Vector3(0, 1, 0);
        return function(b) {
            return this.translateOnAxis(a, b)
        }
    }(),
    translateZ: function() {
        var a = new THREE.Vector3(0, 0, 1);
        return function(b) {
            return this.translateOnAxis(a, b)
        }
    }(),
    localToWorld: function(a) {
        return a.applyMatrix4(this.matrixWorld)
    },
    worldToLocal: function() {
        var a = new THREE.Matrix4();
        return function(b) {
            return b.applyMatrix4(a.getInverse(this.matrixWorld))
        }
    }(),
    lookAt: function() {
        var a = new THREE.Matrix4();
        return function(b) {
            a.lookAt(b, this.position, this.up);
            this.quaternion.setFromRotationMatrix(a)
        }
    }(),
    add: function(a) {
        if (arguments.length > 1) {
            for (var b = 0; b < arguments.length; b++) {
                this.add(arguments[b])
            }
            return this
        }
        if (a === this) {
            console.error("THREE.Object3D.add:", a, "can't be added as a child of itself.");
            return this
        }
        if (a instanceof THREE.Object3D) {
            if (a.parent !== undefined) {
                a.parent.remove(a)
            }
            a.parent = this;
            a.dispatchEvent({
                type: "added"
            });
            this.children.push(a)
        } else {
            console.error("THREE.Object3D.add:", a, "is not an instance of THREE.Object3D.")
        }
        return this
    },
    remove: function(b) {
        if (arguments.length > 1) {
            for (var c = 0; c < arguments.length; c++) {
                this.remove(arguments[c])
            }
        }
        var a = this.children.indexOf(b);
        if (a !== -1) {
            b.parent = undefined;
            b.dispatchEvent({
                type: "removed"
            });
            this.children.splice(a, 1)
        }
    },
    getChildByName: function(b, a) {
        console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().");
        return this.getObjectByName(b, a)
    },
    getObjectById: function(b, a) {
        return this.getObjectByProperty("id", b, a)
    },
    getObjectByName: function(b, a) {
        return this.getObjectByProperty("name", b, a)
    },
    getObjectByProperty: function(d, f, c) {
        if (this[d] === f) {
            return this
        }
        for (var e = 0, a = this.children.length; e < a; e++) {
            var g = this.children[e];
            var b = g.getObjectByProperty(d, f, c);
            if (b !== undefined) {
                return b
            }
        }
        return undefined
    },
    getWorldPosition: function(b) {
        var a = b || new THREE.Vector3();
        this.updateMatrixWorld(true);
        return a.setFromMatrixPosition(this.matrixWorld)
    },
    getWorldQuaternion: function() {
        var a = new THREE.Vector3();
        var b = new THREE.Vector3();
        return function(d) {
            var c = d || new THREE.Quaternion();
            this.updateMatrixWorld(true);
            this.matrixWorld.decompose(a, c, b);
            return c
        }
    }(),
    getWorldRotation: function() {
        var a = new THREE.Quaternion();
        return function(c) {
            var b = c || new THREE.Euler();
            this.getWorldQuaternion(a);
            return b.setFromQuaternion(a, this.rotation.order, false)
        }
    }(),
    getWorldScale: function() {
        var a = new THREE.Vector3();
        var b = new THREE.Quaternion();
        return function(d) {
            var c = d || new THREE.Vector3();
            this.updateMatrixWorld(true);
            this.matrixWorld.decompose(a, b, c);
            return c
        }
    }(),
    getWorldDirection: function() {
        var a = new THREE.Quaternion();
        return function(c) {
            var b = c || new THREE.Vector3();
            this.getWorldQuaternion(a);
            return b.set(0, 0, 1).applyQuaternion(a)
        }
    }(),
    raycast: function() {},
    traverse: function(c) {
        c(this);
        for (var b = 0, a = this.children.length; b < a; b++) {
            this.children[b].traverse(c)
        }
    },
    traverseVisible: function(c) {
        if (this.visible === false) {
            return
        }
        c(this);
        for (var b = 0, a = this.children.length; b < a; b++) {
            this.children[b].traverseVisible(c)
        }
    },
    traverseAncestors: function(a) {
        if (this.parent) {
            a(this.parent);
            this.parent.traverseAncestors(a)
        }
    },
    updateMatrix: function() {
        this.matrix.compose(this.position, this.quaternion, this.scale);
        this.matrixWorldNeedsUpdate = true
    },
    updateMatrixWorld: function(c) {
        if (this.matrixAutoUpdate === true) {
            this.updateMatrix()
        }
        if (this.matrixWorldNeedsUpdate === true || c === true) {
            if (this.parent === undefined) {
                this.matrixWorld.copy(this.matrix)
            } else {
                this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix)
            }
            this.matrixWorldNeedsUpdate = false;
            c = true
        }
        for (var b = 0, a = this.children.length; b < a; b++) {
            this.children[b].updateMatrixWorld(c)
        }
    },
    toJSON: function() {
        var d = {
            metadata: {
                version: 4.3,
                type: "Object",
                generator: "ObjectExporter"
            }
        };
        var e = {};
        var f = function(h) {
            if (d.geometries === undefined) {
                d.geometries = []
            }
            if (e[h.uuid] === undefined) {
                var g = h.toJSON();
                delete g.metadata;
                e[h.uuid] = g;
                d.geometries.push(g)
            }
            return h.uuid
        };
        var c = {};
        var a = function(h) {
            if (d.materials === undefined) {
                d.materials = []
            }
            if (c[h.uuid] === undefined) {
                var g = h.toJSON();
                delete g.metadata;
                c[h.uuid] = g;
                d.materials.push(g)
            }
            return h.uuid
        };
        var b = function(g) {
            var j = {};
            j.uuid = g.uuid;
            j.type = g.type;
            if (g.name !== "") {
                j.name = g.name
            }
            if (JSON.stringify(g.userData) !== "{}") {
                j.userData = g.userData
            }
            if (g.visible !== true) {
                j.visible = g.visible
            }
            if (g instanceof THREE.PerspectiveCamera) {
                j.fov = g.fov;
                j.aspect = g.aspect;
                j.near = g.near;
                j.far = g.far
            } else {
                if (g instanceof THREE.OrthographicCamera) {
                    j.left = g.left;
                    j.right = g.right;
                    j.top = g.top;
                    j.bottom = g.bottom;
                    j.near = g.near;
                    j.far = g.far
                } else {
                    if (g instanceof THREE.AmbientLight) {
                        j.color = g.color.getHex()
                    } else {
                        if (g instanceof THREE.DirectionalLight) {
                            j.color = g.color.getHex();
                            j.intensity = g.intensity
                        } else {
                            if (g instanceof THREE.PointLight) {
                                j.color = g.color.getHex();
                                j.intensity = g.intensity;
                                j.distance = g.distance
                            } else {
                                if (g instanceof THREE.SpotLight) {
                                    j.color = g.color.getHex();
                                    j.intensity = g.intensity;
                                    j.distance = g.distance;
                                    j.angle = g.angle;
                                    j.exponent = g.exponent
                                } else {
                                    if (g instanceof THREE.HemisphereLight) {
                                        j.color = g.color.getHex();
                                        j.groundColor = g.groundColor.getHex()
                                    } else {
                                        if (g instanceof THREE.Mesh) {
                                            j.geometry = f(g.geometry);
                                            j.material = a(g.material)
                                        } else {
                                            if (g instanceof THREE.Line) {
                                                j.geometry = f(g.geometry);
                                                j.material = a(g.material)
                                            } else {
                                                if (g instanceof THREE.Sprite) {
                                                    j.material = a(g.material)
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            j.matrix = g.matrix.toArray();
            if (g.children.length > 0) {
                j.children = [];
                for (var h = 0; h < g.children.length; h++) {
                    j.children.push(b(g.children[h]))
                }
            }
            return j
        };
        d.object = b(this);
        return d
    },
    clone: function(b, a) {
        if (b === undefined) {
            b = new THREE.Object3D()
        }
        if (a === undefined) {
            a = true
        }
        b.name = this.name;
        b.up.copy(this.up);
        b.position.copy(this.position);
        b.quaternion.copy(this.quaternion);
        b.scale.copy(this.scale);
        b.rotationAutoUpdate = this.rotationAutoUpdate;
        b.matrix.copy(this.matrix);
        b.matrixWorld.copy(this.matrixWorld);
        b.matrixAutoUpdate = this.matrixAutoUpdate;
        b.matrixWorldNeedsUpdate = this.matrixWorldNeedsUpdate;
        b.visible = this.visible;
        b.castShadow = this.castShadow;
        b.receiveShadow = this.receiveShadow;
        b.frustumCulled = this.frustumCulled;
        b.userData = JSON.parse(JSON.stringify(this.userData));
        if (a === true) {
            for (var c = 0; c < this.children.length; c++) {
                var d = this.children[c];
                b.add(d.clone())
            }
        }
        return b
    }
};
THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype);
THREE.Object3DIdCount = 0;
THREE.Face3 = function(f, e, i, h, g, d) {
    this.a = f;
    this.b = e;
    this.c = i;
    this.normal = h instanceof THREE.Vector3 ? h : new THREE.Vector3();
    this.vertexNormals = h instanceof Array ? h : [];
    this.color = g instanceof THREE.Color ? g : new THREE.Color();
    this.vertexColors = g instanceof Array ? g : [];
    this.vertexTangents = [];
    this.materialIndex = d !== undefined ? d : 0
};
THREE.Face3.prototype = {
    constructor: THREE.Face3,
    clone: function() {
        var c = new THREE.Face3(this.a, this.b, this.c);
        c.normal.copy(this.normal);
        c.color.copy(this.color);
        c.materialIndex = this.materialIndex;
        for (var b = 0, a = this.vertexNormals.length; b < a; b++) {
            c.vertexNormals[b] = this.vertexNormals[b].clone()
        }
        for (var b = 0, a = this.vertexColors.length; b < a; b++) {
            c.vertexColors[b] = this.vertexColors[b].clone()
        }
        for (var b = 0, a = this.vertexTangents.length; b < a; b++) {
            c.vertexTangents[b] = this.vertexTangents[b].clone()
        }
        return c
    }
};
THREE.Face4 = function(g, f, k, j, i, h, e) {
    console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead.");
    return new THREE.Face3(g, f, k, i, h, e)
};
THREE.BufferAttribute = function(b, a) {
    this.array = b;
    this.itemSize = a;
    this.needsUpdate = false
};
THREE.BufferAttribute.prototype = {
    constructor: THREE.BufferAttribute,
    get length() {
        return this.array.length
    },
    copyAt: function(e, c, d) {
        e *= this.itemSize;
        d *= c.itemSize;
        for (var b = 0, a = this.itemSize; b < a; b++) {
            this.array[e + b] = c.array[d + b]
        }
    },
    set: function(a) {
        this.array.set(a);
        return this
    },
    setX: function(b, a) {
        this.array[b * this.itemSize] = a;
        return this
    },
    setY: function(a, b) {
        this.array[a * this.itemSize + 1] = b;
        return this
    },
    setZ: function(a, b) {
        this.array[a * this.itemSize + 2] = b;
        return this
    },
    setXY: function(b, a, c) {
        b *= this.itemSize;
        this.array[b] = a;
        this.array[b + 1] = c;
        return this
    },
    setXYZ: function(b, a, d, c) {
        b *= this.itemSize;
        this.array[b] = a;
        this.array[b + 1] = d;
        this.array[b + 2] = c;
        return this
    },
    setXYZW: function(c, a, e, d, b) {
        c *= this.itemSize;
        this.array[c] = a;
        this.array[c + 1] = e;
        this.array[c + 2] = d;
        this.array[c + 3] = b;
        return this
    },
    clone: function() {
        return new THREE.BufferAttribute(new this.array.constructor(this.array), this.itemSize)
    }
};
THREE.Int8Attribute = function(a, b) {
    console.warn("THREE.Int8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");
    return new THREE.BufferAttribute(a, b)
};
THREE.Uint8Attribute = function(a, b) {
    console.warn("THREE.Uint8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");
    return new THREE.BufferAttribute(a, b)
};
THREE.Uint8ClampedAttribute = function(a, b) {
    console.warn("THREE.Uint8ClampedAttribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");
    return new THREE.BufferAttribute(a, b)
};
THREE.Int16Attribute = function(a, b) {
    console.warn("THREE.Int16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");
    return new THREE.BufferAttribute(a, b)
};
THREE.Uint16Attribute = function(a, b) {
    console.warn("THREE.Uint16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");
    return new THREE.BufferAttribute(a, b)
};
THREE.Int32Attribute = function(a, b) {
    console.warn("THREE.Int32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");
    return new THREE.BufferAttribute(a, b)
};
THREE.Uint32Attribute = function(a, b) {
    console.warn("THREE.Uint32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");
    return new THREE.BufferAttribute(a, b)
};
THREE.Float32Attribute = function(a, b) {
    console.warn("THREE.Float32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");
    return new THREE.BufferAttribute(a, b)
};
THREE.Float64Attribute = function(a, b) {
    console.warn("THREE.Float64Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.");
    return new THREE.BufferAttribute(a, b)
};
THREE.BufferGeometry = function() {
    Object.defineProperty(this, "id", {
        value: THREE.GeometryIdCount++
    });
    this.uuid = THREE.Math.generateUUID();
    this.name = "";
    this.type = "BufferGeometry";
    this.attributes = {};
    this.attributesKeys = [];
    this.drawcalls = [];
    this.offsets = this.drawcalls;
    this.boundingBox = null;
    this.boundingSphere = null
};
THREE.BufferGeometry.prototype = {
    constructor: THREE.BufferGeometry,
    addAttribute: function(a, b) {
        if (b instanceof THREE.BufferAttribute === false) {
            console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).");
            this.attributes[a] = {
                array: arguments[1],
                itemSize: arguments[2]
            };
            return
        }
        this.attributes[a] = b;
        this.attributesKeys = Object.keys(this.attributes)
    },
    getAttribute: function(a) {
        return this.attributes[a]
    },
    addDrawCall: function(c, a, b) {
        this.drawcalls.push({
            start: c,
            count: a,
            index: b !== undefined ? b : 0
        })
    },
    applyMatrix: function(b) {
        var a = this.attributes.position;
        if (a !== undefined) {
            b.applyToVector3Array(a.array);
            a.needsUpdate = true
        }
        var c = this.attributes.normal;
        if (c !== undefined) {
            var d = new THREE.Matrix3().getNormalMatrix(b);
            d.applyToVector3Array(c.array);
            c.needsUpdate = true
        }
    },
    center: function() {},
    fromGeometry: function(f, F) {
        F = F || {
            vertexColors: THREE.NoColors
        };
        var g = f.vertices;
        var e = f.faces;
        var E = f.faceVertexUvs;
        var s = F.vertexColors;
        var d = E[0].length > 0;
        var M = e[0].vertexNormals.length == 3;
        var k = new Float32Array(e.length * 3 * 3);
        this.addAttribute("position", new THREE.BufferAttribute(k, 3));
        var q = new Float32Array(e.length * 3 * 3);
        this.addAttribute("normal", new THREE.BufferAttribute(q, 3));
        if (s !== THREE.NoColors) {
            var o = new Float32Array(e.length * 3 * 3);
            this.addAttribute("color", new THREE.BufferAttribute(o, 3))
        }
        if (d === true) {
            var p = new Float32Array(e.length * 3 * 2);
            this.addAttribute("uv", new THREE.BufferAttribute(p, 2))
        }
        for (var A = 0, v = 0, u = 0; A < e.length; A++, v += 6, u += 9) {
            var m = e[A];
            var L = g[m.a];
            var K = g[m.b];
            var I = g[m.c];
            k[u] = L.x;
            k[u + 1] = L.y;
            k[u + 2] = L.z;
            k[u + 3] = K.x;
            k[u + 4] = K.y;
            k[u + 5] = K.z;
            k[u + 6] = I.x;
            k[u + 7] = I.y;
            k[u + 8] = I.z;
            if (M === true) {
                var l = m.vertexNormals[0];
                var j = m.vertexNormals[1];
                var h = m.vertexNormals[2];
                q[u] = l.x;
                q[u + 1] = l.y;
                q[u + 2] = l.z;
                q[u + 3] = j.x;
                q[u + 4] = j.y;
                q[u + 5] = j.z;
                q[u + 6] = h.x;
                q[u + 7] = h.y;
                q[u + 8] = h.z
            } else {
                var t = m.normal;
                q[u] = t.x;
                q[u + 1] = t.y;
                q[u + 2] = t.z;
                q[u + 3] = t.x;
                q[u + 4] = t.y;
                q[u + 5] = t.z;
                q[u + 6] = t.x;
                q[u + 7] = t.y;
                q[u + 8] = t.z
            }
            if (s === THREE.FaceColors) {
                var r = m.color;
                o[u] = r.r;
                o[u + 1] = r.g;
                o[u + 2] = r.b;
                o[u + 3] = r.r;
                o[u + 4] = r.g;
                o[u + 5] = r.b;
                o[u + 6] = r.r;
                o[u + 7] = r.g;
                o[u + 8] = r.b
            } else {
                if (s === THREE.VertexColors) {
                    var J = m.vertexColors[0];
                    var H = m.vertexColors[1];
                    var G = m.vertexColors[2];
                    o[u] = J.r;
                    o[u + 1] = J.g;
                    o[u + 2] = J.b;
                    o[u + 3] = H.r;
                    o[u + 4] = H.g;
                    o[u + 5] = H.b;
                    o[u + 6] = G.r;
                    o[u + 7] = G.g;
                    o[u + 8] = G.b
                }
            }
            if (d === true) {
                var D = E[0][A][0];
                var C = E[0][A][1];
                var B = E[0][A][2];
                p[v] = D.x;
                p[v + 1] = D.y;
                p[v + 2] = C.x;
                p[v + 3] = C.y;
                p[v + 4] = B.x;
                p[v + 5] = B.y
            }
        }
        this.computeBoundingSphere();
        return this
    },
    computeBoundingBox: function() {
        var a = new THREE.Vector3();
        return function() {
            if (this.boundingBox === null) {
                this.boundingBox = new THREE.Box3()
            }
            var b = this.attributes.position.array;
            if (b) {
                var e = this.boundingBox;
                e.makeEmpty();
                for (var d = 0, c = b.length; d < c; d += 3) {
                    a.set(b[d], b[d + 1], b[d + 2]);
                    e.expandByPoint(a)
                }
            }
            if (b === undefined || b.length === 0) {
                this.boundingBox.min.set(0, 0, 0);
                this.boundingBox.max.set(0, 0, 0)
            }
            if (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) {
                console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.')
            }
        }
    }(),
    computeBoundingSphere: function() {
        var b = new THREE.Box3();
        var a = new THREE.Vector3();
        return function() {
            if (this.boundingSphere === null) {
                this.boundingSphere = new THREE.Sphere()
            }
            var e = this.attributes.position.array;
            if (e) {
                b.makeEmpty();
                var c = this.boundingSphere.center;
                for (var g = 0, f = e.length; g < f; g += 3) {
                    a.set(e[g], e[g + 1], e[g + 2]);
                    b.expandByPoint(a)
                }
                b.center(c);
                var d = 0;
                for (var g = 0, f = e.length; g < f; g += 3) {
                    a.set(e[g], e[g + 1], e[g + 2]);
                    d = Math.max(d, c.distanceToSquared(a))
                }
                this.boundingSphere.radius = Math.sqrt(d);
                if (isNaN(this.boundingSphere.radius)) {
                    console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.')
                }
            }
        }
    }(),
    computeFaceNormals: function() {},
    computeVertexNormals: function() {
        var g = this.attributes;
        if (g.position) {
            var f = g.position.array;
            if (g.normal === undefined) {
                this.addAttribute("normal", new THREE.BufferAttribute(new Float32Array(f.length), 3))
            } else {
                var k = g.normal.array;
                for (var r = 0, h = k.length; r < h; r++) {
                    k[r] = 0
                }
            }
            var k = g.normal.array;
            var u, s, q, p = new THREE.Vector3(),
                n = new THREE.Vector3(),
                m = new THREE.Vector3(),
                l = new THREE.Vector3(),
                v = new THREE.Vector3();
            if (g.index) {
                var b = g.index.array;
                var c = (this.offsets.length > 0 ? this.offsets : [{
                    start: 0,
                    count: b.length,
                    index: 0
                }]);
                for (var o = 0, t = c.length; o < t; ++o) {
                    var a = c[o].start;
                    var e = c[o].count;
                    var d = c[o].index;
                    for (var r = a, h = a + e; r < h; r += 3) {
                        u = (d + b[r]) * 3;
                        s = (d + b[r + 1]) * 3;
                        q = (d + b[r + 2]) * 3;
                        p.fromArray(f, u);
                        n.fromArray(f, s);
                        m.fromArray(f, q);
                        l.subVectors(m, n);
                        v.subVectors(p, n);
                        l.cross(v);
                        k[u] += l.x;
                        k[u + 1] += l.y;
                        k[u + 2] += l.z;
                        k[s] += l.x;
                        k[s + 1] += l.y;
                        k[s + 2] += l.z;
                        k[q] += l.x;
                        k[q + 1] += l.y;
                        k[q + 2] += l.z
                    }
                }
            } else {
                for (var r = 0, h = f.length; r < h; r += 9) {
                    p.fromArray(f, r);
                    n.fromArray(f, r + 3);
                    m.fromArray(f, r + 6);
                    l.subVectors(m, n);
                    v.subVectors(p, n);
                    l.cross(v);
                    k[r] = l.x;
                    k[r + 1] = l.y;
                    k[r + 2] = l.z;
                    k[r + 3] = l.x;
                    k[r + 4] = l.y;
                    k[r + 5] = l.z;
                    k[r + 6] = l.x;
                    k[r + 7] = l.y;
                    k[r + 8] = l.z
                }
            }
            this.normalizeNormals();
            g.normal.needsUpdate = true
        }
    },
    computeTangents: function() {
        if (this.attributes.index === undefined || this.attributes.position === undefined || this.attributes.normal === undefined || this.attributes.uv === undefined) {
            console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");
            return
        }
        var d = this.attributes.index.array;
        var o = this.attributes.position.array;
        var u = this.attributes.normal.array;
        var L = this.attributes.uv.array;
        var s = o.length / 3;
        if (this.attributes.tangent === undefined) {
            this.addAttribute("tangent", new THREE.BufferAttribute(new Float32Array(4 * s), 4))
        }
        var B = this.attributes.tangent.array;
        var ad = [],
            ac = [];
        for (var V = 0; V < s; V++) {
            ad[V] = new THREE.Vector3();
            ac[V] = new THREE.Vector3()
        }
        var S = new THREE.Vector3(),
            P = new THREE.Vector3(),
            O = new THREE.Vector3(),
            l = new THREE.Vector2(),
            h = new THREE.Vector2(),
            g = new THREE.Vector2(),
            q, p, af, ae, J, I, aa, Z, H, G, Q;
        var e = new THREE.Vector3(),
            D = new THREE.Vector3();

        function K(j, i, k) {
            S.fromArray(o, j * 3);
            P.fromArray(o, i * 3);
            O.fromArray(o, k * 3);
            l.fromArray(L, j * 2);
            h.fromArray(L, i * 2);
            g.fromArray(L, k * 2);
            q = P.x - S.x;
            p = O.x - S.x;
            af = P.y - S.y;
            ae = O.y - S.y;
            J = P.z - S.z;
            I = O.z - S.z;
            aa = h.x - l.x;
            Z = g.x - l.x;
            H = h.y - l.y;
            G = g.y - l.y;
            Q = 1 / (aa * G - Z * H);
            e.set((G * q - H * p) * Q, (G * af - H * ae) * Q, (G * J - H * I) * Q);
            D.set((aa * p - Z * q) * Q, (aa * ae - Z * af) * Q, (aa * I - Z * J) * Q);
            ad[j].add(e);
            ad[i].add(e);
            ad[k].add(e);
            ac[j].add(D);
            ac[i].add(D);
            ac[k].add(D)
        }
        var X, E;
        var W, m;
        var c, b, a;
        if (this.drawcalls.length === 0) {
            this.addDrawCall(0, d.length, 0)
        }
        var ab = this.drawcalls;
        for (W = 0, m = ab.length; W < m; ++W) {
            var A = ab[W].start;
            var R = ab[W].count;
            var F = ab[W].index;
            for (X = A, E = A + R; X < E; X += 3) {
                c = F + d[X];
                b = F + d[X + 1];
                a = F + d[X + 2];
                K(c, b, a)
            }
        }
        var T = new THREE.Vector3(),
            Y = new THREE.Vector3();
        var U = new THREE.Vector3(),
            C = new THREE.Vector3();
        var M, N, f;

        function v(i) {
            U.fromArray(u, i * 3);
            C.copy(U);
            N = ad[i];
            T.copy(N);
            T.sub(U.multiplyScalar(U.dot(N))).normalize();
            Y.crossVectors(C, N);
            f = Y.dot(ac[i]);
            M = (f < 0) ? -1 : 1;
            B[i * 4] = T.x;
            B[i * 4 + 1] = T.y;
            B[i * 4 + 2] = T.z;
            B[i * 4 + 3] = M
        }
        for (W = 0, m = ab.length; W < m; ++W) {
            var A = ab[W].start;
            var R = ab[W].count;
            var F = ab[W].index;
            for (X = A, E = A + R; X < E; X += 3) {
                c = F + d[X];
                b = F + d[X + 1];
                a = F + d[X + 2];
                v(c);
                v(b);
                v(a)
            }
        }
    },
    computeOffsets: function(b) {
        var q = b;
        if (b === undefined) {
            q = 65535
        }
        var p = Date.now();
        var h = this.attributes.index.array;
        var l = this.attributes.position.array;
        var e = (l.length / 3);
        var o = (h.length / 3);
        var r = new Uint16Array(h.length);
        var a = 0;
        var d = 0;
        var k = [{
            start: 0,
            count: 0,
            index: 0
        }];
        var i = k[0];
        var c = 0;
        var g = 0;
        var u = new Int32Array(6);
        var F = new Int32Array(l.length);
        var E = new Int32Array(l.length);
        for (var A = 0; A < l.length; A++) {
            F[A] = -1;
            E[A] = -1
        }
        for (var B = 0; B < o; B++) {
            g = 0;
            for (var C = 0; C < 3; C++) {
                var D = h[B * 3 + C];
                if (F[D] == -1) {
                    u[C * 2] = D;
                    u[C * 2 + 1] = -1;
                    g++
                } else {
                    if (F[D] < i.index) {
                        u[C * 2] = D;
                        u[C * 2 + 1] = -1;
                        c++
                    } else {
                        u[C * 2] = D;
                        u[C * 2 + 1] = F[D]
                    }
                }
            }
            var m = d + g;
            if (m > (i.index + q)) {
                var t = {
                    start: a,
                    count: 0,
                    index: d
                };
                k.push(t);
                i = t;
                for (var n = 0; n < 6; n += 2) {
                    var f = u[n + 1];
                    if (f > -1 && f < i.index) {
                        u[n + 1] = -1
                    }
                }
            }
            for (var n = 0; n < 6; n += 2) {
                var D = u[n];
                var f = u[n + 1];
                if (f === -1) {
                    f = d++
                }
                F[D] = f;
                E[f] = D;
                r[a++] = f - i.index;
                i.count++
            }
        }
        this.reorderBuffers(r, E, d);
        this.offsets = k;
        return k
    },
    merge: function(l, f) {
        if (l instanceof THREE.BufferGeometry === false) {
            console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.", l);
            return
        }
        if (f === undefined) {
            f = 0
        }
        var g = this.attributes;
        for (var m in g) {
            if (l.attributes[m] === undefined) {
                continue
            }
            var d = g[m];
            var b = d.array;
            var c = l.attributes[m];
            var a = c.array;
            var k = c.itemSize;
            for (var h = 0, e = k * f; h < a.length; h++, e++) {
                b[e] = a[h]
            }
        }
        return this
    },
    normalizeNormals: function() {
        var d = this.attributes.normal.array;
        var a, g, e, f;
        for (var c = 0, b = d.length; c < b; c += 3) {
            a = d[c];
            g = d[c + 1];
            e = d[c + 2];
            f = 1 / Math.sqrt(a * a + g * g + e * e);
            d[c] *= f;
            d[c + 1] *= f;
            d[c + 2] *= f
        }
    },
    reorderBuffers: function(f, j, a) {
        var e = {};
        for (var i in this.attributes) {
            if (i == "index") {
                continue
            }
            var h = this.attributes[i].array;
            e[i] = new h.constructor(this.attributes[i].itemSize * a)
        }
        for (var b = 0; b < a; b++) {
            var l = j[b];
            for (var i in this.attributes) {
                if (i == "index") {
                    continue
                }
                var c = this.attributes[i].array;
                var g = this.attributes[i].itemSize;
                var m = e[i];
                for (var d = 0; d < g; d++) {
                    m[b * g + d] = c[l * g + d]
                }
            }
        }
        this.attributes.index.array = f;
        for (var i in this.attributes) {
            if (i == "index") {
                continue
            }
            this.attributes[i].array = e[i];
            this.attributes[i].numItems = this.attributes[i].itemSize * a
        }
    },
    toJSON: function() {
        var b = {
            metadata: {
                version: 4,
                type: "BufferGeometry",
                generator: "BufferGeometryExporter"
            },
            uuid: this.uuid,
            type: this.type,
            data: {
                attributes: {}
            }
        };
        var e = this.attributes;
        var d = this.offsets;
        var j = this.boundingSphere;
        for (var k in e) {
            var a = e[k];
            var g = [],
                h = a.array;
            for (var f = 0, c = h.length; f < c; f++) {
                g[f] = h[f]
            }
            b.data.attributes[k] = {
                itemSize: a.itemSize,
                type: a.array.constructor.name,
                array: g
            }
        }
        if (d.length > 0) {
            b.data.offsets = JSON.parse(JSON.stringify(d))
        }
        if (j !== null) {
            b.data.boundingSphere = {
                center: j.center.toArray(),
                radius: j.radius
            }
        }
        return b
    },
    clone: function() {
        var e = new THREE.BufferGeometry();
        for (var a in this.attributes) {
            var f = this.attributes[a];
            e.addAttribute(a, f.clone())
        }
        for (var c = 0, b = this.offsets.length; c < b; c++) {
            var d = this.offsets[c];
            e.offsets.push({
                start: d.start,
                index: d.index,
                count: d.count
            })
        }
        return e
    },
    dispose: function() {
        this.dispatchEvent({
            type: "dispose"
        })
    }
};
THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype);
THREE.Geometry = function() {
    Object.defineProperty(this, "id", {
        value: THREE.GeometryIdCount++
    });
    this.uuid = THREE.Math.generateUUID();
    this.name = "";
    this.type = "Geometry";
    this.vertices = [];
    this.colors = [];
    this.faces = [];
    this.faceVertexUvs = [
        []
    ];
    this.morphTargets = [];
    this.morphColors = [];
    this.morphNormals = [];
    this.skinWeights = [];
    this.skinIndices = [];
    this.lineDistances = [];
    this.boundingBox = null;
    this.boundingSphere = null;
    this.hasTangents = false;
    this.dynamic = true;
    this.verticesNeedUpdate = false;
    this.elementsNeedUpdate = false;
    this.uvsNeedUpdate = false;
    this.normalsNeedUpdate = false;
    this.tangentsNeedUpdate = false;
    this.colorsNeedUpdate = false;
    this.lineDistancesNeedUpdate = false;
    this.groupsNeedUpdate = false
};
THREE.Geometry.prototype = {
    constructor: THREE.Geometry,
    applyMatrix: function(b) {
        var h = new THREE.Matrix3().getNormalMatrix(b);
        for (var e = 0, a = this.vertices.length; e < a; e++) {
            var g = this.vertices[e];
            g.applyMatrix4(b)
        }
        for (var e = 0, a = this.faces.length; e < a; e++) {
            var f = this.faces[e];
            f.normal.applyMatrix3(h).normalize();
            for (var c = 0, d = f.vertexNormals.length; c < d; c++) {
                f.vertexNormals[c].applyMatrix3(h).normalize()
            }
        }
        if (this.boundingBox instanceof THREE.Box3) {
            this.computeBoundingBox()
        }
        if (this.boundingSphere instanceof THREE.Sphere) {
            this.computeBoundingSphere()
        }
    },
    fromBufferGeometry: function(k) {
        var o = this;
        var d = k.attributes;
        var g = d.position.array;
        var n = d.index !== undefined ? d.index.array : undefined;
        var l = d.normal !== undefined ? d.normal.array : undefined;
        var a = d.color !== undefined ? d.color.array : undefined;
        var c = d.uv !== undefined ? d.uv.array : undefined;
        var h = [];
        var m = [];
        for (var e = 0, b = 0; e < g.length; e += 3, b += 2) {
            o.vertices.push(new THREE.Vector3(g[e], g[e + 1], g[e + 2]));
            if (l !== undefined) {
                h.push(new THREE.Vector3(l[e], l[e + 1], l[e + 2]))
            }
            if (a !== undefined) {
                o.colors.push(new THREE.Color(a[e], a[e + 1], a[e + 2]))
            }
            if (c !== undefined) {
                m.push(new THREE.Vector2(c[b], c[b + 1]))
            }
        }
        var f = function(j, i, r) {
            var p = l !== undefined ? [h[j].clone(), h[i].clone(), h[r].clone()] : [];
            var q = a !== undefined ? [o.colors[j].clone(), o.colors[i].clone(), o.colors[r].clone()] : [];
            o.faces.push(new THREE.Face3(j, i, r, p, q));
            if (c !== undefined) {
                o.faceVertexUvs[0].push([m[j].clone(), m[i].clone(), m[r].clone()])
            }
        };
        if (n !== undefined) {
            for (var e = 0; e < n.length; e += 3) {
                f(n[e], n[e + 1], n[e + 2])
            }
        } else {
            for (var e = 0; e < g.length / 3; e += 3) {
                f(e, e + 1, e + 2)
            }
        }
        this.computeFaceNormals();
        if (k.boundingBox !== null) {
            this.boundingBox = k.boundingBox.clone()
        }
        if (k.boundingSphere !== null) {
            this.boundingSphere = k.boundingSphere.clone()
        }
        return this
    },
    center: function() {
        this.computeBoundingBox();
        var a = new THREE.Vector3();
        a.addVectors(this.boundingBox.min, this.boundingBox.max);
        a.multiplyScalar(-0.5);
        this.applyMatrix(new THREE.Matrix4().makeTranslation(a.x, a.y, a.z));
        this.computeBoundingBox();
        return a
    },
    computeFaceNormals: function() {
        var a = new THREE.Vector3(),
            i = new THREE.Vector3();
        for (var h = 0, g = this.faces.length; h < g; h++) {
            var e = this.faces[h];
            var d = this.vertices[e.a];
            var c = this.vertices[e.b];
            var b = this.vertices[e.c];
            a.subVectors(b, c);
            i.subVectors(d, c);
            a.cross(i);
            a.normalize();
            e.normal.copy(a)
        }
    },
    computeVertexNormals: function(g) {
        var m, d, h, l, k, j;
        j = new Array(this.vertices.length);
        for (m = 0, d = this.vertices.length; m < d; m++) {
            j[m] = new THREE.Vector3()
        }
        if (g) {
            var c, b, a, q;
            var e = new THREE.Vector3(),
                p = new THREE.Vector3(),
                o = new THREE.Vector3(),
                n = new THREE.Vector3(),
                i = new THREE.Vector3();
            for (h = 0, l = this.faces.length; h < l; h++) {
                k = this.faces[h];
                c = this.vertices[k.a];
                b = this.vertices[k.b];
                a = this.vertices[k.c];
                e.subVectors(a, b);
                p.subVectors(c, b);
                e.cross(p);
                j[k.a].add(e);
                j[k.b].add(e);
                j[k.c].add(e)
            }
        } else {
            for (h = 0, l = this.faces.length; h < l; h++) {
                k = this.faces[h];
                j[k.a].add(k.normal);
                j[k.b].add(k.normal);
                j[k.c].add(k.normal)
            }
        }
        for (m = 0, d = this.vertices.length; m < d; m++) {
            j[m].normalize()
        }
        for (h = 0, l = this.faces.length; h < l; h++) {
            k = this.faces[h];
            k.vertexNormals[0] = j[k.a].clone();
            k.vertexNormals[1] = j[k.b].clone();
            k.vertexNormals[2] = j[k.c].clone()
        }
    },
    computeMorphNormals: function() {
        var e, l, g, m, h;
        for (g = 0, m = this.faces.length; g < m; g++) {
            h = this.faces[g];
            if (!h.__originalFaceNormal) {
                h.__originalFaceNormal = h.normal.clone()
            } else {
                h.__originalFaceNormal.copy(h.normal)
            }
            if (!h.__originalVertexNormals) {
                h.__originalVertexNormals = []
            }
            for (e = 0, l = h.vertexNormals.length; e < l; e++) {
                if (!h.__originalVertexNormals[e]) {
                    h.__originalVertexNormals[e] = h.vertexNormals[e].clone()
                } else {
                    h.__originalVertexNormals[e].copy(h.vertexNormals[e])
                }
            }
        }
        var c = new THREE.Geometry();
        c.faces = this.faces;
        for (e = 0, l = this.morphTargets.length; e < l; e++) {
            if (!this.morphNormals[e]) {
                this.morphNormals[e] = {};
                this.morphNormals[e].faceNormals = [];
                this.morphNormals[e].vertexNormals = [];
                var d = this.morphNormals[e].faceNormals;
                var a = this.morphNormals[e].vertexNormals;
                var k, b;
                for (g = 0, m = this.faces.length; g < m; g++) {
                    k = new THREE.Vector3();
                    b = {
                        a: new THREE.Vector3(),
                        b: new THREE.Vector3(),
                        c: new THREE.Vector3()
                    };
                    d.push(k);
                    a.push(b)
                }
            }
            var j = this.morphNormals[e];
            c.vertices = this.morphTargets[e].vertices;
            c.computeFaceNormals();
            c.computeVertexNormals();
            var k, b;
            for (g = 0, m = this.faces.length; g < m; g++) {
                h = this.faces[g];
                k = j.faceNormals[g];
                b = j.vertexNormals[g];
                k.copy(h.normal);
                b.a.copy(h.vertexNormals[0]);
                b.b.copy(h.vertexNormals[1]);
                b.c.copy(h.vertexNormals[2])
            }
        }
        for (g = 0, m = this.faces.length; g < m; g++) {
            h = this.faces[g];
            h.normal = h.__originalFaceNormal;
            h.vertexNormals = h.__originalVertexNormals
        }
    },
    computeTangents: function() {
        var O, m, E, k, N, p, C, g, o, K, H, G, e, d, c, j, h, V, U, A, u, R, Q, s, q, I, F, b, T = [],
            S = [],
            a = new THREE.Vector3(),
            l = new THREE.Vector3(),
            L = new THREE.Vector3(),
            P = new THREE.Vector3(),
            M = new THREE.Vector3(),
            D;
        for (E = 0, k = this.vertices.length; E < k; E++) {
            T[E] = new THREE.Vector3();
            S[E] = new THREE.Vector3()
        }

        function B(v, i, f, W, t, r, n) {
            K = v.vertices[i];
            H = v.vertices[f];
            G = v.vertices[W];
            e = o[t];
            d = o[r];
            c = o[n];
            j = H.x - K.x;
            h = G.x - K.x;
            V = H.y - K.y;
            U = G.y - K.y;
            A = H.z - K.z;
            u = G.z - K.z;
            R = d.x - e.x;
            Q = c.x - e.x;
            s = d.y - e.y;
            q = c.y - e.y;
            I = 1 / (R * q - Q * s);
            a.set((q * j - s * h) * I, (q * V - s * U) * I, (q * A - s * u) * I);
            l.set((R * h - Q * j) * I, (R * U - Q * V) * I, (R * u - Q * A) * I);
            T[i].add(a);
            T[f].add(a);
            T[W].add(a);
            S[i].add(l);
            S[f].add(l);
            S[W].add(l)
        }
        for (O = 0, m = this.faces.length; O < m; O++) {
            g = this.faces[O];
            o = this.faceVertexUvs[0][O];
            B(this, g.a, g.b, g.c, 0, 1, 2)
        }
        var J = ["a", "b", "c", "d"];
        for (O = 0, m = this.faces.length; O < m; O++) {
            g = this.faces[O];
            for (N = 0; N < Math.min(g.vertexNormals.length, 3); N++) {
                M.copy(g.vertexNormals[N]);
                C = g[J[N]];
                F = T[C];
                L.copy(F);
                L.sub(M.multiplyScalar(M.dot(F))).normalize();
                P.crossVectors(g.vertexNormals[N], F);
                b = P.dot(S[C]);
                D = (b < 0) ? -1 : 1;
                g.vertexTangents[N] = new THREE.Vector4(L.x, L.y, L.z, D)
            }
        }
        this.hasTangents = true
    },
    computeLineDistances: function() {
        var e = 0;
        var b = this.vertices;
        for (var c = 0, a = b.length; c < a; c++) {
            if (c > 0) {
                e += b[c].distanceTo(b[c - 1])
            }
            this.lineDistances[c] = e
        }
    },
    computeBoundingBox: function() {
        if (this.boundingBox === null) {
            this.boundingBox = new THREE.Box3()
        }
        this.boundingBox.setFromPoints(this.vertices)
    },
    computeBoundingSphere: function() {
        if (this.boundingSphere === null) {
            this.boundingSphere = new THREE.Sphere()
        }
        this.boundingSphere.setFromPoints(this.vertices)
    },
    merge: function(f, s, E) {
        if (f instanceof THREE.Geometry === false) {
            console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.", f);
            return
        }
        var k, m = this.vertices.length,
            d = this.vertices,
            c = f.vertices,
            b = this.faces,
            a = f.faces,
            B = this.faceVertexUvs[0],
            A = f.faceVertexUvs[0];
        if (E === undefined) {
            E = 0
        }
        if (s !== undefined) {
            k = new THREE.Matrix3().getNormalMatrix(s)
        }
        for (var t = 0, l = c.length; t < l; t++) {
            var C = c[t];
            var p = C.clone();
            if (s !== undefined) {
                p.applyMatrix4(s)
            }
            d.push(p)
        }
        for (t = 0, l = a.length; t < l; t++) {
            var h = a[t],
                o, D, q, n = h.vertexNormals,
                v = h.vertexColors;
            o = new THREE.Face3(h.a + m, h.b + m, h.c + m);
            o.normal.copy(h.normal);
            if (k !== undefined) {
                o.normal.applyMatrix3(k).normalize()
            }
            for (var r = 0, u = n.length; r < u; r++) {
                D = n[r].clone();
                if (k !== undefined) {
                    D.applyMatrix3(k).normalize()
                }
                o.vertexNormals.push(D)
            }
            o.color.copy(h.color);
            for (var r = 0, u = v.length; r < u; r++) {
                q = v[r];
                o.vertexColors.push(q.clone())
            }
            o.materialIndex = h.materialIndex + E;
            b.push(o)
        }
        for (t = 0, l = A.length; t < l; t++) {
            var g = A[t],
                e = [];
            if (g === undefined) {
                continue
            }
            for (var r = 0, u = g.length; r < u; r++) {
                e.push(g[r].clone())
            }
            B.push(e)
        }
    },
    mergeMesh: function(a) {
        if (a instanceof THREE.Mesh === false) {
            console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.", a);
            return
        }
        a.matrixAutoUpdate && a.updateMatrix();
        this.merge(a.geometry, a.matrix)
    },
    mergeVertices: function() {
        var b = {};
        var a = [],
            C = [];
        var f, D;
        var h = 4;
        var B = Math.pow(10, h);
        var t, e, d;
        var c, r, s, A, g;
        for (t = 0, e = this.vertices.length; t < e; t++) {
            f = this.vertices[t];
            D = Math.round(f.x * B) + "_" + Math.round(f.y * B) + "_" + Math.round(f.z * B);
            if (b[D] === undefined) {
                b[D] = t;
                a.push(this.vertices[t]);
                C[t] = a.length - 1
            } else {
                C[t] = C[b[D]]
            }
        }
        var o = [];
        for (t = 0, e = this.faces.length; t < e; t++) {
            d = this.faces[t];
            d.a = C[d.a];
            d.b = C[d.b];
            d.c = C[d.c];
            c = [d.a, d.b, d.c];
            var q = -1;
            for (var p = 0; p < 3; p++) {
                if (c[p] == c[(p + 1) % 3]) {
                    q = p;
                    o.push(t);
                    break
                }
            }
        }
        for (t = o.length - 1; t >= 0; t--) {
            var m = o[t];
            this.faces.splice(m, 1);
            for (s = 0, A = this.faceVertexUvs.length; s < A; s++) {
                this.faceVertexUvs[s].splice(m, 1)
            }
        }
        var l = this.vertices.length - a.length;
        this.vertices = a;
        return l
    },
    toJSON: function() {
        var h = {
            metadata: {
                version: 4,
                type: "BufferGeometry",
                generator: "BufferGeometryExporter"
            },
            uuid: this.uuid,
            type: this.type
        };
        if (this.name !== "") {
            h.name = this.name
        }
        if (this.parameters !== undefined) {
            var f = this.parameters;
            for (var H in f) {
                if (f[H] !== undefined) {
                    h[H] = f[H]
                }
            }
            return h
        }
        var e = [];
        for (var v = 0; v < this.vertices.length; v++) {
            var B = this.vertices[v];
            e.push(B.x, B.y, B.z)
        }
        var b = [];
        var q = [];
        var n = {};
        var j = [];
        var E = {};
        var k = [];
        var d = {};
        for (var v = 0; v < this.faces.length; v++) {
            var g = this.faces[v];
            var o = false;
            var D = false;
            var a = this.faceVertexUvs[0][v] !== undefined;
            var A = g.normal.length() > 0;
            var u = g.vertexNormals.length > 0;
            var s = g.color.r !== 1 || g.color.g !== 1 || g.color.b !== 1;
            var p = g.vertexColors.length > 0;
            var G = 0;
            G = m(G, 0, 0);
            G = m(G, 1, o);
            G = m(G, 2, D);
            G = m(G, 3, a);
            G = m(G, 4, A);
            G = m(G, 5, u);
            G = m(G, 6, s);
            G = m(G, 7, p);
            b.push(G);
            b.push(g.a, g.b, g.c);
            if (a) {
                var C = this.faceVertexUvs[0][v];
                b.push(c(C[0]), c(C[1]), c(C[2]))
            }
            if (A) {
                b.push(F(g.normal))
            }
            if (u) {
                var t = g.vertexNormals;
                b.push(F(t[0]), F(t[1]), F(t[2]))
            }
            if (s) {
                b.push(l(g.color))
            }
            if (p) {
                var r = g.vertexColors;
                b.push(l(r[0]), l(r[1]), l(r[2]))
            }
        }

        function m(J, i, I) {
            return I ? J | (1 << i) : J & (~(1 << i))
        }

        function F(I) {
            var i = I.x.toString() + I.y.toString() + I.z.toString();
            if (n[i] !== undefined) {
                return n[i]
            }
            n[i] = q.length / 3;
            q.push(I.x, I.y, I.z);
            return n[i]
        }

        function l(i) {
            var I = i.r.toString() + i.g.toString() + i.b.toString();
            if (E[I] !== undefined) {
                return E[I]
            }
            E[I] = j.length;
            j.push(i.getHex());
            return E[I]
        }

        function c(i) {
            var I = i.x.toString() + i.y.toString();
            if (d[I] !== undefined) {
                return d[I]
            }
            d[I] = k.length / 2;
            k.push(i.x, i.y);
            return d[I]
        }
        h.data = {};
        h.data.vertices = e;
        h.data.normals = q;
        if (j.length > 0) {
            h.data.colors = j
        }
        if (k.length > 0) {
            h.data.uvs = [k]
        }
        h.data.faces = b;
        return h
    },
    clone: function() {
        var n = new THREE.Geometry();
        var m = this.vertices;
        for (var g = 0, o = m.length; g < o; g++) {
            n.vertices.push(m[g].clone())
        }
        var c = this.faces;
        for (var g = 0, o = c.length; g < o; g++) {
            n.faces.push(c[g].clone())
        }
        for (var g = 0, o = this.faceVertexUvs.length; g < o; g++) {
            var l = this.faceVertexUvs[g];
            if (n.faceVertexUvs[g] === undefined) {
                n.faceVertexUvs[g] = []
            }
            for (var f = 0, h = l.length; f < h; f++) {
                var e = l[f],
                    p = [];
                for (var d = 0, a = e.length; d < a; d++) {
                    var b = e[d];
                    p.push(b.clone())
                }
                n.faceVertexUvs[g].push(p)
            }
        }
        return n
    },
    dispose: function() {
        this.dispatchEvent({
            type: "dispose"
        })
    }
};
THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype);
THREE.GeometryIdCount = 0;
THREE.Camera = function() {
    THREE.Object3D.call(this);
    this.type = "Camera";
    this.matrixWorldInverse = new THREE.Matrix4();
    this.projectionMatrix = new THREE.Matrix4()
};
THREE.Camera.prototype = Object.create(THREE.Object3D.prototype);
THREE.Camera.prototype.constructor = THREE.Camera;
THREE.Camera.prototype.getWorldDirection = function() {
    var a = new THREE.Quaternion();
    return function(c) {
        var b = c || new THREE.Vector3();
        this.getWorldQuaternion(a);
        return b.set(0, 0, -1).applyQuaternion(a)
    }
}();
THREE.Camera.prototype.lookAt = function() {
    var a = new THREE.Matrix4();
    return function(b) {
        a.lookAt(this.position, b, this.up);
        this.quaternion.setFromRotationMatrix(a)
    }
}();
THREE.Camera.prototype.clone = function(a) {
    if (a === undefined) {
        a = new THREE.Camera()
    }
    THREE.Object3D.prototype.clone.call(this, a);
    a.matrixWorldInverse.copy(this.matrixWorldInverse);
    a.projectionMatrix.copy(this.projectionMatrix);
    return a
};
THREE.CubeCamera = function(f, e, g) {
    THREE.Object3D.call(this);
    this.type = "CubeCamera";
    var d = 90,
        b = 1;
    var c = new THREE.PerspectiveCamera(d, b, f, e);
    c.up.set(0, -1, 0);
    c.lookAt(new THREE.Vector3(1, 0, 0));
    this.add(c);
    var j = new THREE.PerspectiveCamera(d, b, f, e);
    j.up.set(0, -1, 0);
    j.lookAt(new THREE.Vector3(-1, 0, 0));
    this.add(j);
    var a = new THREE.PerspectiveCamera(d, b, f, e);
    a.up.set(0, 0, 1);
    a.lookAt(new THREE.Vector3(0, 1, 0));
    this.add(a);
    var i = new THREE.PerspectiveCamera(d, b, f, e);
    i.up.set(0, 0, -1);
    i.lookAt(new THREE.Vector3(0, -1, 0));
    this.add(i);
    var k = new THREE.PerspectiveCamera(d, b, f, e);
    k.up.set(0, -1, 0);
    k.lookAt(new THREE.Vector3(0, 0, 1));
    this.add(k);
    var h = new THREE.PerspectiveCamera(d, b, f, e);
    h.up.set(0, -1, 0);
    h.lookAt(new THREE.Vector3(0, 0, -1));
    this.add(h);
    this.renderTarget = new THREE.WebGLRenderTargetCube(g, g, {
        format: THREE.RGBFormat,
        magFilter: THREE.LinearFilter,
        minFilter: THREE.LinearFilter
    });
    this.updateCubeMap = function(n, o) {
        var m = this.renderTarget;
        var l = m.generateMipmaps;
        m.generateMipmaps = false;
        m.activeCubeFace = 0;
        n.render(o, c, m);
        m.activeCubeFace = 1;
        n.render(o, j, m);
        m.activeCubeFace = 2;
        n.render(o, a, m);
        m.activeCubeFace = 3;
        n.render(o, i, m);
        m.activeCubeFace = 4;
        n.render(o, k, m);
        m.generateMipmaps = l;
        m.activeCubeFace = 5;
        n.render(o, h, m)
    }
};
THREE.CubeCamera.prototype = Object.create(THREE.Object3D.prototype);
THREE.CubeCamera.prototype.constructor = THREE.CubeCamera;
THREE.OrthographicCamera = function(f, c, e, b, d, a) {
    THREE.Camera.call(this);
    this.type = "OrthographicCamera";
    this.zoom = 1;
    this.left = f;
    this.right = c;
    this.top = e;
    this.bottom = b;
    this.near = (d !== undefined) ? d : 0.1;
    this.far = (a !== undefined) ? a : 2000;
    this.updateProjectionMatrix()
};
THREE.OrthographicCamera.prototype = Object.create(THREE.Camera.prototype);
THREE.OrthographicCamera.prototype.constructor = THREE.OrthographicCamera;
THREE.OrthographicCamera.prototype.updateProjectionMatrix = function() {
    var c = (this.right - this.left) / (2 * this.zoom);
    var b = (this.top - this.bottom) / (2 * this.zoom);
    var a = (this.right + this.left) / 2;
    var d = (this.top + this.bottom) / 2;
    this.projectionMatrix.makeOrthographic(a - c, a + c, d + b, d - b, this.near, this.far)
};
THREE.OrthographicCamera.prototype.clone = function() {
    var a = new THREE.OrthographicCamera();
    THREE.Camera.prototype.clone.call(this, a);
    a.zoom = this.zoom;
    a.left = this.left;
    a.right = this.right;
    a.top = this.top;
    a.bottom = this.bottom;
    a.near = this.near;
    a.far = this.far;
    a.projectionMatrix.copy(this.projectionMatrix);
    return a
};
THREE.PerspectiveCamera = function(c, b, d, a) {
    THREE.Camera.call(this);
    this.type = "PerspectiveCamera";
    this.zoom = 1;
    this.fov = c !== undefined ? c : 50;
    this.aspect = b !== undefined ? b : 1;
    this.near = d !== undefined ? d : 0.1;
    this.far = a !== undefined ? a : 2000;
    this.updateProjectionMatrix()
};
THREE.PerspectiveCamera.prototype = Object.create(THREE.Camera.prototype);
THREE.PerspectiveCamera.prototype.constructor = THREE.PerspectiveCamera;
THREE.PerspectiveCamera.prototype.setLens = function(b, a) {
    if (a === undefined) {
        a = 24
    }
    this.fov = 2 * THREE.Math.radToDeg(Math.atan(a / (b * 2)));
    this.updateProjectionMatrix()
};
THREE.PerspectiveCamera.prototype.setViewOffset = function(e, c, b, f, d, a) {
    this.fullWidth = e;
    this.fullHeight = c;
    this.x = b;
    this.y = f;
    this.width = d;
    this.height = a;
    this.updateProjectionMatrix()
};
THREE.PerspectiveCamera.prototype.updateProjectionMatrix = function() {
    var d = THREE.Math.radToDeg(2 * Math.atan(Math.tan(THREE.Math.degToRad(this.fov) * 0.5) / this.zoom));
    if (this.fullWidth) {
        var c = this.fullWidth / this.fullHeight;
        var h = Math.tan(THREE.Math.degToRad(d * 0.5)) * this.near;
        var b = -h;
        var g = c * b;
        var e = c * h;
        var f = Math.abs(e - g);
        var a = Math.abs(h - b);
        this.projectionMatrix.makeFrustum(g + this.x * f / this.fullWidth, g + (this.x + this.width) * f / this.fullWidth, h - (this.y + this.height) * a / this.fullHeight, h - this.y * a / this.fullHeight, this.near, this.far)
    } else {
        this.projectionMatrix.makePerspective(d, this.aspect, this.near, this.far)
    }
};
THREE.PerspectiveCamera.prototype.clone = function() {
    var a = new THREE.PerspectiveCamera();
    THREE.Camera.prototype.clone.call(this, a);
    a.zoom = this.zoom;
    a.fov = this.fov;
    a.aspect = this.aspect;
    a.near = this.near;
    a.far = this.far;
    a.projectionMatrix.copy(this.projectionMatrix);
    return a
};
THREE.Light = function(a) {
    THREE.Object3D.call(this);
    this.type = "Light";
    this.color = new THREE.Color(a)
};
THREE.Light.prototype = Object.create(THREE.Object3D.prototype);
THREE.Light.prototype.constructor = THREE.Light;
THREE.Light.prototype.clone = function(a) {
    if (a === undefined) {
        a = new THREE.Light()
    }
    THREE.Object3D.prototype.clone.call(this, a);
    a.color.copy(this.color);
    return a
};
THREE.AmbientLight = function(a) {
    THREE.Light.call(this, a);
    this.type = "AmbientLight"
};
THREE.AmbientLight.prototype = Object.create(THREE.Light.prototype);
THREE.AmbientLight.prototype.constructor = THREE.AmbientLight;
THREE.AmbientLight.prototype.clone = function() {
    var a = new THREE.AmbientLight();
    THREE.Light.prototype.clone.call(this, a);
    return a
};
THREE.AreaLight = function(b, a) {
    THREE.Light.call(this, b);
    this.type = "AreaLight";
    this.normal = new THREE.Vector3(0, -1, 0);
    this.right = new THREE.Vector3(1, 0, 0);
    this.intensity = (a !== undefined) ? a : 1;
    this.width = 1;
    this.height = 1;
    this.constantAttenuation = 1.5;
    this.linearAttenuation = 0.5;
    this.quadraticAttenuation = 0.1
};
THREE.AreaLight.prototype = Object.create(THREE.Light.prototype);
THREE.AreaLight.prototype.constructor = THREE.AreaLight;
THREE.DirectionalLight = function(b, a) {
    THREE.Light.call(this, b);
    this.type = "DirectionalLight";
    this.position.set(0, 1, 0);
    this.target = new THREE.Object3D();
    this.intensity = (a !== undefined) ? a : 1;
    this.castShadow = false;
    this.onlyShadow = false;
    this.shadowCameraNear = 50;
    this.shadowCameraFar = 5000;
    this.shadowCameraLeft = -500;
    this.shadowCameraRight = 500;
    this.shadowCameraTop = 500;
    this.shadowCameraBottom = -500;
    this.shadowCameraVisible = false;
    this.shadowBias = 0;
    this.shadowDarkness = 0.5;
    this.shadowMapWidth = 512;
    this.shadowMapHeight = 512;
    this.shadowCascade = false;
    this.shadowCascadeOffset = new THREE.Vector3(0, 0, -1000);
    this.shadowCascadeCount = 2;
    this.shadowCascadeBias = [0, 0, 0];
    this.shadowCascadeWidth = [512, 512, 512];
    this.shadowCascadeHeight = [512, 512, 512];
    this.shadowCascadeNearZ = [-1, 0.99, 0.998];
    this.shadowCascadeFarZ = [0.99, 0.998, 1];
    this.shadowCascadeArray = [];
    this.shadowMap = null;
    this.shadowMapSize = null;
    this.shadowCamera = null;
    this.shadowMatrix = null
};
THREE.DirectionalLight.prototype = Object.create(THREE.Light.prototype);
THREE.DirectionalLight.prototype.constructor = THREE.DirectionalLight;
THREE.DirectionalLight.prototype.clone = function() {
    var a = new THREE.DirectionalLight();
    THREE.Light.prototype.clone.call(this, a);
    a.target = this.target.clone();
    a.intensity = this.intensity;
    a.castShadow = this.castShadow;
    a.onlyShadow = this.onlyShadow;
    a.shadowCameraNear = this.shadowCameraNear;
    a.shadowCameraFar = this.shadowCameraFar;
    a.shadowCameraLeft = this.shadowCameraLeft;
    a.shadowCameraRight = this.shadowCameraRight;
    a.shadowCameraTop = this.shadowCameraTop;
    a.shadowCameraBottom = this.shadowCameraBottom;
    a.shadowCameraVisible = this.shadowCameraVisible;
    a.shadowBias = this.shadowBias;
    a.shadowDarkness = this.shadowDarkness;
    a.shadowMapWidth = this.shadowMapWidth;
    a.shadowMapHeight = this.shadowMapHeight;
    a.shadowCascade = this.shadowCascade;
    a.shadowCascadeOffset.copy(this.shadowCascadeOffset);
    a.shadowCascadeCount = this.shadowCascadeCount;
    a.shadowCascadeBias = this.shadowCascadeBias.slice(0);
    a.shadowCascadeWidth = this.shadowCascadeWidth.slice(0);
    a.shadowCascadeHeight = this.shadowCascadeHeight.slice(0);
    a.shadowCascadeNearZ = this.shadowCascadeNearZ.slice(0);
    a.shadowCascadeFarZ = this.shadowCascadeFarZ.slice(0);
    return a
};
THREE.HemisphereLight = function(b, c, a) {
    THREE.Light.call(this, b);
    this.type = "HemisphereLight";
    this.position.set(0, 100, 0);
    this.groundColor = new THREE.Color(c);
    this.intensity = (a !== undefined) ? a : 1
};
THREE.HemisphereLight.prototype = Object.create(THREE.Light.prototype);
THREE.HemisphereLight.prototype.constructor = THREE.HemisphereLight;
THREE.HemisphereLight.prototype.clone = function() {
    var a = new THREE.HemisphereLight();
    THREE.Light.prototype.clone.call(this, a);
    a.groundColor.copy(this.groundColor);
    a.intensity = this.intensity;
    return a
};
THREE.PointLight = function(b, a, c) {
    THREE.Light.call(this, b);
    this.type = "PointLight";
    this.intensity = (a !== undefined) ? a : 1;
    this.distance = (c !== undefined) ? c : 0
};
THREE.PointLight.prototype = Object.create(THREE.Light.prototype);
THREE.PointLight.prototype.constructor = THREE.PointLight;
THREE.PointLight.prototype.clone = function() {
    var a = new THREE.PointLight();
    THREE.Light.prototype.clone.call(this, a);
    a.intensity = this.intensity;
    a.distance = this.distance;
    return a
};
THREE.SpotLight = function(b, a, e, d, c) {
    THREE.Light.call(this, b);
    this.type = "SpotLight";
    this.position.set(0, 1, 0);
    this.target = new THREE.Object3D();
    this.intensity = (a !== undefined) ? a : 1;
    this.distance = (e !== undefined) ? e : 0;
    this.angle = (d !== undefined) ? d : Math.PI / 3;
    this.exponent = (c !== undefined) ? c : 10;
    this.castShadow = false;
    this.onlyShadow = false;
    this.shadowCameraNear = 50;
    this.shadowCameraFar = 5000;
    this.shadowCameraFov = 50;
    this.shadowCameraVisible = false;
    this.shadowBias = 0;
    this.shadowDarkness = 0.5;
    this.shadowMapWidth = 512;
    this.shadowMapHeight = 512;
    this.shadowMap = null;
    this.shadowMapSize = null;
    this.shadowCamera = null;
    this.shadowMatrix = null
};
THREE.SpotLight.prototype = Object.create(THREE.Light.prototype);
THREE.SpotLight.prototype.constructor = THREE.SpotLight;
THREE.SpotLight.prototype.clone = function() {
    var a = new THREE.SpotLight();
    THREE.Light.prototype.clone.call(this, a);
    a.target = this.target.clone();
    a.intensity = this.intensity;
    a.distance = this.distance;
    a.angle = this.angle;
    a.exponent = this.exponent;
    a.castShadow = this.castShadow;
    a.onlyShadow = this.onlyShadow;
    a.shadowCameraNear = this.shadowCameraNear;
    a.shadowCameraFar = this.shadowCameraFar;
    a.shadowCameraFov = this.shadowCameraFov;
    a.shadowCameraVisible = this.shadowCameraVisible;
    a.shadowBias = this.shadowBias;
    a.shadowDarkness = this.shadowDarkness;
    a.shadowMapWidth = this.shadowMapWidth;
    a.shadowMapHeight = this.shadowMapHeight;
    return a
};
THREE.Cache = function() {
    this.files = {}
};
THREE.Cache.prototype = {
    constructor: THREE.Cache,
    add: function(b, a) {
        this.files[b] = a
    },
    get: function(a) {
        return this.files[a]
    },
    remove: function(a) {
        delete this.files[a]
    },
    clear: function() {
        this.files = {}
    }
};
THREE.Loader = function(a) {
    this.showStatus = a;
    this.statusDomElement = a ? THREE.Loader.prototype.addStatusElement() : null;
    this.imageLoader = new THREE.ImageLoader();
    this.onLoadStart = function() {};
    this.onLoadProgress = function() {};
    this.onLoadComplete = function() {}
};
THREE.Loader.prototype = {
    constructor: THREE.Loader,
    crossOrigin: undefined,
    addStatusElement: function() {
        var a = document.createElement("div");
        a.style.position = "absolute";
        a.style.right = "0px";
        a.style.top = "0px";
        a.style.fontSize = "0.8em";
        a.style.textAlign = "left";
        a.style.background = "rgba(0,0,0,0.25)";
        a.style.color = "#fff";
        a.style.width = "120px";
        a.style.padding = "0.5em 0.5em 0.5em 0.5em";
        a.style.zIndex = 1000;
        a.innerHTML = "Loading ...";
        return a
    },
    updateProgress: function(a) {
        var b = "Loaded ";
        if (a.total) {
            b += (100 * a.loaded / a.total).toFixed(0) + "%"
        } else {
            b += (a.loaded / 1024).toFixed(2) + " KB"
        }
        this.statusDomElement.innerHTML = b
    },
    extractUrlBase: function(a) {
        var b = a.split("/");
        if (b.length === 1) {
            return "./"
        }
        b.pop();
        return b.join("/") + "/"
    },
    initMaterials: function(a, c) {
        var d = [];
        for (var b = 0; b < a.length; ++b) {
            d[b] = this.createMaterial(a[b], c)
        }
        return d
    },
    needsTangents: function(b) {
        for (var d = 0, c = b.length; d < c; d++) {
            var a = b[d];
            if (a instanceof THREE.ShaderMaterial) {
                return true
            }
        }
        return false
    },
    createMaterial: function(e, c) {
        var j = this;

        function a(m) {
            var k = Math.log(m) / Math.LN2;
            return Math.pow(2, Math.round(k))
        }

        function g(r, l, p, m, q, n, k) {
            var o = c + p;
            var s;
            var t = THREE.Loader.Handlers.get(o);
            if (t !== null) {
                s = t.load(o)
            } else {
                s = new THREE.Texture();
                t = j.imageLoader;
                t.crossOrigin = j.crossOrigin;
                t.load(o, function(D) {
                    if (THREE.Math.isPowerOfTwo(D.width) === false || THREE.Math.isPowerOfTwo(D.height) === false) {
                        var C = a(D.width);
                        var v = a(D.height);
                        var A = document.createElement("canvas");
                        A.width = C;
                        A.height = v;
                        var B = A.getContext("2d");
                        B.drawImage(D, 0, 0, C, v);
                        s.image = A
                    } else {
                        s.image = D
                    }
                    s.needsUpdate = true
                })
            }
            s.sourceFile = p;
            if (m) {
                s.repeat.set(m[0], m[1]);
                if (m[0] !== 1) {
                    s.wrapS = THREE.RepeatWrapping
                }
                if (m[1] !== 1) {
                    s.wrapT = THREE.RepeatWrapping
                }
            }
            if (q) {
                s.offset.set(q[0], q[1])
            }
            if (n) {
                var u = {
                    repeat: THREE.RepeatWrapping,
                    mirror: THREE.MirroredRepeatWrapping
                };
                if (u[n[0]] !== undefined) {
                    s.wrapS = u[n[0]]
                }
                if (u[n[1]] !== undefined) {
                    s.wrapT = u[n[1]]
                }
            }
            if (k) {
                s.anisotropy = k
            }
            r[l] = s
        }

        function b(k) {
            return (k[0] * 255 << 16) + (k[1] * 255 << 8) + k[2] * 255
        }
        var d = "MeshLambertMaterial";
        var i = {
            color: 15658734,
            opacity: 1,
            map: null,
            lightMap: null,
            normalMap: null,
            bumpMap: null,
            wireframe: false
        };
        if (e.shading) {
            var h = e.shading.toLowerCase();
            if (h === "phong") {
                d = "MeshPhongMaterial"
            } else {
                if (h === "basic") {
                    d = "MeshBasicMaterial"
                }
            }
        }
        if (e.blending !== undefined && THREE[e.blending] !== undefined) {
            i.blending = THREE[e.blending]
        }
        if (e.transparent !== undefined || e.opacity < 1) {
            i.transparent = e.transparent
        }
        if (e.depthTest !== undefined) {
            i.depthTest = e.depthTest
        }
        if (e.depthWrite !== undefined) {
            i.depthWrite = e.depthWrite
        }
        if (e.visible !== undefined) {
            i.visible = e.visible
        }
        if (e.flipSided !== undefined) {
            i.side = THREE.BackSide
        }
        if (e.doubleSided !== undefined) {
            i.side = THREE.DoubleSide
        }
        if (e.wireframe !== undefined) {
            i.wireframe = e.wireframe
        }
        if (e.vertexColors !== undefined) {
            if (e.vertexColors === "face") {
                i.vertexColors = THREE.FaceColors
            } else {
                if (e.vertexColors) {
                    i.vertexColors = THREE.VertexColors
                }
            }
        }
        if (e.colorDiffuse) {
            i.color = b(e.colorDiffuse)
        } else {
            if (e.DbgColor) {
                i.color = e.DbgColor
            }
        }
        if (e.colorSpecular) {
            i.specular = b(e.colorSpecular)
        }
        if (e.colorAmbient) {
            i.ambient = b(e.colorAmbient)
        }
        if (e.colorEmissive) {
            i.emissive = b(e.colorEmissive)
        }
        if (e.transparency) {
            i.opacity = e.transparency
        }
        if (e.specularCoef) {
            i.shininess = e.specularCoef
        }
        if (e.mapDiffuse && c) {
            g(i, "map", e.mapDiffuse, e.mapDiffuseRepeat, e.mapDiffuseOffset, e.mapDiffuseWrap, e.mapDiffuseAnisotropy)
        }
        if (e.mapLight && c) {
            g(i, "lightMap", e.mapLight, e.mapLightRepeat, e.mapLightOffset, e.mapLightWrap, e.mapLightAnisotropy)
        }
        if (e.mapBump && c) {
            g(i, "bumpMap", e.mapBump, e.mapBumpRepeat, e.mapBumpOffset, e.mapBumpWrap, e.mapBumpAnisotropy)
        }
        if (e.mapNormal && c) {
            g(i, "normalMap", e.mapNormal, e.mapNormalRepeat, e.mapNormalOffset, e.mapNormalWrap, e.mapNormalAnisotropy)
        }
        if (e.mapSpecular && c) {
            g(i, "specularMap", e.mapSpecular, e.mapSpecularRepeat, e.mapSpecularOffset, e.mapSpecularWrap, e.mapSpecularAnisotropy)
        }
        if (e.mapAlpha && c) {
            g(i, "alphaMap", e.mapAlpha, e.mapAlphaRepeat, e.mapAlphaOffset, e.mapAlphaWrap, e.mapAlphaAnisotropy)
        }
        if (e.mapBumpScale) {
            i.bumpScale = e.mapBumpScale
        }
        if (e.mapNormalFactor) {
            i.normalScale = new THREE.Vector2(e.mapNormalFactor, e.mapNormalFactor)
        }
        var f = new THREE[d](i);
        if (e.DbgName !== undefined) {
            f.name = e.DbgName
        }
        return f
    }
};
THREE.Loader.Handlers = {
    handlers: [],
    add: function(b, a) {
        this.handlers.push(b, a)
    },
    get: function(d) {
        for (var c = 0, b = this.handlers.length; c < b; c += 2) {
            var e = this.handlers[c];
            var a = this.handlers[c + 1];
            if (e.test(d)) {
                return a
            }
        }
        return null
    }
};
THREE.XHRLoader = function(a) {
    this.cache = new THREE.Cache();
    this.manager = (a !== undefined) ? a : THREE.DefaultLoadingManager
};
THREE.XHRLoader.prototype = {
    constructor: THREE.XHRLoader,
    load: function(a, d, g, f) {
        var c = this;
        var b = c.cache.get(a);
        if (b !== undefined) {
            if (d) {
                d(b)
            }
            return
        }
        var e = new XMLHttpRequest();
        e.open("GET", a, true);
        e.addEventListener("load", function(h) {
            c.cache.add(a, this.response);
            if (d) {
                d(this.response)
            }
            c.manager.itemEnd(a)
        }, false);
        if (g !== undefined) {
            e.addEventListener("progress", function(h) {
                g(h)
            }, false)
        }
        if (f !== undefined) {
            e.addEventListener("error", function(h) {
                f(h)
            }, false)
        }
        if (this.crossOrigin !== undefined) {
            e.crossOrigin = this.crossOrigin
        }
        if (this.responseType !== undefined) {
            e.responseType = this.responseType
        }
        e.send(null);
        c.manager.itemStart(a)
    },
    setResponseType: function(a) {
        this.responseType = a
    },
    setCrossOrigin: function(a) {
        this.crossOrigin = a
    }
};
THREE.ImageLoader = function(a) {
    this.cache = new THREE.Cache();
    this.manager = (a !== undefined) ? a : THREE.DefaultLoadingManager
};
THREE.ImageLoader.prototype = {
    constructor: THREE.ImageLoader,
    load: function(a, d, g, e) {
        var c = this;
        var b = c.cache.get(a);
        if (b !== undefined) {
            d(b);
            return
        }
        var f = document.createElement("img");
        if (d !== undefined) {
            f.addEventListener("load", function(h) {
                c.cache.add(a, this);
                d(this);
                c.manager.itemEnd(a)
            }, false)
        }
        if (g !== undefined) {
            f.addEventListener("progress", function(h) {
                g(h)
            }, false)
        }
        if (e !== undefined) {
            f.addEventListener("error", function(h) {
                e(h)
            }, false)
        }
        if (this.crossOrigin !== undefined) {
            f.crossOrigin = this.crossOrigin
        }
        f.src = a;
        c.manager.itemStart(a);
        return f
    },
    setCrossOrigin: function(a) {
        this.crossOrigin = a
    }
};
THREE.JSONLoader = function(a) {
    THREE.Loader.call(this, a);
    this.withCredentials = false
};
THREE.JSONLoader.prototype = Object.create(THREE.Loader.prototype);
THREE.JSONLoader.prototype.constructor = THREE.JSONLoader;
THREE.JSONLoader.prototype.load = function(a, d, c) {
    var b = this;
    c = c && (typeof c === "string") ? c : this.extractUrlBase(a);
    this.onLoadStart();
    this.loadAjaxJSON(this, a, d, c)
};
THREE.JSONLoader.prototype.loadAjaxJSON = function(b, a, g, e, d) {
    var f = new XMLHttpRequest();
    var c = 0;
    f.onreadystatechange = function() {
        if (f.readyState === f.DONE) {
            if (f.status === 200 || f.status === 0) {
                if (f.responseText) {
                    var i = JSON.parse(f.responseText);
                    if (i.metadata !== undefined && i.metadata.type === "scene") {
                        console.error('THREE.JSONLoader: "' + a + '" seems to be a Scene. Use THREE.SceneLoader instead.');
                        return
                    }
                    var h = b.parse(i, e);
                    g(h.geometry, h.materials)
                } else {
                    console.error('THREE.JSONLoader: "' + a + '" seems to be unreachable or the file is empty.')
                }
                b.onLoadComplete()
            } else {
                console.error("THREE.JSONLoader: Couldn't load \"" + a + '" (' + f.status + ")")
            }
        } else {
            if (f.readyState === f.LOADING) {
                if (d) {
                    if (c === 0) {
                        c = f.getResponseHeader("Content-Length")
                    }
                    d({
                        total: c,
                        loaded: f.responseText.length
                    })
                }
            } else {
                if (f.readyState === f.HEADERS_RECEIVED) {
                    if (d !== undefined) {
                        c = f.getResponseHeader("Content-Length")
                    }
                }
            }
        }
    };
    f.open("GET", a, true);
    f.withCredentials = this.withCredentials;
    f.send(null)
};
THREE.JSONLoader.prototype.parse = function(i, c) {
    var h = this,
        e = new THREE.Geometry(),
        d = (i.scale !== undefined) ? 1 / i.scale : 1;
    a(d);
    f();
    b(d);
    e.computeFaceNormals();
    e.computeBoundingSphere();

    function a(X) {
        function B(u, j) {
            return u & (1 << j)
        }
        var S, R, H, s, r, q, V, K, D, o, I, L, k, U, Q, O, M, T, E, n, m, P, C, W, p, A, J, G, l = i.faces,
            t = i.vertices,
            N = i.normals,
            F = i.colors,
            Y = 0;
        if (i.uvs !== undefined) {
            for (S = 0; S < i.uvs.length; S++) {
                if (i.uvs[S].length) {
                    Y++
                }
            }
            for (S = 0; S < Y; S++) {
                e.faceVertexUvs[S] = []
            }
        }
        s = 0;
        r = t.length;
        while (s < r) {
            T = new THREE.Vector3();
            T.x = t[s++] * X;
            T.y = t[s++] * X;
            T.z = t[s++] * X;
            e.vertices.push(T)
        }
        s = 0;
        r = l.length;
        while (s < r) {
            o = l[s++];
            I = B(o, 0);
            L = B(o, 1);
            k = B(o, 3);
            U = B(o, 4);
            Q = B(o, 5);
            O = B(o, 6);
            M = B(o, 7);
            if (I) {
                n = new THREE.Face3();
                n.a = l[s];
                n.b = l[s + 1];
                n.c = l[s + 3];
                m = new THREE.Face3();
                m.a = l[s + 1];
                m.b = l[s + 2];
                m.c = l[s + 3];
                s += 4;
                if (L) {
                    D = l[s++];
                    n.materialIndex = D;
                    m.materialIndex = D
                }
                H = e.faces.length;
                if (k) {
                    for (S = 0; S < Y; S++) {
                        p = i.uvs[S];
                        e.faceVertexUvs[S][H] = [];
                        e.faceVertexUvs[S][H + 1] = [];
                        for (R = 0; R < 4; R++) {
                            K = l[s++];
                            J = p[K * 2];
                            G = p[K * 2 + 1];
                            A = new THREE.Vector2(J, G);
                            if (R !== 2) {
                                e.faceVertexUvs[S][H].push(A)
                            }
                            if (R !== 0) {
                                e.faceVertexUvs[S][H + 1].push(A)
                            }
                        }
                    }
                }
                if (U) {
                    V = l[s++] * 3;
                    n.normal.set(N[V++], N[V++], N[V]);
                    m.normal.copy(n.normal)
                }
                if (Q) {
                    for (S = 0; S < 4; S++) {
                        V = l[s++] * 3;
                        W = new THREE.Vector3(N[V++], N[V++], N[V]);
                        if (S !== 2) {
                            n.vertexNormals.push(W)
                        }
                        if (S !== 0) {
                            m.vertexNormals.push(W)
                        }
                    }
                }
                if (O) {
                    q = l[s++];
                    C = F[q];
                    n.color.setHex(C);
                    m.color.setHex(C)
                }
                if (M) {
                    for (S = 0; S < 4; S++) {
                        q = l[s++];
                        C = F[q];
                        if (S !== 2) {
                            n.vertexColors.push(new THREE.Color(C))
                        }
                        if (S !== 0) {
                            m.vertexColors.push(new THREE.Color(C))
                        }
                    }
                }
                e.faces.push(n);
                e.faces.push(m)
            } else {
                E = new THREE.Face3();
                E.a = l[s++];
                E.b = l[s++];
                E.c = l[s++];
                if (L) {
                    D = l[s++];
                    E.materialIndex = D
                }
                H = e.faces.length;
                if (k) {
                    for (S = 0; S < Y; S++) {
                        p = i.uvs[S];
                        e.faceVertexUvs[S][H] = [];
                        for (R = 0; R < 3; R++) {
                            K = l[s++];
                            J = p[K * 2];
                            G = p[K * 2 + 1];
                            A = new THREE.Vector2(J, G);
                            e.faceVertexUvs[S][H].push(A)
                        }
                    }
                }
                if (U) {
                    V = l[s++] * 3;
                    E.normal.set(N[V++], N[V++], N[V])
                }
                if (Q) {
                    for (S = 0; S < 3; S++) {
                        V = l[s++] * 3;
                        W = new THREE.Vector3(N[V++], N[V++], N[V]);
                        E.vertexNormals.push(W)
                    }
                }
                if (O) {
                    q = l[s++];
                    E.color.setHex(F[q])
                }
                if (M) {
                    for (S = 0; S < 3; S++) {
                        q = l[s++];
                        E.vertexColors.push(new THREE.Color(F[q]))
                    }
                }
                e.faces.push(E)
            }
        }
    }

    function f() {
        var j = (i.influencesPerVertex !== undefined) ? i.influencesPerVertex : 2;
        if (i.skinWeights) {
            for (var m = 0, k = i.skinWeights.length; m < k; m += j) {
                var t = i.skinWeights[m];
                var r = (j > 1) ? i.skinWeights[m + 1] : 0;
                var p = (j > 2) ? i.skinWeights[m + 2] : 0;
                var u = (j > 3) ? i.skinWeights[m + 3] : 0;
                e.skinWeights.push(new THREE.Vector4(t, r, p, u))
            }
        }
        if (i.skinIndices) {
            for (var m = 0, k = i.skinIndices.length; m < k; m += j) {
                var s = i.skinIndices[m];
                var q = (j > 1) ? i.skinIndices[m + 1] : 0;
                var o = (j > 2) ? i.skinIndices[m + 2] : 0;
                var n = (j > 3) ? i.skinIndices[m + 3] : 0;
                e.skinIndices.push(new THREE.Vector4(s, q, o, n))
            }
        }
        e.bones = i.bones;
        if (e.bones && e.bones.length > 0 && (e.skinWeights.length !== e.skinIndices.length || e.skinIndices.length !== e.vertices.length)) {
            console.warn("When skinning, number of vertices (" + e.vertices.length + "), skinIndices (" + e.skinIndices.length + "), and skinWeights (" + e.skinWeights.length + ") should match.")
        }
        e.animation = i.animation;
        e.animations = i.animations
    }

    function b(m) {
        if (i.morphTargets !== undefined) {
            var p, n, A, k, r, B;
            for (p = 0, n = i.morphTargets.length; p < n; p++) {
                e.morphTargets[p] = {};
                e.morphTargets[p].name = i.morphTargets[p].name;
                e.morphTargets[p].vertices = [];
                r = e.morphTargets[p].vertices;
                B = i.morphTargets[p].vertices;
                for (A = 0, k = B.length; A < k; A += 3) {
                    var q = new THREE.Vector3();
                    q.x = B[A] * m;
                    q.y = B[A + 1] * m;
                    q.z = B[A + 2] * m;
                    r.push(q)
                }
            }
        }
        if (i.morphColors !== undefined) {
            var p, n, s, u, t, j, o;
            for (p = 0, n = i.morphColors.length; p < n; p++) {
                e.morphColors[p] = {};
                e.morphColors[p].name = i.morphColors[p].name;
                e.morphColors[p].colors = [];
                t = e.morphColors[p].colors;
                j = i.morphColors[p].colors;
                for (s = 0, u = j.length; s < u; s += 3) {
                    o = new THREE.Color(16755200);
                    o.setRGB(j[s], j[s + 1], j[s + 2]);
                    t.push(o)
                }
            }
        }
    }
    if (i.materials === undefined || i.materials.length === 0) {
        return {
            geometry: e
        }
    } else {
        var g = this.initMaterials(i.materials, c);
        if (this.needsTangents(g)) {
            e.computeTangents()
        }
        return {
            geometry: e,
            materials: g
        }
    }
};
THREE.LoadingManager = function(c, f, e) {
    var b = this;
    var a = 0,
        d = 0;
    this.onLoad = c;
    this.onProgress = f;
    this.onError = e;
    this.itemStart = function(g) {
        d++
    };
    this.itemEnd = function(g) {
        a++;
        if (b.onProgress !== undefined) {
            b.onProgress(g, a, d)
        }
        if (a === d && b.onLoad !== undefined) {
            b.onLoad()
        }
    }
};
THREE.DefaultLoadingManager = new THREE.LoadingManager();
THREE.BufferGeometryLoader = function(a) {
    this.manager = (a !== undefined) ? a : THREE.DefaultLoadingManager
};
THREE.BufferGeometryLoader.prototype = {
    constructor: THREE.BufferGeometryLoader,
    load: function(b, d, f, e) {
        var c = this;
        var a = new THREE.XHRLoader(c.manager);
        a.setCrossOrigin(this.crossOrigin);
        a.load(b, function(g) {
            d(c.parse(JSON.parse(g)))
        }, f, e)
    },
    setCrossOrigin: function(a) {
        this.crossOrigin = a
    },
    parse: function(i) {
        var e = new THREE.BufferGeometry();
        var d = i.attributes;
        for (var h in d) {
            var b = d[h];
            var f = new self[b.type](b.array);
            e.addAttribute(h, new THREE.BufferAttribute(f, b.itemSize))
        }
        var c = i.offsets;
        if (c !== undefined) {
            e.offsets = JSON.parse(JSON.stringify(c))
        }
        var g = i.boundingSphere;
        if (g !== undefined) {
            var a = new THREE.Vector3();
            if (g.center !== undefined) {
                a.fromArray(g.center)
            }
            e.boundingSphere = new THREE.Sphere(a, g.radius)
        }
        return e
    }
};
THREE.MaterialLoader = function(a) {
    this.manager = (a !== undefined) ? a : THREE.DefaultLoadingManager
};
THREE.MaterialLoader.prototype = {
    constructor: THREE.MaterialLoader,
    load: function(b, d, f, e) {
        var c = this;
        var a = new THREE.XHRLoader(c.manager);
        a.setCrossOrigin(this.crossOrigin);
        a.load(b, function(g) {
            d(c.parse(JSON.parse(g)))
        }, f, e)
    },
    setCrossOrigin: function(a) {
        this.crossOrigin = a
    },
    parse: function(c) {
        var d = new THREE[c.type];
        if (c.color !== undefined) {
            d.color.setHex(c.color)
        }
        if (c.ambient !== undefined) {
            d.ambient.setHex(c.ambient)
        }
        if (c.emissive !== undefined) {
            d.emissive.setHex(c.emissive)
        }
        if (c.specular !== undefined) {
            d.specular.setHex(c.specular)
        }
        if (c.shininess !== undefined) {
            d.shininess = c.shininess
        }
        if (c.uniforms !== undefined) {
            d.uniforms = c.uniforms
        }
        if (c.vertexShader !== undefined) {
            d.vertexShader = c.vertexShader
        }
        if (c.fragmentShader !== undefined) {
            d.fragmentShader = c.fragmentShader
        }
        if (c.vertexColors !== undefined) {
            d.vertexColors = c.vertexColors
        }
        if (c.shading !== undefined) {
            d.shading = c.shading
        }
        if (c.blending !== undefined) {
            d.blending = c.blending
        }
        if (c.side !== undefined) {
            d.side = c.side
        }
        if (c.opacity !== undefined) {
            d.opacity = c.opacity
        }
        if (c.transparent !== undefined) {
            d.transparent = c.transparent
        }
        if (c.wireframe !== undefined) {
            d.wireframe = c.wireframe
        }
        if (c.materials !== undefined) {
            for (var b = 0, a = c.materials.length; b < a; b++) {
                d.materials.push(this.parse(c.materials[b]))
            }
        }
        return d
    }
};
THREE.ObjectLoader = function(a) {
    this.manager = (a !== undefined) ? a : THREE.DefaultLoadingManager
};
THREE.ObjectLoader.prototype = {
    constructor: THREE.ObjectLoader,
    load: function(b, d, f, e) {
        var c = this;
        var a = new THREE.XHRLoader(c.manager);
        a.setCrossOrigin(this.crossOrigin);
        a.load(b, function(g) {
            d(c.parse(JSON.parse(g)))
        }, f, e)
    },
    setCrossOrigin: function(a) {
        this.crossOrigin = a
    },
    parse: function(c) {
        var d = this.parseGeometries(c.geometries);
        var a = this.parseMaterials(c.materials);
        var b = this.parseObject(c.object, d, a);
        return b
    },
    parseGeometries: function(d) {
        var e = {};
        if (d !== undefined) {
            var b = new THREE.JSONLoader();
            var g = new THREE.BufferGeometryLoader();
            for (var c = 0, a = d.length; c < a; c++) {
                var h;
                var f = d[c];
                switch (f.type) {
                    case "PlaneGeometry":
                        h = new THREE.PlaneGeometry(f.width, f.height, f.widthSegments, f.heightSegments);
                        break;
                    case "BoxGeometry":
                    case "CubeGeometry":
                        h = new THREE.BoxGeometry(f.width, f.height, f.depth, f.widthSegments, f.heightSegments, f.depthSegments);
                        break;
                    case "CircleGeometry":
                        h = new THREE.CircleGeometry(f.radius, f.segments);
                        break;
                    case "CylinderGeometry":
                        h = new THREE.CylinderGeometry(f.radiusTop, f.radiusBottom, f.height, f.radialSegments, f.heightSegments, f.openEnded);
                        break;
                    case "SphereGeometry":
                        h = new THREE.SphereGeometry(f.radius, f.widthSegments, f.heightSegments, f.phiStart, f.phiLength, f.thetaStart, f.thetaLength);
                        break;
                    case "IcosahedronGeometry":
                        h = new THREE.IcosahedronGeometry(f.radius, f.detail);
                        break;
                    case "TorusGeometry":
                        h = new THREE.TorusGeometry(f.radius, f.tube, f.radialSegments, f.tubularSegments, f.arc);
                        break;
                    case "TorusKnotGeometry":
                        h = new THREE.TorusKnotGeometry(f.radius, f.tube, f.radialSegments, f.tubularSegments, f.p, f.q, f.heightScale);
                        break;
                    case "BufferGeometry":
                        h = g.parse(f.data);
                        break;
                    case "Geometry":
                        h = b.parse(f.data).geometry;
                        break
                }
                h.uuid = f.uuid;
                if (f.name !== undefined) {
                    h.name = f.name
                }
                e[f.uuid] = h
            }
        }
        return e
    },
    parseMaterials: function(e) {
        var c = {};
        if (e !== undefined) {
            var a = new THREE.MaterialLoader();
            for (var d = 0, b = e.length; d < b; d++) {
                var g = e[d];
                var f = a.parse(g);
                f.uuid = g.uuid;
                if (g.name !== undefined) {
                    f.name = g.name
                }
                c[g.uuid] = f
            }
        }
        return c
    },
    parseObject: function() {
        var a = new THREE.Matrix4();
        return function(f, e, b) {
            var c;
            switch (f.type) {
                case "Scene":
                    c = new THREE.Scene();
                    break;
                case "PerspectiveCamera":
                    c = new THREE.PerspectiveCamera(f.fov, f.aspect, f.near, f.far);
                    break;
                case "OrthographicCamera":
                    c = new THREE.OrthographicCamera(f.left, f.right, f.top, f.bottom, f.near, f.far);
                    break;
                case "AmbientLight":
                    c = new THREE.AmbientLight(f.color);
                    break;
                case "DirectionalLight":
                    c = new THREE.DirectionalLight(f.color, f.intensity);
                    break;
                case "PointLight":
                    c = new THREE.PointLight(f.color, f.intensity, f.distance);
                    break;
                case "SpotLight":
                    c = new THREE.SpotLight(f.color, f.intensity, f.distance, f.angle, f.exponent);
                    break;
                case "HemisphereLight":
                    c = new THREE.HemisphereLight(f.color, f.groundColor, f.intensity);
                    break;
                case "Mesh":
                    var g = e[f.geometry];
                    var d = b[f.material];
                    if (g === undefined) {
                        console.warn("THREE.ObjectLoader: Undefined geometry", f.geometry)
                    }
                    if (d === undefined) {
                        console.warn("THREE.ObjectLoader: Undefined material", f.material)
                    }
                    c = new THREE.Mesh(g, d);
                    break;
                case "Line":
                    var g = e[f.geometry];
                    var d = b[f.material];
                    if (g === undefined) {
                        console.warn("THREE.ObjectLoader: Undefined geometry", f.geometry)
                    }
                    if (d === undefined) {
                        console.warn("THREE.ObjectLoader: Undefined material", f.material)
                    }
                    c = new THREE.Line(g, d);
                    break;
                case "Sprite":
                    var d = b[f.material];
                    if (d === undefined) {
                        console.warn("THREE.ObjectLoader: Undefined material", f.material)
                    }
                    c = new THREE.Sprite(d);
                    break;
                case "Group":
                    c = new THREE.Group();
                    break;
                default:
                    c = new THREE.Object3D()
            }
            c.uuid = f.uuid;
            if (f.name !== undefined) {
                c.name = f.name
            }
            if (f.matrix !== undefined) {
                a.fromArray(f.matrix);
                a.decompose(c.position, c.quaternion, c.scale)
            } else {
                if (f.position !== undefined) {
                    c.position.fromArray(f.position)
                }
                if (f.rotation !== undefined) {
                    c.rotation.fromArray(f.rotation)
                }
                if (f.scale !== undefined) {
                    c.scale.fromArray(f.scale)
                }
            }
            if (f.visible !== undefined) {
                c.visible = f.visible
            }
            if (f.userData !== undefined) {
                c.userData = f.userData
            }
            if (f.children !== undefined) {
                for (var h in f.children) {
                    c.add(this.parseObject(f.children[h], e, b))
                }
            }
            return c
        }
    }()
};
THREE.TextureLoader = function(a) {
    this.manager = (a !== undefined) ? a : THREE.DefaultLoadingManager
};
THREE.TextureLoader.prototype = {
    constructor: THREE.TextureLoader,
    load: function(b, d, f, e) {
        var c = this;
        var a = new THREE.ImageLoader(c.manager);
        a.setCrossOrigin(this.crossOrigin);
        a.load(b, function(h) {
            var g = new THREE.Texture(h);
            g.needsUpdate = true;
            if (d !== undefined) {
                d(g)
            }
        }, f, e)
    },
    setCrossOrigin: function(a) {
        this.crossOrigin = a
    }
};
THREE.DataTextureLoader = THREE.BinaryTextureLoader = function() {
    this._parser = null
};
THREE.BinaryTextureLoader.prototype = {
    constructor: THREE.BinaryTextureLoader,
    load: function(b, d, g, f) {
        var c = this;
        var e = new THREE.DataTexture();
        var a = new THREE.XHRLoader();
        a.setResponseType("arraybuffer");
        a.load(b, function(h) {
            var i = c._parser(h);
            if (!i) {
                return
            }
            if (undefined !== i.image) {
                e.image = i.image
            } else {
                if (undefined !== i.data) {
                    e.image.width = i.width;
                    e.image.height = i.height;
                    e.image.data = i.data
                }
            }
            e.wrapS = undefined !== i.wrapS ? i.wrapS : THREE.ClampToEdgeWrapping;
            e.wrapT = undefined !== i.wrapT ? i.wrapT : THREE.ClampToEdgeWrapping;
            e.magFilter = undefined !== i.magFilter ? i.magFilter : THREE.LinearFilter;
            e.minFilter = undefined !== i.minFilter ? i.minFilter : THREE.LinearMipMapLinearFilter;
            e.anisotropy = undefined !== i.anisotropy ? i.anisotropy : 1;
            if (undefined !== i.format) {
                e.format = i.format
            }
            if (undefined !== i.type) {
                e.type = i.type
            }
            if (undefined !== i.mipmaps) {
                e.mipmaps = i.mipmaps
            }
            if (1 === i.mipmapCount) {
                e.minFilter = THREE.LinearFilter
            }
            e.needsUpdate = true;
            if (d) {
                d(e, i)
            }
        }, g, f);
        return e
    }
};
THREE.CompressedTextureLoader = function() {
    this._parser = null
};
THREE.CompressedTextureLoader.prototype = {
    constructor: THREE.CompressedTextureLoader,
    load: function(a, g, d) {
        var l = this;
        var h = [];
        var e = new THREE.CompressedTexture();
        e.image = h;
        var k = new THREE.XHRLoader();
        k.setResponseType("arraybuffer");
        if (a instanceof Array) {
            var c = 0;
            var f = function(m) {
                k.load(a[m], function(i) {
                    var n = l._parser(i, true);
                    h[m] = {
                        width: n.width,
                        height: n.height,
                        format: n.format,
                        mipmaps: n.mipmaps
                    };
                    c += 1;
                    if (c === 6) {
                        if (n.mipmapCount == 1) {
                            e.minFilter = THREE.LinearFilter
                        }
                        e.format = n.format;
                        e.needsUpdate = true;
                        if (g) {
                            g(e)
                        }
                    }
                })
            };
            for (var b = 0, j = a.length; b < j;
                ++b) {
                f(b)
            }
        } else {
            k.load(a, function(n) {
                var q = l._parser(n, true);
                if (q.isCubemap) {
                    var m = q.mipmaps.length / q.mipmapCount;
                    for (var p = 0; p < m; p++) {
                        h[p] = {
                            mipmaps: []
                        };
                        for (var o = 0; o < q.mipmapCount; o++) {
                            h[p].mipmaps.push(q.mipmaps[p * q.mipmapCount + o]);
                            h[p].format = q.format;
                            h[p].width = q.width;
                            h[p].height = q.height
                        }
                    }
                } else {
                    e.image.width = q.width;
                    e.image.height = q.height;
                    e.mipmaps = q.mipmaps
                }
                if (q.mipmapCount === 1) {
                    e.minFilter = THREE.LinearFilter
                }
                e.format = q.format;
                e.needsUpdate = true;
                if (g) {
                    g(e)
                }
            })
        }
        return e
    }
};
THREE.Material = function() {
    Object.defineProperty(this, "id", {
        value: THREE.MaterialIdCount++
    });
    this.uuid = THREE.Math.generateUUID();
    this.name = "";
    this.type = "Material";
    this.side = THREE.FrontSide;
    this.opacity = 1;
    this.transparent = false;
    this.blending = THREE.NormalBlending;
    this.blendSrc = THREE.SrcAlphaFactor;
    this.blendDst = THREE.OneMinusSrcAlphaFactor;
    this.blendEquation = THREE.AddEquation;
    this.depthTest = true;
    this.depthWrite = true;
    this.polygonOffset = false;
    this.polygonOffsetFactor = 0;
    this.polygonOffsetUnits = 0;
    this.alphaTest = 0;
    this.overdraw = 0;
    this.visible = true;
    this.needsUpdate = true
};
THREE.Material.prototype = {
    constructor: THREE.Material,
    setValues: function(a) {
        if (a === undefined) {
            return
        }
        for (var b in a) {
            var d = a[b];
            if (d === undefined) {
                console.warn("THREE.Material: '" + b + "' parameter is undefined.");
                continue
            }
            if (b in this) {
                var c = this[b];
                if (c instanceof THREE.Color) {
                    c.set(d)
                } else {
                    if (c instanceof THREE.Vector3 && d instanceof THREE.Vector3) {
                        c.copy(d)
                    } else {
                        if (b == "overdraw") {
                            this[b] = Number(d)
                        } else {
                            this[b] = d
                        }
                    }
                }
            }
        }
    },
    toJSON: function() {
        var a = {
            metadata: {
                version: 4.2,
                type: "material",
                generator: "MaterialExporter"
            },
            uuid: this.uuid,
            type: this.type
        };
        if (this.name !== "") {
            a.name = this.name
        }
        if (this instanceof THREE.MeshBasicMaterial) {
            a.color = this.color.getHex();
            if (this.vertexColors !== THREE.NoColors) {
                a.vertexColors = this.vertexColors
            }
            if (this.blending !== THREE.NormalBlending) {
                a.blending = this.blending
            }
            if (this.side !== THREE.FrontSide) {
                a.side = this.side
            }
        } else {
            if (this instanceof THREE.MeshLambertMaterial) {
                a.color = this.color.getHex();
                a.ambient = this.ambient.getHex();
                a.emissive = this.emissive.getHex();
                if (this.vertexColors !== THREE.NoColors) {
                    a.vertexColors = this.vertexColors
                }
                if (this.blending !== THREE.NormalBlending) {
                    a.blending = this.blending
                }
                if (this.side !== THREE.FrontSide) {
                    a.side = this.side
                }
            } else {
                if (this instanceof THREE.MeshPhongMaterial) {
                    a.color = this.color.getHex();
                    a.ambient = this.ambient.getHex();
                    a.emissive = this.emissive.getHex();
                    a.specular = this.specular.getHex();
                    a.shininess = this.shininess;
                    if (this.vertexColors !== THREE.NoColors) {
                        a.vertexColors = this.vertexColors
                    }
                    if (this.blending !== THREE.NormalBlending) {
                        a.blending = this.blending
                    }
                    if (this.side !== THREE.FrontSide) {
                        a.side = this.side
                    }
                } else {
                    if (this instanceof THREE.MeshNormalMaterial) {
                        if (this.shading !== THREE.FlatShading) {
                            a.shading = this.shading
                        }
                        if (this.blending !== THREE.NormalBlending) {
                            a.blending = this.blending
                        }
                        if (this.side !== THREE.FrontSide) {
                            a.side = this.side
                        }
                    } else {
                        if (this instanceof THREE.MeshDepthMaterial) {
                            if (this.blending !== THREE.NormalBlending) {
                                a.blending = this.blending
                            }
                            if (this.side !== THREE.FrontSide) {
                                a.side = this.side
                            }
                        } else {
                            if (this instanceof THREE.ShaderMaterial) {
                                a.uniforms = this.uniforms;
                                a.vertexShader = this.vertexShader;
                                a.fragmentShader = this.fragmentShader
                            } else {
                                if (this instanceof THREE.SpriteMaterial) {
                                    a.color = this.color.getHex()
                                }
                            }
                        }
                    }
                }
            }
        }
        if (this.opacity < 1) {
            a.opacity = this.opacity
        }
        if (this.transparent !== false) {
            a.transparent = this.transparent
        }
        if (this.wireframe !== false) {
            a.wireframe = this.wireframe
        }
        return a
    },
    clone: function(a) {
        if (a === undefined) {
            a = new THREE.Material()
        }
        a.name = this.name;
        a.side = this.side;
        a.opacity = this.opacity;
        a.transparent = this.transparent;
        a.blending = this.blending;
        a.blendSrc = this.blendSrc;
        a.blendDst = this.blendDst;
        a.blendEquation = this.blendEquation;
        a.depthTest = this.depthTest;
        a.depthWrite = this.depthWrite;
        a.polygonOffset = this.polygonOffset;
        a.polygonOffsetFactor = this.polygonOffsetFactor;
        a.polygonOffsetUnits = this.polygonOffsetUnits;
        a.alphaTest = this.alphaTest;
        a.overdraw = this.overdraw;
        a.visible = this.visible;
        return a
    },
    dispose: function() {
        this.dispatchEvent({
            type: "dispose"
        })
    }
};
THREE.EventDispatcher.prototype.apply(THREE.Material.prototype);
THREE.MaterialIdCount = 0;
THREE.LineBasicMaterial = function(a) {
    THREE.Material.call(this);
    this.type = "LineBasicMaterial";
    this.color = new THREE.Color(16777215);
    this.linewidth = 1;
    this.linecap = "round";
    this.linejoin = "round";
    this.vertexColors = THREE.NoColors;
    this.fog = true;
    this.setValues(a)
};
THREE.LineBasicMaterial.prototype = Object.create(THREE.Material.prototype);
THREE.LineBasicMaterial.prototype.constructor = THREE.LineBasicMaterial;
THREE.LineBasicMaterial.prototype.clone = function() {
    var a = new THREE.LineBasicMaterial();
    THREE.Material.prototype.clone.call(this, a);
    a.color.copy(this.color);
    a.linewidth = this.linewidth;
    a.linecap = this.linecap;
    a.linejoin = this.linejoin;
    a.vertexColors = this.vertexColors;
    a.fog = this.fog;
    return a
};
THREE.LineDashedMaterial = function(a) {
    THREE.Material.call(this);
    this.type = "LineDashedMaterial";
    this.color = new THREE.Color(16777215);
    this.linewidth = 1;
    this.scale = 1;
    this.dashSize = 3;
    this.gapSize = 1;
    this.vertexColors = false;
    this.fog = true;
    this.setValues(a)
};
THREE.LineDashedMaterial.prototype = Object.create(THREE.Material.prototype);
THREE.LineDashedMaterial.prototype.constructor = THREE.LineDashedMaterial;
THREE.LineDashedMaterial.prototype.clone = function() {
    var a = new THREE.LineDashedMaterial();
    THREE.Material.prototype.clone.call(this, a);
    a.color.copy(this.color);
    a.linewidth = this.linewidth;
    a.scale = this.scale;
    a.dashSize = this.dashSize;
    a.gapSize = this.gapSize;
    a.vertexColors = this.vertexColors;
    a.fog = this.fog;
    return a
};
THREE.MeshBasicMaterial = function(a) {
    THREE.Material.call(this);
    this.type = "MeshBasicMaterial";
    this.color = new THREE.Color(16777215);
    this.map = null;
    this.lightMap = null;
    this.specularMap = null;
    this.alphaMap = null;
    this.envMap = null;
    this.combine = THREE.MultiplyOperation;
    this.reflectivity = 1;
    this.refractionRatio = 0.98;
    this.fog = true;
    this.shading = THREE.SmoothShading;
    this.wireframe = false;
    this.wireframeLinewidth = 1;
    this.wireframeLinecap = "round";
    this.wireframeLinejoin = "round";
    this.vertexColors = THREE.NoColors;
    this.skinning = false;
    this.morphTargets = false;
    this.setValues(a)
};
THREE.MeshBasicMaterial.prototype = Object.create(THREE.Material.prototype);
THREE.MeshBasicMaterial.prototype.constructor = THREE.MeshBasicMaterial;
THREE.MeshBasicMaterial.prototype.clone = function() {
    var a = new THREE.MeshBasicMaterial();
    THREE.Material.prototype.clone.call(this, a);
    a.color.copy(this.color);
    a.map = this.map;
    a.lightMap = this.lightMap;
    a.specularMap = this.specularMap;
    a.alphaMap = this.alphaMap;
    a.envMap = this.envMap;
    a.combine = this.combine;
    a.reflectivity = this.reflectivity;
    a.refractionRatio = this.refractionRatio;
    a.fog = this.fog;
    a.shading = this.shading;
    a.wireframe = this.wireframe;
    a.wireframeLinewidth = this.wireframeLinewidth;
    a.wireframeLinecap = this.wireframeLinecap;
    a.wireframeLinejoin = this.wireframeLinejoin;
    a.vertexColors = this.vertexColors;
    a.skinning = this.skinning;
    a.morphTargets = this.morphTargets;
    return a
};
THREE.MeshLambertMaterial = function(a) {
    THREE.Material.call(this);
    this.type = "MeshLambertMaterial";
    this.color = new THREE.Color(16777215);
    this.ambient = new THREE.Color(16777215);
    this.emissive = new THREE.Color(0);
    this.wrapAround = false;
    this.wrapRGB = new THREE.Vector3(1, 1, 1);
    this.map = null;
    this.lightMap = null;
    this.specularMap = null;
    this.alphaMap = null;
    this.envMap = null;
    this.combine = THREE.MultiplyOperation;
    this.reflectivity = 1;
    this.refractionRatio = 0.98;
    this.fog = true;
    this.shading = THREE.SmoothShading;
    this.wireframe = false;
    this.wireframeLinewidth = 1;
    this.wireframeLinecap = "round";
    this.wireframeLinejoin = "round";
    this.vertexColors = THREE.NoColors;
    this.skinning = false;
    this.morphTargets = false;
    this.morphNormals = false;
    this.setValues(a)
};
THREE.MeshLambertMaterial.prototype = Object.create(THREE.Material.prototype);
THREE.MeshLambertMaterial.prototype.constructor = THREE.MeshLambertMaterial;
THREE.MeshLambertMaterial.prototype.clone = function() {
    var a = new THREE.MeshLambertMaterial();
    THREE.Material.prototype.clone.call(this, a);
    a.color.copy(this.color);
    a.ambient.copy(this.ambient);
    a.emissive.copy(this.emissive);
    a.wrapAround = this.wrapAround;
    a.wrapRGB.copy(this.wrapRGB);
    a.map = this.map;
    a.lightMap = this.lightMap;
    a.specularMap = this.specularMap;
    a.alphaMap = this.alphaMap;
    a.envMap = this.envMap;
    a.combine = this.combine;
    a.reflectivity = this.reflectivity;
    a.refractionRatio = this.refractionRatio;
    a.fog = this.fog;
    a.shading = this.shading;
    a.wireframe = this.wireframe;
    a.wireframeLinewidth = this.wireframeLinewidth;
    a.wireframeLinecap = this.wireframeLinecap;
    a.wireframeLinejoin = this.wireframeLinejoin;
    a.vertexColors = this.vertexColors;
    a.skinning = this.skinning;
    a.morphTargets = this.morphTargets;
    a.morphNormals = this.morphNormals;
    return a
};
THREE.MeshPhongMaterial = function(a) {
    THREE.Material.call(this);
    this.type = "MeshPhongMaterial";
    this.color = new THREE.Color(16777215);
    this.ambient = new THREE.Color(16777215);
    this.emissive = new THREE.Color(0);
    this.specular = new THREE.Color(1118481);
    this.shininess = 30;
    this.metal = false;
    this.wrapAround = false;
    this.wrapRGB = new THREE.Vector3(1, 1, 1);
    this.map = null;
    this.lightMap = null;
    this.bumpMap = null;
    this.bumpScale = 1;
    this.normalMap = null;
    this.normalScale = new THREE.Vector2(1, 1);
    this.specularMap = null;
    this.alphaMap = null;
    this.envMap = null;
    this.combine = THREE.MultiplyOperation;
    this.reflectivity = 1;
    this.refractionRatio = 0.98;
    this.fog = true;
    this.shading = THREE.SmoothShading;
    this.wireframe = false;
    this.wireframeLinewidth = 1;
    this.wireframeLinecap = "round";
    this.wireframeLinejoin = "round";
    this.vertexColors = THREE.NoColors;
    this.skinning = false;
    this.morphTargets = false;
    this.morphNormals = false;
    this.setValues(a)
};
THREE.MeshPhongMaterial.prototype = Object.create(THREE.Material.prototype);
THREE.MeshPhongMaterial.prototype.constructor = THREE.MeshPhongMaterial;
THREE.MeshPhongMaterial.prototype.clone = function() {
    var a = new THREE.MeshPhongMaterial();
    THREE.Material.prototype.clone.call(this, a);
    a.color.copy(this.color);
    a.ambient.copy(this.ambient);
    a.emissive.copy(this.emissive);
    a.specular.copy(this.specular);
    a.shininess = this.shininess;
    a.metal = this.metal;
    a.wrapAround = this.wrapAround;
    a.wrapRGB.copy(this.wrapRGB);
    a.map = this.map;
    a.lightMap = this.lightMap;
    a.bumpMap = this.bumpMap;
    a.bumpScale = this.bumpScale;
    a.normalMap = this.normalMap;
    a.normalScale.copy(this.normalScale);
    a.specularMap = this.specularMap;
    a.alphaMap = this.alphaMap;
    a.envMap = this.envMap;
    a.combine = this.combine;
    a.reflectivity = this.reflectivity;
    a.refractionRatio = this.refractionRatio;
    a.fog = this.fog;
    a.shading = this.shading;
    a.wireframe = this.wireframe;
    a.wireframeLinewidth = this.wireframeLinewidth;
    a.wireframeLinecap = this.wireframeLinecap;
    a.wireframeLinejoin = this.wireframeLinejoin;
    a.vertexColors = this.vertexColors;
    a.skinning = this.skinning;
    a.morphTargets = this.morphTargets;
    a.morphNormals = this.morphNormals;
    return a
};
THREE.MeshDepthMaterial = function(a) {
    THREE.Material.call(this);
    this.type = "MeshDepthMaterial";
    this.morphTargets = false;
    this.wireframe = false;
    this.wireframeLinewidth = 1;
    this.setValues(a)
};
THREE.MeshDepthMaterial.prototype = Object.create(THREE.Material.prototype);
THREE.MeshDepthMaterial.prototype.constructor = THREE.MeshDepthMaterial;
THREE.MeshDepthMaterial.prototype.clone = function() {
    var a = new THREE.MeshDepthMaterial();
    THREE.Material.prototype.clone.call(this, a);
    a.wireframe = this.wireframe;
    a.wireframeLinewidth = this.wireframeLinewidth;
    return a
};
THREE.MeshNormalMaterial = function(a) {
    THREE.Material.call(this, a);
    this.type = "MeshNormalMaterial";
    this.shading = THREE.FlatShading;
    this.wireframe = false;
    this.wireframeLinewidth = 1;
    this.morphTargets = false;
    this.setValues(a)
};
THREE.MeshNormalMaterial.prototype = Object.create(THREE.Material.prototype);
THREE.MeshNormalMaterial.prototype.constructor = THREE.MeshNormalMaterial;
THREE.MeshNormalMaterial.prototype.clone = function() {
    var a = new THREE.MeshNormalMaterial();
    THREE.Material.prototype.clone.call(this, a);
    a.shading = this.shading;
    a.wireframe = this.wireframe;
    a.wireframeLinewidth = this.wireframeLinewidth;
    return a
};
THREE.MeshFaceMaterial = function(a) {
    this.uuid = THREE.Math.generateUUID();
    this.type = "MeshFaceMaterial";
    this.materials = a instanceof Array ? a : []
};
THREE.MeshFaceMaterial.prototype = {
    constructor: THREE.MeshFaceMaterial,
    toJSON: function() {
        var b = {
            metadata: {
                version: 4.2,
                type: "material",
                generator: "MaterialExporter"
            },
            uuid: this.uuid,
            type: this.type,
            materials: []
        };
        for (var c = 0, a = this.materials.length; c < a; c++) {
            b.materials.push(this.materials[c].toJSON())
        }
        return b
    },
    clone: function() {
        var b = new THREE.MeshFaceMaterial();
        for (var a = 0; a < this.materials.length; a++) {
            b.materials.push(this.materials[a].clone())
        }
        return b
    }
};
THREE.PointCloudMaterial = function(a) {
    THREE.Material.call(this);
    this.type = "PointCloudMaterial";
    this.color = new THREE.Color(16777215);
    this.map = null;
    this.size = 1;
    this.sizeAttenuation = true;
    this.vertexColors = THREE.NoColors;
    this.fog = true;
    this.setValues(a)
};
THREE.PointCloudMaterial.prototype = Object.create(THREE.Material.prototype);
THREE.PointCloudMaterial.prototype.constructor = THREE.PointCloudMaterial;
THREE.PointCloudMaterial.prototype.clone = function() {
    var a = new THREE.PointCloudMaterial();
    THREE.Material.prototype.clone.call(this, a);
    a.color.copy(this.color);
    a.map = this.map;
    a.size = this.size;
    a.sizeAttenuation = this.sizeAttenuation;
    a.vertexColors = this.vertexColors;
    a.fog = this.fog;
    return a
};
THREE.ParticleBasicMaterial = function(a) {
    console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointCloudMaterial.");
    return new THREE.PointCloudMaterial(a)
};
THREE.ParticleSystemMaterial = function(a) {
    console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointCloudMaterial.");
    return new THREE.PointCloudMaterial(a)
};
THREE.ShaderMaterial = function(a) {
    THREE.Material.call(this);
    this.type = "ShaderMaterial";
    this.defines = {};
    this.uniforms = {};
    this.attributes = null;
    this.vertexShader = "void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}";
    this.fragmentShader = "void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";
    this.shading = THREE.SmoothShading;
    this.linewidth = 1;
    this.wireframe = false;
    this.wireframeLinewidth = 1;
    this.fog = false;
    this.lights = false;
    this.vertexColors = THREE.NoColors;
    this.skinning = false;
    this.morphTargets = false;
    this.morphNormals = false;
    this.defaultAttributeValues = {
        color: [1, 1, 1],
        uv: [0, 0],
        uv2: [0, 0]
    };
    this.index0AttributeName = undefined;
    this.setValues(a)
};
THREE.ShaderMaterial.prototype = Object.create(THREE.Material.prototype);
THREE.ShaderMaterial.prototype.constructor = THREE.ShaderMaterial;
THREE.ShaderMaterial.prototype.clone = function() {
    var a = new THREE.ShaderMaterial();
    THREE.Material.prototype.clone.call(this, a);
    a.fragmentShader = this.fragmentShader;
    a.vertexShader = this.vertexShader;
    a.uniforms = THREE.UniformsUtils.clone(this.uniforms);
    a.attributes = this.attributes;
    a.defines = this.defines;
    a.shading = this.shading;
    a.wireframe = this.wireframe;
    a.wireframeLinewidth = this.wireframeLinewidth;
    a.fog = this.fog;
    a.lights = this.lights;
    a.vertexColors = this.vertexColors;
    a.skinning = this.skinning;
    a.morphTargets = this.morphTargets;
    a.morphNormals = this.morphNormals;
    return a
};
THREE.RawShaderMaterial = function(a) {
    THREE.ShaderMaterial.call(this, a);
    this.type = "RawShaderMaterial"
};
THREE.RawShaderMaterial.prototype = Object.create(THREE.ShaderMaterial.prototype);
THREE.RawShaderMaterial.prototype.constructor = THREE.RawShaderMaterial;
THREE.RawShaderMaterial.prototype.clone = function() {
    var a = new THREE.RawShaderMaterial();
    THREE.ShaderMaterial.prototype.clone.call(this, a);
    return a
};
THREE.SpriteMaterial = function(a) {
    THREE.Material.call(this);
    this.type = "SpriteMaterial";
    this.color = new THREE.Color(16777215);
    this.map = null;
    this.rotation = 0;
    this.fog = false;
    this.setValues(a)
};
THREE.SpriteMaterial.prototype = Object.create(THREE.Material.prototype);
THREE.SpriteMaterial.prototype.constructor = THREE.SpriteMaterial;
THREE.SpriteMaterial.prototype.clone = function() {
    var a = new THREE.SpriteMaterial();
    THREE.Material.prototype.clone.call(this, a);
    a.color.copy(this.color);
    a.map = this.map;
    a.rotation = this.rotation;
    a.fog = this.fog;
    return a
};
THREE.Texture = function(d, b, f, e, i, c, h, g, a) {
    Object.defineProperty(this, "id", {
        value: THREE.TextureIdCount++
    });
    this.uuid = THREE.Math.generateUUID();
    this.name = "";
    this.image = d !== undefined ? d : THREE.Texture.DEFAULT_IMAGE;
    this.mipmaps = [];
    this.mapping = b !== undefined ? b : THREE.Texture.DEFAULT_MAPPING;
    this.wrapS = f !== undefined ? f : THREE.ClampToEdgeWrapping;
    this.wrapT = e !== undefined ? e : THREE.ClampToEdgeWrapping;
    this.magFilter = i !== undefined ? i : THREE.LinearFilter;
    this.minFilter = c !== undefined ? c : THREE.LinearMipMapLinearFilter;
    this.anisotropy = a !== undefined ? a : 1;
    this.format = h !== undefined ? h : THREE.RGBAFormat;
    this.type = g !== undefined ? g : THREE.UnsignedByteType;
    this.offset = new THREE.Vector2(0, 0);
    this.repeat = new THREE.Vector2(1, 1);
    this.generateMipmaps = true;
    this.premultiplyAlpha = false;
    this.flipY = true;
    this.unpackAlignment = 4;
    this._needsUpdate = false;
    this.onUpdate = null
};
THREE.Texture.DEFAULT_IMAGE = undefined;
THREE.Texture.DEFAULT_MAPPING = THREE.UVMapping;
THREE.Texture.prototype = {
    constructor: THREE.Texture,
    get needsUpdate() {
        return this._needsUpdate
    },
    set needsUpdate(a) {
        if (a === true) {
            this.update()
        }
        this._needsUpdate = a
    },
    clone: function(a) {
        if (a === undefined) {
            a = new THREE.Texture()
        }
        a.image = this.image;
        a.mipmaps = this.mipmaps.slice(0);
        a.mapping = this.mapping;
        a.wrapS = this.wrapS;
        a.wrapT = this.wrapT;
        a.magFilter = this.magFilter;
        a.minFilter = this.minFilter;
        a.anisotropy = this.anisotropy;
        a.format = this.format;
        a.type = this.type;
        a.offset.copy(this.offset);
        a.repeat.copy(this.repeat);
        a.generateMipmaps = this.generateMipmaps;
        a.premultiplyAlpha = this.premultiplyAlpha;
        a.flipY = this.flipY;
        a.unpackAlignment = this.unpackAlignment;
        return a
    },
    update: function() {
        this.dispatchEvent({
            type: "update"
        })
    },
    dispose: function() {
        this.dispatchEvent({
            type: "dispose"
        })
    }
};
THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype);
THREE.TextureIdCount = 0;
THREE.CubeTexture = function(g, b, e, d, i, c, h, f, a) {
    b = b !== undefined ? b : THREE.CubeReflectionMapping;
    THREE.Texture.call(this, g, b, e, d, i, c, h, f, a);
    this.images = g
};
THREE.CubeTexture.prototype = Object.create(THREE.Texture.prototype);
THREE.CubeTexture.prototype.constructor = THREE.CubeTexture;
THREE.CubeTexture.clone = function(a) {
    if (a === undefined) {
        a = new THREE.CubeTexture()
    }
    THREE.Texture.prototype.clone.call(this, a);
    a.images = this.images;
    return a
};
THREE.CompressedTexture = function(e, d, k, i, h, b, g, f, j, c, a) {
    THREE.Texture.call(this, null, b, g, f, j, c, i, h, a);
    this.image = {
        width: d,
        height: k
    };
    this.mipmaps = e;
    this.flipY = false;
    this.generateMipmaps = false
};
THREE.CompressedTexture.prototype = Object.create(THREE.Texture.prototype);
THREE.CompressedTexture.prototype.constructor = THREE.CompressedTexture;
THREE.CompressedTexture.prototype.clone = function() {
    var a = new THREE.CompressedTexture();
    THREE.Texture.prototype.clone.call(this, a);
    return a
};
THREE.DataTexture = function(f, d, k, i, h, b, g, e, j, c, a) {
    THREE.Texture.call(this, null, b, g, e, j, c, i, h, a);
    this.image = {
        data: f,
        width: d,
        height: k
    }
};
THREE.DataTexture.prototype = Object.create(THREE.Texture.prototype);
THREE.DataTexture.prototype.constructor = THREE.DataTexture;
THREE.DataTexture.prototype.clone = function() {
    var a = new THREE.DataTexture();
    THREE.Texture.prototype.clone.call(this, a);
    return a
};
THREE.VideoTexture = function(c, b, g, f, j, d, i, h, a) {
    THREE.Texture.call(this, c, b, g, f, j, d, i, h, a);
    this.generateMipmaps = false;
    var k = this;
    var e = function() {
        requestAnimationFrame(e);
        if (c.readyState === c.HAVE_ENOUGH_DATA) {
            k.needsUpdate = true
        }
    };
    e()
};
THREE.VideoTexture.prototype = Object.create(THREE.Texture.prototype);
THREE.VideoTexture.prototype.constructor = THREE.VideoTexture;
THREE.Group = function() {
    THREE.Object3D.call(this);
    this.type = "Group"
};
THREE.Group.prototype = Object.create(THREE.Object3D.prototype);
THREE.Group.prototype.constructor = THREE.Group;
THREE.PointCloud = function(b, a) {
    THREE.Object3D.call(this);
    this.type = "PointCloud";
    this.geometry = b !== undefined ? b : new THREE.Geometry();
    this.material = a !== undefined ? a : new THREE.PointCloudMaterial({
        color: Math.random() * 16777215
    })
};
THREE.PointCloud.prototype = Object.create(THREE.Object3D.prototype);
THREE.PointCloud.prototype.constructor = THREE.PointCloud;
THREE.PointCloud.prototype.raycast = (function() {
    var b = new THREE.Matrix4();
    var a = new THREE.Ray();
    return function(u, c) {
        var D = this;
        var g = D.geometry;
        var e = u.params.PointCloud.threshold;
        b.getInverse(this.matrixWorld);
        a.copy(u.ray).applyMatrix4(b);
        if (g.boundingBox !== null) {
            if (a.isIntersectionBox(g.boundingBox) === false) {
                return
            }
        }
        var d = e / ((this.scale.x + this.scale.y + this.scale.z) / 3);
        var C = new THREE.Vector3();
        var s = function(i, F) {
            var H = a.distanceToPoint(i);
            if (H < d) {
                var E = a.closestPointToPoint(i);
                E.applyMatrix4(D.matrixWorld);
                var G = u.ray.origin.distanceTo(E);
                c.push({
                    distance: G,
                    distanceToRay: H,
                    point: E.clone(),
                    index: F,
                    face: null,
                    object: D
                })
            }
        };
        if (g instanceof THREE.BufferGeometry) {
            var p = g.attributes;
            var o = p.position.array;
            if (p.index !== undefined) {
                var h = p.index.array;
                var k = g.offsets;
                if (k.length === 0) {
                    var j = {
                        start: 0,
                        count: h.length,
                        index: 0
                    };
                    k = [j]
                }
                for (var t = 0, r = k.length; t < r; ++t) {
                    var f = k[t].start;
                    var n = k[t].count;
                    var m = k[t].index;
                    for (var v = f, q = f + n; v < q; v++) {
                        var B = m + h[v];
                        C.fromArray(o, B * 3);
                        s(C, B)
                    }
                }
            } else {
                var A = o.length / 3;
                for (var v = 0; v < A; v++) {
                    C.set(o[3 * v], o[3 * v + 1], o[3 * v + 2]);
                    s(C, v)
                }
            }
        } else {
            var l = this.geometry.vertices;
            for (var v = 0; v < l.length; v++) {
                s(l[v], v)
            }
        }
    }
}());
THREE.PointCloud.prototype.clone = function(a) {
    if (a === undefined) {
        a = new THREE.PointCloud(this.geometry, this.material)
    }
    THREE.Object3D.prototype.clone.call(this, a);
    return a
};
THREE.ParticleSystem = function(b, a) {
    console.warn("THREE.ParticleSystem has been renamed to THREE.PointCloud.");
    return new THREE.PointCloud(b, a)
};
THREE.Line = function(c, a, b) {
    THREE.Object3D.call(this);
    this.type = "Line";
    this.geometry = c !== undefined ? c : new THREE.Geometry();
    this.material = a !== undefined ? a : new THREE.LineBasicMaterial({
        color: Math.random() * 16777215
    });
    this.mode = (b !== undefined) ? b : THREE.LineStrip
};
THREE.LineStrip = 0;
THREE.LinePieces = 1;
THREE.Line.prototype = Object.create(THREE.Object3D.prototype);
THREE.Line.prototype.constructor = THREE.Line;
THREE.Line.prototype.raycast = (function() {
    var c = new THREE.Matrix4();
    var a = new THREE.Ray();
    var b = new THREE.Sphere();
    return function(u, e) {
        var B = u.linePrecision;
        var F = B * B;
        var j = this.geometry;
        if (j.boundingSphere === null) {
            j.computeBoundingSphere()
        }
        b.copy(j.boundingSphere);
        b.applyMatrix4(this.matrixWorld);
        if (u.ray.isIntersectionSphere(b) === false) {
            return
        }
        c.getInverse(this.matrixWorld);
        a.copy(u.ray).applyMatrix4(c);
        var G = new THREE.Vector3();
        var d = new THREE.Vector3();
        var k = new THREE.Vector3();
        var v = new THREE.Vector3();
        var o = this.mode === THREE.LineStrip ? 1 : 2;
        if (j instanceof THREE.BufferGeometry) {
            var s = j.attributes;
            if (s.index !== undefined) {
                var l = s.index.array;
                var r = s.position.array;
                var m = j.offsets;
                if (m.length === 0) {
                    m = [{
                        start: 0,
                        count: l.length,
                        index: 0
                    }]
                }
                for (var t = 0; t < m.length; t++) {
                    var h = m[t].start;
                    var q = m[t].count;
                    var p = m[t].index;
                    for (var A = h; A < h + q - 1; A += o) {
                        var D = p + l[A];
                        var C = p + l[A + 1];
                        G.fromArray(r, D * 3);
                        d.fromArray(r, C * 3);
                        var f = a.distanceSqToSegment(G, d, v, k);
                        if (f > F) {
                            continue
                        }
                        var g = a.origin.distanceTo(v);
                        if (g < u.near || g > u.far) {
                            continue
                        }
                        e.push({
                            distance: g,
                            point: k.clone().applyMatrix4(this.matrixWorld),
                            face: null,
                            faceIndex: null,
                            object: this
                        })
                    }
                }
            } else {
                var r = s.position.array;
                for (var A = 0; A < r.length / 3 - 1; A += o) {
                    G.fromArray(r, 3 * A);
                    d.fromArray(r, 3 * A + 3);
                    var f = a.distanceSqToSegment(G, d, v, k);
                    if (f > F) {
                        continue
                    }
                    var g = a.origin.distanceTo(v);
                    if (g < u.near || g > u.far) {
                        continue
                    }
                    e.push({
                        distance: g,
                        point: k.clone().applyMatrix4(this.matrixWorld),
                        face: null,
                        faceIndex: null,
                        object: this
                    })
                }
            }
        } else {
            if (j instanceof THREE.Geometry) {
                var n = j.vertices;
                var E = n.length;
                for (var A = 0; A < E - 1; A += o) {
                    var f = a.distanceSqToSegment(n[A], n[A + 1], v, k);
                    if (f > F) {
                        continue
                    }
                    var g = a.origin.distanceTo(v);
                    if (g < u.near || g > u.far) {
                        continue
                    }
                    e.push({
                        distance: g,
                        point: k.clone().applyMatrix4(this.matrixWorld),
                        face: null,
                        faceIndex: null,
                        object: this
                    })
                }
            }
        }
    }
}());
THREE.Line.prototype.clone = function(a) {
    if (a === undefined) {
        a = new THREE.Line(this.geometry, this.material, this.mode)
    }
    THREE.Object3D.prototype.clone.call(this, a);
    return a
};
THREE.Mesh = function(b, a) {
    THREE.Object3D.call(this);
    this.type = "Mesh";
    this.geometry = b !== undefined ? b : new THREE.Geometry();
    this.material = a !== undefined ? a : new THREE.MeshBasicMaterial({
        color: Math.random() * 16777215
    });
    this.updateMorphTargets()
};
THREE.Mesh.prototype = Object.create(THREE.Object3D.prototype);
THREE.Mesh.prototype.constructor = THREE.Mesh;
THREE.Mesh.prototype.updateMorphTargets = function() {
    if (this.geometry.morphTargets !== undefined && this.geometry.morphTargets.length > 0) {
        this.morphTargetBase = -1;
        this.morphTargetForcedOrder = [];
        this.morphTargetInfluences = [];
        this.morphTargetDictionary = {};
        for (var a = 0, b = this.geometry.morphTargets.length; a < b; a++) {
            this.morphTargetInfluences.push(0);
            this.morphTargetDictionary[this.geometry.morphTargets[a].name] = a
        }
    }
};
THREE.Mesh.prototype.getMorphTargetIndexByName = function(a) {
    if (this.morphTargetDictionary[a] !== undefined) {
        return this.morphTargetDictionary[a]
    }
    return 0
};
THREE.Mesh.prototype.raycast = (function() {
    var f = new THREE.Matrix4();
    var a = new THREE.Ray();
    var b = new THREE.Sphere();
    var e = new THREE.Vector3();
    var d = new THREE.Vector3();
    var c = new THREE.Vector3();
    return function(J, g) {
        var n = this.geometry;
        if (n.boundingSphere === null) {
            n.computeBoundingSphere()
        }
        b.copy(n.boundingSphere);
        b.applyMatrix4(this.matrixWorld);
        if (J.ray.isIntersectionSphere(b) === false) {
            return
        }
        f.getInverse(this.matrixWorld);
        a.copy(J.ray).applyMatrix4(f);
        if (n.boundingBox !== null) {
            if (a.isIntersectionBox(n.boundingBox) === false) {
                return
            }
        }
        if (n instanceof THREE.BufferGeometry) {
            var F = this.material;
            if (F === undefined) {
                return
            }
            var v = n.attributes;
            var V, T, S;
            var P = J.precision;
            if (v.index !== undefined) {
                var o = v.index.array;
                var u = v.position.array;
                var p = n.offsets;
                if (p.length === 0) {
                    p = [{
                        start: 0,
                        count: o.length,
                        index: 0
                    }]
                }
                for (var I = 0, E = p.length; I < E; ++I) {
                    var m = p[I].start;
                    var r = p[I].count;
                    var s = p[I].index;
                    for (var O = m, D = m + r; O < D; O += 3) {
                        V = s + o[O];
                        T = s + o[O + 1];
                        S = s + o[O + 2];
                        e.fromArray(u, V * 3);
                        d.fromArray(u, T * 3);
                        c.fromArray(u, S * 3);
                        if (F.side === THREE.BackSide) {
                            var N = a.intersectTriangle(c, d, e, true)
                        } else {
                            var N = a.intersectTriangle(e, d, c, F.side !== THREE.DoubleSide)
                        }
                        if (N === null) {
                            continue
                        }
                        N.applyMatrix4(this.matrixWorld);
                        var l = J.ray.origin.distanceTo(N);
                        if (l < P || l < J.near || l > J.far) {
                            continue
                        }
                        g.push({
                            distance: l,
                            point: N,
                            face: new THREE.Face3(V, T, S, THREE.Triangle.normal(e, d, c)),
                            faceIndex: null,
                            object: this
                        })
                    }
                }
            } else {
                var u = v.position.array;
                for (var O = 0, M = 0, D = u.length; O < D; O += 3, M += 9) {
                    V = O;
                    T = O + 1;
                    S = O + 2;
                    e.fromArray(u, M);
                    d.fromArray(u, M + 3);
                    c.fromArray(u, M + 6);
                    if (F.side === THREE.BackSide) {
                        var N = a.intersectTriangle(c, d, e, true)
                    } else {
                        var N = a.intersectTriangle(e, d, c, F.side !== THREE.DoubleSide)
                    }
                    if (N === null) {
                        continue
                    }
                    N.applyMatrix4(this.matrixWorld);
                    var l = J.ray.origin.distanceTo(N);
                    if (l < P || l < J.near || l > J.far) {
                        continue
                    }
                    g.push({
                        distance: l,
                        point: N,
                        face: new THREE.Face3(V, T, S, THREE.Triangle.normal(e, d, c)),
                        faceIndex: null,
                        object: this
                    })
                }
            }
        } else {
            if (n instanceof THREE.Geometry) {
                var h = this.material instanceof THREE.MeshFaceMaterial;
                var K = h === true ? this.material.materials : null;
                var V, T, S, R;
                var P = J.precision;
                var q = n.vertices;
                for (var Q = 0, B = n.faces.length; Q < B; Q++) {
                    var A = n.faces[Q];
                    var F = h === true ? K[A.materialIndex] : this.material;
                    if (F === undefined) {
                        continue
                    }
                    V = q[A.a];
                    T = q[A.b];
                    S = q[A.c];
                    if (F.morphTargets === true) {
                        var C = n.morphTargets;
                        var H = this.morphTargetInfluences;
                        e.set(0, 0, 0);
                        d.set(0, 0, 0);
                        c.set(0, 0, 0);
                        for (var G = 0, k = C.length; G < k; G++) {
                            var L = H[G];
                            if (L === 0) {
                                continue
                            }
                            var U = C[G].vertices;
                            e.x += (U[A.a].x - V.x) * L;
                            e.y += (U[A.a].y - V.y) * L;
                            e.z += (U[A.a].z - V.z) * L;
                            d.x += (U[A.b].x - T.x) * L;
                            d.y += (U[A.b].y - T.y) * L;
                            d.z += (U[A.b].z - T.z) * L;
                            c.x += (U[A.c].x - S.x) * L;
                            c.y += (U[A.c].y - S.y) * L;
                            c.z += (U[A.c].z - S.z) * L
                        }
                        e.add(V);
                        d.add(T);
                        c.add(S);
                        V = e;
                        T = d;
                        S = c
                    }
                    if (F.side === THREE.BackSide) {
                        var N = a.intersectTriangle(S, T, V, true)
                    } else {
                        var N = a.intersectTriangle(V, T, S, F.side !== THREE.DoubleSide)
                    }
                    if (N === null) {
                        continue
                    }
                    N.applyMatrix4(this.matrixWorld);
                    var l = J.ray.origin.distanceTo(N);
                    if (l < P || l < J.near || l > J.far) {
                        continue
                    }
                    g.push({
                        distance: l,
                        point: N,
                        face: A,
                        faceIndex: Q,
                        object: this
                    })
                }
            }
        }
    }
}());
THREE.Mesh.prototype.clone = function(b, a) {
    if (b === undefined) {
        b = new THREE.Mesh(this.geometry, this.material)
    }
    THREE.Object3D.prototype.clone.call(this, b, a);
    return b
};
THREE.Bone = function(a) {
    THREE.Object3D.call(this);
    this.skin = a
};
THREE.Bone.prototype = Object.create(THREE.Object3D.prototype);
THREE.Bone.prototype.constructor = THREE.Bone;
THREE.Skeleton = function(c, e, f) {
    this.useVertexTexture = f !== undefined ? f : true;
    this.identityMatrix = new THREE.Matrix4();
    c = c || [];
    this.bones = c.slice(0);
    if (this.useVertexTexture) {
        var d;
        if (this.bones.length > 256) {
            d = 64
        } else {
            if (this.bones.length > 64) {
                d = 32
            } else {
                if (this.bones.length > 16) {
                    d = 16
                } else {
                    d = 8
                }
            }
        }
        this.boneTextureWidth = d;
        this.boneTextureHeight = d;
        this.boneMatrices = new Float32Array(this.boneTextureWidth * this.boneTextureHeight * 4);
        this.boneTexture = new THREE.DataTexture(this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType);
        this.boneTexture.minFilter = THREE.NearestFilter;
        this.boneTexture.magFilter = THREE.NearestFilter;
        this.boneTexture.generateMipmaps = false;
        this.boneTexture.flipY = false
    } else {
        this.boneMatrices = new Float32Array(16 * this.bones.length)
    }
    if (e === undefined) {
        this.calculateInverses()
    } else {
        if (this.bones.length === e.length) {
            this.boneInverses = e.slice(0)
        } else {
            console.warn("THREE.Skeleton bonInverses is the wrong length.");
            this.boneInverses = [];
            for (var a = 0, g = this.bones.length; a < g; a++) {
                this.boneInverses.push(new THREE.Matrix4())
            }
        }
    }
};
THREE.Skeleton.prototype.calculateInverses = function() {
    this.boneInverses = [];
    for (var a = 0, d = this.bones.length; a < d; a++) {
        var c = new THREE.Matrix4();
        if (this.bones[a]) {
            c.getInverse(this.bones[a].matrixWorld)
        }
        this.boneInverses.push(c)
    }
};
THREE.Skeleton.prototype.pose = function() {
    var c;
    for (var a = 0, d = this.bones.length; a < d; a++) {
        c = this.bones[a];
        if (c) {
            c.matrixWorld.getInverse(this.boneInverses[a])
        }
    }
    for (var a = 0, d = this.bones.length; a < d; a++) {
        c = this.bones[a];
        if (c) {
            if (c.parent) {
                c.matrix.getInverse(c.parent.matrixWorld);
                c.matrix.multiply(c.matrixWorld)
            } else {
                c.matrix.copy(c.matrixWorld)
            }
            c.matrix.decompose(c.position, c.quaternion, c.scale)
        }
    }
};
THREE.Skeleton.prototype.update = (function() {
    var a = new THREE.Matrix4();
    return function() {
        for (var c = 0, e = this.bones.length; c < e; c++) {
            var d = this.bones[c] ? this.bones[c].matrixWorld : this.identityMatrix;
            a.multiplyMatrices(d, this.boneInverses[c]);
            a.flattenToArrayOffset(this.boneMatrices, c * 16)
        }
        if (this.useVertexTexture) {
            this.boneTexture.needsUpdate = true
        }
    }
})();
THREE.SkinnedMesh = function(i, g, f) {
    THREE.Mesh.call(this, i, g);
    this.type = "SkinnedMesh";
    this.bindMode = "attached";
    this.bindMatrix = new THREE.Matrix4();
    this.bindMatrixInverse = new THREE.Matrix4();
    var e = [];
    if (this.geometry && this.geometry.bones !== undefined) {
        var j, k, c, a, l;
        for (var h = 0, d = this.geometry.bones.length; h < d; ++h) {
            k = this.geometry.bones[h];
            c = k.pos;
            a = k.rotq;
            l = k.scl;
            j = new THREE.Bone(this);
            e.push(j);
            j.name = k.name;
            j.position.set(c[0], c[1], c[2]);
            j.quaternion.set(a[0], a[1], a[2], a[3]);
            if (l !== undefined) {
                j.scale.set(l[0], l[1], l[2])
            } else {
                j.scale.set(1, 1, 1)
            }
        }
        for (var h = 0, d = this.geometry.bones.length; h < d; ++h) {
            k = this.geometry.bones[h];
            if (k.parent !== -1) {
                e[k.parent].add(e[h])
            } else {
                this.add(e[h])
            }
        }
    }
    this.normalizeSkinWeights();
    this.updateMatrixWorld(true);
    this.bind(new THREE.Skeleton(e, undefined, f))
};
THREE.SkinnedMesh.prototype = Object.create(THREE.Mesh.prototype);
THREE.SkinnedMesh.prototype.constructor = THREE.SkinnedMesh;
THREE.SkinnedMesh.prototype.bind = function(b, a) {
    this.skeleton = b;
    if (a === undefined) {
        this.updateMatrixWorld(true);
        a = this.matrixWorld
    }
    this.bindMatrix.copy(a);
    this.bindMatrixInverse.getInverse(a)
};
THREE.SkinnedMesh.prototype.pose = function() {
    this.skeleton.pose()
};
THREE.SkinnedMesh.prototype.normalizeSkinWeights = function() {
    if (this.geometry instanceof THREE.Geometry) {
        for (var b = 0; b < this.geometry.skinIndices.length; b++) {
            var a = this.geometry.skinWeights[b];
            var c = 1 / a.lengthManhattan();
            if (c !== Infinity) {
                a.multiplyScalar(c)
            } else {
                a.set(1)
            }
        }
    } else {}
};
THREE.SkinnedMesh.prototype.updateMatrixWorld = function(a) {
    THREE.Mesh.prototype.updateMatrixWorld.call(this, true);
    if (this.bindMode === "attached") {
        this.bindMatrixInverse.getInverse(this.matrixWorld)
    } else {
        if (this.bindMode === "detached") {
            this.bindMatrixInverse.getInverse(this.bindMatrix)
        } else {
            console.warn("THREE.SkinnedMesh unreckognized bindMode: " + this.bindMode)
        }
    }
};
THREE.SkinnedMesh.prototype.clone = function(a) {
    if (a === undefined) {
        a = new THREE.SkinnedMesh(this.geometry, this.material, this.useVertexTexture)
    }
    THREE.Mesh.prototype.clone.call(this, a);
    return a
};
THREE.MorphAnimMesh = function(b, a) {
    THREE.Mesh.call(this, b, a);
    this.type = "MorphAnimMesh";
    this.duration = 1000;
    this.mirroredLoop = false;
    this.time = 0;
    this.lastKeyframe = 0;
    this.currentKeyframe = 0;
    this.direction = 1;
    this.directionBackwards = false;
    this.setFrameRange(0, this.geometry.morphTargets.length - 1)
};
THREE.MorphAnimMesh.prototype = Object.create(THREE.Mesh.prototype);
THREE.MorphAnimMesh.prototype.constructor = THREE.MorphAnimMesh;
THREE.MorphAnimMesh.prototype.setFrameRange = function(b, a) {
    this.startKeyframe = b;
    this.endKeyframe = a;
    this.length = this.endKeyframe - this.startKeyframe + 1
};
THREE.MorphAnimMesh.prototype.setDirectionForward = function() {
    this.direction = 1;
    this.directionBackwards = false
};
THREE.MorphAnimMesh.prototype.setDirectionBackward = function() {
    this.direction = -1;
    this.directionBackwards = true
};
THREE.MorphAnimMesh.prototype.parseAnimations = function() {
    var g = this.geometry;
    if (!g.animations) {
        g.animations = {}
    }
    var a, l = g.animations;
    var f = /([a-z]+)_?(\d+)/;
    for (var d = 0, j = g.morphTargets.length; d < j; d++) {
        var k = g.morphTargets[d];
        var c = k.name.match(f);
        if (c && c.length > 1) {
            var h = c[1];
            var e = c[2];
            if (!l[h]) {
                l[h] = {
                    start: Infinity,
                    end: -Infinity
                }
            }
            var b = l[h];
            if (d < b.start) {
                b.start = d
            }
            if (d > b.end) {
                b.end = d
            }
            if (!a) {
                a = h
            }
        }
    }
    g.firstAnimation = a
};
THREE.MorphAnimMesh.prototype.setAnimationLabel = function(b, c, a) {
    if (!this.geometry.animations) {
        this.geometry.animations = {}
    }
    this.geometry.animations[b] = {
        start: c,
        end: a
    }
};
THREE.MorphAnimMesh.prototype.playAnimation = function(a, c) {
    var b = this.geometry.animations[a];
    if (b) {
        this.setFrameRange(b.start, b.end);
        this.duration = 1000 * ((b.end - b.start) / c);
        this.time = 0
    } else {
        console.warn("animation[" + a + "] undefined")
    }
};
THREE.MorphAnimMesh.prototype.updateAnimation = function(d) {
    var c = this.duration / this.length;
    this.time += this.direction * d;
    if (this.mirroredLoop) {
        if (this.time > this.duration || this.time < 0) {
            this.direction *= -1;
            if (this.time > this.duration) {
                this.time = this.duration;
                this.directionBackwards = true
            }
            if (this.time < 0) {
                this.time = 0;
                this.directionBackwards = false
            }
        }
    } else {
        this.time = this.time % this.duration;
        if (this.time < 0) {
            this.time += this.duration
        }
    }
    var a = this.startKeyframe + THREE.Math.clamp(Math.floor(this.time / c), 0, this.length - 1);
    if (a !== this.currentKeyframe) {
        this.morphTargetInfluences[this.lastKeyframe] = 0;
        this.morphTargetInfluences[this.currentKeyframe] = 1;
        this.morphTargetInfluences[a] = 0;
        this.lastKeyframe = this.currentKeyframe;
        this.currentKeyframe = a
    }
    var b = (this.time % c) / c;
    if (this.directionBackwards) {
        b = 1 - b
    }
    this.morphTargetInfluences[this.currentKeyframe] = b;
    this.morphTargetInfluences[this.lastKeyframe] = 1 - b
};
THREE.MorphAnimMesh.prototype.interpolateTargets = function(e, c, g) {
    var h = this.morphTargetInfluences;
    for (var f = 0, d = h.length; f < d; f++) {
        h[f] = 0
    }
    if (e > -1) {
        h[e] = 1 - g
    }
    if (c > -1) {
        h[c] = g
    }
};
THREE.MorphAnimMesh.prototype.clone = function(a) {
    if (a === undefined) {
        a = new THREE.MorphAnimMesh(this.geometry, this.material)
    }
    a.duration = this.duration;
    a.mirroredLoop = this.mirroredLoop;
    a.time = this.time;
    a.lastKeyframe = this.lastKeyframe;
    a.currentKeyframe = this.currentKeyframe;
    a.direction = this.direction;
    a.directionBackwards = this.directionBackwards;
    THREE.Mesh.prototype.clone.call(this, a);
    return a
};
THREE.LOD = function() {
    THREE.Object3D.call(this);
    this.objects = []
};
THREE.LOD.prototype = Object.create(THREE.Object3D.prototype);
THREE.LOD.prototype.constructor = THREE.LOD;
THREE.LOD.prototype.addLevel = function(b, c) {
    if (c === undefined) {
        c = 0
    }
    c = Math.abs(c);
    for (var a = 0; a < this.objects.length; a++) {
        if (c < this.objects[a].distance) {
            break
        }
    }
    this.objects.splice(a, 0, {
        distance: c,
        object: b
    });
    this.add(b)
};
THREE.LOD.prototype.getObjectForDistance = function(c) {
    for (var b = 1, a = this.objects.length; b < a; b++) {
        if (c < this.objects[b].distance) {
            break
        }
    }
    return this.objects[b - 1].object
};
THREE.LOD.prototype.raycast = (function() {
    var a = new THREE.Vector3();
    return function(b, c) {
        a.setFromMatrixPosition(this.matrixWorld);
        var d = b.ray.origin.distanceTo(a);
        this.getObjectForDistance(d).raycast(b, c)
    }
}());
THREE.LOD.prototype.update = function() {
    var b = new THREE.Vector3();
    var a = new THREE.Vector3();
    return function(e) {
        if (this.objects.length > 1) {
            b.setFromMatrixPosition(e.matrixWorld);
            a.setFromMatrixPosition(this.matrixWorld);
            var f = b.distanceTo(a);
            this.objects[0].object.visible = true;
            for (var d = 1, c = this.objects.length; d < c; d++) {
                if (f >= this.objects[d].distance) {
                    this.objects[d - 1].object.visible = false;
                    this.objects[d].object.visible = true
                } else {
                    break
                }
            }
            for (; d < c; d++) {
                this.objects[d].object.visible = false
            }
        }
    }
}();
THREE.LOD.prototype.clone = function(c) {
    if (c === undefined) {
        c = new THREE.LOD()
    }
    THREE.Object3D.prototype.clone.call(this, c);
    for (var d = 0, b = this.objects.length; d < b; d++) {
        var a = this.objects[d].object.clone();
        a.visible = d === 0;
        c.addLevel(a, this.objects[d].distance)
    }
    return c
};
THREE.Sprite = (function() {
    var d = new Uint16Array([0, 1, 2, 0, 2, 3]);
    var a = new Float32Array([-0.5, -0.5, 0, 0.5, -0.5, 0, 0.5, 0.5, 0, -0.5, 0.5, 0]);
    var b = new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]);
    var c = new THREE.BufferGeometry();
    c.addAttribute("index", new THREE.BufferAttribute(d, 1));
    c.addAttribute("position", new THREE.BufferAttribute(a, 3));
    c.addAttribute("uv", new THREE.BufferAttribute(b, 2));
    return function(e) {
        THREE.Object3D.call(this);
        this.type = "Sprite";
        this.geometry = c;
        this.material = (e !== undefined) ? e : new THREE.SpriteMaterial()
    }
})();
THREE.Sprite.prototype = Object.create(THREE.Object3D.prototype);
THREE.Sprite.prototype.constructor = THREE.Sprite;
THREE.Sprite.prototype.raycast = (function() {
    var a = new THREE.Vector3();
    return function(b, c) {
        a.setFromMatrixPosition(this.matrixWorld);
        var d = b.ray.distanceToPoint(a);
        if (d > this.scale.x) {
            return
        }
        c.push({
            distance: d,
            point: this.position,
            face: null,
            object: this
        })
    }
}());
THREE.Sprite.prototype.clone = function(a) {
    if (a === undefined) {
        a = new THREE.Sprite(this.material)
    }
    THREE.Object3D.prototype.clone.call(this, a);
    return a
};
THREE.Particle = THREE.Sprite;
THREE.LensFlare = function(d, b, e, c, a) {
    THREE.Object3D.call(this);
    this.lensFlares = [];
    this.positionScreen = new THREE.Vector3();
    this.customUpdateCallback = undefined;
    if (d !== undefined) {
        this.add(d, b, e, c, a)
    }
};
THREE.LensFlare.prototype = Object.create(THREE.Object3D.prototype);
THREE.LensFlare.prototype.constructor = THREE.LensFlare;
THREE.LensFlare.prototype.add = function(e, c, f, d, a, b) {
    if (c === undefined) {
        c = -1
    }
    if (f === undefined) {
        f = 0
    }
    if (b === undefined) {
        b = 1
    }
    if (a === undefined) {
        a = new THREE.Color(16777215)
    }
    if (d === undefined) {
        d = THREE.NormalBlending
    }
    f = Math.min(f, Math.max(0, f));
    this.lensFlares.push({
        texture: e,
        size: c,
        distance: f,
        x: 0,
        y: 0,
        z: 0,
        scale: 1,
        rotation: 1,
        opacity: b,
        color: a,
        blending: d
    })
};
THREE.LensFlare.prototype.updateLensFlares = function() {
    var d, c = this.lensFlares.length;
    var b;
    var a = -this.positionScreen.x * 2;
    var e = -this.positionScreen.y * 2;
    for (d = 0; d < c; d++) {
        b = this.lensFlares[d];
        b.x = this.positionScreen.x + a * b.distance;
        b.y = this.positionScreen.y + e * b.distance;
        b.wantedRotation = b.x * Math.PI * 0.25;
        b.rotation += (b.wantedRotation - b.rotation) * 0.25
    }
};
THREE.Scene = function() {
    THREE.Object3D.call(this);
    this.type = "Scene";
    this.fog = null;
    this.overrideMaterial = null;
    this.autoUpdate = true
};
THREE.Scene.prototype = Object.create(THREE.Object3D.prototype);
THREE.Scene.prototype.constructor = THREE.Scene;
THREE.Scene.prototype.clone = function(a) {
    if (a === undefined) {
        a = new THREE.Scene()
    }
    THREE.Object3D.prototype.clone.call(this, a);
    if (this.fog !== null) {
        a.fog = this.fog.clone()
    }
    if (this.overrideMaterial !== null) {
        a.overrideMaterial = this.overrideMaterial.clone()
    }
    a.autoUpdate = this.autoUpdate;
    a.matrixAutoUpdate = this.matrixAutoUpdate;
    return a
};
THREE.Fog = function(b, c, a) {
    this.name = "";
    this.color = new THREE.Color(b);
    this.near = (c !== undefined) ? c : 1;
    this.far = (a !== undefined) ? a : 1000
};
THREE.Fog.prototype.clone = function() {
    return new THREE.Fog(this.color.getHex(), this.near, this.far)
};
THREE.FogExp2 = function(b, a) {
    this.name = "";
    this.color = new THREE.Color(b);
    this.density = (a !== undefined) ? a : 0.00025
};
THREE.FogExp2.prototype.clone = function() {
    return new THREE.FogExp2(this.color.getHex(), this.density)
};
THREE.ShaderChunk = {};
THREE.ShaderChunk.alphatest_fragment = "#ifdef ALPHATEST\n\n	if ( gl_FragColor.a < ALPHATEST ) discard;\n\n#endif\n";
THREE.ShaderChunk.lights_lambert_vertex = "vLightFront = vec3( 0.0 );\n\n#ifdef DOUBLE_SIDED\n\n	vLightBack = vec3( 0.0 );\n\n#endif\n\ntransformedNormal = normalize( transformedNormal );\n\n#if MAX_DIR_LIGHTS > 0\n\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n	vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n	vec3 dirVector = normalize( lDirection.xyz );\n\n	float dotProduct = dot( transformedNormal, dirVector );\n	vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n	#ifdef DOUBLE_SIDED\n\n		vec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n		#ifdef WRAP_AROUND\n\n			vec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n		#endif\n\n	#endif\n\n	#ifdef WRAP_AROUND\n\n		vec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n		directionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n\n		#ifdef DOUBLE_SIDED\n\n			directionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n\n		#endif\n\n	#endif\n\n	vLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n\n	#ifdef DOUBLE_SIDED\n\n		vLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n\n	#endif\n\n}\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n		float lDistance = 1.0;\n		if ( pointLightDistance[ i ] > 0.0 )\n			lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\n		lVector = normalize( lVector );\n		float dotProduct = dot( transformedNormal, lVector );\n\n		vec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n		#ifdef DOUBLE_SIDED\n\n			vec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n			#ifdef WRAP_AROUND\n\n				vec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n			#endif\n\n		#endif\n\n		#ifdef WRAP_AROUND\n\n			vec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n			pointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n\n			#ifdef DOUBLE_SIDED\n\n				pointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n\n			#endif\n\n		#endif\n\n		vLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n\n		#ifdef DOUBLE_SIDED\n\n			vLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n\n		#endif\n\n	}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n		float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\n\n		if ( spotEffect > spotLightAngleCos[ i ] ) {\n\n			spotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n			float lDistance = 1.0;\n			if ( spotLightDistance[ i ] > 0.0 )\n				lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n\n			lVector = normalize( lVector );\n\n			float dotProduct = dot( transformedNormal, lVector );\n			vec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n			#ifdef DOUBLE_SIDED\n\n				vec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n				#ifdef WRAP_AROUND\n\n					vec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n				#endif\n\n			#endif\n\n			#ifdef WRAP_AROUND\n\n				vec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n				spotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n\n				#ifdef DOUBLE_SIDED\n\n					spotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n\n				#endif\n\n			#endif\n\n			vLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n\n			#ifdef DOUBLE_SIDED\n\n				vLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n\n			#endif\n\n		}\n\n	}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n		vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n		vec3 lVector = normalize( lDirection.xyz );\n\n		float dotProduct = dot( transformedNormal, lVector );\n\n		float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n		float hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\n\n		vLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n		#ifdef DOUBLE_SIDED\n\n			vLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n\n		#endif\n\n	}\n\n#endif\n\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n\n#ifdef DOUBLE_SIDED\n\n	vLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n\n#endif";
THREE.ShaderChunk.map_particle_pars_fragment = "#ifdef USE_MAP\n\n	uniform sampler2D map;\n\n#endif";
THREE.ShaderChunk.default_vertex = "#ifdef USE_SKINNING\n\n	vec4 mvPosition = modelViewMatrix * skinned;\n\n#elif defined( USE_MORPHTARGETS )\n\n	vec4 mvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n\n#else\n\n	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\n#endif\n\ngl_Position = projectionMatrix * mvPosition;\n";
THREE.ShaderChunk.map_pars_fragment = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n	varying vec2 vUv;\n\n#endif\n\n#ifdef USE_MAP\n\n	uniform sampler2D map;\n\n#endif";
THREE.ShaderChunk.skinnormal_vertex = "#ifdef USE_SKINNING\n\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\n	#ifdef USE_MORPHNORMALS\n\n	vec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n\n	#else\n\n	vec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n\n	#endif\n\n#endif\n";
THREE.ShaderChunk.logdepthbuf_pars_vertex = "#ifdef USE_LOGDEPTHBUF\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		varying float vFragDepth;\n\n	#endif\n\n	uniform float logDepthBufFC;\n\n#endif";
THREE.ShaderChunk.lightmap_pars_vertex = "#ifdef USE_LIGHTMAP\n\n	varying vec2 vUv2;\n\n#endif";
THREE.ShaderChunk.lights_phong_fragment = "vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n\n#ifdef DOUBLE_SIDED\n\n	normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\n#endif\n\n#ifdef USE_NORMALMAP\n\n	normal = perturbNormal2Arb( -vViewPosition, normal );\n\n#elif defined( USE_BUMPMAP )\n\n	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	vec3 pointDiffuse = vec3( 0.0 );\n	vec3 pointSpecular = vec3( 0.0 );\n\n	for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n		float lDistance = 1.0;\n		if ( pointLightDistance[ i ] > 0.0 )\n			lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\n		lVector = normalize( lVector );\n\n				// diffuse\n\n		float dotProduct = dot( normal, lVector );\n\n		#ifdef WRAP_AROUND\n\n			float pointDiffuseWeightFull = max( dotProduct, 0.0 );\n			float pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n			vec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n\n		#else\n\n			float pointDiffuseWeight = max( dotProduct, 0.0 );\n\n		#endif\n\n		pointDiffuse += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\n\n				// specular\n\n		vec3 pointHalfVector = normalize( lVector + viewPosition );\n		float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n		float pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n\n		float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n		vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );\n		pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n\n	}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	vec3 spotDiffuse = vec3( 0.0 );\n	vec3 spotSpecular = vec3( 0.0 );\n\n	for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n		float lDistance = 1.0;\n		if ( spotLightDistance[ i ] > 0.0 )\n			lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n\n		lVector = normalize( lVector );\n\n		float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\n\n		if ( spotEffect > spotLightAngleCos[ i ] ) {\n\n			spotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n					// diffuse\n\n			float dotProduct = dot( normal, lVector );\n\n			#ifdef WRAP_AROUND\n\n				float spotDiffuseWeightFull = max( dotProduct, 0.0 );\n				float spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n				vec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n\n			#else\n\n				float spotDiffuseWeight = max( dotProduct, 0.0 );\n\n			#endif\n\n			spotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\n\n					// specular\n\n			vec3 spotHalfVector = normalize( lVector + viewPosition );\n			float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\n			float spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n\n			float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n			vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, spotHalfVector ), 0.0 ), 5.0 );\n			spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n\n		}\n\n	}\n\n#endif\n\n#if MAX_DIR_LIGHTS > 0\n\n	vec3 dirDiffuse = vec3( 0.0 );\n	vec3 dirSpecular = vec3( 0.0 );\n\n	for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n		vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n		vec3 dirVector = normalize( lDirection.xyz );\n\n				// diffuse\n\n		float dotProduct = dot( normal, dirVector );\n\n		#ifdef WRAP_AROUND\n\n			float dirDiffuseWeightFull = max( dotProduct, 0.0 );\n			float dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n			vec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n\n		#else\n\n			float dirDiffuseWeight = max( dotProduct, 0.0 );\n\n		#endif\n\n		dirDiffuse += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\n\n		// specular\n\n		vec3 dirHalfVector = normalize( dirVector + viewPosition );\n		float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n		float dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n\n		/*\n		// fresnel term from skin shader\n		const float F0 = 0.128;\n\n		float base = 1.0 - dot( viewPosition, dirHalfVector );\n		float exponential = pow( base, 5.0 );\n\n		float fresnel = exponential + F0 * ( 1.0 - exponential );\n		*/\n\n		/*\n		// fresnel term from fresnel shader\n		const float mFresnelBias = 0.08;\n		const float mFresnelScale = 0.3;\n		const float mFresnelPower = 5.0;\n\n		float fresnel = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( -viewPosition ), normal ), mFresnelPower );\n		*/\n\n		float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n		// 		dirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization * fresnel;\n\n		vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\n		dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n\n\n	}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	vec3 hemiDiffuse = vec3( 0.0 );\n	vec3 hemiSpecular = vec3( 0.0 );\n\n	for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n		vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n		vec3 lVector = normalize( lDirection.xyz );\n\n		// diffuse\n\n		float dotProduct = dot( normal, lVector );\n		float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\n		vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n		hemiDiffuse += diffuse * hemiColor;\n\n		// specular (sky light)\n\n		vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\n		float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\n		float hemiSpecularWeightSky = specularStrength * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );\n\n		// specular (ground light)\n\n		vec3 lVectorGround = -lVector;\n\n		vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\n		float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\n		float hemiSpecularWeightGround = specularStrength * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );\n\n		float dotProductGround = dot( normal, lVectorGround );\n\n		float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n		vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\n		vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\n		hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n\n	}\n\n#endif\n\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n\n#if MAX_DIR_LIGHTS > 0\n\n	totalDiffuse += dirDiffuse;\n	totalSpecular += dirSpecular;\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	totalDiffuse += hemiDiffuse;\n	totalSpecular += hemiSpecular;\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	totalDiffuse += pointDiffuse;\n	totalSpecular += pointSpecular;\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	totalDiffuse += spotDiffuse;\n	totalSpecular += spotSpecular;\n\n#endif\n\n#ifdef METAL\n\n	gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n\n#else\n\n	gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n\n#endif";
THREE.ShaderChunk.fog_pars_fragment = "#ifdef USE_FOG\n\n	uniform vec3 fogColor;\n\n	#ifdef FOG_EXP2\n\n		uniform float fogDensity;\n\n	#else\n\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n\n#endif";
THREE.ShaderChunk.morphnormal_vertex = "#ifdef USE_MORPHNORMALS\n\n	vec3 morphedNormal = vec3( 0.0 );\n\n	morphedNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n	morphedNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n	morphedNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n	morphedNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n\n	morphedNormal += normal;\n\n#endif";
THREE.ShaderChunk.envmap_pars_fragment = "#ifdef USE_ENVMAP\n\n	uniform float reflectivity;\n	#ifdef ENVMAP_TYPE_CUBE\n		uniform samplerCube envMap;\n	#else\n		uniform sampler2D envMap;\n	#endif\n	uniform float flipEnvMap;\n\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n		uniform float refractionRatio;\n\n	#else\n\n		varying vec3 vReflect;\n\n	#endif\n\n#endif\n";
THREE.ShaderChunk.logdepthbuf_fragment = "#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\n	gl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n\n#endif";
THREE.ShaderChunk.normalmap_pars_fragment = "#ifdef USE_NORMALMAP\n\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n\n			// Per-Pixel Tangent Space Normal Mapping\n			// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\n\n	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\n		vec3 q0 = dFdx( eye_pos.xyz );\n		vec3 q1 = dFdy( eye_pos.xyz );\n		vec2 st0 = dFdx( vUv.st );\n		vec2 st1 = dFdy( vUv.st );\n\n		vec3 S = normalize( q0 * st1.t - q1 * st0.t );\n		vec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n		vec3 N = normalize( surf_norm );\n\n		vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n		mapN.xy = normalScale * mapN.xy;\n		mat3 tsn = mat3( S, T, N );\n		return normalize( tsn * mapN );\n\n	}\n\n#endif\n";
THREE.ShaderChunk.lights_phong_pars_vertex = "#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n	varying vec3 vWorldPosition;\n\n#endif\n";
THREE.ShaderChunk.lightmap_pars_fragment = "#ifdef USE_LIGHTMAP\n\n	varying vec2 vUv2;\n	uniform sampler2D lightMap;\n\n#endif";
THREE.ShaderChunk.shadowmap_vertex = "#ifdef USE_SHADOWMAP\n\n	for( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n		vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n\n	}\n\n#endif";
THREE.ShaderChunk.lights_phong_vertex = "#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n	vWorldPosition = worldPosition.xyz;\n\n#endif";
THREE.ShaderChunk.map_fragment = "#ifdef USE_MAP\n\n	vec4 texelColor = texture2D( map, vUv );\n\n	#ifdef GAMMA_INPUT\n\n		texelColor.xyz *= texelColor.xyz;\n\n	#endif\n\n	gl_FragColor = gl_FragColor * texelColor;\n\n#endif";
THREE.ShaderChunk.lightmap_vertex = "#ifdef USE_LIGHTMAP\n\n	vUv2 = uv2;\n\n#endif";
THREE.ShaderChunk.map_particle_fragment = "#ifdef USE_MAP\n\n	gl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n\n#endif";
THREE.ShaderChunk.color_pars_fragment = "#ifdef USE_COLOR\n\n	varying vec3 vColor;\n\n#endif\n";
THREE.ShaderChunk.color_vertex = "#ifdef USE_COLOR\n\n	#ifdef GAMMA_INPUT\n\n		vColor = color * color;\n\n	#else\n\n		vColor = color;\n\n	#endif\n\n#endif";
THREE.ShaderChunk.skinning_vertex = "#ifdef USE_SKINNING\n\n	#ifdef USE_MORPHTARGETS\n\n	vec4 skinVertex = bindMatrix * vec4( morphed, 1.0 );\n\n	#else\n\n	vec4 skinVertex = bindMatrix * vec4( position, 1.0 );\n\n	#endif\n\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	skinned  = bindMatrixInverse * skinned;\n\n#endif\n";
THREE.ShaderChunk.envmap_pars_vertex = "#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\n\n	varying vec3 vReflect;\n\n	uniform float refractionRatio;\n\n#endif\n";
THREE.ShaderChunk.linear_to_gamma_fragment = "#ifdef GAMMA_OUTPUT\n\n	gl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n\n#endif";
THREE.ShaderChunk.color_pars_vertex = "#ifdef USE_COLOR\n\n	varying vec3 vColor;\n\n#endif";
THREE.ShaderChunk.lights_lambert_pars_vertex = "uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\n\nuniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n	uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n	uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n	uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#ifdef WRAP_AROUND\n\n	uniform vec3 wrapRGB;\n\n#endif\n";
THREE.ShaderChunk.map_pars_vertex = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n	varying vec2 vUv;\n	uniform vec4 offsetRepeat;\n\n#endif\n";
THREE.ShaderChunk.envmap_fragment = "#ifdef USE_ENVMAP\n\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n		vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\n		// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\n		// Transforming Normal Vectors with the Inverse Transformation\n\n		vec3 worldNormal = normalize( vec3( vec4( normal, 0.0 ) * viewMatrix ) );\n\n		#ifdef ENVMAP_MODE_REFLECTION\n\n			vec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\n		#else\n\n			vec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\n		#endif\n\n	#else\n\n		vec3 reflectVec = vReflect;\n\n	#endif\n\n	#ifdef DOUBLE_SIDED\n		float flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n	#else\n		float flipNormal = 1.0;\n	#endif\n\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n	#elif defined( ENVMAP_TYPE_EQUIREC )\n		vec2 sampleUV;\n		sampleUV.y = clamp( flipNormal * reflectVec.y * 0.5 + 0.5, 0.0, 1.0);\n		sampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * 0.15915494309189533576888376337251 + 0.5; // reciprocal( 2 PI ) + 0.5\n		vec4 envColor = texture2D( envMap, sampleUV );\n		\n	#elif defined( ENVMAP_TYPE_SPHERE )\n		vec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\n		vec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n	#endif\n\n	#ifdef GAMMA_INPUT\n\n		envColor.xyz *= envColor.xyz;\n\n	#endif\n\n	#ifdef ENVMAP_BLENDING_MULTIPLY\n\n		gl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * envColor.xyz, specularStrength * reflectivity );\n\n	#elif defined( ENVMAP_BLENDING_MIX )\n\n		gl_FragColor.xyz = mix( gl_FragColor.xyz, envColor.xyz, specularStrength * reflectivity );\n\n	#elif defined( ENVMAP_BLENDING_ADD )\n\n		gl_FragColor.xyz += envColor.xyz * specularStrength * reflectivity;\n\n	#endif\n\n#endif\n";
THREE.ShaderChunk.specularmap_pars_fragment = "#ifdef USE_SPECULARMAP\n\n	uniform sampler2D specularMap;\n\n#endif";
THREE.ShaderChunk.logdepthbuf_vertex = "#ifdef USE_LOGDEPTHBUF\n\n	gl_Position.z = log2(max(1e-6, gl_Position.w + 1.0)) * logDepthBufFC;\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		vFragDepth = 1.0 + gl_Position.w;\n\n#else\n\n		gl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\n	#endif\n\n#endif";
THREE.ShaderChunk.morphtarget_pars_vertex = "#ifdef USE_MORPHTARGETS\n\n	#ifndef USE_MORPHNORMALS\n\n	uniform float morphTargetInfluences[ 8 ];\n\n	#else\n\n	uniform float morphTargetInfluences[ 4 ];\n\n	#endif\n\n#endif";
THREE.ShaderChunk.specularmap_fragment = "float specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n	vec4 texelSpecular = texture2D( specularMap, vUv );\n	specularStrength = texelSpecular.r;\n\n#else\n\n	specularStrength = 1.0;\n\n#endif";
THREE.ShaderChunk.fog_fragment = "#ifdef USE_FOG\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		float depth = gl_FragDepthEXT / gl_FragCoord.w;\n\n	#else\n\n		float depth = gl_FragCoord.z / gl_FragCoord.w;\n\n	#endif\n\n	#ifdef FOG_EXP2\n\n		const float LOG2 = 1.442695;\n		float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\n		fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n\n	#else\n\n		float fogFactor = smoothstep( fogNear, fogFar, depth );\n\n	#endif\n	\n	gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n\n#endif";
THREE.ShaderChunk.bumpmap_pars_fragment = "#ifdef USE_BUMPMAP\n\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n\n			// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\n			//	http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\n\n			// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\n	vec2 dHdxy_fwd() {\n\n		vec2 dSTdx = dFdx( vUv );\n		vec2 dSTdy = dFdy( vUv );\n\n		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n		return vec2( dBx, dBy );\n\n	}\n\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n		vec3 vSigmaX = dFdx( surf_pos );\n		vec3 vSigmaY = dFdy( surf_pos );\n		vec3 vN = surf_norm;		// normalized\n\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n\n		float fDet = dot( vSigmaX, R1 );\n\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n\n	}\n\n#endif";
THREE.ShaderChunk.defaultnormal_vertex = "#ifdef USE_SKINNING\n\n	vec3 objectNormal = skinnedNormal.xyz;\n\n#elif defined( USE_MORPHNORMALS )\n\n	vec3 objectNormal = morphedNormal;\n\n#else\n\n	vec3 objectNormal = normal;\n\n#endif\n\n#ifdef FLIP_SIDED\n\n	objectNormal = -objectNormal;\n\n#endif\n\nvec3 transformedNormal = normalMatrix * objectNormal;\n";
THREE.ShaderChunk.lights_phong_pars_fragment = "uniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n	uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n	uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\n	uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\n	uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n	varying vec3 vWorldPosition;\n\n#endif\n\n#ifdef WRAP_AROUND\n\n	uniform vec3 wrapRGB;\n\n#endif\n\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;";
THREE.ShaderChunk.skinbase_vertex = "#ifdef USE_SKINNING\n\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif";
THREE.ShaderChunk.map_vertex = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n	vUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n\n#endif";
THREE.ShaderChunk.lightmap_fragment = "#ifdef USE_LIGHTMAP\n\n	gl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n\n#endif";
THREE.ShaderChunk.shadowmap_pars_vertex = "#ifdef USE_SHADOWMAP\n\n	varying vec4 vShadowCoord[ MAX_SHADOWS ];\n	uniform mat4 shadowMatrix[ MAX_SHADOWS ];\n\n#endif";
THREE.ShaderChunk.color_fragment = "#ifdef USE_COLOR\n\n	gl_FragColor = gl_FragColor * vec4( vColor, 1.0 );\n\n#endif";
THREE.ShaderChunk.morphtarget_vertex = "#ifdef USE_MORPHTARGETS\n\n	vec3 morphed = vec3( 0.0 );\n	morphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n	morphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n	morphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n	morphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\n	#ifndef USE_MORPHNORMALS\n\n	morphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n	morphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n	morphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n	morphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\n	#endif\n\n	morphed += position;\n\n#endif";
THREE.ShaderChunk.envmap_vertex = "#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\n\n	vec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\n	worldNormal = normalize( worldNormal );\n\n	vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n	#ifdef ENVMAP_MODE_REFLECTION\n\n		vReflect = reflect( cameraToVertex, worldNormal );\n\n	#else\n\n		vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n	#endif\n\n#endif\n";
THREE.ShaderChunk.shadowmap_fragment = "#ifdef USE_SHADOWMAP\n\n	#ifdef SHADOWMAP_DEBUG\n\n		vec3 frustumColors[3];\n		frustumColors[0] = vec3( 1.0, 0.5, 0.0 );\n		frustumColors[1] = vec3( 0.0, 1.0, 0.8 );\n		frustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n\n	#endif\n\n	#ifdef SHADOWMAP_CASCADE\n\n		int inFrustumCount = 0;\n\n	#endif\n\n	float fDepth;\n	vec3 shadowColor = vec3( 1.0 );\n\n	for( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n		vec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\n\n				// if ( something && something ) breaks ATI OpenGL shader compiler\n				// if ( all( something, something ) ) using this instead\n\n		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n		bool inFrustum = all( inFrustumVec );\n\n				// don't shadow pixels outside of light frustum\n				// use just first frustum (for cascades)\n				// don't shadow pixels behind far plane of light frustum\n\n		#ifdef SHADOWMAP_CASCADE\n\n			inFrustumCount += int( inFrustum );\n			bvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n\n		#else\n\n			bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n		#endif\n\n		bool frustumTest = all( frustumTestVec );\n\n		if ( frustumTest ) {\n\n			shadowCoord.z += shadowBias[ i ];\n\n			#if defined( SHADOWMAP_TYPE_PCF )\n\n						// Percentage-close filtering\n						// (9 pixel kernel)\n						// http://fabiensanglard.net/shadowmappingPCF/\n\n				float shadow = 0.0;\n\n		/*\n						// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\n						// must enroll loop manually\n\n				for ( float y = -1.25; y <= 1.25; y += 1.25 )\n					for ( float x = -1.25; x <= 1.25; x += 1.25 ) {\n\n						vec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\n\n								// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\n								//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\n\n						float fDepth = unpackDepth( rgbaDepth );\n\n						if ( fDepth < shadowCoord.z )\n							shadow += 1.0;\n\n				}\n\n				shadow /= 9.0;\n\n		*/\n\n				const float shadowDelta = 1.0 / 9.0;\n\n				float xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n				float yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n				float dx0 = -1.25 * xPixelOffset;\n				float dy0 = -1.25 * yPixelOffset;\n				float dx1 = 1.25 * xPixelOffset;\n				float dy1 = 1.25 * yPixelOffset;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n			#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n						// Percentage-close filtering\n						// (9 pixel kernel)\n						// http://fabiensanglard.net/shadowmappingPCF/\n\n				float shadow = 0.0;\n\n				float xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n				float yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n				float dx0 = -1.0 * xPixelOffset;\n				float dy0 = -1.0 * yPixelOffset;\n				float dx1 = 1.0 * xPixelOffset;\n				float dy1 = 1.0 * yPixelOffset;\n\n				mat3 shadowKernel;\n				mat3 depthKernel;\n\n				depthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n				depthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n				depthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n				depthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n				depthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n				depthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n				depthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n				depthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n				depthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\n				vec3 shadowZ = vec3( shadowCoord.z );\n				shadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\n				shadowKernel[0] *= vec3(0.25);\n\n				shadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\n				shadowKernel[1] *= vec3(0.25);\n\n				shadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\n				shadowKernel[2] *= vec3(0.25);\n\n				vec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\n\n				shadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\n				shadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\n\n				vec4 shadowValues;\n				shadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\n				shadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\n				shadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\n				shadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\n\n				shadow = dot( shadowValues, vec4( 1.0 ) );\n\n				shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n			#else\n\n				vec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\n				float fDepth = unpackDepth( rgbaDepth );\n\n				if ( fDepth < shadowCoord.z )\n\n		// spot with multiple shadows is darker\n\n					shadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n\n		// spot with multiple shadows has the same color as single shadow spot\n\n		// 					shadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\n\n			#endif\n\n		}\n\n\n		#ifdef SHADOWMAP_DEBUG\n\n			#ifdef SHADOWMAP_CASCADE\n\n				if ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n\n			#else\n\n				if ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n\n			#endif\n\n		#endif\n\n	}\n\n	#ifdef GAMMA_OUTPUT\n\n		shadowColor *= shadowColor;\n\n	#endif\n\n	gl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n\n#endif\n";
THREE.ShaderChunk.worldpos_vertex = "#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\n	#ifdef USE_SKINNING\n\n		vec4 worldPosition = modelMatrix * skinned;\n\n	#elif defined( USE_MORPHTARGETS )\n\n		vec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n\n	#else\n\n		vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\n	#endif\n\n#endif\n";
THREE.ShaderChunk.shadowmap_pars_fragment = "#ifdef USE_SHADOWMAP\n\n	uniform sampler2D shadowMap[ MAX_SHADOWS ];\n	uniform vec2 shadowMapSize[ MAX_SHADOWS ];\n\n	uniform float shadowDarkness[ MAX_SHADOWS ];\n	uniform float shadowBias[ MAX_SHADOWS ];\n\n	varying vec4 vShadowCoord[ MAX_SHADOWS ];\n\n	float unpackDepth( const in vec4 rgba_depth ) {\n\n		const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n		float depth = dot( rgba_depth, bit_shift );\n		return depth;\n\n	}\n\n#endif";
THREE.ShaderChunk.skinning_pars_vertex = "#ifdef USE_SKINNING\n\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n\n	#ifdef BONE_TEXTURE\n\n		uniform sampler2D boneTexture;\n		uniform int boneTextureWidth;\n		uniform int boneTextureHeight;\n\n		mat4 getBoneMatrix( const in float i ) {\n\n			float j = i * 4.0;\n			float x = mod( j, float( boneTextureWidth ) );\n			float y = floor( j / float( boneTextureWidth ) );\n\n			float dx = 1.0 / float( boneTextureWidth );\n			float dy = 1.0 / float( boneTextureHeight );\n\n			y = dy * ( y + 0.5 );\n\n			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n			mat4 bone = mat4( v1, v2, v3, v4 );\n\n			return bone;\n\n		}\n\n	#else\n\n		uniform mat4 boneGlobalMatrices[ MAX_BONES ];\n\n		mat4 getBoneMatrix( const in float i ) {\n\n			mat4 bone = boneGlobalMatrices[ int(i) ];\n			return bone;\n\n		}\n\n	#endif\n\n#endif\n";
THREE.ShaderChunk.logdepthbuf_pars_fragment = "#ifdef USE_LOGDEPTHBUF\n\n	uniform float logDepthBufFC;\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		#extension GL_EXT_frag_depth : enable\n		varying float vFragDepth;\n\n	#endif\n\n#endif";
THREE.ShaderChunk.alphamap_fragment = "#ifdef USE_ALPHAMAP\n\n	gl_FragColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n";
THREE.ShaderChunk.alphamap_pars_fragment = "#ifdef USE_ALPHAMAP\n\n	uniform sampler2D alphaMap;\n\n#endif\n";
THREE.UniformsUtils = {
    merge: function(b) {
        var a = {};
        for (var c = 0; c < b.length; c++) {
            var d = this.clone(b[c]);
            for (var e in d) {
                a[e] = d[e]
            }
        }
        return a
    },
    clone: function(a) {
        var c = {};
        for (var d in a) {
            c[d] = {};
            for (var e in a[d]) {
                var b = a[d][e];
                if (b instanceof THREE.Color || b instanceof THREE.Vector2 || b instanceof THREE.Vector3 || b instanceof THREE.Vector4 || b instanceof THREE.Matrix4 || b instanceof THREE.Texture) {
                    c[d][e] = b.clone()
                } else {
                    if (b instanceof Array) {
                        c[d][e] = b.slice()
                    } else {
                        c[d][e] = b
                    }
                }
            }
        }
        return c
    }
};
THREE.UniformsLib = {
    common: {
        diffuse: {
            type: "c",
            value: new THREE.Color(15658734)
        },
        opacity: {
            type: "f",
            value: 1
        },
        map: {
            type: "t",
            value: null
        },
        offsetRepeat: {
            type: "v4",
            value: new THREE.Vector4(0, 0, 1, 1)
        },
        lightMap: {
            type: "t",
            value: null
        },
        specularMap: {
            type: "t",
            value: null
        },
        alphaMap: {
            type: "t",
            value: null
        },
        envMap: {
            type: "t",
            value: null
        },
        flipEnvMap: {
            type: "f",
            value: -1
        },
        reflectivity: {
            type: "f",
            value: 1
        },
        refractionRatio: {
            type: "f",
            value: 0.98
        },
        morphTargetInfluences: {
            type: "f",
            value: 0
        }
    },
    bump: {
        bumpMap: {
            type: "t",
            value: null
        },
        bumpScale: {
            type: "f",
            value: 1
        }
    },
    normalmap: {
        normalMap: {
            type: "t",
            value: null
        },
        normalScale: {
            type: "v2",
            value: new THREE.Vector2(1, 1)
        }
    },
    fog: {
        fogDensity: {
            type: "f",
            value: 0.00025
        },
        fogNear: {
            type: "f",
            value: 1
        },
        fogFar: {
            type: "f",
            value: 2000
        },
        fogColor: {
            type: "c",
            value: new THREE.Color(16777215)
        }
    },
    lights: {
        ambientLightColor: {
            type: "fv",
            value: []
        },
        directionalLightDirection: {
            type: "fv",
            value: []
        },
        directionalLightColor: {
            type: "fv",
            value: []
        },
        hemisphereLightDirection: {
            type: "fv",
            value: []
        },
        hemisphereLightSkyColor: {
            type: "fv",
            value: []
        },
        hemisphereLightGroundColor: {
            type: "fv",
            value: []
        },
        pointLightColor: {
            type: "fv",
            value: []
        },
        pointLightPosition: {
            type: "fv",
            value: []
        },
        pointLightDistance: {
            type: "fv1",
            value: []
        },
        spotLightColor: {
            type: "fv",
            value: []
        },
        spotLightPosition: {
            type: "fv",
            value: []
        },
        spotLightDirection: {
            type: "fv",
            value: []
        },
        spotLightDistance: {
            type: "fv1",
            value: []
        },
        spotLightAngleCos: {
            type: "fv1",
            value: []
        },
        spotLightExponent: {
            type: "fv1",
            value: []
        }
    },
    particle: {
        psColor: {
            type: "c",
            value: new THREE.Color(15658734)
        },
        opacity: {
            type: "f",
            value: 1
        },
        size: {
            type: "f",
            value: 1
        },
        scale: {
            type: "f",
            value: 1
        },
        map: {
            type: "t",
            value: null
        },
        fogDensity: {
            type: "f",
            value: 0.00025
        },
        fogNear: {
            type: "f",
            value: 1
        },
        fogFar: {
            type: "f",
            value: 2000
        },
        fogColor: {
            type: "c",
            value: new THREE.Color(16777215)
        }
    },
    shadowmap: {
        shadowMap: {
            type: "tv",
            value: []
        },
        shadowMapSize: {
            type: "v2v",
            value: []
        },
        shadowBias: {
            type: "fv1",
            value: []
        },
        shadowDarkness: {
            type: "fv1",
            value: []
        },
        shadowMatrix: {
            type: "m4v",
            value: []
        }
    }
};
THREE.ShaderLib = {
    basic: {
        uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib.common, THREE.UniformsLib.fog, THREE.UniformsLib.shadowmap]),
        vertexShader: [THREE.ShaderChunk.map_pars_vertex, THREE.ShaderChunk.lightmap_pars_vertex, THREE.ShaderChunk.envmap_pars_vertex, THREE.ShaderChunk.color_pars_vertex, THREE.ShaderChunk.morphtarget_pars_vertex, THREE.ShaderChunk.skinning_pars_vertex, THREE.ShaderChunk.shadowmap_pars_vertex, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", THREE.ShaderChunk.map_vertex, THREE.ShaderChunk.lightmap_vertex, THREE.ShaderChunk.color_vertex, THREE.ShaderChunk.skinbase_vertex, "	#ifdef USE_ENVMAP", THREE.ShaderChunk.morphnormal_vertex, THREE.ShaderChunk.skinnormal_vertex, THREE.ShaderChunk.defaultnormal_vertex, "	#endif", THREE.ShaderChunk.morphtarget_vertex, THREE.ShaderChunk.skinning_vertex, THREE.ShaderChunk.default_vertex, THREE.ShaderChunk.logdepthbuf_vertex, THREE.ShaderChunk.worldpos_vertex, THREE.ShaderChunk.envmap_vertex, THREE.ShaderChunk.shadowmap_vertex, "}"].join("\n"),
        fragmentShader: ["uniform vec3 diffuse;", "uniform float opacity;", THREE.ShaderChunk.color_pars_fragment, THREE.ShaderChunk.map_pars_fragment, THREE.ShaderChunk.alphamap_pars_fragment, THREE.ShaderChunk.lightmap_pars_fragment, THREE.ShaderChunk.envmap_pars_fragment, THREE.ShaderChunk.fog_pars_fragment, THREE.ShaderChunk.shadowmap_pars_fragment, THREE.ShaderChunk.specularmap_pars_fragment, THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", "	gl_FragColor = vec4( diffuse, opacity );", THREE.ShaderChunk.logdepthbuf_fragment, THREE.ShaderChunk.map_fragment, THREE.ShaderChunk.alphamap_fragment, THREE.ShaderChunk.alphatest_fragment, THREE.ShaderChunk.specularmap_fragment, THREE.ShaderChunk.lightmap_fragment, THREE.ShaderChunk.color_fragment, THREE.ShaderChunk.envmap_fragment, THREE.ShaderChunk.shadowmap_fragment, THREE.ShaderChunk.linear_to_gamma_fragment, THREE.ShaderChunk.fog_fragment, "}"].join("\n")
    },
    lambert: {
        uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib.common, THREE.UniformsLib.fog, THREE.UniformsLib.lights, THREE.UniformsLib.shadowmap, {
            ambient: {
                type: "c",
                value: new THREE.Color(16777215)
            },
            emissive: {
                type: "c",
                value: new THREE.Color(0)
            },
            wrapRGB: {
                type: "v3",
                value: new THREE.Vector3(1, 1, 1)
            }
        }]),
        vertexShader: ["#define LAMBERT", "varying vec3 vLightFront;", "#ifdef DOUBLE_SIDED", "	varying vec3 vLightBack;", "#endif", THREE.ShaderChunk.map_pars_vertex, THREE.ShaderChunk.lightmap_pars_vertex, THREE.ShaderChunk.envmap_pars_vertex, THREE.ShaderChunk.lights_lambert_pars_vertex, THREE.ShaderChunk.color_pars_vertex, THREE.ShaderChunk.morphtarget_pars_vertex, THREE.ShaderChunk.skinning_pars_vertex, THREE.ShaderChunk.shadowmap_pars_vertex, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", THREE.ShaderChunk.map_vertex, THREE.ShaderChunk.lightmap_vertex, THREE.ShaderChunk.color_vertex, THREE.ShaderChunk.morphnormal_vertex, THREE.ShaderChunk.skinbase_vertex, THREE.ShaderChunk.skinnormal_vertex, THREE.ShaderChunk.defaultnormal_vertex, THREE.ShaderChunk.morphtarget_vertex, THREE.ShaderChunk.skinning_vertex, THREE.ShaderChunk.default_vertex, THREE.ShaderChunk.logdepthbuf_vertex, THREE.ShaderChunk.worldpos_vertex, THREE.ShaderChunk.envmap_vertex, THREE.ShaderChunk.lights_lambert_vertex, THREE.ShaderChunk.shadowmap_vertex, "}"].join("\n"),
        fragmentShader: ["uniform float opacity;", "varying vec3 vLightFront;", "#ifdef DOUBLE_SIDED", "	varying vec3 vLightBack;", "#endif", THREE.ShaderChunk.color_pars_fragment, THREE.ShaderChunk.map_pars_fragment, THREE.ShaderChunk.alphamap_pars_fragment, THREE.ShaderChunk.lightmap_pars_fragment, THREE.ShaderChunk.envmap_pars_fragment, THREE.ShaderChunk.fog_pars_fragment, THREE.ShaderChunk.shadowmap_pars_fragment, THREE.ShaderChunk.specularmap_pars_fragment, THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", "	gl_FragColor = vec4( vec3( 1.0 ), opacity );", THREE.ShaderChunk.logdepthbuf_fragment, THREE.ShaderChunk.map_fragment, THREE.ShaderChunk.alphamap_fragment, THREE.ShaderChunk.alphatest_fragment, THREE.ShaderChunk.specularmap_fragment, "	#ifdef DOUBLE_SIDED", "		if ( gl_FrontFacing )", "			gl_FragColor.xyz *= vLightFront;", "		else", "			gl_FragColor.xyz *= vLightBack;", "	#else", "		gl_FragColor.xyz *= vLightFront;", "	#endif", THREE.ShaderChunk.lightmap_fragment, THREE.ShaderChunk.color_fragment, THREE.ShaderChunk.envmap_fragment, THREE.ShaderChunk.shadowmap_fragment, THREE.ShaderChunk.linear_to_gamma_fragment, THREE.ShaderChunk.fog_fragment, "}"].join("\n")
    },
    phong: {
        uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib.common, THREE.UniformsLib.bump, THREE.UniformsLib.normalmap, THREE.UniformsLib.fog, THREE.UniformsLib.lights, THREE.UniformsLib.shadowmap, {
            ambient: {
                type: "c",
                value: new THREE.Color(16777215)
            },
            emissive: {
                type: "c",
                value: new THREE.Color(0)
            },
            specular: {
                type: "c",
                value: new THREE.Color(1118481)
            },
            shininess: {
                type: "f",
                value: 30
            },
            wrapRGB: {
                type: "v3",
                value: new THREE.Vector3(1, 1, 1)
            }
        }]),
        vertexShader: ["#define PHONG", "varying vec3 vViewPosition;", "varying vec3 vNormal;", THREE.ShaderChunk.map_pars_vertex, THREE.ShaderChunk.lightmap_pars_vertex, THREE.ShaderChunk.envmap_pars_vertex, THREE.ShaderChunk.lights_phong_pars_vertex, THREE.ShaderChunk.color_pars_vertex, THREE.ShaderChunk.morphtarget_pars_vertex, THREE.ShaderChunk.skinning_pars_vertex, THREE.ShaderChunk.shadowmap_pars_vertex, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", THREE.ShaderChunk.map_vertex, THREE.ShaderChunk.lightmap_vertex, THREE.ShaderChunk.color_vertex, THREE.ShaderChunk.morphnormal_vertex, THREE.ShaderChunk.skinbase_vertex, THREE.ShaderChunk.skinnormal_vertex, THREE.ShaderChunk.defaultnormal_vertex, "	vNormal = normalize( transformedNormal );", THREE.ShaderChunk.morphtarget_vertex, THREE.ShaderChunk.skinning_vertex, THREE.ShaderChunk.default_vertex, THREE.ShaderChunk.logdepthbuf_vertex, "	vViewPosition = -mvPosition.xyz;", THREE.ShaderChunk.worldpos_vertex, THREE.ShaderChunk.envmap_vertex, THREE.ShaderChunk.lights_phong_vertex, THREE.ShaderChunk.shadowmap_vertex, "}"].join("\n"),
        fragmentShader: ["#define PHONG", "uniform vec3 diffuse;", "uniform float opacity;", "uniform vec3 ambient;", "uniform vec3 emissive;", "uniform vec3 specular;", "uniform float shininess;", THREE.ShaderChunk.color_pars_fragment, THREE.ShaderChunk.map_pars_fragment, THREE.ShaderChunk.alphamap_pars_fragment, THREE.ShaderChunk.lightmap_pars_fragment, THREE.ShaderChunk.envmap_pars_fragment, THREE.ShaderChunk.fog_pars_fragment, THREE.ShaderChunk.lights_phong_pars_fragment, THREE.ShaderChunk.shadowmap_pars_fragment, THREE.ShaderChunk.bumpmap_pars_fragment, THREE.ShaderChunk.normalmap_pars_fragment, THREE.ShaderChunk.specularmap_pars_fragment, THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", "	gl_FragColor = vec4( vec3( 1.0 ), opacity );", THREE.ShaderChunk.logdepthbuf_fragment, THREE.ShaderChunk.map_fragment, THREE.ShaderChunk.alphamap_fragment, THREE.ShaderChunk.alphatest_fragment, THREE.ShaderChunk.specularmap_fragment, THREE.ShaderChunk.lights_phong_fragment, THREE.ShaderChunk.lightmap_fragment, THREE.ShaderChunk.color_fragment, THREE.ShaderChunk.envmap_fragment, THREE.ShaderChunk.shadowmap_fragment, THREE.ShaderChunk.linear_to_gamma_fragment, THREE.ShaderChunk.fog_fragment, "}"].join("\n")
    },
    particle_basic: {
        uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib.particle, THREE.UniformsLib.shadowmap]),
        vertexShader: ["uniform float size;", "uniform float scale;", THREE.ShaderChunk.color_pars_vertex, THREE.ShaderChunk.shadowmap_pars_vertex, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", THREE.ShaderChunk.color_vertex, "	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );", "	#ifdef USE_SIZEATTENUATION", "		gl_PointSize = size * ( scale / length( mvPosition.xyz ) );", "	#else", "		gl_PointSize = size;", "	#endif", "	gl_Position = projectionMatrix * mvPosition;", THREE.ShaderChunk.logdepthbuf_vertex, THREE.ShaderChunk.worldpos_vertex, THREE.ShaderChunk.shadowmap_vertex, "}"].join("\n"),
        fragmentShader: ["uniform vec3 psColor;", "uniform float opacity;", THREE.ShaderChunk.color_pars_fragment, THREE.ShaderChunk.map_particle_pars_fragment, THREE.ShaderChunk.fog_pars_fragment, THREE.ShaderChunk.shadowmap_pars_fragment, THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", "	gl_FragColor = vec4( psColor, opacity );", THREE.ShaderChunk.logdepthbuf_fragment, THREE.ShaderChunk.map_particle_fragment, THREE.ShaderChunk.alphatest_fragment, THREE.ShaderChunk.color_fragment, THREE.ShaderChunk.shadowmap_fragment, THREE.ShaderChunk.fog_fragment, "}"].join("\n")
    },
    dashed: {
        uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib.common, THREE.UniformsLib.fog, {
            scale: {
                type: "f",
                value: 1
            },
            dashSize: {
                type: "f",
                value: 1
            },
            totalSize: {
                type: "f",
                value: 2
            }
        }]),
        vertexShader: ["uniform float scale;", "attribute float lineDistance;", "varying float vLineDistance;", THREE.ShaderChunk.color_pars_vertex, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", THREE.ShaderChunk.color_vertex, "	vLineDistance = scale * lineDistance;", "	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );", "	gl_Position = projectionMatrix * mvPosition;", THREE.ShaderChunk.logdepthbuf_vertex, "}"].join("\n"),
        fragmentShader: ["uniform vec3 diffuse;", "uniform float opacity;", "uniform float dashSize;", "uniform float totalSize;", "varying float vLineDistance;", THREE.ShaderChunk.color_pars_fragment, THREE.ShaderChunk.fog_pars_fragment, THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", "	if ( mod( vLineDistance, totalSize ) > dashSize ) {", "		discard;", "	}", "	gl_FragColor = vec4( diffuse, opacity );", THREE.ShaderChunk.logdepthbuf_fragment, THREE.ShaderChunk.color_fragment, THREE.ShaderChunk.fog_fragment, "}"].join("\n")
    },
    depth: {
        uniforms: {
            mNear: {
                type: "f",
                value: 1
            },
            mFar: {
                type: "f",
                value: 2000
            },
            opacity: {
                type: "f",
                value: 1
            }
        },
        vertexShader: [THREE.ShaderChunk.morphtarget_pars_vertex, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", THREE.ShaderChunk.morphtarget_vertex, THREE.ShaderChunk.default_vertex, THREE.ShaderChunk.logdepthbuf_vertex, "}"].join("\n"),
        fragmentShader: ["uniform float mNear;", "uniform float mFar;", "uniform float opacity;", THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", THREE.ShaderChunk.logdepthbuf_fragment, "	#ifdef USE_LOGDEPTHBUF_EXT", "		float depth = gl_FragDepthEXT / gl_FragCoord.w;", "	#else", "		float depth = gl_FragCoord.z / gl_FragCoord.w;", "	#endif", "	float color = 1.0 - smoothstep( mNear, mFar, depth );", "	gl_FragColor = vec4( vec3( color ), opacity );", "}"].join("\n")
    },
    normal: {
        uniforms: {
            opacity: {
                type: "f",
                value: 1
            }
        },
        vertexShader: ["varying vec3 vNormal;", THREE.ShaderChunk.morphtarget_pars_vertex, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", "	vNormal = normalize( normalMatrix * normal );", THREE.ShaderChunk.morphtarget_vertex, THREE.ShaderChunk.default_vertex, THREE.ShaderChunk.logdepthbuf_vertex, "}"].join("\n"),
        fragmentShader: ["uniform float opacity;", "varying vec3 vNormal;", THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", "	gl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );", THREE.ShaderChunk.logdepthbuf_fragment, "}"].join("\n")
    },
    cube: {
        uniforms: {
            tCube: {
                type: "t",
                value: null
            },
            tFlip: {
                type: "f",
                value: -1
            }
        },
        vertexShader: ["varying vec3 vWorldPosition;", THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", "	vec4 worldPosition = modelMatrix * vec4( position, 1.0 );", "	vWorldPosition = worldPosition.xyz;", "	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );", THREE.ShaderChunk.logdepthbuf_vertex, "}"].join("\n"),
        fragmentShader: ["uniform samplerCube tCube;", "uniform float tFlip;", "varying vec3 vWorldPosition;", THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", "	gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );", THREE.ShaderChunk.logdepthbuf_fragment, "}"].join("\n")
    },
    equirect: {
        uniforms: {
            tEquirect: {
                type: "t",
                value: null
            },
            tFlip: {
                type: "f",
                value: -1
            }
        },
        vertexShader: ["varying vec3 vWorldPosition;", THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", "	vec4 worldPosition = modelMatrix * vec4( position, 1.0 );", "	vWorldPosition = worldPosition.xyz;", "	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );", THREE.ShaderChunk.logdepthbuf_vertex, "}"].join("\n"),
        fragmentShader: ["uniform sampler2D tEquirect;", "uniform float tFlip;", "varying vec3 vWorldPosition;", THREE.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", "vec3 direction = normalize( vWorldPosition );", "vec2 sampleUV;", "sampleUV.y = clamp( tFlip * direction.y * -0.5 + 0.5, 0.0, 1.0);", "sampleUV.x = atan( direction.z, direction.x ) * 0.15915494309189533576888376337251 + 0.5;", "gl_FragColor = texture2D( tEquirect, sampleUV );", THREE.ShaderChunk.logdepthbuf_fragment, "}"].join("\n")
    },
    depthRGBA: {
        uniforms: {},
        vertexShader: [THREE.ShaderChunk.morphtarget_pars_vertex, THREE.ShaderChunk.skinning_pars_vertex, THREE.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", THREE.ShaderChunk.skinbase_vertex, THREE.ShaderChunk.morphtarget_vertex, THREE.ShaderChunk.skinning_vertex, THREE.ShaderChunk.default_vertex, THREE.ShaderChunk.logdepthbuf_vertex, "}"].join("\n"),
        fragmentShader: [THREE.ShaderChunk.logdepthbuf_pars_fragment, "vec4 pack_depth( const in float depth ) {", "	const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );", "	const vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );", "	vec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );", "	res -= res.xxyz * bit_mask;", "	return res;", "}", "void main() {", THREE.ShaderChunk.logdepthbuf_fragment, "	#ifdef USE_LOGDEPTHBUF_EXT", "		gl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );", "	#else", "		gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );", "	#endif", "}"].join("\n")
    }
};
THREE.WebGLRenderer = function(aJ) {
    aJ = aJ || {};
    var aU = aJ.canvas !== undefined ? aJ.canvas : document.createElement("canvas"),
        aT = aJ.context !== undefined ? aJ.context : null,
        n = 1,
        i = aJ.precision !== undefined ? aJ.precision : "highp",
        bx = aJ.alpha !== undefined ? aJ.alpha : false,
        aw = aJ.depth !== undefined ? aJ.depth : true,
        e = aJ.stencil !== undefined ? aJ.stencil : true,
        bY = aJ.antialias !== undefined ? aJ.antialias : false,
        aX = aJ.premultipliedAlpha !== undefined ? aJ.premultipliedAlpha : true,
        W = aJ.preserveDrawingBuffer !== undefined ? aJ.preserveDrawingBuffer : false,
        t = aJ.logarithmicDepthBuffer !== undefined ? aJ.logarithmicDepthBuffer : false,
        bq = new THREE.Color(0),
        V = 0;
    var bI = [];
    var s = {};
    var o = [];
    var bv = [];
    var A = [];
    var ad = [];
    var Q = [];
    this.domElement = aU;
    this.context = null;
    this.autoClear = true;
    this.autoClearColor = true;
    this.autoClearDepth = true;
    this.autoClearStencil = true;
    this.sortObjects = true;
    this.gammaInput = false;
    this.gammaOutput = false;
    this.shadowMapEnabled = false;
    this.shadowMapType = THREE.PCFShadowMap;
    this.shadowMapCullFace = THREE.CullFaceFront;
    this.shadowMapDebug = false;
    this.shadowMapCascade = false;
    this.maxMorphTargets = 8;
    this.maxMorphNormals = 4;
    this.autoScaleCubemaps = true;
    this.info = {
        memory: {
            programs: 0,
            geometries: 0,
            textures: 0
        },
        render: {
            calls: 0,
            vertices: 0,
            faces: 0,
            points: 0
        }
    };
    var aK = this,
        by = [],
        al = null,
        bA = null,
        aZ = -1,
        aA = "",
        aH = null,
        bb = 0,
        bi = -1,
        j = -1,
        h = -1,
        ai = -1,
        bO = -1,
        ar = -1,
        a = -1,
        bu = -1,
        aF = null,
        bL = null,
        a8 = null,
        bm = null,
        a1 = 0,
        a0 = 0,
        bQ = aU.width,
        aQ = aU.height,
        D = 0,
        aP = 0,
        ao = new Uint8Array(16),
        M = new Uint8Array(16),
        br = new THREE.Frustum(),
        aW = new THREE.Matrix4(),
        F = new THREE.Matrix4(),
        U = new THREE.Vector3(),
        aI = new THREE.Vector3(),
        bZ = true,
        bp = {
            ambient: [0, 0, 0],
            directional: {
                length: 0,
                colors: [],
                positions: []
            },
            point: {
                length: 0,
                colors: [],
                positions: [],
                distances: []
            },
            spot: {
                length: 0,
                colors: [],
                positions: [],
                distances: [],
                directions: [],
                anglesCos: [],
                exponents: []
            },
            hemi: {
                length: 0,
                skyColors: [],
                groundColors: [],
                positions: []
            }
        };
    var c;
    try {
        var bT = {
            alpha: bx,
            depth: aw,
            stencil: e,
            antialias: bY,
            premultipliedAlpha: aX,
            preserveDrawingBuffer: W
        };
        c = aT || aU.getContext("webgl", bT) || aU.getContext("experimental-webgl", bT);
        if (c === null) {
            if (aU.getContext("webgl") !== null) {
                throw "Error creating WebGL context with your selected attributes."
            } else {
                throw "Error creating WebGL context."
            }
        }
        aU.addEventListener("webglcontextlost", function(b0) {
            b0.preventDefault();
            bS();
            ba();
            s = {}
        }, false)
    } catch (bH) {
        console.error(bH)
    }
    if (c.getShaderPrecisionFormat === undefined) {
        c.getShaderPrecisionFormat = function() {
            return {
                rangeMin: 1,
                rangeMax: 1,
                precision: 1
            }
        }
    }
    var a2 = new THREE.WebGLExtensions(c);
    a2.get("OES_texture_float");
    a2.get("OES_texture_float_linear");
    a2.get("OES_standard_derivatives");
    if (t) {
        a2.get("EXT_frag_depth")
    }
    var ba = function() {
        c.clearColor(0, 0, 0, 1);
        c.clearDepth(1);
        c.clearStencil(0);
        c.enable(c.DEPTH_TEST);
        c.depthFunc(c.LEQUAL);
        c.frontFace(c.CCW);
        c.cullFace(c.BACK);
        c.enable(c.CULL_FACE);
        c.enable(c.BLEND);
        c.blendEquation(c.FUNC_ADD);
        c.blendFunc(c.SRC_ALPHA, c.ONE_MINUS_SRC_ALPHA);
        c.viewport(a1, a0, bQ, aQ);
        c.clearColor(bq.r, bq.g, bq.b, V)
    };
    var bS = function() {
        al = null;
        aH = null;
        h = -1;
        a = -1;
        bu = -1;
        bi = -1;
        j = -1;
        aA = "";
        aZ = -1;
        bZ = true;
        for (var b0 = 0; b0 < M.length; b0++) {
            M[b0] = 0
        }
    };
    ba();
    this.context = c;
    var bE = c.getParameter(c.MAX_TEXTURE_IMAGE_UNITS);
    var b = c.getParameter(c.MAX_VERTEX_TEXTURE_IMAGE_UNITS);
    var B = c.getParameter(c.MAX_TEXTURE_SIZE);
    var an = c.getParameter(c.MAX_CUBE_MAP_TEXTURE_SIZE);
    var aR = b > 0;
    var Z = aR && a2.get("OES_texture_float");
    var bt = c.getShaderPrecisionFormat(c.VERTEX_SHADER, c.HIGH_FLOAT);
    var bP = c.getShaderPrecisionFormat(c.VERTEX_SHADER, c.MEDIUM_FLOAT);
    var bJ = c.getShaderPrecisionFormat(c.VERTEX_SHADER, c.LOW_FLOAT);
    var am = c.getShaderPrecisionFormat(c.FRAGMENT_SHADER, c.HIGH_FLOAT);
    var bz = c.getShaderPrecisionFormat(c.FRAGMENT_SHADER, c.MEDIUM_FLOAT);
    var ax = c.getShaderPrecisionFormat(c.FRAGMENT_SHADER, c.LOW_FLOAT);
    var X = (function() {
        var b0;
        return function() {
            if (b0 !== undefined) {
                return b0
            }
            b0 = [];
            if (a2.get("WEBGL_compressed_texture_pvrtc") || a2.get("WEBGL_compressed_texture_s3tc")) {
                var b1 = c.getParameter(c.COMPRESSED_TEXTURE_FORMATS);
                for (var b2 = 0; b2 < b1.length; b2++) {
                    b0.push(b1[b2])
                }
            }
            return b0
        }
    })();
    var bR = bt.precision > 0 && am.precision > 0;
    var bg = bP.precision > 0 && bz.precision > 0;
    if (i === "highp" && !bR) {
        if (bg) {
            i = "mediump";
            console.warn("THREE.WebGLRenderer: highp not supported, using mediump.")
        } else {
            i = "lowp";
            console.warn("THREE.WebGLRenderer: highp and mediump not supported, using lowp.")
        }
    }
    if (i === "mediump" && !bg) {
        i = "lowp";
        console.warn("THREE.WebGLRenderer: mediump not supported, using lowp.")
    }
    var l = new THREE.ShadowMapPlugin(this, bI, s, o);
    var be = new THREE.SpritePlugin(this, ad);
    var bK = new THREE.LensFlarePlugin(this, Q);
    this.getContext = function() {
        return c
    };
    this.forceContextLoss = function() {
        a2.get("WEBGL_lose_context").loseContext()
    };
    this.supportsVertexTextures = function() {
        return aR
    };
    this.supportsFloatTextures = function() {
        return a2.get("OES_texture_float")
    };
    this.supportsStandardDerivatives = function() {
        return a2.get("OES_standard_derivatives")
    };
    this.supportsCompressedTextureS3TC = function() {
        return a2.get("WEBGL_compressed_texture_s3tc")
    };
    this.supportsCompressedTexturePVRTC = function() {
        return a2.get("WEBGL_compressed_texture_pvrtc")
    };
    this.supportsBlendMinMax = function() {
        return a2.get("EXT_blend_minmax")
    };
    this.getMaxAnisotropy = (function() {
        var b0;
        return function() {
            if (b0 !== undefined) {
                return b0
            }
            var b1 = a2.get("EXT_texture_filter_anisotropic");
            b0 = b1 !== null ? c.getParameter(b1.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 0;
            return b0
        }
    })();
    this.getPrecision = function() {
        return i
    };
    this.getPixelRatio = function() {
        return n
    };
    this.setPixelRatio = function(b0) {
        n = b0
    };
    this.setSize = function(b1, b0, b2) {
        aU.width = b1 * n;
        aU.height = b0 * n;
        if (b2 !== false) {
            aU.style.width = b1 + "px";
            aU.style.height = b0 + "px"
        }
        this.setViewport(0, 0, b1, b0)
    };
    this.setViewport = function(b1, b3, b2, b0) {
        a1 = b1 * n;
        a0 = b3 * n;
        bQ = b2 * n;
        aQ = b0 * n;
        c.viewport(a1, a0, bQ, aQ)
    };
    this.setScissor = function(b1, b3, b2, b0) {
        c.scissor(b1 * n, b3 * n, b2 * n, b0 * n)
    };
    this.enableScissorTest = function(b0) {
        b0 ? c.enable(c.SCISSOR_TEST) : c.disable(c.SCISSOR_TEST)
    };
    this.getClearColor = function() {
        return bq
    };
    this.setClearColor = function(b0, b1) {
        bq.set(b0);
        V = b1 !== undefined ? b1 : 1;
        c.clearColor(bq.r, bq.g, bq.b, V)
    };
    this.getClearAlpha = function() {
        return V
    };
    this.setClearAlpha = function(b0) {
        V = b0;
        c.clearColor(bq.r, bq.g, bq.b, V)
    };
    this.clear = function(b0, b3, b1) {
        var b2 = 0;
        if (b0 === undefined || b0) {
            b2 |= c.COLOR_BUFFER_BIT
        }
        if (b3 === undefined || b3) {
            b2 |= c.DEPTH_BUFFER_BIT
        }
        if (b1 === undefined || b1) {
            b2 |= c.STENCIL_BUFFER_BIT
        }
        c.clear(b2)
    };
    this.clearColor = function() {
        c.clear(c.COLOR_BUFFER_BIT)
    };
    this.clearDepth = function() {
        c.clear(c.DEPTH_BUFFER_BIT)
    };
    this.clearStencil = function() {
        c.clear(c.STENCIL_BUFFER_BIT)
    };
    this.clearTarget = function(b2, b0, b3, b1) {
        this.setRenderTarget(b2);
        this.clear(b0, b3, b1)
    };
    this.resetGLState = bS;

    function G(b0) {
        b0.__webglVertexBuffer = c.createBuffer();
        b0.__webglColorBuffer = c.createBuffer();
        aK.info.memory.geometries++
    }

    function ae(b0) {
        b0.__webglVertexBuffer = c.createBuffer();
        b0.__webglColorBuffer = c.createBuffer();
        b0.__webglLineDistanceBuffer = c.createBuffer();
        aK.info.memory.geometries++
    }

    function aB(b1) {
        b1.__webglVertexBuffer = c.createBuffer();
        b1.__webglNormalBuffer = c.createBuffer();
        b1.__webglTangentBuffer = c.createBuffer();
        b1.__webglColorBuffer = c.createBuffer();
        b1.__webglUVBuffer = c.createBuffer();
        b1.__webglUV2Buffer = c.createBuffer();
        b1.__webglSkinIndicesBuffer = c.createBuffer();
        b1.__webglSkinWeightsBuffer = c.createBuffer();
        b1.__webglFaceBuffer = c.createBuffer();
        b1.__webglLineBuffer = c.createBuffer();
        var b4 = b1.numMorphTargets;
        if (b4) {
            b1.__webglMorphTargetsBuffers = [];
            for (var b0 = 0, b3 = b4; b0 < b3; b0++) {
                b1.__webglMorphTargetsBuffers.push(c.createBuffer())
            }
        }
        var b2 = b1.numMorphNormals;
        if (b2) {
            b1.__webglMorphNormalsBuffers = [];
            for (var b0 = 0, b3 = b2; b0 < b3; b0++) {
                b1.__webglMorphNormalsBuffers.push(c.createBuffer())
            }
        }
        aK.info.memory.geometries++
    }
    var bN = function(b1) {
        var b0 = b1.target;
        b0.traverse(function(b2) {
            b2.removeEventListener("remove", bN);
            N(b2)
        })
    };
    var aV = function(b0) {
        var b1 = b0.target;
        b1.removeEventListener("dispose", aV);
        bU(b1)
    };
    var ag = function(b1) {
        var b0 = b1.target;
        b0.removeEventListener("dispose", ag);
        I(b0);
        aK.info.memory.textures--
    };
    var S = function(b0) {
        var b1 = b0.target;
        b1.removeEventListener("dispose", S);
        ay(b1);
        aK.info.memory.textures--
    };
    var bf = function(b1) {
        var b0 = b1.target;
        b0.removeEventListener("dispose", bf);
        R(b0)
    };
    var m = function(b4) {
        var b1 = ["__webglVertexBuffer", "__webglNormalBuffer", "__webglTangentBuffer", "__webglColorBuffer", "__webglUVBuffer", "__webglUV2Buffer", "__webglSkinIndicesBuffer", "__webglSkinWeightsBuffer", "__webglFaceBuffer", "__webglLineBuffer", "__webglLineDistanceBuffer"];
        for (var b3 = 0, b0 = b1.length; b3 < b0; b3++) {
            var b2 = b1[b3];
            if (b4[b2] !== undefined) {
                c.deleteBuffer(b4[b2]);
                delete b4[b2]
            }
        }
        if (b4.__webglCustomAttributesList !== undefined) {
            for (var b2 in b4.__webglCustomAttributesList) {
                c.deleteBuffer(b4.__webglCustomAttributesList[b2].buffer)
            }
            delete b4.__webglCustomAttributesList
        }
        aK.info.memory.geometries--
    };
    var bU = function(b8) {
        delete b8.__webglInit;
        if (b8 instanceof THREE.BufferGeometry) {
            for (var b0 in b8.attributes) {
                var b1 = b8.attributes[b0];
                if (b1.buffer !== undefined) {
                    c.deleteBuffer(b1.buffer);
                    delete b1.buffer
                }
            }
            aK.info.memory.geometries--
        } else {
            var b7 = C[b8.id];
            if (b7 !== undefined) {
                for (var b6 = 0, b3 = b7.length; b6 < b3; b6++) {
                    var b4 = b7[b6];
                    if (b4.numMorphTargets !== undefined) {
                        for (var b2 = 0, b5 = b4.numMorphTargets; b2 < b5; b2++) {
                            c.deleteBuffer(b4.__webglMorphTargetsBuffers[b2])
                        }
                        delete b4.__webglMorphTargetsBuffers
                    }
                    if (b4.numMorphNormals !== undefined) {
                        for (var b2 = 0, b5 = b4.numMorphNormals; b2 < b5; b2++) {
                            c.deleteBuffer(b4.__webglMorphNormalsBuffers[b2])
                        }
                        delete b4.__webglMorphNormalsBuffers
                    }
                    m(b4)
                }
                delete C[b8.id]
            } else {
                m(b8)
            }
        }
        aA = ""
    };
    var I = function(b0) {
        if (b0.image && b0.image.__webglTextureCube) {
            c.deleteTexture(b0.image.__webglTextureCube);
            delete b0.image.__webglTextureCube
        } else {
            if (b0.__webglInit === undefined) {
                return
            }
            c.deleteTexture(b0.__webglTexture);
            delete b0.__webglTexture;
            delete b0.__webglInit
        }
    };
    var ay = function(b1) {
        if (!b1 || b1.__webglTexture === undefined) {
            return
        }
        c.deleteTexture(b1.__webglTexture);
        delete b1.__webglTexture;
        if (b1 instanceof THREE.WebGLRenderTargetCube) {
            for (var b0 = 0; b0 < 6; b0++) {
                c.deleteFramebuffer(b1.__webglFramebuffer[b0]);
                c.deleteRenderbuffer(b1.__webglRenderbuffer[b0])
            }
        } else {
            c.deleteFramebuffer(b1.__webglFramebuffer);
            c.deleteRenderbuffer(b1.__webglRenderbuffer)
        }
        delete b1.__webglFramebuffer;
        delete b1.__webglRenderbuffer
    };
    var R = function(b6) {
        var b2 = b6.program.program;
        if (b2 === undefined) {
            return
        }
        b6.program = undefined;
        var b3, b1, b5;
        var b4 = false;
        for (b3 = 0, b1 = by.length; b3 < b1; b3++) {
            b5 = by[b3];
            if (b5.program === b2) {
                b5.usedTimes--;
                if (b5.usedTimes === 0) {
                    b4 = true
                }
                break
            }
        }
        if (b4 === true) {
            var b0 = [];
            for (b3 = 0, b1 = by.length; b3 < b1; b3++) {
                b5 = by[b3];
                if (b5.program !== b2) {
                    b0.push(b5)
                }
            }
            by = b0;
            c.deleteProgram(b2);
            aK.info.memory.programs--
        }
    };

    function bV(b1) {
        var b6 = b1.geometry;
        var b4 = b1.material;
        var b3 = b6.vertices.length;
        if (b4.attributes) {
            if (b6.__webglCustomAttributesList === undefined) {
                b6.__webglCustomAttributesList = []
            }
            for (var b0 in b4.attributes) {
                var b5 = b4.attributes[b0];
                if (!b5.__webglInitialized || b5.createUniqueBuffers) {
                    b5.__webglInitialized = true;
                    var b2 = 1;
                    if (b5.type === "v2") {
                        b2 = 2
                    } else {
                        if (b5.type === "v3") {
                            b2 = 3
                        } else {
                            if (b5.type === "v4") {
                                b2 = 4
                            } else {
                                if (b5.type === "c") {
                                    b2 = 3
                                }
                            }
                        }
                    }
                    b5.size = b2;
                    b5.array = new Float32Array(b3 * b2);
                    b5.buffer = c.createBuffer();
                    b5.buffer.belongsToAttribute = b0;
                    b5.needsUpdate = true
                }
                b6.__webglCustomAttributesList.push(b5)
            }
        }
    }

    function bF(b2, b0) {
        var b1 = b2.vertices.length;
        b2.__vertexArray = new Float32Array(b1 * 3);
        b2.__colorArray = new Float32Array(b1 * 3);
        b2.__sortArray = [];
        b2.__webglParticleCount = b1;
        bV(b0)
    }

    function J(b2, b0) {
        var b1 = b2.vertices.length;
        b2.__vertexArray = new Float32Array(b1 * 3);
        b2.__colorArray = new Float32Array(b1 * 3);
        b2.__lineDistanceArray = new Float32Array(b1 * 1);
        b2.__webglLineCount = b1;
        bV(b0)
    }

    function ak(ca, cf) {
        var b2 = cf.geometry,
            cg = ca.faces3,
            cc = cg.length * 3,
            b5 = cg.length * 1,
            b7 = cg.length * 3,
            b4 = K(cf, ca);
        ca.__vertexArray = new Float32Array(cc * 3);
        ca.__normalArray = new Float32Array(cc * 3);
        ca.__colorArray = new Float32Array(cc * 3);
        ca.__uvArray = new Float32Array(cc * 2);
        if (b2.faceVertexUvs.length > 1) {
            ca.__uv2Array = new Float32Array(cc * 2)
        }
        if (b2.hasTangents) {
            ca.__tangentArray = new Float32Array(cc * 4)
        }
        if (cf.geometry.skinWeights.length && cf.geometry.skinIndices.length) {
            ca.__skinIndexArray = new Float32Array(cc * 4);
            ca.__skinWeightArray = new Float32Array(cc * 4)
        }
        var b8 = a2.get("OES_element_index_uint") !== null && b5 > 21845 ? Uint32Array : Uint16Array;
        ca.__typeArray = b8;
        ca.__faceArray = new b8(b5 * 3);
        ca.__lineArray = new b8(b7 * 2);
        var b0 = ca.numMorphTargets;
        if (b0) {
            ca.__morphTargetsArrays = [];
            for (var cb = 0, ce = b0; cb < ce; cb++) {
                ca.__morphTargetsArrays.push(new Float32Array(cc * 3))
            }
        }
        var b1 = ca.numMorphNormals;
        if (b1) {
            ca.__morphNormalsArrays = [];
            for (var cb = 0, ce = b1; cb < ce; cb++) {
                ca.__morphNormalsArrays.push(new Float32Array(cc * 3))
            }
        }
        ca.__webglFaceCount = b5 * 3;
        ca.__webglLineCount = b7 * 2;
        if (b4.attributes) {
            if (ca.__webglCustomAttributesList === undefined) {
                ca.__webglCustomAttributesList = []
            }
            for (var ch in b4.attributes) {
                var cd = b4.attributes[ch];
                var b6 = {};
                for (var b3 in cd) {
                    b6[b3] = cd[b3]
                }
                if (!b6.__webglInitialized || b6.createUniqueBuffers) {
                    b6.__webglInitialized = true;
                    var b9 = 1;
                    if (b6.type === "v2") {
                        b9 = 2
                    } else {
                        if (b6.type === "v3") {
                            b9 = 3
                        } else {
                            if (b6.type === "v4") {
                                b9 = 4
                            } else {
                                if (b6.type === "c") {
                                    b9 = 3
                                }
                            }
                        }
                    }
                    b6.size = b9;
                    b6.array = new Float32Array(cc * b9);
                    b6.buffer = c.createBuffer();
                    b6.buffer.belongsToAttribute = ch;
                    cd.needsUpdate = true;
                    b6.__original = cd
                }
                ca.__webglCustomAttributesList.push(b6)
            }
        }
        ca.__inittedArrays = true
    }

    function K(b1, b0) {
        return b1.material instanceof THREE.MeshFaceMaterial ? b1.material.materials[b0.materialIndex] : b1.material
    }

    function bw(b0) {
        return b0 && b0.shading !== undefined && b0.shading === THREE.SmoothShading
    }

    function a5(b1, ce, cs) {
        var cc, cq, co, b3, b6, ck, b4 = b1.vertices,
            cp = b4.length,
            b8 = b1.colors,
            b7 = b8.length,
            cd = b1.__vertexArray,
            b0 = b1.__colorArray,
            b2 = b1.__sortArray,
            ci = b1.verticesNeedUpdate,
            b5 = b1.elementsNeedUpdate,
            cf = b1.colorsNeedUpdate,
            ch = b1.__webglCustomAttributesList,
            cm, b9, cr, cg, cb, cj, cn;
        if (ci) {
            for (cc = 0; cc < cp; cc++) {
                co = b4[cc];
                b3 = cc * 3;
                cd[b3] = co.x;
                cd[b3 + 1] = co.y;
                cd[b3 + 2] = co.z
            }
            c.bindBuffer(c.ARRAY_BUFFER, b1.__webglVertexBuffer);
            c.bufferData(c.ARRAY_BUFFER, cd, ce)
        }
        if (cf) {
            for (cq = 0; cq < b7; cq++) {
                ck = b8[cq];
                b3 = cq * 3;
                b0[b3] = ck.r;
                b0[b3 + 1] = ck.g;
                b0[b3 + 2] = ck.b
            }
            c.bindBuffer(c.ARRAY_BUFFER, b1.__webglColorBuffer);
            c.bufferData(c.ARRAY_BUFFER, b0, ce)
        }
        if (ch) {
            for (cm = 0, b9 = ch.length; cm < b9; cm++) {
                cn = ch[cm];
                if (cn.needsUpdate && (cn.boundTo === undefined || cn.boundTo === "vertices")) {
                    cb = cn.value.length;
                    b3 = 0;
                    if (cn.size === 1) {
                        for (cg = 0; cg < cb; cg++) {
                            cn.array[cg] = cn.value[cg]
                        }
                    } else {
                        if (cn.size === 2) {
                            for (cg = 0; cg < cb; cg++) {
                                cj = cn.value[cg];
                                cn.array[b3] = cj.x;
                                cn.array[b3 + 1] = cj.y;
                                b3 += 2
                            }
                        } else {
                            if (cn.size === 3) {
                                if (cn.type === "c") {
                                    for (cg = 0; cg < cb; cg++) {
                                        cj = cn.value[cg];
                                        cn.array[b3] = cj.r;
                                        cn.array[b3 + 1] = cj.g;
                                        cn.array[b3 + 2] = cj.b;
                                        b3 += 3
                                    }
                                } else {
                                    for (cg = 0; cg < cb; cg++) {
                                        cj = cn.value[cg];
                                        cn.array[b3] = cj.x;
                                        cn.array[b3 + 1] = cj.y;
                                        cn.array[b3 + 2] = cj.z;
                                        b3 += 3
                                    }
                                }
                            } else {
                                if (cn.size === 4) {
                                    for (cg = 0; cg < cb; cg++) {
                                        cj = cn.value[cg];
                                        cn.array[b3] = cj.x;
                                        cn.array[b3 + 1] = cj.y;
                                        cn.array[b3 + 2] = cj.z;
                                        cn.array[b3 + 3] = cj.w;
                                        b3 += 4
                                    }
                                }
                            }
                        }
                    }
                }
                c.bindBuffer(c.ARRAY_BUFFER, cn.buffer);
                c.bufferData(c.ARRAY_BUFFER, cn.array, ce);
                cn.needsUpdate = false
            }
        }
    }

    function bn(b3, ce) {
        var cb, cs, cq, cp, b4, ck, b5 = b3.vertices,
            b7 = b3.colors,
            cd = b3.lineDistances,
            cr = b5.length,
            b6 = b7.length,
            cm = cd.length,
            cc = b3.__vertexArray,
            b2 = b3.__colorArray,
            b0 = b3.__lineDistanceArray,
            ci = b3.verticesNeedUpdate,
            cf = b3.colorsNeedUpdate,
            b1 = b3.lineDistancesNeedUpdate,
            ch = b3.__webglCustomAttributesList,
            cn, b8, ct, cg, b9, cj, co;
        if (ci) {
            for (cb = 0; cb < cr; cb++) {
                cp = b5[cb];
                b4 = cb * 3;
                cc[b4] = cp.x;
                cc[b4 + 1] = cp.y;
                cc[b4 + 2] = cp.z
            }
            c.bindBuffer(c.ARRAY_BUFFER, b3.__webglVertexBuffer);
            c.bufferData(c.ARRAY_BUFFER, cc, ce)
        }
        if (cf) {
            for (cs = 0; cs < b6; cs++) {
                ck = b7[cs];
                b4 = cs * 3;
                b2[b4] = ck.r;
                b2[b4 + 1] = ck.g;
                b2[b4 + 2] = ck.b
            }
            c.bindBuffer(c.ARRAY_BUFFER, b3.__webglColorBuffer);
            c.bufferData(c.ARRAY_BUFFER, b2, ce)
        }
        if (b1) {
            for (cq = 0; cq < cm; cq++) {
                b0[cq] = cd[cq]
            }
            c.bindBuffer(c.ARRAY_BUFFER, b3.__webglLineDistanceBuffer);
            c.bufferData(c.ARRAY_BUFFER, b0, ce)
        }
        if (ch) {
            for (cn = 0, b8 = ch.length; cn < b8; cn++) {
                co = ch[cn];
                if (co.needsUpdate && (co.boundTo === undefined || co.boundTo === "vertices")) {
                    b4 = 0;
                    b9 = co.value.length;
                    if (co.size === 1) {
                        for (cg = 0; cg < b9; cg++) {
                            co.array[cg] = co.value[cg]
                        }
                    } else {
                        if (co.size === 2) {
                            for (cg = 0; cg < b9; cg++) {
                                cj = co.value[cg];
                                co.array[b4] = cj.x;
                                co.array[b4 + 1] = cj.y;
                                b4 += 2
                            }
                        } else {
                            if (co.size === 3) {
                                if (co.type === "c") {
                                    for (cg = 0; cg < b9; cg++) {
                                        cj = co.value[cg];
                                        co.array[b4] = cj.r;
                                        co.array[b4 + 1] = cj.g;
                                        co.array[b4 + 2] = cj.b;
                                        b4 += 3
                                    }
                                } else {
                                    for (cg = 0; cg < b9; cg++) {
                                        cj = co.value[cg];
                                        co.array[b4] = cj.x;
                                        co.array[b4 + 1] = cj.y;
                                        co.array[b4 + 2] = cj.z;
                                        b4 += 3
                                    }
                                }
                            } else {
                                if (co.size === 4) {
                                    for (cg = 0; cg < b9; cg++) {
                                        cj = co.value[cg];
                                        co.array[b4] = cj.x;
                                        co.array[b4 + 1] = cj.y;
                                        co.array[b4 + 2] = cj.z;
                                        co.array[b4 + 3] = cj.w;
                                        b4 += 4
                                    }
                                }
                            }
                        }
                    }
                    c.bindBuffer(c.ARRAY_BUFFER, co.buffer);
                    c.bufferData(c.ARRAY_BUFFER, co.array, ce);
                    co.needsUpdate = false
                }
            }
        }
    }

    function k(de, dk, dO, cd, dM) {
        if (!de.__inittedArrays) {
            return
        }
        var cz = bw(dM);
        var cP, dx, dD, b1, cg, b6, cU, ci, cJ, b2, cI, dJ, c6, c5, c4, c0, dK, dI, dG, dE, dC, dz, dy, dw, dc, db, c9, ds, dr, dn, dm, ca, b9, b8, b7, cF, cD, cC, cB, cn, cm, ck, cj, cL, dh, cO, cH, cs, c8, dd, ct, cA, cK, da, cQ, c7, cT, cp = 0,
            cf = 0,
            dg = 0,
            dH = 0,
            cM = 0,
            cy = 0,
            ch = 0,
            cZ = 0,
            ce = 0,
            cN = 0,
            b0 = 0,
            cb = 0,
            cl = 0,
            cE, b5 = de.__vertexArray,
            cx = de.__uvArray,
            cc = de.__uv2Array,
            dl = de.__normalArray,
            dq = de.__tangentArray,
            cW = de.__colorArray,
            dj = de.__skinIndexArray,
            dB = de.__skinWeightArray,
            dA = de.__morphTargetsArrays,
            cu = de.__morphNormalsArrays,
            cw = de.__webglCustomAttributesList,
            b4, dF = de.__faceArray,
            cS = de.__lineArray,
            df = dk.geometry,
            cr = df.verticesNeedUpdate,
            cR = df.elementsNeedUpdate,
            cX = df.uvsNeedUpdate,
            b3 = df.normalsNeedUpdate,
            dL = df.tangentsNeedUpdate,
            dp = df.colorsNeedUpdate,
            dP = df.morphTargetsNeedUpdate,
            cY = df.vertices,
            co = de.faces3,
            dt = df.faces,
            cV = df.faceVertexUvs[0],
            cv = df.faceVertexUvs[1],
            du = df.colors,
            cG = df.skinIndices,
            dv = df.skinWeights,
            dN = df.morphTargets,
            di = df.morphNormals;
        if (cr) {
            for (cP = 0, dx = co.length; cP < dx; cP++) {
                b1 = dt[co[cP]];
                c6 = cY[b1.a];
                c5 = cY[b1.b];
                c4 = cY[b1.c];
                b5[cf] = c6.x;
                b5[cf + 1] = c6.y;
                b5[cf + 2] = c6.z;
                b5[cf + 3] = c5.x;
                b5[cf + 4] = c5.y;
                b5[cf + 5] = c5.z;
                b5[cf + 6] = c4.x;
                b5[cf + 7] = c4.y;
                b5[cf + 8] = c4.z;
                cf += 9
            }
            c.bindBuffer(c.ARRAY_BUFFER, de.__webglVertexBuffer);
            c.bufferData(c.ARRAY_BUFFER, b5, dO)
        }
        if (dP) {
            for (ct = 0, cA = dN.length; ct < cA; ct++) {
                b0 = 0;
                for (cP = 0, dx = co.length; cP < dx; cP++) {
                    cQ = co[cP];
                    b1 = dt[cQ];
                    c6 = dN[ct].vertices[b1.a];
                    c5 = dN[ct].vertices[b1.b];
                    c4 = dN[ct].vertices[b1.c];
                    cK = dA[ct];
                    cK[b0] = c6.x;
                    cK[b0 + 1] = c6.y;
                    cK[b0 + 2] = c6.z;
                    cK[b0 + 3] = c5.x;
                    cK[b0 + 4] = c5.y;
                    cK[b0 + 5] = c5.z;
                    cK[b0 + 6] = c4.x;
                    cK[b0 + 7] = c4.y;
                    cK[b0 + 8] = c4.z;
                    if (dM.morphNormals) {
                        if (cz) {
                            c7 = di[ct].vertexNormals[cQ];
                            dC = c7.a;
                            dz = c7.b;
                            dy = c7.c
                        } else {
                            dC = di[ct].faceNormals[cQ];
                            dz = dC;
                            dy = dC
                        }
                        da = cu[ct];
                        da[b0] = dC.x;
                        da[b0 + 1] = dC.y;
                        da[b0 + 2] = dC.z;
                        da[b0 + 3] = dz.x;
                        da[b0 + 4] = dz.y;
                        da[b0 + 5] = dz.z;
                        da[b0 + 6] = dy.x;
                        da[b0 + 7] = dy.y;
                        da[b0 + 8] = dy.z
                    }
                    b0 += 9
                }
                c.bindBuffer(c.ARRAY_BUFFER, de.__webglMorphTargetsBuffers[ct]);
                c.bufferData(c.ARRAY_BUFFER, dA[ct], dO);
                if (dM.morphNormals) {
                    c.bindBuffer(c.ARRAY_BUFFER, de.__webglMorphNormalsBuffers[ct]);
                    c.bufferData(c.ARRAY_BUFFER, cu[ct], dO)
                }
            }
        }
        if (dv.length) {
            for (cP = 0, dx = co.length; cP < dx; cP++) {
                b1 = dt[co[cP]];
                ds = dv[b1.a];
                dr = dv[b1.b];
                dn = dv[b1.c];
                dB[cN] = ds.x;
                dB[cN + 1] = ds.y;
                dB[cN + 2] = ds.z;
                dB[cN + 3] = ds.w;
                dB[cN + 4] = dr.x;
                dB[cN + 5] = dr.y;
                dB[cN + 6] = dr.z;
                dB[cN + 7] = dr.w;
                dB[cN + 8] = dn.x;
                dB[cN + 9] = dn.y;
                dB[cN + 10] = dn.z;
                dB[cN + 11] = dn.w;
                ca = cG[b1.a];
                b9 = cG[b1.b];
                b8 = cG[b1.c];
                dj[cN] = ca.x;
                dj[cN + 1] = ca.y;
                dj[cN + 2] = ca.z;
                dj[cN + 3] = ca.w;
                dj[cN + 4] = b9.x;
                dj[cN + 5] = b9.y;
                dj[cN + 6] = b9.z;
                dj[cN + 7] = b9.w;
                dj[cN + 8] = b8.x;
                dj[cN + 9] = b8.y;
                dj[cN + 10] = b8.z;
                dj[cN + 11] = b8.w;
                cN += 12
            }
            if (cN > 0) {
                c.bindBuffer(c.ARRAY_BUFFER, de.__webglSkinIndicesBuffer);
                c.bufferData(c.ARRAY_BUFFER, dj, dO);
                c.bindBuffer(c.ARRAY_BUFFER, de.__webglSkinWeightsBuffer);
                c.bufferData(c.ARRAY_BUFFER, dB, dO)
            }
        }
        if (dp) {
            for (cP = 0, dx = co.length; cP < dx; cP++) {
                b1 = dt[co[cP]];
                ci = b1.vertexColors;
                cJ = b1.color;
                if (ci.length === 3 && dM.vertexColors === THREE.VertexColors) {
                    dc = ci[0];
                    db = ci[1];
                    c9 = ci[2]
                } else {
                    dc = cJ;
                    db = cJ;
                    c9 = cJ
                }
                cW[ce] = dc.r;
                cW[ce + 1] = dc.g;
                cW[ce + 2] = dc.b;
                cW[ce + 3] = db.r;
                cW[ce + 4] = db.g;
                cW[ce + 5] = db.b;
                cW[ce + 6] = c9.r;
                cW[ce + 7] = c9.g;
                cW[ce + 8] = c9.b;
                ce += 9
            }
            if (ce > 0) {
                c.bindBuffer(c.ARRAY_BUFFER, de.__webglColorBuffer);
                c.bufferData(c.ARRAY_BUFFER, cW, dO)
            }
        }
        if (dL && df.hasTangents) {
            for (cP = 0, dx = co.length; cP < dx; cP++) {
                b1 = dt[co[cP]];
                b2 = b1.vertexTangents;
                dK = b2[0];
                dI = b2[1];
                dG = b2[2];
                dq[ch] = dK.x;
                dq[ch + 1] = dK.y;
                dq[ch + 2] = dK.z;
                dq[ch + 3] = dK.w;
                dq[ch + 4] = dI.x;
                dq[ch + 5] = dI.y;
                dq[ch + 6] = dI.z;
                dq[ch + 7] = dI.w;
                dq[ch + 8] = dG.x;
                dq[ch + 9] = dG.y;
                dq[ch + 10] = dG.z;
                dq[ch + 11] = dG.w;
                ch += 12
            }
            c.bindBuffer(c.ARRAY_BUFFER, de.__webglTangentBuffer);
            c.bufferData(c.ARRAY_BUFFER, dq, dO)
        }
        if (b3) {
            for (cP = 0, dx = co.length; cP < dx; cP++) {
                b1 = dt[co[cP]];
                cg = b1.vertexNormals;
                b6 = b1.normal;
                if (cg.length === 3 && cz) {
                    for (cO = 0; cO < 3; cO++) {
                        cs = cg[cO];
                        dl[cy] = cs.x;
                        dl[cy + 1] = cs.y;
                        dl[cy + 2] = cs.z;
                        cy += 3
                    }
                } else {
                    for (cO = 0; cO < 3; cO++) {
                        dl[cy] = b6.x;
                        dl[cy + 1] = b6.y;
                        dl[cy + 2] = b6.z;
                        cy += 3
                    }
                }
            }
            c.bindBuffer(c.ARRAY_BUFFER, de.__webglNormalBuffer);
            c.bufferData(c.ARRAY_BUFFER, dl, dO)
        }
        if (cX && cV) {
            for (cP = 0, dx = co.length; cP < dx; cP++) {
                dD = co[cP];
                cI = cV[dD];
                if (cI === undefined) {
                    continue
                }
                for (cO = 0; cO < 3; cO++) {
                    c8 = cI[cO];
                    cx[dg] = c8.x;
                    cx[dg + 1] = c8.y;
                    dg += 2
                }
            }
            if (dg > 0) {
                c.bindBuffer(c.ARRAY_BUFFER, de.__webglUVBuffer);
                c.bufferData(c.ARRAY_BUFFER, cx, dO)
            }
        }
        if (cX && cv) {
            for (cP = 0, dx = co.length; cP < dx; cP++) {
                dD = co[cP];
                dJ = cv[dD];
                if (dJ === undefined) {
                    continue
                }
                for (cO = 0; cO < 3; cO++) {
                    dd = dJ[cO];
                    cc[dH] = dd.x;
                    cc[dH + 1] = dd.y;
                    dH += 2
                }
            }
            if (dH > 0) {
                c.bindBuffer(c.ARRAY_BUFFER, de.__webglUV2Buffer);
                c.bufferData(c.ARRAY_BUFFER, cc, dO)
            }
        }
        if (cR) {
            for (cP = 0, dx = co.length; cP < dx; cP++) {
                dF[cM] = cp;
                dF[cM + 1] = cp + 1;
                dF[cM + 2] = cp + 2;
                cM += 3;
                cS[cZ] = cp;
                cS[cZ + 1] = cp + 1;
                cS[cZ + 2] = cp;
                cS[cZ + 3] = cp + 2;
                cS[cZ + 4] = cp + 1;
                cS[cZ + 5] = cp + 2;
                cZ += 6;
                cp += 3
            }
            c.bindBuffer(c.ELEMENT_ARRAY_BUFFER, de.__webglFaceBuffer);
            c.bufferData(c.ELEMENT_ARRAY_BUFFER, dF, dO);
            c.bindBuffer(c.ELEMENT_ARRAY_BUFFER, de.__webglLineBuffer);
            c.bufferData(c.ELEMENT_ARRAY_BUFFER, cS, dO)
        }
        if (cw) {
            for (cO = 0, cH = cw.length; cO < cH; cO++) {
                b4 = cw[cO];
                if (!b4.__original.needsUpdate) {
                    continue
                }
                cb = 0;
                cl = 0;
                if (b4.size === 1) {
                    if (b4.boundTo === undefined || b4.boundTo === "vertices") {
                        for (cP = 0, dx = co.length; cP < dx; cP++) {
                            b1 = dt[co[cP]];
                            b4.array[cb] = b4.value[b1.a];
                            b4.array[cb + 1] = b4.value[b1.b];
                            b4.array[cb + 2] = b4.value[b1.c];
                            cb += 3
                        }
                    } else {
                        if (b4.boundTo === "faces") {
                            for (cP = 0, dx = co.length; cP < dx; cP++) {
                                cE = b4.value[co[cP]];
                                b4.array[cb] = cE;
                                b4.array[cb + 1] = cE;
                                b4.array[cb + 2] = cE;
                                cb += 3
                            }
                        }
                    }
                } else {
                    if (b4.size === 2) {
                        if (b4.boundTo === undefined || b4.boundTo === "vertices") {
                            for (cP = 0, dx = co.length; cP < dx; cP++) {
                                b1 = dt[co[cP]];
                                c6 = b4.value[b1.a];
                                c5 = b4.value[b1.b];
                                c4 = b4.value[b1.c];
                                b4.array[cb] = c6.x;
                                b4.array[cb + 1] = c6.y;
                                b4.array[cb + 2] = c5.x;
                                b4.array[cb + 3] = c5.y;
                                b4.array[cb + 4] = c4.x;
                                b4.array[cb + 5] = c4.y;
                                cb += 6
                            }
                        } else {
                            if (b4.boundTo === "faces") {
                                for (cP = 0, dx = co.length; cP < dx; cP++) {
                                    cE = b4.value[co[cP]];
                                    c6 = cE;
                                    c5 = cE;
                                    c4 = cE;
                                    b4.array[cb] = c6.x;
                                    b4.array[cb + 1] = c6.y;
                                    b4.array[cb + 2] = c5.x;
                                    b4.array[cb + 3] = c5.y;
                                    b4.array[cb + 4] = c4.x;
                                    b4.array[cb + 5] = c4.y;
                                    cb += 6
                                }
                            }
                        }
                    } else {
                        if (b4.size === 3) {
                            var cq;
                            if (b4.type === "c") {
                                cq = ["r", "g", "b"]
                            } else {
                                cq = ["x", "y", "z"]
                            }
                            if (b4.boundTo === undefined || b4.boundTo === "vertices") {
                                for (cP = 0, dx = co.length; cP < dx; cP++) {
                                    b1 = dt[co[cP]];
                                    c6 = b4.value[b1.a];
                                    c5 = b4.value[b1.b];
                                    c4 = b4.value[b1.c];
                                    b4.array[cb] = c6[cq[0]];
                                    b4.array[cb + 1] = c6[cq[1]];
                                    b4.array[cb + 2] = c6[cq[2]];
                                    b4.array[cb + 3] = c5[cq[0]];
                                    b4.array[cb + 4] = c5[cq[1]];
                                    b4.array[cb + 5] = c5[cq[2]];
                                    b4.array[cb + 6] = c4[cq[0]];
                                    b4.array[cb + 7] = c4[cq[1]];
                                    b4.array[cb + 8] = c4[cq[2]];
                                    cb += 9
                                }
                            } else {
                                if (b4.boundTo === "faces") {
                                    for (cP = 0, dx = co.length; cP < dx; cP++) {
                                        cE = b4.value[co[cP]];
                                        c6 = cE;
                                        c5 = cE;
                                        c4 = cE;
                                        b4.array[cb] = c6[cq[0]];
                                        b4.array[cb + 1] = c6[cq[1]];
                                        b4.array[cb + 2] = c6[cq[2]];
                                        b4.array[cb + 3] = c5[cq[0]];
                                        b4.array[cb + 4] = c5[cq[1]];
                                        b4.array[cb + 5] = c5[cq[2]];
                                        b4.array[cb + 6] = c4[cq[0]];
                                        b4.array[cb + 7] = c4[cq[1]];
                                        b4.array[cb + 8] = c4[cq[2]];
                                        cb += 9
                                    }
                                } else {
                                    if (b4.boundTo === "faceVertices") {
                                        for (cP = 0, dx = co.length; cP < dx; cP++) {
                                            cE = b4.value[co[cP]];
                                            c6 = cE[0];
                                            c5 = cE[1];
                                            c4 = cE[2];
                                            b4.array[cb] = c6[cq[0]];
                                            b4.array[cb + 1] = c6[cq[1]];
                                            b4.array[cb + 2] = c6[cq[2]];
                                            b4.array[cb + 3] = c5[cq[0]];
                                            b4.array[cb + 4] = c5[cq[1]];
                                            b4.array[cb + 5] = c5[cq[2]];
                                            b4.array[cb + 6] = c4[cq[0]];
                                            b4.array[cb + 7] = c4[cq[1]];
                                            b4.array[cb + 8] = c4[cq[2]];
                                            cb += 9
                                        }
                                    }
                                }
                            }
                        } else {
                            if (b4.size === 4) {
                                if (b4.boundTo === undefined || b4.boundTo === "vertices") {
                                    for (cP = 0, dx = co.length; cP < dx; cP++) {
                                        b1 = dt[co[cP]];
                                        c6 = b4.value[b1.a];
                                        c5 = b4.value[b1.b];
                                        c4 = b4.value[b1.c];
                                        b4.array[cb] = c6.x;
                                        b4.array[cb + 1] = c6.y;
                                        b4.array[cb + 2] = c6.z;
                                        b4.array[cb + 3] = c6.w;
                                        b4.array[cb + 4] = c5.x;
                                        b4.array[cb + 5] = c5.y;
                                        b4.array[cb + 6] = c5.z;
                                        b4.array[cb + 7] = c5.w;
                                        b4.array[cb + 8] = c4.x;
                                        b4.array[cb + 9] = c4.y;
                                        b4.array[cb + 10] = c4.z;
                                        b4.array[cb + 11] = c4.w;
                                        cb += 12
                                    }
                                } else {
                                    if (b4.boundTo === "faces") {
                                        for (cP = 0, dx = co.length; cP < dx; cP++) {
                                            cE = b4.value[co[cP]];
                                            c6 = cE;
                                            c5 = cE;
                                            c4 = cE;
                                            b4.array[cb] = c6.x;
                                            b4.array[cb + 1] = c6.y;
                                            b4.array[cb + 2] = c6.z;
                                            b4.array[cb + 3] = c6.w;
                                            b4.array[cb + 4] = c5.x;
                                            b4.array[cb + 5] = c5.y;
                                            b4.array[cb + 6] = c5.z;
                                            b4.array[cb + 7] = c5.w;
                                            b4.array[cb + 8] = c4.x;
                                            b4.array[cb + 9] = c4.y;
                                            b4.array[cb + 10] = c4.z;
                                            b4.array[cb + 11] = c4.w;
                                            cb += 12
                                        }
                                    } else {
                                        if (b4.boundTo === "faceVertices") {
                                            for (cP = 0, dx = co.length; cP < dx; cP++) {
                                                cE = b4.value[co[cP]];
                                                c6 = cE[0];
                                                c5 = cE[1];
                                                c4 = cE[2];
                                                b4.array[cb] = c6.x;
                                                b4.array[cb + 1] = c6.y;
                                                b4.array[cb + 2] = c6.z;
                                                b4.array[cb + 3] = c6.w;
                                                b4.array[cb + 4] = c5.x;
                                                b4.array[cb + 5] = c5.y;
                                                b4.array[cb + 6] = c5.z;
                                                b4.array[cb + 7] = c5.w;
                                                b4.array[cb + 8] = c4.x;
                                                b4.array[cb + 9] = c4.y;
                                                b4.array[cb + 10] = c4.z;
                                                b4.array[cb + 11] = c4.w;
                                                cb += 12
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                c.bindBuffer(c.ARRAY_BUFFER, b4.buffer);
                c.bufferData(c.ARRAY_BUFFER, b4.array, dO)
            }
        }
        if (cd) {
            delete de.__inittedArrays;
            delete de.__colorArray;
            delete de.__normalArray;
            delete de.__tangentArray;
            delete de.__uvArray;
            delete de.__uv2Array;
            delete de.__faceArray;
            delete de.__vertexArray;
            delete de.__lineArray;
            delete de.__skinIndexArray;
            delete de.__skinWeightArray
        }
    }
    this.renderBufferImmediate = function(cf, b3, b5) {
        r();
        if (cf.hasPositions && !cf.__webglVertexBuffer) {
            cf.__webglVertexBuffer = c.createBuffer()
        }
        if (cf.hasNormals && !cf.__webglNormalBuffer) {
            cf.__webglNormalBuffer = c.createBuffer()
        }
        if (cf.hasUvs && !cf.__webglUvBuffer) {
            cf.__webglUvBuffer = c.createBuffer()
        }
        if (cf.hasColors && !cf.__webglColorBuffer) {
            cf.__webglColorBuffer = c.createBuffer()
        }
        if (cf.hasPositions) {
            c.bindBuffer(c.ARRAY_BUFFER, cf.__webglVertexBuffer);
            c.bufferData(c.ARRAY_BUFFER, cf.positionArray, c.DYNAMIC_DRAW);
            ah(b3.attributes.position);
            c.vertexAttribPointer(b3.attributes.position, 3, c.FLOAT, false, 0, 0)
        }
        if (cf.hasNormals) {
            c.bindBuffer(c.ARRAY_BUFFER, cf.__webglNormalBuffer);
            if (b5.shading === THREE.FlatShading) {
                var cd, cc, ca, b2, b8, ch, b1, b7, cg, b0, b6, ce, cb, b9, b4 = cf.count * 3;
                for (b9 = 0; b9 < b4; b9 += 9) {
                    cb = cf.normalArray;
                    b2 = cb[b9];
                    b1 = cb[b9 + 1];
                    b0 = cb[b9 + 2];
                    b8 = cb[b9 + 3];
                    b7 = cb[b9 + 4];
                    b6 = cb[b9 + 5];
                    ch = cb[b9 + 6];
                    cg = cb[b9 + 7];
                    ce = cb[b9 + 8];
                    cd = (b2 + b8 + ch) / 3;
                    cc = (b1 + b7 + cg) / 3;
                    ca = (b0 + b6 + ce) / 3;
                    cb[b9] = cd;
                    cb[b9 + 1] = cc;
                    cb[b9 + 2] = ca;
                    cb[b9 + 3] = cd;
                    cb[b9 + 4] = cc;
                    cb[b9 + 5] = ca;
                    cb[b9 + 6] = cd;
                    cb[b9 + 7] = cc;
                    cb[b9 + 8] = ca
                }
            }
            c.bufferData(c.ARRAY_BUFFER, cf.normalArray, c.DYNAMIC_DRAW);
            ah(b3.attributes.normal);
            c.vertexAttribPointer(b3.attributes.normal, 3, c.FLOAT, false, 0, 0)
        }
        if (cf.hasUvs && b5.map) {
            c.bindBuffer(c.ARRAY_BUFFER, cf.__webglUvBuffer);
            c.bufferData(c.ARRAY_BUFFER, cf.uvArray, c.DYNAMIC_DRAW);
            ah(b3.attributes.uv);
            c.vertexAttribPointer(b3.attributes.uv, 2, c.FLOAT, false, 0, 0)
        }
        if (cf.hasColors && b5.vertexColors !== THREE.NoColors) {
            c.bindBuffer(c.ARRAY_BUFFER, cf.__webglColorBuffer);
            c.bufferData(c.ARRAY_BUFFER, cf.colorArray, c.DYNAMIC_DRAW);
            ah(b3.attributes.color);
            c.vertexAttribPointer(b3.attributes.color, 3, c.FLOAT, false, 0, 0)
        }
        g();
        c.drawArrays(c.TRIANGLES, 0, cf.count);
        cf.count = 0
    };

    function Y(b6, b4, b7, ca) {
        var b5 = b7.attributes;
        var b0 = b4.attributes;
        var b9 = b4.attributesKeys;
        for (var b3 = 0, b1 = b9.length; b3 < b1; b3++) {
            var b8 = b9[b3];
            var b2 = b0[b8];
            if (b2 >= 0) {
                var cc = b5[b8];
                if (cc !== undefined) {
                    var cb = cc.itemSize;
                    c.bindBuffer(c.ARRAY_BUFFER, cc.buffer);
                    ah(b2);
                    c.vertexAttribPointer(b2, cb, c.FLOAT, false, 0, ca * cb * 4)
                } else {
                    if (b6.defaultAttributeValues !== undefined) {
                        if (b6.defaultAttributeValues[b8].length === 2) {
                            c.vertexAttrib2fv(b2, b6.defaultAttributeValues[b8])
                        } else {
                            if (b6.defaultAttributeValues[b8].length === 3) {
                                c.vertexAttrib3fv(b2, b6.defaultAttributeValues[b8])
                            }
                        }
                    }
                }
            }
        }
        g()
    }
    this.renderBufferDirect = function(cf, cg, b0, b8, b3, ci) {
        if (b8.visible === false) {
            return
        }
        L(ci);
        var b6 = aM(cf, cg, b0, b8, ci);
        var cb = false,
            cd = b8.wireframe ? 1 : 0,
            cc = "direct_" + b3.id + "_" + b6.id + "_" + cd;
        if (cc !== aA) {
            aA = cc;
            cb = true
        }
        if (cb) {
            r()
        }
        if (ci instanceof THREE.Mesh) {
            var b9 = b8.wireframe === true ? c.LINES : c.TRIANGLES;
            var b5 = b3.attributes.index;
            if (b5) {
                var b1, ca;
                if (b5.array instanceof Uint32Array && a2.get("OES_element_index_uint")) {
                    b1 = c.UNSIGNED_INT;
                    ca = 4
                } else {
                    b1 = c.UNSIGNED_SHORT;
                    ca = 2
                }
                var b4 = b3.offsets;
                if (b4.length === 0) {
                    if (cb) {
                        Y(b8, b6, b3, 0);
                        c.bindBuffer(c.ELEMENT_ARRAY_BUFFER, b5.buffer)
                    }
                    c.drawElements(b9, b5.array.length, b1, 0);
                    aK.info.render.calls++;
                    aK.info.render.vertices += b5.array.length;
                    aK.info.render.faces += b5.array.length / 3
                } else {
                    cb = true;
                    for (var ce = 0, b7 = b4.length; ce < b7; ce++) {
                        var b2 = b4[ce].index;
                        if (cb) {
                            Y(b8, b6, b3, b2);
                            c.bindBuffer(c.ELEMENT_ARRAY_BUFFER, b5.buffer)
                        }
                        c.drawElements(b9, b4[ce].count, b1, b4[ce].start * ca);
                        aK.info.render.calls++;
                        aK.info.render.vertices += b4[ce].count;
                        aK.info.render.faces += b4[ce].count / 3
                    }
                }
            } else {
                if (cb) {
                    Y(b8, b6, b3, 0)
                }
                var ch = b3.attributes.position;
                c.drawArrays(b9, 0, ch.array.length / 3);
                aK.info.render.calls++;
                aK.info.render.vertices += ch.array.length / 3;
                aK.info.render.faces += ch.array.length / 9
            }
        } else {
            if (ci instanceof THREE.PointCloud) {
                var b9 = c.POINTS;
                var b5 = b3.attributes.index;
                if (b5) {
                    var b1, ca;
                    if (b5.array instanceof Uint32Array && a2.get("OES_element_index_uint")) {
                        b1 = c.UNSIGNED_INT;
                        ca = 4
                    } else {
                        b1 = c.UNSIGNED_SHORT;
                        ca = 2
                    }
                    var b4 = b3.offsets;
                    if (b4.length === 0) {
                        if (cb) {
                            Y(b8, b6, b3, 0);
                            c.bindBuffer(c.ELEMENT_ARRAY_BUFFER, b5.buffer)
                        }
                        c.drawElements(b9, b5.array.length, b1, 0);
                        aK.info.render.calls++;
                        aK.info.render.points += b5.array.length
                    } else {
                        if (b4.length > 1) {
                            cb = true
                        }
                        for (var ce = 0, b7 = b4.length; ce < b7; ce++) {
                            var b2 = b4[ce].index;
                            if (cb) {
                                Y(b8, b6, b3, b2);
                                c.bindBuffer(c.ELEMENT_ARRAY_BUFFER, b5.buffer)
                            }
                            c.drawElements(b9, b4[ce].count, b1, b4[ce].start * ca);
                            aK.info.render.calls++;
                            aK.info.render.points += b4[ce].count
                        }
                    }
                } else {
                    if (cb) {
                        Y(b8, b6, b3, 0)
                    }
                    var ch = b3.attributes.position;
                    var b4 = b3.offsets;
                    if (b4.length === 0) {
                        c.drawArrays(b9, 0, ch.array.length / 3);
                        aK.info.render.calls++;
                        aK.info.render.points += ch.array.length / 3
                    } else {
                        for (var ce = 0, b7 = b4.length; ce < b7; ce++) {
                            c.drawArrays(b9, b4[ce].index, b4[ce].count);
                            aK.info.render.calls++;
                            aK.info.render.points += b4[ce].count
                        }
                    }
                }
            } else {
                if (ci instanceof THREE.Line) {
                    var b9 = (ci.mode === THREE.LineStrip) ? c.LINE_STRIP : c.LINES;
                    aD(b8.linewidth);
                    var b5 = b3.attributes.index;
                    if (b5) {
                        var b1, ca;
                        if (b5.array instanceof Uint32Array) {
                            b1 = c.UNSIGNED_INT;
                            ca = 4
                        } else {
                            b1 = c.UNSIGNED_SHORT;
                            ca = 2
                        }
                        var b4 = b3.offsets;
                        if (b4.length === 0) {
                            if (cb) {
                                Y(b8, b6, b3, 0);
                                c.bindBuffer(c.ELEMENT_ARRAY_BUFFER, b5.buffer)
                            }
                            c.drawElements(b9, b5.array.length, b1, 0);
                            aK.info.render.calls++;
                            aK.info.render.vertices += b5.array.length
                        } else {
                            if (b4.length > 1) {
                                cb = true
                            }
                            for (var ce = 0, b7 = b4.length; ce < b7; ce++) {
                                var b2 = b4[ce].index;
                                if (cb) {
                                    Y(b8, b6, b3, b2);
                                    c.bindBuffer(c.ELEMENT_ARRAY_BUFFER, b5.buffer)
                                }
                                c.drawElements(b9, b4[ce].count, b1, b4[ce].start * ca);
                                aK.info.render.calls++;
                                aK.info.render.vertices += b4[ce].count
                            }
                        }
                    } else {
                        if (cb) {
                            Y(b8, b6, b3, 0)
                        }
                        var ch = b3.attributes.position;
                        var b4 = b3.offsets;
                        if (b4.length === 0) {
                            c.drawArrays(b9, 0, ch.array.length / 3);
                            aK.info.render.calls++;
                            aK.info.render.vertices += ch.array.length / 3
                        } else {
                            for (var ce = 0, b7 = b4.length; ce < b7; ce++) {
                                c.drawArrays(b9, b4[ce].index, b4[ce].count);
                                aK.info.render.calls++;
                                aK.info.render.vertices += b4[ce].count
                            }
                        }
                    }
                }
            }
        }
    };
    this.renderBuffer = function(cb, b6, b0, cc, b5, b4) {
        if (cc.visible === false) {
            return
        }
        L(b4);
        var b9 = aM(cb, b6, b0, cc, b4);
        var b7 = b9.attributes;
        var b3 = false,
            ce = cc.wireframe ? 1 : 0,
            b2 = b5.id + "_" + b9.id + "_" + ce;
        if (b2 !== aA) {
            aA = b2;
            b3 = true
        }
        if (b3) {
            r()
        }
        if (!cc.morphTargets && b7.position >= 0) {
            if (b3) {
                c.bindBuffer(c.ARRAY_BUFFER, b5.__webglVertexBuffer);
                ah(b7.position);
                c.vertexAttribPointer(b7.position, 3, c.FLOAT, false, 0, 0)
            }
        } else {
            if (b4.morphTargetBase) {
                v(cc, b5, b4)
            }
        }
        if (b3) {
            if (b5.__webglCustomAttributesList) {
                for (var b8 = 0, cf = b5.__webglCustomAttributesList.length; b8 < cf; b8++) {
                    var b1 = b5.__webglCustomAttributesList[b8];
                    if (b7[b1.buffer.belongsToAttribute] >= 0) {
                        c.bindBuffer(c.ARRAY_BUFFER, b1.buffer);
                        ah(b7[b1.buffer.belongsToAttribute]);
                        c.vertexAttribPointer(b7[b1.buffer.belongsToAttribute], b1.size, c.FLOAT, false, 0, 0)
                    }
                }
            }
            if (b7.color >= 0) {
                if (b4.geometry.colors.length > 0 || b4.geometry.faces.length > 0) {
                    c.bindBuffer(c.ARRAY_BUFFER, b5.__webglColorBuffer);
                    ah(b7.color);
                    c.vertexAttribPointer(b7.color, 3, c.FLOAT, false, 0, 0)
                } else {
                    if (cc.defaultAttributeValues !== undefined) {
                        c.vertexAttrib3fv(b7.color, cc.defaultAttributeValues.color)
                    }
                }
            }
            if (b7.normal >= 0) {
                c.bindBuffer(c.ARRAY_BUFFER, b5.__webglNormalBuffer);
                ah(b7.normal);
                c.vertexAttribPointer(b7.normal, 3, c.FLOAT, false, 0, 0)
            }
            if (b7.tangent >= 0) {
                c.bindBuffer(c.ARRAY_BUFFER, b5.__webglTangentBuffer);
                ah(b7.tangent);
                c.vertexAttribPointer(b7.tangent, 4, c.FLOAT, false, 0, 0)
            }
            if (b7.uv >= 0) {
                if (b4.geometry.faceVertexUvs[0]) {
                    c.bindBuffer(c.ARRAY_BUFFER, b5.__webglUVBuffer);
                    ah(b7.uv);
                    c.vertexAttribPointer(b7.uv, 2, c.FLOAT, false, 0, 0)
                } else {
                    if (cc.defaultAttributeValues !== undefined) {
                        c.vertexAttrib2fv(b7.uv, cc.defaultAttributeValues.uv)
                    }
                }
            }
            if (b7.uv2 >= 0) {
                if (b4.geometry.faceVertexUvs[1]) {
                    c.bindBuffer(c.ARRAY_BUFFER, b5.__webglUV2Buffer);
                    ah(b7.uv2);
                    c.vertexAttribPointer(b7.uv2, 2, c.FLOAT, false, 0, 0)
                } else {
                    if (cc.defaultAttributeValues !== undefined) {
                        c.vertexAttrib2fv(b7.uv2, cc.defaultAttributeValues.uv2)
                    }
                }
            }
            if (cc.skinning && b7.skinIndex >= 0 && b7.skinWeight >= 0) {
                c.bindBuffer(c.ARRAY_BUFFER, b5.__webglSkinIndicesBuffer);
                ah(b7.skinIndex);
                c.vertexAttribPointer(b7.skinIndex, 4, c.FLOAT, false, 0, 0);
                c.bindBuffer(c.ARRAY_BUFFER, b5.__webglSkinWeightsBuffer);
                ah(b7.skinWeight);
                c.vertexAttribPointer(b7.skinWeight, 4, c.FLOAT, false, 0, 0)
            }
            if (b7.lineDistance >= 0) {
                c.bindBuffer(c.ARRAY_BUFFER, b5.__webglLineDistanceBuffer);
                ah(b7.lineDistance);
                c.vertexAttribPointer(b7.lineDistance, 1, c.FLOAT, false, 0, 0)
            }
        }
        g();
        if (b4 instanceof THREE.Mesh) {
            var cd = b5.__typeArray === Uint32Array ? c.UNSIGNED_INT : c.UNSIGNED_SHORT;
            if (cc.wireframe) {
                aD(cc.wireframeLinewidth);
                if (b3) {
                    c.bindBuffer(c.ELEMENT_ARRAY_BUFFER, b5.__webglLineBuffer)
                }
                c.drawElements(c.LINES, b5.__webglLineCount, cd, 0)
            } else {
                if (b3) {
                    c.bindBuffer(c.ELEMENT_ARRAY_BUFFER, b5.__webglFaceBuffer)
                }
                c.drawElements(c.TRIANGLES, b5.__webglFaceCount, cd, 0)
            }
            aK.info.render.calls++;
            aK.info.render.vertices += b5.__webglFaceCount;
            aK.info.render.faces += b5.__webglFaceCount / 3
        } else {
            if (b4 instanceof THREE.Line) {
                var ca = (b4.mode === THREE.LineStrip) ? c.LINE_STRIP : c.LINES;
                aD(cc.linewidth);
                c.drawArrays(ca, 0, b5.__webglLineCount);
                aK.info.render.calls++
            } else {
                if (b4 instanceof THREE.PointCloud) {
                    c.drawArrays(c.POINTS, 0, b5.__webglParticleCount);
                    aK.info.render.calls++;
                    aK.info.render.points += b5.__webglParticleCount
                }
            }
        }
    };

    function r() {
        for (var b1 = 0, b0 = ao.length; b1 < b0; b1++) {
            ao[b1] = 0
        }
    }

    function ah(b0) {
        ao[b0] = 1;
        if (M[b0] === 0) {
            c.enableVertexAttribArray(b0);
            M[b0] = 1
        }
    }

    function g() {
        for (var b1 = 0, b0 = M.length; b1 < b0; b1++) {
            if (M[b1] !== ao[b1]) {
                c.disableVertexAttribArray(b1);
                M[b1] = 0
            }
        }
    }

    function v(ca, b5, b4) {
        var b8 = ca.program.attributes;
        if (b4.morphTargetBase !== -1 && b8.position >= 0) {
            c.bindBuffer(c.ARRAY_BUFFER, b5.__webglMorphTargetsBuffers[b4.morphTargetBase]);
            ah(b8.position);
            c.vertexAttribPointer(b8.position, 3, c.FLOAT, false, 0, 0)
        } else {
            if (b8.position >= 0) {
                c.bindBuffer(c.ARRAY_BUFFER, b5.__webglVertexBuffer);
                ah(b8.position);
                c.vertexAttribPointer(b8.position, 3, c.FLOAT, false, 0, 0)
            }
        }
        if (b4.morphTargetForcedOrder.length) {
            var b1 = 0;
            var b2 = b4.morphTargetForcedOrder;
            var cc = b4.morphTargetInfluences;
            var b0;
            while (b1 < ca.numSupportedMorphTargets && b1 < b2.length) {
                b0 = b8["morphTarget" + b1];
                if (b0 >= 0) {
                    c.bindBuffer(c.ARRAY_BUFFER, b5.__webglMorphTargetsBuffers[b2[b1]]);
                    ah(b0);
                    c.vertexAttribPointer(b0, 3, c.FLOAT, false, 0, 0)
                }
                b0 = b8["morphNormal" + b1];
                if (b0 >= 0 && ca.morphNormals) {
                    c.bindBuffer(c.ARRAY_BUFFER, b5.__webglMorphNormalsBuffers[b2[b1]]);
                    ah(b0);
                    c.vertexAttribPointer(b0, 3, c.FLOAT, false, 0, 0)
                }
                b4.__webglMorphTargetInfluences[b1] = cc[b2[b1]];
                b1++
            }
        } else {
            var b3 = [];
            var cc = b4.morphTargetInfluences;
            for (var b9 = 0, cd = cc.length; b9 < cd; b9++) {
                var cb = cc[b9];
                b3.push([cb, b9])
            }
            if (b3.length > ca.numSupportedMorphTargets) {
                b3.sort(ac);
                b3.length = ca.numSupportedMorphTargets
            } else {
                if (b3.length > ca.numSupportedMorphNormals) {
                    b3.sort(ac)
                } else {
                    if (b3.length === 0) {
                        b3.push([0, 0])
                    }
                }
            }
            var b0;
            for (var b1 = 0, b7 = ca.numSupportedMorphTargets; b1 < b7; b1++) {
                if (b3[b1]) {
                    var b6 = b3[b1][1];
                    b0 = b8["morphTarget" + b1];
                    if (b0 >= 0) {
                        c.bindBuffer(c.ARRAY_BUFFER, b5.__webglMorphTargetsBuffers[b6]);
                        ah(b0);
                        c.vertexAttribPointer(b0, 3, c.FLOAT, false, 0, 0)
                    }
                    b0 = b8["morphNormal" + b1];
                    if (b0 >= 0 && ca.morphNormals) {
                        c.bindBuffer(c.ARRAY_BUFFER, b5.__webglMorphNormalsBuffers[b6]);
                        ah(b0);
                        c.vertexAttribPointer(b0, 3, c.FLOAT, false, 0, 0)
                    }
                    b4.__webglMorphTargetInfluences[b1] = cc[b6]
                } else {
                    b4.__webglMorphTargetInfluences[b1] = 0
                }
            }
        }
        if (ca.program.uniforms.morphTargetInfluences !== null) {
            c.uniform1fv(ca.program.uniforms.morphTargetInfluences, b4.__webglMorphTargetInfluences)
        }
    }

    function aC(b1, b0) {
        if (b1.material.id !== b0.material.id) {
            return b1.material.id - b0.material.id
        } else {
            if (b1.z !== b0.z) {
                return b1.z - b0.z
            } else {
                return b1.id - b0.id
            }
        }
    }

    function bj(b1, b0) {
        if (b1.z !== b0.z) {
            return b0.z - b1.z
        } else {
            return b1.id - b0.id
        }
    }

    function ac(b1, b0) {
        return b0[0] - b1[0]
    }
    this.render = function(b4, b8, b5, b6) {
        if (b8 instanceof THREE.Camera === false) {
            console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");
            return
        }
        var b0 = b4.fog;
        aA = "";
        aZ = -1;
        aH = null;
        bZ = true;
        if (b4.autoUpdate === true) {
            b4.updateMatrixWorld()
        }
        if (b8.parent === undefined) {
            b8.updateMatrixWorld()
        }
        b4.traverse(function(ca) {
            if (ca instanceof THREE.SkinnedMesh) {
                ca.skeleton.update()
            }
        });
        b8.matrixWorldInverse.getInverse(b8.matrixWorld);
        aW.multiplyMatrices(b8.projectionMatrix, b8.matrixWorldInverse);
        br.setFromMatrix(aW);
        bI.length = 0;
        bv.length = 0;
        A.length = 0;
        ad.length = 0;
        Q.length = 0;
        at(b4);
        if (aK.sortObjects === true) {
            bv.sort(aC);
            A.sort(bj)
        }
        l.render(b4, b8);
        aK.info.render.calls = 0;
        aK.info.render.vertices = 0;
        aK.info.render.faces = 0;
        aK.info.render.points = 0;
        this.setRenderTarget(b5);
        if (this.autoClear || b6) {
            this.clear(this.autoClearColor, this.autoClearDepth, this.autoClearStencil)
        }
        for (var b2 = 0, b9 = o.length; b2 < b9; b2++) {
            var b3 = o[b2];
            var b1 = b3.object;
            if (b1.visible) {
                bd(b1, b8);
                aN(b3)
            }
        }
        if (b4.overrideMaterial) {
            var b7 = b4.overrideMaterial;
            this.setBlending(b7.blending, b7.blendEquation, b7.blendSrc, b7.blendDst);
            this.setDepthTest(b7.depthTest);
            this.setDepthWrite(b7.depthWrite);
            bW(b7.polygonOffset, b7.polygonOffsetFactor, b7.polygonOffsetUnits);
            bs(bv, b8, bI, b0, true, b7);
            bs(A, b8, bI, b0, true, b7);
            bG(o, "", b8, bI, b0, false, b7)
        } else {
            var b7 = null;
            this.setBlending(THREE.NoBlending);
            bs(bv, b8, bI, b0, false, b7);
            bG(o, "opaque", b8, bI, b0, false, b7);
            bs(A, b8, bI, b0, true, b7);
            bG(o, "transparent", b8, bI, b0, true, b7)
        }
        be.render(b4, b8);
        bK.render(b4, b8, D, aP);
        if (b5 && b5.generateMipmaps && b5.minFilter !== THREE.NearestFilter && b5.minFilter !== THREE.LinearFilter) {
            aS(b5)
        }
        this.setDepthTest(true);
        this.setDepthWrite(true)
    };

    function at(b1) {
        if (b1.visible === false) {
            return
        }
        if (b1 instanceof THREE.Scene || b1 instanceof THREE.Group) {} else {
            E(b1);
            if (b1 instanceof THREE.Light) {
                bI.push(b1)
            } else {
                if (b1 instanceof THREE.Sprite) {
                    ad.push(b1)
                } else {
                    if (b1 instanceof THREE.LensFlare) {
                        Q.push(b1)
                    } else {
                        var b3 = s[b1.id];
                        if (b3 && (b1.frustumCulled === false || br.intersectsObject(b1) === true)) {
                            for (var b2 = 0, b0 = b3.length; b2 < b0; b2++) {
                                var b4 = b3[b2];
                                ap(b4);
                                b4.render = true;
                                if (aK.sortObjects === true) {
                                    U.setFromMatrixPosition(b1.matrixWorld);
                                    U.applyProjection(aW);
                                    b4.z = U.z
                                }
                            }
                        }
                    }
                }
            }
        }
        for (var b2 = 0, b0 = b1.children.length; b2 < b0; b2++) {
            at(b1.children[b2])
        }
    }

    function bs(b0, b9, b5, b1, b8, cb) {
        var ca;
        for (var b6 = 0, b2 = b0.length; b6 < b2; b6++) {
            var b7 = b0[b6];
            var b3 = b7.object;
            var b4 = b7.buffer;
            bd(b3, b9);
            if (cb) {
                ca = cb
            } else {
                ca = b7.material;
                if (!ca) {
                    continue
                }
                if (b8) {
                    aK.setBlending(ca.blending, ca.blendEquation, ca.blendSrc, ca.blendDst)
                }
                aK.setDepthTest(ca.depthTest);
                aK.setDepthWrite(ca.depthWrite);
                bW(ca.polygonOffset, ca.polygonOffsetFactor, ca.polygonOffsetUnits)
            }
            aK.setMaterialFaces(ca);
            if (b4 instanceof THREE.BufferGeometry) {
                aK.renderBufferDirect(b9, b5, b1, ca, b4, b3)
            } else {
                aK.renderBuffer(b9, b5, b1, ca, b4, b3)
            }
        }
    }

    function bG(b0, b7, b9, b4, b1, b8, cb) {
        var ca;
        for (var b5 = 0, b2 = b0.length; b5 < b2; b5++) {
            var b6 = b0[b5];
            var b3 = b6.object;
            if (b3.visible) {
                if (cb) {
                    ca = cb
                } else {
                    ca = b6[b7];
                    if (!ca) {
                        continue
                    }
                    if (b8) {
                        aK.setBlending(ca.blending, ca.blendEquation, ca.blendSrc, ca.blendDst)
                    }
                    aK.setDepthTest(ca.depthTest);
                    aK.setDepthWrite(ca.depthWrite);
                    bW(ca.polygonOffset, ca.polygonOffsetFactor, ca.polygonOffsetUnits)
                }
                aK.renderImmediateObject(b9, b4, b1, ca, b3)
            }
        }
    }
    this.renderImmediateObject = function(b4, b2, b5, b3, b1) {
        var b0 = aM(b4, b2, b5, b3, b1);
        aA = "";
        aK.setMaterialFaces(b3);
        if (b1.immediateRenderCallback) {
            b1.immediateRenderCallback(b0, c, br)
        } else {
            b1.render(function(b6) {
                aK.renderBufferImmediate(b6, b0, b3)
            })
        }
    };

    function aN(b2) {
        var b0 = b2.object,
            b1 = b0.material;
        if (b1.transparent) {
            b2.transparent = b1;
            b2.opaque = null
        } else {
            b2.opaque = b1;
            b2.transparent = null
        }
    }

    function ap(b4) {
        var b2 = b4.object;
        var b1 = b4.buffer;
        var b5 = b2.geometry;
        var b3 = b2.material;
        if (b3 instanceof THREE.MeshFaceMaterial) {
            var b0 = b5 instanceof THREE.BufferGeometry ? 0 : b1.materialIndex;
            b3 = b3.materials[b0];
            b4.material = b3;
            if (b3.transparent) {
                A.push(b4)
            } else {
                bv.push(b4)
            }
        } else {
            if (b3) {
                b4.material = b3;
                if (b3.transparent) {
                    A.push(b4)
                } else {
                    bv.push(b4)
                }
            }
        }
    }

    function E(b2) {
        if (b2.__webglInit === undefined) {
            b2.__webglInit = true;
            b2._modelViewMatrix = new THREE.Matrix4();
            b2._normalMatrix = new THREE.Matrix3();
            b2.addEventListener("removed", bN)
        }
        var b4 = b2.geometry;
        if (b4 === undefined) {} else {
            if (b4.__webglInit === undefined) {
                b4.__webglInit = true;
                b4.addEventListener("dispose", aV);
                if (b4 instanceof THREE.BufferGeometry) {
                    aK.info.memory.geometries++
                } else {
                    if (b2 instanceof THREE.Mesh) {
                        bh(b2, b4)
                    } else {
                        if (b2 instanceof THREE.Line) {
                            if (b4.__webglVertexBuffer === undefined) {
                                ae(b4);
                                J(b4, b2);
                                b4.verticesNeedUpdate = true;
                                b4.colorsNeedUpdate = true;
                                b4.lineDistancesNeedUpdate = true
                            }
                        } else {
                            if (b2 instanceof THREE.PointCloud) {
                                if (b4.__webglVertexBuffer === undefined) {
                                    G(b4);
                                    bF(b4, b2);
                                    b4.verticesNeedUpdate = true;
                                    b4.colorsNeedUpdate = true
                                }
                            }
                        }
                    }
                }
            }
        }
        if (b2.__webglActive === undefined) {
            b2.__webglActive = true;
            if (b2 instanceof THREE.Mesh) {
                if (b4 instanceof THREE.BufferGeometry) {
                    H(s, b4, b2)
                } else {
                    if (b4 instanceof THREE.Geometry) {
                        var b0 = C[b4.id];
                        for (var b3 = 0, b1 = b0.length; b3 < b1; b3++) {
                            H(s, b0[b3], b2)
                        }
                    }
                }
            } else {
                if (b2 instanceof THREE.Line || b2 instanceof THREE.PointCloud) {
                    H(s, b4, b2)
                } else {
                    if (b2 instanceof THREE.ImmediateRenderObject || b2.immediateRenderCallback) {
                        az(o, b2)
                    }
                }
            }
        }
    }
    var C = {};
    var bk = 0;

    function aY(b8, cd) {
        var b5 = a2.get("OES_element_index_uint") ? 4294967296 : 65535;
        var b2, b6 = {};
        var cb = b8.morphTargets.length;
        var b1 = b8.morphNormals.length;
        var cc;
        var b0 = {};
        var b3 = [];
        for (var b4 = 0, ca = b8.faces.length; b4 < ca; b4++) {
            var b7 = b8.faces[b4];
            var b9 = cd ? b7.materialIndex : 0;
            if (!(b9 in b6)) {
                b6[b9] = {
                    hash: b9,
                    counter: 0
                }
            }
            b2 = b6[b9].hash + "_" + b6[b9].counter;
            if (!(b2 in b0)) {
                cc = {
                    id: bk++,
                    faces3: [],
                    materialIndex: b9,
                    vertices: 0,
                    numMorphTargets: cb,
                    numMorphNormals: b1
                };
                b0[b2] = cc;
                b3.push(cc)
            }
            if (b0[b2].vertices + 3 > b5) {
                b6[b9].counter += 1;
                b2 = b6[b9].hash + "_" + b6[b9].counter;
                if (!(b2 in b0)) {
                    cc = {
                        id: bk++,
                        faces3: [],
                        materialIndex: b9,
                        vertices: 0,
                        numMorphTargets: cb,
                        numMorphNormals: b1
                    };
                    b0[b2] = cc;
                    b3.push(cc)
                }
            }
            b0[b2].faces3.push(b4);
            b0[b2].vertices += 3
        }
        return b3
    }

    function bh(b4, b7) {
        var b6 = b4.material,
            b3 = false;
        if (C[b7.id] === undefined || b7.groupsNeedUpdate === true) {
            delete s[b4.id];
            C[b7.id] = aY(b7, b6 instanceof THREE.MeshFaceMaterial);
            b7.groupsNeedUpdate = false
        }
        var b0 = C[b7.id];
        for (var b5 = 0, b2 = b0.length; b5 < b2; b5++) {
            var b1 = b0[b5];
            if (b1.__webglVertexBuffer === undefined) {
                aB(b1);
                ak(b1, b4);
                b7.verticesNeedUpdate = true;
                b7.morphTargetsNeedUpdate = true;
                b7.elementsNeedUpdate = true;
                b7.uvsNeedUpdate = true;
                b7.normalsNeedUpdate = true;
                b7.tangentsNeedUpdate = true;
                b7.colorsNeedUpdate = true;
                b3 = true
            } else {
                b3 = false
            }
            if (b3 || b4.__webglActive === undefined) {
                H(s, b1, b4)
            }
        }
        b4.__webglActive = true
    }

    function H(b2, b0, b1) {
        var b3 = b1.id;
        b2[b3] = b2[b3] || [];
        b2[b3].push({
            id: b3,
            buffer: b0,
            object: b1,
            material: null,
            z: 0
        })
    }

    function az(b1, b0) {
        b1.push({
            id: null,
            object: b0,
            opaque: null,
            transparent: null,
            z: 0
        })
    }

    function L(b3) {
        var b8 = b3.geometry;
        if (b8 instanceof THREE.BufferGeometry) {
            var b4 = b8.attributes;
            var cd = b8.attributesKeys;
            for (var b5 = 0, b1 = cd.length; b5 < b1; b5++) {
                var cb = cd[b5];
                var b0 = b4[cb];
                if (b0.buffer === undefined) {
                    b0.buffer = c.createBuffer();
                    b0.needsUpdate = true
                }
                if (b0.needsUpdate === true) {
                    var cc = (cb === "index") ? c.ELEMENT_ARRAY_BUFFER : c.ARRAY_BUFFER;
                    c.bindBuffer(cc, b0.buffer);
                    c.bufferData(cc, b0.array, c.STATIC_DRAW);
                    b0.needsUpdate = false
                }
            }
        } else {
            if (b3 instanceof THREE.Mesh) {
                if (b8.groupsNeedUpdate === true) {
                    bh(b3, b8)
                }
                var b7 = C[b8.id];
                for (var b5 = 0, b9 = b7.length; b5 < b9; b5++) {
                    var b2 = b7[b5];
                    var b6 = K(b3, b2);
                    if (b8.groupsNeedUpdate === true) {
                        ak(b2, b3)
                    }
                    var ca = b6.attributes && f(b6);
                    if (b8.verticesNeedUpdate || b8.morphTargetsNeedUpdate || b8.elementsNeedUpdate || b8.uvsNeedUpdate || b8.normalsNeedUpdate || b8.colorsNeedUpdate || b8.tangentsNeedUpdate || ca) {
                        k(b2, b3, c.DYNAMIC_DRAW, !b8.dynamic, b6)
                    }
                }
                b8.verticesNeedUpdate = false;
                b8.morphTargetsNeedUpdate = false;
                b8.elementsNeedUpdate = false;
                b8.uvsNeedUpdate = false;
                b8.normalsNeedUpdate = false;
                b8.colorsNeedUpdate = false;
                b8.tangentsNeedUpdate = false;
                b6.attributes && au(b6)
            } else {
                if (b3 instanceof THREE.Line) {
                    var b6 = K(b3, b8);
                    var ca = b6.attributes && f(b6);
                    if (b8.verticesNeedUpdate || b8.colorsNeedUpdate || b8.lineDistancesNeedUpdate || ca) {
                        bn(b8, c.DYNAMIC_DRAW)
                    }
                    b8.verticesNeedUpdate = false;
                    b8.colorsNeedUpdate = false;
                    b8.lineDistancesNeedUpdate = false;
                    b6.attributes && au(b6)
                } else {
                    if (b3 instanceof THREE.PointCloud) {
                        var b6 = K(b3, b8);
                        var ca = b6.attributes && f(b6);
                        if (b8.verticesNeedUpdate || b8.colorsNeedUpdate || ca) {
                            a5(b8, c.DYNAMIC_DRAW, b3)
                        }
                        b8.verticesNeedUpdate = false;
                        b8.colorsNeedUpdate = false;
                        b6.attributes && au(b6)
                    }
                }
            }
        }
    }

    function f(b1) {
        for (var b0 in b1.attributes) {
            if (b1.attributes[b0].needsUpdate) {
                return true
            }
        }
        return false
    }

    function au(b1) {
        for (var b0 in b1.attributes) {
            b1.attributes[b0].needsUpdate = false
        }
    }

    function N(b0) {
        if (b0 instanceof THREE.Mesh || b0 instanceof THREE.PointCloud || b0 instanceof THREE.Line) {
            delete s[b0.id]
        } else {
            if (b0 instanceof THREE.ImmediateRenderObject || b0.immediateRenderCallback) {
                bX(o, b0)
            }
        }
        delete b0.__webglInit;
        delete b0._modelViewMatrix;
        delete b0._normalMatrix;
        delete b0.__webglActive
    }

    function bX(b1, b0) {
        for (var b2 = b1.length - 1; b2 >= 0; b2--) {
            if (b1[b2].object === b0) {
                b1.splice(b2, 1)
            }
        }
    }
    var aG = {
        MeshDepthMaterial: "depth",
        MeshNormalMaterial: "normal",
        MeshBasicMaterial: "basic",
        MeshLambertMaterial: "lambert",
        MeshPhongMaterial: "phong",
        LineBasicMaterial: "basic",
        LineDashedMaterial: "dashed",
        PointCloudMaterial: "particle_basic"
    };

    function bC(cc, cj, b1, cl) {
        cc.addEventListener("dispose", bf);
        var b7 = aG[cc.type];
        if (b7) {
            var b0 = THREE.ShaderLib[b7];
            cc.__webglShader = {
                uniforms: THREE.UniformsUtils.clone(b0.uniforms),
                vertexShader: b0.vertexShader,
                fragmentShader: b0.fragmentShader
            }
        } else {
            cc.__webglShader = {
                uniforms: cc.uniforms,
                vertexShader: cc.vertexShader,
                fragmentShader: cc.fragmentShader
            }
        }
        var cf = bc(cj);
        var b6 = aa(cj);
        var ck = aE(cl);
        var b8 = {
            precision: i,
            supportsVertexTextures: aR,
            map: !!cc.map,
            envMap: !!cc.envMap,
            envMapMode: cc.envMap && cc.envMap.mapping,
            lightMap: !!cc.lightMap,
            bumpMap: !!cc.bumpMap,
            normalMap: !!cc.normalMap,
            specularMap: !!cc.specularMap,
            alphaMap: !!cc.alphaMap,
            combine: cc.combine,
            vertexColors: cc.vertexColors,
            fog: b1,
            useFog: cc.fog,
            fogExp: b1 instanceof THREE.FogExp2,
            sizeAttenuation: cc.sizeAttenuation,
            logarithmicDepthBuffer: t,
            skinning: cc.skinning,
            maxBones: ck,
            useVertexTexture: Z && cl && cl.skeleton && cl.skeleton.useVertexTexture,
            morphTargets: cc.morphTargets,
            morphNormals: cc.morphNormals,
            maxMorphTargets: aK.maxMorphTargets,
            maxMorphNormals: aK.maxMorphNormals,
            maxDirLights: cf.directional,
            maxPointLights: cf.point,
            maxSpotLights: cf.spot,
            maxHemiLights: cf.hemi,
            maxShadows: b6,
            shadowMapEnabled: aK.shadowMapEnabled && cl.receiveShadow && b6 > 0,
            shadowMapType: aK.shadowMapType,
            shadowMapDebug: aK.shadowMapDebug,
            shadowMapCascade: aK.shadowMapCascade,
            alphaTest: cc.alphaTest,
            metal: cc.metal,
            wrapAround: cc.wrapAround,
            doubleSided: cc.side === THREE.DoubleSide,
            flipSided: cc.side === THREE.BackSide
        };
        var cd = [];
        if (b7) {
            cd.push(b7)
        } else {
            cd.push(cc.fragmentShader);
            cd.push(cc.vertexShader)
        }
        if (cc.defines !== undefined) {
            for (var cm in cc.defines) {
                cd.push(cm);
                cd.push(cc.defines[cm])
            }
        }
        for (var cm in b8) {
            cd.push(cm);
            cd.push(b8[cm])
        }
        var b3 = cd.join();
        var ca;
        for (var cg = 0, ci = by.length; cg < ci; cg++) {
            var b5 = by[cg];
            if (b5.code === b3) {
                ca = b5;
                ca.usedTimes++;
                break
            }
        }
        if (ca === undefined) {
            ca = new THREE.WebGLProgram(aK, b3, cc, b8);
            by.push(ca);
            aK.info.memory.programs = by.length
        }
        cc.program = ca;
        var b9 = ca.attributes;
        if (cc.morphTargets) {
            cc.numSupportedMorphTargets = 0;
            var ce, b4 = "morphTarget";
            for (var ch = 0; ch < aK.maxMorphTargets; ch++) {
                ce = b4 + ch;
                if (b9[ce] >= 0) {
                    cc.numSupportedMorphTargets++
                }
            }
        }
        if (cc.morphNormals) {
            cc.numSupportedMorphNormals = 0;
            var ce, b4 = "morphNormal";
            for (ch = 0; ch < aK.maxMorphNormals; ch++) {
                ce = b4 + ch;
                if (b9[ce] >= 0) {
                    cc.numSupportedMorphNormals++
                }
            }
        }
        cc.uniformsList = [];
        for (var cb in cc.__webglShader.uniforms) {
            var b2 = cc.program.uniforms[cb];
            if (b2) {
                cc.uniformsList.push([cc.__webglShader.uniforms[cb], b2])
            }
        }
    }

    function aM(b7, b4, b0, b8, b3) {
        bb = 0;
        if (b8.needsUpdate) {
            if (b8.program) {
                R(b8)
            }
            bC(b8, b4, b0, b3);
            b8.needsUpdate = false
        }
        if (b8.morphTargets) {
            if (!b3.__webglMorphTargetInfluences) {
                b3.__webglMorphTargetInfluences = new Float32Array(aK.maxMorphTargets)
            }
        }
        var b2 = false;
        var b6 = false;
        var b1 = false;
        var b5 = b8.program,
            cb = b5.uniforms,
            b9 = b8.__webglShader.uniforms;
        if (b5.id !== al) {
            c.useProgram(b5.program);
            al = b5.id;
            b2 = true;
            b6 = true;
            b1 = true
        }
        if (b8.id !== aZ) {
            if (aZ === -1) {
                b1 = true
            }
            aZ = b8.id;
            b6 = true
        }
        if (b2 || b7 !== aH) {
            c.uniformMatrix4fv(cb.projectionMatrix, false, b7.projectionMatrix.elements);
            if (t) {
                c.uniform1f(cb.logDepthBufFC, 2 / (Math.log(b7.far + 1) / Math.LN2))
            }
            if (b7 !== aH) {
                aH = b7
            }
            if (b8 instanceof THREE.ShaderMaterial || b8 instanceof THREE.MeshPhongMaterial || b8.envMap) {
                if (cb.cameraPosition !== null) {
                    U.setFromMatrixPosition(b7.matrixWorld);
                    c.uniform3f(cb.cameraPosition, U.x, U.y, U.z)
                }
            }
            if (b8 instanceof THREE.MeshPhongMaterial || b8 instanceof THREE.MeshLambertMaterial || b8 instanceof THREE.MeshBasicMaterial || b8 instanceof THREE.ShaderMaterial || b8.skinning) {
                if (cb.viewMatrix !== null) {
                    c.uniformMatrix4fv(cb.viewMatrix, false, b7.matrixWorldInverse.elements)
                }
            }
        }
        if (b8.skinning) {
            if (b3.bindMatrix && cb.bindMatrix !== null) {
                c.uniformMatrix4fv(cb.bindMatrix, false, b3.bindMatrix.elements)
            }
            if (b3.bindMatrixInverse && cb.bindMatrixInverse !== null) {
                c.uniformMatrix4fv(cb.bindMatrixInverse, false, b3.bindMatrixInverse.elements)
            }
            if (Z && b3.skeleton && b3.skeleton.useVertexTexture) {
                if (cb.boneTexture !== null) {
                    var ca = av();
                    c.uniform1i(cb.boneTexture, ca);
                    aK.setTexture(b3.skeleton.boneTexture, ca)
                }
                if (cb.boneTextureWidth !== null) {
                    c.uniform1i(cb.boneTextureWidth, b3.skeleton.boneTextureWidth)
                }
                if (cb.boneTextureHeight !== null) {
                    c.uniform1i(cb.boneTextureHeight, b3.skeleton.boneTextureHeight)
                }
            } else {
                if (b3.skeleton && b3.skeleton.boneMatrices) {
                    if (cb.boneGlobalMatrices !== null) {
                        c.uniformMatrix4fv(cb.boneGlobalMatrices, false, b3.skeleton.boneMatrices)
                    }
                }
            }
        }
        if (b6) {
            if (b0 && b8.fog) {
                ab(b9, b0)
            }
            if (b8 instanceof THREE.MeshPhongMaterial || b8 instanceof THREE.MeshLambertMaterial || b8.lights) {
                if (bZ) {
                    b1 = true;
                    d(b4);
                    bZ = false
                }
                if (b1) {
                    a9(b9, bp);
                    P(b9, true)
                } else {
                    P(b9, false)
                }
            }
            if (b8 instanceof THREE.MeshBasicMaterial || b8 instanceof THREE.MeshLambertMaterial || b8 instanceof THREE.MeshPhongMaterial) {
                bB(b9, b8)
            }
            if (b8 instanceof THREE.LineBasicMaterial) {
                aq(b9, b8)
            } else {
                if (b8 instanceof THREE.LineDashedMaterial) {
                    aq(b9, b8);
                    af(b9, b8)
                } else {
                    if (b8 instanceof THREE.PointCloudMaterial) {
                        bo(b9, b8)
                    } else {
                        if (b8 instanceof THREE.MeshPhongMaterial) {
                            O(b9, b8)
                        } else {
                            if (b8 instanceof THREE.MeshLambertMaterial) {
                                bD(b9, b8)
                            } else {
                                if (b8 instanceof THREE.MeshDepthMaterial) {
                                    b9.mNear.value = b7.near;
                                    b9.mFar.value = b7.far;
                                    b9.opacity.value = b8.opacity
                                } else {
                                    if (b8 instanceof THREE.MeshNormalMaterial) {
                                        b9.opacity.value = b8.opacity
                                    }
                                }
                            }
                        }
                    }
                }
            }
            if (b3.receiveShadow && !b8._shadowPass) {
                bM(b9, b4)
            }
            T(b8.uniformsList)
        }
        u(cb, b3);
        if (cb.modelMatrix !== null) {
            c.uniformMatrix4fv(cb.modelMatrix, false, b3.matrixWorld.elements)
        }
        return b5
    }

    function bB(b1, b2) {
        b1.opacity.value = b2.opacity;
        if (aK.gammaInput) {
            b1.diffuse.value.copyGammaToLinear(b2.color)
        } else {
            b1.diffuse.value = b2.color
        }
        b1.map.value = b2.map;
        b1.lightMap.value = b2.lightMap;
        b1.specularMap.value = b2.specularMap;
        b1.alphaMap.value = b2.alphaMap;
        if (b2.bumpMap) {
            b1.bumpMap.value = b2.bumpMap;
            b1.bumpScale.value = b2.bumpScale
        }
        if (b2.normalMap) {
            b1.normalMap.value = b2.normalMap;
            b1.normalScale.value.copy(b2.normalScale)
        }
        var b0;
        if (b2.map) {
            b0 = b2.map
        } else {
            if (b2.specularMap) {
                b0 = b2.specularMap
            } else {
                if (b2.normalMap) {
                    b0 = b2.normalMap
                } else {
                    if (b2.bumpMap) {
                        b0 = b2.bumpMap
                    } else {
                        if (b2.alphaMap) {
                            b0 = b2.alphaMap
                        }
                    }
                }
            }
        }
        if (b0 !== undefined) {
            var b4 = b0.offset;
            var b3 = b0.repeat;
            b1.offsetRepeat.value.set(b4.x, b4.y, b3.x, b3.y)
        }
        b1.envMap.value = b2.envMap;
        b1.flipEnvMap.value = (b2.envMap instanceof THREE.WebGLRenderTargetCube) ? 1 : -1;
        if (aK.gammaInput) {
            b1.reflectivity.value = b2.reflectivity
        } else {
            b1.reflectivity.value = b2.reflectivity
        }
        b1.refractionRatio.value = b2.refractionRatio
    }

    function aq(b0, b1) {
        b0.diffuse.value = b1.color;
        b0.opacity.value = b1.opacity
    }

    function af(b0, b1) {
        b0.dashSize.value = b1.dashSize;
        b0.totalSize.value = b1.dashSize + b1.gapSize;
        b0.scale.value = b1.scale
    }

    function bo(b0, b1) {
        b0.psColor.value = b1.color;
        b0.opacity.value = b1.opacity;
        b0.size.value = b1.size;
        b0.scale.value = aU.height / 2;
        b0.map.value = b1.map
    }

    function ab(b0, b1) {
        b0.fogColor.value = b1.color;
        if (b1 instanceof THREE.Fog) {
            b0.fogNear.value = b1.near;
            b0.fogFar.value = b1.far
        } else {
            if (b1 instanceof THREE.FogExp2) {
                b0.fogDensity.value = b1.density
            }
        }
    }

    function O(b0, b1) {
        b0.shininess.value = b1.shininess;
        if (aK.gammaInput) {
            b0.ambient.value.copyGammaToLinear(b1.ambient);
            b0.emissive.value.copyGammaToLinear(b1.emissive);
            b0.specular.value.copyGammaToLinear(b1.specular)
        } else {
            b0.ambient.value = b1.ambient;
            b0.emissive.value = b1.emissive;
            b0.specular.value = b1.specular
        }
        if (b1.wrapAround) {
            b0.wrapRGB.value.copy(b1.wrapRGB)
        }
    }

    function bD(b0, b1) {
        if (aK.gammaInput) {
            b0.ambient.value.copyGammaToLinear(b1.ambient);
            b0.emissive.value.copyGammaToLinear(b1.emissive)
        } else {
            b0.ambient.value = b1.ambient;
            b0.emissive.value = b1.emissive
        }
        if (b1.wrapAround) {
            b0.wrapRGB.value.copy(b1.wrapRGB)
        }
    }

    function a9(b0, b1) {
        b0.ambientLightColor.value = b1.ambient;
        b0.directionalLightColor.value = b1.directional.colors;
        b0.directionalLightDirection.value = b1.directional.positions;
        b0.pointLightColor.value = b1.point.colors;
        b0.pointLightPosition.value = b1.point.positions;
        b0.pointLightDistance.value = b1.point.distances;
        b0.spotLightColor.value = b1.spot.colors;
        b0.spotLightPosition.value = b1.spot.positions;
        b0.spotLightDistance.value = b1.spot.distances;
        b0.spotLightDirection.value = b1.spot.directions;
        b0.spotLightAngleCos.value = b1.spot.anglesCos;
        b0.spotLightExponent.value = b1.spot.exponents;
        b0.hemisphereLightSkyColor.value = b1.hemi.skyColors;
        b0.hemisphereLightGroundColor.value = b1.hemi.groundColors;
        b0.hemisphereLightDirection.value = b1.hemi.positions
    }

    function P(b0, b1) {
        b0.ambientLightColor.needsUpdate = b1;
        b0.directionalLightColor.needsUpdate = b1;
        b0.directionalLightDirection.needsUpdate = b1;
        b0.pointLightColor.needsUpdate = b1;
        b0.pointLightPosition.needsUpdate = b1;
        b0.pointLightDistance.needsUpdate = b1;
        b0.spotLightColor.needsUpdate = b1;
        b0.spotLightPosition.needsUpdate = b1;
        b0.spotLightDistance.needsUpdate = b1;
        b0.spotLightDirection.needsUpdate = b1;
        b0.spotLightAngleCos.needsUpdate = b1;
        b0.spotLightExponent.needsUpdate = b1;
        b0.hemisphereLightSkyColor.needsUpdate = b1;
        b0.hemisphereLightGroundColor.needsUpdate = b1;
        b0.hemisphereLightDirection.needsUpdate = b1
    }

    function bM(b0, b4) {
        if (b0.shadowMatrix) {
            var b3 = 0;
            for (var b5 = 0, b2 = b4.length; b5 < b2; b5++) {
                var b1 = b4[b5];
                if (!b1.castShadow) {
                    continue
                }
                if (b1 instanceof THREE.SpotLight || (b1 instanceof THREE.DirectionalLight && !b1.shadowCascade)) {
                    b0.shadowMap.value[b3] = b1.shadowMap;
                    b0.shadowMapSize.value[b3] = b1.shadowMapSize;
                    b0.shadowMatrix.value[b3] = b1.shadowMatrix;
                    b0.shadowDarkness.value[b3] = b1.shadowDarkness;
                    b0.shadowBias.value[b3] = b1.shadowBias;
                    b3++
                }
            }
        }
    }

    function u(b0, b1) {
        c.uniformMatrix4fv(b0.modelViewMatrix, false, b1._modelViewMatrix.elements);
        if (b0.normalMatrix) {
            c.uniformMatrix3fv(b0.normalMatrix, false, b1._normalMatrix.elements)
        }
    }

    function av() {
        var b0 = bb;
        if (b0 >= bE) {
            console.warn("WebGLRenderer: trying to use " + b0 + " texture units while this GPU supports only " + bE)
        }
        bb += 1;
        return b0
    }

    function T(ca) {
        var b5, cb, b1;
        for (var b2 = 0, b4 = ca.length; b2 < b4; b2++) {
            var b0 = ca[b2][0];
            if (b0.needsUpdate === false) {
                continue
            }
            var b6 = b0.type;
            var b9 = b0.value;
            var b8 = ca[b2][1];
            switch (b6) {
                case "1i":
                    c.uniform1i(b8, b9);
                    break;
                case "1f":
                    c.uniform1f(b8, b9);
                    break;
                case "2f":
                    c.uniform2f(b8, b9[0], b9[1]);
                    break;
                case "3f":
                    c.uniform3f(b8, b9[0], b9[1], b9[2]);
                    break;
                case "4f":
                    c.uniform4f(b8, b9[0], b9[1], b9[2], b9[3]);
                    break;
                case "1iv":
                    c.uniform1iv(b8, b9);
                    break;
                case "3iv":
                    c.uniform3iv(b8, b9);
                    break;
                case "1fv":
                    c.uniform1fv(b8, b9);
                    break;
                case "2fv":
                    c.uniform2fv(b8, b9);
                    break;
                case "3fv":
                    c.uniform3fv(b8, b9);
                    break;
                case "4fv":
                    c.uniform4fv(b8, b9);
                    break;
                case "Matrix3fv":
                    c.uniformMatrix3fv(b8, false, b9);
                    break;
                case "Matrix4fv":
                    c.uniformMatrix4fv(b8, false, b9);
                    break;
                case "i":
                    c.uniform1i(b8, b9);
                    break;
                case "f":
                    c.uniform1f(b8, b9);
                    break;
                case "v2":
                    c.uniform2f(b8, b9.x, b9.y);
                    break;
                case "v3":
                    c.uniform3f(b8, b9.x, b9.y, b9.z);
                    break;
                case "v4":
                    c.uniform4f(b8, b9.x, b9.y, b9.z, b9.w);
                    break;
                case "c":
                    c.uniform3f(b8, b9.r, b9.g, b9.b);
                    break;
                case "iv1":
                    c.uniform1iv(b8, b9);
                    break;
                case "iv":
                    c.uniform3iv(b8, b9);
                    break;
                case "fv1":
                    c.uniform1fv(b8, b9);
                    break;
                case "fv":
                    c.uniform3fv(b8, b9);
                    break;
                case "v2v":
                    if (b0._array === undefined) {
                        b0._array = new Float32Array(2 * b9.length)
                    }
                    for (var b3 = 0, b7 = b9.length; b3 < b7; b3++) {
                        b1 = b3 * 2;
                        b0._array[b1] = b9[b3].x;
                        b0._array[b1 + 1] = b9[b3].y
                    }
                    c.uniform2fv(b8, b0._array);
                    break;
                case "v3v":
                    if (b0._array === undefined) {
                        b0._array = new Float32Array(3 * b9.length)
                    }
                    for (var b3 = 0, b7 = b9.length; b3 < b7; b3++) {
                        b1 = b3 * 3;
                        b0._array[b1] = b9[b3].x;
                        b0._array[b1 + 1] = b9[b3].y;
                        b0._array[b1 + 2] = b9[b3].z
                    }
                    c.uniform3fv(b8, b0._array);
                    break;
                case "v4v":
                    if (b0._array === undefined) {
                        b0._array = new Float32Array(4 * b9.length)
                    }
                    for (var b3 = 0, b7 = b9.length; b3 < b7; b3++) {
                        b1 = b3 * 4;
                        b0._array[b1] = b9[b3].x;
                        b0._array[b1 + 1] = b9[b3].y;
                        b0._array[b1 + 2] = b9[b3].z;
                        b0._array[b1 + 3] = b9[b3].w
                    }
                    c.uniform4fv(b8, b0._array);
                    break;
                case "m3":
                    c.uniformMatrix3fv(b8, false, b9.elements);
                    break;
                case "m3v":
                    if (b0._array === undefined) {
                        b0._array = new Float32Array(9 * b9.length)
                    }
                    for (var b3 = 0, b7 = b9.length; b3 < b7; b3++) {
                        b9[b3].flattenToArrayOffset(b0._array, b3 * 9)
                    }
                    c.uniformMatrix3fv(b8, false, b0._array);
                    break;
                case "m4":
                    c.uniformMatrix4fv(b8, false, b9.elements);
                    break;
                case "m4v":
                    if (b0._array === undefined) {
                        b0._array = new Float32Array(16 * b9.length)
                    }
                    for (var b3 = 0, b7 = b9.length; b3 < b7; b3++) {
                        b9[b3].flattenToArrayOffset(b0._array, b3 * 16)
                    }
                    c.uniformMatrix4fv(b8, false, b0._array);
                    break;
                case "t":
                    b5 = b9;
                    cb = av();
                    c.uniform1i(b8, cb);
                    if (!b5) {
                        continue
                    }
                    if (b5 instanceof THREE.CubeTexture || (b5.image instanceof Array && b5.image.length === 6)) {
                        bl(b5, cb)
                    } else {
                        if (b5 instanceof THREE.WebGLRenderTargetCube) {
                            a7(b5, cb)
                        } else {
                            aK.setTexture(b5, cb)
                        }
                    }
                    break;
                case "tv":
                    if (b0._array === undefined) {
                        b0._array = []
                    }
                    for (var b3 = 0, b7 = b0.value.length; b3 < b7; b3++) {
                        b0._array[b3] = av()
                    }
                    c.uniform1iv(b8, b0._array);
                    for (var b3 = 0, b7 = b0.value.length; b3 < b7; b3++) {
                        b5 = b0.value[b3];
                        cb = b0._array[b3];
                        if (!b5) {
                            continue
                        }
                        aK.setTexture(b5, cb)
                    }
                    break;
                default:
                    console.warn("THREE.WebGLRenderer: Unknown uniform type: " + b6)
            }
        }
    }

    function bd(b0, b1) {
        b0._modelViewMatrix.multiplyMatrices(b1.matrixWorldInverse, b0.matrixWorld);
        b0._normalMatrix.getNormalMatrix(b0._modelViewMatrix)
    }

    function a3(b3, b2, b0, b1) {
        b3[b2] = b0.r * b0.r * b1;
        b3[b2 + 1] = b0.g * b0.g * b1;
        b3[b2 + 2] = b0.b * b0.b * b1
    }

    function a4(b3, b2, b1, b0) {
        b3[b2] = b1.r * b0;
        b3[b2 + 1] = b1.g * b0;
        b3[b2 + 2] = b1.b * b0
    }

    function d(b4) {
        var cC, cq, ch, cy, ct = 0,
            cD = 0,
            cE = 0,
            co, b1, b8, cp, b7, cs, cf, cl = bp,
            cd = cl.directional.colors,
            b2 = cl.directional.positions,
            cz = cl.point.colors,
            cv = cl.point.positions,
            cn = cl.point.distances,
            cA = cl.spot.colors,
            b3 = cl.spot.positions,
            cw = cl.spot.distances,
            cc = cl.spot.directions,
            b5 = cl.spot.anglesCos,
            ce = cl.spot.exponents,
            b0 = cl.hemi.skyColors,
            cB = cl.hemi.groundColors,
            cb = cl.hemi.positions,
            cF = 0,
            ck = 0,
            cg = 0,
            b9 = 0,
            cm = 0,
            cj = 0,
            ci = 0,
            b6 = 0,
            ca = 0,
            cx = 0,
            cu = 0,
            cr = 0;
        for (cC = 0, cq = b4.length; cC < cq; cC++) {
            ch = b4[cC];
            if (ch.onlyShadow) {
                continue
            }
            co = ch.color;
            cp = ch.intensity;
            cf = ch.distance;
            if (ch instanceof THREE.AmbientLight) {
                if (!ch.visible) {
                    continue
                }
                if (aK.gammaInput) {
                    ct += co.r * co.r;
                    cD += co.g * co.g;
                    cE += co.b * co.b
                } else {
                    ct += co.r;
                    cD += co.g;
                    cE += co.b
                }
            } else {
                if (ch instanceof THREE.DirectionalLight) {
                    cm += 1;
                    if (!ch.visible) {
                        continue
                    }
                    aI.setFromMatrixPosition(ch.matrixWorld);
                    U.setFromMatrixPosition(ch.target.matrixWorld);
                    aI.sub(U);
                    aI.normalize();
                    ca = cF * 3;
                    b2[ca] = aI.x;
                    b2[ca + 1] = aI.y;
                    b2[ca + 2] = aI.z;
                    if (aK.gammaInput) {
                        a3(cd, ca, co, cp * cp)
                    } else {
                        a4(cd, ca, co, cp)
                    }
                    cF += 1
                } else {
                    if (ch instanceof THREE.PointLight) {
                        cj += 1;
                        if (!ch.visible) {
                            continue
                        }
                        cx = ck * 3;
                        if (aK.gammaInput) {
                            a3(cz, cx, co, cp * cp)
                        } else {
                            a4(cz, cx, co, cp)
                        }
                        U.setFromMatrixPosition(ch.matrixWorld);
                        cv[cx] = U.x;
                        cv[cx + 1] = U.y;
                        cv[cx + 2] = U.z;
                        cn[ck] = cf;
                        ck += 1
                    } else {
                        if (ch instanceof THREE.SpotLight) {
                            ci += 1;
                            if (!ch.visible) {
                                continue
                            }
                            cu = cg * 3;
                            if (aK.gammaInput) {
                                a3(cA, cu, co, cp * cp)
                            } else {
                                a4(cA, cu, co, cp)
                            }
                            aI.setFromMatrixPosition(ch.matrixWorld);
                            b3[cu] = aI.x;
                            b3[cu + 1] = aI.y;
                            b3[cu + 2] = aI.z;
                            cw[cg] = cf;
                            U.setFromMatrixPosition(ch.target.matrixWorld);
                            aI.sub(U);
                            aI.normalize();
                            cc[cu] = aI.x;
                            cc[cu + 1] = aI.y;
                            cc[cu + 2] = aI.z;
                            b5[cg] = Math.cos(ch.angle);
                            ce[cg] = ch.exponent;
                            cg += 1
                        } else {
                            if (ch instanceof THREE.HemisphereLight) {
                                b6 += 1;
                                if (!ch.visible) {
                                    continue
                                }
                                aI.setFromMatrixPosition(ch.matrixWorld);
                                aI.normalize();
                                cr = b9 * 3;
                                cb[cr] = aI.x;
                                cb[cr + 1] = aI.y;
                                cb[cr + 2] = aI.z;
                                b1 = ch.color;
                                b8 = ch.groundColor;
                                if (aK.gammaInput) {
                                    b7 = cp * cp;
                                    a3(b0, cr, b1, b7);
                                    a3(cB, cr, b8, b7)
                                } else {
                                    a4(b0, cr, b1, cp);
                                    a4(cB, cr, b8, cp)
                                }
                                b9 += 1
                            }
                        }
                    }
                }
            }
        }
        for (cC = cF * 3, cq = Math.max(cd.length, cm * 3); cC < cq; cC++) {
            cd[cC] = 0
        }
        for (cC = ck * 3, cq = Math.max(cz.length, cj * 3); cC < cq; cC++) {
            cz[cC] = 0
        }
        for (cC = cg * 3, cq = Math.max(cA.length, ci * 3); cC < cq; cC++) {
            cA[cC] = 0
        }
        for (cC = b9 * 3, cq = Math.max(b0.length, b6 * 3); cC < cq; cC++) {
            b0[cC] = 0
        }
        for (cC = b9 * 3, cq = Math.max(cB.length, b6 * 3); cC < cq; cC++) {
            cB[cC] = 0
        }
        cl.directional.length = cF;
        cl.point.length = ck;
        cl.spot.length = cg;
        cl.hemi.length = b9;
        cl.ambient[0] = ct;
        cl.ambient[1] = cD;
        cl.ambient[2] = cE
    }
    this.setFaceCulling = function(b1, b0) {
        if (b1 === THREE.CullFaceNone) {
            c.disable(c.CULL_FACE)
        } else {
            if (b0 === THREE.FrontFaceDirectionCW) {
                c.frontFace(c.CW)
            } else {
                c.frontFace(c.CCW)
            }
            if (b1 === THREE.CullFaceBack) {
                c.cullFace(c.BACK)
            } else {
                if (b1 === THREE.CullFaceFront) {
                    c.cullFace(c.FRONT)
                } else {
                    c.cullFace(c.FRONT_AND_BACK)
                }
            }
            c.enable(c.CULL_FACE)
        }
    };
    this.setMaterialFaces = function(b2) {
        var b0 = b2.side === THREE.DoubleSide;
        var b1 = b2.side === THREE.BackSide;
        if (bi !== b0) {
            if (b0) {
                c.disable(c.CULL_FACE)
            } else {
                c.enable(c.CULL_FACE)
            }
            bi = b0
        }
        if (j !== b1) {
            if (b1) {
                c.frontFace(c.CW)
            } else {
                c.frontFace(c.CCW)
            }
            j = b1
        }
    };
    this.setDepthTest = function(b0) {
        if (a !== b0) {
            if (b0) {
                c.enable(c.DEPTH_TEST)
            } else {
                c.disable(c.DEPTH_TEST)
            }
            a = b0
        }
    };
    this.setDepthWrite = function(b0) {
        if (bu !== b0) {
            c.depthMask(b0);
            bu = b0
        }
    };

    function aD(b0) {
        b0 *= n;
        if (b0 !== bm) {
            c.lineWidth(b0);
            bm = b0
        }
    }

    function bW(b2, b1, b0) {
        if (aF !== b2) {
            if (b2) {
                c.enable(c.POLYGON_OFFSET_FILL)
            } else {
                c.disable(c.POLYGON_OFFSET_FILL)
            }
            aF = b2
        }
        if (b2 && (bL !== b1 || a8 !== b0)) {
            c.polygonOffset(b1, b0);
            bL = b1;
            a8 = b0
        }
    }
    this.setBlending = function(b1, b0, b2, b3) {
        if (b1 !== h) {
            if (b1 === THREE.NoBlending) {
                c.disable(c.BLEND)
            } else {
                if (b1 === THREE.AdditiveBlending) {
                    c.enable(c.BLEND);
                    c.blendEquation(c.FUNC_ADD);
                    c.blendFunc(c.SRC_ALPHA, c.ONE)
                } else {
                    if (b1 === THREE.SubtractiveBlending) {
                        c.enable(c.BLEND);
                        c.blendEquation(c.FUNC_ADD);
                        c.blendFunc(c.ZERO, c.ONE_MINUS_SRC_COLOR)
                    } else {
                        if (b1 === THREE.MultiplyBlending) {
                            c.enable(c.BLEND);
                            c.blendEquation(c.FUNC_ADD);
                            c.blendFunc(c.ZERO, c.SRC_COLOR)
                        } else {
                            if (b1 === THREE.CustomBlending) {
                                c.enable(c.BLEND)
                            } else {
                                c.enable(c.BLEND);
                                c.blendEquationSeparate(c.FUNC_ADD, c.FUNC_ADD);
                                c.blendFuncSeparate(c.SRC_ALPHA, c.ONE_MINUS_SRC_ALPHA, c.ONE, c.ONE_MINUS_SRC_ALPHA)
                            }
                        }
                    }
                }
            }
            h = b1
        }
        if (b1 === THREE.CustomBlending) {
            if (b0 !== ai) {
                c.blendEquation(aO(b0));
                ai = b0
            }
            if (b2 !== bO || b3 !== ar) {
                c.blendFunc(aO(b2), aO(b3));
                bO = b2;
                ar = b3
            }
        } else {
            ai = null;
            bO = null;
            ar = null
        }
    };

    function aj(b0, b1, b2) {
        var b3;
        if (b2) {
            c.texParameteri(b0, c.TEXTURE_WRAP_S, aO(b1.wrapS));
            c.texParameteri(b0, c.TEXTURE_WRAP_T, aO(b1.wrapT));
            c.texParameteri(b0, c.TEXTURE_MAG_FILTER, aO(b1.magFilter));
            c.texParameteri(b0, c.TEXTURE_MIN_FILTER, aO(b1.minFilter))
        } else {
            c.texParameteri(b0, c.TEXTURE_WRAP_S, c.CLAMP_TO_EDGE);
            c.texParameteri(b0, c.TEXTURE_WRAP_T, c.CLAMP_TO_EDGE);
            if (b1.wrapS !== THREE.ClampToEdgeWrapping || b1.wrapT !== THREE.ClampToEdgeWrapping) {
                console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT is set to THREE.ClampToEdgeWrapping. ( " + b1.sourceFile + " )")
            }
            c.texParameteri(b0, c.TEXTURE_MAG_FILTER, aL(b1.magFilter));
            c.texParameteri(b0, c.TEXTURE_MIN_FILTER, aL(b1.minFilter));
            if (b1.minFilter !== THREE.NearestFilter && b1.minFilter !== THREE.LinearFilter) {
                console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter is set to THREE.LinearFilter or THREE.NearestFilter. ( " + b1.sourceFile + " )")
            }
        }
        b3 = a2.get("EXT_texture_filter_anisotropic");
        if (b3 && b1.type !== THREE.FloatType) {
            if (b1.anisotropy > 1 || b1.__oldAnisotropy) {
                c.texParameterf(b0, b3.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(b1.anisotropy, aK.getMaxAnisotropy()));
                b1.__oldAnisotropy = b1.anisotropy
            }
        }
    }
    this.uploadTexture = function(b7) {
        if (b7.__webglInit === undefined) {
            b7.__webglInit = true;
            b7.addEventListener("dispose", ag);
            b7.__webglTexture = c.createTexture();
            aK.info.memory.textures++
        }
        c.bindTexture(c.TEXTURE_2D, b7.__webglTexture);
        c.pixelStorei(c.UNPACK_FLIP_Y_WEBGL, b7.flipY);
        c.pixelStorei(c.UNPACK_PREMULTIPLY_ALPHA_WEBGL, b7.premultiplyAlpha);
        c.pixelStorei(c.UNPACK_ALIGNMENT, b7.unpackAlignment);
        b7.image = q(b7.image, B);
        var b3 = b7.image,
            b6 = THREE.Math.isPowerOfTwo(b3.width) && THREE.Math.isPowerOfTwo(b3.height),
            b0 = aO(b7.format),
            b2 = aO(b7.type);
        aj(c.TEXTURE_2D, b7, b6);
        var b1, b4 = b7.mipmaps;
        if (b7 instanceof THREE.DataTexture) {
            if (b4.length > 0 && b6) {
                for (var b5 = 0, b8 = b4.length; b5 < b8; b5++) {
                    b1 = b4[b5];
                    c.texImage2D(c.TEXTURE_2D, b5, b0, b1.width, b1.height, 0, b0, b2, b1.data)
                }
                b7.generateMipmaps = false
            } else {
                c.texImage2D(c.TEXTURE_2D, 0, b0, b3.width, b3.height, 0, b0, b2, b3.data)
            }
        } else {
            if (b7 instanceof THREE.CompressedTexture) {
                for (var b5 = 0, b8 = b4.length; b5 < b8; b5++) {
                    b1 = b4[b5];
                    if (b7.format !== THREE.RGBAFormat && b7.format !== THREE.RGBFormat) {
                        if (X().indexOf(b0) > -1) {
                            c.compressedTexImage2D(c.TEXTURE_2D, b5, b0, b1.width, b1.height, 0, b1.data)
                        } else {
                            console.warn("Attempt to load unsupported compressed texture format")
                        }
                    } else {
                        c.texImage2D(c.TEXTURE_2D, b5, b0, b1.width, b1.height, 0, b0, b2, b1.data)
                    }
                }
            } else {
                if (b4.length > 0 && b6) {
                    for (var b5 = 0, b8 = b4.length; b5 < b8; b5++) {
                        b1 = b4[b5];
                        c.texImage2D(c.TEXTURE_2D, b5, b0, b0, b2, b1)
                    }
                    b7.generateMipmaps = false
                } else {
                    c.texImage2D(c.TEXTURE_2D, 0, b0, b0, b2, b7.image)
                }
            }
        }
        if (b7.generateMipmaps && b6) {
            c.generateMipmap(c.TEXTURE_2D)
        }
        b7.needsUpdate = false;
        if (b7.onUpdate) {
            b7.onUpdate()
        }
    };
    this.setTexture = function(b0, b1) {
        c.activeTexture(c.TEXTURE0 + b1);
        if (b0.needsUpdate) {
            aK.uploadTexture(b0)
        } else {
            c.bindTexture(c.TEXTURE_2D, b0.__webglTexture)
        }
    };

    function q(b2, b4) {
        if (b2.width > b4 || b2.height > b4) {
            var b3 = b4 / Math.max(b2.width, b2.height);
            var b0 = document.createElement("canvas");
            b0.width = Math.floor(b2.width * b3);
            b0.height = Math.floor(b2.height * b3);
            var b1 = b0.getContext("2d");
            b1.drawImage(b2, 0, 0, b2.width, b2.height, 0, 0, b0.width, b0.height);
            return b0
        }
        return b2
    }

    function bl(cc, cd) {
        if (cc.image.length === 6) {
            if (cc.needsUpdate) {
                if (!cc.image.__webglTextureCube) {
                    cc.addEventListener("dispose", ag);
                    cc.image.__webglTextureCube = c.createTexture();
                    aK.info.memory.textures++
                }
                c.activeTexture(c.TEXTURE0 + cd);
                c.bindTexture(c.TEXTURE_CUBE_MAP, cc.image.__webglTextureCube);
                c.pixelStorei(c.UNPACK_FLIP_Y_WEBGL, cc.flipY);
                var b4 = cc instanceof THREE.CompressedTexture;
                var b3 = cc.image[0] instanceof THREE.DataTexture;
                var b0 = [];
                for (var ca = 0; ca < 6; ca++) {
                    if (aK.autoScaleCubemaps && !b4 && !b3) {
                        b0[ca] = q(cc.image[ca], an)
                    } else {
                        b0[ca] = b3 ? cc.image[ca].image : cc.image[ca]
                    }
                }
                var b7 = b0[0],
                    cb = THREE.Math.isPowerOfTwo(b7.width) && THREE.Math.isPowerOfTwo(b7.height),
                    b1 = aO(cc.format),
                    b5 = aO(cc.type);
                aj(c.TEXTURE_CUBE_MAP, cc, cb);
                for (var ca = 0; ca < 6; ca++) {
                    if (!b4) {
                        if (b3) {
                            c.texImage2D(c.TEXTURE_CUBE_MAP_POSITIVE_X + ca, 0, b1, b0[ca].width, b0[ca].height, 0, b1, b5, b0[ca].data)
                        } else {
                            c.texImage2D(c.TEXTURE_CUBE_MAP_POSITIVE_X + ca, 0, b1, b1, b5, b0[ca])
                        }
                    } else {
                        var b2, b6 = b0[ca].mipmaps;
                        for (var b8 = 0, b9 = b6.length; b8 < b9; b8++) {
                            b2 = b6[b8];
                            if (cc.format !== THREE.RGBAFormat && cc.format !== THREE.RGBFormat) {
                                if (X().indexOf(b1) > -1) {
                                    c.compressedTexImage2D(c.TEXTURE_CUBE_MAP_POSITIVE_X + ca, b8, b1, b2.width, b2.height, 0, b2.data)
                                } else {
                                    console.warn("Attempt to load unsupported compressed texture format")
                                }
                            } else {
                                c.texImage2D(c.TEXTURE_CUBE_MAP_POSITIVE_X + ca, b8, b1, b2.width, b2.height, 0, b1, b5, b2.data)
                            }
                        }
                    }
                }
                if (cc.generateMipmaps && cb) {
                    c.generateMipmap(c.TEXTURE_CUBE_MAP)
                }
                cc.needsUpdate = false;
                if (cc.onUpdate) {
                    cc.onUpdate()
                }
            } else {
                c.activeTexture(c.TEXTURE0 + cd);
                c.bindTexture(c.TEXTURE_CUBE_MAP, cc.image.__webglTextureCube)
            }
        }
    }

    function a7(b0, b1) {
        c.activeTexture(c.TEXTURE0 + b1);
        c.bindTexture(c.TEXTURE_CUBE_MAP, b0.__webglTexture)
    }

    function a6(b2, b1, b0) {
        c.bindFramebuffer(c.FRAMEBUFFER, b2);
        c.framebufferTexture2D(c.FRAMEBUFFER, c.COLOR_ATTACHMENT0, b0, b1.__webglTexture, 0)
    }

    function p(b0, b1) {
        c.bindRenderbuffer(c.RENDERBUFFER, b0);
        if (b1.depthBuffer && !b1.stencilBuffer) {
            c.renderbufferStorage(c.RENDERBUFFER, c.DEPTH_COMPONENT16, b1.width, b1.height);
            c.framebufferRenderbuffer(c.FRAMEBUFFER, c.DEPTH_ATTACHMENT, c.RENDERBUFFER, b0)
        } else {
            if (b1.depthBuffer && b1.stencilBuffer) {
                c.renderbufferStorage(c.RENDERBUFFER, c.DEPTH_STENCIL, b1.width, b1.height);
                c.framebufferRenderbuffer(c.FRAMEBUFFER, c.DEPTH_STENCIL_ATTACHMENT, c.RENDERBUFFER, b0)
            } else {
                c.renderbufferStorage(c.RENDERBUFFER, c.RGBA4, b1.width, b1.height)
            }
        }
    }
    this.setRenderTarget = function(b4) {
        var b6 = (b4 instanceof THREE.WebGLRenderTargetCube);
        if (b4 && b4.__webglFramebuffer === undefined) {
            if (b4.depthBuffer === undefined) {
                b4.depthBuffer = true
            }
            if (b4.stencilBuffer === undefined) {
                b4.stencilBuffer = true
            }
            b4.addEventListener("dispose", S);
            b4.__webglTexture = c.createTexture();
            aK.info.memory.textures++;
            var b7 = THREE.Math.isPowerOfTwo(b4.width) && THREE.Math.isPowerOfTwo(b4.height),
                b0 = aO(b4.format),
                b2 = aO(b4.type);
            if (b6) {
                b4.__webglFramebuffer = [];
                b4.__webglRenderbuffer = [];
                c.bindTexture(c.TEXTURE_CUBE_MAP, b4.__webglTexture);
                aj(c.TEXTURE_CUBE_MAP, b4, b7);
                for (var b3 = 0; b3 < 6; b3++) {
                    b4.__webglFramebuffer[b3] = c.createFramebuffer();
                    b4.__webglRenderbuffer[b3] = c.createRenderbuffer();
                    c.texImage2D(c.TEXTURE_CUBE_MAP_POSITIVE_X + b3, 0, b0, b4.width, b4.height, 0, b0, b2, null);
                    a6(b4.__webglFramebuffer[b3], b4, c.TEXTURE_CUBE_MAP_POSITIVE_X + b3);
                    p(b4.__webglRenderbuffer[b3], b4)
                }
                if (b7) {
                    c.generateMipmap(c.TEXTURE_CUBE_MAP)
                }
            } else {
                b4.__webglFramebuffer = c.createFramebuffer();
                if (b4.shareDepthFrom) {
                    b4.__webglRenderbuffer = b4.shareDepthFrom.__webglRenderbuffer
                } else {
                    b4.__webglRenderbuffer = c.createRenderbuffer()
                }
                c.bindTexture(c.TEXTURE_2D, b4.__webglTexture);
                aj(c.TEXTURE_2D, b4, b7);
                c.texImage2D(c.TEXTURE_2D, 0, b0, b4.width, b4.height, 0, b0, b2, null);
                a6(b4.__webglFramebuffer, b4, c.TEXTURE_2D);
                if (b4.shareDepthFrom) {
                    if (b4.depthBuffer && !b4.stencilBuffer) {
                        c.framebufferRenderbuffer(c.FRAMEBUFFER, c.DEPTH_ATTACHMENT, c.RENDERBUFFER, b4.__webglRenderbuffer)
                    } else {
                        if (b4.depthBuffer && b4.stencilBuffer) {
                            c.framebufferRenderbuffer(c.FRAMEBUFFER, c.DEPTH_STENCIL_ATTACHMENT, c.RENDERBUFFER, b4.__webglRenderbuffer)
                        }
                    }
                } else {
                    p(b4.__webglRenderbuffer, b4)
                }
                if (b7) {
                    c.generateMipmap(c.TEXTURE_2D)
                }
            }
            if (b6) {
                c.bindTexture(c.TEXTURE_CUBE_MAP, null)
            } else {
                c.bindTexture(c.TEXTURE_2D, null)
            }
            c.bindRenderbuffer(c.RENDERBUFFER, null);
            c.bindFramebuffer(c.FRAMEBUFFER, null)
        }
        var b9, b1, ca, b8, b5;
        if (b4) {
            if (b6) {
                b9 = b4.__webglFramebuffer[b4.activeCubeFace]
            } else {
                b9 = b4.__webglFramebuffer
            }
            b1 = b4.width;
            ca = b4.height;
            b8 = 0;
            b5 = 0
        } else {
            b9 = null;
            b1 = bQ;
            ca = aQ;
            b8 = a1;
            b5 = a0
        }
        if (b9 !== bA) {
            c.bindFramebuffer(c.FRAMEBUFFER, b9);
            c.viewport(b8, b5, b1, ca);
            bA = b9
        }
        D = b1;
        aP = ca
    };

    function aS(b0) {
        if (b0 instanceof THREE.WebGLRenderTargetCube) {
            c.bindTexture(c.TEXTURE_CUBE_MAP, b0.__webglTexture);
            c.generateMipmap(c.TEXTURE_CUBE_MAP);
            c.bindTexture(c.TEXTURE_CUBE_MAP, null)
        } else {
            c.bindTexture(c.TEXTURE_2D, b0.__webglTexture);
            c.generateMipmap(c.TEXTURE_2D);
            c.bindTexture(c.TEXTURE_2D, null)
        }
    }

    function aL(b0) {
        if (b0 === THREE.NearestFilter || b0 === THREE.NearestMipMapNearestFilter || b0 === THREE.NearestMipMapLinearFilter) {
            return c.NEAREST
        }
        return c.LINEAR
    }

    function aO(b0) {
        var b1;
        if (b0 === THREE.RepeatWrapping) {
            return c.REPEAT
        }
        if (b0 === THREE.ClampToEdgeWrapping) {
            return c.CLAMP_TO_EDGE
        }
        if (b0 === THREE.MirroredRepeatWrapping) {
            return c.MIRRORED_REPEAT
        }
        if (b0 === THREE.NearestFilter) {
            return c.NEAREST
        }
        if (b0 === THREE.NearestMipMapNearestFilter) {
            return c.NEAREST_MIPMAP_NEAREST
        }
        if (b0 === THREE.NearestMipMapLinearFilter) {
            return c.NEAREST_MIPMAP_LINEAR
        }
        if (b0 === THREE.LinearFilter) {
            return c.LINEAR
        }
        if (b0 === THREE.LinearMipMapNearestFilter) {
            return c.LINEAR_MIPMAP_NEAREST
        }
        if (b0 === THREE.LinearMipMapLinearFilter) {
            return c.LINEAR_MIPMAP_LINEAR
        }
        if (b0 === THREE.UnsignedByteType) {
            return c.UNSIGNED_BYTE
        }
        if (b0 === THREE.UnsignedShort4444Type) {
            return c.UNSIGNED_SHORT_4_4_4_4
        }
        if (b0 === THREE.UnsignedShort5551Type) {
            return c.UNSIGNED_SHORT_5_5_5_1
        }
        if (b0 === THREE.UnsignedShort565Type) {
            return c.UNSIGNED_SHORT_5_6_5
        }
        if (b0 === THREE.ByteType) {
            return c.BYTE
        }
        if (b0 === THREE.ShortType) {
            return c.SHORT
        }
        if (b0 === THREE.UnsignedShortType) {
            return c.UNSIGNED_SHORT
        }
        if (b0 === THREE.IntType) {
            return c.INT
        }
        if (b0 === THREE.UnsignedIntType) {
            return c.UNSIGNED_INT
        }
        if (b0 === THREE.FloatType) {
            return c.FLOAT
        }
        if (b0 === THREE.AlphaFormat) {
            return c.ALPHA
        }
        if (b0 === THREE.RGBFormat) {
            return c.RGB
        }
        if (b0 === THREE.RGBAFormat) {
            return c.RGBA
        }
        if (b0 === THREE.LuminanceFormat) {
            return c.LUMINANCE
        }
        if (b0 === THREE.LuminanceAlphaFormat) {
            return c.LUMINANCE_ALPHA
        }
        if (b0 === THREE.AddEquation) {
            return c.FUNC_ADD
        }
        if (b0 === THREE.SubtractEquation) {
            return c.FUNC_SUBTRACT
        }
        if (b0 === THREE.ReverseSubtractEquation) {
            return c.FUNC_REVERSE_SUBTRACT
        }
        if (b0 === THREE.ZeroFactor) {
            return c.ZERO
        }
        if (b0 === THREE.OneFactor) {
            return c.ONE
        }
        if (b0 === THREE.SrcColorFactor) {
            return c.SRC_COLOR
        }
        if (b0 === THREE.OneMinusSrcColorFactor) {
            return c.ONE_MINUS_SRC_COLOR
        }
        if (b0 === THREE.SrcAlphaFactor) {
            return c.SRC_ALPHA
        }
        if (b0 === THREE.OneMinusSrcAlphaFactor) {
            return c.ONE_MINUS_SRC_ALPHA
        }
        if (b0 === THREE.DstAlphaFactor) {
            return c.DST_ALPHA
        }
        if (b0 === THREE.OneMinusDstAlphaFactor) {
            return c.ONE_MINUS_DST_ALPHA
        }
        if (b0 === THREE.DstColorFactor) {
            return c.DST_COLOR
        }
        if (b0 === THREE.OneMinusDstColorFactor) {
            return c.ONE_MINUS_DST_COLOR
        }
        if (b0 === THREE.SrcAlphaSaturateFactor) {
            return c.SRC_ALPHA_SATURATE
        }
        b1 = a2.get("WEBGL_compressed_texture_s3tc");
        if (b1 !== null) {
            if (b0 === THREE.RGB_S3TC_DXT1_Format) {
                return b1.COMPRESSED_RGB_S3TC_DXT1_EXT
            }
            if (b0 === THREE.RGBA_S3TC_DXT1_Format) {
                return b1.COMPRESSED_RGBA_S3TC_DXT1_EXT
            }
            if (b0 === THREE.RGBA_S3TC_DXT3_Format) {
                return b1.COMPRESSED_RGBA_S3TC_DXT3_EXT
            }
            if (b0 === THREE.RGBA_S3TC_DXT5_Format) {
                return b1.COMPRESSED_RGBA_S3TC_DXT5_EXT
            }
        }
        b1 = a2.get("WEBGL_compressed_texture_pvrtc");
        if (b1 !== null) {
            if (b0 === THREE.RGB_PVRTC_4BPPV1_Format) {
                return b1.COMPRESSED_RGB_PVRTC_4BPPV1_IMG
            }
            if (b0 === THREE.RGB_PVRTC_2BPPV1_Format) {
                return b1.COMPRESSED_RGB_PVRTC_2BPPV1_IMG
            }
            if (b0 === THREE.RGBA_PVRTC_4BPPV1_Format) {
                return b1.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG
            }
            if (b0 === THREE.RGBA_PVRTC_2BPPV1_Format) {
                return b1.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG
            }
        }
        b1 = a2.get("EXT_blend_minmax");
        if (b1 !== null) {
            if (b0 === THREE.MinEquation) {
                return b1.MIN_EXT
            }
            if (b0 === THREE.MaxEquation) {
                return b1.MAX_EXT
            }
        }
        return 0
    }

    function aE(b3) {
        if (Z && b3 && b3.skeleton && b3.skeleton.useVertexTexture) {
            return 1024
        } else {
            var b1 = c.getParameter(c.MAX_VERTEX_UNIFORM_VECTORS);
            var b2 = Math.floor((b1 - 20) / 4);
            var b0 = b2;
            if (b3 !== undefined && b3 instanceof THREE.SkinnedMesh) {
                b0 = Math.min(b3.skeleton.bones.length, b0);
                if (b0 < b3.skeleton.bones.length) {
                    console.warn("WebGLRenderer: too many bones - " + b3.skeleton.bones.length + ", this GPU supports just " + b0 + " (try OpenGL instead of ANGLE)")
                }
            }
            return b0
        }
    }

    function bc(b2) {
        var b3 = 0;
        var b7 = 0;
        var b5 = 0;
        var b6 = 0;
        for (var b1 = 0, b4 = b2.length; b1 < b4; b1++) {
            var b0 = b2[b1];
            if (b0.onlyShadow || b0.visible === false) {
                continue
            }
            if (b0 instanceof THREE.DirectionalLight) {
                b3++
            }
            if (b0 instanceof THREE.PointLight) {
                b7++
            }
            if (b0 instanceof THREE.SpotLight) {
                b5++
            }
            if (b0 instanceof THREE.HemisphereLight) {
                b6++
            }
        }
        return {
            directional: b3,
            point: b7,
            spot: b5,
            hemi: b6
        }
    }

    function aa(b2) {
        var b3 = 0;
        for (var b1 = 0, b4 = b2.length; b1 < b4; b1++) {
            var b0 = b2[b1];
            if (!b0.castShadow) {
                continue
            }
            if (b0 instanceof THREE.SpotLight) {
                b3++
            }
            if (b0 instanceof THREE.DirectionalLight && !b0.shadowCascade) {
                b3++
            }
        }
        return b3
    }
    this.initMaterial = function() {
        console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")
    };
    this.addPrePlugin = function() {
        console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")
    };
    this.addPostPlugin = function() {
        console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")
    };
    this.updateShadowMap = function() {
        console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")
    }
};
THREE.WebGLRenderTarget = function(c, a, b) {
    this.width = c;
    this.height = a;
    b = b || {};
    this.wrapS = b.wrapS !== undefined ? b.wrapS : THREE.ClampToEdgeWrapping;
    this.wrapT = b.wrapT !== undefined ? b.wrapT : THREE.ClampToEdgeWrapping;
    this.magFilter = b.magFilter !== undefined ? b.magFilter : THREE.LinearFilter;
    this.minFilter = b.minFilter !== undefined ? b.minFilter : THREE.LinearMipMapLinearFilter;
    this.anisotropy = b.anisotropy !== undefined ? b.anisotropy : 1;
    this.offset = new THREE.Vector2(0, 0);
    this.repeat = new THREE.Vector2(1, 1);
    this.format = b.format !== undefined ? b.format : THREE.RGBAFormat;
    this.type = b.type !== undefined ? b.type : THREE.UnsignedByteType;
    this.depthBuffer = b.depthBuffer !== undefined ? b.depthBuffer : true;
    this.stencilBuffer = b.stencilBuffer !== undefined ? b.stencilBuffer : true;
    this.generateMipmaps = true;
    this.shareDepthFrom = null
};
THREE.WebGLRenderTarget.prototype = {
    constructor: THREE.WebGLRenderTarget,
    setSize: function(b, a) {
        this.width = b;
        this.height = a
    },
    clone: function() {
        var a = new THREE.WebGLRenderTarget(this.width, this.height);
        a.wrapS = this.wrapS;
        a.wrapT = this.wrapT;
        a.magFilter = this.magFilter;
        a.minFilter = this.minFilter;
        a.anisotropy = this.anisotropy;
        a.offset.copy(this.offset);
        a.repeat.copy(this.repeat);
        a.format = this.format;
        a.type = this.type;
        a.depthBuffer = this.depthBuffer;
        a.stencilBuffer = this.stencilBuffer;
        a.generateMipmaps = this.generateMipmaps;
        a.shareDepthFrom = this.shareDepthFrom;
        return a
    },
    dispose: function() {
        this.dispatchEvent({
            type: "dispose"
        })
    }
};
THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype);
THREE.WebGLRenderTargetCube = function(c, a, b) {
    THREE.WebGLRenderTarget.call(this, c, a, b);
    this.activeCubeFace = 0
};
THREE.WebGLRenderTargetCube.prototype = Object.create(THREE.WebGLRenderTarget.prototype);
THREE.WebGLRenderTargetCube.prototype.constructor = THREE.WebGLRenderTargetCube;
THREE.WebGLExtensions = function(b) {
    var a = {};
    this.get = function(c) {
        if (a[c] !== undefined) {
            return a[c]
        }
        var d;
        switch (c) {
            case "EXT_texture_filter_anisotropic":
                d = b.getExtension("EXT_texture_filter_anisotropic") || b.getExtension("MOZ_EXT_texture_filter_anisotropic") || b.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
                break;
            case "WEBGL_compressed_texture_s3tc":
                d = b.getExtension("WEBGL_compressed_texture_s3tc") || b.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || b.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
                break;
            case "WEBGL_compressed_texture_pvrtc":
                d = b.getExtension("WEBGL_compressed_texture_pvrtc") || b.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
                break;
            default:
                d = b.getExtension(c)
        }
        if (d === null) {}
        a[c] = d;
        return d
    }
};
THREE.WebGLProgram = (function() {
    var b = 0;
    var c = function(f) {
        var g, e, i = [];
        for (var h in f) {
            g = f[h];
            if (g === false) {
                continue
            }
            e = "#define " + h + " " + g;
            i.push(e)
        }
        return i.join("\n")
    };
    var d = function(k, h, f) {
        var e = {};
        for (var j = 0, g = f.length; j < g; j++) {
            var m = f[j];
            e[m] = k.getUniformLocation(h, m)
        }
        return e
    };
    var a = function(k, h, e) {
        var g = {};
        for (var j = 0, f = e.length; j < f; j++) {
            var m = e[j];
            g[m] = k.getAttribLocation(h, m)
        }
        return g
    };
    return function(A, f, v, p) {
        var C = A;
        var q = C.context;
        var F = v.defines;
        var I = v.__webglShader.uniforms;
        var s = v.attributes;
        var l = v.__webglShader.vertexShader;
        var e = v.__webglShader.fragmentShader;
        var G = v.index0AttributeName;
        if (G === undefined && p.morphTargets === true) {
            G = "position"
        }
        var h = "SHADOWMAP_TYPE_BASIC";
        if (p.shadowMapType === THREE.PCFShadowMap) {
            h = "SHADOWMAP_TYPE_PCF"
        } else {
            if (p.shadowMapType === THREE.PCFSoftShadowMap) {
                h = "SHADOWMAP_TYPE_PCF_SOFT"
            }
        }
        var H = "ENVMAP_TYPE_CUBE";
        var B = "ENVMAP_MODE_REFLECTION";
        var g = "ENVMAP_BLENDING_MULTIPLY";
        if (p.envMap) {
            switch (v.envMap.mapping) {
                case THREE.CubeReflectionMapping:
                case THREE.CubeRefractionMapping:
                    H = "ENVMAP_TYPE_CUBE";
                    break;
                case THREE.EquirectangularReflectionMapping:
                case THREE.EquirectangularRefractionMapping:
                    H = "ENVMAP_TYPE_EQUIREC";
                    break;
                case THREE.SphericalReflectionMapping:
                    H = "ENVMAP_TYPE_SPHERE";
                    break
            }
            switch (v.envMap.mapping) {
                case THREE.CubeRefractionMapping:
                case THREE.EquirectangularRefractionMapping:
                    B = "ENVMAP_MODE_REFRACTION";
                    break
            }
            switch (v.combine) {
                case THREE.MultiplyOperation:
                    g = "ENVMAP_BLENDING_MULTIPLY";
                    break;
                case THREE.MixOperation:
                    g = "ENVMAP_BLENDING_MIX";
                    break;
                case THREE.AddOperation:
                    g = "ENVMAP_BLENDING_ADD";
                    break
            }
        }
        var k = c(F);
        var r = q.createProgram();
        var j, n;
        if (v instanceof THREE.RawShaderMaterial) {
            j = "";
            n = ""
        } else {
            j = ["precision " + p.precision + " float;", "precision " + p.precision + " int;", k, p.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "", C.gammaInput ? "#define GAMMA_INPUT" : "", C.gammaOutput ? "#define GAMMA_OUTPUT" : "", "#define MAX_DIR_LIGHTS " + p.maxDirLights, "#define MAX_POINT_LIGHTS " + p.maxPointLights, "#define MAX_SPOT_LIGHTS " + p.maxSpotLights, "#define MAX_HEMI_LIGHTS " + p.maxHemiLights, "#define MAX_SHADOWS " + p.maxShadows, "#define MAX_BONES " + p.maxBones, p.map ? "#define USE_MAP" : "", p.envMap ? "#define USE_ENVMAP" : "", p.envMap ? "#define " + B : "", p.lightMap ? "#define USE_LIGHTMAP" : "", p.bumpMap ? "#define USE_BUMPMAP" : "", p.normalMap ? "#define USE_NORMALMAP" : "", p.specularMap ? "#define USE_SPECULARMAP" : "", p.alphaMap ? "#define USE_ALPHAMAP" : "", p.vertexColors ? "#define USE_COLOR" : "", p.skinning ? "#define USE_SKINNING" : "", p.useVertexTexture ? "#define BONE_TEXTURE" : "", p.morphTargets ? "#define USE_MORPHTARGETS" : "", p.morphNormals ? "#define USE_MORPHNORMALS" : "", p.wrapAround ? "#define WRAP_AROUND" : "", p.doubleSided ? "#define DOUBLE_SIDED" : "", p.flipSided ? "#define FLIP_SIDED" : "", p.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", p.shadowMapEnabled ? "#define " + h : "", p.shadowMapDebug ? "#define SHADOWMAP_DEBUG" : "", p.shadowMapCascade ? "#define SHADOWMAP_CASCADE" : "", p.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "", p.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", "uniform mat4 modelMatrix;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform mat4 viewMatrix;", "uniform mat3 normalMatrix;", "uniform vec3 cameraPosition;", "attribute vec3 position;", "attribute vec3 normal;", "attribute vec2 uv;", "attribute vec2 uv2;", "#ifdef USE_COLOR", "	attribute vec3 color;", "#endif", "#ifdef USE_MORPHTARGETS", "	attribute vec3 morphTarget0;", "	attribute vec3 morphTarget1;", "	attribute vec3 morphTarget2;", "	attribute vec3 morphTarget3;", "	#ifdef USE_MORPHNORMALS", "		attribute vec3 morphNormal0;", "		attribute vec3 morphNormal1;", "		attribute vec3 morphNormal2;", "		attribute vec3 morphNormal3;", "	#else", "		attribute vec3 morphTarget4;", "		attribute vec3 morphTarget5;", "		attribute vec3 morphTarget6;", "		attribute vec3 morphTarget7;", "	#endif", "#endif", "#ifdef USE_SKINNING", "	attribute vec4 skinIndex;", "	attribute vec4 skinWeight;", "#endif", ""].join("\n");
            n = ["precision " + p.precision + " float;", "precision " + p.precision + " int;", (p.bumpMap || p.normalMap) ? "#extension GL_OES_standard_derivatives : enable" : "", k, "#define MAX_DIR_LIGHTS " + p.maxDirLights, "#define MAX_POINT_LIGHTS " + p.maxPointLights, "#define MAX_SPOT_LIGHTS " + p.maxSpotLights, "#define MAX_HEMI_LIGHTS " + p.maxHemiLights, "#define MAX_SHADOWS " + p.maxShadows, p.alphaTest ? "#define ALPHATEST " + p.alphaTest : "", C.gammaInput ? "#define GAMMA_INPUT" : "", C.gammaOutput ? "#define GAMMA_OUTPUT" : "", (p.useFog && p.fog) ? "#define USE_FOG" : "", (p.useFog && p.fogExp) ? "#define FOG_EXP2" : "", p.map ? "#define USE_MAP" : "", p.envMap ? "#define USE_ENVMAP" : "", p.envMap ? "#define " + H : "", p.envMap ? "#define " + B : "", p.envMap ? "#define " + g : "", p.lightMap ? "#define USE_LIGHTMAP" : "", p.bumpMap ? "#define USE_BUMPMAP" : "", p.normalMap ? "#define USE_NORMALMAP" : "", p.specularMap ? "#define USE_SPECULARMAP" : "", p.alphaMap ? "#define USE_ALPHAMAP" : "", p.vertexColors ? "#define USE_COLOR" : "", p.metal ? "#define METAL" : "", p.wrapAround ? "#define WRAP_AROUND" : "", p.doubleSided ? "#define DOUBLE_SIDED" : "", p.flipSided ? "#define FLIP_SIDED" : "", p.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", p.shadowMapEnabled ? "#define " + h : "", p.shadowMapDebug ? "#define SHADOWMAP_DEBUG" : "", p.shadowMapCascade ? "#define SHADOWMAP_CASCADE" : "", p.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", "uniform mat4 viewMatrix;", "uniform vec3 cameraPosition;", ""].join("\n")
        }
        var m = new THREE.WebGLShader(q, q.VERTEX_SHADER, j + l);
        var D = new THREE.WebGLShader(q, q.FRAGMENT_SHADER, n + e);
        q.attachShader(r, m);
        q.attachShader(r, D);
        if (G !== undefined) {
            q.bindAttribLocation(r, 0, G)
        }
        q.linkProgram(r);
        if (q.getProgramParameter(r, q.LINK_STATUS) === false) {
            console.error("THREE.WebGLProgram: Could not initialise shader.");
            console.error("gl.VALIDATE_STATUS", q.getProgramParameter(r, q.VALIDATE_STATUS));
            console.error("gl.getError()", q.getError())
        }
        if (q.getProgramInfoLog(r) !== "") {
            console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()", q.getProgramInfoLog(r))
        }
        q.deleteShader(m);
        q.deleteShader(D);
        var o = ["viewMatrix", "modelViewMatrix", "projectionMatrix", "normalMatrix", "modelMatrix", "cameraPosition", "morphTargetInfluences", "bindMatrix", "bindMatrixInverse"];
        if (p.useVertexTexture) {
            o.push("boneTexture");
            o.push("boneTextureWidth");
            o.push("boneTextureHeight")
        } else {
            o.push("boneGlobalMatrices")
        }
        if (p.logarithmicDepthBuffer) {
            o.push("logDepthBufFC")
        }
        for (var t in I) {
            o.push(t)
        }
        this.uniforms = d(q, r, o);
        o = ["position", "normal", "uv", "uv2", "tangent", "color", "skinIndex", "skinWeight", "lineDistance"];
        for (var E = 0; E < p.maxMorphTargets; E++) {
            o.push("morphTarget" + E)
        }
        for (var E = 0; E < p.maxMorphNormals; E++) {
            o.push("morphNormal" + E)
        }
        for (var J in s) {
            o.push(J)
        }
        this.attributes = a(q, r, o);
        this.attributesKeys = Object.keys(this.attributes);
        this.id = b++;
        this.code = f;
        this.usedTimes = 1;
        this.program = r;
        this.vertexShader = m;
        this.fragmentShader = D;
        return this
    }
})();
THREE.WebGLShader = (function() {
    var a = function(c) {
        var b = c.split("\n");
        for (var d = 0; d < b.length; d++) {
            b[d] = (d + 1) + ": " + b[d]
        }
        return b.join("\n")
    };
    return function(e, c, b) {
        var d = e.createShader(c);
        e.shaderSource(d, b);
        e.compileShader(d);
        if (e.getShaderParameter(d, e.COMPILE_STATUS) === false) {
            console.error("THREE.WebGLShader: Shader couldn't compile.")
        }
        if (e.getShaderInfoLog(d) !== "") {
            console.warn("THREE.WebGLShader: gl.getShaderInfoLog()", e.getShaderInfoLog(d));
            console.warn(a(b))
        }
        return d
    }
})();
THREE.LensFlarePlugin = function(j, c) {
    var i = j.context;
    var k, a;
    var g, f, l;
    var h;
    var d, e;
    var m = function() {
        var o = new Float32Array([-1, -1, 0, 0, 1, -1, 1, 0, 1, 1, 1, 1, -1, 1, 0, 1]);
        var n = new Uint16Array([0, 1, 2, 0, 2, 3]);
        k = i.createBuffer();
        a = i.createBuffer();
        i.bindBuffer(i.ARRAY_BUFFER, k);
        i.bufferData(i.ARRAY_BUFFER, o, i.STATIC_DRAW);
        i.bindBuffer(i.ELEMENT_ARRAY_BUFFER, a);
        i.bufferData(i.ELEMENT_ARRAY_BUFFER, n, i.STATIC_DRAW);
        d = i.createTexture();
        e = i.createTexture();
        i.bindTexture(i.TEXTURE_2D, d);
        i.texImage2D(i.TEXTURE_2D, 0, i.RGB, 16, 16, 0, i.RGB, i.UNSIGNED_BYTE, null);
        i.texParameteri(i.TEXTURE_2D, i.TEXTURE_WRAP_S, i.CLAMP_TO_EDGE);
        i.texParameteri(i.TEXTURE_2D, i.TEXTURE_WRAP_T, i.CLAMP_TO_EDGE);
        i.texParameteri(i.TEXTURE_2D, i.TEXTURE_MAG_FILTER, i.NEAREST);
        i.texParameteri(i.TEXTURE_2D, i.TEXTURE_MIN_FILTER, i.NEAREST);
        i.bindTexture(i.TEXTURE_2D, e);
        i.texImage2D(i.TEXTURE_2D, 0, i.RGBA, 16, 16, 0, i.RGBA, i.UNSIGNED_BYTE, null);
        i.texParameteri(i.TEXTURE_2D, i.TEXTURE_WRAP_S, i.CLAMP_TO_EDGE);
        i.texParameteri(i.TEXTURE_2D, i.TEXTURE_WRAP_T, i.CLAMP_TO_EDGE);
        i.texParameteri(i.TEXTURE_2D, i.TEXTURE_MAG_FILTER, i.NEAREST);
        i.texParameteri(i.TEXTURE_2D, i.TEXTURE_MIN_FILTER, i.NEAREST);
        h = i.getParameter(i.MAX_VERTEX_TEXTURE_IMAGE_UNITS) > 0;
        var p;
        if (h) {
            p = {
                vertexShader: ["uniform lowp int renderType;", "uniform vec3 screenPosition;", "uniform vec2 scale;", "uniform float rotation;", "uniform sampler2D occlusionMap;", "attribute vec2 position;", "attribute vec2 uv;", "varying vec2 vUV;", "varying float vVisibility;", "void main() {", "vUV = uv;", "vec2 pos = position;", "if( renderType == 2 ) {", "vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );", "visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );", "visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );", "vVisibility =        visibility.r / 9.0;", "vVisibility *= 1.0 - visibility.g / 9.0;", "vVisibility *=       visibility.b / 9.0;", "vVisibility *= 1.0 - visibility.a / 9.0;", "pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;", "pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;", "}", "gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );", "}"].join("\n"),
                fragmentShader: ["uniform lowp int renderType;", "uniform sampler2D map;", "uniform float opacity;", "uniform vec3 color;", "varying vec2 vUV;", "varying float vVisibility;", "void main() {", "if( renderType == 0 ) {", "gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );", "} else if( renderType == 1 ) {", "gl_FragColor = texture2D( map, vUV );", "} else {", "vec4 texture = texture2D( map, vUV );", "texture.a *= opacity * vVisibility;", "gl_FragColor = texture;", "gl_FragColor.rgb *= color;", "}", "}"].join("\n")
            }
        } else {
            p = {
                vertexShader: ["uniform lowp int renderType;", "uniform vec3 screenPosition;", "uniform vec2 scale;", "uniform float rotation;", "attribute vec2 position;", "attribute vec2 uv;", "varying vec2 vUV;", "void main() {", "vUV = uv;", "vec2 pos = position;", "if( renderType == 2 ) {", "pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;", "pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;", "}", "gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );", "}"].join("\n"),
                fragmentShader: ["precision mediump float;", "uniform lowp int renderType;", "uniform sampler2D map;", "uniform sampler2D occlusionMap;", "uniform float opacity;", "uniform vec3 color;", "varying vec2 vUV;", "void main() {", "if( renderType == 0 ) {", "gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );", "} else if( renderType == 1 ) {", "gl_FragColor = texture2D( map, vUV );", "} else {", "float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;", "visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;", "visibility = ( 1.0 - visibility / 4.0 );", "vec4 texture = texture2D( map, vUV );", "texture.a *= opacity * visibility;", "gl_FragColor = texture;", "gl_FragColor.rgb *= color;", "}", "}"].join("\n")
            }
        }
        g = b(p);
        f = {
            vertex: i.getAttribLocation(g, "position"),
            uv: i.getAttribLocation(g, "uv")
        };
        l = {
            renderType: i.getUniformLocation(g, "renderType"),
            map: i.getUniformLocation(g, "map"),
            occlusionMap: i.getUniformLocation(g, "occlusionMap"),
            opacity: i.getUniformLocation(g, "opacity"),
            color: i.getUniformLocation(g, "color"),
            scale: i.getUniformLocation(g, "scale"),
            rotation: i.getUniformLocation(g, "rotation"),
            screenPosition: i.getUniformLocation(g, "screenPosition")
        }
    };
    this.render = function(H, D, A, n) {
        if (c.length === 0) {
            return
        }
        var F = new THREE.Vector3();
        var p = n / A,
            G = A * 0.5,
            v = n * 0.5;
        var s = 16 / n,
            I = new THREE.Vector2(s * p, s);
        var r = new THREE.Vector3(1, 1, 0),
            q = new THREE.Vector2(1, 1);
        if (g === undefined) {
            m()
        }
        i.useProgram(g);
        i.enableVertexAttribArray(f.vertex);
        i.enableVertexAttribArray(f.uv);
        i.uniform1i(l.occlusionMap, 0);
        i.uniform1i(l.map, 1);
        i.bindBuffer(i.ARRAY_BUFFER, k);
        i.vertexAttribPointer(f.vertex, 2, i.FLOAT, false, 2 * 8, 0);
        i.vertexAttribPointer(f.uv, 2, i.FLOAT, false, 2 * 8, 8);
        i.bindBuffer(i.ELEMENT_ARRAY_BUFFER, a);
        i.disable(i.CULL_FACE);
        i.depthMask(false);
        for (var C = 0, u = c.length; C < u; C++) {
            s = 16 / n;
            I.set(s * p, s);
            var o = c[C];
            F.set(o.matrixWorld.elements[12], o.matrixWorld.elements[13], o.matrixWorld.elements[14]);
            F.applyMatrix4(D.matrixWorldInverse);
            F.applyProjection(D.projectionMatrix);
            r.copy(F);
            q.x = r.x * G + G;
            q.y = r.y * v + v;
            if (h || (q.x > 0 && q.x < A && q.y > 0 && q.y < n)) {
                i.activeTexture(i.TEXTURE1);
                i.bindTexture(i.TEXTURE_2D, d);
                i.copyTexImage2D(i.TEXTURE_2D, 0, i.RGB, q.x - 8, q.y - 8, 16, 16, 0);
                i.uniform1i(l.renderType, 0);
                i.uniform2f(l.scale, I.x, I.y);
                i.uniform3f(l.screenPosition, r.x, r.y, r.z);
                i.disable(i.BLEND);
                i.enable(i.DEPTH_TEST);
                i.drawElements(i.TRIANGLES, 6, i.UNSIGNED_SHORT, 0);
                i.activeTexture(i.TEXTURE0);
                i.bindTexture(i.TEXTURE_2D, e);
                i.copyTexImage2D(i.TEXTURE_2D, 0, i.RGBA, q.x - 8, q.y - 8, 16, 16, 0);
                i.uniform1i(l.renderType, 1);
                i.disable(i.DEPTH_TEST);
                i.activeTexture(i.TEXTURE1);
                i.bindTexture(i.TEXTURE_2D, d);
                i.drawElements(i.TRIANGLES, 6, i.UNSIGNED_SHORT, 0);
                o.positionScreen.copy(r);
                if (o.customUpdateCallback) {
                    o.customUpdateCallback(o)
                } else {
                    o.updateLensFlares()
                }
                i.uniform1i(l.renderType, 2);
                i.enable(i.BLEND);
                for (var B = 0, E = o.lensFlares.length; B < E; B++) {
                    var t = o.lensFlares[B];
                    if (t.opacity > 0.001 && t.scale > 0.001) {
                        r.x = t.x;
                        r.y = t.y;
                        r.z = t.z;
                        s = t.size * t.scale / n;
                        I.x = s * p;
                        I.y = s;
                        i.uniform3f(l.screenPosition, r.x, r.y, r.z);
                        i.uniform2f(l.scale, I.x, I.y);
                        i.uniform1f(l.rotation, t.rotation);
                        i.uniform1f(l.opacity, t.opacity);
                        i.uniform3f(l.color, t.color.r, t.color.g, t.color.b);
                        j.setBlending(t.blending, t.blendEquation, t.blendSrc, t.blendDst);
                        j.setTexture(t.texture, 1);
                        i.drawElements(i.TRIANGLES, 6, i.UNSIGNED_SHORT, 0)
                    }
                }
            }
        }
        i.enable(i.CULL_FACE);
        i.enable(i.DEPTH_TEST);
        i.depthMask(true);
        j.resetGLState()
    };

    function b(p) {
        var o = i.createProgram();
        var n = i.createShader(i.FRAGMENT_SHADER);
        var r = i.createShader(i.VERTEX_SHADER);
        var q = "precision " + j.getPrecision() + " float;\n";
        i.shaderSource(n, q + p.fragmentShader);
        i.shaderSource(r, q + p.vertexShader);
        i.compileShader(n);
        i.compileShader(r);
        i.attachShader(o, n);
        i.attachShader(o, r);
        i.linkProgram(o);
        return o
    }
};
THREE.ShadowMapPlugin = function(q, e, r, h) {
    var f = q.context;
    var m, u, a, c, p = new THREE.Frustum(),
        b = new THREE.Matrix4(),
        o = new THREE.Vector3(),
        s = new THREE.Vector3(),
        g = new THREE.Vector3(),
        n = [];
    var j = THREE.ShaderLib.depthRGBA;
    var t = THREE.UniformsUtils.clone(j.uniforms);
    m = new THREE.ShaderMaterial({
        uniforms: t,
        vertexShader: j.vertexShader,
        fragmentShader: j.fragmentShader
    });
    u = new THREE.ShaderMaterial({
        uniforms: t,
        vertexShader: j.vertexShader,
        fragmentShader: j.fragmentShader,
        morphTargets: true
    });
    a = new THREE.ShaderMaterial({
        uniforms: t,
        vertexShader: j.vertexShader,
        fragmentShader: j.fragmentShader,
        skinning: true
    });
    c = new THREE.ShaderMaterial({
        uniforms: t,
        vertexShader: j.vertexShader,
        fragmentShader: j.fragmentShader,
        morphTargets: true,
        skinning: true
    });
    m._shadowPass = true;
    u._shadowPass = true;
    a._shadowPass = true;
    c._shadowPass = true;
    this.render = function(X, V) {
        if (q.shadowMapEnabled === false) {
            return
        }
        var U, J, T, W, O, E, Y, aa, I, S, L, B, ab, G, Z = [],
            R = 0,
            A = null;
        f.clearColor(1, 1, 1, 1);
        f.disable(f.BLEND);
        f.enable(f.CULL_FACE);
        f.frontFace(f.CCW);
        if (q.shadowMapCullFace === THREE.CullFaceFront) {
            f.cullFace(f.FRONT)
        } else {
            f.cullFace(f.BACK)
        }
        q.setDepthTest(true);
        for (U = 0, J = e.length; U < J; U++) {
            G = e[U];
            if (!G.castShadow) {
                continue
            }
            if ((G instanceof THREE.DirectionalLight) && G.shadowCascade) {
                for (O = 0; O < G.shadowCascadeCount; O++) {
                    var F;
                    if (!G.shadowCascadeArray[O]) {
                        F = l(G, O);
                        F.originalCamera = V;
                        var Q = new THREE.Gyroscope();
                        Q.position.copy(G.shadowCascadeOffset);
                        Q.add(F);
                        Q.add(F.target);
                        V.add(Q);
                        G.shadowCascadeArray[O] = F
                    } else {
                        F = G.shadowCascadeArray[O]
                    }
                    v(G, O);
                    Z[R] = F;
                    R++
                }
            } else {
                Z[R] = G;
                R++
            }
        }
        for (U = 0, J = Z.length; U < J; U++) {
            G = Z[U];
            if (!G.shadowMap) {
                var N = THREE.LinearFilter;
                if (q.shadowMapType === THREE.PCFSoftShadowMap) {
                    N = THREE.NearestFilter
                }
                var P = {
                    minFilter: N,
                    magFilter: N,
                    format: THREE.RGBAFormat
                };
                G.shadowMap = new THREE.WebGLRenderTarget(G.shadowMapWidth, G.shadowMapHeight, P);
                G.shadowMapSize = new THREE.Vector2(G.shadowMapWidth, G.shadowMapHeight);
                G.shadowMatrix = new THREE.Matrix4()
            }
            if (!G.shadowCamera) {
                if (G instanceof THREE.SpotLight) {
                    G.shadowCamera = new THREE.PerspectiveCamera(G.shadowCameraFov, G.shadowMapWidth / G.shadowMapHeight, G.shadowCameraNear, G.shadowCameraFar)
                } else {
                    if (G instanceof THREE.DirectionalLight) {
                        G.shadowCamera = new THREE.OrthographicCamera(G.shadowCameraLeft, G.shadowCameraRight, G.shadowCameraTop, G.shadowCameraBottom, G.shadowCameraNear, G.shadowCameraFar)
                    } else {
                        console.error("Unsupported light type for shadow");
                        continue
                    }
                }
                X.add(G.shadowCamera);
                if (X.autoUpdate === true) {
                    X.updateMatrixWorld()
                }
            }
            if (G.shadowCameraVisible && !G.cameraHelper) {
                G.cameraHelper = new THREE.CameraHelper(G.shadowCamera);
                X.add(G.cameraHelper)
            }
            if (G.isVirtual && F.originalCamera == V) {
                d(V, G)
            }
            E = G.shadowMap;
            Y = G.shadowMatrix;
            aa = G.shadowCamera;
            aa.position.setFromMatrixPosition(G.matrixWorld);
            g.setFromMatrixPosition(G.target.matrixWorld);
            aa.lookAt(g);
            aa.updateMatrixWorld();
            aa.matrixWorldInverse.getInverse(aa.matrixWorld);
            if (G.cameraHelper) {
                G.cameraHelper.visible = G.shadowCameraVisible
            }
            if (G.shadowCameraVisible) {
                G.cameraHelper.update()
            }
            Y.set(0.5, 0, 0, 0.5, 0, 0.5, 0, 0.5, 0, 0, 0.5, 0.5, 0, 0, 0, 1);
            Y.multiply(aa.projectionMatrix);
            Y.multiply(aa.matrixWorldInverse);
            b.multiplyMatrices(aa.projectionMatrix, aa.matrixWorldInverse);
            p.setFromMatrix(b);
            q.setRenderTarget(E);
            q.clear();
            n.length = 0;
            i(X, X, aa);
            var D, H, K;
            for (T = 0, W = n.length; T < W; T++) {
                B = n[T];
                ab = B.object;
                S = B.buffer;
                D = k(ab);
                H = ab.geometry.morphTargets !== undefined && ab.geometry.morphTargets.length > 0 && D.morphTargets;
                K = ab instanceof THREE.SkinnedMesh && D.skinning;
                if (ab.customDepthMaterial) {
                    L = ab.customDepthMaterial
                } else {
                    if (K) {
                        L = H ? c : a
                    } else {
                        if (H) {
                            L = u
                        } else {
                            L = m
                        }
                    }
                }
                q.setMaterialFaces(D);
                if (S instanceof THREE.BufferGeometry) {
                    q.renderBufferDirect(aa, e, A, L, S, ab)
                } else {
                    q.renderBuffer(aa, e, A, L, S, ab)
                }
            }
            for (T = 0, W = h.length; T < W; T++) {
                B = h[T];
                ab = B.object;
                if (ab.visible && ab.castShadow) {
                    ab._modelViewMatrix.multiplyMatrices(aa.matrixWorldInverse, ab.matrixWorld);
                    q.renderImmediateObject(aa, e, A, m, ab)
                }
            }
        }
        var C = q.getClearColor(),
            M = q.getClearAlpha();
        f.clearColor(C.r, C.g, C.b, M);
        f.enable(f.BLEND);
        if (q.shadowMapCullFace === THREE.CullFaceFront) {
            f.cullFace(f.BACK)
        }
        q.resetGLState()
    };

    function i(F, B, E) {
        if (B.visible) {
            var D = r[B.id];
            if (D && B.castShadow && (B.frustumCulled === false || p.intersectsObject(B) === true)) {
                for (var C = 0, A = D.length; C < A; C++) {
                    var G = D[C];
                    B._modelViewMatrix.multiplyMatrices(E.matrixWorldInverse, B.matrixWorld);
                    n.push(G)
                }
            }
            for (var C = 0, A = B.children.length; C < A; C++) {
                i(F, B.children[C], E)
            }
        }
    }

    function l(B, D) {
        var A = new THREE.DirectionalLight();
        A.isVirtual = true;
        A.onlyShadow = true;
        A.castShadow = true;
        A.shadowCameraNear = B.shadowCameraNear;
        A.shadowCameraFar = B.shadowCameraFar;
        A.shadowCameraLeft = B.shadowCameraLeft;
        A.shadowCameraRight = B.shadowCameraRight;
        A.shadowCameraBottom = B.shadowCameraBottom;
        A.shadowCameraTop = B.shadowCameraTop;
        A.shadowCameraVisible = B.shadowCameraVisible;
        A.shadowDarkness = B.shadowDarkness;
        A.shadowBias = B.shadowCascadeBias[D];
        A.shadowMapWidth = B.shadowCascadeWidth[D];
        A.shadowMapHeight = B.shadowCascadeHeight[D];
        A.pointsWorld = [];
        A.pointsFrustum = [];
        var G = A.pointsWorld,
            C = A.pointsFrustum;
        for (var F = 0; F < 8; F++) {
            G[F] = new THREE.Vector3();
            C[F] = new THREE.Vector3()
        }
        var H = B.shadowCascadeNearZ[D];
        var E = B.shadowCascadeFarZ[D];
        C[0].set(-1, -1, H);
        C[1].set(1, -1, H);
        C[2].set(-1, 1, H);
        C[3].set(1, 1, H);
        C[4].set(-1, -1, E);
        C[5].set(1, -1, E);
        C[6].set(-1, 1, E);
        C[7].set(1, 1, E);
        return A
    }

    function v(B, D) {
        var A = B.shadowCascadeArray[D];
        A.position.copy(B.position);
        A.target.position.copy(B.target.position);
        A.lookAt(A.target);
        A.shadowCameraVisible = B.shadowCameraVisible;
        A.shadowDarkness = B.shadowDarkness;
        A.shadowBias = B.shadowCascadeBias[D];
        var F = B.shadowCascadeNearZ[D];
        var E = B.shadowCascadeFarZ[D];
        var C = A.pointsFrustum;
        C[0].z = F;
        C[1].z = F;
        C[2].z = F;
        C[3].z = F;
        C[4].z = E;
        C[5].z = E;
        C[6].z = E;
        C[7].z = E
    }

    function d(D, A) {
        var F = A.shadowCamera,
            B = A.pointsFrustum,
            E = A.pointsWorld;
        o.set(Infinity, Infinity, Infinity);
        s.set(-Infinity, -Infinity, -Infinity);
        for (var C = 0; C < 8; C++) {
            var G = E[C];
            G.copy(B[C]);
            G.unproject(D);
            G.applyMatrix4(F.matrixWorldInverse);
            if (G.x < o.x) {
                o.x = G.x
            }
            if (G.x > s.x) {
                s.x = G.x
            }
            if (G.y < o.y) {
                o.y = G.y
            }
            if (G.y > s.y) {
                s.y = G.y
            }
            if (G.z < o.z) {
                o.z = G.z
            }
            if (G.z > s.z) {
                s.z = G.z
            }
        }
        F.left = o.x;
        F.right = s.x;
        F.top = s.y;
        F.bottom = o.y;
        F.updateProjectionMatrix()
    }

    function k(A) {
        return A.material instanceof THREE.MeshFaceMaterial ? A.material.materials[0] : A.material
    }
};
THREE.SpritePlugin = function(k, j) {
    var g = k.context;
    var l, a;
    var e, d, n;
    var i;
    var h = new THREE.Vector3();
    var c = new THREE.Quaternion();
    var f = new THREE.Vector3();
    var o = function() {
        var r = new Float32Array([-0.5, -0.5, 0, 0, 0.5, -0.5, 1, 0, 0.5, 0.5, 1, 1, -0.5, 0.5, 0, 1]);
        var p = new Uint16Array([0, 1, 2, 0, 2, 3]);
        l = g.createBuffer();
        a = g.createBuffer();
        g.bindBuffer(g.ARRAY_BUFFER, l);
        g.bufferData(g.ARRAY_BUFFER, r, g.STATIC_DRAW);
        g.bindBuffer(g.ELEMENT_ARRAY_BUFFER, a);
        g.bufferData(g.ELEMENT_ARRAY_BUFFER, p, g.STATIC_DRAW);
        e = b();
        d = {
            position: g.getAttribLocation(e, "position"),
            uv: g.getAttribLocation(e, "uv")
        };
        n = {
            uvOffset: g.getUniformLocation(e, "uvOffset"),
            uvScale: g.getUniformLocation(e, "uvScale"),
            rotation: g.getUniformLocation(e, "rotation"),
            scale: g.getUniformLocation(e, "scale"),
            color: g.getUniformLocation(e, "color"),
            map: g.getUniformLocation(e, "map"),
            opacity: g.getUniformLocation(e, "opacity"),
            modelViewMatrix: g.getUniformLocation(e, "modelViewMatrix"),
            projectionMatrix: g.getUniformLocation(e, "projectionMatrix"),
            fogType: g.getUniformLocation(e, "fogType"),
            fogDensity: g.getUniformLocation(e, "fogDensity"),
            fogNear: g.getUniformLocation(e, "fogNear"),
            fogFar: g.getUniformLocation(e, "fogFar"),
            fogColor: g.getUniformLocation(e, "fogColor"),
            alphaTest: g.getUniformLocation(e, "alphaTest")
        };
        var q = document.createElement("canvas");
        q.width = 8;
        q.height = 8;
        var s = q.getContext("2d");
        s.fillStyle = "white";
        s.fillRect(0, 0, 8, 8);
        i = new THREE.Texture(q);
        i.needsUpdate = true
    };
    this.render = function(u, B) {
        if (j.length === 0) {
            return
        }
        if (e === undefined) {
            o()
        }
        g.useProgram(e);
        g.enableVertexAttribArray(d.position);
        g.enableVertexAttribArray(d.uv);
        g.disable(g.CULL_FACE);
        g.enable(g.BLEND);
        g.bindBuffer(g.ARRAY_BUFFER, l);
        g.vertexAttribPointer(d.position, 2, g.FLOAT, false, 2 * 8, 0);
        g.vertexAttribPointer(d.uv, 2, g.FLOAT, false, 2 * 8, 8);
        g.bindBuffer(g.ELEMENT_ARRAY_BUFFER, a);
        g.uniformMatrix4fv(n.projectionMatrix, false, B.projectionMatrix.elements);
        g.activeTexture(g.TEXTURE0);
        g.uniform1i(n.map, 0);
        var v = 0;
        var D = 0;
        var p = u.fog;
        if (p) {
            g.uniform3f(n.fogColor, p.color.r, p.color.g, p.color.b);
            if (p instanceof THREE.Fog) {
                g.uniform1f(n.fogNear, p.near);
                g.uniform1f(n.fogFar, p.far);
                g.uniform1i(n.fogType, 1);
                v = 1;
                D = 1
            } else {
                if (p instanceof THREE.FogExp2) {
                    g.uniform1f(n.fogDensity, p.density);
                    g.uniform1i(n.fogType, 2);
                    v = 2;
                    D = 2
                }
            }
        } else {
            g.uniform1i(n.fogType, 0);
            v = 0;
            D = 0
        }
        for (var t = 0, r = j.length; t < r; t++) {
            var C = j[t];
            C._modelViewMatrix.multiplyMatrices(B.matrixWorldInverse, C.matrixWorld);
            C.z = -C._modelViewMatrix.elements[14]
        }
        j.sort(m);
        var q = [];
        for (var t = 0, r = j.length; t < r; t++) {
            var C = j[t];
            var A = C.material;
            g.uniform1f(n.alphaTest, A.alphaTest);
            g.uniformMatrix4fv(n.modelViewMatrix, false, C._modelViewMatrix.elements);
            C.matrixWorld.decompose(h, c, f);
            q[0] = f.x;
            q[1] = f.y;
            var s = 0;
            if (u.fog && A.fog) {
                s = D
            }
            if (v !== s) {
                g.uniform1i(n.fogType, s);
                v = s
            }
            if (A.map !== null) {
                g.uniform2f(n.uvOffset, A.map.offset.x, A.map.offset.y);
                g.uniform2f(n.uvScale, A.map.repeat.x, A.map.repeat.y)
            } else {
                g.uniform2f(n.uvOffset, 0, 0);
                g.uniform2f(n.uvScale, 1, 1)
            }
            g.uniform1f(n.opacity, A.opacity);
            g.uniform3f(n.color, A.color.r, A.color.g, A.color.b);
            g.uniform1f(n.rotation, A.rotation);
            g.uniform2fv(n.scale, q);
            k.setBlending(A.blending, A.blendEquation, A.blendSrc, A.blendDst);
            k.setDepthTest(A.depthTest);
            k.setDepthWrite(A.depthWrite);
            if (A.map && A.map.image && A.map.image.width) {
                k.setTexture(A.map, 0)
            } else {
                k.setTexture(i, 0)
            }
            g.drawElements(g.TRIANGLES, 6, g.UNSIGNED_SHORT, 0)
        }
        g.enable(g.CULL_FACE);
        k.resetGLState()
    };

    function b() {
        var q = g.createProgram();
        var r = g.createShader(g.VERTEX_SHADER);
        var p = g.createShader(g.FRAGMENT_SHADER);
        g.shaderSource(r, ["precision " + k.getPrecision() + " float;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform float rotation;", "uniform vec2 scale;", "uniform vec2 uvOffset;", "uniform vec2 uvScale;", "attribute vec2 position;", "attribute vec2 uv;", "varying vec2 vUV;", "void main() {", "vUV = uvOffset + uv * uvScale;", "vec2 alignedPosition = position * scale;", "vec2 rotatedPosition;", "rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;", "rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;", "vec4 finalPosition;", "finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );", "finalPosition.xy += rotatedPosition;", "finalPosition = projectionMatrix * finalPosition;", "gl_Position = finalPosition;", "}"].join("\n"));
        g.shaderSource(p, ["precision " + k.getPrecision() + " float;", "uniform vec3 color;", "uniform sampler2D map;", "uniform float opacity;", "uniform int fogType;", "uniform vec3 fogColor;", "uniform float fogDensity;", "uniform float fogNear;", "uniform float fogFar;", "uniform float alphaTest;", "varying vec2 vUV;", "void main() {", "vec4 texture = texture2D( map, vUV );", "if ( texture.a < alphaTest ) discard;", "gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );", "if ( fogType > 0 ) {", "float depth = gl_FragCoord.z / gl_FragCoord.w;", "float fogFactor = 0.0;", "if ( fogType == 1 ) {", "fogFactor = smoothstep( fogNear, fogFar, depth );", "} else {", "const float LOG2 = 1.442695;", "float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );", "fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );", "}", "gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );", "}", "}"].join("\n"));
        g.compileShader(r);
        g.compileShader(p);
        g.attachShader(q, r);
        g.attachShader(q, p);
        g.linkProgram(q);
        return q
    }

    function m(q, p) {
        if (q.z !== p.z) {
            return p.z - q.z
        } else {
            return p.id - q.id
        }
    }
};
THREE.GeometryUtils = {
    merge: function(c, b, d) {
        console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");
        var a;
        if (b instanceof THREE.Mesh) {
            b.matrixAutoUpdate && b.updateMatrix();
            a = b.matrix;
            b = b.geometry
        }
        c.merge(b, a, d)
    },
    center: function(a) {
        console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.");
        return a.center()
    }
};
THREE.ImageUtils = {
    crossOrigin: undefined,
    loadTexture: function(c, b, d, f) {
        var a = new THREE.ImageLoader();
        a.crossOrigin = this.crossOrigin;
        var e = new THREE.Texture(undefined, b);
        a.load(c, function(g) {
            e.image = g;
            e.needsUpdate = true;
            if (d) {
                d(e)
            }
        }, undefined, function(g) {
            if (f) {
                f(g)
            }
        });
        e.sourceFile = c;
        return e
    },
    loadTextureCube: function(e, a, h, d) {
        var j = [];
        var l = new THREE.ImageLoader();
        l.crossOrigin = this.crossOrigin;
        var f = new THREE.CubeTexture(j, a);
        f.flipY = false;
        var c = 0;
        var g = function(m) {
            l.load(e[m], function(i) {
                f.images[m] = i;
                c += 1;
                if (c === 6) {
                    f.needsUpdate = true;
                    if (h) {
                        h(f)
                    }
                }
            }, undefined, d)
        };
        for (var b = 0, k = e.length; b < k; ++b) {
            g(b)
        }
        return f
    },
    loadCompressedTexture: function() {
        console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")
    },
    loadCompressedTextureCube: function() {
        console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")
    },
    getNormalMap: function(q, E) {
        var d = function(G, i) {
            return [G[1] * i[2] - G[2] * i[1], G[2] * i[0] - G[0] * i[2], G[0] * i[1] - G[1] * i[0]]
        };
        var v = function(G, i) {
            return [G[0] - i[0], G[1] - i[1], G[2] - i[2]]
        };
        var s = function(G) {
            var i = Math.sqrt(G[0] * G[0] + G[1] * G[1] + G[2] * G[2]);
            return [G[0] / i, G[1] / i, G[2] / i]
        };
        E = E | 1;
        var r = q.width;
        var p = q.height;
        var e = document.createElement("canvas");
        e.width = r;
        e.height = p;
        var c = e.getContext("2d");
        c.drawImage(q, 0, 0);
        var F = c.getImageData(0, 0, r, p).data;
        var A = c.createImageData(r, p);
        var k = A.data;
        for (var m = 0; m < r; m++) {
            for (var l = 0; l < p; l++) {
                var f = l - 1 < 0 ? 0 : l - 1;
                var h = l + 1 > p - 1 ? p - 1 : l + 1;
                var g = m - 1 < 0 ? 0 : m - 1;
                var j = m + 1 > r - 1 ? r - 1 : m + 1;
                var u = [];
                var D = [0, 0, F[(l * r + m) * 4] / 255 * E];
                u.push([-1, 0, F[(l * r + g) * 4] / 255 * E]);
                u.push([-1, -1, F[(f * r + g) * 4] / 255 * E]);
                u.push([0, -1, F[(f * r + m) * 4] / 255 * E]);
                u.push([1, -1, F[(f * r + j) * 4] / 255 * E]);
                u.push([1, 0, F[(l * r + j) * 4] / 255 * E]);
                u.push([1, 1, F[(h * r + j) * 4] / 255 * E]);
                u.push([0, 1, F[(h * r + m) * 4] / 255 * E]);
                u.push([-1, 1, F[(h * r + g) * 4] / 255 * E]);
                var o = [];
                var B = u.length;
                for (var t = 0; t < B; t++) {
                    var b = u[t];
                    var a = u[(t + 1) % B];
                    b = v(b, D);
                    a = v(a, D);
                    o.push(s(d(b, a)))
                }
                var C = [0, 0, 0];
                for (var t = 0; t < o.length; t++) {
                    C[0] += o[t][0];
                    C[1] += o[t][1];
                    C[2] += o[t][2]
                }
                C[0] /= o.length;
                C[1] /= o.length;
                C[2] /= o.length;
                var n = (l * r + m) * 4;
                k[n] = ((C[0] + 1) / 2 * 255) | 0;
                k[n + 1] = ((C[1] + 1) / 2 * 255) | 0;
                k[n + 2] = (C[2] * 255) | 0;
                k[n + 3] = 255
            }
        }
        c.putImageData(A, 0, 0);
        return e
    },
    generateDataTexture: function(c, l, d) {
        var m = c * l;
        var f = new Uint8Array(3 * m);
        var a = Math.floor(d.r * 255);
        var h = Math.floor(d.g * 255);
        var k = Math.floor(d.b * 255);
        for (var e = 0; e < m; e++) {
            f[e * 3] = a;
            f[e * 3 + 1] = h;
            f[e * 3 + 2] = k
        }
        var j = new THREE.DataTexture(f, c, l, THREE.RGBFormat);
        j.needsUpdate = true;
        return j
    }
};
THREE.SceneUtils = {
    createMultiMaterialObject: function(e, b) {
        var d = new THREE.Object3D();
        for (var c = 0, a = b.length; c < a; c++) {
            d.add(new THREE.Mesh(e, b[c]))
        }
        return d
    },
    detach: function(c, a, b) {
        c.applyMatrix(a.matrixWorld);
        a.remove(c);
        b.add(c)
    },
    attach: function(d, c, a) {
        var b = new THREE.Matrix4();
        b.getInverse(a.matrixWorld);
        d.applyMatrix(b);
        c.remove(d);
        a.add(d)
    }
};
THREE.FontUtils = {
    faces: {},
    face: "helvetiker",
    weight: "normal",
    style: "normal",
    size: 150,
    divisions: 10,
    getFace: function() {
        try {
            return this.faces[this.face][this.weight][this.style]
        } catch (a) {
            throw "The font " + this.face + " with " + this.weight + " weight and " + this.style + " style is missing."
        }
    },
    loadFace: function(d) {
        var a = d.familyName.toLowerCase();
        var b = this;
        b.faces[a] = b.faces[a] || {};
        b.faces[a][d.cssFontWeight] = b.faces[a][d.cssFontWeight] || {};
        b.faces[a][d.cssFontWeight][d.cssFontStyle] = d;
        var c = b.faces[a][d.cssFontWeight][d.cssFontStyle] = d;
        return d
    },
    drawText: function(n) {
        var a = [],
            e = [];
        var j, c, l = this.getFace(),
            g = this.size / l.resolution,
            h = 0,
            m = String(n).split(""),
            d = m.length;
        var f = [];
        for (j = 0; j < d; j++) {
            var o = new THREE.Path();
            var k = this.extractGlyphPoints(m[j], l, g, h, o);
            h += k.offset;
            f.push(k.path)
        }
        var b = h / 2;
        return {
            paths: f,
            offset: b
        }
    },
    extractGlyphPoints: function(E, j, I, f, r) {
        var J = [];
        var v, s, d, e, u, b, G, D, l, k, h, g, q, C, o, B, n, A, a, m = j.glyphs[E] || j.glyphs["?"];
        if (!m) {
            return
        }
        if (m.o) {
            e = m._cachedOutline || (m._cachedOutline = m.o.split(" "));
            b = e.length;
            G = I;
            D = I;
            for (v = 0; v < b;) {
                u = e[v++];
                switch (u) {
                    case "m":
                        l = e[v++] * G + f;
                        k = e[v++] * D;
                        r.moveTo(l, k);
                        break;
                    case "l":
                        l = e[v++] * G + f;
                        k = e[v++] * D;
                        r.lineTo(l, k);
                        break;
                    case "q":
                        h = e[v++] * G + f;
                        g = e[v++] * D;
                        o = e[v++] * G + f;
                        B = e[v++] * D;
                        r.quadraticCurveTo(o, B, h, g);
                        a = J[J.length - 1];
                        if (a) {
                            q = a.x;
                            C = a.y;
                            for (s = 1, d = this.divisions; s <= d; s++) {
                                var p = s / d;
                                var H = THREE.Shape.Utils.b2(p, q, o, h);
                                var F = THREE.Shape.Utils.b2(p, C, B, g)
                            }
                        }
                        break;
                    case "b":
                        h = e[v++] * G + f;
                        g = e[v++] * D;
                        o = e[v++] * G + f;
                        B = e[v++] * D;
                        n = e[v++] * G + f;
                        A = e[v++] * D;
                        r.bezierCurveTo(o, B, n, A, h, g);
                        a = J[J.length - 1];
                        if (a) {
                            q = a.x;
                            C = a.y;
                            for (s = 1, d = this.divisions; s <= d; s++) {
                                var p = s / d;
                                var H = THREE.Shape.Utils.b3(p, q, o, n, h);
                                var F = THREE.Shape.Utils.b3(p, C, B, A, g)
                            }
                        }
                        break
                }
            }
        }
        return {
            offset: m.ha * I,
            path: r
        }
    }
};
THREE.FontUtils.generateShapes = function(i, j) {
    j = j || {};
    var l = j.size !== undefined ? j.size : 100;
    var h = j.curveSegments !== undefined ? j.curveSegments : 4;
    var d = j.font !== undefined ? j.font : "helvetiker";
    var g = j.weight !== undefined ? j.weight : "normal";
    var a = j.style !== undefined ? j.style : "normal";
    THREE.FontUtils.size = l;
    THREE.FontUtils.divisions = h;
    THREE.FontUtils.face = d;
    THREE.FontUtils.weight = g;
    THREE.FontUtils.style = a;
    var f = THREE.FontUtils.drawText(i);
    var k = f.paths;
    var c = [];
    for (var b = 0, e = k.length; b < e; b++) {
        Array.prototype.push.apply(c, k[b].toShapes())
    }
    return c
};
(function(c) {
    var b = 1e-10;
    var e = function(g, r) {
        var f = g.length;
        if (f < 3) {
            return null
        }
        var D = [],
            p = [],
            j = [];
        var A, q, o;
        if (d(g) > 0) {
            for (q = 0; q < f; q++) {
                p[q] = q
            }
        } else {
            for (q = 0; q < f; q++) {
                p[q] = (f - 1) - q
            }
        }
        var i = f;
        var h = 2 * i;
        for (q = i - 1; i > 2;) {
            if ((h--) <= 0) {
                if (r) {
                    return j
                }
                return D
            }
            A = q;
            if (i <= A) {
                A = 0
            }
            q = A + 1;
            if (i <= q) {
                q = 0
            }
            o = q + 1;
            if (i <= o) {
                o = 0
            }
            if (a(g, A, q, o, i, p)) {
                var m, l, k, C, B;
                m = p[A];
                l = p[q];
                k = p[o];
                D.push([g[m], g[l], g[k]]);
                j.push([p[A], p[q], p[o]]);
                for (C = q, B = q + 1; B < i; C++, B++) {
                    p[C] = p[B]
                }
                i--;
                h = 2 * i
            }
        }
        if (r) {
            return j
        }
        return D
    };
    var d = function(g) {
        var j = g.length;
        var f = 0;
        for (var i = j - 1, h = 0; h < j; i = h++) {
            f += g[i].x * g[h].y - g[h].x * g[i].y
        }
        return f * 0.5
    };
    var a = function(J, D, C, t, I, Q) {
        var H;
        var A, r, O, M;
        var i, g, G, F;
        A = J[Q[D]].x;
        r = J[Q[D]].y;
        O = J[Q[C]].x;
        M = J[Q[C]].y;
        i = J[Q[t]].x;
        g = J[Q[t]].y;
        if (b > (((O - A) * (g - r)) - ((M - r) * (i - A)))) {
            return false
        }
        var h, f, B, s, P, N;
        var l, k, L, K, o, m;
        var j, q, E;
        h = i - O;
        f = g - M;
        B = A - i;
        s = r - g;
        P = O - A;
        N = M - r;
        for (H = 0; H < I; H++) {
            G = J[Q[H]].x;
            F = J[Q[H]].y;
            if (((G === A) && (F === r)) || ((G === O) && (F === M)) || ((G === i) && (F === g))) {
                continue
            }
            l = G - A;
            k = F - r;
            L = G - O;
            K = F - M;
            o = G - i;
            m = F - g;
            E = h * K - f * L;
            j = P * k - N * l;
            q = B * m - s * o;
            if ((E >= -b) && (q >= -b) && (j >= -b)) {
                return false
            }
        }
        return true
    };
    c.Triangulate = e;
    c.Triangulate.area = d;
    return c
})(THREE.FontUtils);
self._typeface_js = {
    faces: THREE.FontUtils.faces,
    loadFace: THREE.FontUtils.loadFace
};
THREE.typeface_js = self._typeface_js;
THREE.Audio = function(a) {
    THREE.Object3D.call(this);
    this.type = "Audio";
    this.context = a.context;
    this.source = this.context.createBufferSource();
    this.gain = this.context.createGain();
    this.gain.connect(this.context.destination);
    this.panner = this.context.createPanner();
    this.panner.connect(this.gain)
};
THREE.Audio.prototype = Object.create(THREE.Object3D.prototype);
THREE.Audio.prototype.constructor = THREE.Audio;
THREE.Audio.prototype.load = function(a) {
    var b = this;
    var c = new XMLHttpRequest();
    c.open("GET", a, true);
    c.responseType = "arraybuffer";
    c.onload = function(d) {
        b.context.decodeAudioData(this.response, function(e) {
            b.source.buffer = e;
            b.source.connect(b.panner);
            b.source.start(0)
        })
    };
    c.send();
    return this
};
THREE.Audio.prototype.setLoop = function(a) {
    this.source.loop = a
};
THREE.Audio.prototype.setRefDistance = function(a) {
    this.panner.refDistance = a
};
THREE.Audio.prototype.setRolloffFactor = function(a) {
    this.panner.rolloffFactor = a
};
THREE.Audio.prototype.updateMatrixWorld = (function() {
    var a = new THREE.Vector3();
    return function(b) {
        THREE.Object3D.prototype.updateMatrixWorld.call(this, b);
        a.setFromMatrixPosition(this.matrixWorld);
        this.panner.setPosition(a.x, a.y, a.z)
    }
})();
THREE.AudioListener = function() {
    THREE.Object3D.call(this);
    this.type = "AudioListener";
    this.context = new(window.AudioContext || window.webkitAudioContext)()
};
THREE.AudioListener.prototype = Object.create(THREE.Object3D.prototype);
THREE.AudioListener.prototype.constructor = THREE.AudioListener;
THREE.AudioListener.prototype.updateMatrixWorld = (function() {
    var b = new THREE.Vector3();
    var e = new THREE.Quaternion();
    var f = new THREE.Vector3();
    var c = new THREE.Vector3();
    var d = new THREE.Vector3();
    var a = new THREE.Vector3();
    return function(i) {
        THREE.Object3D.prototype.updateMatrixWorld.call(this, i);
        var h = this.context.listener;
        var g = this.up;
        this.matrixWorld.decompose(b, e, f);
        c.set(0, 0, -1).applyQuaternion(e);
        d.subVectors(b, a);
        h.setPosition(b.x, b.y, b.z);
        h.setOrientation(c.x, c.y, c.z, g.x, g.y, g.z);
        h.setVelocity(d.x, d.y, d.z);
        a.copy(b)
    }
})();
THREE.Curve = function() {};
THREE.Curve.prototype.getPoint = function(a) {
    return null
};
THREE.Curve.prototype.getPointAt = function(a) {
    var b = this.getUtoTmapping(a);
    return this.getPoint(b)
};
THREE.Curve.prototype.getPoints = function(a) {
    if (!a) {
        a = 5
    }
    var c, b = [];
    for (c = 0; c <= a; c++) {
        b.push(this.getPoint(c / a))
    }
    return b
};
THREE.Curve.prototype.getSpacedPoints = function(a) {
    if (!a) {
        a = 5
    }
    var c, b = [];
    for (c = 0; c <= a; c++) {
        b.push(this.getPointAt(c / a))
    }
    return b
};
THREE.Curve.prototype.getLength = function() {
    var a = this.getLengths();
    return a[a.length - 1]
};
THREE.Curve.prototype.getLengths = function(b) {
    if (!b) {
        b = (this.__arcLengthDivisions) ? (this.__arcLengthDivisions) : 200
    }
    if (this.cacheArcLengths && (this.cacheArcLengths.length == b + 1) && !this.needsUpdate) {
        return this.cacheArcLengths
    }
    this.needsUpdate = false;
    var a = [];
    var f, d = this.getPoint(0);
    var e, c = 0;
    a.push(0);
    for (e = 1; e <= b; e++) {
        f = this.getPoint(e / b);
        c += f.distanceTo(d);
        a.push(c);
        d = f
    }
    this.cacheArcLengths = a;
    return a
};
THREE.Curve.prototype.updateArcLengths = function() {
    this.needsUpdate = true;
    this.getLengths()
};
THREE.Curve.prototype.getUtoTmapping = function(m, a) {
    var b = this.getLengths();
    var e = 0,
        j = b.length;
    var k;
    if (a) {
        k = a
    } else {
        k = m * b[j - 1]
    }
    var h = 0,
        d = j - 1,
        l;
    while (h <= d) {
        e = Math.floor(h + (d - h) / 2);
        l = b[e] - k;
        if (l < 0) {
            h = e + 1;
            continue
        } else {
            if (l > 0) {
                d = e - 1;
                continue
            } else {
                d = e;
                break
            }
        }
    }
    e = d;
    if (b[e] == k) {
        var o = e / (j - 1);
        return o
    }
    var f = b[e];
    var n = b[e + 1];
    var c = n - f;
    var g = (k - f) / c;
    var o = (e + g) / (j - 1);
    return o
};
THREE.Curve.prototype.getTangent = function(b) {
    var g = 0.0001;
    var d = b - g;
    var c = b + g;
    if (d < 0) {
        d = 0
    }
    if (c > 1) {
        c = 1
    }
    var f = this.getPoint(d);
    var e = this.getPoint(c);
    var a = e.clone().sub(f);
    return a.normalize()
};
THREE.Curve.prototype.getTangentAt = function(a) {
    var b = this.getUtoTmapping(a);
    return this.getTangent(b)
};
THREE.Curve.Utils = {
    tangentQuadraticBezier: function(a, d, c, b) {
        return 2 * (1 - a) * (c - d) + 2 * a * (b - c)
    },
    tangentCubicBezier: function(a, e, d, c, b) {
        return -3 * e * (1 - a) * (1 - a) + 3 * d * (1 - a) * (1 - a) - 6 * a * d * (1 - a) + 6 * a * c * (1 - a) - 3 * a * a * c + 3 * a * a * b
    },
    tangentSpline: function(i, h, g, f, d) {
        var e = 6 * i * i - 6 * i;
        var b = 3 * i * i - 4 * i + 1;
        var c = -6 * i * i + 6 * i;
        var a = 3 * i * i - 2 * i;
        return e + b + c + a
    },
    interpolate: function(h, g, e, d, i) {
        var f = (e - h) * 0.5;
        var c = (d - g) * 0.5;
        var b = i * i;
        var a = i * b;
        return (2 * g - 2 * e + f + c) * a + (-3 * g + 3 * e - 2 * f - c) * b + f * i + g
    }
};
THREE.Curve.create = function(a, b) {
    a.prototype = Object.create(THREE.Curve.prototype);
    a.prototype.constructor = a;
    a.prototype.getPoint = b;
    return a
};
THREE.CurvePath = function() {
    this.curves = [];
    this.bends = [];
    this.autoClose = false
};
THREE.CurvePath.prototype = Object.create(THREE.Curve.prototype);
THREE.CurvePath.prototype.constructor = THREE.CurvePath;
THREE.CurvePath.prototype.add = function(a) {
    this.curves.push(a)
};
THREE.CurvePath.prototype.checkConnection = function() {};
THREE.CurvePath.prototype.closePath = function() {
    var b = this.curves[0].getPoint(0);
    var a = this.curves[this.curves.length - 1].getPoint(1);
    if (!b.equals(a)) {
        this.curves.push(new THREE.LineCurve(a, b))
    }
};
THREE.CurvePath.prototype.getPoint = function(c) {
    var h = c * this.getLength();
    var g = this.getCurveLengths();
    var b = 0,
        e, f;
    while (b < g.length) {
        if (g[b] >= h) {
            e = g[b] - h;
            f = this.curves[b];
            var a = 1 - e / f.getLength();
            return f.getPointAt(a);
            break
        }
        b++
    }
    return null
};
THREE.CurvePath.prototype.getLength = function() {
    var a = this.getCurveLengths();
    return a[a.length - 1]
};
THREE.CurvePath.prototype.getCurveLengths = function() {
    if (this.cacheLengths && this.cacheLengths.length == this.curves.length) {
        return this.cacheLengths
    }
    var d = [],
        c = 0;
    var b, a = this.curves.length;
    for (b = 0; b < a; b++) {
        c += this.curves[b].getLength();
        d.push(c)
    }
    this.cacheLengths = d;
    return d
};
THREE.CurvePath.prototype.getBoundingBox = function() {
    var m = this.getPoints();
    var b, a, n;
    var f, e, d;
    b = a = Number.NEGATIVE_INFINITY;
    f = e = Number.POSITIVE_INFINITY;
    var c, g, l, h;
    var k = m[0] instanceof THREE.Vector3;
    h = k ? new THREE.Vector3() : new THREE.Vector2();
    for (g = 0, l = m.length; g < l; g++) {
        c = m[g];
        if (c.x > b) {
            b = c.x
        } else {
            if (c.x < f) {
                f = c.x
            }
        }
        if (c.y > a) {
            a = c.y
        } else {
            if (c.y < e) {
                e = c.y
            }
        }
        if (k) {
            if (c.z > n) {
                n = c.z
            } else {
                if (c.z < d) {
                    d = c.z
                }
            }
        }
        h.add(c)
    }
    var j = {
        minX: f,
        minY: e,
        maxX: b,
        maxY: a
    };
    if (k) {
        j.maxZ = n;
        j.minZ = d
    }
    return j
};
THREE.CurvePath.prototype.createPointsGeometry = function(a) {
    var b = this.getPoints(a, true);
    return this.createGeometry(b)
};
THREE.CurvePath.prototype.createSpacedPointsGeometry = function(a) {
    var b = this.getSpacedPoints(a, true);
    return this.createGeometry(b)
};
THREE.CurvePath.prototype.createGeometry = function(b) {
    var c = new THREE.Geometry();
    for (var a = 0; a < b.length; a++) {
        c.vertices.push(new THREE.Vector3(b[a].x, b[a].y, b[a].z || 0))
    }
    return c
};
THREE.CurvePath.prototype.addWrapPath = function(a) {
    this.bends.push(a)
};
THREE.CurvePath.prototype.getTransformedPoints = function(c, e) {
    var b = this.getPoints(c);
    var d, a;
    if (!e) {
        e = this.bends
    }
    for (d = 0, a = e.length; d < a; d++) {
        b = this.getWrapPoints(b, e[d])
    }
    return b
};
THREE.CurvePath.prototype.getTransformedSpacedPoints = function(c, e) {
    var b = this.getSpacedPoints(c);
    var d, a;
    if (!e) {
        e = this.bends
    }
    for (d = 0, a = e.length; d < a; d++) {
        b = this.getWrapPoints(b, e[d])
    }
    return b
};
THREE.CurvePath.prototype.getWrapPoints = function(f, l) {
    var a = this.getBoundingBox();
    var d, g, b, j, h, k;
    for (d = 0, g = f.length; d < g; d++) {
        b = f[d];
        j = b.x;
        h = b.y;
        k = j / a.maxX;
        k = l.getUtoTmapping(k, j);
        var c = l.getPoint(k);
        var e = l.getTangent(k);
        e.set(-e.y, e.x).multiplyScalar(h);
        b.x = c.x + e.x;
        b.y = c.y + e.y
    }
    return f
};
THREE.Gyroscope = function() {
    THREE.Object3D.call(this)
};
THREE.Gyroscope.prototype = Object.create(THREE.Object3D.prototype);
THREE.Gyroscope.prototype.constructor = THREE.Gyroscope;
THREE.Gyroscope.prototype.updateMatrixWorld = (function() {
    var d = new THREE.Vector3();
    var f = new THREE.Quaternion();
    var c = new THREE.Vector3();
    var b = new THREE.Vector3();
    var a = new THREE.Quaternion();
    var e = new THREE.Vector3();
    return function(j) {
        this.matrixAutoUpdate && this.updateMatrix();
        if (this.matrixWorldNeedsUpdate || j) {
            if (this.parent) {
                this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);
                this.matrixWorld.decompose(b, a, e);
                this.matrix.decompose(d, f, c);
                this.matrixWorld.compose(b, f, e)
            } else {
                this.matrixWorld.copy(this.matrix)
            }
            this.matrixWorldNeedsUpdate = false;
            j = true
        }
        for (var h = 0, g = this.children.length; h < g; h++) {
            this.children[h].updateMatrixWorld(j)
        }
    }
}());
THREE.Path = function(a) {
    THREE.CurvePath.call(this);
    this.actions = [];
    if (a) {
        this.fromPoints(a)
    }
};
THREE.Path.prototype = Object.create(THREE.CurvePath.prototype);
THREE.Path.prototype.constructor = THREE.Path;
THREE.PathActions = {
    MOVE_TO: "moveTo",
    LINE_TO: "lineTo",
    QUADRATIC_CURVE_TO: "quadraticCurveTo",
    BEZIER_CURVE_TO: "bezierCurveTo",
    CSPLINE_THRU: "splineThru",
    ARC: "arc",
    ELLIPSE: "ellipse"
};
THREE.Path.prototype.fromPoints = function(b) {
    this.moveTo(b[0].x, b[0].y);
    for (var a = 1, c = b.length; a < c; a++) {
        this.lineTo(b[a].x, b[a].y)
    }
};
THREE.Path.prototype.moveTo = function(a, c) {
    var b = Array.prototype.slice.call(arguments);
    this.actions.push({
        action: THREE.PathActions.MOVE_TO,
        args: b
    })
};
THREE.Path.prototype.lineTo = function(a, g) {
    var b = Array.prototype.slice.call(arguments);
    var e = this.actions[this.actions.length - 1].args;
    var c = e[e.length - 2];
    var d = e[e.length - 1];
    var f = new THREE.LineCurve(new THREE.Vector2(c, d), new THREE.Vector2(a, g));
    this.curves.push(f);
    this.actions.push({
        action: THREE.PathActions.LINE_TO,
        args: b
    })
};
THREE.Path.prototype.quadraticCurveTo = function(e, b, g, f) {
    var h = Array.prototype.slice.call(arguments);
    var a = this.actions[this.actions.length - 1].args;
    var c = a[a.length - 2];
    var i = a[a.length - 1];
    var d = new THREE.QuadraticBezierCurve(new THREE.Vector2(c, i), new THREE.Vector2(e, b), new THREE.Vector2(g, f));
    this.curves.push(d);
    this.actions.push({
        action: THREE.PathActions.QUADRATIC_CURVE_TO,
        args: h
    })
};
THREE.Path.prototype.bezierCurveTo = function(e, c, k, j, g, f) {
    var h = Array.prototype.slice.call(arguments);
    var a = this.actions[this.actions.length - 1].args;
    var b = a[a.length - 2];
    var i = a[a.length - 1];
    var d = new THREE.CubicBezierCurve(new THREE.Vector2(b, i), new THREE.Vector2(e, c), new THREE.Vector2(k, j), new THREE.Vector2(g, f));
    this.curves.push(d);
    this.actions.push({
        action: THREE.PathActions.BEZIER_CURVE_TO,
        args: h
    })
};
THREE.Path.prototype.splineThru = function(g) {
    var a = Array.prototype.slice.call(arguments);
    var d = this.actions[this.actions.length - 1].args;
    var b = d[d.length - 2];
    var c = d[d.length - 1];
    var f = [new THREE.Vector2(b, c)];
    Array.prototype.push.apply(f, g);
    var e = new THREE.SplineCurve(f);
    this.curves.push(e);
    this.actions.push({
        action: THREE.PathActions.CSPLINE_THRU,
        args: a
    })
};
THREE.Path.prototype.arc = function(h, f, g, d, a, b) {
    var c = this.actions[this.actions.length - 1].args;
    var e = c[c.length - 2];
    var i = c[c.length - 1];
    this.absarc(h + e, f + i, g, d, a, b)
};
THREE.Path.prototype.absarc = function(e, d, f, c, b, a) {
    this.absellipse(e, d, f, f, c, b, a)
};
THREE.Path.prototype.ellipse = function(g, f, i, h, d, a, b) {
    var c = this.actions[this.actions.length - 1].args;
    var e = c[c.length - 2];
    var j = c[c.length - 1];
    this.absellipse(g + e, f + j, i, h, d, a, b)
};
THREE.Path.prototype.absellipse = function(f, e, j, g, c, a, b) {
    var h = Array.prototype.slice.call(arguments);
    var d = new THREE.EllipseCurve(f, e, j, g, c, a, b);
    this.curves.push(d);
    var i = d.getPoint(1);
    h.push(i.x);
    h.push(i.y);
    this.actions.push({
        action: THREE.PathActions.ELLIPSE,
        args: h
    })
};
THREE.Path.prototype.getSpacedPoints = function(b, d) {
    if (!b) {
        b = 40
    }
    var c = [];
    for (var a = 0; a < b; a++) {
        c.push(this.getPoint(a / b))
    }
    return c
};
THREE.Path.prototype.getPoints = function(S, Q) {
    if (this.useSpacedPoints) {
        return this.getSpacedPoints(S, Q)
    }
    S = S || 12;
    var E = [];
    var N, u, r, c, I;
    var F, C, R, v, T, A, a, B, b, M, H, L, K;
    for (N = 0, u = this.actions.length; N < u; N++) {
        r = this.actions[N];
        c = r.action;
        I = r.args;
        switch (c) {
            case THREE.PathActions.MOVE_TO:
                E.push(new THREE.Vector2(I[0], I[1]));
                break;
            case THREE.PathActions.LINE_TO:
                E.push(new THREE.Vector2(I[0], I[1]));
                break;
            case THREE.PathActions.QUADRATIC_CURVE_TO:
                F = I[2];
                C = I[3];
                T = I[0];
                A = I[1];
                if (E.length > 0) {
                    b = E[E.length - 1];
                    a = b.x;
                    B = b.y
                } else {
                    b = this.actions[N - 1].args;
                    a = b[b.length - 2];
                    B = b[b.length - 1]
                }
                for (M = 1; M <= S; M++) {
                    H = M / S;
                    L = THREE.Shape.Utils.b2(H, a, T, F);
                    K = THREE.Shape.Utils.b2(H, B, A, C);
                    E.push(new THREE.Vector2(L, K))
                }
                break;
            case THREE.PathActions.BEZIER_CURVE_TO:
                F = I[4];
                C = I[5];
                T = I[0];
                A = I[1];
                R = I[2];
                v = I[3];
                if (E.length > 0) {
                    b = E[E.length - 1];
                    a = b.x;
                    B = b.y
                } else {
                    b = this.actions[N - 1].args;
                    a = b[b.length - 2];
                    B = b[b.length - 1]
                }
                for (M = 1; M <= S; M++) {
                    H = M / S;
                    L = THREE.Shape.Utils.b3(H, a, T, R, F);
                    K = THREE.Shape.Utils.b3(H, B, A, v, C);
                    E.push(new THREE.Vector2(L, K))
                }
                break;
            case THREE.PathActions.CSPLINE_THRU:
                b = this.actions[N - 1].args;
                var k = new THREE.Vector2(b[b.length - 2], b[b.length - 1]);
                var f = [k];
                var J = S * I[0].length;
                f = f.concat(I[0]);
                var P = new THREE.SplineCurve(f);
                for (M = 1; M <= J; M++) {
                    E.push(P.getPointAt(M / J))
                }
                break;
            case THREE.PathActions.ARC:
                var o = I[0],
                    m = I[1],
                    p = I[2],
                    O = I[3],
                    G = I[4],
                    h = !!I[5];
                var D = G - O;
                var l;
                var d = S * 2;
                for (M = 1; M <= d; M++) {
                    H = M / d;
                    if (!h) {
                        H = 1 - H
                    }
                    l = O + H * D;
                    L = o + p * Math.cos(l);
                    K = m + p * Math.sin(l);
                    E.push(new THREE.Vector2(L, K))
                }
                break;
            case THREE.PathActions.ELLIPSE:
                var o = I[0],
                    m = I[1],
                    q = I[2],
                    s = I[3],
                    O = I[4],
                    G = I[5],
                    h = !!I[6];
                var D = G - O;
                var l;
                var d = S * 2;
                for (M = 1; M <= d; M++) {
                    H = M / d;
                    if (!h) {
                        H = 1 - H
                    }
                    l = O + H * D;
                    L = o + q * Math.cos(l);
                    K = m + s * Math.sin(l);
                    E.push(new THREE.Vector2(L, K))
                }
                break
        }
    }
    var e = E[E.length - 1];
    var g = 1e-10;
    if (Math.abs(e.x - E[0].x) < g && Math.abs(e.y - E[0].y) < g) {
        E.splice(E.length - 1, 1)
    }
    if (Q) {
        E.push(E[0])
    }
    return E
};
THREE.Path.prototype.toShapes = function(J, t) {
    function k(N) {
        var M, j, O, P, L;
        var R = [],
            Q = new THREE.Path();
        for (M = 0, j = N.length; M < j; M++) {
            O = N[M];
            L = O.args;
            P = O.action;
            if (P == THREE.PathActions.MOVE_TO) {
                if (Q.actions.length != 0) {
                    R.push(Q);
                    Q = new THREE.Path()
                }
            }
            Q[P].apply(Q, L)
        }
        if (Q.actions.length != 0) {
            R.push(Q)
        }
        return R
    }

    function m(M) {
        var j = [];
        for (var N = 0, L = M.length; N < L; N++) {
            var O = M[N];
            var P = new THREE.Shape();
            P.actions = O.actions;
            P.curves = O.curves;
            j.push(P)
        }
        return j
    }

    function q(T, M) {
        var N = 1e-10;
        var P = M.length;
        var O = false;
        for (var j = P - 1, i = 0; i < P; j = i++) {
            var L = M[j];
            var U = M[i];
            var S = U.x - L.x;
            var Q = U.y - L.y;
            if (Math.abs(Q) > N) {
                if (Q < 0) {
                    L = M[i];
                    S = -S;
                    U = M[j];
                    Q = -Q
                }
                if ((T.y < L.y) || (T.y > U.y)) {
                    continue
                }
                if (T.y == L.y) {
                    if (T.x == L.x) {
                        return true
                    }
                } else {
                    var R = Q * (T.x - L.x) - S * (T.y - L.y);
                    if (R == 0) {
                        return true
                    }
                    if (R < 0) {
                        continue
                    }
                    O = !O
                }
            } else {
                if (T.y != L.y) {
                    continue
                }
                if (((U.x <= T.x) && (T.x <= L.x)) || ((L.x <= T.x) && (T.x <= U.x))) {
                    return true
                }
            }
        }
        return O
    }
    var e = k(this.actions);
    if (e.length == 0) {
        return []
    }
    if (t === true) {
        return m(e)
    }
    var H, F, o, r = [];
    if (e.length == 1) {
        F = e[0];
        o = new THREE.Shape();
        o.actions = F.actions;
        o.curves = F.curves;
        r.push(o);
        return r
    }
    var a = !THREE.Shape.Utils.isClockWise(e[0].getPoints());
    a = J ? !a : a;
    var p = [];
    var B = [];
    var G = [];
    var h = 0;
    var u;
    B[h] = undefined;
    G[h] = [];
    var C, n;
    for (C = 0, n = e.length; C < n; C++) {
        F = e[C];
        u = F.getPoints();
        H = THREE.Shape.Utils.isClockWise(u);
        H = J ? !H : H;
        if (H) {
            if ((!a) && (B[h])) {
                h++
            }
            B[h] = {
                s: new THREE.Shape(),
                p: u
            };
            B[h].s.actions = F.actions;
            B[h].s.curves = F.curves;
            if (a) {
                h++
            }
            G[h] = []
        } else {
            G[h].push({
                h: F,
                p: u[0]
            })
        }
    }
    if (!B[0]) {
        return m(e)
    }
    if (B.length > 1) {
        var c = false;
        var v = [];
        for (var K = 0, d = B.length; K < d; K++) {
            p[K] = []
        }
        for (var K = 0, d = B.length; K < d; K++) {
            var I = B[K];
            var s = G[K];
            for (var l = 0; l < s.length; l++) {
                var b = s[l];
                var g = true;
                for (var f = 0; f < B.length; f++) {
                    if (q(b.p, B[f].p)) {
                        if (K != f) {
                            v.push({
                                froms: K,
                                tos: f,
                                hole: l
                            })
                        }
                        if (g) {
                            g = false;
                            p[f].push(b)
                        } else {
                            c = true
                        }
                    }
                }
                if (g) {
                    p[K].push(b)
                }
            }
        }
        if (v.length > 0) {
            if (!c) {
                G = p
            }
        }
    }
    var E, A, D;
    for (C = 0, n = B.length; C < n; C++) {
        o = B[C].s;
        r.push(o);
        E = G[C];
        for (A = 0, D = E.length; A < D; A++) {
            o.holes.push(E[A].h)
        }
    }
    return r
};
THREE.Shape = function() {
    THREE.Path.apply(this, arguments);
    this.holes = []
};
THREE.Shape.prototype = Object.create(THREE.Path.prototype);
THREE.Shape.prototype.constructor = THREE.Shape;
THREE.Shape.prototype.extrude = function(b) {
    var a = new THREE.ExtrudeGeometry(this, b);
    return a
};
THREE.Shape.prototype.makeGeometry = function(a) {
    var b = new THREE.ShapeGeometry(this, a);
    return b
};
THREE.Shape.prototype.getPointsHoles = function(c) {
    var b, a = this.holes.length,
        d = [];
    for (b = 0; b < a; b++) {
        d[b] = this.holes[b].getTransformedPoints(c, this.bends)
    }
    return d
};
THREE.Shape.prototype.getSpacedPointsHoles = function(c) {
    var b, a = this.holes.length,
        d = [];
    for (b = 0; b < a; b++) {
        d[b] = this.holes[b].getTransformedSpacedPoints(c, this.bends)
    }
    return d
};
THREE.Shape.prototype.extractAllPoints = function(a) {
    return {
        shape: this.getTransformedPoints(a),
        holes: this.getPointsHoles(a)
    }
};
THREE.Shape.prototype.extractPoints = function(a) {
    if (this.useSpacedPoints) {
        return this.extractAllSpacedPoints(a)
    }
    return this.extractAllPoints(a)
};
THREE.Shape.prototype.extractAllSpacedPoints = function(a) {
    return {
        shape: this.getTransformedSpacedPoints(a),
        holes: this.getSpacedPointsHoles(a)
    }
};
THREE.Shape.Utils = {
    triangulateShape: function(p, j) {
        function e(i, h, f) {
            if (i.x != h.x) {
                if (i.x < h.x) {
                    return ((i.x <= f.x) && (f.x <= h.x))
                } else {
                    return ((h.x <= f.x) && (f.x <= i.x))
                }
            } else {
                if (i.y < h.y) {
                    return ((i.y <= f.y) && (f.y <= h.y))
                } else {
                    return ((h.y <= f.y) && (f.y <= i.y))
                }
            }
        }

        function m(U, T, v, i, Q) {
            var J = 1e-10;
            var I = T.x - U.x,
                H = T.y - U.y;
            var S = i.x - v.x,
                R = i.y - v.y;
            var O = U.x - v.x;
            var N = U.y - v.y;
            var P = H * S - I * R;
            var F = H * O - I * N;
            if (Math.abs(P) > J) {
                var E;
                if (P > 0) {
                    if ((F < 0) || (F > P)) {
                        return []
                    }
                    E = R * O - S * N;
                    if ((E < 0) || (E > P)) {
                        return []
                    }
                } else {
                    if ((F > 0) || (F < P)) {
                        return []
                    }
                    E = R * O - S * N;
                    if ((E > 0) || (E < P)) {
                        return []
                    }
                }
                if (E == 0) {
                    if ((Q) && ((F == 0) || (F == P))) {
                        return []
                    }
                    return [U]
                }
                if (E == P) {
                    if ((Q) && ((F == 0) || (F == P))) {
                        return []
                    }
                    return [T]
                }
                if (F == 0) {
                    return [v]
                }
                if (F == P) {
                    return [i]
                }
                var h = E / P;
                return [{
                    x: U.x + h * I,
                    y: U.y + h * H
                }]
            } else {
                if ((F != 0) || (R * O != S * N)) {
                    return []
                }
                var K = ((I == 0) && (H == 0));
                var D = ((S == 0) && (R == 0));
                if (K && D) {
                    if ((U.x != v.x) || (U.y != v.y)) {
                        return []
                    }
                    return [U]
                }
                if (K) {
                    if (!e(v, i, U)) {
                        return []
                    }
                    return [U]
                }
                if (D) {
                    if (!e(U, T, v)) {
                        return []
                    }
                    return [v]
                }
                var V, f, M, G;
                var B, C, A, L;
                if (I != 0) {
                    if (U.x < T.x) {
                        V = U;
                        M = U.x;
                        f = T;
                        G = T.x
                    } else {
                        V = T;
                        M = T.x;
                        f = U;
                        G = U.x
                    }
                    if (v.x < i.x) {
                        B = v;
                        A = v.x;
                        C = i;
                        L = i.x
                    } else {
                        B = i;
                        A = i.x;
                        C = v;
                        L = v.x
                    }
                } else {
                    if (U.y < T.y) {
                        V = U;
                        M = U.y;
                        f = T;
                        G = T.y
                    } else {
                        V = T;
                        M = T.y;
                        f = U;
                        G = U.y
                    }
                    if (v.y < i.y) {
                        B = v;
                        A = v.y;
                        C = i;
                        L = i.y
                    } else {
                        B = i;
                        A = i.y;
                        C = v;
                        L = v.y
                    }
                }
                if (M <= A) {
                    if (G < A) {
                        return []
                    }
                    if (G == A) {
                        if (Q) {
                            return []
                        }
                        return [B]
                    }
                    if (G <= L) {
                        return [B, f]
                    }
                    return [B, C]
                } else {
                    if (M > L) {
                        return []
                    }
                    if (M == L) {
                        if (Q) {
                            return []
                        }
                        return [V]
                    }
                    if (G <= L) {
                        return [V, f]
                    }
                    return [V, C]
                }
            }
        }

        function s(A, F, i, H) {
            var v = 1e-10;
            var G = F.x - A.x,
                E = F.y - A.y;
            var J = i.x - A.x,
                I = i.y - A.y;
            var D = H.x - A.x,
                C = H.y - A.y;
            var h = G * I - E * J;
            var f = G * C - E * D;
            if (Math.abs(h) > v) {
                var B = D * I - C * J;
                if (h > 0) {
                    return ((f >= 0) && (B >= 0))
                } else {
                    return ((f >= 0) || (B >= 0))
                }
            } else {
                return (f > 0)
            }
        }

        function k(L, H) {
            var i = L.concat();
            var K;

            function M(Y, ab) {
                var X = i.length - 1;
                var aa = Y - 1;
                if (aa < 0) {
                    aa = X
                }
                var W = Y + 1;
                if (W > X) {
                    W = 0
                }
                var ac = s(i[Y], i[aa], i[W], K[ab]);
                if (!ac) {
                    return false
                }
                var Z = K.length - 1;
                var V = ab - 1;
                if (V < 0) {
                    V = Z
                }
                var h = ab + 1;
                if (h > Z) {
                    h = 0
                }
                ac = s(K[ab], K[V], K[h], i[Y]);
                if (!ac) {
                    return false
                }
                return true
            }

            function f(V, W) {
                var h, X, Y;
                for (h = 0; h < i.length; h++) {
                    X = h + 1;
                    X %= i.length;
                    Y = m(V, W, i[h], i[X], true);
                    if (Y.length > 0) {
                        return true
                    }
                }
                return false
            }
            var C = [];

            function O(V, W) {
                var X, aa, h, Y, Z;
                for (X = 0; X < C.length; X++) {
                    aa = H[C[X]];
                    for (h = 0; h < aa.length; h++) {
                        Y = h + 1;
                        Y %= aa.length;
                        Z = m(V, W, aa[h], aa[Y], true);
                        if (Z.length > 0) {
                            return true
                        }
                    }
                }
                return false
            }
            var I, F, U, R, S, P, B = [],
                T, Q, E, D;
            for (var N = 0, A = H.length; N < A; N++) {
                C.push(N)
            }
            var v = 0;
            var J = C.length * 2;
            while (C.length > 0) {
                J--;
                if (J < 0) {
                    break
                }
                for (F = v; F < i.length; F++) {
                    U = i[F];
                    I = -1;
                    for (var N = 0; N < C.length; N++) {
                        S = C[N];
                        P = U.x + ":" + U.y + ":" + S;
                        if (B[P] !== undefined) {
                            continue
                        }
                        K = H[S];
                        for (var G = 0; G < K.length; G++) {
                            R = K[G];
                            if (!M(F, G)) {
                                continue
                            }
                            if (f(U, R)) {
                                continue
                            }
                            if (O(U, R)) {
                                continue
                            }
                            I = G;
                            C.splice(N, 1);
                            T = i.slice(0, F + 1);
                            Q = i.slice(F);
                            E = K.slice(I);
                            D = K.slice(0, I + 1);
                            i = T.concat(E).concat(D).concat(Q);
                            v = F;
                            break
                        }
                        if (I >= 0) {
                            break
                        }
                        B[P] = true
                    }
                    if (I >= 0) {
                        break
                    }
                }
            }
            return i
        }
        var q, n, t, l, u, d, c = {};
        var g = p.concat();
        for (var r = 0, b = j.length; r < b; r++) {
            Array.prototype.push.apply(g, j[r])
        }
        for (q = 0, n = g.length; q < n; q++) {
            u = g[q].x + ":" + g[q].y;
            if (c[u] !== undefined) {}
            c[u] = q
        }
        var a = k(p, j);
        var o = THREE.FontUtils.Triangulate(a, false);
        for (q = 0, n = o.length; q < n; q++) {
            l = o[q];
            for (t = 0; t < 3; t++) {
                u = l[t].x + ":" + l[t].y;
                d = c[u];
                if (d !== undefined) {
                    l[t] = d
                }
            }
        }
        return o.concat()
    },
    isClockWise: function(a) {
        return THREE.FontUtils.Triangulate.area(a) < 0
    },
    b2p0: function(b, c) {
        var a = 1 - b;
        return a * a * c
    },
    b2p1: function(a, b) {
        return 2 * (1 - a) * a * b
    },
    b2p2: function(a, b) {
        return a * a * b
    },
    b2: function(a, d, c, b) {
        return this.b2p0(a, d) + this.b2p1(a, c) + this.b2p2(a, b)
    },
    b3p0: function(b, c) {
        var a = 1 - b;
        return a * a * a * c
    },
    b3p1: function(b, c) {
        var a = 1 - b;
        return 3 * a * a * b * c
    },
    b3p2: function(b, c) {
        var a = 1 - b;
        return 3 * a * b * b * c
    },
    b3p3: function(a, b) {
        return a * a * a * b
    },
    b3: function(a, e, d, c, b) {
        return this.b3p0(a, e) + this.b3p1(a, d) + this.b3p2(a, c) + this.b3p3(a, b)
    }
};
THREE.LineCurve = function(b, a) {
    this.v1 = b;
    this.v2 = a
};
THREE.LineCurve.prototype = Object.create(THREE.Curve.prototype);
THREE.LineCurve.prototype.constructor = THREE.LineCurve;
THREE.LineCurve.prototype.getPoint = function(b) {
    var a = this.v2.clone().sub(this.v1);
    a.multiplyScalar(b).add(this.v1);
    return a
};
THREE.LineCurve.prototype.getPointAt = function(a) {
    return this.getPoint(a)
};
THREE.LineCurve.prototype.getTangent = function(a) {
    var b = this.v2.clone().sub(this.v1);
    return b.normalize()
};
THREE.QuadraticBezierCurve = function(a, c, b) {
    this.v0 = a;
    this.v1 = c;
    this.v2 = b
};
THREE.QuadraticBezierCurve.prototype = Object.create(THREE.Curve.prototype);
THREE.QuadraticBezierCurve.prototype.constructor = THREE.QuadraticBezierCurve;
THREE.QuadraticBezierCurve.prototype.getPoint = function(b) {
    var a = new THREE.Vector2();
    a.x = THREE.Shape.Utils.b2(b, this.v0.x, this.v1.x, this.v2.x);
    a.y = THREE.Shape.Utils.b2(b, this.v0.y, this.v1.y, this.v2.y);
    return a
};
THREE.QuadraticBezierCurve.prototype.getTangent = function(b) {
    var a = new THREE.Vector2();
    a.x = THREE.Curve.Utils.tangentQuadraticBezier(b, this.v0.x, this.v1.x, this.v2.x);
    a.y = THREE.Curve.Utils.tangentQuadraticBezier(b, this.v0.y, this.v1.y, this.v2.y);
    return a.normalize()
};
THREE.CubicBezierCurve = function(a, d, c, b) {
    this.v0 = a;
    this.v1 = d;
    this.v2 = c;
    this.v3 = b
};
THREE.CubicBezierCurve.prototype = Object.create(THREE.Curve.prototype);
THREE.CubicBezierCurve.prototype.constructor = THREE.CubicBezierCurve;
THREE.CubicBezierCurve.prototype.getPoint = function(c) {
    var b, a;
    b = THREE.Shape.Utils.b3(c, this.v0.x, this.v1.x, this.v2.x, this.v3.x);
    a = THREE.Shape.Utils.b3(c, this.v0.y, this.v1.y, this.v2.y, this.v3.y);
    return new THREE.Vector2(b, a)
};
THREE.CubicBezierCurve.prototype.getTangent = function(c) {
    var b, a;
    b = THREE.Curve.Utils.tangentCubicBezier(c, this.v0.x, this.v1.x, this.v2.x, this.v3.x);
    a = THREE.Curve.Utils.tangentCubicBezier(c, this.v0.y, this.v1.y, this.v2.y, this.v3.y);
    var d = new THREE.Vector2(b, a);
    d.normalize();
    return d
};
THREE.SplineCurve = function(a) {
    this.points = (a == undefined) ? [] : a
};
THREE.SplineCurve.prototype = Object.create(THREE.Curve.prototype);
THREE.SplineCurve.prototype.constructor = THREE.SplineCurve;
THREE.SplineCurve.prototype.getPoint = function(j) {
    var i = this.points;
    var h = (i.length - 1) * j;
    var a = Math.floor(h);
    var c = h - a;
    var g = i[a == 0 ? a : a - 1];
    var f = i[a];
    var e = i[a > i.length - 2 ? i.length - 1 : a + 1];
    var d = i[a > i.length - 3 ? i.length - 1 : a + 2];
    var b = new THREE.Vector2();
    b.x = THREE.Curve.Utils.interpolate(g.x, f.x, e.x, d.x, c);
    b.y = THREE.Curve.Utils.interpolate(g.y, f.y, e.y, d.y, c);
    return b
};
THREE.EllipseCurve = function(f, e, g, a, d, c, b) {
    this.aX = f;
    this.aY = e;
    this.xRadius = g;
    this.yRadius = a;
    this.aStartAngle = d;
    this.aEndAngle = c;
    this.aClockwise = b
};
THREE.EllipseCurve.prototype = Object.create(THREE.Curve.prototype);
THREE.EllipseCurve.prototype.constructor = THREE.EllipseCurve;
THREE.EllipseCurve.prototype.getPoint = function(b) {
    var d = this.aEndAngle - this.aStartAngle;
    if (d < 0) {
        d += Math.PI * 2
    }
    if (d > Math.PI * 2) {
        d -= Math.PI * 2
    }
    var c;
    if (this.aClockwise === true) {
        c = this.aEndAngle + (1 - b) * (Math.PI * 2 - d)
    } else {
        c = this.aStartAngle + b * d
    }
    var a = new THREE.Vector2();
    a.x = this.aX + this.xRadius * Math.cos(c);
    a.y = this.aY + this.yRadius * Math.sin(c);
    return a
};
THREE.ArcCurve = function(e, d, f, c, b, a) {
    THREE.EllipseCurve.call(this, e, d, f, f, c, b, a)
};
THREE.ArcCurve.prototype = Object.create(THREE.EllipseCurve.prototype);
THREE.ArcCurve.prototype.constructor = THREE.ArcCurve;
THREE.LineCurve3 = THREE.Curve.create(function(b, a) {
    this.v1 = b;
    this.v2 = a
}, function(b) {
    var a = new THREE.Vector3();
    a.subVectors(this.v2, this.v1);
    a.multiplyScalar(b);
    a.add(this.v1);
    return a
});
THREE.QuadraticBezierCurve3 = THREE.Curve.create(function(a, c, b) {
    this.v0 = a;
    this.v1 = c;
    this.v2 = b
}, function(b) {
    var a = new THREE.Vector3();
    a.x = THREE.Shape.Utils.b2(b, this.v0.x, this.v1.x, this.v2.x);
    a.y = THREE.Shape.Utils.b2(b, this.v0.y, this.v1.y, this.v2.y);
    a.z = THREE.Shape.Utils.b2(b, this.v0.z, this.v1.z, this.v2.z);
    return a
});
THREE.CubicBezierCurve3 = THREE.Curve.create(function(a, d, c, b) {
    this.v0 = a;
    this.v1 = d;
    this.v2 = c;
    this.v3 = b
}, function(b) {
    var a = new THREE.Vector3();
    a.x = THREE.Shape.Utils.b3(b, this.v0.x, this.v1.x, this.v2.x, this.v3.x);
    a.y = THREE.Shape.Utils.b3(b, this.v0.y, this.v1.y, this.v2.y, this.v3.y);
    a.z = THREE.Shape.Utils.b3(b, this.v0.z, this.v1.z, this.v2.z, this.v3.z);
    return a
});
THREE.SplineCurve3 = THREE.Curve.create(function(a) {
    this.points = (a == undefined) ? [] : a
}, function(j) {
    var i = this.points;
    var h = (i.length - 1) * j;
    var a = Math.floor(h);
    var c = h - a;
    var g = i[a == 0 ? a : a - 1];
    var f = i[a];
    var e = i[a > i.length - 2 ? i.length - 1 : a + 1];
    var d = i[a > i.length - 3 ? i.length - 1 : a + 2];
    var b = new THREE.Vector3();
    b.x = THREE.Curve.Utils.interpolate(g.x, f.x, e.x, d.x, c);
    b.y = THREE.Curve.Utils.interpolate(g.y, f.y, e.y, d.y, c);
    b.z = THREE.Curve.Utils.interpolate(g.z, f.z, e.z, d.z, c);
    return b
});
THREE.ClosedSplineCurve3 = THREE.Curve.create(function(a) {
    this.points = (a == undefined) ? [] : a
}, function(j) {
    var i = this.points;
    var h = (i.length - 0) * j;
    var a = Math.floor(h);
    var c = h - a;
    a += a > 0 ? 0 : (Math.floor(Math.abs(a) / i.length) + 1) * i.length;
    var g = i[(a - 1) % i.length];
    var f = i[(a) % i.length];
    var e = i[(a + 1) % i.length];
    var d = i[(a + 2) % i.length];
    var b = new THREE.Vector3();
    b.x = THREE.Curve.Utils.interpolate(g.x, f.x, e.x, d.x, c);
    b.y = THREE.Curve.Utils.interpolate(g.y, f.y, e.y, d.y, c);
    b.z = THREE.Curve.Utils.interpolate(g.z, f.z, e.z, d.z, c);
    return b
});
THREE.AnimationHandler = {
    LINEAR: 0,
    CATMULLROM: 1,
    CATMULLROM_FORWARD: 2,
    add: function() {
        console.warn("THREE.AnimationHandler.add() has been deprecated.")
    },
    get: function() {
        console.warn("THREE.AnimationHandler.get() has been deprecated.")
    },
    remove: function() {
        console.warn("THREE.AnimationHandler.remove() has been deprecated.")
    },
    animations: [],
    init: function(g) {
        if (g.initialized === true) {
            return g
        }
        for (var c = 0; c < g.hierarchy.length; c++) {
            for (var b = 0; b < g.hierarchy[c].keys.length; b++) {
                if (g.hierarchy[c].keys[b].time < 0) {
                    g.hierarchy[c].keys[b].time = 0
                }
                if (g.hierarchy[c].keys[b].rot !== undefined && !(g.hierarchy[c].keys[b].rot instanceof THREE.Quaternion)) {
                    var f = g.hierarchy[c].keys[b].rot;
                    g.hierarchy[c].keys[b].rot = new THREE.Quaternion().fromArray(f)
                }
            }
            if (g.hierarchy[c].keys.length && g.hierarchy[c].keys[0].morphTargets !== undefined) {
                var e = {};
                for (var b = 0; b < g.hierarchy[c].keys.length; b++) {
                    for (var a = 0; a < g.hierarchy[c].keys[b].morphTargets.length; a++) {
                        var i = g.hierarchy[c].keys[b].morphTargets[a];
                        e[i] = -1
                    }
                }
                g.hierarchy[c].usedMorphTargets = e;
                for (var b = 0; b < g.hierarchy[c].keys.length; b++) {
                    var d = {};
                    for (var i in e) {
                        for (var a = 0; a < g.hierarchy[c].keys[b].morphTargets.length; a++) {
                            if (g.hierarchy[c].keys[b].morphTargets[a] === i) {
                                d[i] = g.hierarchy[c].keys[b].morphTargetsInfluences[a];
                                break
                            }
                        }
                        if (a === g.hierarchy[c].keys[b].morphTargets.length) {
                            d[i] = 0
                        }
                    }
                    g.hierarchy[c].keys[b].morphTargetsInfluences = d
                }
            }
            for (var b = 1; b < g.hierarchy[c].keys.length; b++) {
                if (g.hierarchy[c].keys[b].time === g.hierarchy[c].keys[b - 1].time) {
                    g.hierarchy[c].keys.splice(b, 1);
                    b--
                }
            }
            for (var b = 0; b < g.hierarchy[c].keys.length; b++) {
                g.hierarchy[c].keys[b].index = b
            }
        }
        g.initialized = true;
        return g
    },
    parse: function(c) {
        var e = function(b, f) {
            f.push(b);
            for (var g = 0; g < b.children.length; g++) {
                e(b.children[g], f)
            }
        };
        var d = [];
        if (c instanceof THREE.SkinnedMesh) {
            for (var a = 0; a < c.skeleton.bones.length; a++) {
                d.push(c.skeleton.bones[a])
            }
        } else {
            e(c, d)
        }
        return d
    },
    play: function(a) {
        if (this.animations.indexOf(a) === -1) {
            this.animations.push(a)
        }
    },
    stop: function(b) {
        var a = this.animations.indexOf(b);
        if (a !== -1) {
            this.animations.splice(a, 1)
        }
    },
    update: function(b) {
        for (var a = 0; a < this.animations.length; a++) {
            this.animations[a].resetBlendWeights()
        }
        for (var a = 0; a < this.animations.length; a++) {
            this.animations[a].update(b)
        }
    }
};
THREE.Animation = function(a, b) {
    this.root = a;
    this.data = THREE.AnimationHandler.init(b);
    this.hierarchy = THREE.AnimationHandler.parse(a);
    this.currentTime = 0;
    this.timeScale = 1;
    this.isPlaying = false;
    this.loop = true;
    this.weight = 0;
    this.interpolationType = THREE.AnimationHandler.LINEAR
};
THREE.Animation.prototype.keyTypes = ["pos", "rot", "scl"];
THREE.Animation.prototype.play = function(a, b) {
    this.currentTime = a !== undefined ? a : 0;
    this.weight = b !== undefined ? b : 1;
    this.isPlaying = true;
    this.reset();
    THREE.AnimationHandler.play(this)
};
THREE.Animation.prototype.stop = function() {
    this.isPlaying = false;
    THREE.AnimationHandler.stop(this)
};
THREE.Animation.prototype.reset = function() {
    for (var i = 0, b = this.hierarchy.length; i < b; i++) {
        var d = this.hierarchy[i];
        if (d.animationCache === undefined) {
            d.animationCache = {
                animations: {},
                blending: {
                    positionWeight: 0,
                    quaternionWeight: 0,
                    scaleWeight: 0
                }
            }
        }
        if (d.animationCache.animations[this.data.name] === undefined) {
            d.animationCache.animations[this.data.name] = {};
            d.animationCache.animations[this.data.name].prevKey = {
                pos: 0,
                rot: 0,
                scl: 0
            };
            d.animationCache.animations[this.data.name].nextKey = {
                pos: 0,
                rot: 0,
                scl: 0
            };
            d.animationCache.animations[this.data.name].originalMatrix = d.matrix
        }
        var c = d.animationCache.animations[this.data.name];
        for (var e = 0; e < 3; e++) {
            var g = this.keyTypes[e];
            var f = this.data.hierarchy[i].keys[0];
            var a = this.getNextKeyWith(g, i, 1);
            while (a.time < this.currentTime && a.index > f.index) {
                f = a;
                a = this.getNextKeyWith(g, i, a.index + 1)
            }
            c.prevKey[g] = f;
            c.nextKey[g] = a
        }
    }
};
THREE.Animation.prototype.resetBlendWeights = function() {
    for (var c = 0, a = this.hierarchy.length; c < a; c++) {
        var b = this.hierarchy[c];
        if (b.animationCache !== undefined) {
            b.animationCache.blending.positionWeight = 0;
            b.animationCache.blending.quaternionWeight = 0;
            b.animationCache.blending.scaleWeight = 0
        }
    }
};
THREE.Animation.prototype.update = (function() {
    var d = [];
    var f = new THREE.Vector3();
    var a = new THREE.Vector3();
    var c = new THREE.Quaternion();
    var e = function(s, h) {
        var m = [],
            o = [],
            r, g, k, j, i, q, p, n, l;
        r = (s.length - 1) * h;
        g = Math.floor(r);
        k = r - g;
        m[0] = g === 0 ? g : g - 1;
        m[1] = g;
        m[2] = g > s.length - 2 ? g : g + 1;
        m[3] = g > s.length - 3 ? g : g + 2;
        q = s[m[0]];
        p = s[m[1]];
        n = s[m[2]];
        l = s[m[3]];
        j = k * k;
        i = k * j;
        o[0] = b(q[0], p[0], n[0], l[0], k, j, i);
        o[1] = b(q[1], p[1], n[1], l[1], k, j, i);
        o[2] = b(q[2], p[2], n[2], l[2], k, j, i);
        return o
    };
    var b = function(n, m, k, j, o, h, g) {
        var l = (k - n) * 0.5,
            i = (j - m) * 0.5;
        return (2 * (m - k) + l + i) * g + (-3 * (m - k) - 2 * l - i) * h + l * o + m
    };
    return function(A) {
        if (this.isPlaying === false) {
            return
        }
        this.currentTime += A * this.timeScale;
        if (this.weight === 0) {
            return
        }
        var g = this.data.length;
        if (this.currentTime > g || this.currentTime < 0) {
            if (this.loop) {
                this.currentTime %= g;
                if (this.currentTime < 0) {
                    this.currentTime += g
                }
                this.reset()
            } else {
                this.stop()
            }
        }
        for (var u = 0, j = this.hierarchy.length; u < j; u++) {
            var D = this.hierarchy[u];
            var q = D.animationCache.animations[this.data.name];
            var n = D.animationCache.blending;
            for (var p = 0; p < 3; p++) {
                var l = this.keyTypes[p];
                var C = q.prevKey[l];
                var m = q.nextKey[l];
                if ((this.timeScale > 0 && m.time <= this.currentTime) || (this.timeScale < 0 && C.time >= this.currentTime)) {
                    C = this.data.hierarchy[u].keys[0];
                    m = this.getNextKeyWith(l, u, 1);
                    while (m.time < this.currentTime && m.index > C.index) {
                        C = m;
                        m = this.getNextKeyWith(l, u, m.index + 1)
                    }
                    q.prevKey[l] = C;
                    q.nextKey[l] = m
                }
                var E = (this.currentTime - C.time) / (m.time - C.time);
                var r = C[l];
                var k = m[l];
                if (E < 0) {
                    E = 0
                }
                if (E > 1) {
                    E = 1
                }
                if (l === "pos") {
                    if (this.interpolationType === THREE.AnimationHandler.LINEAR) {
                        a.x = r[0] + (k[0] - r[0]) * E;
                        a.y = r[1] + (k[1] - r[1]) * E;
                        a.z = r[2] + (k[2] - r[2]) * E;
                        var s = this.weight / (this.weight + n.positionWeight);
                        D.position.lerp(a, s);
                        n.positionWeight += this.weight
                    } else {
                        if (this.interpolationType === THREE.AnimationHandler.CATMULLROM || this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD) {
                            d[0] = this.getPrevKeyWith("pos", u, C.index - 1)["pos"];
                            d[1] = r;
                            d[2] = k;
                            d[3] = this.getNextKeyWith("pos", u, m.index + 1)["pos"];
                            E = E * 0.33 + 0.33;
                            var o = e(d, E);
                            var s = this.weight / (this.weight + n.positionWeight);
                            n.positionWeight += this.weight;
                            var i = D.position;
                            i.x = i.x + (o[0] - i.x) * s;
                            i.y = i.y + (o[1] - i.y) * s;
                            i.z = i.z + (o[2] - i.z) * s;
                            if (this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD) {
                                var B = e(d, E * 1.01);
                                f.set(B[0], B[1], B[2]);
                                f.sub(i);
                                f.y = 0;
                                f.normalize();
                                var v = Math.atan2(f.x, f.z);
                                D.rotation.set(0, v, 0)
                            }
                        }
                    }
                } else {
                    if (l === "rot") {
                        THREE.Quaternion.slerp(r, k, c, E);
                        if (n.quaternionWeight === 0) {
                            D.quaternion.copy(c);
                            n.quaternionWeight = this.weight
                        } else {
                            var s = this.weight / (this.weight + n.quaternionWeight);
                            THREE.Quaternion.slerp(D.quaternion, c, D.quaternion, s);
                            n.quaternionWeight += this.weight
                        }
                    } else {
                        if (l === "scl") {
                            a.x = r[0] + (k[0] - r[0]) * E;
                            a.y = r[1] + (k[1] - r[1]) * E;
                            a.z = r[2] + (k[2] - r[2]) * E;
                            var s = this.weight / (this.weight + n.scaleWeight);
                            D.scale.lerp(a, s);
                            n.scaleWeight += this.weight
                        }
                    }
                }
            }
        }
        return true
    }
})();
THREE.Animation.prototype.getNextKeyWith = function(c, b, a) {
    var d = this.data.hierarchy[b].keys;
    if (this.interpolationType === THREE.AnimationHandler.CATMULLROM || this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD) {
        a = a < d.length - 1 ? a : d.length - 1
    } else {
        a = a % d.length
    }
    for (; a < d.length; a++) {
        if (d[a][c] !== undefined) {
            return d[a]
        }
    }
    return this.data.hierarchy[b].keys[0]
};
THREE.Animation.prototype.getPrevKeyWith = function(c, b, a) {
    var d = this.data.hierarchy[b].keys;
    if (this.interpolationType === THREE.AnimationHandler.CATMULLROM || this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD) {
        a = a > 0 ? a : 0
    } else {
        a = a >= 0 ? a : a + d.length
    }
    for (; a >= 0; a--) {
        if (d[a][c] !== undefined) {
            return d[a]
        }
    }
    return this.data.hierarchy[b].keys[d.length - 1]
};
THREE.KeyFrameAnimation = function(e) {
    this.root = e.node;
    this.data = THREE.AnimationHandler.init(e);
    this.hierarchy = THREE.AnimationHandler.parse(this.root);
    this.currentTime = 0;
    this.timeScale = 0.001;
    this.isPlaying = false;
    this.isPaused = true;
    this.loop = true;
    for (var g = 0, c = this.hierarchy.length; g < c; g++) {
        var i = this.data.hierarchy[g].keys,
            a = this.data.hierarchy[g].sids,
            d = this.hierarchy[g];
        if (i.length && a) {
            for (var j = 0; j < a.length; j++) {
                var b = a[j],
                    f = this.getNextKeyWith(b, g, 0);
                if (f) {
                    f.apply(b)
                }
            }
            d.matrixAutoUpdate = false;
            this.data.hierarchy[g].node.updateMatrix();
            d.matrixWorldNeedsUpdate = true
        }
    }
};
THREE.KeyFrameAnimation.prototype.play = function(d) {
    this.currentTime = d !== undefined ? d : 0;
    if (this.isPlaying === false) {
        this.isPlaying = true;
        var c, a = this.hierarchy.length,
            b, f;
        for (c = 0; c < a; c++) {
            b = this.hierarchy[c];
            f = this.data.hierarchy[c];
            if (f.animationCache === undefined) {
                f.animationCache = {};
                f.animationCache.prevKey = null;
                f.animationCache.nextKey = null;
                f.animationCache.originalMatrix = b.matrix
            }
            var e = this.data.hierarchy[c].keys;
            if (e.length) {
                f.animationCache.prevKey = e[0];
                f.animationCache.nextKey = e[1];
                this.startTime = Math.min(e[0].time, this.startTime);
                this.endTime = Math.max(e[e.length - 1].time, this.endTime)
            }
        }
        this.update(0)
    }
    this.isPaused = false;
    THREE.AnimationHandler.play(this)
};
THREE.KeyFrameAnimation.prototype.stop = function() {
    this.isPlaying = false;
    this.isPaused = false;
    THREE.AnimationHandler.stop(this);
    for (var b = 0; b < this.data.hierarchy.length; b++) {
        var d = this.hierarchy[b];
        var c = this.data.hierarchy[b];
        if (c.animationCache !== undefined) {
            var a = c.animationCache.originalMatrix;
            a.copy(d.matrix);
            d.matrix = a;
            delete c.animationCache
        }
    }
};
THREE.KeyFrameAnimation.prototype.update = function(i) {
    if (this.isPlaying === false) {
        return
    }
    this.currentTime += i * this.timeScale;
    var d = this.data.length;
    if (this.loop === true && this.currentTime > d) {
        this.currentTime %= d
    }
    this.currentTime = Math.min(this.currentTime, d);
    for (var f = 0, b = this.hierarchy.length; f < b; f++) {
        var e = this.hierarchy[f];
        var c = this.data.hierarchy[f];
        var j = c.keys,
            a = c.animationCache;
        if (j.length) {
            var k = a.prevKey;
            var g = a.nextKey;
            if (g.time <= this.currentTime) {
                while (g.time < this.currentTime && g.index > k.index) {
                    k = g;
                    g = j[k.index + 1]
                }
                a.prevKey = k;
                a.nextKey = g
            }
            if (g.time >= this.currentTime) {
                k.interpolate(g, this.currentTime)
            } else {
                k.interpolate(g, g.time)
            }
            this.data.hierarchy[f].node.updateMatrix();
            e.matrixWorldNeedsUpdate = true
        }
    }
};
THREE.KeyFrameAnimation.prototype.getNextKeyWith = function(a, c, b) {
    var d = this.data.hierarchy[c].keys;
    b = b % d.length;
    for (; b < d.length; b++) {
        if (d[b].hasTarget(a)) {
            return d[b]
        }
    }
    return d[0]
};
THREE.KeyFrameAnimation.prototype.getPrevKeyWith = function(a, c, b) {
    var d = this.data.hierarchy[c].keys;
    b = b >= 0 ? b : b + d.length;
    for (; b >= 0; b--) {
        if (d[b].hasTarget(a)) {
            return d[b]
        }
    }
    return d[d.length - 1]
};
THREE.MorphAnimation = function(a) {
    this.mesh = a;
    this.frames = a.morphTargetInfluences.length;
    this.currentTime = 0;
    this.duration = 1000;
    this.loop = true;
    this.lastFrame = 0;
    this.currentFrame = 0;
    this.isPlaying = false
};
THREE.MorphAnimation.prototype = {
    constructor: THREE.MorphAnimation,
    play: function() {
        this.isPlaying = true
    },
    pause: function() {
        this.isPlaying = false
    },
    update: function(c) {
        if (this.isPlaying === false) {
            return
        }
        this.currentTime += c;
        if (this.loop === true && this.currentTime > this.duration) {
            this.currentTime %= this.duration
        }
        this.currentTime = Math.min(this.currentTime, this.duration);
        var a = this.duration / this.frames;
        var b = Math.floor(this.currentTime / a);
        if (b != this.currentFrame) {
            this.mesh.morphTargetInfluences[this.lastFrame] = 0;
            this.mesh.morphTargetInfluences[this.currentFrame] = 1;
            this.mesh.morphTargetInfluences[b] = 0;
            this.lastFrame = this.currentFrame;
            this.currentFrame = b
        }
        this.mesh.morphTargetInfluences[b] = (this.currentTime % a) / a;
        this.mesh.morphTargetInfluences[this.lastFrame] = 1 - this.mesh.morphTargetInfluences[b]
    }
};
THREE.BoxGeometry = function(a, i, e, b, h, d) {
    THREE.Geometry.call(this);
    this.type = "BoxGeometry";
    this.parameters = {
        width: a,
        height: i,
        depth: e,
        widthSegments: b,
        heightSegments: h,
        depthSegments: d
    };
    this.widthSegments = b || 1;
    this.heightSegments = h || 1;
    this.depthSegments = d || 1;
    var k = this;
    var j = a / 2;
    var g = i / 2;
    var c = e / 2;
    f("z", "y", -1, -1, e, i, j, 0);
    f("z", "y", 1, -1, e, i, -j, 1);
    f("x", "z", 1, 1, a, e, g, 2);
    f("x", "z", 1, -1, a, e, -g, 3);
    f("x", "y", 1, -1, a, i, c, 4);
    f("x", "y", -1, -1, a, i, -c, 5);

    function f(E, D, l, s, G, F, V, A) {
        var C, q, p, K = k.widthSegments,
            I = k.heightSegments,
            r = G / 2,
            o = F / 2,
            t = k.vertices.length;
        if ((E === "x" && D === "y") || (E === "y" && D === "x")) {
            C = "z"
        } else {
            if ((E === "x" && D === "z") || (E === "z" && D === "x")) {
                C = "y";
                I = k.depthSegments
            } else {
                if ((E === "z" && D === "y") || (E === "y" && D === "z")) {
                    C = "x";
                    K = k.depthSegments
                }
            }
        }
        var M = K + 1,
            n = I + 1,
            U = G / K,
            P = F / I,
            T = new THREE.Vector3();
        T[C] = V > 0 ? 1 : -1;
        for (p = 0; p < n; p++) {
            for (q = 0; q < M; q++) {
                var m = new THREE.Vector3();
                m[E] = (q * U - r) * l;
                m[D] = (p * P - o) * s;
                m[C] = V;
                k.vertices.push(m)
            }
        }
        for (p = 0; p < I; p++) {
            for (q = 0; q < K; q++) {
                var S = q + M * p;
                var R = q + M * (p + 1);
                var Q = (q + 1) + M * (p + 1);
                var O = (q + 1) + M * p;
                var N = new THREE.Vector2(q / K, 1 - p / I);
                var L = new THREE.Vector2(q / K, 1 - (p + 1) / I);
                var J = new THREE.Vector2((q + 1) / K, 1 - (p + 1) / I);
                var H = new THREE.Vector2((q + 1) / K, 1 - p / I);
                var B = new THREE.Face3(S + t, R + t, O + t);
                B.normal.copy(T);
                B.vertexNormals.push(T.clone(), T.clone(), T.clone());
                B.materialIndex = A;
                k.faces.push(B);
                k.faceVertexUvs[0].push([N, L, H]);
                B = new THREE.Face3(R + t, Q + t, O + t);
                B.normal.copy(T);
                B.vertexNormals.push(T.clone(), T.clone(), T.clone());
                B.materialIndex = A;
                k.faces.push(B);
                k.faceVertexUvs[0].push([L.clone(), J, H.clone()])
            }
        }
    }
    this.mergeVertices()
};
THREE.BoxGeometry.prototype = Object.create(THREE.Geometry.prototype);
THREE.BoxGeometry.prototype.constructor = THREE.BoxGeometry;
THREE.CircleGeometry = function(k, g, d, b) {
    THREE.Geometry.call(this);
    this.type = "CircleGeometry";
    this.parameters = {
        radius: k,
        segments: g,
        thetaStart: d,
        thetaLength: b
    };
    k = k || 50;
    g = g !== undefined ? Math.max(3, g) : 8;
    d = d !== undefined ? d : 0;
    b = b !== undefined ? b : Math.PI * 2;
    var f, e = [],
        a = new THREE.Vector3(),
        l = new THREE.Vector2(0.5, 0.5);
    this.vertices.push(a);
    e.push(l);
    for (f = 0; f <= g; f++) {
        var j = new THREE.Vector3();
        var h = d + f / g * b;
        j.x = k * Math.cos(h);
        j.y = k * Math.sin(h);
        this.vertices.push(j);
        e.push(new THREE.Vector2((j.x / k + 1) / 2, (j.y / k + 1) / 2))
    }
    var c = new THREE.Vector3(0, 0, 1);
    for (f = 1; f <= g; f++) {
        this.faces.push(new THREE.Face3(f, f + 1, 0, [c.clone(), c.clone(), c.clone()]));
        this.faceVertexUvs[0].push([e[f].clone(), e[f + 1].clone(), l.clone()])
    }
    this.computeFaceNormals();
    this.boundingSphere = new THREE.Sphere(new THREE.Vector3(), k)
};
THREE.CircleGeometry.prototype = Object.create(THREE.Geometry.prototype);
THREE.CircleGeometry.prototype.constructor = THREE.CircleGeometry;
THREE.CubeGeometry = function(c, a, f, e, d, b) {
    console.warn("THREE.CubeGeometry has been renamed to THREE.BoxGeometry.");
    return new THREE.BoxGeometry(c, a, f, e, d, b)
};
THREE.CylinderGeometry = function(l, N, C, e, A, K, g, D) {
    THREE.Geometry.call(this);
    this.type = "CylinderGeometry";
    this.parameters = {
        radiusTop: l,
        radiusBottom: N,
        height: C,
        radialSegments: e,
        heightSegments: A,
        openEnded: K,
        thetaStart: g,
        thetaLength: D
    };
    l = l !== undefined ? l : 20;
    N = N !== undefined ? N : 20;
    C = C !== undefined ? C : 100;
    e = e || 8;
    A = A || 1;
    K = K !== undefined ? K : false;
    g = g !== undefined ? g : 0;
    D = D !== undefined ? D : 2 * Math.PI;
    var E = C / 2;
    var q, p, h = [],
        r = [];
    for (p = 0; p <= A; p++) {
        var B = [];
        var M = [];
        var s = p / A;
        var f = s * (N - l) + l;
        for (q = 0; q <= e; q++) {
            var t = q / e;
            var I = new THREE.Vector3();
            I.x = f * Math.sin(t * D + g);
            I.y = -s * C + E;
            I.z = f * Math.cos(t * D + g);
            this.vertices.push(I);
            B.push(this.vertices.length - 1);
            M.push(new THREE.Vector2(t, 1 - s))
        }
        h.push(B);
        r.push(M)
    }
    var G = (N - l) / C;
    var n, k;
    for (q = 0; q < e; q++) {
        if (l !== 0) {
            n = this.vertices[h[0][q]].clone();
            k = this.vertices[h[0][q + 1]].clone()
        } else {
            n = this.vertices[h[1][q]].clone();
            k = this.vertices[h[1][q + 1]].clone()
        }
        n.setY(Math.sqrt(n.x * n.x + n.z * n.z) * G).normalize();
        k.setY(Math.sqrt(k.x * k.x + k.z * k.z) * G).normalize();
        for (p = 0; p < A; p++) {
            var d = h[p][q];
            var c = h[p + 1][q];
            var b = h[p + 1][q + 1];
            var a = h[p][q + 1];
            var o = n.clone();
            var m = n.clone();
            var j = k.clone();
            var i = k.clone();
            var L = r[p][q].clone();
            var J = r[p + 1][q].clone();
            var H = r[p + 1][q + 1].clone();
            var F = r[p][q + 1].clone();
            this.faces.push(new THREE.Face3(d, c, a, [o, m, i]));
            this.faceVertexUvs[0].push([L, J, F]);
            this.faces.push(new THREE.Face3(c, b, a, [m.clone(), j, i.clone()]));
            this.faceVertexUvs[0].push([J.clone(), H, F.clone()])
        }
    }
    if (K === false && l > 0) {
        this.vertices.push(new THREE.Vector3(0, E, 0));
        for (q = 0; q < e; q++) {
            var d = h[0][q];
            var c = h[0][q + 1];
            var b = this.vertices.length - 1;
            var o = new THREE.Vector3(0, 1, 0);
            var m = new THREE.Vector3(0, 1, 0);
            var j = new THREE.Vector3(0, 1, 0);
            var L = r[0][q].clone();
            var J = r[0][q + 1].clone();
            var H = new THREE.Vector2(J.x, 0);
            this.faces.push(new THREE.Face3(d, c, b, [o, m, j]));
            this.faceVertexUvs[0].push([L, J, H])
        }
    }
    if (K === false && N > 0) {
        this.vertices.push(new THREE.Vector3(0, -E, 0));
        for (q = 0; q < e; q++) {
            var d = h[A][q + 1];
            var c = h[A][q];
            var b = this.vertices.length - 1;
            var o = new THREE.Vector3(0, -1, 0);
            var m = new THREE.Vector3(0, -1, 0);
            var j = new THREE.Vector3(0, -1, 0);
            var L = r[A][q + 1].clone();
            var J = r[A][q].clone();
            var H = new THREE.Vector2(J.x, 1);
            this.faces.push(new THREE.Face3(d, c, b, [o, m, j]));
            this.faceVertexUvs[0].push([L, J, H])
        }
    }
    this.computeFaceNormals()
};
THREE.CylinderGeometry.prototype = Object.create(THREE.Geometry.prototype);
THREE.CylinderGeometry.prototype.constructor = THREE.CylinderGeometry;
THREE.ExtrudeGeometry = function(a, b) {
    if (typeof(a) === "undefined") {
        a = [];
        return
    }
    THREE.Geometry.call(this);
    this.type = "ExtrudeGeometry";
    a = a instanceof Array ? a : [a];
    this.addShapeList(a, b);
    this.computeFaceNormals()
};
THREE.ExtrudeGeometry.prototype = Object.create(THREE.Geometry.prototype);
THREE.ExtrudeGeometry.prototype.constructor = THREE.ExtrudeGeometry;
THREE.ExtrudeGeometry.prototype.addShapeList = function(b, d) {
    var a = b.length;
    for (var e = 0; e < a; e++) {
        var c = b[e];
        this.addShape(c, d)
    }
};
THREE.ExtrudeGeometry.prototype.addShape = function(F, O) {
    var g = O.amount !== undefined ? O.amount : 100;
    var f = O.bevelThickness !== undefined ? O.bevelThickness : 6;
    var P = O.bevelSize !== undefined ? O.bevelSize : f - 2;
    var C = O.bevelSegments !== undefined ? O.bevelSegments : 3;
    var a = O.bevelEnabled !== undefined ? O.bevelEnabled : true;
    var N = O.curveSegments !== undefined ? O.curveSegments : 12;
    var X = O.steps !== undefined ? O.steps : 1;
    var r = O.extrudePath;
    var T, u = false;
    var ak = O.material;
    var o = O.extrudeMaterial;
    var E = O.UVGenerator !== undefined ? O.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;
    var B, aa, ad, at;
    if (r) {
        T = r.getSpacedPoints(X);
        u = true;
        a = false;
        B = O.frames !== undefined ? O.frames : new THREE.TubeGeometry.FrenetFrames(r, X, false);
        aa = new THREE.Vector3();
        ad = new THREE.Vector3();
        at = new THREE.Vector3()
    }
    if (!a) {
        C = 0;
        f = 0;
        P = 0
    }
    var aw, aq, ar;
    var Y = this;
    var L = [];
    var V = this.vertices.length;
    var D = F.extractPoints(N);
    var d = D.shape;
    var J = D.holes;
    var ag = !THREE.Shape.Utils.isClockWise(d);
    if (ag) {
        d = d.reverse();
        for (aq = 0, ar = J.length; aq < ar; aq++) {
            aw = J[aq];
            if (THREE.Shape.Utils.isClockWise(aw)) {
                J[aq] = aw.reverse()
            }
        }
        ag = false
    }
    var q = THREE.Shape.Utils.triangulateShape(d, J);
    var aj = d;
    for (aq = 0, ar = J.length; aq < ar; aq++) {
        aw = J[aq];
        d = d.concat(aw)
    }

    function Q(i, h, b) {
        if (!h) {
            return h.clone().multiplyScalar(b).add(i)
        }
    }
    var av, ah, ae, Z, A, ai = d.length,
        p, n = q.length,
        W, c = aj.length;
    var U = 180 / Math.PI;

    function H(j, az, aA) {
        var aB = 1e-10;
        var aG, aE, aH = 1;
        var ay = j.x - az.x,
            ax = j.y - az.y;
        var aJ = aA.x - j.x,
            aI = aA.y - j.y;
        var v = (ay * ay + ax * ax);
        var aF = (ay * aI - ax * aJ);
        if (Math.abs(aF) > aB) {
            var aC = Math.sqrt(v);
            var b = Math.sqrt(aJ * aJ + aI * aI);
            var t = (az.x - ax / aC);
            var s = (az.y + ay / aC);
            var i = (aA.x - aI / b);
            var h = (aA.y + aJ / b);
            var aK = ((i - t) * aI - (h - s) * aJ) / (ay * aI - ax * aJ);
            aG = (t + ay * aK - j.x);
            aE = (s + ax * aK - j.y);
            var aD = (aG * aG + aE * aE);
            if (aD <= 2) {
                return new THREE.Vector2(aG, aE)
            } else {
                aH = Math.sqrt(aD / 2)
            }
        } else {
            var k = false;
            if (ay > aB) {
                if (aJ > aB) {
                    k = true
                }
            } else {
                if (ay < -aB) {
                    if (aJ < -aB) {
                        k = true
                    }
                } else {
                    if (Math.sign(ax) == Math.sign(aI)) {
                        k = true
                    }
                }
            }
            if (k) {
                aG = -ax;
                aE = ay;
                aH = Math.sqrt(v)
            } else {
                aG = ay;
                aE = ax;
                aH = Math.sqrt(v / 2)
            }
        }
        return new THREE.Vector2(aG / aH, aE / aH)
    }
    var an = [];
    for (var ap = 0, S = aj.length, am = S - 1, al = ap + 1; ap < S; ap++, am++, al++) {
        if (am === S) {
            am = 0
        }
        if (al === S) {
            al = 0
        }
        var K = aj[ap];
        var I = aj[am];
        var G = aj[al];
        an[ap] = H(aj[ap], aj[am], aj[al])
    }
    var R = [],
        ac, e = an.concat();
    for (aq = 0, ar = J.length; aq < ar; aq++) {
        aw = J[aq];
        ac = [];
        for (ap = 0, S = aw.length, am = S - 1, al = ap + 1; ap < S; ap++, am++, al++) {
            if (am === S) {
                am = 0
            }
            if (al === S) {
                al = 0
            }
            ac[ap] = H(aw[ap], aw[am], aw[al])
        }
        R.push(ac);
        e = e.concat(ac)
    }
    for (av = 0; av < C; av++) {
        ae = av / C;
        Z = f * (1 - ae);
        ah = P * (Math.sin(ae * Math.PI / 2));
        for (ap = 0, S = aj.length; ap < S; ap++) {
            A = Q(aj[ap], an[ap], ah);
            ab(A.x, A.y, -Z)
        }
        for (aq = 0, ar = J.length; aq < ar; aq++) {
            aw = J[aq];
            ac = R[aq];
            for (ap = 0, S = aw.length; ap < S; ap++) {
                A = Q(aw[ap], ac[ap], ah);
                ab(A.x, A.y, -Z)
            }
        }
    }
    ah = P;
    for (ap = 0; ap < ai; ap++) {
        A = a ? Q(d[ap], e[ap], ah) : d[ap];
        if (!u) {
            ab(A.x, A.y, 0)
        } else {
            ad.copy(B.normals[0]).multiplyScalar(A.x);
            aa.copy(B.binormals[0]).multiplyScalar(A.y);
            at.copy(T[0]).add(ad).add(aa);
            ab(at.x, at.y, at.z)
        }
    }
    var af;
    for (af = 1; af <= X; af++) {
        for (ap = 0; ap < ai; ap++) {
            A = a ? Q(d[ap], e[ap], ah) : d[ap];
            if (!u) {
                ab(A.x, A.y, g / X * af)
            } else {
                ad.copy(B.normals[af]).multiplyScalar(A.x);
                aa.copy(B.binormals[af]).multiplyScalar(A.y);
                at.copy(T[af]).add(ad).add(aa);
                ab(at.x, at.y, at.z)
            }
        }
    }
    for (av = C - 1; av >= 0; av--) {
        ae = av / C;
        Z = f * (1 - ae);
        ah = P * Math.sin(ae * Math.PI / 2);
        for (ap = 0, S = aj.length; ap < S; ap++) {
            A = Q(aj[ap], an[ap], ah);
            ab(A.x, A.y, g + Z)
        }
        for (aq = 0, ar = J.length; aq < ar; aq++) {
            aw = J[aq];
            ac = R[aq];
            for (ap = 0, S = aw.length; ap < S; ap++) {
                A = Q(aw[ap], ac[ap], ah);
                if (!u) {
                    ab(A.x, A.y, g + Z)
                } else {
                    ab(A.x, A.y + T[X - 1].y, T[X - 1].x + Z)
                }
            }
        }
    }
    M();
    au();

    function M() {
        if (a) {
            var b = 0;
            var h = ai * b;
            for (ap = 0; ap < n; ap++) {
                p = q[ap];
                m(p[2] + h, p[1] + h, p[0] + h)
            }
            b = X + C * 2;
            h = ai * b;
            for (ap = 0; ap < n; ap++) {
                p = q[ap];
                m(p[0] + h, p[1] + h, p[2] + h)
            }
        } else {
            for (ap = 0; ap < n; ap++) {
                p = q[ap];
                m(p[2], p[1], p[0])
            }
            for (ap = 0; ap < n; ap++) {
                p = q[ap];
                m(p[0] + ai * X, p[1] + ai * X, p[2] + ai * X)
            }
        }
    }

    function au() {
        var b = 0;
        ao(aj, b);
        b += aj.length;
        for (aq = 0, ar = J.length; aq < ar; aq++) {
            aw = J[aq];
            ao(aw, b);
            b += aw.length
        }
    }

    function ao(az, h) {
        var ax, v;
        ap = az.length;
        while (--ap >= 0) {
            ax = ap;
            v = ap - 1;
            if (v < 0) {
                v = az.length - 1
            }
            var aE = 0,
                i = X + C * 2;
            for (aE = 0; aE < i; aE++) {
                var ay = ai * aE;
                var t = ai * (aE + 1);
                var aD = h + ax + ay,
                    aC = h + v + ay,
                    aB = h + v + t,
                    aA = h + ax + t;
                l(aD, aC, aB, aA, az, aE, i, ax, v)
            }
        }
    }

    function ab(b, i, h) {
        Y.vertices.push(new THREE.Vector3(b, i, h))
    }

    function m(i, h, k) {
        i += V;
        h += V;
        k += V;
        Y.faces.push(new THREE.Face3(i, h, k, null, null, ak));
        var j = E.generateTopUV(Y, i, h, k);
        Y.faceVertexUvs[0].push(j)
    }

    function l(ay, ax, t, s, h, j, az, v, k) {
        ay += V;
        ax += V;
        t += V;
        s += V;
        Y.faces.push(new THREE.Face3(ay, ax, s, null, null, o));
        Y.faces.push(new THREE.Face3(ax, t, s, null, null, o));
        var i = E.generateSideWallUV(Y, ay, ax, t, s);
        Y.faceVertexUvs[0].push([i[0], i[1], i[3]]);
        Y.faceVertexUvs[0].push([i[1], i[2], i[3]])
    }
};
THREE.ExtrudeGeometry.WorldUVGenerator = {
    generateTopUV: function(j, i, h, g) {
        var f = j.vertices;
        var e = f[i];
        var d = f[h];
        var k = f[g];
        return [new THREE.Vector2(e.x, e.y), new THREE.Vector2(d.x, d.y), new THREE.Vector2(k.x, k.y)]
    },
    generateSideWallUV: function(h, n, m, l, k) {
        var e = h.vertices;
        var j = e[n];
        var i = e[m];
        var g = e[l];
        var f = e[k];
        if (Math.abs(j.y - i.y) < 0.01) {
            return [new THREE.Vector2(j.x, 1 - j.z), new THREE.Vector2(i.x, 1 - i.z), new THREE.Vector2(g.x, 1 - g.z), new THREE.Vector2(f.x, 1 - f.z)]
        } else {
            return [new THREE.Vector2(j.y, 1 - j.z), new THREE.Vector2(i.y, 1 - i.z), new THREE.Vector2(g.y, 1 - g.z), new THREE.Vector2(f.y, 1 - f.z)]
        }
    }
};
THREE.ShapeGeometry = function(a, b) {
    THREE.Geometry.call(this);
    this.type = "ShapeGeometry";
    if (a instanceof Array === false) {
        a = [a]
    }
    this.addShapeList(a, b);
    this.computeFaceNormals()
};
THREE.ShapeGeometry.prototype = Object.create(THREE.Geometry.prototype);
THREE.ShapeGeometry.prototype.constructor = THREE.ShapeGeometry;
THREE.ShapeGeometry.prototype.addShapeList = function(b, c) {
    for (var d = 0, a = b.length; d < a; d++) {
        this.addShape(b[d], c)
    }
    return this
};
THREE.ShapeGeometry.prototype.addShape = function(e, h) {
    if (h === undefined) {
        h = {}
    }
    var d = h.curveSegments !== undefined ? h.curveSegments : 12;
    var q = h.material;
    var C = h.UVGenerator === undefined ? THREE.ExtrudeGeometry.WorldUVGenerator : h.UVGenerator;
    var B, A, r, u;
    var p = this.vertices.length;
    var E = e.extractPoints(d);
    var j = E.shape;
    var m = E.holes;
    var o = !THREE.Shape.Utils.isClockWise(j);
    if (o) {
        j = j.reverse();
        for (B = 0, A = m.length; B < A; B++) {
            r = m[B];
            if (THREE.Shape.Utils.isClockWise(r)) {
                m[B] = r.reverse()
            }
        }
        o = false
    }
    var f = THREE.Shape.Utils.triangulateShape(j, m);
    var v = j;
    for (B = 0, A = m.length; B < A; B++) {
        r = m[B];
        j = j.concat(r)
    }
    var D, k = j.length;
    var n, I = f.length;
    var g, t = v.length;
    for (B = 0; B < k; B++) {
        D = j[B];
        this.vertices.push(new THREE.Vector3(D.x, D.y, 0))
    }
    for (B = 0; B < I; B++) {
        n = f[B];
        var H = n[0] + p;
        var G = n[1] + p;
        var F = n[2] + p;
        this.faces.push(new THREE.Face3(H, G, F, null, null, q));
        this.faceVertexUvs[0].push(C.generateTopUV(this, H, G, F))
    }
};
THREE.LatheGeometry = function(t, q, n, p) {
    THREE.Geometry.call(this);
    this.type = "LatheGeometry";
    this.parameters = {
        points: t,
        segments: q,
        phiStart: n,
        phiLength: p
    };
    q = q || 12;
    n = n || 0;
    p = p || 2 * Math.PI;
    var E = 1 / (t.length - 1);
    var D = 1 / q;
    for (var u = 0, l = q; u <= l; u++) {
        var g = n + u * D * p;
        var G = Math.cos(g),
            m = Math.sin(g);
        for (var r = 0, A = t.length; r < A; r++) {
            var o = t[r];
            var C = new THREE.Vector3();
            C.x = G * o.x - m * o.y;
            C.y = m * o.x + G * o.y;
            C.z = o.z;
            this.vertices.push(C)
        }
    }
    var e = t.length;
    for (var u = 0, l = q; u < l; u++) {
        for (var r = 0, A = t.length - 1; r < A; r++) {
            var k = r + e * u;
            var I = k;
            var H = k + e;
            var G = k + 1 + e;
            var F = k + 1;
            var B = u * D;
            var h = r * E;
            var v = B + D;
            var f = h + E;
            this.faces.push(new THREE.Face3(I, H, F));
            this.faceVertexUvs[0].push([new THREE.Vector2(B, h), new THREE.Vector2(v, h), new THREE.Vector2(B, f)]);
            this.faces.push(new THREE.Face3(H, G, F));
            this.faceVertexUvs[0].push([new THREE.Vector2(v, h), new THREE.Vector2(v, f), new THREE.Vector2(B, f)])
        }
    }
    this.mergeVertices();
    this.computeFaceNormals();
    this.computeVertexNormals()
};
THREE.LatheGeometry.prototype = Object.create(THREE.Geometry.prototype);
THREE.LatheGeometry.prototype.constructor = THREE.LatheGeometry;
THREE.PlaneGeometry = function(b, a, d, c) {
    console.info("THREE.PlaneGeometry: Consider using THREE.PlaneBufferGeometry for lower memory footprint.");
    THREE.Geometry.call(this);
    this.type = "PlaneGeometry";
    this.parameters = {
        width: b,
        height: a,
        widthSegments: d,
        heightSegments: c
    };
    this.fromBufferGeometry(new THREE.PlaneBufferGeometry(b, a, d, c))
};
THREE.PlaneGeometry.prototype = Object.create(THREE.Geometry.prototype);
THREE.PlaneGeometry.prototype.constructor = THREE.PlaneGeometry;
THREE.PlaneBufferGeometry = function(t, r, f, q) {
    THREE.BufferGeometry.call(this);
    this.type = "PlaneBufferGeometry";
    this.parameters = {
        width: t,
        height: r,
        widthSegments: f,
        heightSegments: q
    };
    var j = t / 2;
    var h = r / 2;
    var A = f || 1;
    var v = q || 1;
    var B = A + 1;
    var e = v + 1;
    var H = t / A;
    var D = r / v;
    var m = new Float32Array(B * e * 3);
    var s = new Float32Array(B * e * 3);
    var p = new Float32Array(B * e * 2);
    var l = 0;
    var u = 0;
    for (var g = 0; g < e; g++) {
        var n = g * D - h;
        for (var i = 0; i < B; i++) {
            var o = i * H - j;
            m[l] = o;
            m[l + 1] = -n;
            s[l + 2] = 1;
            p[u] = i / A;
            p[u + 1] = 1 - (g / v);
            l += 3;
            u += 2
        }
    }
    l = 0;
    var k = new((m.length / 3) > 65535 ? Uint32Array : Uint16Array)(A * v * 6);
    for (var g = 0; g < v; g++) {
        for (var i = 0; i < A; i++) {
            var G = i + B * g;
            var F = i + B * (g + 1);
            var E = (i + 1) + B * (g + 1);
            var C = (i + 1) + B * g;
            k[l] = G;
            k[l + 1] = F;
            k[l + 2] = C;
            k[l + 3] = F;
            k[l + 4] = E;
            k[l + 5] = C;
            l += 6
        }
    }
    this.addAttribute("index", new THREE.BufferAttribute(k, 1));
    this.addAttribute("position", new THREE.BufferAttribute(m, 3));
    this.addAttribute("normal", new THREE.BufferAttribute(s, 3));
    this.addAttribute("uv", new THREE.BufferAttribute(p, 2))
};
THREE.PlaneBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);
THREE.PlaneBufferGeometry.prototype.constructor = THREE.PlaneBufferGeometry;
THREE.RingGeometry = function(k, r, g, s, h, p) {
    THREE.Geometry.call(this);
    this.type = "RingGeometry";
    this.parameters = {
        innerRadius: k,
        outerRadius: r,
        thetaSegments: g,
        phiSegments: s,
        thetaStart: h,
        thetaLength: p
    };
    k = k || 0;
    r = r || 50;
    h = h !== undefined ? h : 0;
    p = p !== undefined ? p : Math.PI * 2;
    g = g !== undefined ? Math.max(3, g) : 8;
    s = s !== undefined ? Math.max(1, s) : 8;
    var t, m, l = [],
        f = k,
        j = ((r - k) / s);
    for (t = 0; t < s + 1; t++) {
        for (m = 0; m < g + 1; m++) {
            var u = new THREE.Vector3();
            var c = h + m / g * p;
            u.x = f * Math.cos(c);
            u.y = f * Math.sin(c);
            this.vertices.push(u);
            l.push(new THREE.Vector2((u.x / r + 1) / 2, (u.y / r + 1) / 2))
        }
        f += j
    }
    var q = new THREE.Vector3(0, 0, 1);
    for (t = 0; t < s; t++) {
        var a = t * (g + 1);
        for (m = 0; m < g; m++) {
            var c = m + a;
            var e = c;
            var d = c + g + 1;
            var b = c + g + 2;
            this.faces.push(new THREE.Face3(e, d, b, [q.clone(), q.clone(), q.clone()]));
            this.faceVertexUvs[0].push([l[e].clone(), l[d].clone(), l[b].clone()]);
            e = c;
            d = c + g + 2;
            b = c + 1;
            this.faces.push(new THREE.Face3(e, d, b, [q.clone(), q.clone(), q.clone()]));
            this.faceVertexUvs[0].push([l[e].clone(), l[d].clone(), l[b].clone()])
        }
    }
    this.computeFaceNormals();
    this.boundingSphere = new THREE.Sphere(new THREE.Vector3(), f)
};
THREE.RingGeometry.prototype = Object.create(THREE.Geometry.prototype);
THREE.RingGeometry.prototype.constructor = THREE.RingGeometry;
THREE.SphereGeometry = function(f, e, r, t, B, g, A) {
    THREE.Geometry.call(this);
    this.type = "SphereGeometry";
    this.parameters = {
        radius: f,
        widthSegments: e,
        heightSegments: r,
        phiStart: t,
        phiLength: B,
        thetaStart: g,
        thetaLength: A
    };
    f = f || 50;
    e = Math.max(3, Math.floor(e) || 8);
    r = Math.max(2, Math.floor(r) || 6);
    t = t !== undefined ? t : 0;
    B = B !== undefined ? B : Math.PI * 2;
    g = g !== undefined ? g : 0;
    A = A !== undefined ? A : Math.PI;
    var n, m, h = [],
        o = [];
    for (m = 0; m <= r; m++) {
        var s = [];
        var H = [];
        for (n = 0; n <= e; n++) {
            var q = n / e;
            var p = m / r;
            var E = new THREE.Vector3();
            E.x = -f * Math.cos(t + q * B) * Math.sin(g + p * A);
            E.y = f * Math.cos(g + p * A);
            E.z = f * Math.sin(t + q * B) * Math.sin(g + p * A);
            this.vertices.push(E);
            s.push(this.vertices.length - 1);
            H.push(new THREE.Vector2(q, 1 - p))
        }
        h.push(s);
        o.push(H)
    }
    for (m = 0; m < r; m++) {
        for (n = 0; n < e; n++) {
            var d = h[m][n + 1];
            var c = h[m][n];
            var b = h[m + 1][n];
            var a = h[m + 1][n + 1];
            var l = this.vertices[d].clone().normalize();
            var k = this.vertices[c].clone().normalize();
            var j = this.vertices[b].clone().normalize();
            var i = this.vertices[a].clone().normalize();
            var G = o[m][n + 1].clone();
            var F = o[m][n].clone();
            var D = o[m + 1][n].clone();
            var C = o[m + 1][n + 1].clone();
            if (Math.abs(this.vertices[d].y) === f) {
                G.x = (G.x + F.x) / 2;
                this.faces.push(new THREE.Face3(d, b, a, [l, j, i]));
                this.faceVertexUvs[0].push([G, D, C])
            } else {
                if (Math.abs(this.vertices[b].y) === f) {
                    D.x = (D.x + C.x) / 2;
                    this.faces.push(new THREE.Face3(d, c, b, [l, k, j]));
                    this.faceVertexUvs[0].push([G, F, D])
                } else {
                    this.faces.push(new THREE.Face3(d, c, a, [l, k, i]));
                    this.faceVertexUvs[0].push([G, F, C]);
                    this.faces.push(new THREE.Face3(c, b, a, [k.clone(), j, i.clone()]));
                    this.faceVertexUvs[0].push([F.clone(), D, C.clone()])
                }
            }
        }
    }
    this.computeFaceNormals();
    this.boundingSphere = new THREE.Sphere(new THREE.Vector3(), f)
};
THREE.SphereGeometry.prototype = Object.create(THREE.Geometry.prototype);
THREE.SphereGeometry.prototype.constructor = THREE.SphereGeometry;
THREE.TextGeometry = function(b, a) {
    a = a || {};
    var c = THREE.FontUtils.generateShapes(b, a);
    a.amount = a.height !== undefined ? a.height : 50;
    if (a.bevelThickness === undefined) {
        a.bevelThickness = 10
    }
    if (a.bevelSize === undefined) {
        a.bevelSize = 8
    }
    if (a.bevelEnabled === undefined) {
        a.bevelEnabled = false
    }
    THREE.ExtrudeGeometry.call(this, c, a);
    this.type = "TextGeometry"
};
THREE.TextGeometry.prototype = Object.create(THREE.ExtrudeGeometry.prototype);
THREE.TextGeometry.prototype.constructor = THREE.TextGeometry;
THREE.TorusGeometry = function(g, f, e, l, h) {
    THREE.Geometry.call(this);
    this.type = "TorusGeometry";
    this.parameters = {
        radius: g,
        tube: f,
        radialSegments: e,
        tubularSegments: l,
        arc: h
    };
    g = g || 100;
    f = f || 40;
    e = e || 8;
    l = l || 6;
    h = h || Math.PI * 2;
    var C = new THREE.Vector3(),
        m = [],
        p = [];
    for (var q = 0; q <= e; q++) {
        for (var r = 0; r <= l; r++) {
            var o = r / l * h;
            var n = q / e * Math.PI * 2;
            C.x = g * Math.cos(o);
            C.y = g * Math.sin(o);
            var s = new THREE.Vector3();
            s.x = (g + f * Math.cos(n)) * Math.cos(o);
            s.y = (g + f * Math.cos(n)) * Math.sin(o);
            s.z = f * Math.sin(n);
            this.vertices.push(s);
            m.push(new THREE.Vector2(r / l, q / e));
            p.push(s.clone().sub(C).normalize())
        }
    }
    for (var q = 1; q <= e; q++) {
        for (var r = 1; r <= l; r++) {
            var D = (l + 1) * q + r - 1;
            var B = (l + 1) * (q - 1) + r - 1;
            var A = (l + 1) * (q - 1) + r;
            var t = (l + 1) * q + r;
            var k = new THREE.Face3(D, B, t, [p[D].clone(), p[B].clone(), p[t].clone()]);
            this.faces.push(k);
            this.faceVertexUvs[0].push([m[D].clone(), m[B].clone(), m[t].clone()]);
            k = new THREE.Face3(B, A, t, [p[B].clone(), p[A].clone(), p[t].clone()]);
            this.faces.push(k);
            this.faceVertexUvs[0].push([m[B].clone(), m[A].clone(), m[t].clone()])
        }
    }
    this.computeFaceNormals()
};
THREE.TorusGeometry.prototype = Object.create(THREE.Geometry.prototype);
THREE.TorusGeometry.prototype.constructor = THREE.TorusGeometry;
THREE.TorusKnotGeometry = function(s, r, m, B, F, E, f) {
    THREE.Geometry.call(this);
    this.type = "TorusKnotGeometry";
    this.parameters = {
        radius: s,
        tube: r,
        radialSegments: m,
        tubularSegments: B,
        p: F,
        q: E,
        heightScale: f
    };
    s = s || 100;
    r = r || 40;
    m = m || 64;
    B = B || 8;
    F = F || 2;
    E = E || 3;
    f = f || 1;
    var e = new Array(m);
    var o = new THREE.Vector3();
    var G = new THREE.Vector3();
    var T = new THREE.Vector3();
    for (var K = 0; K < m; ++K) {
        e[K] = new Array(B);
        var D = K / m * 2 * F * Math.PI;
        var h = L(D, E, F, s, f);
        var g = L(D + 0.01, E, F, s, f);
        o.subVectors(g, h);
        G.addVectors(g, h);
        T.crossVectors(o, G);
        G.crossVectors(T, o);
        T.normalize();
        G.normalize();
        for (var I = 0; I < B; ++I) {
            var C = I / B * 2 * Math.PI;
            var l = -r * Math.cos(C);
            var k = r * Math.sin(C);
            var t = new THREE.Vector3();
            t.x = h.x + l * G.x + k * T.x;
            t.y = h.y + l * G.y + k * T.y;
            t.z = h.z + l * G.z + k * T.z;
            e[K][I] = this.vertices.push(t) - 1
        }
    }
    for (var K = 0; K < m; ++K) {
        for (var I = 0; I < B; ++I) {
            var A = (K + 1) % m;
            var H = (I + 1) % B;
            var S = e[K][I];
            var R = e[A][I];
            var Q = e[A][H];
            var P = e[K][H];
            var O = new THREE.Vector2(K / m, I / B);
            var N = new THREE.Vector2((K + 1) / m, I / B);
            var M = new THREE.Vector2((K + 1) / m, (I + 1) / B);
            var J = new THREE.Vector2(K / m, (I + 1) / B);
            this.faces.push(new THREE.Face3(S, R, P));
            this.faceVertexUvs[0].push([O, N, J]);
            this.faces.push(new THREE.Face3(R, Q, P));
            this.faceVertexUvs[0].push([N.clone(), M, J.clone()])
        }
    }
    this.computeFaceNormals();
    this.computeVertexNormals();

    function L(U, p, v, q, a) {
        var j = Math.cos(U);
        var V = Math.sin(U);
        var i = p / v * U;
        var n = Math.cos(i);
        var d = q * (2 + n) * 0.5 * j;
        var c = q * (2 + n) * V * 0.5;
        var b = a * q * Math.sin(i) * 0.5;
        return new THREE.Vector3(d, c, b)
    }
};
THREE.TorusKnotGeometry.prototype = Object.create(THREE.Geometry.prototype);
THREE.TorusKnotGeometry.prototype.constructor = THREE.TorusKnotGeometry;
THREE.TubeGeometry = function(N, h, M, H, L, Y) {
    THREE.Geometry.call(this);
    this.type = "TubeGeometry";
    this.parameters = {
        path: N,
        segments: h,
        radius: M,
        radialSegments: H,
        closed: L
    };
    h = h || 64;
    M = M || 1;
    H = H || 8;
    L = L || false;
    Y = Y || THREE.TubeGeometry.NoTaper;
    var J = [];
    var A = this,
        E, K, B, e = h + 1,
        F, D, C, R, Q, P, I, G, O, o, n, t, f = new THREE.Vector3(),
        U, S, s, g, ac, ab, aa, Z, X, W, V, T;
    var p = new THREE.TubeGeometry.FrenetFrames(N, h, L),
        q = p.tangents,
        m = p.normals,
        l = p.binormals;
    this.tangents = q;
    this.normals = m;
    this.binormals = l;

    function k(a, c, b) {
        return A.vertices.push(new THREE.Vector3(a, c, b)) - 1
    }
    for (U = 0; U < e; U++) {
        J[U] = [];
        I = U / (e - 1);
        t = N.getPointAt(I);
        E = q[U];
        K = m[U];
        B = l[U];
        O = M * Y(I);
        for (S = 0; S < H; S++) {
            G = S / H * 2 * Math.PI;
            o = -O * Math.cos(G);
            n = O * Math.sin(G);
            f.copy(t);
            f.x += o * K.x + n * B.x;
            f.y += o * K.y + n * B.y;
            f.z += o * K.z + n * B.z;
            J[U][S] = k(f.x, f.y, f.z)
        }
    }
    for (U = 0; U < h; U++) {
        for (S = 0; S < H; S++) {
            s = (L) ? (U + 1) % h : U + 1;
            g = (S + 1) % H;
            ac = J[U][S];
            ab = J[s][S];
            aa = J[s][g];
            Z = J[U][g];
            X = new THREE.Vector2(U / h, S / H);
            W = new THREE.Vector2((U + 1) / h, S / H);
            V = new THREE.Vector2((U + 1) / h, (S + 1) / H);
            T = new THREE.Vector2(U / h, (S + 1) / H);
            this.faces.push(new THREE.Face3(ac, ab, Z));
            this.faceVertexUvs[0].push([X, W, T]);
            this.faces.push(new THREE.Face3(ab, aa, Z));
            this.faceVertexUvs[0].push([W.clone(), V, T.clone()])
        }
    }
    this.computeFaceNormals();
    this.computeVertexNormals()
};
THREE.TubeGeometry.prototype = Object.create(THREE.Geometry.prototype);
THREE.TubeGeometry.prototype.constructor = THREE.TubeGeometry;
THREE.TubeGeometry.NoTaper = function(a) {
    return 1
};
THREE.TubeGeometry.SinusoidalTaper = function(a) {
    return Math.sin(Math.PI * a)
};
THREE.TubeGeometry.FrenetFrames = function(m, p, c) {
    var f = new THREE.Vector3(),
        B = new THREE.Vector3(),
        n = new THREE.Vector3(),
        o = [],
        l = [],
        d = [],
        k = new THREE.Vector3(),
        r = new THREE.Matrix4(),
        b = p + 1,
        e, C = 0.0001,
        a, A, t, s, q, j, g;
    this.tangents = o;
    this.normals = l;
    this.binormals = d;
    for (q = 0; q < b; q++) {
        j = q / (b - 1);
        o[q] = m.getTangentAt(j);
        o[q].normalize()
    }
    h();

    function h() {
        l[0] = new THREE.Vector3();
        d[0] = new THREE.Vector3();
        a = Number.MAX_VALUE;
        A = Math.abs(o[0].x);
        t = Math.abs(o[0].y);
        s = Math.abs(o[0].z);
        if (A <= a) {
            a = A;
            B.set(1, 0, 0)
        }
        if (t <= a) {
            a = t;
            B.set(0, 1, 0)
        }
        if (s <= a) {
            B.set(0, 0, 1)
        }
        k.crossVectors(o[0], B).normalize();
        l[0].crossVectors(o[0], k);
        d[0].crossVectors(o[0], l[0])
    }
    for (q = 1; q < b; q++) {
        l[q] = l[q - 1].clone();
        d[q] = d[q - 1].clone();
        k.crossVectors(o[q - 1], o[q]);
        if (k.length() > C) {
            k.normalize();
            e = Math.acos(THREE.Math.clamp(o[q - 1].dot(o[q]), -1, 1));
            l[q].applyMatrix4(r.makeRotationAxis(k, e))
        }
        d[q].crossVectors(o[q], l[q])
    }
    if (c) {
        e = Math.acos(THREE.Math.clamp(l[0].dot(l[b - 1]), -1, 1));
        e /= (b - 1);
        if (o[0].dot(k.crossVectors(l[0], l[b - 1])) > 0) {
            e = -e
        }
        for (q = 1; q < b; q++) {
            l[q].applyMatrix4(r.makeRotationAxis(o[q], e * q));
            d[q].crossVectors(o[q], l[q])
        }
    }
};
THREE.PolyhedronGeometry = function(n, m, k, I) {
    THREE.Geometry.call(this);
    this.type = "PolyhedronGeometry";
    this.parameters = {
        vertices: n,
        indices: m,
        radius: k,
        detail: I
    };
    k = k || 1;
    I = I || 0;
    var o = this;
    for (var D = 0, A = n.length; D < A; D += 3) {
        e(new THREE.Vector3(n[D], n[D + 1], n[D + 2]))
    }
    var u = [],
        t = this.vertices;
    var c = [];
    for (var D = 0, B = 0, A = m.length; D < A; D += 3, B++) {
        var g = t[m[D]];
        var f = t[m[D + 1]];
        var b = t[m[D + 2]];
        c[B] = new THREE.Face3(g.index, f.index, b.index, [g.clone(), f.clone(), b.clone()])
    }
    var s = new THREE.Vector3();
    for (var D = 0, A = c.length; D < A; D++) {
        q(c[D], I)
    }
    for (var D = 0, A = this.faceVertexUvs[0].length; D < A; D++) {
        var r = this.faceVertexUvs[0][D];
        var H = r[0].x;
        var G = r[1].x;
        var F = r[2].x;
        var C = Math.max(H, Math.max(G, F));
        var v = Math.min(H, Math.min(G, F));
        if (C > 0.9 && v < 0.1) {
            if (H < 0.2) {
                r[0].x += 1
            }
            if (G < 0.2) {
                r[1].x += 1
            }
            if (F < 0.2) {
                r[2].x += 1
            }
        }
    }
    for (var D = 0, A = this.vertices.length; D < A; D++) {
        this.vertices[D].multiplyScalar(k)
    }
    this.mergeVertices();
    this.computeFaceNormals();
    this.boundingSphere = new THREE.Sphere(new THREE.Vector3(), k);

    function e(i) {
        var p = i.normalize().clone();
        p.index = o.vertices.push(p) - 1;
        var l = E(i) / 2 / Math.PI + 0.5;
        var j = d(i) / Math.PI + 0.5;
        p.uv = new THREE.Vector2(l, 1 - j);
        return p
    }

    function h(J, p, l) {
        var j = new THREE.Face3(J.index, p.index, l.index, [J.clone(), p.clone(), l.clone()]);
        o.faces.push(j);
        s.copy(J).add(p).add(l).divideScalar(3);
        var i = E(s);
        o.faceVertexUvs[0].push([a(J.uv, J, i), a(p.uv, p, i), a(l.uv, l, i)])
    }

    function q(N, L) {
        var P = Math.pow(2, L);
        var T = Math.pow(4, L);
        var R = e(o.vertices[N.a]);
        var Q = e(o.vertices[N.b]);
        var O = e(o.vertices[N.c]);
        var S = [];
        for (var K = 0; K <= P; K++) {
            S[K] = [];
            var M = e(R.clone().lerp(O, K / P));
            var l = e(Q.clone().lerp(O, K / P));
            var U = P - K;
            for (var J = 0; J <= U; J++) {
                if (J == 0 && K == P) {
                    S[K][J] = M
                } else {
                    S[K][J] = e(M.clone().lerp(l, J / U))
                }
            }
        }
        for (var K = 0; K < P; K++) {
            for (var J = 0; J < 2 * (P - K) - 1; J++) {
                var p = Math.floor(J / 2);
                if (J % 2 == 0) {
                    h(S[K][p + 1], S[K + 1][p], S[K][p])
                } else {
                    h(S[K][p + 1], S[K + 1][p + 1], S[K + 1][p])
                }
            }
        }
    }

    function E(i) {
        return Math.atan2(i.z, -i.x)
    }

    function d(i) {
        return Math.atan2(-i.y, Math.sqrt((i.x * i.x) + (i.z * i.z)))
    }

    function a(j, i, l) {
        if ((l < 0) && (j.x === 1)) {
            j = new THREE.Vector2(j.x - 1, j.y)
        }
        if ((i.x === 0) && (i.z === 0)) {
            j = new THREE.Vector2(l / 2 / Math.PI + 0.5, j.y)
        }
        return j.clone()
    }
};
THREE.PolyhedronGeometry.prototype = Object.create(THREE.Geometry.prototype);
THREE.PolyhedronGeometry.prototype.constructor = THREE.PolyhedronGeometry;
THREE.DodecahedronGeometry = function(a, d) {
    this.parameters = {
        radius: a,
        detail: d
    };
    var c = (1 + Math.sqrt(5)) / 2;
    var e = 1 / c;
    var b = [-1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 0, -e, -c, 0, -e, c, 0, e, -c, 0, e, c, -e, -c, 0, -e, c, 0, e, -c, 0, e, c, 0, -c, 0, -e, c, 0, -e, -c, 0, e, c, 0, e];
    var f = [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9];
    THREE.PolyhedronGeometry.call(this, b, f, a, d)
};
THREE.DodecahedronGeometry.prototype = Object.create(THREE.Geometry.prototype);
THREE.DodecahedronGeometry.prototype.constructor = THREE.DodecahedronGeometry;
THREE.IcosahedronGeometry = function(a, d) {
    var c = (1 + Math.sqrt(5)) / 2;
    var b = [-1, c, 0, 1, c, 0, -1, -c, 0, 1, -c, 0, 0, -1, c, 0, 1, c, 0, -1, -c, 0, 1, -c, c, 0, -1, c, 0, 1, -c, 0, -1, -c, 0, 1];
    var e = [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1];
    THREE.PolyhedronGeometry.call(this, b, e, a, d);
    this.type = "IcosahedronGeometry";
    this.parameters = {
        radius: a,
        detail: d
    }
};
THREE.IcosahedronGeometry.prototype = Object.create(THREE.Geometry.prototype);
THREE.IcosahedronGeometry.prototype.constructor = THREE.IcosahedronGeometry;
THREE.OctahedronGeometry = function(a, c) {
    this.parameters = {
        radius: a,
        detail: c
    };
    var b = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1];
    var d = [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2];
    THREE.PolyhedronGeometry.call(this, b, d, a, c);
    this.type = "OctahedronGeometry";
    this.parameters = {
        radius: a,
        detail: c
    }
};
THREE.OctahedronGeometry.prototype = Object.create(THREE.Geometry.prototype);
THREE.OctahedronGeometry.prototype.constructor = THREE.OctahedronGeometry;
THREE.TetrahedronGeometry = function(a, c) {
    var b = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1];
    var d = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];
    THREE.PolyhedronGeometry.call(this, b, d, a, c);
    this.type = "TetrahedronGeometry";
    this.parameters = {
        radius: a,
        detail: c
    }
};
THREE.TetrahedronGeometry.prototype = Object.create(THREE.Geometry.prototype);
THREE.TetrahedronGeometry.prototype.constructor = THREE.TetrahedronGeometry;
THREE.ParametricGeometry = function(g, f, E) {
    THREE.Geometry.call(this);
    this.type = "ParametricGeometry";
    this.parameters = {
        func: g,
        slices: f,
        stacks: E
    };
    var I = this.vertices;
    var e = this.faces;
    var k = this.faceVertexUvs[0];
    var s, h, q, o;
    var m, l;
    var n = E + 1;
    var H = f + 1;
    for (s = 0; s <= E; s++) {
        l = s / E;
        for (q = 0; q <= f; q++) {
            m = q / f;
            o = g(m, l);
            I.push(o)
        }
    }
    var G, F, D, C;
    var B, A, t, r;
    for (s = 0; s < E; s++) {
        for (q = 0; q < f; q++) {
            G = s * H + q;
            F = s * H + q + 1;
            D = (s + 1) * H + q + 1;
            C = (s + 1) * H + q;
            B = new THREE.Vector2(q / f, s / E);
            A = new THREE.Vector2((q + 1) / f, s / E);
            t = new THREE.Vector2((q + 1) / f, (s + 1) / E);
            r = new THREE.Vector2(q / f, (s + 1) / E);
            e.push(new THREE.Face3(G, F, C));
            k.push([B, A, r]);
            e.push(new THREE.Face3(F, D, C));
            k.push([A.clone(), t, r.clone()])
        }
    }
    this.computeFaceNormals();
    this.computeVertexNormals()
};
THREE.ParametricGeometry.prototype = Object.create(THREE.Geometry.prototype);
THREE.ParametricGeometry.prototype.constructor = THREE.ParametricGeometry;
THREE.AxisHelper = function(c) {
    c = c || 1;
    var b = new Float32Array([0, 0, 0, c, 0, 0, 0, 0, 0, 0, c, 0, 0, 0, 0, 0, 0, c]);
    var a = new Float32Array([1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1]);
    var e = new THREE.BufferGeometry();
    e.addAttribute("position", new THREE.BufferAttribute(b, 3));
    e.addAttribute("color", new THREE.BufferAttribute(a, 3));
    var d = new THREE.LineBasicMaterial({
        vertexColors: THREE.VertexColors
    });
    THREE.Line.call(this, e, d, THREE.LinePieces)
};
THREE.AxisHelper.prototype = Object.create(THREE.Line.prototype);
THREE.AxisHelper.prototype.constructor = THREE.AxisHelper;
THREE.ArrowHelper = (function() {
    var a = new THREE.Geometry();
    a.vertices.push(new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 1, 0));
    var b = new THREE.CylinderGeometry(0, 0.5, 1, 5, 1);
    b.applyMatrix(new THREE.Matrix4().makeTranslation(0, -0.5, 0));
    return function(g, f, h, e, d, c) {
        THREE.Object3D.call(this);
        if (e === undefined) {
            e = 16776960
        }
        if (h === undefined) {
            h = 1
        }
        if (d === undefined) {
            d = 0.2 * h
        }
        if (c === undefined) {
            c = 0.2 * d
        }
        this.position.copy(f);
        this.line = new THREE.Line(a, new THREE.LineBasicMaterial({
            color: e
        }));
        this.line.matrixAutoUpdate = false;
        this.add(this.line);
        this.cone = new THREE.Mesh(b, new THREE.MeshBasicMaterial({
            color: e
        }));
        this.cone.matrixAutoUpdate = false;
        this.add(this.cone);
        this.setDirection(g);
        this.setLength(h, d, c)
    }
}());
THREE.ArrowHelper.prototype = Object.create(THREE.Object3D.prototype);
THREE.ArrowHelper.prototype.constructor = THREE.ArrowHelper;
THREE.ArrowHelper.prototype.setDirection = (function() {
    var a = new THREE.Vector3();
    var b;
    return function(c) {
        if (c.y > 0.99999) {
            this.quaternion.set(0, 0, 0, 1)
        } else {
            if (c.y < -0.99999) {
                this.quaternion.set(1, 0, 0, 0)
            } else {
                a.set(c.z, 0, -c.x).normalize();
                b = Math.acos(c.y);
                this.quaternion.setFromAxisAngle(a, b)
            }
        }
    }
}());
THREE.ArrowHelper.prototype.setLength = function(c, b, a) {
    if (b === undefined) {
        b = 0.2 * c
    }
    if (a === undefined) {
        a = 0.2 * b
    }
    this.line.scale.set(1, c - b, 1);
    this.line.updateMatrix();
    this.cone.scale.set(a, b, a);
    this.cone.position.y = c;
    this.cone.updateMatrix()
};
THREE.ArrowHelper.prototype.setColor = function(a) {
    this.line.material.color.set(a);
    this.cone.material.color.set(a)
};
THREE.BoxHelper = function(a) {
    var b = new THREE.BufferGeometry();
    b.addAttribute("position", new THREE.BufferAttribute(new Float32Array(72), 3));
    THREE.Line.call(this, b, new THREE.LineBasicMaterial({
        color: 16776960
    }), THREE.LinePieces);
    if (a !== undefined) {
        this.update(a)
    }
};
THREE.BoxHelper.prototype = Object.create(THREE.Line.prototype);
THREE.BoxHelper.prototype.constructor = THREE.BoxHelper;
THREE.BoxHelper.prototype.update = function(c) {
    var e = c.geometry;
    if (e.boundingBox === null) {
        e.computeBoundingBox()
    }
    var d = e.boundingBox.min;
    var a = e.boundingBox.max;
    var b = this.geometry.attributes.position.array;
    b[0] = a.x;
    b[1] = a.y;
    b[2] = a.z;
    b[3] = d.x;
    b[4] = a.y;
    b[5] = a.z;
    b[6] = d.x;
    b[7] = a.y;
    b[8] = a.z;
    b[9] = d.x;
    b[10] = d.y;
    b[11] = a.z;
    b[12] = d.x;
    b[13] = d.y;
    b[14] = a.z;
    b[15] = a.x;
    b[16] = d.y;
    b[17] = a.z;
    b[18] = a.x;
    b[19] = d.y;
    b[20] = a.z;
    b[21] = a.x;
    b[22] = a.y;
    b[23] = a.z;
    b[24] = a.x;
    b[25] = a.y;
    b[26] = d.z;
    b[27] = d.x;
    b[28] = a.y;
    b[29] = d.z;
    b[30] = d.x;
    b[31] = a.y;
    b[32] = d.z;
    b[33] = d.x;
    b[34] = d.y;
    b[35] = d.z;
    b[36] = d.x;
    b[37] = d.y;
    b[38] = d.z;
    b[39] = a.x;
    b[40] = d.y;
    b[41] = d.z;
    b[42] = a.x;
    b[43] = d.y;
    b[44] = d.z;
    b[45] = a.x;
    b[46] = a.y;
    b[47] = d.z;
    b[48] = a.x;
    b[49] = a.y;
    b[50] = a.z;
    b[51] = a.x;
    b[52] = a.y;
    b[53] = d.z;
    b[54] = d.x;
    b[55] = a.y;
    b[56] = a.z;
    b[57] = d.x;
    b[58] = a.y;
    b[59] = d.z;
    b[60] = d.x;
    b[61] = d.y;
    b[62] = a.z;
    b[63] = d.x;
    b[64] = d.y;
    b[65] = d.z;
    b[66] = a.x;
    b[67] = d.y;
    b[68] = a.z;
    b[69] = a.x;
    b[70] = d.y;
    b[71] = d.z;
    this.geometry.attributes.position.needsUpdate = true;
    this.geometry.computeBoundingSphere();
    this.matrix = c.matrixWorld;
    this.matrixAutoUpdate = false
};
THREE.BoundingBoxHelper = function(b, c) {
    var a = (c !== undefined) ? c : 8947848;
    this.object = b;
    this.box = new THREE.Box3();
    THREE.Mesh.call(this, new THREE.BoxGeometry(1, 1, 1), new THREE.MeshBasicMaterial({
        color: a,
        wireframe: true
    }))
};
THREE.BoundingBoxHelper.prototype = Object.create(THREE.Mesh.prototype);
THREE.BoundingBoxHelper.prototype.constructor = THREE.BoundingBoxHelper;
THREE.BoundingBoxHelper.prototype.update = function() {
    this.box.setFromObject(this.object);
    this.box.size(this.scale);
    this.box.center(this.position)
};
THREE.CameraHelper = function(e) {
    var h = new THREE.Geometry();
    var f = new THREE.LineBasicMaterial({
        color: 16777215,
        vertexColors: THREE.FaceColors
    });
    var g = {};
    var d = 16755200;
    var k = 16711680;
    var b = 43775;
    var i = 16777215;
    var c = 3355443;
    j("n1", "n2", d);
    j("n2", "n4", d);
    j("n4", "n3", d);
    j("n3", "n1", d);
    j("f1", "f2", d);
    j("f2", "f4", d);
    j("f4", "f3", d);
    j("f3", "f1", d);
    j("n1", "f1", d);
    j("n2", "f2", d);
    j("n3", "f3", d);
    j("n4", "f4", d);
    j("p", "n1", k);
    j("p", "n2", k);
    j("p", "n3", k);
    j("p", "n4", k);
    j("u1", "u2", b);
    j("u2", "u3", b);
    j("u3", "u1", b);
    j("c", "t", i);
    j("p", "c", c);
    j("cn1", "cn2", c);
    j("cn3", "cn4", c);
    j("cf1", "cf2", c);
    j("cf3", "cf4", c);

    function j(m, l, n) {
        a(m, n);
        a(l, n)
    }

    function a(m, l) {
        h.vertices.push(new THREE.Vector3());
        h.colors.push(new THREE.Color(l));
        if (g[m] === undefined) {
            g[m] = []
        }
        g[m].push(h.vertices.length - 1)
    }
    THREE.Line.call(this, h, f, THREE.LinePieces);
    this.camera = e;
    this.matrix = e.matrixWorld;
    this.matrixAutoUpdate = false;
    this.pointMap = g;
    this.update()
};
THREE.CameraHelper.prototype = Object.create(THREE.Line.prototype);
THREE.CameraHelper.prototype.constructor = THREE.CameraHelper;
THREE.CameraHelper.prototype.update = function() {
    var e, b;
    var a = new THREE.Vector3();
    var d = new THREE.Camera();
    var c = function(g, f, m, l) {
        a.set(f, m, l).unproject(d);
        var k = b[g];
        if (k !== undefined) {
            for (var j = 0, h = k.length; j < h; j++) {
                e.vertices[k[j]].copy(a)
            }
        }
    };
    return function() {
        e = this.geometry;
        b = this.pointMap;
        var f = 1,
            g = 1;
        d.projectionMatrix.copy(this.camera.projectionMatrix);
        c("c", 0, 0, -1);
        c("t", 0, 0, 1);
        c("n1", -f, -g, -1);
        c("n2", f, -g, -1);
        c("n3", -f, g, -1);
        c("n4", f, g, -1);
        c("f1", -f, -g, 1);
        c("f2", f, -g, 1);
        c("f3", -f, g, 1);
        c("f4", f, g, 1);
        c("u1", f * 0.7, g * 1.1, -1);
        c("u2", -f * 0.7, g * 1.1, -1);
        c("u3", 0, g * 2, -1);
        c("cf1", -f, 0, 1);
        c("cf2", f, 0, 1);
        c("cf3", 0, -g, 1);
        c("cf4", 0, g, 1);
        c("cn1", -f, 0, -1);
        c("cn2", f, 0, -1);
        c("cn3", 0, -g, -1);
        c("cn4", 0, g, -1);
        e.verticesNeedUpdate = true
    }
}();
THREE.DirectionalLightHelper = function(a, b) {
    THREE.Object3D.call(this);
    this.light = a;
    this.light.updateMatrixWorld();
    this.matrix = a.matrixWorld;
    this.matrixAutoUpdate = false;
    b = b || 1;
    var d = new THREE.Geometry();
    d.vertices.push(new THREE.Vector3(-b, b, 0), new THREE.Vector3(b, b, 0), new THREE.Vector3(b, -b, 0), new THREE.Vector3(-b, -b, 0), new THREE.Vector3(-b, b, 0));
    var c = new THREE.LineBasicMaterial({
        fog: false
    });
    c.color.copy(this.light.color).multiplyScalar(this.light.intensity);
    this.lightPlane = new THREE.Line(d, c);
    this.add(this.lightPlane);
    d = new THREE.Geometry();
    d.vertices.push(new THREE.Vector3(), new THREE.Vector3());
    c = new THREE.LineBasicMaterial({
        fog: false
    });
    c.color.copy(this.light.color).multiplyScalar(this.light.intensity);
    this.targetLine = new THREE.Line(d, c);
    this.add(this.targetLine);
    this.update()
};
THREE.DirectionalLightHelper.prototype = Object.create(THREE.Object3D.prototype);
THREE.DirectionalLightHelper.prototype.constructor = THREE.DirectionalLightHelper;
THREE.DirectionalLightHelper.prototype.dispose = function() {
    this.lightPlane.geometry.dispose();
    this.lightPlane.material.dispose();
    this.targetLine.geometry.dispose();
    this.targetLine.material.dispose()
};
THREE.DirectionalLightHelper.prototype.update = function() {
    var c = new THREE.Vector3();
    var b = new THREE.Vector3();
    var a = new THREE.Vector3();
    return function() {
        c.setFromMatrixPosition(this.light.matrixWorld);
        b.setFromMatrixPosition(this.light.target.matrixWorld);
        a.subVectors(b, c);
        this.lightPlane.lookAt(a);
        this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);
        this.targetLine.geometry.vertices[1].copy(a);
        this.targetLine.geometry.verticesNeedUpdate = true;
        this.targetLine.material.color.copy(this.lightPlane.material.color)
    }
}();
THREE.EdgesHelper = function(B, k) {
    var r = (k !== undefined) ? k : 16777215;
    var e = [0, 0],
        a = {};
    var q = function(i, h) {
        return i - h
    };
    var o = ["a", "b", "c"];
    var d = new THREE.BufferGeometry();
    var n = B.geometry.clone();
    n.mergeVertices();
    n.computeFaceNormals();
    var f = n.vertices;
    var b = n.faces;
    var c = 0;
    for (var u = 0, p = b.length; u < p; u++) {
        var m = b[u];
        for (var s = 0; s < 3; s++) {
            e[0] = m[o[s]];
            e[1] = m[o[(s + 1) % 3]];
            e.sort(q);
            var C = e.toString();
            if (a[C] === undefined) {
                a[C] = {
                    vert1: e[0],
                    vert2: e[1],
                    face1: u,
                    face2: undefined
                };
                c++
            } else {
                a[C].face2 = u
            }
        }
    }
    var t = new Float32Array(c * 2 * 3);
    var g = 0;
    for (var C in a) {
        var v = a[C];
        if (v.face2 === undefined || b[v.face1].normal.dot(b[v.face2].normal) < 0.9999) {
            var A = f[v.vert1];
            t[g++] = A.x;
            t[g++] = A.y;
            t[g++] = A.z;
            A = f[v.vert2];
            t[g++] = A.x;
            t[g++] = A.y;
            t[g++] = A.z
        }
    }
    d.addAttribute("position", new THREE.BufferAttribute(t, 3));
    THREE.Line.call(this, d, new THREE.LineBasicMaterial({
        color: r
    }), THREE.LinePieces);
    this.matrix = B.matrixWorld;
    this.matrixAutoUpdate = false
};
THREE.EdgesHelper.prototype = Object.create(THREE.Line.prototype);
THREE.EdgesHelper.prototype.constructor = THREE.EdgesHelper;
THREE.FaceNormalsHelper = function(e, k, c, j) {
    this.object = e;
    this.size = (k !== undefined) ? k : 1;
    var f = (c !== undefined) ? c : 16776960;
    var a = (j !== undefined) ? j : 1;
    var h = new THREE.Geometry();
    var b = this.object.geometry.faces;
    for (var g = 0, d = b.length; g < d; g++) {
        h.vertices.push(new THREE.Vector3(), new THREE.Vector3())
    }
    THREE.Line.call(this, h, new THREE.LineBasicMaterial({
        color: f,
        linewidth: a
    }), THREE.LinePieces);
    this.matrixAutoUpdate = false;
    this.normalMatrix = new THREE.Matrix3();
    this.update()
};
THREE.FaceNormalsHelper.prototype = Object.create(THREE.Line.prototype);
THREE.FaceNormalsHelper.prototype.constructor = THREE.FaceNormalsHelper;
THREE.FaceNormalsHelper.prototype.update = function() {
    var g = this.geometry.vertices;
    var e = this.object;
    var j = e.geometry.vertices;
    var b = e.geometry.faces;
    var a = e.matrixWorld;
    e.updateMatrixWorld(true);
    this.normalMatrix.getNormalMatrix(a);
    for (var f = 0, c = 0, d = b.length; f < d; f++, c += 2) {
        var h = b[f];
        g[c].copy(j[h.a]).add(j[h.b]).add(j[h.c]).divideScalar(3).applyMatrix4(a);
        g[c + 1].copy(h.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size).add(g[c])
    }
    this.geometry.verticesNeedUpdate = true;
    return this
};
THREE.GridHelper = function(c, e) {
    var f = new THREE.Geometry();
    var d = new THREE.LineBasicMaterial({
        vertexColors: THREE.VertexColors
    });
    this.color1 = new THREE.Color(4473924);
    this.color2 = new THREE.Color(8947848);
    for (var b = -c; b <= c; b += e) {
        f.vertices.push(new THREE.Vector3(-c, 0, b), new THREE.Vector3(c, 0, b), new THREE.Vector3(b, 0, -c), new THREE.Vector3(b, 0, c));
        var a = b === 0 ? this.color1 : this.color2;
        f.colors.push(a, a, a, a)
    }
    THREE.Line.call(this, f, d, THREE.LinePieces)
};
THREE.GridHelper.prototype = Object.create(THREE.Line.prototype);
THREE.GridHelper.prototype.constructor = THREE.GridHelper;
THREE.GridHelper.prototype.setColors = function(b, a) {
    this.color1.set(b);
    this.color2.set(a);
    this.geometry.colorsNeedUpdate = true
};
THREE.HemisphereLightHelper = function(a, h, g, e) {
    THREE.Object3D.call(this);
    this.light = a;
    this.light.updateMatrixWorld();
    this.matrix = a.matrixWorld;
    this.matrixAutoUpdate = false;
    this.colors = [new THREE.Color(), new THREE.Color()];
    var f = new THREE.SphereGeometry(h, 4, 2);
    f.applyMatrix(new THREE.Matrix4().makeRotationX(-Math.PI / 2));
    for (var c = 0, b = 8; c < b; c++) {
        f.faces[c].color = this.colors[c < 4 ? 0 : 1]
    }
    var d = new THREE.MeshBasicMaterial({
        vertexColors: THREE.FaceColors,
        wireframe: true
    });
    this.lightSphere = new THREE.Mesh(f, d);
    this.add(this.lightSphere);
    this.update()
};
THREE.HemisphereLightHelper.prototype = Object.create(THREE.Object3D.prototype);
THREE.HemisphereLightHelper.prototype.constructor = THREE.HemisphereLightHelper;
THREE.HemisphereLightHelper.prototype.dispose = function() {
    this.lightSphere.geometry.dispose();
    this.lightSphere.material.dispose()
};
THREE.HemisphereLightHelper.prototype.update = function() {
    var a = new THREE.Vector3();
    return function() {
        this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity);
        this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity);
        this.lightSphere.lookAt(a.setFromMatrixPosition(this.light.matrixWorld).negate());
        this.lightSphere.geometry.colorsNeedUpdate = true
    }
}();
THREE.PointLightHelper = function(a, d) {
    this.light = a;
    this.light.updateMatrixWorld();
    var c = new THREE.SphereGeometry(d, 4, 2);
    var b = new THREE.MeshBasicMaterial({
        wireframe: true,
        fog: false
    });
    b.color.copy(this.light.color).multiplyScalar(this.light.intensity);
    THREE.Mesh.call(this, c, b);
    this.matrix = this.light.matrixWorld;
    this.matrixAutoUpdate = false
};
THREE.PointLightHelper.prototype = Object.create(THREE.Mesh.prototype);
THREE.PointLightHelper.prototype.constructor = THREE.PointLightHelper;
THREE.PointLightHelper.prototype.dispose = function() {
    this.geometry.dispose();
    this.material.dispose()
};
THREE.PointLightHelper.prototype.update = function() {
    this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)
};
THREE.SkeletonHelper = function(a) {
    this.bones = this.getBoneList(a);
    var e = new THREE.Geometry();
    for (var b = 0; b < this.bones.length; b++) {
        var d = this.bones[b];
        if (d.parent instanceof THREE.Bone) {
            e.vertices.push(new THREE.Vector3());
            e.vertices.push(new THREE.Vector3());
            e.colors.push(new THREE.Color(0, 0, 1));
            e.colors.push(new THREE.Color(0, 1, 0))
        }
    }
    var c = new THREE.LineBasicMaterial({
        vertexColors: THREE.VertexColors,
        depthTest: false,
        depthWrite: false,
        transparent: true
    });
    THREE.Line.call(this, e, c, THREE.LinePieces);
    this.root = a;
    this.matrix = a.matrixWorld;
    this.matrixAutoUpdate = false;
    this.update()
};
THREE.SkeletonHelper.prototype = Object.create(THREE.Line.prototype);
THREE.SkeletonHelper.prototype.constructor = THREE.SkeletonHelper;
THREE.SkeletonHelper.prototype.getBoneList = function(a) {
    var c = [];
    if (a instanceof THREE.Bone) {
        c.push(a)
    }
    for (var b = 0; b < a.children.length; b++) {
        c.push.apply(c, this.getBoneList(a.children[b]))
    }
    return c
};
THREE.SkeletonHelper.prototype.update = function() {
    var f = this.geometry;
    var e = new THREE.Matrix4().getInverse(this.root.matrixWorld);
    var c = new THREE.Matrix4();
    var a = 0;
    for (var b = 0; b < this.bones.length; b++) {
        var d = this.bones[b];
        if (d.parent instanceof THREE.Bone) {
            c.multiplyMatrices(e, d.matrixWorld);
            f.vertices[a].setFromMatrixPosition(c);
            c.multiplyMatrices(e, d.parent.matrixWorld);
            f.vertices[a + 1].setFromMatrixPosition(c);
            a += 2
        }
    }
    f.verticesNeedUpdate = true;
    f.computeBoundingSphere()
};
THREE.SpotLightHelper = function(a) {
    THREE.Object3D.call(this);
    this.light = a;
    this.light.updateMatrixWorld();
    this.matrix = a.matrixWorld;
    this.matrixAutoUpdate = false;
    var c = new THREE.CylinderGeometry(0, 1, 1, 8, 1, true);
    c.applyMatrix(new THREE.Matrix4().makeTranslation(0, -0.5, 0));
    c.applyMatrix(new THREE.Matrix4().makeRotationX(-Math.PI / 2));
    var b = new THREE.MeshBasicMaterial({
        wireframe: true,
        fog: false
    });
    this.cone = new THREE.Mesh(c, b);
    this.add(this.cone);
    this.update()
};
THREE.SpotLightHelper.prototype = Object.create(THREE.Object3D.prototype);
THREE.SpotLightHelper.prototype.constructor = THREE.SpotLightHelper;
THREE.SpotLightHelper.prototype.dispose = function() {
    this.cone.geometry.dispose();
    this.cone.material.dispose()
};
THREE.SpotLightHelper.prototype.update = function() {
    var a = new THREE.Vector3();
    var b = new THREE.Vector3();
    return function() {
        var c = this.light.distance ? this.light.distance : 10000;
        var d = c * Math.tan(this.light.angle);
        this.cone.scale.set(d, d, c);
        a.setFromMatrixPosition(this.light.matrixWorld);
        b.setFromMatrixPosition(this.light.target.matrixWorld);
        this.cone.lookAt(b.sub(a));
        this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)
    }
}();
THREE.VertexNormalsHelper = function(e, q, c, p) {
    this.object = e;
    this.size = (q !== undefined) ? q : 1;
    var f = (c !== undefined) ? c : 16711680;
    var a = (p !== undefined) ? p : 1;
    var o = new THREE.Geometry();
    var m = e.geometry.vertices;
    var b = e.geometry.faces;
    for (var k = 0, d = b.length; k < d; k++) {
        var n = b[k];
        for (var g = 0, h = n.vertexNormals.length; g < h; g++) {
            o.vertices.push(new THREE.Vector3(), new THREE.Vector3())
        }
    }
    THREE.Line.call(this, o, new THREE.LineBasicMaterial({
        color: f,
        linewidth: a
    }), THREE.LinePieces);
    this.matrixAutoUpdate = false;
    this.normalMatrix = new THREE.Matrix3();
    this.update()
};
THREE.VertexNormalsHelper.prototype = Object.create(THREE.Line.prototype);
THREE.VertexNormalsHelper.prototype.constructor = THREE.VertexNormalsHelper;
THREE.VertexNormalsHelper.prototype.update = (function(a) {
    var b = new THREE.Vector3();
    return function(e) {
        var t = ["a", "b", "c", "d"];
        this.object.updateMatrixWorld(true);
        this.normalMatrix.getNormalMatrix(this.object.matrixWorld);
        var o = this.geometry.vertices;
        var r = this.object.geometry.vertices;
        var c = this.object.geometry.faces;
        var p = this.object.matrixWorld;
        var s = 0;
        for (var h = 0, d = c.length; h < d; h++) {
            var q = c[h];
            for (var f = 0, g = q.vertexNormals.length; f < g; f++) {
                var n = q[t[f]];
                var k = r[n];
                var m = q.vertexNormals[f];
                o[s].copy(k).applyMatrix4(p);
                b.copy(m).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size);
                b.add(o[s]);
                s = s + 1;
                o[s].copy(b);
                s = s + 1
            }
        }
        this.geometry.verticesNeedUpdate = true;
        return this
    }
}());
THREE.VertexTangentsHelper = function(e, q, c, p) {
    this.object = e;
    this.size = (q !== undefined) ? q : 1;
    var f = (c !== undefined) ? c : 255;
    var a = (p !== undefined) ? p : 1;
    var o = new THREE.Geometry();
    var m = e.geometry.vertices;
    var b = e.geometry.faces;
    for (var k = 0, d = b.length; k < d; k++) {
        var n = b[k];
        for (var g = 0, h = n.vertexTangents.length; g < h; g++) {
            o.vertices.push(new THREE.Vector3());
            o.vertices.push(new THREE.Vector3())
        }
    }
    THREE.Line.call(this, o, new THREE.LineBasicMaterial({
        color: f,
        linewidth: a
    }), THREE.LinePieces);
    this.matrixAutoUpdate = false;
    this.update()
};
THREE.VertexTangentsHelper.prototype = Object.create(THREE.Line.prototype);
THREE.VertexTangentsHelper.prototype.constructor = THREE.VertexTangentsHelper;
THREE.VertexTangentsHelper.prototype.update = (function(a) {
    var b = new THREE.Vector3();
    return function(e) {
        var t = ["a", "b", "c", "d"];
        this.object.updateMatrixWorld(true);
        var n = this.geometry.vertices;
        var q = this.object.geometry.vertices;
        var c = this.object.geometry.faces;
        var o = this.object.matrixWorld;
        var r = 0;
        for (var h = 0, d = c.length; h < d; h++) {
            var p = c[h];
            for (var f = 0, g = p.vertexTangents.length; f < g; f++) {
                var m = p[t[f]];
                var k = q[m];
                var s = p.vertexTangents[f];
                n[r].copy(k).applyMatrix4(o);
                b.copy(s).transformDirection(o).multiplyScalar(this.size);
                b.add(n[r]);
                r = r + 1;
                n[r].copy(b);
                r = r + 1
            }
        }
        this.geometry.verticesNeedUpdate = true;
        return this
    }
}());
THREE.WireframeHelper = function(K, r) {
    var F = (r !== undefined) ? r : 16777215;
    var k = [0, 0],
        a = {};
    var E = function(j, i) {
        return j - i
    };
    var B = ["a", "b", "c"];
    var f = new THREE.BufferGeometry();
    if (K.geometry instanceof THREE.Geometry) {
        var n = K.geometry.vertices;
        var b = K.geometry.faces;
        var c = 0;
        var d = new Uint32Array(6 * b.length);
        for (var I = 0, D = b.length; I < D; I++) {
            var t = b[I];
            for (var G = 0; G < 3; G++) {
                k[0] = t[B[G]];
                k[1] = t[B[(G + 1) % 3]];
                k.sort(E);
                var L = k.toString();
                if (a[L] === undefined) {
                    d[2 * c] = k[0];
                    d[2 * c + 1] = k[1];
                    a[L] = true;
                    c++
                }
            }
        }
        var H = new Float32Array(c * 2 * 3);
        for (var I = 0, D = c; I < D; I++) {
            for (var G = 0; G < 2; G++) {
                var J = n[d[2 * I + G]];
                var q = 6 * I + 3 * G;
                H[q + 0] = J.x;
                H[q + 1] = J.y;
                H[q + 2] = J.z
            }
        }
        f.addAttribute("position", new THREE.BufferAttribute(H, 3))
    } else {
        if (K.geometry instanceof THREE.BufferGeometry) {
            if (K.geometry.attributes.index !== undefined) {
                var n = K.geometry.attributes.position.array;
                var h = K.geometry.attributes.index.array;
                var v = K.geometry.drawcalls;
                var c = 0;
                if (v.length === 0) {
                    v = [{
                        count: h.length,
                        index: 0,
                        start: 0
                    }]
                }
                var d = new Uint32Array(2 * h.length);
                for (var C = 0, A = v.length; C < A; ++C) {
                    var e = v[C].start;
                    var p = v[C].count;
                    var q = v[C].index;
                    for (var I = e, u = e + p; I < u; I += 3) {
                        for (var G = 0; G < 3; G++) {
                            k[0] = q + h[I + G];
                            k[1] = q + h[I + (G + 1) % 3];
                            k.sort(E);
                            var L = k.toString();
                            if (a[L] === undefined) {
                                d[2 * c] = k[0];
                                d[2 * c + 1] = k[1];
                                a[L] = true;
                                c++
                            }
                        }
                    }
                }
                var H = new Float32Array(c * 2 * 3);
                for (var I = 0, D = c; I < D; I++) {
                    for (var G = 0; G < 2; G++) {
                        var q = 6 * I + 3 * G;
                        var g = 3 * d[2 * I + G];
                        H[q + 0] = n[g];
                        H[q + 1] = n[g + 1];
                        H[q + 2] = n[g + 2]
                    }
                }
                f.addAttribute("position", new THREE.BufferAttribute(H, 3))
            } else {
                var n = K.geometry.attributes.position.array;
                var c = n.length / 3;
                var s = c / 3;
                var H = new Float32Array(c * 2 * 3);
                for (var I = 0, D = s; I < D; I++) {
                    for (var G = 0; G < 3; G++) {
                        var q = 18 * I + 6 * G;
                        var m = 9 * I + 3 * G;
                        H[q + 0] = n[m];
                        H[q + 1] = n[m + 1];
                        H[q + 2] = n[m + 2];
                        var g = 9 * I + 3 * ((G + 1) % 3);
                        H[q + 3] = n[g];
                        H[q + 4] = n[g + 1];
                        H[q + 5] = n[g + 2]
                    }
                }
                f.addAttribute("position", new THREE.BufferAttribute(H, 3))
            }
        }
    }
    THREE.Line.call(this, f, new THREE.LineBasicMaterial({
        color: F
    }), THREE.LinePieces);
    this.matrix = K.matrixWorld;
    this.matrixAutoUpdate = false
};
THREE.WireframeHelper.prototype = Object.create(THREE.Line.prototype);
THREE.WireframeHelper.prototype.constructor = THREE.WireframeHelper;
THREE.ImmediateRenderObject = function() {
    THREE.Object3D.call(this);
    this.render = function(a) {}
};
THREE.ImmediateRenderObject.prototype = Object.create(THREE.Object3D.prototype);
THREE.ImmediateRenderObject.prototype.constructor = THREE.ImmediateRenderObject;
THREE.MorphBlendMesh = function(g, d) {
    THREE.Mesh.call(this, g, d);
    this.animationsMap = {};
    this.animationsList = [];
    var f = this.geometry.morphTargets.length;
    var b = "__default";
    var c = 0;
    var a = f - 1;
    var e = f / 1;
    this.createAnimation(b, c, a, e);
    this.setAnimationWeight(b, 1)
};
THREE.MorphBlendMesh.prototype = Object.create(THREE.Mesh.prototype);
THREE.MorphBlendMesh.prototype.constructor = THREE.MorphBlendMesh;
THREE.MorphBlendMesh.prototype.createAnimation = function(b, e, a, d) {
    var c = {
        startFrame: e,
        endFrame: a,
        length: a - e + 1,
        fps: d,
        duration: (a - e) / d,
        lastFrame: 0,
        currentFrame: 0,
        active: false,
        time: 0,
        direction: 1,
        weight: 1,
        directionBackwards: false,
        mirroredLoop: false
    };
    this.animationsMap[b] = c;
    this.animationsList.push(c)
};
THREE.MorphBlendMesh.prototype.autoCreateAnimations = function(c) {
    var j = /([a-z]+)_?(\d+)/;
    var b, g = {};
    var k = this.geometry;
    for (var d = 0, l = k.morphTargets.length; d < l; d++) {
        var m = k.morphTargets[d];
        var h = m.name.match(j);
        if (h && h.length > 1) {
            var a = h[1];
            var f = h[2];
            if (!g[a]) {
                g[a] = {
                    start: Infinity,
                    end: -Infinity
                }
            }
            var e = g[a];
            if (d < e.start) {
                e.start = d
            }
            if (d > e.end) {
                e.end = d
            }
            if (!b) {
                b = a
            }
        }
    }
    for (var a in g) {
        var e = g[a];
        this.createAnimation(a, e.start, e.end, c)
    }
    this.firstAnimation = b
};
THREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function(a) {
    var b = this.animationsMap[a];
    if (b) {
        b.direction = 1;
        b.directionBackwards = false
    }
};
THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function(a) {
    var b = this.animationsMap[a];
    if (b) {
        b.direction = -1;
        b.directionBackwards = true
    }
};
THREE.MorphBlendMesh.prototype.setAnimationFPS = function(a, c) {
    var b = this.animationsMap[a];
    if (b) {
        b.fps = c;
        b.duration = (b.end - b.start) / b.fps
    }
};
THREE.MorphBlendMesh.prototype.setAnimationDuration = function(a, c) {
    var b = this.animationsMap[a];
    if (b) {
        b.duration = c;
        b.fps = (b.end - b.start) / b.duration
    }
};
THREE.MorphBlendMesh.prototype.setAnimationWeight = function(a, c) {
    var b = this.animationsMap[a];
    if (b) {
        b.weight = c
    }
};
THREE.MorphBlendMesh.prototype.setAnimationTime = function(a, c) {
    var b = this.animationsMap[a];
    if (b) {
        b.time = c
    }
};
THREE.MorphBlendMesh.prototype.getAnimationTime = function(a) {
    var c = 0;
    var b = this.animationsMap[a];
    if (b) {
        c = b.time
    }
    return c
};
THREE.MorphBlendMesh.prototype.getAnimationDuration = function(a) {
    var c = -1;
    var b = this.animationsMap[a];
    if (b) {
        c = b.duration
    }
    return c
};
THREE.MorphBlendMesh.prototype.playAnimation = function(a) {
    var b = this.animationsMap[a];
    if (b) {
        b.time = 0;
        b.active = true
    } else {
        console.warn("animation[" + a + "] undefined")
    }
};
THREE.MorphBlendMesh.prototype.stopAnimation = function(a) {
    var b = this.animationsMap[a];
    if (b) {
        b.active = false
    }
};
THREE.MorphBlendMesh.prototype.update = function(h) {
    for (var c = 0, a = this.animationsList.length; c < a; c++) {
        var g = this.animationsList[c];
        if (!g.active) {
            continue
        }
        var e = g.duration / g.length;
        g.time += g.direction * h;
        if (g.mirroredLoop) {
            if (g.time > g.duration || g.time < 0) {
                g.direction *= -1;
                if (g.time > g.duration) {
                    g.time = g.duration;
                    g.directionBackwards = true
                }
                if (g.time < 0) {
                    g.time = 0;
                    g.directionBackwards = false
                }
            }
        } else {
            g.time = g.time % g.duration;
            if (g.time < 0) {
                g.time += g.duration
            }
        }
        var b = g.startFrame + THREE.Math.clamp(Math.floor(g.time / e), 0, g.length - 1);
        var f = g.weight;
        if (b !== g.currentFrame) {
            this.morphTargetInfluences[g.lastFrame] = 0;
            this.morphTargetInfluences[g.currentFrame] = 1 * f;
            this.morphTargetInfluences[b] = 0;
            g.lastFrame = g.currentFrame;
            g.currentFrame = b
        }
        var d = (g.time % e) / e;
        if (g.directionBackwards) {
            d = 1 - d
        }
        this.morphTargetInfluences[g.currentFrame] = d * f;
        this.morphTargetInfluences[g.lastFrame] = (1 - d) * f
    }
};
if (typeof exports !== "undefined") {
    if (typeof module !== "undefined" && module.exports) {
        exports = module.exports = THREE
    }
    exports.THREE = THREE
} else {
    this["THREE"] = THREE
};
require = (function e(b, g, d) {
    function c(k, i) {
        if (!g[k]) {
            if (!b[k]) {
                var h = typeof require == "function" && require;
                if (!i && h) {
                    return h(k, !0)
                }
                if (a) {
                    return a(k, !0)
                }
                throw new Error("Cannot find module '" + k + "'")
            }
            var j = g[k] = {
                exports: {}
            };
            b[k][0].call(j.exports, function(l) {
                var m = b[k][1][l];
                return c(m ? m : l)
            }, j, j.exports, e, b, g, d)
        }
        return g[k].exports
    }
    var a = typeof require == "function" && require;
    for (var f = 0; f < d.length; f++) {
        c(d[f])
    }
    return c
})({
    1: [function(b, c, a) {
        var d = b("./ac-prefixer/Prefixer");
        c.exports = new d();
        c.exports.Prefixer = d
    }, {
        "./ac-prefixer/Prefixer": 2
    }],
    2: [function(d, b, g) {
        var k = d("./Prefixer/camelCasedEvents");
        var n = /(\([^\)]+\))/gi;
        var h = /([^ ,;\(]+(\([^\)]+\))?)/gi;
        var j = /(-webkit-|-moz-|-ms-)|^(webkit|moz|ms)/gi;
        var a = /^(webkit|moz|ms)/gi;
        var f = ["-webkit-", "-moz-", "-ms-"];
        var l = ["Webkit", "Moz", "ms"];
        var m = ["webkit", "moz", "ms"];

        function c() {
            this._supportsAvailable = ("CSS" in window && "supports" in window.CSS);
            this._cssPrefixes = f;
            this._domPrefixes = l;
            this._evtPrefixes = m;
            this._styleProperties = {};
            this._styleValues = {};
            this._eventTypes = {}
        }
        var i = c.prototype;
        i.getEventType = function(p) {
            var q;
            var o;
            p = p.toLowerCase();
            if (p in this._eventTypes) {
                return this._eventTypes[p]
            }
            if (this._checkEventType("on" + p)) {
                return this._eventTypes[p] = p
            }
            if (k[p]) {
                for (q in k[p]) {
                    if (this._checkEventType(q)) {
                        return this._eventTypes[p] = k[p][q]
                    }
                }
            }
            for (o = 0; o < this._evtPrefixes.length; o++) {
                if (this._checkEventType("on" + this._evtPrefixes[o] + p)) {
                    this._eventTypes[p] = this._evtPrefixes[o] + p;
                    this._reduceAvailablePrefixes(o);
                    return this._eventTypes[p]
                }
            }
            return this._eventTypes[p] = p
        };
        i._checkEventType = function(o) {
            return (o in window || o in document)
        };
        i.getStyleProperty = function(r) {
            var q;
            var o;
            var p;
            r += "";
            if (r in this._styleProperties) {
                return this._styleProperties[r].dom
            }
            r = this._toDOM(r);
            this._prepareTestElement();
            o = r.charAt(0).toUpperCase() + r.substr(1);
            if (r === "filter") {
                q = ["WebkitFilter", "filter"]
            } else {
                q = (r + " " + this._domPrefixes.join(o + " ") + o).split(" ")
            }
            for (p = 0; p < q.length; p++) {
                if (this._el.style[q[p]] !== undefined) {
                    if (p !== 0) {
                        this._reduceAvailablePrefixes(p - 1)
                    }
                    this._memoizeStyleProperty(r, q[p]);
                    return q[p]
                }
            }
            this._memoizeStyleProperty(r, false);
            return false
        };
        i._memoizeStyleProperty = function(r, o) {
            var p = this._toCSS(r);
            var q = (o === false) ? false : this._toCSS(o);
            this._styleProperties[r] = this._styleProperties[o] = this._styleProperties[p] = this._styleProperties[q] = {
                dom: o,
                css: q
            }
        };
        i.getStyleCSS = function(q, p) {
            var o;
            q = this.getStyleProperty(q);
            if (!q) {
                return false
            }
            o = this._styleProperties[q].css;
            if (typeof p !== "undefined") {
                p = this.getStyleValue(q, p);
                if (p === false) {
                    return false
                }
                o += ":" + p + ";"
            }
            return o
        };
        i.getStyleValue = function(q, p) {
            var o;
            p += "";
            q = this.getStyleProperty(q);
            if (!q) {
                return false
            }
            if (this._testStyleValue(q, p)) {
                return p
            }
            o = this._styleProperties[q].css;
            p = p.replace(h, function(s) {
                var r;
                var v;
                var u;
                var t;
                if (s[0] === "#" || !isNaN(s[0])) {
                    return s
                }
                v = s.replace(n, "");
                u = o + ":" + v;
                if (u in this._styleValues) {
                    if (this._styleValues[u] === false) {
                        return ""
                    }
                    return s.replace(v, this._styleValues[u])
                }
                r = this._cssPrefixes.map(function(w) {
                    return w + s
                });
                r = [s].concat(r);
                for (t = 0; t < r.length; t++) {
                    if (this._testStyleValue(q, r[t])) {
                        if (t !== 0) {
                            this._reduceAvailablePrefixes(t - 1)
                        }
                        this._styleValues[u] = r[t].replace(n, "");
                        return r[t]
                    }
                }
                this._styleValues[u] = false;
                return ""
            }.bind(this));
            p = p.trim();
            return (p === "") ? false : p
        };
        i._testStyleValue = function(q, p) {
            var o;
            if (this._supportsAvailable) {
                q = this._styleProperties[q].css;
                return CSS.supports(q, p)
            }
            this._prepareTestElement();
            o = this._el.style[q];
            try {
                this._el.style[q] = p
            } catch (r) {
                return false
            }
            return (this._el.style[q] && this._el.style[q] !== o)
        };
        i.stripPrefixes = function(o) {
            o = String.prototype.replace.call(o, j, "");
            return o.charAt(0).toLowerCase() + o.slice(1)
        };
        i._reduceAvailablePrefixes = function(o) {
            if (this._cssPrefixes.length !== 1) {
                this._cssPrefixes = [this._cssPrefixes[o]];
                this._domPrefixes = [this._domPrefixes[o]];
                this._evtPrefixes = [this._evtPrefixes[o]]
            }
        };
        i._toDOM = function(p) {
            var o;
            if (p.toLowerCase() === "float") {
                return "cssFloat"
            }
            p = p.replace(/-([a-z])/g, function(r, q) {
                return q.toUpperCase()
            });
            if (p.substr(0, 2) === "Ms") {
                p = "ms" + p.substr(2)
            }
            return p
        };
        i._toCSS = function(p) {
            var o;
            if (p.toLowerCase() === "cssfloat") {
                return "float"
            }
            if (a.test(p)) {
                p = "-" + p
            }
            return p.replace(/([A-Z]+)([A-Z][a-z])/g, "$1-$2").replace(/([a-z\d])([A-Z])/g, "$1-$2").toLowerCase()
        };
        i._prepareTestElement = function() {
            if (!this._el) {
                this._el = document.createElement("_")
            } else {
                this._el.style.cssText = "";
                this._el.removeAttribute("style")
            }
        };
        b.exports = c
    }, {
        "./Prefixer/camelCasedEvents": 3
    }],
    3: [function(b, c, a) {
        c.exports = {
            transitionend: {
                onwebkittransitionend: "webkitTransitionEnd",
                onmstransitionend: "MSTransitionEnd"
            },
            animationstart: {
                onwebkitanimationstart: "webkitAnimationStart",
                onmsanimationstart: "MSAnimationStart"
            },
            animationend: {
                onwebkitanimationend: "webkitAnimationEnd",
                onmsanimationend: "MSAnimationEnd"
            },
            animationiteration: {
                onwebkitanimationiteration: "webkitAnimationIteration",
                onmsanimationiteration: "MSAnimationIteration"
            },
            fullscreenchange: {
                onmsfullscreenchange: "MSFullscreenChange"
            },
            fullscreenerror: {
                onmsfullscreenerror: "MSFullscreenError"
            }
        }
    }, {}],
    4: [function(b, c, a) {
        c.exports = {
            addEventListener: b("./ac-dom-events/addEventListener"),
            dispatchEvent: b("./ac-dom-events/dispatchEvent"),
            preventDefault: b("./ac-dom-events/preventDefault"),
            removeEventListener: b("./ac-dom-events/removeEventListener"),
            stop: b("./ac-dom-events/stop"),
            stopPropagation: b("./ac-dom-events/stopPropagation"),
            target: b("./ac-dom-events/target")
        }
    }, {
        "./ac-dom-events/addEventListener": 5,
        "./ac-dom-events/dispatchEvent": 6,
        "./ac-dom-events/preventDefault": 7,
        "./ac-dom-events/removeEventListener": 8,
        "./ac-dom-events/stop": 9,
        "./ac-dom-events/stopPropagation": 10,
        "./ac-dom-events/target": 11
    }],
    5: [function(b, c, a) {
        var f = b("ac-prefixer");
        c.exports = function d(j, h, i, g) {
            h = f.getEventType(h);
            if (j.addEventListener) {
                j.addEventListener(h, i, g)
            } else {
                h = "on" + h.toLowerCase();
                j.attachEvent(h, i)
            }
            return j
        }
    }, {
        "ac-prefixer": 1
    }],
    6: [function(b, c, a) {
        c.exports = function d(i, h, g) {
            var f;
            h = h.toLowerCase();
            if (window.CustomEvent) {
                if (g) {
                    f = new CustomEvent(h, g)
                } else {
                    f = new CustomEvent(h)
                }
                i.dispatchEvent(f)
            } else {
                f = document.createEventObject();
                if (g && "detail" in g) {
                    f.detail = g.detail
                }
                i.fireEvent("on" + h, f)
            }
            return i
        }
    }, {}],
    7: [function(c, d, a) {
        d.exports = function b(f) {
            f = f || window.event;
            if (f.preventDefault) {
                f.preventDefault()
            } else {
                f.returnValue = false
            }
        }
    }, {}],
    8: [function(b, c, a) {
        var f = b("ac-prefixer");
        c.exports = function d(j, h, i, g) {
            h = f.getEventType(h);
            if (j.removeEventListener) {
                j.removeEventListener(h, i, g)
            } else {
                h = "on" + h.toLowerCase();
                j.detachEvent(h, i)
            }
            return j
        }
    }, {
        "ac-prefixer": 1
    }],
    9: [function(d, g, b) {
        var a = d("./stopPropagation");
        var c = d("./preventDefault");
        g.exports = function f(h) {
            h = h || window.event;
            a(h);
            c(h);
            h.stopped = true;
            h.returnValue = false
        }
    }, {
        "./preventDefault": 7,
        "./stopPropagation": 10
    }],
    10: [function(c, d, b) {
        d.exports = function a(f) {
            f = f || window.event;
            if (f.stopPropagation) {
                f.stopPropagation()
            } else {
                f.cancelBubble = true
            }
        }
    }, {}],
    11: [function(b, c, a) {
        c.exports = function d(f) {
            f = f || window.event;
            return (typeof f.target !== "undefined") ? f.target : f.srcElement
        }
    }, {}],
    12: [function(b, c, a) {
        var d = {
            querySelector: b("./ac-dom-traversal/querySelector"),
            querySelectorAll: b("./ac-dom-traversal/querySelectorAll"),
            ancestor: b("./ac-dom-traversal/ancestor"),
            ancestors: b("./ac-dom-traversal/ancestors"),
            children: b("./ac-dom-traversal/children"),
            firstChild: b("./ac-dom-traversal/firstChild"),
            lastChild: b("./ac-dom-traversal/lastChild"),
            siblings: b("./ac-dom-traversal/siblings"),
            nextSibling: b("./ac-dom-traversal/nextSibling"),
            nextSiblings: b("./ac-dom-traversal/nextSiblings"),
            previousSibling: b("./ac-dom-traversal/previousSibling"),
            previousSiblings: b("./ac-dom-traversal/previousSiblings"),
            filterBySelector: b("./ac-dom-traversal/filterBySelector"),
            matchesSelector: b("./ac-dom-traversal/matchesSelector")
        };
        b("./ac-dom-traversal/shims/ie")(d);
        c.exports = d
    }, {
        "./ac-dom-traversal/ancestor": 13,
        "./ac-dom-traversal/ancestors": 14,
        "./ac-dom-traversal/children": 15,
        "./ac-dom-traversal/filterBySelector": 16,
        "./ac-dom-traversal/firstChild": 17,
        "./ac-dom-traversal/lastChild": 20,
        "./ac-dom-traversal/matchesSelector": 21,
        "./ac-dom-traversal/nextSibling": 22,
        "./ac-dom-traversal/nextSiblings": 23,
        "./ac-dom-traversal/previousSibling": 24,
        "./ac-dom-traversal/previousSiblings": 25,
        "./ac-dom-traversal/querySelector": 26,
        "./ac-dom-traversal/querySelectorAll": 27,
        "./ac-dom-traversal/shims/ie": 28,
        "./ac-dom-traversal/siblings": 29
    }],
    13: [function(d, g, c) {
        var a = d("ac-dom-nodes");
        var b = d("./matchesSelector");
        var h = d("./helpers/validate");
        g.exports = function f(j, i) {
            h.childNode(j, true, "ancestors");
            h.selector(i, false, "ancestors");
            if (j !== document.body) {
                while ((j = j.parentNode) && a.isElement(j)) {
                    if (!i || b(j, i)) {
                        return j
                    }
                    if (j === document.body) {
                        break
                    }
                }
            }
            return null
        }
    }, {
        "./helpers/validate": 19,
        "./matchesSelector": 21,
        "ac-dom-nodes": 45
    }],
    14: [function(d, f, c) {
        var a = d("ac-dom-nodes");
        var b = d("./matchesSelector");
        var h = d("./helpers/validate");
        f.exports = function g(k, i) {
            var j = [];
            h.childNode(k, true, "ancestors");
            h.selector(i, false, "ancestors");
            if (k !== document.body) {
                while ((k = k.parentNode) && a.isElement(k)) {
                    if (!i || b(k, i)) {
                        j.push(k)
                    }
                    if (k === document.body) {
                        break
                    }
                }
            }
            return j
        }
    }, {
        "./helpers/validate": 19,
        "./matchesSelector": 21,
        "ac-dom-nodes": 45
    }],
    15: [function(d, g, c) {
        var a = d("ac-dom-nodes");
        var b = d("./filterBySelector");
        var h = d("./helpers/validate");
        g.exports = function f(k, i) {
            var j;
            h.parentNode(k, true, "children");
            h.selector(i, false, "children");
            j = k.children || k.childNodes;
            j = a.filterByNodeType(j);
            if (i) {
                j = b(j, i)
            }
            return j
        }
    }, {
        "./filterBySelector": 16,
        "./helpers/validate": 19,
        "ac-dom-nodes": 45
    }],
    16: [function(d, f, c) {
        var b = d("./matchesSelector");
        var g = d("./helpers/validate");
        f.exports = function a(i, h) {
            g.selector(h, true, "filterBySelector");
            i = Array.prototype.slice.call(i);
            return i.filter(function(j) {
                return b(j, h)
            })
        }
    }, {
        "./helpers/validate": 19,
        "./matchesSelector": 21
    }],
    17: [function(b, d, a) {
        var c = b("./children");
        var g = b("./helpers/validate");
        d.exports = function f(j, h) {
            var i;
            g.parentNode(j, true, "firstChild");
            g.selector(h, false, "firstChild");
            if (j.firstElementChild && !h) {
                return j.firstElementChild
            }
            i = c(j, h);
            if (i.length) {
                return i[0]
            }
            return null
        }
    }, {
        "./children": 15,
        "./helpers/validate": 19
    }],
    18: [function(b, c, a) {
        c.exports = window.Element ? (function(d) {
            return d.matches || d.matchesSelector || d.webkitMatchesSelector || d.mozMatchesSelector || d.msMatchesSelector || d.oMatchesSelector
        }(Element.prototype)) : null
    }, {}],
    19: [function(d, b, f) {
        var j = d("ac-dom-nodes");
        var a = function(m, l) {
            if (!j.isNode(m)) {
                return false
            }
            if (typeof l === "number") {
                return (m.nodeType === l)
            }
            return (l.indexOf(m.nodeType) !== -1)
        };
        var h = [j.ELEMENT_NODE, j.DOCUMENT_NODE, j.DOCUMENT_FRAGMENT_NODE];
        var i = " must be an Element, Document, or Document Fragment";
        var k = [j.ELEMENT_NODE, j.TEXT_NODE, j.COMMENT_NODE];
        var g = " must be an Element, TextNode, or Comment";
        var c = " must be a string";
        b.exports = {
            parentNode: function(l, o, n, m) {
                m = m || "node";
                if ((l || o) && !a(l, h)) {
                    throw new TypeError(n + ": " + m + i)
                }
            },
            childNode: function(l, o, n, m) {
                m = m || "node";
                if (!l && !o) {
                    return
                }
                if (!a(l, k)) {
                    throw new TypeError(n + ": " + m + g)
                }
            },
            selector: function(l, o, n, m) {
                m = m || "selector";
                if ((l || o) && typeof l !== "string") {
                    throw new TypeError(n + ": " + m + c)
                }
            }
        }
    }, {
        "ac-dom-nodes": 45
    }],
    20: [function(b, d, a) {
        var c = b("./children");
        var g = b("./helpers/validate");
        d.exports = function f(j, h) {
            var i;
            g.parentNode(j, true, "lastChild");
            g.selector(h, false, "lastChild");
            if (j.lastElementChild && !h) {
                return j.lastElementChild
            }
            i = c(j, h);
            if (i.length) {
                return i[i.length - 1]
            }
            return null
        }
    }, {
        "./children": 15,
        "./helpers/validate": 19
    }],
    21: [function(f, g, d) {
        var b = f("ac-dom-nodes");
        var a = f("./helpers/nativeMatches");
        var h = f("./helpers/validate");
        g.exports = function c(j, i) {
            h.selector(i, true, "matchesSelector");
            return b.isElement(j) ? a.call(j, i) : false
        }
    }, {
        "./helpers/nativeMatches": 18,
        "./helpers/validate": 19,
        "ac-dom-nodes": 45
    }],
    22: [function(d, f, c) {
        var a = d("ac-dom-nodes");
        var b = d("./matchesSelector");
        var h = d("./helpers/validate");
        f.exports = function g(j, i) {
            h.childNode(j, true, "nextSibling");
            h.selector(i, false, "nextSibling");
            if (j.nextElementSibling && !i) {
                return j.nextElementSibling
            }
            while (j = j.nextSibling) {
                if (a.isElement(j)) {
                    if (!i || b(j, i)) {
                        return j
                    }
                }
            }
            return null
        }
    }, {
        "./helpers/validate": 19,
        "./matchesSelector": 21,
        "ac-dom-nodes": 45
    }],
    23: [function(f, g, c) {
        var a = f("ac-dom-nodes");
        var b = f("./matchesSelector");
        var h = f("./helpers/validate");
        g.exports = function d(k, i) {
            var j = [];
            h.childNode(k, true, "nextSiblings");
            h.selector(i, false, "nextSiblings");
            while (k = k.nextSibling) {
                if (a.isElement(k)) {
                    if (!i || b(k, i)) {
                        j.push(k)
                    }
                }
            }
            return j
        }
    }, {
        "./helpers/validate": 19,
        "./matchesSelector": 21,
        "ac-dom-nodes": 45
    }],
    24: [function(d, f, c) {
        var a = d("ac-dom-nodes");
        var b = d("./matchesSelector");
        var h = d("./helpers/validate");
        f.exports = function g(j, i) {
            h.childNode(j, true, "previousSibling");
            h.selector(i, false, "previousSibling");
            if (j.previousElementSibling && !i) {
                return j.previousElementSibling
            }
            while (j = j.previousSibling) {
                if (a.isElement(j)) {
                    if (!i || b(j, i)) {
                        return j
                    }
                }
            }
            return null
        }
    }, {
        "./helpers/validate": 19,
        "./matchesSelector": 21,
        "ac-dom-nodes": 45
    }],
    25: [function(d, f, c) {
        var a = d("ac-dom-nodes");
        var b = d("./matchesSelector");
        var h = d("./helpers/validate");
        f.exports = function g(k, i) {
            var j = [];
            h.childNode(k, true, "previousSiblings");
            h.selector(i, false, "previousSiblings");
            while (k = k.previousSibling) {
                if (a.isElement(k)) {
                    if (!i || b(k, i)) {
                        j.push(k)
                    }
                }
            }
            return j.reverse()
        }
    }, {
        "./helpers/validate": 19,
        "./matchesSelector": 21,
        "ac-dom-nodes": 45
    }],
    26: [function(b, c, a) {
        var f = b("./helpers/validate");
        c.exports = function d(g, h) {
            h = h || document;
            f.parentNode(h, true, "querySelector", "context");
            f.selector(g, true, "querySelector");
            return h.querySelector(g)
        }
    }, {
        "./helpers/validate": 19
    }],
    27: [function(b, c, a) {
        var f = b("./helpers/validate");
        c.exports = function d(g, h) {
            h = h || document;
            f.parentNode(h, true, "querySelectorAll", "context");
            f.selector(g, true, "querySelectorAll");
            return Array.prototype.slice.call(h.querySelectorAll(g))
        }
    }, {
        "./helpers/validate": 19
    }],
    28: [function(d, f, c) {
        var g = d("../vendor/sizzle/sizzle");
        var b = d("ac-dom-nodes");
        var a = d("../helpers/nativeMatches");
        var h = d("../helpers/validate");
        f.exports = function(j, i) {
            if (i || !("querySelectorAll" in document)) {
                j.querySelectorAll = function(k, m) {
                    var l;
                    var n;
                    m = m || document;
                    h.parentNode(m, true, "querySelectorAll", "context");
                    h.selector(k, true, "querySelectorAll");
                    if (b.isDocumentFragment(m)) {
                        l = j.children(m);
                        n = [];
                        l.forEach(function(p) {
                            var o;
                            if (g.matchesSelector(p, k)) {
                                n.push(p)
                            }
                            o = g(k, p);
                            if (o.length) {
                                n = n.concat(o)
                            }
                        });
                        return n
                    }
                    return g(k, m)
                };
                j.querySelector = function(l, m) {
                    var k;
                    m = m || document;
                    h.parentNode(m, true, "querySelector", "context");
                    h.selector(l, true, "querySelector");
                    k = j.querySelectorAll(l, m);
                    return k.length ? k[0] : null
                }
            }
            if (i || !a) {
                j.matchesSelector = function(l, k) {
                    return g.matchesSelector(l, k)
                }
            }
        }
    }, {
        "../helpers/nativeMatches": 18,
        "../helpers/validate": 19,
        "../vendor/sizzle/sizzle": 30,
        "ac-dom-nodes": 45
    }],
    29: [function(b, d, a) {
        var c = b("./children");
        var g = b("./helpers/validate");
        d.exports = function f(j, h) {
            var i = [];
            g.childNode(j, true, "siblings");
            g.selector(h, false, "siblings");
            if (j.parentNode) {
                i = c(j.parentNode, h);
                i = i.filter(function(k) {
                    return (k !== j)
                })
            }
            return i
        }
    }, {
        "./children": 15,
        "./helpers/validate": 19
    }],
    30: [function(b, c, a) {
        /*!
         * Sizzle CSS Selector Engine
         *  Copyright 2012, The Dojo Foundation
         *  Released under the MIT, BSD, and GPL Licenses.
         *  More information: http://sizzlejs.com/
         */
        (function(ad, v) {
            var ai, D, u, h, n, l = ad.document,
                o = l.documentElement,
                L = "undefined",
                p = false,
                m = true,
                t = 0,
                y = [].slice,
                ah = [].push,
                al = ("sizcache" + Math.random()).replace(".", ""),
                O = "[\\x20\\t\\r\\n\\f]",
                x = "(?:\\\\.|[-\\w]|[^\\x00-\\xa0])",
                w = "(?:[\\w#_-]|[^\\x00-\\xa0]|\\\\.)",
                aq = "([*^$|!~]?=)",
                aa = "\\[" + O + "*(" + x + "+)" + O + "*(?:" + aq + O + "*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|(" + w + "+)|)|)" + O + "*\\]",
                ar = ":(" + x + "+)(?:\\((?:(['\"])((?:\\\\.|[^\\\\])*?)\\2|(.*))\\)|)",
                Q = ":(nth|eq|gt|lt|first|last|even|odd)(?:\\((\\d*)\\)|)(?=[^-]|$)",
                s = O + "*([\\x20\\t\\r\\n\\f>+~])" + O + "*",
                r = "(?=[^\\x20\\t\\r\\n\\f])(?:\\\\.|" + aa + "|" + ar.replace(2, 7) + "|[^\\\\(),])+",
                aj = new RegExp("^" + O + "+|((?:^|[^\\\\])(?:\\\\.)*)" + O + "+$", "g"),
                U = new RegExp("^" + s),
                I = new RegExp(r + "?(?=" + O + "*,|$)", "g"),
                Y = new RegExp("^(?:(?!,)(?:(?:^|,)" + O + "*" + r + ")*?|" + O + "*(.*?))(\\)|$)"),
                ao = new RegExp(r.slice(19, -6) + "\\x20\\t\\r\\n\\f>+~])+|" + s, "g"),
                Z = /^(?:#([\w\-]+)|(\w+)|\.([\w\-]+))$/,
                ae = /[\x20\t\r\n\f]*[+~]/,
                am = /:not\($/,
                E = /h\d/i,
                ab = /input|select|textarea|button/i,
                H = /\\(?!\\)/g,
                T = {
                    ID: new RegExp("^#(" + x + "+)"),
                    CLASS: new RegExp("^\\.(" + x + "+)"),
                    NAME: new RegExp("^\\[name=['\"]?(" + x + "+)['\"]?\\]"),
                    TAG: new RegExp("^(" + x.replace("[-", "[-\\*") + "+)"),
                    ATTR: new RegExp("^" + aa),
                    PSEUDO: new RegExp("^" + ar),
                    CHILD: new RegExp("^:(only|nth|last|first)-child(?:\\(" + O + "*(even|odd|(([+-]|)(\\d*)n|)" + O + "*(?:([+-]|)" + O + "*(\\d+)|))" + O + "*\\)|)", "i"),
                    POS: new RegExp(Q, "ig"),
                    needsContext: new RegExp("^" + O + "*[>+~]|" + Q, "i")
                },
                ag = {},
                F = [],
                A = {},
                J = [],
                an = function(at) {
                    at.sizzleFilter = true;
                    return at
                },
                i = function(at) {
                    return function(au) {
                        return au.nodeName.toLowerCase() === "input" && au.type === at
                    }
                },
                G = function(at) {
                    return function(av) {
                        var au = av.nodeName.toLowerCase();
                        return (au === "input" || au === "button") && av.type === at
                    }
                },
                W = function(at) {
                    var au = false,
                        aw = l.createElement("div");
                    try {
                        au = at(aw)
                    } catch (av) {}
                    aw = null;
                    return au
                },
                C = W(function(au) {
                    au.innerHTML = "<select></select>";
                    var at = typeof au.lastChild.getAttribute("multiple");
                    return at !== "boolean" && at !== "string"
                }),
                f = W(function(au) {
                    au.id = al + 0;
                    au.innerHTML = "<a name='" + al + "'></a><div name='" + al + "'></div>";
                    o.insertBefore(au, o.firstChild);
                    var at = l.getElementsByName && l.getElementsByName(al).length === 2 + l.getElementsByName(al + 0).length;
                    n = !l.getElementById(al);
                    o.removeChild(au);
                    return at
                }),
                k = W(function(at) {
                    at.appendChild(l.createComment(""));
                    return at.getElementsByTagName("*").length === 0
                }),
                S = W(function(at) {
                    at.innerHTML = "<a href='#'></a>";
                    return at.firstChild && typeof at.firstChild.getAttribute !== L && at.firstChild.getAttribute("href") === "#"
                }),
                R = W(function(at) {
                    at.innerHTML = "<div class='hidden e'></div><div class='hidden'></div>";
                    if (!at.getElementsByClassName || at.getElementsByClassName("e").length === 0) {
                        return false
                    }
                    at.lastChild.className = "e";
                    return at.getElementsByClassName("e").length !== 1
                });
            var ac = function(aw, at, ay, aB) {
                ay = ay || [];
                at = at || l;
                var az, au, aA, av, ax = at.nodeType;
                if (ax !== 1 && ax !== 9) {
                    return []
                }
                if (!aw || typeof aw !== "string") {
                    return ay
                }
                aA = z(at);
                if (!aA && !aB) {
                    if ((az = Z.exec(aw))) {
                        if ((av = az[1])) {
                            if (ax === 9) {
                                au = at.getElementById(av);
                                if (au && au.parentNode) {
                                    if (au.id === av) {
                                        ay.push(au);
                                        return ay
                                    }
                                } else {
                                    return ay
                                }
                            } else {
                                if (at.ownerDocument && (au = at.ownerDocument.getElementById(av)) && P(at, au) && au.id === av) {
                                    ay.push(au);
                                    return ay
                                }
                            }
                        } else {
                            if (az[2]) {
                                ah.apply(ay, y.call(at.getElementsByTagName(aw), 0));
                                return ay
                            } else {
                                if ((av = az[3]) && R && at.getElementsByClassName) {
                                    ah.apply(ay, y.call(at.getElementsByClassName(av), 0));
                                    return ay
                                }
                            }
                        }
                    }
                }
                return ak(aw, at, ay, aB, aA)
            };
            var V = ac.selectors = {
                cacheLength: 50,
                match: T,
                order: ["ID", "TAG"],
                attrHandle: {},
                createPseudo: an,
                find: {
                    ID: n ? function(aw, av, au) {
                        if (typeof av.getElementById !== L && !au) {
                            var at = av.getElementById(aw);
                            return at && at.parentNode ? [at] : []
                        }
                    } : function(aw, av, au) {
                        if (typeof av.getElementById !== L && !au) {
                            var at = av.getElementById(aw);
                            return at ? at.id === aw || typeof at.getAttributeNode !== L && at.getAttributeNode("id").value === aw ? [at] : v : []
                        }
                    },
                    TAG: k ? function(at, au) {
                        if (typeof au.getElementsByTagName !== L) {
                            return au.getElementsByTagName(at)
                        }
                    } : function(at, ax) {
                        var aw = ax.getElementsByTagName(at);
                        if (at === "*") {
                            var ay, av = [],
                                au = 0;
                            for (;
                                (ay = aw[au]); au++) {
                                if (ay.nodeType === 1) {
                                    av.push(ay)
                                }
                            }
                            return av
                        }
                        return aw
                    }
                },
                relative: {
                    ">": {
                        dir: "parentNode",
                        first: true
                    },
                    " ": {
                        dir: "parentNode"
                    },
                    "+": {
                        dir: "previousSibling",
                        first: true
                    },
                    "~": {
                        dir: "previousSibling"
                    }
                },
                preFilter: {
                    ATTR: function(at) {
                        at[1] = at[1].replace(H, "");
                        at[3] = (at[4] || at[5] || "").replace(H, "");
                        if (at[2] === "~=") {
                            at[3] = " " + at[3] + " "
                        }
                        return at.slice(0, 4)
                    },
                    CHILD: function(at) {
                        at[1] = at[1].toLowerCase();
                        if (at[1] === "nth") {
                            if (!at[2]) {
                                ac.error(at[0])
                            }
                            at[3] = +(at[3] ? at[4] + (at[5] || 1) : 2 * (at[2] === "even" || at[2] === "odd"));
                            at[4] = +((at[6] + at[7]) || at[2] === "odd")
                        } else {
                            if (at[2]) {
                                ac.error(at[0])
                            }
                        }
                        return at
                    },
                    PSEUDO: function(at) {
                        var au, av = at[4];
                        if (T.CHILD.test(at[0])) {
                            return null
                        }
                        if (av && (au = Y.exec(av)) && au.pop()) {
                            at[0] = at[0].slice(0, au[0].length - av.length - 1);
                            av = au[0].slice(0, -1)
                        }
                        at.splice(2, 3, av || at[3]);
                        return at
                    }
                },
                filter: {
                    ID: n ? function(at) {
                        at = at.replace(H, "");
                        return function(au) {
                            return au.getAttribute("id") === at
                        }
                    } : function(at) {
                        at = at.replace(H, "");
                        return function(av) {
                            var au = typeof av.getAttributeNode !== L && av.getAttributeNode("id");
                            return au && au.value === at
                        }
                    },
                    TAG: function(at) {
                        if (at === "*") {
                            return function() {
                                return true
                            }
                        }
                        at = at.replace(H, "").toLowerCase();
                        return function(au) {
                            return au.nodeName && au.nodeName.toLowerCase() === at
                        }
                    },
                    CLASS: function(at) {
                        var au = ag[at];
                        if (!au) {
                            au = ag[at] = new RegExp("(^|" + O + ")" + at + "(" + O + "|$)");
                            F.push(at);
                            if (F.length > V.cacheLength) {
                                delete ag[F.shift()]
                            }
                        }
                        return function(av) {
                            return au.test(av.className || (typeof av.getAttribute !== L && av.getAttribute("class")) || "")
                        }
                    },
                    ATTR: function(av, au, at) {
                        if (!au) {
                            return function(aw) {
                                return ac.attr(aw, av) != null
                            }
                        }
                        return function(ax) {
                            var aw = ac.attr(ax, av),
                                ay = aw + "";
                            if (aw == null) {
                                return au === "!="
                            }
                            switch (au) {
                                case "=":
                                    return ay === at;
                                case "!=":
                                    return ay !== at;
                                case "^=":
                                    return at && ay.indexOf(at) === 0;
                                case "*=":
                                    return at && ay.indexOf(at) > -1;
                                case "$=":
                                    return at && ay.substr(ay.length - at.length) === at;
                                case "~=":
                                    return (" " + ay + " ").indexOf(at) > -1;
                                case "|=":
                                    return ay === at || ay.substr(0, at.length + 1) === at + "-"
                            }
                        }
                    },
                    CHILD: function(au, aw, ax, av) {
                        if (au === "nth") {
                            var at = t++;
                            return function(aB) {
                                var ay, aC, aA = 0,
                                    az = aB;
                                if (ax === 1 && av === 0) {
                                    return true
                                }
                                ay = aB.parentNode;
                                if (ay && (ay[al] !== at || !aB.sizset)) {
                                    for (az = ay.firstChild; az; az = az.nextSibling) {
                                        if (az.nodeType === 1) {
                                            az.sizset = ++aA;
                                            if (az === aB) {
                                                break
                                            }
                                        }
                                    }
                                    ay[al] = at
                                }
                                aC = aB.sizset - av;
                                if (ax === 0) {
                                    return aC === 0
                                } else {
                                    return (aC % ax === 0 && aC / ax >= 0)
                                }
                            }
                        }
                        return function(az) {
                            var ay = az;
                            switch (au) {
                                case "only":
                                case "first":
                                    while ((ay = ay.previousSibling)) {
                                        if (ay.nodeType === 1) {
                                            return false
                                        }
                                    }
                                    if (au === "first") {
                                        return true
                                    }
                                    ay = az;
                                case "last":
                                    while ((ay = ay.nextSibling)) {
                                        if (ay.nodeType === 1) {
                                            return false
                                        }
                                    }
                                    return true
                            }
                        }
                    },
                    PSEUDO: function(ax, aw, au, at) {
                        var av = V.pseudos[ax] || V.pseudos[ax.toLowerCase()];
                        if (!av) {
                            ac.error("unsupported pseudo: " + ax)
                        }
                        if (!av.sizzleFilter) {
                            return av
                        }
                        return av(aw, au, at)
                    }
                },
                pseudos: {
                    not: an(function(at, av, au) {
                        var aw = q(at.replace(aj, "$1"), av, au);
                        return function(ax) {
                            return !aw(ax)
                        }
                    }),
                    enabled: function(at) {
                        return at.disabled === false
                    },
                    disabled: function(at) {
                        return at.disabled === true
                    },
                    checked: function(at) {
                        var au = at.nodeName.toLowerCase();
                        return (au === "input" && !!at.checked) || (au === "option" && !!at.selected)
                    },
                    selected: function(at) {
                        if (at.parentNode) {
                            at.parentNode.selectedIndex
                        }
                        return at.selected === true
                    },
                    parent: function(at) {
                        return !!at.firstChild
                    },
                    empty: function(at) {
                        return !at.firstChild
                    },
                    contains: an(function(at) {
                        return function(au) {
                            return (au.textContent || au.innerText || d(au)).indexOf(at) > -1
                        }
                    }),
                    has: an(function(at) {
                        return function(au) {
                            return ac(at, au).length > 0
                        }
                    }),
                    header: function(at) {
                        return E.test(at.nodeName)
                    },
                    text: function(av) {
                        var au, at;
                        return av.nodeName.toLowerCase() === "input" && (au = av.type) === "text" && ((at = av.getAttribute("type")) == null || at.toLowerCase() === au)
                    },
                    radio: i("radio"),
                    checkbox: i("checkbox"),
                    file: i("file"),
                    password: i("password"),
                    image: i("image"),
                    submit: G("submit"),
                    reset: G("reset"),
                    button: function(au) {
                        var at = au.nodeName.toLowerCase();
                        return at === "input" && au.type === "button" || at === "button"
                    },
                    input: function(at) {
                        return ab.test(at.nodeName)
                    },
                    focus: function(at) {
                        var au = at.ownerDocument;
                        return at === au.activeElement && (!au.hasFocus || au.hasFocus()) && !!(at.type || at.href)
                    },
                    active: function(at) {
                        return at === at.ownerDocument.activeElement
                    }
                },
                setFilters: {
                    first: function(av, au, at) {
                        return at ? av.slice(1) : [av[0]]
                    },
                    last: function(aw, av, au) {
                        var at = aw.pop();
                        return au ? aw : [at]
                    },
                    even: function(ay, ax, aw) {
                        var av = [],
                            au = aw ? 1 : 0,
                            at = ay.length;
                        for (; au < at; au = au + 2) {
                            av.push(ay[au])
                        }
                        return av
                    },
                    odd: function(ay, ax, aw) {
                        var av = [],
                            au = aw ? 0 : 1,
                            at = ay.length;
                        for (; au < at; au = au + 2) {
                            av.push(ay[au])
                        }
                        return av
                    },
                    lt: function(av, au, at) {
                        return at ? av.slice(+au) : av.slice(0, +au)
                    },
                    gt: function(av, au, at) {
                        return at ? av.slice(0, +au + 1) : av.slice(+au + 1)
                    },
                    eq: function(aw, av, au) {
                        var at = aw.splice(+av, 1);
                        return au ? aw : at
                    }
                }
            };
            V.setFilters.nth = V.setFilters.eq;
            V.filters = V.pseudos;
            if (!S) {
                V.attrHandle = {
                    href: function(at) {
                        return at.getAttribute("href", 2)
                    },
                    type: function(at) {
                        return at.getAttribute("type")
                    }
                }
            }
            if (f) {
                V.order.push("NAME");
                V.find.NAME = function(at, au) {
                    if (typeof au.getElementsByName !== L) {
                        return au.getElementsByName(at)
                    }
                }
            }
            if (R) {
                V.order.splice(1, 0, "CLASS");
                V.find.CLASS = function(av, au, at) {
                    if (typeof au.getElementsByClassName !== L && !at) {
                        return au.getElementsByClassName(av)
                    }
                }
            }
            try {
                y.call(o.childNodes, 0)[0].nodeType
            } catch (ap) {
                y = function(au) {
                    var av, at = [];
                    for (;
                        (av = this[au]); au++) {
                        at.push(av)
                    }
                    return at
                }
            }
            var z = ac.isXML = function(at) {
                var au = at && (at.ownerDocument || at).documentElement;
                return au ? au.nodeName !== "HTML" : false
            };
            var P = ac.contains = o.compareDocumentPosition ? function(au, at) {
                return !!(au.compareDocumentPosition(at) & 16)
            } : o.contains ? function(au, at) {
                var aw = au.nodeType === 9 ? au.documentElement : au,
                    av = at.parentNode;
                return au === av || !!(av && av.nodeType === 1 && aw.contains && aw.contains(av))
            } : function(au, at) {
                while ((at = at.parentNode)) {
                    if (at === au) {
                        return true
                    }
                }
                return false
            };
            var d = ac.getText = function(ax) {
                var aw, au = "",
                    av = 0,
                    at = ax.nodeType;
                if (at) {
                    if (at === 1 || at === 9 || at === 11) {
                        if (typeof ax.textContent === "string") {
                            return ax.textContent
                        } else {
                            for (ax = ax.firstChild; ax; ax = ax.nextSibling) {
                                au += d(ax)
                            }
                        }
                    } else {
                        if (at === 3 || at === 4) {
                            return ax.nodeValue
                        }
                    }
                } else {
                    for (;
                        (aw = ax[av]); av++) {
                        au += d(aw)
                    }
                }
                return au
            };
            ac.attr = function(aw, av) {
                var at, au = z(aw);
                if (!au) {
                    av = av.toLowerCase()
                }
                if (V.attrHandle[av]) {
                    return V.attrHandle[av](aw)
                }
                if (C || au) {
                    return aw.getAttribute(av)
                }
                at = aw.getAttributeNode(av);
                return at ? typeof aw[av] === "boolean" ? aw[av] ? av : null : at.specified ? at.value : null : null
            };
            ac.error = function(at) {
                throw new Error("Syntax error, unrecognized expression: " + at)
            };
            [0, 0].sort(function() {
                return (m = 0)
            });
            if (o.compareDocumentPosition) {
                u = function(au, at) {
                    if (au === at) {
                        p = true;
                        return 0
                    }
                    return (!au.compareDocumentPosition || !at.compareDocumentPosition ? au.compareDocumentPosition : au.compareDocumentPosition(at) & 4) ? -1 : 1
                }
            } else {
                u = function(aB, aA) {
                    if (aB === aA) {
                        p = true;
                        return 0
                    } else {
                        if (aB.sourceIndex && aA.sourceIndex) {
                            return aB.sourceIndex - aA.sourceIndex
                        }
                    }
                    var ay, au, av = [],
                        at = [],
                        ax = aB.parentNode,
                        az = aA.parentNode,
                        aC = ax;
                    if (ax === az) {
                        return h(aB, aA)
                    } else {
                        if (!ax) {
                            return -1
                        } else {
                            if (!az) {
                                return 1
                            }
                        }
                    }
                    while (aC) {
                        av.unshift(aC);
                        aC = aC.parentNode
                    }
                    aC = az;
                    while (aC) {
                        at.unshift(aC);
                        aC = aC.parentNode
                    }
                    ay = av.length;
                    au = at.length;
                    for (var aw = 0; aw < ay && aw < au; aw++) {
                        if (av[aw] !== at[aw]) {
                            return h(av[aw], at[aw])
                        }
                    }
                    return aw === ay ? h(aB, at[aw], -1) : h(av[aw], aA, 1)
                };
                h = function(au, at, av) {
                    if (au === at) {
                        return av
                    }
                    var aw = au.nextSibling;
                    while (aw) {
                        if (aw === at) {
                            return -1
                        }
                        aw = aw.nextSibling
                    }
                    return 1
                }
            }
            ac.uniqueSort = function(au) {
                var av, at = 1;
                if (u) {
                    p = m;
                    au.sort(u);
                    if (p) {
                        for (;
                            (av = au[at]); at++) {
                            if (av === au[at - 1]) {
                                au.splice(at--, 1)
                            }
                        }
                    }
                }
                return au
            };

            function B(au, ay, ax, av) {
                var aw = 0,
                    at = ay.length;
                for (; aw < at; aw++) {
                    ac(au, ay[aw], ax, av)
                }
            }

            function X(at, av, az, aA, au, ay) {
                var aw, ax = V.setFilters[av.toLowerCase()];
                if (!ax) {
                    ac.error(av)
                }
                if (at || !(aw = au)) {
                    B(at || "*", aA, (aw = []), au)
                }
                return aw.length > 0 ? ax(aw, az, ay) : []
            }

            function af(aD, at, aB, av, aH) {
                var ay, au, ax, aJ, aA, aI, aC, aG, aE = 0,
                    aF = aH.length,
                    aw = T.POS,
                    az = new RegExp("^" + aw.source + "(?!" + O + ")", "i"),
                    aK = function() {
                        var aM = 1,
                            aL = arguments.length - 2;
                        for (; aM < aL; aM++) {
                            if (arguments[aM] === v) {
                                ay[aM] = v
                            }
                        }
                    };
                for (; aE < aF; aE++) {
                    aw.exec("");
                    aD = aH[aE];
                    aJ = [];
                    ax = 0;
                    aA = av;
                    while ((ay = aw.exec(aD))) {
                        aG = aw.lastIndex = ay.index + ay[0].length;
                        if (aG > ax) {
                            aC = aD.slice(ax, ay.index);
                            ax = aG;
                            aI = [at];
                            if (U.test(aC)) {
                                if (aA) {
                                    aI = aA
                                }
                                aA = av
                            }
                            if ((au = am.test(aC))) {
                                aC = aC.slice(0, -5).replace(U, "$&*")
                            }
                            if (ay.length > 1) {
                                ay[0].replace(az, aK)
                            }
                            aA = X(aC, ay[1], ay[2], aI, aA, au)
                        }
                    }
                    if (aA) {
                        aJ = aJ.concat(aA);
                        if ((aC = aD.slice(ax)) && aC !== ")") {
                            B(aC, aJ, aB, av)
                        } else {
                            ah.apply(aB, aJ)
                        }
                    } else {
                        ac(aD, at, aB, av)
                    }
                }
                return aF === 1 ? aB : ac.uniqueSort(aB)
            }

            function g(az, av, aC) {
                var aE, aD, aF, ax = [],
                    aA = 0,
                    aB = Y.exec(az),
                    au = !aB.pop() && !aB.pop(),
                    aG = au && az.match(I) || [""],
                    at = V.preFilter,
                    aw = V.filter,
                    ay = !aC && av !== l;
                for (;
                    (aD = aG[aA]) != null && au; aA++) {
                    ax.push(aE = []);
                    if (ay) {
                        aD = " " + aD
                    }
                    while (aD) {
                        au = false;
                        if ((aB = U.exec(aD))) {
                            aD = aD.slice(aB[0].length);
                            au = aE.push({
                                part: aB.pop().replace(aj, " "),
                                captures: aB
                            })
                        }
                        for (aF in aw) {
                            if ((aB = T[aF].exec(aD)) && (!at[aF] || (aB = at[aF](aB, av, aC)))) {
                                aD = aD.slice(aB.shift().length);
                                au = aE.push({
                                    part: aF,
                                    captures: aB
                                })
                            }
                        }
                        if (!au) {
                            break
                        }
                    }
                }
                if (!au) {
                    ac.error(az)
                }
                return ax
            }

            function M(ax, aw, av) {
                var at = aw.dir,
                    au = t++;
                if (!ax) {
                    ax = function(ay) {
                        return ay === av
                    }
                }
                return aw.first ? function(az, ay) {
                    while ((az = az[at])) {
                        if (az.nodeType === 1) {
                            return ax(az, ay) && az
                        }
                    }
                } : function(aA, az) {
                    var ay, aB = au + "." + D,
                        aC = aB + "." + ai;
                    while ((aA = aA[at])) {
                        if (aA.nodeType === 1) {
                            if ((ay = aA[al]) === aC) {
                                return false
                            } else {
                                if (typeof ay === "string" && ay.indexOf(aB) === 0) {
                                    if (aA.sizset) {
                                        return aA
                                    }
                                } else {
                                    aA[al] = aC;
                                    if (ax(aA, az)) {
                                        aA.sizset = true;
                                        return aA
                                    }
                                    aA.sizset = false
                                }
                            }
                        }
                    }
                }
            }

            function K(at, au) {
                return at ? function(ax, aw) {
                    var av = au(ax, aw);
                    return av && at(av === true ? ax : av, aw)
                } : au
            }

            function N(ay, aw, at) {
                var av, ax, au = 0;
                for (;
                    (av = ay[au]); au++) {
                    if (V.relative[av.part]) {
                        ax = M(ax, V.relative[av.part], aw)
                    } else {
                        av.captures.push(aw, at);
                        ax = K(ax, V.filter[av.part].apply(null, av.captures))
                    }
                }
                return ax
            }

            function j(at) {
                return function(aw, av) {
                    var ax, au = 0;
                    for (;
                        (ax = at[au]); au++) {
                        if (ax(aw, av)) {
                            return true
                        }
                    }
                    return false
                }
            }
            var q = ac.compile = function(at, aw, au) {
                var az, ay, av, ax = A[at];
                if (ax && ax.context === aw) {
                    ax.dirruns++;
                    return ax
                }
                ay = g(at, aw, au);
                for (av = 0;
                    (az = ay[av]); av++) {
                    ay[av] = N(az, aw, au)
                }
                ax = A[at] = j(ay);
                ax.context = aw;
                ax.runs = ax.dirruns = 0;
                J.push(at);
                if (J.length > V.cacheLength) {
                    delete A[J.shift()]
                }
                return ax
            };
            ac.matches = function(au, at) {
                return ac(au, null, null, at)
            };
            ac.matchesSelector = function(at, au) {
                return ac(au, null, null, [at]).length > 0
            };
            var ak = function(ax, au, az, aD, aC) {
                ax = ax.replace(aj, "$1");
                var at, aE, aA, aF, av, aw, aH, aI, ay, aB = ax.match(I),
                    aG = ax.match(ao),
                    aJ = au.nodeType;
                if (T.POS.test(ax)) {
                    return af(ax, au, az, aD, aB)
                }
                if (aD) {
                    at = y.call(aD, 0)
                } else {
                    if (aB && aB.length === 1) {
                        if (aG.length > 1 && aJ === 9 && !aC && (aB = T.ID.exec(aG[0]))) {
                            au = V.find.ID(aB[1], au, aC)[0];
                            if (!au) {
                                return az
                            }
                            ax = ax.slice(aG.shift().length)
                        }
                        aI = ((aB = ae.exec(aG[0])) && !aB.index && au.parentNode) || au;
                        ay = aG.pop();
                        aw = ay.split(":not")[0];
                        for (aA = 0, aF = V.order.length; aA < aF; aA++) {
                            aH = V.order[aA];
                            if ((aB = T[aH].exec(aw))) {
                                at = V.find[aH]((aB[1] || "").replace(H, ""), aI, aC);
                                if (at == null) {
                                    continue
                                }
                                if (aw === ay) {
                                    ax = ax.slice(0, ax.length - ay.length) + aw.replace(T[aH], "");
                                    if (!ax) {
                                        ah.apply(az, y.call(at, 0))
                                    }
                                }
                                break
                            }
                        }
                    }
                }
                if (ax) {
                    aE = q(ax, au, aC);
                    D = aE.dirruns;
                    if (at == null) {
                        at = V.find.TAG("*", (ae.test(ax) && au.parentNode) || au)
                    }
                    for (aA = 0;
                        (av = at[aA]); aA++) {
                        ai = aE.runs++;
                        if (aE(av, au)) {
                            az.push(av)
                        }
                    }
                }
                return az
            };
            if (l.querySelectorAll) {
                (function() {
                    var ay, az = ak,
                        ax = /'|\\/g,
                        av = /\=[\x20\t\r\n\f]*([^'"\]]*)[\x20\t\r\n\f]*\]/g,
                        au = [],
                        at = [":active"],
                        aw = o.matchesSelector || o.mozMatchesSelector || o.webkitMatchesSelector || o.oMatchesSelector || o.msMatchesSelector;
                    W(function(aA) {
                        aA.innerHTML = "<select><option selected></option></select>";
                        if (!aA.querySelectorAll("[selected]").length) {
                            au.push("\\[" + O + "*(?:checked|disabled|ismap|multiple|readonly|selected|value)")
                        }
                        if (!aA.querySelectorAll(":checked").length) {
                            au.push(":checked")
                        }
                    });
                    W(function(aA) {
                        aA.innerHTML = "<p test=''></p>";
                        if (aA.querySelectorAll("[test^='']").length) {
                            au.push("[*^$]=" + O + "*(?:\"\"|'')")
                        }
                        aA.innerHTML = "<input type='hidden'>";
                        if (!aA.querySelectorAll(":enabled").length) {
                            au.push(":enabled", ":disabled")
                        }
                    });
                    au = au.length && new RegExp(au.join("|"));
                    ak = function(aF, aB, aG, aI, aH) {
                        if (!aI && !aH && (!au || !au.test(aF))) {
                            if (aB.nodeType === 9) {
                                try {
                                    ah.apply(aG, y.call(aB.querySelectorAll(aF), 0));
                                    return aG
                                } catch (aE) {}
                            } else {
                                if (aB.nodeType === 1 && aB.nodeName.toLowerCase() !== "object") {
                                    var aD = aB.getAttribute("id"),
                                        aA = aD || al,
                                        aC = ae.test(aF) && aB.parentNode || aB;
                                    if (aD) {
                                        aA = aA.replace(ax, "\\$&")
                                    } else {
                                        aB.setAttribute("id", aA)
                                    }
                                    try {
                                        ah.apply(aG, y.call(aC.querySelectorAll(aF.replace(I, "[id='" + aA + "'] $&")), 0));
                                        return aG
                                    } catch (aE) {} finally {
                                        if (!aD) {
                                            aB.removeAttribute("id")
                                        }
                                    }
                                }
                            }
                        }
                        return az(aF, aB, aG, aI, aH)
                    };
                    if (aw) {
                        W(function(aB) {
                            ay = aw.call(aB, "div");
                            try {
                                aw.call(aB, "[test!='']:sizzle");
                                at.push(V.match.PSEUDO)
                            } catch (aA) {}
                        });
                        at = new RegExp(at.join("|"));
                        ac.matchesSelector = function(aB, aD) {
                            aD = aD.replace(av, "='$1']");
                            if (!z(aB) && !at.test(aD) && (!au || !au.test(aD))) {
                                try {
                                    var aA = aw.call(aB, aD);
                                    if (aA || ay || aB.document && aB.document.nodeType !== 11) {
                                        return aA
                                    }
                                } catch (aC) {}
                            }
                            return ac(aD, null, null, [aB]).length > 0
                        }
                    }
                })()
            }
            if (typeof c === "object" && c.exports) {
                c.exports = ac
            } else {
                ad.Sizzle = ac
            }
        })(window)
    }, {}],
    31: [function(b, c, a) {
        c.exports.EventEmitter = b("./ac-event-emitter/EventEmitter")
    }, {
        "./ac-event-emitter/EventEmitter": 32
    }],
    32: [function(d, c, f) {
        var h = "EventEmitter:propagation";
        var k = function(l) {
            if (l) {
                this.context = l
            }
        };
        var g = k.prototype;
        var i = function() {
            if (!this.hasOwnProperty("_events") && typeof this._events !== "object") {
                this._events = {}
            }
            return this._events
        };
        var a = function(m, o) {
            var p = m[0];
            var q = m[1];
            var n = m[2];
            if ((typeof p !== "string" && typeof p !== "object") || p === null || Array.isArray(p)) {
                throw new TypeError("Expecting event name to be a string or object.")
            }
            if ((typeof p === "string") && !q) {
                throw new Error("Expecting a callback function to be provided.")
            }
            if (q && (typeof q !== "function")) {
                if (typeof p === "object" && typeof q === "object") {
                    n = q
                } else {
                    throw new TypeError("Expecting callback to be a function.")
                }
            }
            if (typeof p === "object") {
                for (var l in p) {
                    o.call(this, l, p[l], n)
                }
            }
            if (typeof p === "string") {
                p = p.split(" ");
                p.forEach(function(r) {
                    o.call(this, r, q, n)
                }, this)
            }
        };
        var j = function(o, p) {
            var l;
            var m;
            var n;
            l = i.call(this)[o];
            if (!l || l.length === 0) {
                return
            }
            l = l.slice();
            this._stoppedImmediatePropagation = false;
            for (m = 0, n = l.length; m < n; m++) {
                if (this._stoppedImmediatePropagation || p(l[m], m)) {
                    break
                }
            }
        };
        var b = function(m, n, o) {
            var l = -1;
            j.call(this, n, function(q, p) {
                if (q.callback === o) {
                    l = p;
                    return true
                }
            });
            if (l === -1) {
                return
            }
            m[n].splice(l, 1)
        };
        g.on = function() {
            var l = i.call(this);
            a.call(this, arguments, function(n, o, m) {
                l[n] = l[n] || (l[n] = []);
                l[n].push({
                    callback: o,
                    context: m
                })
            });
            return this
        };
        g.once = function() {
            a.call(this, arguments, function(m, o, l) {
                var n = function(p) {
                    o.call(l || this, p);
                    this.off(m, n)
                };
                this.on(m, n, this)
            });
            return this
        };
        g.off = function(n, p) {
            var m = i.call(this);
            if (arguments.length === 0) {
                this._events = {}
            } else {
                if (!n || (typeof n !== "string" && typeof n !== "object") || Array.isArray(n)) {
                    throw new TypeError("Expecting event name to be a string or object.")
                }
            }
            if (typeof n === "object") {
                for (var o in n) {
                    b.call(this, m, o, n[o])
                }
            }
            if (typeof n === "string") {
                var l = n.split(" ");
                if (l.length === 1) {
                    if (p) {
                        b.call(this, m, n, p)
                    } else {
                        m[n] = []
                    }
                } else {
                    l.forEach(function(q) {
                        m[q] = []
                    })
                }
            }
            return this
        };
        g.trigger = function(m, n, l) {
            if (!m) {
                throw new Error("trigger method requires an event name")
            }
            if (typeof m !== "string") {
                throw new TypeError("Expecting event names to be a string.")
            }
            if (l && typeof l !== "boolean") {
                throw new TypeError("Expecting doNotPropagate to be a boolean.")
            }
            m = m.split(" ");
            m.forEach(function(o) {
                j.call(this, o, function(p) {
                    p.callback.call(p.context || this.context || this, n)
                }.bind(this));
                if (!l) {
                    j.call(this, h, function(q) {
                        var p = o;
                        if (q.prefix) {
                            p = q.prefix + p
                        }
                        q.emitter.trigger(p, n)
                    })
                }
            }, this);
            return this
        };
        g.propagateTo = function(m, n) {
            var l = i.call(this);
            if (!l[h]) {
                this._events[h] = []
            }
            l[h].push({
                emitter: m,
                prefix: n
            })
        };
        g.stopPropagatingTo = function(o) {
            var m = i.call(this);
            if (!o) {
                m[h] = [];
                return
            }
            var p = m[h];
            var n = p.length;
            var l;
            for (l = 0; l < n; l++) {
                if (p[l].emitter === o) {
                    p.splice(l, 1);
                    break
                }
            }
        };
        g.stopImmediatePropagation = function() {
            this._stoppedImmediatePropagation = true
        };
        g.has = function(l, s, p) {
            var o = i.call(this);
            var m = o[l];
            if (arguments.length === 0) {
                return Object.keys(o)
            }
            if (!m) {
                return false
            }
            if (!s) {
                return (m.length > 0) ? true : false
            }
            for (var n = 0, q = m.length; n < q; n++) {
                var r = m[n];
                if (p && s && r.context === p && r.callback === s) {
                    return true
                } else {
                    if (s && !p && r.callback === s) {
                        return true
                    }
                }
            }
            return false
        };
        c.exports = k
    }, {}],
    33: [function(b, c, a) {
        c.exports = {
            DOMEmitter: b("./ac-dom-emitter/DOMEmitter")
        }
    }, {
        "./ac-dom-emitter/DOMEmitter": 34
    }],
    34: [function(c, b, d) {
        var f;
        var k = c("ac-event-emitter").EventEmitter,
            j = c("./DOMEmitterEvent"),
            g = c("ac-dom-events"),
            a = c("ac-dom-traversal");
        var i = "dom-emitter";

        function h(l) {
            if (l === null) {
                return
            }
            this.el = l;
            this._bindings = {};
            this._delegateFuncs = {};
            this._eventEmitter = new k()
        }
        f = h.prototype;
        f.on = function() {
            this._normalizeArgumentsAndCall(Array.prototype.slice.call(arguments, 0), this._on);
            return this
        };
        f.once = function() {
            this._normalizeArgumentsAndCall(Array.prototype.slice.call(arguments, 0), this._once);
            return this
        };
        f.off = function() {
            this._normalizeArgumentsAndCall(Array.prototype.slice.call(arguments, 0), this._off);
            return this
        };
        f.has = function(l, q, p, n) {
            var o, r;
            if (typeof q === "string") {
                o = q;
                r = p
            } else {
                r = q;
                n = p
            }
            if (o) {
                var m = this._getDelegateFuncBindingIdx(l, o, r, n, true);
                if (m > -1) {
                    return true
                }
                return false
            }
            if (this._eventEmitter && this._eventEmitter.has.apply(this._eventEmitter, arguments)) {
                return true
            }
            return false
        };
        f.trigger = function(n, m, o, s) {
            n = this._parseEventNames(n);
            n = this._cleanStringData(n);
            var q, r, p, l = n.length;
            if (typeof m === "string") {
                q = this._cleanStringData(m);
                r = o
            } else {
                r = m;
                s = o
            }
            for (p = 0; p < l; p++) {
                this._triggerDOMEvents(n[p], r, q)
            }
            return this
        };
        f.emitterTrigger = function(m, o, p) {
            if (!this._eventEmitter) {
                return this
            }
            m = this._parseEventNames(m);
            m = this._cleanStringData(m);
            o = new j(o, this);
            var n, l = m.length;
            for (n = 0; n < l; n++) {
                this._eventEmitter.trigger(m[n], o, p)
            }
            return this
        };
        f.propagateTo = function(l, m) {
            this._eventEmitter.propagateTo(l, m);
            return this
        };
        f.stopPropagatingTo = function(l) {
            this._eventEmitter.stopPropagatingTo(l);
            return this
        };
        f.stopImmediatePropagation = function() {
            this._eventEmitter.stopImmediatePropagation();
            return this
        };
        f.destroy = function() {
            this._triggerInternalEvent("willdestroy");
            this.off();
            var l;
            for (l in this) {
                if (this.hasOwnProperty(l)) {
                    this[l] = null
                }
            }
        };
        f._parseEventNames = function(l) {
            if (!l) {
                return [l]
            }
            return l.split(" ")
        };
        f._onListenerEvent = function(n, m) {
            var l = new j(m, this);
            this._eventEmitter.trigger(n, l, false)
        };
        f._setListener = function(l) {
            this._bindings[l] = this._onListenerEvent.bind(this, l);
            g.addEventListener(this.el, l, this._bindings[l])
        };
        f._removeListener = function(l) {
            g.removeEventListener(this.el, l, this._bindings[l]);
            this._bindings[l] = null
        };
        f._triggerInternalEvent = function(l, m) {
            this.emitterTrigger(i + ":" + l, m)
        };
        f._normalizeArgumentsAndCall = function(l, n) {
            var r = {};
            if (l.length === 0) {
                n.call(this, r);
                return
            }
            if (typeof l[0] === "string" || l[0] === null) {
                l = this._cleanStringData(l);
                r.events = l[0];
                if (typeof l[1] === "string") {
                    r.delegateQuery = l[1];
                    r.callback = l[2];
                    r.context = l[3]
                } else {
                    r.callback = l[1];
                    r.context = l[2]
                }
                n.call(this, r);
                return
            }
            var m, p, q = ":",
                o = l[0];
            for (m in o) {
                if (o.hasOwnProperty(m)) {
                    r = {};
                    p = this._cleanStringData(m.split(q));
                    r.events = p[0];
                    r.delegateQuery = p[1];
                    r.callback = o[m];
                    r.context = l[1];
                    n.call(this, r)
                }
            }
        };
        f._registerDelegateFunc = function(n, p, q, l, o) {
            var m = this._delegateFunc.bind(this, n, p, q, o);
            this._delegateFuncs[p] = this._delegateFuncs[p] || {};
            this._delegateFuncs[p][n] = this._delegateFuncs[p][n] || [];
            this._delegateFuncs[p][n].push({
                func: l,
                context: o,
                delegateFunc: m
            });
            return m
        };
        f._cleanStringData = function(o) {
            var n = false;
            if (typeof o === "string") {
                o = [o];
                n = true
            }
            var m = [],
                q, s, r, p, l = o.length;
            for (q = 0; q < l; q++) {
                s = o[q];
                if (typeof s === "string") {
                    if (s === "" || s === " ") {
                        continue
                    }
                    r = s.length;
                    while (s[0] === " ") {
                        s = s.slice(1, r);
                        r--
                    }
                    while (s[r - 1] === " ") {
                        s = s.slice(0, r - 1);
                        r--
                    }
                }
                m.push(s)
            }
            if (n) {
                return m[0]
            }
            return m
        };
        f._unregisterDelegateFunc = function(n, q, l, p) {
            if (!this._delegateFuncs[q] || !this._delegateFuncs[q][n]) {
                return
            }
            var o = this._getDelegateFuncBindingIdx(n, q, l, p),
                m;
            if (o > -1) {
                m = this._delegateFuncs[q][n][o].delegateFunc;
                this._delegateFuncs[q][n].splice(o, 1);
                if (this._delegateFuncs[q][n].length === 0) {
                    this._delegateFuncs[q][n] = null
                }
            }
            return m
        };
        f._unregisterDelegateFuncs = function(l, n) {
            if (!this._delegateFuncs[n]) {
                return
            }
            if (l !== null && !this._delegateFuncs[n][l]) {
                return
            }
            if (l === null) {
                var m;
                for (m in this._delegateFuncs[n]) {
                    if (this._delegateFuncs[n].hasOwnProperty(m)) {
                        this._unbindDelegateFunc(m, n)
                    }
                }
                return
            }
            this._unbindDelegateFunc(l, n)
        };
        f._unbindDelegateFunc = function(l, n) {
            var o, p, m = 0;
            while (this._delegateFuncs[n][l] && this._delegateFuncs[n][l][m]) {
                o = this._delegateFuncs[n][l][m];
                p = this._delegateFuncs[n][l][m].length;
                this._off({
                    events: l,
                    delegateQuery: n,
                    callback: o.func,
                    context: o.context
                });
                if (this._delegateFuncs[n][l] && p === this._delegateFuncs[n][l].length) {
                    m++
                }
            }
            o = p = null
        };
        f._unregisterDelegateFuncsByEvent = function(l) {
            var m;
            for (m in this._delegateFuncs) {
                if (this._delegateFuncs.hasOwnProperty(m)) {
                    this._unregisterDelegateFuncs(l, m)
                }
            }
        };
        f._delegateFunc = function(l, p, r, n, q) {
            if (this._targetHasDelegateAncestor(q.target, p)) {
                var m = Array.prototype.slice.call(arguments, 0),
                    o = m.slice(4, m.length);
                n = n || window;
                if (typeof q.detail === "object") {
                    o[0] = q.detail
                }
                r.apply(n, o)
            }
        };
        f._targetHasDelegateAncestor = function(n, m) {
            var l = n;
            while (l && l !== this.el && l !== document.documentElement) {
                if (a.matchesSelector(l, m)) {
                    return true
                }
                l = l.parentNode
            }
            return false
        };
        f._on = function(p) {
            var m = p.events,
                q = p.callback,
                o = p.delegateQuery,
                n = p.context,
                l = p.unboundCallback || q;
            m = this._parseEventNames(m);
            m.forEach(function(v, r, t, u, s) {
                if (!this.has(s)) {
                    this._setListener(s)
                }
                if (typeof u === "string") {
                    v = this._registerDelegateFunc(s, u, v, r, t)
                }
                this._triggerInternalEvent("willon", {
                    evt: s,
                    callback: v,
                    context: t,
                    delegateQuery: u
                });
                this._eventEmitter.on(s, v, t);
                this._triggerInternalEvent("didon", {
                    evt: s,
                    callback: v,
                    context: t,
                    delegateQuery: u
                })
            }.bind(this, q, l, n, o));
            m = q = l = o = n = null
        };
        f._off = function(q) {
            var m = q.events,
                r = q.callback,
                p = q.delegateQuery,
                o = q.context,
                l = q.unboundCallback || r;
            if (typeof m === "undefined") {
                this._eventEmitter.off();
                var n;
                for (n in this._bindings) {
                    if (this._bindings.hasOwnProperty(n)) {
                        this._removeListener(n)
                    }
                }
                for (n in this._delegateFuncs) {
                    if (this._delegateFuncs.hasOwnProperty(n)) {
                        this._delegateFuncs[n] = null
                    }
                }
                return
            }
            m = this._parseEventNames(m);
            m.forEach(function(w, s, u, v, t) {
                if (typeof v === "string" && typeof s === "function") {
                    w = this._unregisterDelegateFunc(t, v, s, u);
                    if (!w) {
                        return
                    }
                }
                if (typeof v === "string" && typeof w === "undefined") {
                    this._unregisterDelegateFuncs(t, v);
                    return
                }
                if (typeof t === "string" && typeof w === "undefined") {
                    this._unregisterDelegateFuncsByEvent(t);
                    if (typeof v === "string") {
                        return
                    }
                }
                this._triggerInternalEvent("willoff", {
                    evt: t,
                    callback: w,
                    context: u,
                    delegateQuery: v
                });
                this._eventEmitter.off(t, w, u);
                this._triggerInternalEvent("didoff", {
                    evt: t,
                    callback: w,
                    context: u,
                    delegateQuery: v
                });
                if (!this.has(t)) {
                    this._removeListener(t)
                }
            }.bind(this, r, l, o, p));
            m = r = l = p = o = null
        };
        f._once = function(o) {
            var l = o.events,
                p = o.callback,
                n = o.delegateQuery,
                m = o.context;
            l = this._parseEventNames(l);
            l.forEach(function(t, r, s, q) {
                if (typeof s === "string") {
                    return this._handleDelegateOnce(q, t, r, s)
                }
                if (!this.has(q)) {
                    this._setListener(q)
                }
                this._triggerInternalEvent("willonce", {
                    evt: q,
                    callback: t,
                    context: r,
                    delegateQuery: s
                });
                this._eventEmitter.once.call(this, q, t, r);
                this._triggerInternalEvent("didonce", {
                    evt: q,
                    callback: t,
                    context: r,
                    delegateQuery: s
                })
            }.bind(this, p, m, n));
            l = p = n = m = null
        };
        f._handleDelegateOnce = function(l, o, m, n) {
            this._triggerInternalEvent("willonce", {
                evt: l,
                callback: o,
                context: m,
                delegateQuery: n
            });
            this._on({
                events: l,
                context: m,
                delegateQuery: n,
                callback: this._getDelegateOnceCallback.bind(this, l, o, m, n),
                unboundCallback: o
            });
            this._triggerInternalEvent("didonce", {
                evt: l,
                callback: o,
                context: m,
                delegateQuery: n
            });
            return this
        };
        f._getDelegateOnceCallback = function(l, q, n, p) {
            var m = Array.prototype.slice.call(arguments, 0),
                o = m.slice(4, m.length);
            q.apply(n, o);
            this._off({
                events: l,
                delegateQuery: p,
                callback: q,
                context: n
            })
        };
        f._getDelegateFuncBindingIdx = function(s, p, n, l, t) {
            var r = -1;
            if (this._delegateFuncs[p] && this._delegateFuncs[p][s]) {
                var o, m, q = this._delegateFuncs[p][s].length;
                for (o = 0; o < q; o++) {
                    m = this._delegateFuncs[p][s][o];
                    if (t && typeof n === "undefined") {
                        n = m.func
                    }
                    if (m.func === n && m.context === l) {
                        r = o;
                        break
                    }
                }
            }
            return r
        };
        f._triggerDOMEvents = function(n, q, p) {
            var m = [this.el];
            if (p) {
                m = a.querySelectorAll(p, this.el)
            }
            var o, r, l = m.length;
            for (o = 0; o < l; o++) {
                g.dispatchEvent(m[o], n, {
                    bubbles: true,
                    cancelable: true,
                    detail: q
                })
            }
        };
        b.exports = h
    }, {
        "./DOMEmitterEvent": 35,
        "ac-dom-events": 4,
        "ac-dom-traversal": 12,
        "ac-event-emitter": 31
    }],
    35: [function(b, c, a) {
        var f = b("ac-dom-events");
        var d;
        var g = function(i, h) {
            this._domEmitter = h;
            this.originalEvent = i || {};
            this._originalTarget = f.target(this.originalEvent);
            this.target = this._originalTarget || this._domEmitter.el;
            this.currentTarget = this._domEmitter.el;
            this.timeStamp = this.originalEvent.timeStamp || Date.now();
            if (this._isDOMEvent(this.originalEvent)) {
                if (typeof this.originalEvent.detail === "object") {
                    this.data = this.originalEvent.detail
                }
            } else {
                if (i) {
                    this.data = this.originalEvent;
                    this.originalEvent = {}
                }
            }
        };
        d = g.prototype;
        d.preventDefault = function() {
            f.preventDefault(this.originalEvent)
        };
        d.stopPropagation = function() {
            f.stopPropagation(this.originalEvent)
        };
        d.stopImmediatePropagation = function() {
            if (this.originalEvent.stopImmediatePropagation) {
                this.originalEvent.stopImmediatePropagation()
            }
            this._domEmitter.stopImmediatePropagation()
        };
        d._isDOMEvent = function(h) {
            if (this._originalTarget || (document.createEvent !== "undefined" && typeof CustomEvent !== "undefined" && h instanceof CustomEvent)) {
                return true
            }
            return false
        };
        c.exports = g
    }, {
        "ac-dom-events": 4
    }],
    36: [function(b, c, a) {
        c.exports = 8
    }, {}],
    37: [function(b, c, a) {
        c.exports = 11
    }, {}],
    38: [function(b, c, a) {
        c.exports = 9
    }, {}],
    39: [function(b, c, a) {
        c.exports = 10
    }, {}],
    40: [function(b, c, a) {
        c.exports = 1
    }, {}],
    41: [function(b, c, a) {
        c.exports = 3
    }, {}],
    42: [function(c, d, b) {
        d.exports = function a(g) {
            var f = document.createDocumentFragment();
            var h;
            if (g) {
                h = document.createElement("div");
                h.innerHTML = g;
                while (h.firstChild) {
                    f.appendChild(h.firstChild)
                }
            }
            return f
        }
    }, {}],
    43: [function(d, f, c) {
        d("ac-polyfills/Array/prototype.slice");
        d("ac-polyfills/Array/prototype.filter");
        var g = d("./internal/isNodeType");
        var a = d("./ELEMENT_NODE");
        f.exports = function b(i, h) {
            h = h || a;
            i = Array.prototype.slice.call(i);
            return i.filter(function(j) {
                return g(j, h)
            })
        }
    }, {
        "./ELEMENT_NODE": 40,
        "./internal/isNodeType": 50,
        "ac-polyfills/Array/prototype.filter": 93,
        "ac-polyfills/Array/prototype.slice": 94
    }],
    44: [function(c, d, a) {
        d.exports = function b(g, f) {
            if ("hasAttribute" in g) {
                return g.hasAttribute(f)
            }
            return (g.attributes.getNamedItem(f) !== null)
        }
    }, {}],
    45: [function(b, c, a) {
        c.exports = {
            createDocumentFragment: b("./createDocumentFragment"),
            filterByNodeType: b("./filterByNodeType"),
            hasAttribute: b("./hasAttribute"),
            insertAfter: b("./insertAfter"),
            insertBefore: b("./insertBefore"),
            insertFirstChild: b("./insertFirstChild"),
            insertLastChild: b("./insertLastChild"),
            isComment: b("./isComment"),
            isDocument: b("./isDocument"),
            isDocumentFragment: b("./isDocumentFragment"),
            isDocumentType: b("./isDocumentType"),
            isElement: b("./isElement"),
            isNode: b("./isNode"),
            isNodeList: b("./isNodeList"),
            isTextNode: b("./isTextNode"),
            remove: b("./remove"),
            replace: b("./replace"),
            COMMENT_NODE: b("./COMMENT_NODE"),
            DOCUMENT_FRAGMENT_NODE: b("./DOCUMENT_FRAGMENT_NODE"),
            DOCUMENT_NODE: b("./DOCUMENT_NODE"),
            DOCUMENT_TYPE_NODE: b("./DOCUMENT_TYPE_NODE"),
            ELEMENT_NODE: b("./ELEMENT_NODE"),
            TEXT_NODE: b("./TEXT_NODE")
        }
    }, {
        "./COMMENT_NODE": 36,
        "./DOCUMENT_FRAGMENT_NODE": 37,
        "./DOCUMENT_NODE": 38,
        "./DOCUMENT_TYPE_NODE": 39,
        "./ELEMENT_NODE": 40,
        "./TEXT_NODE": 41,
        "./createDocumentFragment": 42,
        "./filterByNodeType": 43,
        "./hasAttribute": 44,
        "./insertAfter": 46,
        "./insertBefore": 47,
        "./insertFirstChild": 48,
        "./insertLastChild": 49,
        "./isComment": 52,
        "./isDocument": 53,
        "./isDocumentFragment": 54,
        "./isDocumentType": 55,
        "./isElement": 56,
        "./isNode": 57,
        "./isNodeList": 58,
        "./isTextNode": 59,
        "./remove": 60,
        "./replace": 61
    }],
    46: [function(b, c, a) {
        var f = b("./internal/validate");
        c.exports = function d(g, h) {
            f.insertNode(g, true, "insertAfter");
            f.childNode(h, true, "insertAfter");
            f.hasParentNode(h, "insertAfter");
            if (!h.nextSibling) {
                return h.parentNode.appendChild(g)
            }
            return h.parentNode.insertBefore(g, h.nextSibling)
        }
    }, {
        "./internal/validate": 51
    }],
    47: [function(c, d, a) {
        var f = c("./internal/validate");
        d.exports = function b(g, h) {
            f.insertNode(g, true, "insertBefore");
            f.childNode(h, true, "insertBefore");
            f.hasParentNode(h, "insertBefore");
            return h.parentNode.insertBefore(g, h)
        }
    }, {
        "./internal/validate": 51
    }],
    48: [function(c, d, b) {
        var f = c("./internal/validate");
        d.exports = function a(g, h) {
            f.insertNode(g, true, "insertFirstChild");
            f.parentNode(h, true, "insertFirstChild");
            if (!h.firstChild) {
                return h.appendChild(g)
            }
            return h.insertBefore(g, h.firstChild)
        }
    }, {
        "./internal/validate": 51
    }],
    49: [function(b, c, a) {
        var d = b("./internal/validate");
        c.exports = function f(g, h) {
            d.insertNode(g, true, "insertLastChild");
            d.parentNode(h, true, "insertLastChild");
            return h.appendChild(g)
        }
    }, {
        "./internal/validate": 51
    }],
    50: [function(b, c, a) {
        var d = b("../isNode");
        c.exports = function f(h, g) {
            if (!d(h)) {
                return false
            }
            if (typeof g === "number") {
                return (h.nodeType === g)
            }
            return (g.indexOf(h.nodeType) !== -1)
        }
    }, {
        "../isNode": 57
    }],
    51: [function(g, d, j) {
        var b = g("./isNodeType");
        var c = g("../COMMENT_NODE");
        var k = g("../DOCUMENT_FRAGMENT_NODE");
        var i = g("../ELEMENT_NODE");
        var h = g("../TEXT_NODE");
        var m = [i, h, c, k];
        var f = " must be an Element, TextNode, Comment, or Document Fragment";
        var p = [i, h, c];
        var l = " must be an Element, TextNode, or Comment";
        var n = [i, k];
        var o = " must be an Element, or Document Fragment";
        var a = " must have a parentNode";
        d.exports = {
            parentNode: function(q, t, s, r) {
                r = r || "target";
                if ((q || t) && !b(q, n)) {
                    throw new TypeError(s + ": " + r + o)
                }
            },
            childNode: function(q, t, s, r) {
                r = r || "target";
                if (!q && !t) {
                    return
                }
                if (!b(q, p)) {
                    throw new TypeError(s + ": " + r + l)
                }
            },
            insertNode: function(q, t, s, r) {
                r = r || "node";
                if (!q && !t) {
                    return
                }
                if (!b(q, m)) {
                    throw new TypeError(s + ": " + r + f)
                }
            },
            hasParentNode: function(q, s, r) {
                r = r || "target";
                if (!q.parentNode) {
                    throw new TypeError(s + ": " + r + a)
                }
            }
        }
    }, {
        "../COMMENT_NODE": 36,
        "../DOCUMENT_FRAGMENT_NODE": 37,
        "../ELEMENT_NODE": 40,
        "../TEXT_NODE": 41,
        "./isNodeType": 50
    }],
    52: [function(c, d, a) {
        var g = c("./internal/isNodeType");
        var f = c("./COMMENT_NODE");
        d.exports = function b(h) {
            return g(h, f)
        }
    }, {
        "./COMMENT_NODE": 36,
        "./internal/isNodeType": 50
    }],
    53: [function(c, d, b) {
        var g = c("./internal/isNodeType");
        var a = c("./DOCUMENT_NODE");
        d.exports = function f(h) {
            return g(h, a)
        }
    }, {
        "./DOCUMENT_NODE": 38,
        "./internal/isNodeType": 50
    }],
    54: [function(c, d, b) {
        var g = c("./internal/isNodeType");
        var a = c("./DOCUMENT_FRAGMENT_NODE");
        d.exports = function f(h) {
            return g(h, a)
        }
    }, {
        "./DOCUMENT_FRAGMENT_NODE": 37,
        "./internal/isNodeType": 50
    }],
    55: [function(b, c, a) {
        var g = b("./internal/isNodeType");
        var f = b("./DOCUMENT_TYPE_NODE");
        c.exports = function d(h) {
            return g(h, f)
        }
    }, {
        "./DOCUMENT_TYPE_NODE": 39,
        "./internal/isNodeType": 50
    }],
    56: [function(c, d, b) {
        var g = c("./internal/isNodeType");
        var a = c("./ELEMENT_NODE");
        d.exports = function f(h) {
            return g(h, a)
        }
    }, {
        "./ELEMENT_NODE": 40,
        "./internal/isNodeType": 50
    }],
    57: [function(b, c, a) {
        c.exports = function d(f) {
            return !!(f && f.nodeType)
        }
    }, {}],
    58: [function(c, d, b) {
        var f = /^\[object (HTMLCollection|NodeList|Object)\]$/;
        d.exports = function a(g) {
            if (!g) {
                return false
            }
            if (typeof g.length !== "number") {
                return false
            }
            if (typeof g[0] === "object" && (!g[0] || !g[0].nodeType)) {
                return false
            }
            return f.test(Object.prototype.toString.call(g))
        }
    }, {}],
    59: [function(c, d, a) {
        var g = c("./internal/isNodeType");
        var b = c("./TEXT_NODE");
        d.exports = function f(h) {
            return g(h, b)
        }
    }, {
        "./TEXT_NODE": 41,
        "./internal/isNodeType": 50
    }],
    60: [function(c, d, b) {
        var f = c("./internal/validate");
        d.exports = function a(g) {
            f.childNode(g, true, "remove");
            if (!g.parentNode) {
                return g
            }
            return g.parentNode.removeChild(g)
        }
    }, {
        "./internal/validate": 51
    }],
    61: [function(b, d, a) {
        var f = b("./internal/validate");
        d.exports = function c(g, h) {
            f.insertNode(g, true, "insertFirstChild", "newNode");
            f.childNode(h, true, "insertFirstChild", "oldNode");
            f.hasParentNode(h, "insertFirstChild", "oldNode");
            return h.parentNode.replaceChild(g, h)
        }
    }, {
        "./internal/validate": 51
    }],
    62: [function(b, c, a) {
        c.exports = {
            flatten: b("./ac-array/flatten"),
            intersection: b("./ac-array/intersection"),
            toArray: b("./ac-array/toArray"),
            union: b("./ac-array/union"),
            unique: b("./ac-array/unique"),
            without: b("./ac-array/without")
        }
    }, {
        "./ac-array/flatten": 63,
        "./ac-array/intersection": 64,
        "./ac-array/toArray": 65,
        "./ac-array/union": 66,
        "./ac-array/unique": 67,
        "./ac-array/without": 68
    }],
    63: [function(b, c, a) {
        c.exports = function d(h) {
            var f = [];
            var g = function(i) {
                if (Array.isArray(i)) {
                    i.forEach(g)
                } else {
                    f.push(i)
                }
            };
            h.forEach(g);
            return f
        }
    }, {}],
    64: [function(b, c, a) {
        c.exports = function d(n) {
            if (!n) {
                return []
            }
            var m = arguments.length;
            var k = 0;
            var g = n.length;
            var f = [];
            var l;
            for (k; k < g; k++) {
                l = n[k];
                if (f.indexOf(l) > -1) {
                    continue
                }
                for (var h = 1; h < m; h++) {
                    if (arguments[h].indexOf(l) < 0) {
                        break
                    }
                }
                if (h === m) {
                    f.push(l)
                }
            }
            return f
        }
    }, {}],
    65: [function(b, d, a) {
        d.exports = function c(f) {
            return Array.prototype.slice.call(f)
        }
    }, {}],
    66: [function(b, c, a) {
        var g = b("./flatten");
        var f = b("./unique");
        c.exports = function d(h) {
            return f(g(Array.prototype.slice.call(arguments)))
        }
    }, {
        "./flatten": 63,
        "./unique": 67
    }],
    67: [function(b, c, a) {
        c.exports = function d(g) {
            var f = function(h, i) {
                if (h.indexOf(i) < 0) {
                    h.push(i)
                }
                return h
            };
            return g.reduce(f, [])
        }
    }, {}],
    68: [function(b, d, a) {
        d.exports = function c(f, n, m) {
            var k;
            var h = f.indexOf(n);
            var l = f.length;
            if (h >= 0) {
                if (m) {
                    k = f.slice(0, l);
                    var j, g = 0;
                    for (j = h; j < l; j++) {
                        if (f[j] === n) {
                            k.splice(j - g, 1);
                            g++
                        }
                    }
                } else {
                    if (h === (l - 1)) {
                        k = f.slice(0, (l - 1))
                    } else {
                        if (h === 0) {
                            k = f.slice(1)
                        } else {
                            k = f.slice(0, h);
                            k = k.concat(f.slice(h + 1))
                        }
                    }
                }
            } else {
                return f
            }
            return k
        }
    }, {}],
    69: [function(b, c, a) {
        c.exports.DOMEmitter = b("./ac-dom-emitter/DOMEmitter")
    }, {
        "./ac-dom-emitter/DOMEmitter": 70
    }],
    70: [function(b, c, a) {
        var g;
        var f = b("ac-event-emitter").EventEmitter;
        var d = "dom-emitter";

        function h(i) {
            if (i === null) {
                return
            }
            this.el = i;
            this._bindings = {};
            this._eventEmitter = new f()
        }
        g = h.prototype;
        g._parseEventNames = function(i) {
            if (!i) {
                return [i]
            }
            return i.split(" ")
        };
        g._onListenerEvent = function(j, i) {
            this.trigger(j, i, false)
        };
        g._setListener = function(i) {
            this._bindings[i] = this._onListenerEvent.bind(this, i);
            this._addEventListener(i, this._bindings[i])
        };
        g._removeListener = function(i) {
            this._removeEventListener(i, this._bindings[i]);
            delete this._bindings[i]
        };
        g._addEventListener = function(j, k, i) {
            if (this.el.addEventListener) {
                this.el.addEventListener(j, k, i)
            } else {
                if (this.el.attachEvent) {
                    this.el.attachEvent("on" + j, k)
                } else {
                    target["on" + j] = k
                }
            }
            return this
        };
        g._removeEventListener = function(j, k, i) {
            if (this.el.removeEventListener) {
                this.el.removeEventListener(j, k, i)
            } else {
                this.el.detachEvent("on" + j, k)
            }
            return this
        };
        g._triggerInternalEvent = function(i, j) {
            this.trigger(d + ":" + i, j)
        };
        g.on = function(i, k, j) {
            i = this._parseEventNames(i);
            i.forEach(function(n, m, l) {
                if (!this.has(l)) {
                    this._setListener(l)
                }
                this._triggerInternalEvent("willon", {
                    evt: l,
                    callback: n,
                    context: m
                });
                this._eventEmitter.on(l, n, m);
                this._triggerInternalEvent("didon", {
                    evt: l,
                    callback: n,
                    context: m
                })
            }.bind(this, k, j));
            return this
        };
        g.off = function(i, l, k) {
            var j = Array.prototype.slice.call(arguments, 0);
            i = this._parseEventNames(i);
            i.forEach(function(q, p, n, m) {
                if (n.length === 0) {
                    this._eventEmitter.off();
                    var o;
                    for (o in this._bindings) {
                        if (this._bindings.hasOwnProperty(o)) {
                            this._removeListener(o)
                        }
                    }
                    return
                }
                this._triggerInternalEvent("willoff", {
                    evt: m,
                    callback: q,
                    context: p
                });
                this._eventEmitter.off(m, q, p);
                this._triggerInternalEvent("didoff", {
                    evt: m,
                    callback: q,
                    context: p
                });
                if (!this.has(m)) {
                    this._removeListener(m)
                }
            }.bind(this, l, k, j));
            return this
        };
        g.once = function(i, k, j) {
            i = this._parseEventNames(i);
            i.forEach(function(n, m, l) {
                if (!this.has(l)) {
                    this._setListener(l)
                }
                this._triggerInternalEvent("willonce", {
                    evt: l,
                    callback: n,
                    context: m
                });
                this._eventEmitter.once.call(this, l, n, m);
                this._triggerInternalEvent("didonce", {
                    evt: l,
                    callback: n,
                    context: m
                })
            }.bind(this, k, j));
            return this
        };
        g.has = function(i, k, j) {
            if (this._eventEmitter && this._eventEmitter.has.apply(this._eventEmitter, arguments)) {
                return true
            }
            return false
        };
        g.trigger = function(i, j, k) {
            i = this._parseEventNames(i);
            i.forEach(function(m, n, l) {
                this._eventEmitter.trigger(l, m, n)
            }.bind(this, j, k));
            return this
        };
        g.destroy = function() {
            this._triggerInternalEvent("willdestroy");
            this.off();
            this.el = this._eventEmitter = this._bindings = null
        };
        c.exports = h
    }, {
        "ac-event-emitter": 76
    }],
    71: [function(c, d, b) {
        var a = c("./ac-dom-styles/vendorTransformHelper");
        var f = {};
        f.setStyle = function(h, i) {
            var g;
            var j;
            var k;
            if ((typeof i !== "string" && typeof i !== "object") || Array.isArray(i)) {
                throw new TypeError("styles argument must be either an object or a string")
            }
            g = f.setStyle.__explodeStyleStringToObject(i);
            for (k in g) {
                if (g.hasOwnProperty(k)) {
                    j = k.replace(/-(\w)/g, f.setStyle.__camelCaseReplace);
                    f.setStyle.__setStyle(h, j, g, g[k])
                }
            }
            return h
        };
        f.setStyle.__explodeStyleStringToObject = function(l) {
            var j = (typeof l === "object") ? l : {};
            var m;
            var k;
            var g;
            var h;
            if (typeof l === "string") {
                m = l.split(";");
                g = m.length;
                for (h = 0; h < g; h += 1) {
                    k = m[h].indexOf(":");
                    if (k > 0) {
                        j[m[h].substr(0, k).trim()] = m[h].substr(k + 1).trim()
                    }
                }
            }
            return j
        };
        f.setStyle.__setStyle = function(i, j, h, g) {
            if (typeof i.style[j] !== "undefined") {
                i.style[j] = g
            }
        };
        f.setStyle.__camelCaseReplace = function(h, i, j, g) {
            return (j === 0) && (g.substr(1, 3) !== "moz") ? i : i.toUpperCase()
        };
        f.getStyle = function(h, j, g) {
            var i;
            j = j.replace(/-(\w)/g, f.setStyle.__camelCaseReplace);
            j = (j === "float") ? "cssFloat" : j;
            g = g || window.getComputedStyle(h, null);
            i = g ? g[j] : null;
            if (j === "opacity") {
                return i ? parseFloat(i) : 1
            }
            return i === "auto" ? null : i
        };
        f.setVendorPrefixStyle = function(g, j, i) {
            if (typeof j !== "string") {
                throw new TypeError("ac-dom-styles.setVendorPrefixStyle: property must be a string")
            }
            if (typeof i !== "string" && typeof i !== "number") {
                throw new TypeError("ac-dom-styles.setVendorPrefixStyle: value must be a string or a number")
            }
            var h = ["", "webkit", "Moz", "ms", "O"];
            var l;
            var k;
            i += "";
            j = j.replace(/-(webkit|moz|ms|o)-/i, "");
            j = j.replace(/^(webkit|Moz|ms|O)/, "");
            j = j.charAt(0).toLowerCase() + j.slice(1);
            j = j.replace(/-(\w)/, function(m, n) {
                return n.toUpperCase()
            });
            i = i.replace(/-(webkit|moz|ms|o)-/, "-vendor-");
            h.forEach(function(m) {
                l = (m === "") ? j : m + j.charAt(0).toUpperCase() + j.slice(1);
                k = (m === "") ? i.replace("-vendor-", "") : i.replace("-vendor-", "-" + m.charAt(0).toLowerCase() + m.slice(1) + "-");
                if (l in g.style) {
                    f.setStyle(g, l + ":" + k)
                }
            })
        };
        f.getVendorPrefixStyle = function(h, j) {
            if (typeof j !== "string") {
                throw new TypeError("ac-dom-styles.getVendorPrefixStyle: property must be a string")
            }
            var i = ["", "webkit", "Moz", "ms", "O"];
            var g;
            j = j.replace(/-(webkit|moz|ms|o)-/i, "");
            j = j.replace(/^(webkit|Moz|ms|O)/, "").charAt(0).toLowerCase() + j.slice(1);
            j = j.replace(/-(\w)/, function(k, l) {
                return l.toUpperCase()
            });
            i.some(function(l, k) {
                var m = (l === "") ? j : l + j.charAt(0).toUpperCase() + j.slice(1);
                if (m in h.style) {
                    g = f.getStyle(h, m);
                    return true
                }
            });
            return g
        };
        f.setVendorPrefixTransform = function(g, h) {
            if ((typeof h !== "string" && typeof h !== "object") || Array.isArray(h) || h === null) {
                throw new TypeError("ac-dom-styles.setVendorPrefixTransform: transformFunctions argument must be either an object or a string")
            }
            f.setVendorPrefixStyle(g, "transform", a.convert2dFunctions(h))
        };
        c("./ac-dom-styles/ie")(f);
        d.exports = f
    }, {
        "./ac-dom-styles/ie": 72,
        "./ac-dom-styles/vendorTransformHelper": 73
    }],
    72: [function(b, c, a) {
        c.exports = function(d) {
            if (typeof window.getComputedStyle !== "function") {
                d.getStyle = function(i, h, g) {
                    var f;
                    var j;
                    g = g || i.currentStyle;
                    if (g) {
                        h = h.replace(/-(\w)/g, d.setStyle.__camelCaseReplace);
                        h = h === "float" ? "styleFloat" : h;
                        j = g[h] || null;
                        return j === "auto" ? null : j
                    }
                }
            }
        }
    }, {}],
    73: [function(c, d, b) {
        var a = {
            __objectifiedFunctions: {},
            __paramMaps: {
                translate: "p1, p2, 0",
                translateX: "p1, 0, 0",
                translateY: "0, p1, 0",
                scale: "p1, p2, 1",
                scaleX: "p1, 1, 1",
                scaleY: "1, p1, 1",
                rotate: "0, 0, 1, p1",
                matrix: "p1, p2, 0, 0, p3, p4, 0, 0, 0, 0, 1, 0, p5, p6, 0, 1"
            },
            convert2dFunctions: function(g) {
                var f;
                this.__init(g);
                for (var h in this.__objectifiedFunctions) {
                    if (this.__objectifiedFunctions.hasOwnProperty(h)) {
                        f = this.__objectifiedFunctions[h].replace(" ", "").split(",");
                        if (h in this.__paramMaps) {
                            for (var i in this.__paramMaps) {
                                if (h === i) {
                                    this.valuesToSet.push(this.__stripFunctionAxis(h) + "3d(" + this.__map2DTransformParams(f, this.__paramMaps[h]) + ")")
                                }
                            }
                        } else {
                            this.valuesToSet.push(h + "(" + this.__objectifiedFunctions[h] + ")")
                        }
                    }
                }
                return this.valuesToSet.join(" ")
            },
            __init: function(f) {
                this.valuesToSet = [];
                this.__objectifiedFunctions = (typeof f === "object") ? f : {};
                if (typeof f === "string") {
                    this.__objectifiedFunctions = this.__objectifyFunctionString(f)
                }
            },
            __map2DTransformParams: function(f, g) {
                f.forEach(function(j, h) {
                    g = g.replace("p" + (h + 1), j)
                });
                return g
            },
            __splitFunctionStringToArray: function(f) {
                return f.match(/[\w]+\(.+?\)/g)
            },
            __splitFunctionNameAndParams: function(f) {
                return f.match(/(.*)\((.*)\)/)
            },
            __stripFunctionAxis: function(f) {
                return f.match(/([a-z]+)(|X|Y)$/)[1]
            },
            __objectifyFunctionString: function(f) {
                var g = this;
                var h;
                this.__splitFunctionStringToArray(f).forEach(function(i) {
                    h = g.__splitFunctionNameAndParams(i);
                    g.__objectifiedFunctions[h[1]] = h[2]
                });
                return this.__objectifiedFunctions
            }
        };
        d.exports = a
    }, {}],
    74: [function(b, c, a) {
        var g = b("ac-dom-styles");
        var h = {};
        var f = function() {
            return {
                x: window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft,
                y: window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop
            }
        };
        var d = function() {
            return {
                height: window.innerHeight || document.documentElement.clientHeight,
                width: window.innerWidth || document.documentElement.clientWidth
            }
        };
        h.cumulativeOffset = function(j) {
            var k = h.getBoundingBox(j);
            var i = f();
            var l = [k.top + i.y, k.left + i.x];
            l.top = l[0];
            l.left = l[1];
            return l
        };
        h.getBoundingBox = function(k) {
            var l = k.getBoundingClientRect();
            var j = l.width || l.right - l.left;
            var i = l.height || l.bottom - l.top;
            return {
                top: l.top,
                right: l.right,
                bottom: l.bottom,
                left: l.left,
                width: j,
                height: i
            }
        };
        h.getInnerDimensions = function(n) {
            var o = h.getBoundingBox(n);
            var m = o.width;
            var i = o.height;
            var l;
            var j;
            var k = window.getComputedStyle ? window.getComputedStyle(n, null) : null;
            ["padding", "border"].forEach(function(p) {
                ["Top", "Right", "Bottom", "Left"].forEach(function(q) {
                    l = p === "border" ? p + q + "Width" : p + q;
                    j = parseFloat(g.getStyle(n, l, k));
                    j = isNaN(j) ? 0 : j;
                    if (q === "Right" || q === "Left") {
                        m -= j
                    }
                    if (q === "Top" || q === "Bottom") {
                        i -= j
                    }
                })
            });
            return {
                width: m,
                height: i
            }
        };
        h.getOuterDimensions = function(l) {
            var n = h.getBoundingBox(l);
            var k = n.width;
            var i = n.height;
            var m;
            var j = window.getComputedStyle ? window.getComputedStyle(l, null) : null;
            ["margin"].forEach(function(o) {
                ["Top", "Right", "Bottom", "Left"].forEach(function(p) {
                    m = parseFloat(g.getStyle(l, o + p, j));
                    m = isNaN(m) ? 0 : m;
                    if (p === "Right" || p === "Left") {
                        k += m
                    }
                    if (p === "Top" || p === "Bottom") {
                        i += m
                    }
                })
            });
            return {
                width: k,
                height: i
            }
        };
        h.pixelsInViewport = function(k, j) {
            var l;
            var m = d();
            j = j || h.getBoundingBox(k);
            var i = j.top;
            if (i >= 0) {
                l = m.height - i;
                if (l > j.height) {
                    l = j.height
                }
            } else {
                l = j.height + i
            }
            if (l < 0) {
                l = 0
            }
            if (l > m.height) {
                l = m.height
            }
            return l
        };
        h.percentInViewport = function(j) {
            var i = h.getBoundingBox(j);
            var k = h.pixelsInViewport(j, i);
            return k / i.height
        };
        h.isInViewport = function(k, j) {
            var i = h.percentInViewport(k);
            if (typeof j !== "number" || 1 < j || j < 0) {
                j = 0
            }
            return (i > j || i === 1)
        };
        b("./ac-dom-metrics/ie")(h);
        c.exports = h
    }, {
        "./ac-dom-metrics/ie": 75,
        "ac-dom-styles": 71
    }],
    75: [function(b, c, a) {
        c.exports = function(d) {
            if (!("getBoundingClientRect" in document.createElement("_"))) {
                d.getBoundingBox = function(h) {
                    var j = h.offsetLeft;
                    var i = h.offsetTop;
                    var g = h.offsetWidth;
                    var f = h.offsetHeight;
                    return {
                        top: i,
                        right: j + g,
                        bottom: i + f,
                        left: j,
                        width: g,
                        height: f
                    }
                }
            }
        }
    }, {}],
    76: [function(b, c, a) {
        c.exports = b(31)
    }, {
        "./ac-event-emitter/EventEmitter": 77
    }],
    77: [function(b, c, a) {
        c.exports = b(32)
    }, {}],
    78: [function(i, c, x) {
        var s = Object.prototype.toString;
        var l = Object.prototype.hasOwnProperty;
        var b = typeof Array.prototype.indexOf === "function" ? function(z, A) {
            return z.indexOf(A)
        } : function(z, B) {
            for (var A = 0; A < z.length; A++) {
                if (z[A] === B) {
                    return A
                }
            }
            return -1
        };
        var k = Array.isArray || function(z) {
            return s.call(z) == "[object Array]"
        };
        var v = Object.keys || function(B) {
            var z = [];
            for (var A in B) {
                if (B.hasOwnProperty(A)) {
                    z.push(A)
                }
            }
            return z
        };
        var u = typeof Array.prototype.forEach === "function" ? function(z, A) {
            return z.forEach(A)
        } : function(z, B) {
            for (var A = 0; A < z.length; A++) {
                B(z[A])
            }
        };
        var m = function(z, D, A) {
            if (typeof z.reduce === "function") {
                return z.reduce(D, A)
            }
            var C = A;
            for (var B = 0; B < z.length; B++) {
                C = D(C, z[B])
            }
            return C
        };
        var y = /^[0-9]+$/;

        function d(C, B) {
            if (C[B].length == 0) {
                return C[B] = {}
            }
            var A = {};
            for (var z in C[B]) {
                if (l.call(C[B], z)) {
                    A[z] = C[B][z]
                }
            }
            C[B] = A;
            return A
        }

        function q(D, B, A, E) {
            var z = D.shift();
            if (l.call(Object.prototype, A)) {
                return
            }
            if (!z) {
                if (k(B[A])) {
                    B[A].push(E)
                } else {
                    if ("object" == typeof B[A]) {
                        B[A] = E
                    } else {
                        if ("undefined" == typeof B[A]) {
                            B[A] = E
                        } else {
                            B[A] = [B[A], E]
                        }
                    }
                }
            } else {
                var C = B[A] = B[A] || [];
                if ("]" == z) {
                    if (k(C)) {
                        if ("" != E) {
                            C.push(E)
                        }
                    } else {
                        if ("object" == typeof C) {
                            C[v(C).length] = E
                        } else {
                            C = B[A] = [B[A], E]
                        }
                    }
                } else {
                    if (~b(z, "]")) {
                        z = z.substr(0, z.length - 1);
                        if (!y.test(z) && k(C)) {
                            C = d(B, A)
                        }
                        q(D, C, z, E)
                    } else {
                        if (!y.test(z) && k(C)) {
                            C = d(B, A)
                        }
                        q(D, C, z, E)
                    }
                }
            }
        }

        function f(D, C, G) {
            if (~b(C, "]")) {
                var F = C.split("["),
                    z = F.length,
                    E = z - 1;
                q(F, D, "base", G)
            } else {
                if (!y.test(C) && k(D.base)) {
                    var B = {};
                    for (var A in D.base) {
                        B[A] = D.base[A]
                    }
                    D.base = B
                }
                n(D.base, C, G)
            }
            return D
        }

        function o(C) {
            if ("object" != typeof C) {
                return C
            }
            if (k(C)) {
                var z = [];
                for (var B in C) {
                    if (l.call(C, B)) {
                        z.push(C[B])
                    }
                }
                return z
            }
            for (var A in C) {
                C[A] = o(C[A])
            }
            return C
        }

        function g(A) {
            var z = {
                base: {}
            };
            u(v(A), function(B) {
                f(z, B, A[B])
            });
            return o(z.base)
        }

        function h(A) {
            var z = m(String(A).split("&"), function(B, F) {
                var G = b(F, "="),
                    E = t(F),
                    C = F.substr(0, E || G),
                    D = F.substr(E || G, F.length),
                    D = D.substr(b(D, "=") + 1, D.length);
                if ("" == C) {
                    C = F, D = ""
                }
                if ("" == C) {
                    return B
                }
                return f(B, p(C), p(D))
            }, {
                base: {}
            }).base;
            return o(z)
        }
        x.parse = function(z) {
            if (null == z || "" == z) {
                return {}
            }
            return "object" == typeof z ? g(z) : h(z)
        };
        var r = x.stringify = function(A, z) {
            if (k(A)) {
                return j(A, z)
            } else {
                if ("[object Object]" == s.call(A)) {
                    return w(A, z)
                } else {
                    if ("string" == typeof A) {
                        return a(A, z)
                    } else {
                        return z + "=" + encodeURIComponent(String(A))
                    }
                }
            }
        };

        function a(A, z) {
            if (!z) {
                throw new TypeError("stringify expects an object")
            }
            return z + "=" + encodeURIComponent(A)
        }

        function j(z, C) {
            var A = [];
            if (!C) {
                throw new TypeError("stringify expects an object")
            }
            for (var B = 0; B < z.length; B++) {
                A.push(r(z[B], C + "[" + B + "]"))
            }
            return A.join("&")
        }

        function w(F, E) {
            var A = [],
                D = v(F),
                C;
            for (var B = 0, z = D.length; B < z; ++B) {
                C = D[B];
                if ("" == C) {
                    continue
                }
                if (null == F[C]) {
                    A.push(encodeURIComponent(C) + "=")
                } else {
                    A.push(r(F[C], E ? E + "[" + encodeURIComponent(C) + "]" : encodeURIComponent(C)))
                }
            }
            return A.join("&")
        }

        function n(B, A, C) {
            var z = B[A];
            if (l.call(Object.prototype, A)) {
                return
            }
            if (undefined === z) {
                B[A] = C
            } else {
                if (k(z)) {
                    z.push(C)
                } else {
                    B[A] = [z, C]
                }
            }
        }

        function t(C) {
            var z = C.length,
                B, D;
            for (var A = 0; A < z; ++A) {
                D = C[A];
                if ("]" == D) {
                    B = false
                }
                if ("[" == D) {
                    B = true
                }
                if ("=" == D && !B) {
                    return A
                }
            }
        }

        function p(A) {
            try {
                return decodeURIComponent(A.replace(/\+/g, " "))
            } catch (z) {
                return A
            }
        }
    }, {}],
    79: [function(b, c, a) {
        c.exports = {
            clone: b("./ac-object/clone"),
            create: b("./ac-object/create"),
            defaults: b("./ac-object/defaults"),
            extend: b("./ac-object/extend"),
            getPrototypeOf: b("./ac-object/getPrototypeOf"),
            isDate: b("./ac-object/isDate"),
            isEmpty: b("./ac-object/isEmpty"),
            isRegExp: b("./ac-object/isRegExp"),
            toQueryParameters: b("./ac-object/toQueryParameters")
        }
    }, {
        "./ac-object/clone": 80,
        "./ac-object/create": 81,
        "./ac-object/defaults": 82,
        "./ac-object/extend": 83,
        "./ac-object/getPrototypeOf": 84,
        "./ac-object/isDate": 85,
        "./ac-object/isEmpty": 86,
        "./ac-object/isRegExp": 87,
        "./ac-object/toQueryParameters": 88
    }],
    80: [function(b, c, a) {
        var f = b("./extend");
        c.exports = function d(g) {
            return f({}, g)
        }
    }, {
        "./extend": 83
    }],
    81: [function(b, d, a) {
        var f = function() {};
        d.exports = function c(g) {
            if (arguments.length > 1) {
                throw new Error("Second argument not supported")
            }
            if (g === null || typeof g !== "object") {
                throw new TypeError("Object prototype may only be an Object.")
            }
            if (typeof Object.create === "function") {
                return Object.create(g)
            } else {
                f.prototype = g;
                return new f()
            }
        }
    }, {}],
    82: [function(b, c, a) {
        var f = b("./extend");
        c.exports = function d(h, g) {
            if (typeof h !== "object") {
                throw new TypeError("defaults: must provide a defaults object")
            }
            g = g || {};
            if (typeof g !== "object") {
                throw new TypeError("defaults: options must be a typeof object")
            }
            return f({}, h, g)
        }
    }, {
        "./extend": 83
    }],
    83: [function(c, d, b) {
        var a = Object.prototype.hasOwnProperty;
        d.exports = function f() {
            var h;
            var g;
            if (arguments.length < 2) {
                h = [{}, arguments[0]]
            } else {
                h = [].slice.call(arguments)
            }
            g = h.shift();
            h.forEach(function(j) {
                if (j != null) {
                    for (var i in j) {
                        if (a.call(j, i)) {
                            g[i] = j[i]
                        }
                    }
                }
            });
            return g
        }
    }, {}],
    84: [function(c, d, b) {
        var a = Object.prototype.hasOwnProperty;
        d.exports = function f(i) {
            if (Object.getPrototypeOf) {
                return Object.getPrototypeOf(i)
            } else {
                if (typeof i !== "object") {
                    throw new Error("Requested prototype of a value that is not an object.")
                } else {
                    if (typeof this.__proto__ === "object") {
                        return i.__proto__
                    } else {
                        var g = i.constructor;
                        var h;
                        if (a.call(i, "constructor")) {
                            h = g;
                            if (!(delete i.constructor)) {
                                return null
                            }
                            g = i.constructor;
                            i.constructor = h
                        }
                        return g ? g.prototype : null
                    }
                }
            }
        }
    }, {}],
    85: [function(b, d, a) {
        d.exports = function c(f) {
            return Object.prototype.toString.call(f) === "[object Date]"
        }
    }, {}],
    86: [function(c, d, b) {
        var a = Object.prototype.hasOwnProperty;
        d.exports = function f(g) {
            var h;
            if (typeof g !== "object") {
                throw new TypeError("ac-base.Object.isEmpty : Invalid parameter - expected object")
            }
            for (h in g) {
                if (a.call(g, h)) {
                    return false
                }
            }
            return true
        }
    }, {}],
    87: [function(c, d, b) {
        d.exports = function a(f) {
            return window.RegExp ? f instanceof RegExp : false
        }
    }, {}],
    88: [function(c, f, b) {
        var a = c("qs");
        f.exports = function d(g) {
            if (typeof g !== "object") {
                throw new TypeError("toQueryParameters error: argument is not an object")
            }
            return a.stringify(g)
        }
    }, {
        qs: 78
    }],
    FqDwYp: [function(b, c, a) {
        var d = b("./ac-element-tracker/ElementTracker");
        c.exports = new d();
        c.exports.ElementTracker = d
    }, {
        "./ac-element-tracker/ElementTracker": 91
    }],
    "ac-element-tracker": [function(b, c, a) {
        c.exports = b("FqDwYp")
    }, {}],
    91: [function(d, c, h) {
        var i;
        var g = d("ac-object");
        var k = d("ac-dom-nodes");
        var a = d("ac-dom-metrics");
        var l = d("ac-array");
        var n = d("ac-window-delegate").WindowDelegate;
        var j = d("./TrackedElement");
        var o = d("ac-event-emitter").EventEmitter;
        var f = {
            autoStart: false
        };

        function b(q, p) {
            this.options = g.clone(f);
            this.options = typeof p === "object" ? g.extend(this.options, p) : this.options;
            this.windowDelegate = n;
            this.tracking = false;
            this.elements = [];
            if (q && (Array.isArray(q) || k.isNodeList(q) || k.isElement(q))) {
                this.addElements(q)
            }
            if (this.options.autoStart) {
                this.start()
            }
        }
        i = b.prototype = g.create(o.prototype);
        var m = /^\[object (HTMLCollection|NodeList|Object)\]$/;
        i._registerElements = function(p) {
            p = [].concat(p);
            p.forEach(function(r) {
                if (this._elementInDOM(r)) {
                    var q = new j(r);
                    q.offsetTop = q.element.offsetTop;
                    this.elements.push(q)
                }
            }, this)
        };
        i._registerTrackedElements = function(p) {
            var q = [].concat(p);
            q.forEach(function(r) {
                if (this._elementInDOM(r.element)) {
                    r.offsetTop = r.element.offsetTop;
                    this.elements.push(r)
                }
            }, this)
        };
        i._elementInDOM = function(r) {
            var q = false;
            var p = document.getElementsByTagName("body")[0];
            if (k.isElement(r) && p.contains(r)) {
                q = true
            }
            return q
        };
        i._onVPChange = function() {
            this.elements.forEach(function(p) {
                this.refreshElementState(p)
            }, this)
        };
        i._elementPercentInView = function(p) {
            return p.pixelsInView / p.height
        };
        i._elementPixelsInView = function(q) {
            var t = 0;
            var s = q.top;
            var r = q.bottom;
            var p = this.windowDelegate.innerHeight();
            if (s <= 0 && r >= p) {
                t = p
            } else {
                if (s >= 0 && s < p && r > p) {
                    t = p - s
                } else {
                    if (s < 0 && (r < p && r >= 0)) {
                        t = q.bottom
                    } else {
                        if (s >= 0 && r <= p) {
                            t = q.height
                        }
                    }
                }
            }
            return t
        };
        i._ifInView = function(p, q) {
            if (!q) {
                p.trigger("enterview", p)
            }
        };
        i._ifAlreadyInView = function(p) {
            if (!p.inView) {
                p.trigger("exitview", p)
            }
        };
        i.addElements = function(p) {
            p = k.isNodeList(p) ? l.toArray(p) : [].concat(p);
            p.forEach(function(q) {
                this.addElement(q)
            }, this)
        };
        i.addElement = function(q) {
            var p;
            if (k.isElement(q)) {
                p = new j(q);
                this._registerTrackedElements(p)
            }
            return p
        };
        i.removeElement = function(r) {
            var q = [];
            var p;
            this.elements.forEach(function(s, t) {
                if (s === r || s.element === r) {
                    q.push(t)
                }
            });
            p = this.elements.filter(function(t, s) {
                return q.indexOf(s) < 0 ? true : false
            });
            this.elements = p
        };
        i.stop = function() {
            if (this.tracking === true) {
                this.tracking = false;
                this.windowDelegate.off("scroll resize orientationchange", this._onVPChange)
            }
        };
        i.start = function() {
            if (this.tracking === false) {
                this.tracking = true;
                this.windowDelegate.on("scroll resize orientationchange", this._onVPChange, this);
                this.refreshAllElementStates()
            }
        };
        i.refreshAllElementStates = function() {
            this.elements.forEach(function(p) {
                this.refreshElementState(p)
            }, this)
        };
        i.refreshElementState = function(p) {
            var q = a.getBoundingBox(p.element);
            var r = p.inView;
            p = g.extend(p, q);
            p.pixelsInView = this._elementPixelsInView(p);
            p.percentInView = this._elementPercentInView(p);
            p.inView = p.pixelsInView > 0;
            if (p.inView) {
                this._ifInView(p, r)
            }
            if (r) {
                this._ifAlreadyInView(p)
            }
            return p
        };
        c.exports = b
    }, {
        "./TrackedElement": 92,
        "ac-array": 62,
        "ac-dom-metrics": 74,
        "ac-dom-nodes": 45,
        "ac-event-emitter": 76,
        "ac-object": 79,
        "ac-window-delegate": 161
    }],
    92: [function(d, f, c) {
        var g;
        var i = d("ac-dom-emitter").DOMEmitter;
        var a = d("ac-dom-nodes");
        var b = d("ac-object");

        function h(j) {
            if (a.isElement(j)) {
                this.element = j
            } else {
                throw new TypeError("TrackedElement: " + j + " is not a valid DOM element")
            }
            this.inView = false;
            this.percentInView = 0;
            this.pixelsInView = 0;
            this.offsetTop = 0;
            this.top = 0;
            this.right = 0;
            this.bottom = 0;
            this.left = 0;
            this.width = 0;
            this.height = 0;
            i.call(this, j)
        }
        g = h.prototype = b.create(i.prototype);
        f.exports = h
    }, {
        "ac-dom-emitter": 69,
        "ac-dom-nodes": 45,
        "ac-object": 79
    }],
    93: [function(b, c, a) {
        if (!Array.prototype.filter) {
            Array.prototype.filter = function d(l, k) {
                var j = Object(this);
                var f = j.length >>> 0;
                var h;
                var g = [];
                if (typeof l !== "function") {
                    throw new TypeError(l + " is not a function")
                }
                for (h = 0; h < f; h += 1) {
                    if (h in j && l.call(k, j[h], h, j)) {
                        g.push(j[h])
                    }
                }
                return g
            }
        }
    }, {}],
    94: [function(b, c, a) {
        (function() {
            var d = Array.prototype.slice;
            try {
                d.call(document.documentElement)
            } catch (f) {
                Array.prototype.slice = function(n, j) {
                    j = (typeof j !== "undefined") ? j : this.length;
                    if (Object.prototype.toString.call(this) === "[object Array]") {
                        return d.call(this, n, j)
                    }
                    var l, h = [],
                        k, g = this.length;
                    var o = n || 0;
                    o = (o >= 0) ? o : g + o;
                    var m = (j) ? j : g;
                    if (j < 0) {
                        m = g + j
                    }
                    k = m - o;
                    if (k > 0) {
                        h = new Array(k);
                        if (this.charAt) {
                            for (l = 0; l < k; l++) {
                                h[l] = this.charAt(o + l)
                            }
                        } else {
                            for (l = 0; l < k; l++) {
                                h[l] = this[o + l]
                            }
                        }
                    }
                    return h
                }
            }
        }())
    }, {}],
    95: [function(b, c, a) {
        c.exports = b(31)
    }, {
        "./ac-event-emitter/EventEmitter": 96
    }],
    96: [function(b, c, a) {
        c.exports = b(32)
    }, {}],
    97: [function(b, c, a) {
        c.exports = b(78)
    }, {}],
    98: [function(b, c, a) {
        arguments[4][79][0].apply(a, arguments)
    }, {
        "./ac-object/clone": 99,
        "./ac-object/create": 100,
        "./ac-object/defaults": 101,
        "./ac-object/extend": 102,
        "./ac-object/getPrototypeOf": 103,
        "./ac-object/isDate": 104,
        "./ac-object/isEmpty": 105,
        "./ac-object/isRegExp": 106,
        "./ac-object/toQueryParameters": 107
    }],
    99: [function(b, c, a) {
        c.exports = b(80)
    }, {
        "./extend": 102
    }],
    100: [function(b, c, a) {
        c.exports = b(81)
    }, {}],
    101: [function(b, c, a) {
        c.exports = b(82)
    }, {
        "./extend": 102
    }],
    102: [function(b, c, a) {
        c.exports = b(83)
    }, {}],
    103: [function(b, c, a) {
        c.exports = b(84)
    }, {}],
    104: [function(b, c, a) {
        c.exports = b(85)
    }, {}],
    105: [function(b, c, a) {
        c.exports = b(86)
    }, {}],
    106: [function(b, c, a) {
        c.exports = b(87)
    }, {}],
    107: [function(b, c, a) {
        c.exports = b(88)
    }, {
        qs: 97
    }],
    108: [function(b, c, a) {
        c.exports = {
            BreakpointsDelegate: b("./ac-breakpoints-delegate/BreakpointsDelegate")
        }
    }, {
        "./ac-breakpoints-delegate/BreakpointsDelegate": 109
    }],
    109: [function(f, b, j) {
        var d = f("ac-shared-instance").SharedInstance,
            g = f("ac-object"),
            q = f("ac-window-delegate").WindowDelegate,
            c = f("ac-window-delegate").WindowDelegateCustomEvent,
            p = f("ac-event-emitter").EventEmitter;
        var m = "ac-breakpoints-delegate:BreakpointsDelegate",
            a = "2.0.0-2";
        var n = "breakpoint",
            o = "resize orientationchange";
        var h = {
            large: {
                "min-width": 1069,
                "max-width": 1441,
                content: 980,
                oldie: true
            },
            xlarge: {
                "min-width": 1442,
                content: 980
            },
            medium: {
                "min-width": 736,
                "max-width": 1068,
                content: 692
            },
            small: {
                "min-width": 320,
                "max-width": 735,
                content: 288,
                "max-device-width": 768
            }
        };
        var i = {
            minWidth: "min-width",
            maxWidth: "max-width",
            maxDeviceWidth: "max-device-width",
            content: "content",
            oldIE: "oldie"
        };

        function l(r) {
            this._customEvent = new c(n, this._onBreakpointListenerAdded.bind(this), this._onBreakpointListenerRemoved.bind(this));
            this.setBreakpoints(h)
        }
        var k = l.prototype;
        k.initialize = function() {
            this._breakpoint = null;
            this._lastBreakpoint = null;
            this._handleOldIE();
            this._handleDevices();
            this._breakpointOrder = this._setBreakpointOrder();
            if (!this._isOldIE) {
                this._handleResize()
            }
        };
        k.getCustomEvent = function() {
            return this._customEvent
        };
        k.getBreakpoint = function() {
            if (!this._customEvent.active) {
                this._handleResize()
            }
            return this._breakpoint
        };
        k.setBreakpoints = function(r) {
            this.breakpoints = g.clone(r);
            this.initialize()
        };
        k._handleResize = function() {
            var v = q.innerWidth(),
                w;
            var u, t, s, r = this._breakpointOrder.length;
            for (u = 0; u < r; u++) {
                t = this._breakpointOrder[u];
                s = this.breakpoints[t];
                if (s._breakPosition > v) {
                    break
                }
            }
            if (u > 0) {
                u = u - 1
            }
            w = this.breakpoints[this._breakpointOrder[u]];
            if (!this._breakpoint) {
                this._breakpoint = w;
                return
            }
            if (w.name === this._breakpoint.name) {
                return
            }
            this._lastBreakpoint = this._breakpoint;
            this._breakpoint = w;
            q.trigger(n, {
                incoming: this._breakpoint,
                outgoing: this._lastBreakpoint
            })
        };
        k._setBreakpointOrder = function() {
            var v = 0,
                s = [],
                r = [],
                u = i.minWidth,
                t;
            for (t in this.breakpoints) {
                if (this.breakpoints.hasOwnProperty(t)) {
                    this.breakpoints[t].name = t;
                    s.push(this.breakpoints[t][u])
                }
            }
            s.sort(function(x, w) {
                return x - w
            });
            s.forEach(function(x) {
                var w;
                for (w in this.breakpoints) {
                    if (this.breakpoints.hasOwnProperty(w)) {
                        if (this.breakpoints[w][u] === x) {
                            r.push(w)
                        }
                    }
                }
            }, this);
            r.forEach(function(x, w) {
                this.breakpoints[x]._breakPosition = v;
                if (r[w + 1]) {
                    v = this.breakpoints[r[w + 1]][u]
                }
            }, this);
            return r
        };
        k._handleOldIE = function() {
            var r = document.documentElement,
                t = i.oldIE;
            if (r.className.indexOf("no-" + t) > -1 || r.className.indexOf(t) === -1) {
                return
            }
            this._isOldIE = true;
            this._replaceBreakpoints(function(u) {
                return u[t] === true
            });
            var s;
            for (s in this.breakpoints) {
                if (this.breakpoints.hasOwnProperty(s)) {
                    this._breakpoint = this.breakpoints[s];
                    return
                }
            }
        };
        k._handleDevices = function() {
            var r = i.maxDeviceWidth;
            this._replaceBreakpoints(function(s) {
                if (typeof s[r] !== "number") {
                    return true
                }
                if (window.screen && window.screen.width <= s[r]) {
                    return true
                }
                return false
            })
        };
        k._replaceBreakpoints = function(u) {
            var s, t = {},
                r;
            for (s in this.breakpoints) {
                if (this.breakpoints.hasOwnProperty(s)) {
                    r = this.breakpoints[s];
                    if (u(r)) {
                        t[s] = g.clone(this.breakpoints[s])
                    }
                }
            }
            this.breakpoints = t
        };
        k._onBreakpointListenerAdded = function() {
            q.on(o, this._handleResize, this)
        };
        k._onBreakpointListenerRemoved = function() {
            q.off(o, this._handleResize, this)
        };
        b.exports = d.share(m, a, l)
    }, {
        "ac-event-emitter": 95,
        "ac-object": 98,
        "ac-shared-instance": 110,
        "ac-window-delegate": 114
    }],
    110: [function(b, c, a) {
        c.exports = {
            SharedInstance: b("./ac-shared-instance/SharedInstance")
        }
    }, {
        "./ac-shared-instance/SharedInstance": 111
    }],
    111: [function(d, h, c) {
        var i = window,
            g = "AC",
            a = "SharedInstance",
            f = i[g];
        var b = (function() {
            var j = {};
            return {
                get: function(l, k) {
                    var m = null;
                    if (j[l] && j[l][k]) {
                        m = j[l][k]
                    }
                    return m
                },
                set: function(m, k, l) {
                    if (!j[m]) {
                        j[m] = {}
                    }
                    if (typeof l === "function") {
                        j[m][k] = new l()
                    } else {
                        j[m][k] = l
                    }
                    return j[m][k]
                },
                share: function(m, k, l) {
                    var n = this.get(m, k);
                    if (!n) {
                        n = this.set(m, k, l)
                    }
                    return n
                },
                remove: function(l, k) {
                    var m = typeof k;
                    if (m === "string" || m === "number") {
                        if (!j[l] || !j[l][k]) {
                            return
                        }
                        j[l][k] = null;
                        return
                    }
                    if (j[l]) {
                        j[l] = null
                    }
                }
            }
        }());
        if (!f) {
            f = i[g] = {}
        }
        if (!f[a]) {
            f[a] = b
        }
        h.exports = f[a]
    }, {}],
    112: [function(b, c, a) {
        c.exports = b(31)
    }, {
        "./ac-event-emitter/EventEmitter": 113
    }],
    113: [function(b, c, a) {
        c.exports = b(32)
    }, {}],
    114: [function(b, c, a) {
        c.exports = {
            WindowDelegate: b("./ac-window-delegate/WindowDelegate"),
            WindowDelegateOptimizer: b("./ac-window-delegate/WindowDelegateOptimizer"),
            WindowDelegateCustomEvent: b("./ac-window-delegate/WindowDelegateCustomEvent")
        }
    }, {
        "./ac-window-delegate/WindowDelegate": 117,
        "./ac-window-delegate/WindowDelegateCustomEvent": 118,
        "./ac-window-delegate/WindowDelegateOptimizer": 119
    }],
    115: [function(b, c, a) {
        var f = b("ac-event-emitter").EventEmitter;
        var g = function() {
            this._emitter = new f();
            this._customEvents = {}
        };
        var d = g.prototype;
        d.on = function(h, j, i) {
            this._activateCustomEvents(h);
            this._emitterOn.apply(this, arguments);
            return this
        };
        d.once = function(h, j, i) {
            this._emitterOnce.apply(this, arguments);
            return this
        };
        d.off = function(h, j, i) {
            this._emitterOff.apply(this, arguments);
            this._deactivateCustomEvents(h);
            return this
        };
        d.has = function(h, j, i) {
            return this._emitter.has.apply(this._emitter, arguments)
        };
        d.trigger = function() {
            this._emitter.trigger.apply(this._emitter, arguments);
            return this
        };
        d.propagateTo = function() {
            this._emitter.propagateTo.apply(this._emitter, arguments);
            return this
        };
        d.stopPropagatingTo = function() {
            this._emitter.stopPropagatingTo.apply(this._emitter, arguments);
            return this
        };
        d.add = function(h) {
            this._customEvents[h.name] = h
        };
        d.canHandleCustomEvent = function(h) {
            return this._customEvents.hasOwnProperty(h)
        };
        d.isHandlingCustomEvent = function(h) {
            if (this._customEvents[h] && this._customEvents[h].active) {
                return true
            }
            return false
        };
        d._activateCustomEvents = function(l) {
            var j = l.split(" "),
                k, m, h = j.length;
            for (m = 0; m < h; m++) {
                k = j[m];
                if (this._customEvents[k] && !this._customEvents[k].active) {
                    this._customEvents[k].initialize();
                    this._customEvents[k].active = true
                }
            }
        };
        d._deactivateCustomEvents = function(k) {
            var l;
            if (!k || k.length === 0) {
                for (l in this._customEvents) {
                    if (this._customEvents.hasOwnProperty(l)) {
                        this._deactivateCustomEvent(l)
                    }
                }
                return
            }
            var j = k.split(" "),
                h = j.length;
            for (l = 0; l < h; l++) {
                this._deactivateCustomEvent(j[l])
            }
        };
        d._deactivateCustomEvent = function(h) {
            if (!this.has(h) && this._customEvents[h] && this._customEvents[h].active) {
                this._customEvents[h].deinitialize();
                this._customEvents[h].active = false
            }
        };
        d._emitterOn = function() {
            this._emitter.on.apply(this._emitter, arguments)
        };
        d._emitterOnce = function() {
            this._emitter.once.apply(this._emitter, arguments)
        };
        d._emitterOff = function() {
            this._emitter.off.apply(this._emitter, arguments)
        };
        c.exports = g
    }, {
        "ac-event-emitter": 112
    }],
    116: [function(b, c, a) {
        var g = b("ac-event-emitter").EventEmitter;
        var f;
        var d = function(h) {
            g.call(this);
            this.optimizers = h;
            this._events = {};
            this._properties = {};
            this._initialize()
        };
        f = d.prototype = new g(null);
        f.canOptimizeEvent = function(h) {
            return this._events.hasOwnProperty(h)
        };
        f.canOptimizeProperty = function(h) {
            return this._properties.hasOwnProperty(h)
        };
        f.isOptimizingEvent = function(h) {
            if (this._events[h] && this._events[h].active) {
                return true
            }
            return false
        };
        f.isOptimizingProperty = function(h) {
            if (this._properties[h] && this._properties[h].active) {
                return true
            }
            return false
        };
        f.add = function(h) {
            this._setOptimizerEvents(h);
            this._setOptimizerProperties(h);
            h.on("update", this._onUpdate, this);
            h.on("activate", this._onActivate, this);
            h.on("deactivate", this._onDeactivate, this)
        };
        f.get = function(h) {
            if (this.isOptimizingProperty(h)) {
                return this._properties[h].value
            }
            return null
        };
        f.set = function(i, h) {
            if (!this._properties[i]) {
                return false
            }
            this._properties[i].value = h;
            return this
        };
        f.getOptimizerByEvent = function(h) {
            if (this._events[h]) {
                return this._events[h]
            }
            return null
        };
        f._initialize = function() {
            var j, h;
            for (j in this.optimizers) {
                if (this.optimizers.hasOwnProperty(j)) {
                    this.add(this.optimizers[j])
                }
            }
        };
        f._onUpdate = function(h) {
            this.set(h.prop, h.val)
        };
        f._onActivate = function(j) {
            var k = j.propertyNames,
                l, h = k.length;
            for (l = 0; l < h; l++) {
                this._properties[k[l]].active = true
            }
        };
        f._onDeactivate = function(j) {
            var k = j.propertyNames,
                l, h = k.length;
            for (l = 0; l < h; l++) {
                this._properties[k[l]].active = false
            }
        };
        f._setOptimizerEvents = function(j) {
            var l, k = j.eventNames,
                h = k.length;
            for (l = 0; l < h; l++) {
                this._setOptimizerEvent(k[l], j)
            }
        };
        f._setOptimizerEvent = function(i, h) {
            if (this._events[i]) {
                return
            }
            this._events[i] = h
        };
        f._setOptimizerProperties = function(k) {
            var l, j = k.propertyNames,
                h = j.length;
            for (l = 0; l < h; l++) {
                this._setOptimizerProperty(j[l])
            }
        };
        f._setOptimizerProperty = function(h) {
            if (this._properties.hasOwnProperty(h)) {
                return
            }
            this._properties[h] = {};
            this._properties[h].active = false;
            this._properties[h].value = null
        };
        c.exports = d
    }, {
        "ac-event-emitter": 112
    }],
    117: [function(d, b, g) {
        var i;
        var c = d("ac-shared-instance").SharedInstance,
            l = d("ac-dom-emitter").DOMEmitter,
            j = d("./OptimizerController"),
            f = d("./CustomEventController"),
            h = d("./queries/queries"),
            m = d("./optimizers/optimizers");
        var k = "ac-window-delegate:WindowDelegate",
            a = "3.0.0-4";

        function n() {
            this._emitter = new l(window);
            this._controllers = {
                optimizer: new j(m),
                customEvent: new f()
            };
            var o;
            for (o in h) {
                if (h.hasOwnProperty(o)) {
                    this[o] = this._getProperty.bind(this, o);
                    h[o] = h[o].bind(this)
                }
            }
            this._bindEvents()
        }
        i = n.prototype;
        i.on = function(o, r, p) {
            var q = this._seperateCustomEvents(o);
            this._optimizeEvents(q.standardEvents);
            this._customEventOn(q.customEvents, r, p);
            this._emitterOn.apply(this, arguments);
            return this
        };
        i.once = function(o, r, p) {
            var q = this._seperateCustomEvents(o);
            this._optimizeEvents(q.standardEvents);
            this._customEventOnce(q.customEvents, r, p);
            this._emitterOnce.apply(this, arguments);
            return this
        };
        i.off = function(p, u, q) {
            var t = this._seperateCustomEvents(p),
                r = false;
            if (!p) {
                r = true
            }
            this._customEventOff(t.customEvents, u, q, r);
            this._emitterOff.apply(this, arguments);
            if (r) {
                try {
                    var o;
                    for (o in this._controllers.optimizer._events) {
                        if (this._controllers.optimizer._events.hasOwnProperty(o) && this._shouldDeoptimizeEvent(o, true)) {
                            this._deoptimizeEvent(o)
                        }
                    }
                    this._bindEvents()
                } catch (s) {}
            }
            return this
        };
        i.has = function(o, q, p) {
            return this._emitter.has.apply(this._emitter, arguments)
        };
        i.trigger = function() {
            this._emitter.trigger.apply(this._emitter, arguments);
            return this
        };
        i.emitterTrigger = function() {
            this._emitter.emitterTrigger.apply(this._emitter, arguments);
            return this
        };
        i.propagateTo = function() {
            this._emitter.propagateTo.apply(this._emitter, arguments);
            return this
        };
        i.stopPropagatingTo = function() {
            this._emitter.stopPropagatingTo.apply(this._emitter, arguments);
            return this
        };
        i.addOptimizer = function(o) {
            this._controllers.optimizer.add(o);
            return this
        };
        i.addCustomEvent = function(o) {
            this._controllers.customEvent.add(o);
            return this
        };
        i._emitterOn = function() {
            this._emitter.on.apply(this._emitter, arguments)
        };
        i._emitterOnce = function() {
            this._emitter.once.apply(this._emitter, arguments)
        };
        i._emitterOff = function() {
            this._emitter.off.apply(this._emitter, arguments)
        };
        i._onEventUnbound = function(p) {
            var o = p.data.evt;
            if (this._shouldDeoptimizeEvent(o)) {
                this._deoptimizeEvent(o)
            }
        };
        i._customEventOn = function(o, q, p) {
            if (o.length === 0) {
                return
            }
            this._controllers.customEvent.on(o.join(" "), q, p)
        };
        i._customEventOnce = function(o, q, p) {
            if (o.length === 0) {
                return
            }
            this._controllers.customEvent.once(o.join(" "), q, p)
        };
        i._customEventOff = function(o, r, p, q) {
            if (!q && o.length === 0) {
                return
            }
            if (q && o.length === 0) {
                this._controllers.customEvent.off();
                return
            }
            this._controllers.customEvent.off(o.join(" "), r, p)
        };
        i._getProperty = function(q, o) {
            var p = null;
            if (!o) {
                p = this._getOptimizedValue(q)
            }
            if (p === null) {
                p = h[q].call(this, o)
            }
            return p
        };
        i._optimizeEvents = function(q) {
            var p, r, o = q.length;
            for (r = 0; r < o; r++) {
                p = q[r];
                if (this._shouldOptimizeEvent(p)) {
                    this._optimizeEvent(p)
                }
            }
        };
        i._shouldOptimizeEvent = function(o) {
            if (this._controllers.optimizer.canOptimizeEvent(o) && !this._controllers.optimizer.isOptimizingEvent(o)) {
                return true
            }
            return false
        };
        i._shouldDeoptimizeEvent = function(o, p) {
            if (this._controllers.optimizer.isOptimizingEvent(o) && (p || this._emitter._eventEmitter._events[o].length <= 1)) {
                return true
            }
            return false
        };
        i._optimizeEvent = function(p) {
            var o = this._controllers.optimizer.getOptimizerByEvent(p);
            o.activate();
            this._emitterOn(p, o.callback, o)
        };
        i._deoptimizeEvent = function(p) {
            var o = this._controllers.optimizer.getOptimizerByEvent(p);
            o.deactivate();
            this._emitterOff(p, o.callback, o)
        };
        i._getOptimizedValue = function(o) {
            return this._controllers.optimizer.get(o)
        };
        i._seperateCustomEvents = function(s) {
            var p = {
                customEvents: [],
                standardEvents: []
            };
            if (typeof s === "string") {
                var t = s.split(" "),
                    q, r, o = t.length;
                for (r = 0; r < o; r++) {
                    q = t[r];
                    if (this._controllers.customEvent.canHandleCustomEvent(q)) {
                        p.customEvents.push(q)
                    } else {
                        p.standardEvents.push(q)
                    }
                }
            }
            return p
        };
        i._bindEvents = function() {
            this._emitter.on("dom-emitter:didoff", this._onEventUnbound, this)
        };
        b.exports = c.share(k, a, n)
    }, {
        "./CustomEventController": 115,
        "./OptimizerController": 116,
        "./optimizers/optimizers": 122,
        "./queries/queries": 131,
        "ac-dom-emitter": 33,
        "ac-shared-instance": 110
    }],
    118: [function(c, d, a) {
        var g = c("ac-event-emitter").EventEmitter;

        function b(h, j, i) {
            g.call(this);
            this.name = h;
            this.active = false;
            this._initializeFunc = j;
            this._deinitializeFunc = i
        }
        var f = b.prototype = new g(null);
        f.initialize = function() {
            if (this._initializeFunc) {
                this._initializeFunc()
            }
            return this
        };
        f.deinitialize = function() {
            if (this._deinitializeFunc) {
                this._deinitializeFunc()
            }
            return this
        };
        d.exports = b
    }, {
        "ac-event-emitter": 112
    }],
    119: [function(c, d, b) {
        var g = c("ac-event-emitter").EventEmitter;

        function a(h, i) {
            g.call(this);
            this.active = false;
            this.eventNames = h.eventNames;
            this.propertyNames = h.propertyNames;
            this.options = h.options || {};
            this.callback = i
        }
        var f = a.prototype = new g(null);
        f.update = function(i, h) {
            this.trigger("update", {
                prop: i,
                val: h
            })
        };
        f.activate = function() {
            this.active = true;
            this.trigger("activate", this)
        };
        f.deactivate = function() {
            this.active = false;
            this.trigger("deactivate", this)
        };
        d.exports = a
    }, {
        "ac-event-emitter": 112
    }],
    120: [function(f, g, b) {
        var a = f("../../WindowDelegateOptimizer"),
            d = f("../../queries/queries");
        var c = {
            eventNames: ["resize"],
            propertyNames: ["clientWidth", "clientHeight", "innerWidth", "innerHeight"]
        };
        var h = new a(c, function(m) {
            var l, k = c.propertyNames,
                j = k.length;
            for (l = 0; l < j; l++) {
                this.update(k[l], d[k[l]](true))
            }
        });
        g.exports = h
    }, {
        "../../WindowDelegateOptimizer": 119,
        "../../queries/queries": 131
    }],
    121: [function(g, h, b) {
        var a = g("../../WindowDelegateOptimizer"),
            f = g("../../queries/queries");
        var d = {
            eventNames: ["scroll"],
            propertyNames: ["scrollX", "scrollY", "maxScrollX", "maxScrollY"]
        };
        var c = new a(d, function(m) {
            var l, k = d.propertyNames,
                j = k.length;
            for (l = 0; l < j; l++) {
                this.update(k[l], f[k[l]](true))
            }
        });
        h.exports = c
    }, {
        "../../WindowDelegateOptimizer": 119,
        "../../queries/queries": 131
    }],
    122: [function(d, f, b) {
        var c = d("./events/resize"),
            a = d("./events/scroll");
        f.exports = [c, a]
    }, {
        "./events/resize": 120,
        "./events/scroll": 121
    }],
    123: [function(b, c, a) {
        var d = function(f) {
            return document.documentElement.clientHeight
        };
        c.exports = d
    }, {}],
    124: [function(b, c, a) {
        var d = function(f) {
            return document.documentElement.clientWidth
        };
        c.exports = d
    }, {}],
    125: [function(b, d, a) {
        var c = function(f) {
            return window.innerHeight || this.clientHeight(f)
        };
        d.exports = c
    }, {}],
    126: [function(b, c, a) {
        var d = function(f) {
            return window.innerWidth || this.clientWidth(f)
        };
        c.exports = d
    }, {}],
    127: [function(c, d, a) {
        var b = function(f) {
            return document.body.scrollWidth - this.innerWidth()
        };
        d.exports = b
    }, {}],
    128: [function(c, d, b) {
        var a = function(f) {
            return document.body.scrollHeight - this.innerHeight()
        };
        d.exports = a
    }, {}],
    129: [function(b, c, a) {
        var d = function(f) {
            var h = window.pageXOffset;
            if (!h) {
                var g = document.documentElement || document.body.parentNode || document.body;
                h = g.scrollLeft
            }
            return h
        };
        c.exports = d
    }, {}],
    130: [function(b, c, a) {
        var d = function(f) {
            var h = window.pageYOffset;
            if (!h) {
                var g = document.documentElement || document.body.parentNode || document.body;
                h = g.scrollTop
            }
            return h
        };
        c.exports = d
    }, {}],
    131: [function(i, g, k) {
        var b = i("./methods/innerWidth"),
            j = i("./methods/innerHeight"),
            d = i("./methods/clientWidth"),
            l = i("./methods/clientHeight"),
            c = i("./methods/scrollX"),
            a = i("./methods/scrollY"),
            h = i("./methods/maxScrollX"),
            f = i("./methods/maxScrollY");
        g.exports = {
            innerWidth: b,
            innerHeight: j,
            clientWidth: d,
            clientHeight: l,
            scrollX: c,
            scrollY: a,
            maxScrollX: h,
            maxScrollY: f
        }
    }, {
        "./methods/clientHeight": 123,
        "./methods/clientWidth": 124,
        "./methods/innerHeight": 125,
        "./methods/innerWidth": 126,
        "./methods/maxScrollX": 127,
        "./methods/maxScrollY": 128,
        "./methods/scrollX": 129,
        "./methods/scrollY": 130
    }],
    kunvTF: [function(b, c, a) {
        c.exports = {
            Viewport: b("./ac-viewport/Viewport")
        }
    }, {
        "./ac-viewport/Viewport": 134
    }],
    "ac-viewport": [function(b, c, a) {
        c.exports = b("kunvTF")
    }, {}],
    134: [function(d, b, g) {
        var c = d("ac-shared-instance").SharedInstance,
            k = d("ac-window-delegate").WindowDelegate,
            i = d("ac-breakpoints-delegate").BreakpointsDelegate;
        var j = "ac-viewport:Viewport",
            a = "3.0.0-1";
        var h;

        function f(m) {
            var n, l = k;
            for (n in l) {
                if (l.hasOwnProperty(n)) {
                    this[n] = l[n]
                } else {
                    h[n] = l[n]
                }
            }
            this.addCustomEvent(i.getCustomEvent())
        }
        h = f.prototype;
        h.getBreakpoint = function() {
            return i.getBreakpoint()
        };
        h.setBreakpoints = function(l) {
            return i.setBreakpoints(l)
        };
        b.exports = c.share(j, a, f)
    }, {
        "ac-breakpoints-delegate": 108,
        "ac-shared-instance": 110,
        "ac-window-delegate": 114
    }],
    135: [function(b, d, a) {
        var c = {};
        c.addEventListener = function(j, h, i, g) {
            if (j.addEventListener) {
                j.addEventListener(h, i, g)
            } else {
                if (j.attachEvent) {
                    j.attachEvent("on" + h, i)
                } else {
                    j["on" + h] = i
                }
            }
            return j
        };
        c.dispatchEvent = function(h, g) {
            if (document.createEvent) {
                h.dispatchEvent(new CustomEvent(g))
            } else {
                h.fireEvent("on" + g, document.createEventObject())
            }
            return h
        };
        c.removeEventListener = function(j, h, i, g) {
            if (j.removeEventListener) {
                j.removeEventListener(h, i, g)
            } else {
                j.detachEvent("on" + h, i)
            }
            return j
        };
        var f = /^(webkit|moz|ms|o)/i;
        c.addVendorPrefixEventListener = function(j, h, i, g) {
            if (f.test(h)) {
                h = h.replace(f, "")
            } else {
                h = h.charAt(0).toUpperCase() + h.slice(1)
            }
            if (/WebKit/i.test(window.navigator.userAgent)) {
                return c.addEventListener(j, "webkit" + h, i, g)
            } else {
                if (/Opera/i.test(window.navigator.userAgent)) {
                    return c.addEventListener(j, "O" + h, i, g)
                } else {
                    if (/Gecko/i.test(window.navigator.userAgent)) {
                        return c.addEventListener(j, h.toLowerCase(), i, g)
                    } else {
                        h = h.charAt(0).toLowerCase() + h.slice(1);
                        return c.addEventListener(j, h, i, g)
                    }
                }
            }
        };
        c.removeVendorPrefixEventListener = function(j, h, i, g) {
            if (f.test(h)) {
                h = h.replace(f, "")
            } else {
                h = h.charAt(0).toUpperCase() + h.slice(1)
            }
            c.removeEventListener(j, "webkit" + h, i, g);
            c.removeEventListener(j, "O" + h, i, g);
            c.removeEventListener(j, h.toLowerCase(), i, g);
            h = h.charAt(0).toLowerCase() + h.slice(1);
            return c.removeEventListener(j, h, i, g)
        };
        c.stop = function(g) {
            if (!g) {
                g = window.event
            }
            if (g.stopPropagation) {
                g.stopPropagation()
            } else {
                g.cancelBubble = true
            }
            if (g.preventDefault) {
                g.preventDefault()
            }
            g.stopped = true;
            g.returnValue = false
        };
        c.target = function(g) {
            return (typeof g.target !== "undefined") ? g.target : g.srcElement
        };
        d.exports = c
    }, {}],
    136: [function(b, c, a) {
        arguments[4][12][0].apply(a, arguments)
    }, {
        "./ac-dom-traversal/ancestor": 137,
        "./ac-dom-traversal/ancestors": 138,
        "./ac-dom-traversal/children": 139,
        "./ac-dom-traversal/filterBySelector": 140,
        "./ac-dom-traversal/firstChild": 141,
        "./ac-dom-traversal/lastChild": 144,
        "./ac-dom-traversal/matchesSelector": 145,
        "./ac-dom-traversal/nextSibling": 146,
        "./ac-dom-traversal/nextSiblings": 147,
        "./ac-dom-traversal/previousSibling": 148,
        "./ac-dom-traversal/previousSiblings": 149,
        "./ac-dom-traversal/querySelector": 150,
        "./ac-dom-traversal/querySelectorAll": 151,
        "./ac-dom-traversal/shims/ie": 152,
        "./ac-dom-traversal/siblings": 153
    }],
    137: [function(b, c, a) {
        arguments[4][13][0].apply(a, arguments)
    }, {
        "./helpers/validate": 143,
        "./matchesSelector": 145,
        "ac-dom-nodes": 45
    }],
    138: [function(b, c, a) {
        arguments[4][14][0].apply(a, arguments)
    }, {
        "./helpers/validate": 143,
        "./matchesSelector": 145,
        "ac-dom-nodes": 45
    }],
    139: [function(b, c, a) {
        arguments[4][15][0].apply(a, arguments)
    }, {
        "./filterBySelector": 140,
        "./helpers/validate": 143,
        "ac-dom-nodes": 45
    }],
    140: [function(b, c, a) {
        arguments[4][16][0].apply(a, arguments)
    }, {
        "./helpers/validate": 143,
        "./matchesSelector": 145
    }],
    141: [function(b, c, a) {
        arguments[4][17][0].apply(a, arguments)
    }, {
        "./children": 139,
        "./helpers/validate": 143
    }],
    142: [function(b, c, a) {
        c.exports = b(18)
    }, {}],
    143: [function(b, c, a) {
        c.exports = b(19)
    }, {
        "ac-dom-nodes": 45
    }],
    144: [function(b, c, a) {
        arguments[4][20][0].apply(a, arguments)
    }, {
        "./children": 139,
        "./helpers/validate": 143
    }],
    145: [function(b, c, a) {
        c.exports = b(21)
    }, {
        "./helpers/nativeMatches": 142,
        "./helpers/validate": 143,
        "ac-dom-nodes": 45
    }],
    146: [function(b, c, a) {
        arguments[4][22][0].apply(a, arguments)
    }, {
        "./helpers/validate": 143,
        "./matchesSelector": 145,
        "ac-dom-nodes": 45
    }],
    147: [function(b, c, a) {
        arguments[4][23][0].apply(a, arguments)
    }, {
        "./helpers/validate": 143,
        "./matchesSelector": 145,
        "ac-dom-nodes": 45
    }],
    148: [function(b, c, a) {
        arguments[4][24][0].apply(a, arguments)
    }, {
        "./helpers/validate": 143,
        "./matchesSelector": 145,
        "ac-dom-nodes": 45
    }],
    149: [function(b, c, a) {
        arguments[4][25][0].apply(a, arguments)
    }, {
        "./helpers/validate": 143,
        "./matchesSelector": 145,
        "ac-dom-nodes": 45
    }],
    150: [function(b, c, a) {
        c.exports = b(26)
    }, {
        "./helpers/validate": 143
    }],
    151: [function(b, c, a) {
        c.exports = b(27)
    }, {
        "./helpers/validate": 143
    }],
    152: [function(b, c, a) {
        c.exports = b(28)
    }, {
        "../helpers/nativeMatches": 142,
        "../helpers/validate": 143,
        "../vendor/sizzle/sizzle": 154,
        "ac-dom-nodes": 45
    }],
    153: [function(b, c, a) {
        arguments[4][29][0].apply(a, arguments)
    }, {
        "./children": 139,
        "./helpers/validate": 143
    }],
    154: [function(b, c, a) {
        c.exports = b(30)
    }, {}],
    155: [function(b, c, a) {
        c.exports = {
            DOMEmitter: b("./ac-dom-emitter/DOMEmitter")
        }
    }, {
        "./ac-dom-emitter/DOMEmitter": 156
    }],
    156: [function(c, b, d) {
        var f;
        var j = c("ac-event-emitter").EventEmitter,
            g = c("ac-dom-events"),
            a = c("ac-dom-traversal");
        var i = "dom-emitter";

        function h(k) {
            if (k === null) {
                return
            }
            this.el = k;
            this._bindings = {};
            this._delegateFuncs = {};
            this._eventEmitter = new j()
        }
        f = h.prototype;
        f._parseEventNames = function(k) {
            if (!k) {
                return [k]
            }
            return k.split(" ")
        };
        f._onListenerEvent = function(l, k) {
            this.trigger(l, k, false)
        };
        f._setListener = function(k) {
            this._bindings[k] = this._onListenerEvent.bind(this, k);
            g.addEventListener(this.el, k, this._bindings[k])
        };
        f._removeListener = function(k) {
            g.removeEventListener(this.el, k, this._bindings[k]);
            this._bindings[k] = null
        };
        f._triggerInternalEvent = function(k, l) {
            this.trigger(i + ":" + k, l)
        };
        f._normalizeArgumentsAndCall = function(k, m) {
            var q = {};
            if (k.length === 0) {
                m.call(this, q);
                return
            }
            if (typeof k[0] === "string" || k[0] === null) {
                k = this._cleanStringData(k);
                q.events = k[0];
                if (typeof k[1] === "string") {
                    q.delegateQuery = k[1];
                    q.callback = k[2];
                    q.context = k[3]
                } else {
                    q.callback = k[1];
                    q.context = k[2]
                }
                m.call(this, q);
                return
            }
            var l, o, p = ":",
                n = k[0];
            for (l in n) {
                if (n.hasOwnProperty(l)) {
                    q = {};
                    o = this._cleanStringData(l.split(p));
                    q.events = o[0];
                    q.delegateQuery = o[1];
                    q.callback = n[l];
                    q.context = k[1];
                    m.call(this, q)
                }
            }
        };
        f._registerDelegateFunc = function(m, o, p, k, n) {
            var l = this._delegateFunc.bind(this, m, o, p, n);
            this._delegateFuncs[o] = this._delegateFuncs[o] || {};
            this._delegateFuncs[o][m] = this._delegateFuncs[o][m] || [];
            this._delegateFuncs[o][m].push({
                func: k,
                context: n,
                delegateFunc: l
            });
            return l
        };
        f._cleanStringData = function(n) {
            var m = false;
            if (typeof n === "string") {
                n = [n];
                m = true
            }
            var l = [],
                p, r, q, o, k = n.length;
            for (p = 0; p < k; p++) {
                r = n[p];
                if (typeof r === "string") {
                    if (r === "" || r === " ") {
                        continue
                    }
                    q = r.length;
                    while (r[0] === " ") {
                        r = r.slice(1, q);
                        q--
                    }
                    while (r[q - 1] === " ") {
                        r = r.slice(0, q - 1);
                        q--
                    }
                }
                l.push(r)
            }
            if (m) {
                return l[0]
            }
            return l
        };
        f._unregisterDelegateFunc = function(m, p, k, o) {
            if (!this._delegateFuncs[p] || !this._delegateFuncs[p][m]) {
                return
            }
            var n = this._getDelegateFuncBindingIdx(m, p, k, o),
                l;
            if (n > -1) {
                l = this._delegateFuncs[p][m][n].delegateFunc;
                this._delegateFuncs[p][m].splice(n, 1);
                if (this._delegateFuncs[p][m].length === 0) {
                    this._delegateFuncs[p][m] = null
                }
            }
            return l
        };
        f._unregisterDelegateFuncs = function(k, m) {
            if (!this._delegateFuncs[m]) {
                return
            }
            if (k !== null && !this._delegateFuncs[m][k]) {
                return
            }
            if (k === null) {
                var l;
                for (l in this._delegateFuncs[m]) {
                    if (this._delegateFuncs[m].hasOwnProperty(l)) {
                        this._unbindDelegateFunc(l, m)
                    }
                }
                return
            }
            this._unbindDelegateFunc(k, m)
        };
        f._unbindDelegateFunc = function(k, m) {
            var n, o, l = 0;
            while (this._delegateFuncs[m][k] && this._delegateFuncs[m][k][l]) {
                n = this._delegateFuncs[m][k][l];
                o = this._delegateFuncs[m][k][l].length;
                this._off({
                    events: k,
                    delegateQuery: m,
                    callback: n.func,
                    context: n.context
                });
                if (this._delegateFuncs[m][k] && o === this._delegateFuncs[m][k].length) {
                    l++
                }
            }
            n = o = null
        };
        f._unregisterDelegateFuncsByEvent = function(k) {
            var l;
            for (l in this._delegateFuncs) {
                if (this._delegateFuncs.hasOwnProperty(l)) {
                    this._unregisterDelegateFuncs(k, l)
                }
            }
        };
        f._delegateFunc = function(k, o, q, m, p) {
            if (a.matchesSelector(g.target(p), o)) {
                var l = Array.prototype.slice.call(arguments, 0),
                    n = l.slice(4, l.length);
                m = m || window;
                if (typeof p.detail === "object") {
                    n[0] = p.detail
                }
                q.call(m, n)
            }
        };
        f.on = function() {
            this._normalizeArgumentsAndCall(Array.prototype.slice.call(arguments, 0), this._on);
            return this
        };
        f.once = function() {
            this._normalizeArgumentsAndCall(Array.prototype.slice.call(arguments, 0), this._once);
            return this
        };
        f.off = function() {
            this._normalizeArgumentsAndCall(Array.prototype.slice.call(arguments, 0), this._off);
            return this
        };
        f._on = function(o) {
            var l = o.events,
                p = o.callback,
                n = o.delegateQuery,
                m = o.context,
                k = o.unboundCallback || p;
            l = this._parseEventNames(l);
            l.forEach(function(u, q, s, t, r) {
                if (!this.has(r)) {
                    this._setListener(r)
                }
                if (typeof t === "string") {
                    u = this._registerDelegateFunc(r, t, u, q, s)
                }
                this._triggerInternalEvent("willon", {
                    evt: r,
                    callback: u,
                    context: s,
                    delegateQuery: t
                });
                this._eventEmitter.on(r, u, s);
                this._triggerInternalEvent("didon", {
                    evt: r,
                    callback: u,
                    context: s,
                    delegateQuery: t
                })
            }.bind(this, p, k, m, n));
            l = p = k = n = m = null
        };
        f._off = function(p) {
            var l = p.events,
                q = p.callback,
                o = p.delegateQuery,
                n = p.context,
                k = p.unboundCallback || q;
            if (typeof l === "undefined") {
                this._eventEmitter.off();
                var m;
                for (m in this._bindings) {
                    if (this._bindings.hasOwnProperty(m)) {
                        this._removeListener(m)
                    }
                }
                for (m in this._delegateFuncs) {
                    if (this._delegateFuncs.hasOwnProperty(m)) {
                        this._delegateFuncs[m] = null
                    }
                }
                return
            }
            l = this._parseEventNames(l);
            l.forEach(function(v, r, t, u, s) {
                if (typeof u === "string" && typeof r === "function") {
                    v = this._unregisterDelegateFunc(s, u, r, t);
                    if (!v) {
                        return
                    }
                }
                if (typeof u === "string" && typeof v === "undefined") {
                    this._unregisterDelegateFuncs(s, u);
                    return
                }
                if (typeof s === "string" && typeof v === "undefined") {
                    this._unregisterDelegateFuncsByEvent(s);
                    if (typeof u === "string") {
                        return
                    }
                }
                this._triggerInternalEvent("willoff", {
                    evt: s,
                    callback: v,
                    context: t,
                    delegateQuery: u
                });
                this._eventEmitter.off(s, v, t);
                this._triggerInternalEvent("didoff", {
                    evt: s,
                    callback: v,
                    context: t,
                    delegateQuery: u
                });
                if (!this.has(s)) {
                    this._removeListener(s)
                }
            }.bind(this, q, k, n, o));
            l = q = k = o = n = null
        };
        f._once = function(n) {
            var k = n.events,
                o = n.callback,
                m = n.delegateQuery,
                l = n.context;
            k = this._parseEventNames(k);
            k.forEach(function(s, q, r, p) {
                if (typeof r === "string") {
                    return this._handleDelegateOnce(p, s, q, r)
                }
                if (!this.has(p)) {
                    this._setListener(p)
                }
                this._triggerInternalEvent("willonce", {
                    evt: p,
                    callback: s,
                    context: q,
                    delegateQuery: r
                });
                this._eventEmitter.once.call(this, p, s, q);
                this._triggerInternalEvent("didonce", {
                    evt: p,
                    callback: s,
                    context: q,
                    delegateQuery: r
                })
            }.bind(this, o, l, m));
            k = o = m = l = null
        };
        f._handleDelegateOnce = function(k, n, l, m) {
            this._triggerInternalEvent("willonce", {
                evt: k,
                callback: n,
                context: l,
                delegateQuery: m
            });
            this._on({
                events: k,
                context: l,
                delegateQuery: m,
                callback: this._getDelegateOnceCallback.bind(this, k, n, l, m),
                unboundCallback: n
            });
            this._triggerInternalEvent("didonce", {
                evt: k,
                callback: n,
                context: l,
                delegateQuery: m
            });
            return this
        };
        f._getDelegateOnceCallback = function(k, p, m, o) {
            var l = Array.prototype.slice.call(arguments, 0),
                n = l.slice(4, l.length);
            p.apply(m, n);
            this._off({
                events: k,
                delegateQuery: o,
                callback: p,
                context: m
            })
        };
        f._getDelegateFuncBindingIdx = function(r, o, m, k, s) {
            var q = -1;
            if (this._delegateFuncs[o] && this._delegateFuncs[o][r]) {
                var n, l, p = this._delegateFuncs[o][r].length;
                for (n = 0; n < p; n++) {
                    l = this._delegateFuncs[o][r][n];
                    if (s && typeof m === "undefined") {
                        m = l.func
                    }
                    if (l.func === m && l.context === k) {
                        q = n;
                        break
                    }
                }
            }
            return q
        };
        f._triggerDelegateEvents = function(n, p, q) {
            var m = a.querySelectorAll(p, this.el);
            var o, r, k = m.length;
            for (o = 0; o < k; o++) {
                r = m[o];
                if (document.createEvent) {
                    r.dispatchEvent(new CustomEvent(n, {
                        bubbles: true,
                        cancelable: false,
                        detail: q
                    }))
                } else {
                    var l = document.createEventObject();
                    l.detail = q;
                    r.fireEvent("on" + n, l)
                }
                return r
            }
        };
        f.has = function(k, p, o, m) {
            var n, q;
            if (typeof p === "string") {
                n = p;
                q = o
            } else {
                q = p;
                m = o
            }
            if (n) {
                var l = this._getDelegateFuncBindingIdx(k, n, q, m, true);
                if (l > -1) {
                    return true
                }
                return false
            }
            if (this._eventEmitter && this._eventEmitter.has.apply(this._eventEmitter, arguments)) {
                return true
            }
            return false
        };
        f.trigger = function(l, k, m, p) {
            l = this._parseEventNames(l);
            var n, o;
            if (typeof k === "string") {
                n = this._cleanStringData(k);
                o = m
            } else {
                o = k;
                p = m
            }
            l = this._cleanStringData(l);
            l.forEach(function(r, s, t, q) {
                if (r) {
                    this._triggerDelegateEvents(q, r, s);
                    return
                }
                this._eventEmitter.trigger(q, s, t)
            }.bind(this, n, o, p));
            return this
        };
        f.propagateTo = function(k, l) {
            this._eventEmitter.propagateTo(k, l);
            return this
        };
        f.stopPropagatingTo = function(k) {
            this._eventEmitter.stopPropagatingTo(k);
            return this
        };
        f.destroy = function() {
            this._triggerInternalEvent("willdestroy");
            this.off();
            this.el = this._eventEmitter = this._bindings = this._delegateFuncs = null
        };
        b.exports = h
    }, {
        "ac-dom-events": 135,
        "ac-dom-traversal": 136,
        "ac-event-emitter": 157
    }],
    157: [function(b, c, a) {
        c.exports = b(31)
    }, {
        "./ac-event-emitter/EventEmitter": 158
    }],
    158: [function(b, c, a) {
        c.exports = b(32)
    }, {}],
    159: [function(b, c, a) {
        c.exports = b(110)
    }, {
        "./ac-shared-instance/SharedInstance": 160
    }],
    160: [function(b, c, a) {
        c.exports = b(111)
    }, {}],
    161: [function(b, c, a) {
        arguments[4][114][0].apply(a, arguments)
    }, {
        "./ac-window-delegate/WindowDelegate": 164,
        "./ac-window-delegate/WindowDelegateCustomEvent": 165,
        "./ac-window-delegate/WindowDelegateOptimizer": 166
    }],
    162: [function(b, c, a) {
        arguments[4][115][0].apply(a, arguments)
    }, {
        "ac-event-emitter": 157
    }],
    163: [function(b, c, a) {
        arguments[4][116][0].apply(a, arguments)
    }, {
        "ac-event-emitter": 157
    }],
    164: [function(d, b, g) {
        var i;
        var c = d("ac-shared-instance").SharedInstance,
            l = d("ac-dom-emitter").DOMEmitter,
            j = d("./OptimizerController"),
            f = d("./CustomEventController"),
            h = d("./queries/queries"),
            m = d("./optimizers/optimizers");
        var k = "ac-window-delegate:WindowDelegate",
            a = "2.0.1";

        function n() {
            this._emitter = new l(window);
            this._controllers = {
                optimizer: new j(m),
                customEvent: new f()
            };
            var o;
            for (o in h) {
                if (h.hasOwnProperty(o)) {
                    this[o] = this._getProperty.bind(this, o);
                    h[o] = h[o].bind(this)
                }
            }
            this._bindEvents()
        }
        i = n.prototype;
        i.on = function(o, r, p) {
            var q = this._seperateCustomEvents(o);
            this._optimizeEvents(q.standardEvents);
            this._customEventOn(q.customEvents, r, p);
            this._emitterOn.apply(this, arguments);
            return this
        };
        i.once = function(o, r, p) {
            var q = this._seperateCustomEvents(o);
            this._optimizeEvents(q.standardEvents);
            this._customEventOnce(q.customEvents, r, p);
            this._emitterOnce.apply(this, arguments);
            return this
        };
        i.off = function(p, u, q) {
            var t = this._seperateCustomEvents(p),
                r = false;
            if (!p) {
                r = true
            }
            this._customEventOff(t.customEvents, u, q, r);
            this._emitterOff.apply(this, arguments);
            if (r) {
                try {
                    var o;
                    for (o in this._controllers.optimizer._events) {
                        if (this._controllers.optimizer._events.hasOwnProperty(o) && this._shouldDeoptimizeEvent(o, true)) {
                            this._deoptimizeEvent(o)
                        }
                    }
                    this._bindEvents()
                } catch (s) {}
            }
            return this
        };
        i.has = function(o, q, p) {
            return this._emitter.has.apply(this._emitter, arguments)
        };
        i.trigger = function() {
            this._emitter.trigger.apply(this._emitter, arguments);
            return this
        };
        i.propagateTo = function() {
            this._emitter.propagateTo.apply(this._emitter, arguments);
            return this
        };
        i.stopPropagatingTo = function() {
            this._emitter.stopPropagatingTo.apply(this._emitter, arguments);
            return this
        };
        i.addOptimizer = function(o) {
            this._controllers.optimizer.add(o);
            return this
        };
        i.addCustomEvent = function(o) {
            this._controllers.customEvent.add(o);
            return this
        };
        i._emitterOn = function() {
            this._emitter.on.apply(this._emitter, arguments)
        };
        i._emitterOnce = function() {
            this._emitter.once.apply(this._emitter, arguments)
        };
        i._emitterOff = function() {
            this._emitter.off.apply(this._emitter, arguments)
        };
        i._onEventUnbound = function(p) {
            var o = p.evt;
            if (this._shouldDeoptimizeEvent(o)) {
                this._deoptimizeEvent(o)
            }
        };
        i._customEventOn = function(o, q, p) {
            if (o.length === 0) {
                return
            }
            this._controllers.customEvent.on(o.join(" "), q, p)
        };
        i._customEventOnce = function(o, q, p) {
            if (o.length === 0) {
                return
            }
            this._controllers.customEvent.once(o.join(" "), q, p)
        };
        i._customEventOff = function(o, r, p, q) {
            if (!q && o.length === 0) {
                return
            }
            if (q && o.length === 0) {
                this._controllers.customEvent.off();
                return
            }
            this._controllers.customEvent.off(o.join(" "), r, p)
        };
        i._getProperty = function(q, o) {
            var p = null;
            if (!o) {
                p = this._getOptimizedValue(q)
            }
            if (p === null) {
                p = h[q].call(this, o)
            }
            return p
        };
        i._optimizeEvents = function(q) {
            var p, r, o = q.length;
            for (r = 0; r < o; r++) {
                p = q[r];
                if (this._shouldOptimizeEvent(p)) {
                    this._optimizeEvent(p)
                }
            }
        };
        i._shouldOptimizeEvent = function(o) {
            if (this._controllers.optimizer.canOptimizeEvent(o) && !this._controllers.optimizer.isOptimizingEvent(o)) {
                return true
            }
            return false
        };
        i._shouldDeoptimizeEvent = function(o, p) {
            if (this._controllers.optimizer.isOptimizingEvent(o) && (p || this._emitter._eventEmitter._events[o].length <= 1)) {
                return true
            }
            return false
        };
        i._optimizeEvent = function(p) {
            var o = this._controllers.optimizer.getOptimizerByEvent(p);
            o.activate();
            this._emitterOn(p, o.callback, o)
        };
        i._deoptimizeEvent = function(p) {
            var o = this._controllers.optimizer.getOptimizerByEvent(p);
            o.deactivate();
            this._emitterOff(p, o.callback, o)
        };
        i._getOptimizedValue = function(o) {
            return this._controllers.optimizer.get(o)
        };
        i._seperateCustomEvents = function(s) {
            var p = {
                customEvents: [],
                standardEvents: []
            };
            if (typeof s === "string") {
                var t = s.split(" "),
                    q, r, o = t.length;
                for (r = 0; r < o; r++) {
                    q = t[r];
                    if (this._controllers.customEvent.canHandleCustomEvent(q)) {
                        p.customEvents.push(q)
                    } else {
                        p.standardEvents.push(q)
                    }
                }
            }
            return p
        };
        i._bindEvents = function() {
            this._emitter.on("dom-emitter:didoff", this._onEventUnbound, this)
        };
        b.exports = c.share(k, a, n)
    }, {
        "./CustomEventController": 162,
        "./OptimizerController": 163,
        "./optimizers/optimizers": 169,
        "./queries/queries": 178,
        "ac-dom-emitter": 155,
        "ac-shared-instance": 159
    }],
    165: [function(b, c, a) {
        arguments[4][118][0].apply(a, arguments)
    }, {
        "ac-event-emitter": 157
    }],
    166: [function(b, c, a) {
        arguments[4][119][0].apply(a, arguments)
    }, {
        "ac-event-emitter": 157
    }],
    167: [function(b, c, a) {
        arguments[4][120][0].apply(a, arguments)
    }, {
        "../../WindowDelegateOptimizer": 166,
        "../../queries/queries": 178
    }],
    168: [function(b, c, a) {
        arguments[4][121][0].apply(a, arguments)
    }, {
        "../../WindowDelegateOptimizer": 166,
        "../../queries/queries": 178
    }],
    169: [function(b, c, a) {
        arguments[4][122][0].apply(a, arguments)
    }, {
        "./events/resize": 167,
        "./events/scroll": 168
    }],
    170: [function(b, c, a) {
        c.exports = b(123)
    }, {}],
    171: [function(b, c, a) {
        c.exports = b(124)
    }, {}],
    172: [function(b, c, a) {
        c.exports = b(125)
    }, {}],
    173: [function(b, c, a) {
        c.exports = b(126)
    }, {}],
    174: [function(b, c, a) {
        c.exports = b(127)
    }, {}],
    175: [function(b, c, a) {
        c.exports = b(128)
    }, {}],
    176: [function(b, c, a) {
        c.exports = b(129)
    }, {}],
    177: [function(b, c, a) {
        c.exports = b(130)
    }, {}],
    178: [function(b, c, a) {
        c.exports = b(131)
    }, {
        "./methods/clientHeight": 170,
        "./methods/clientWidth": 171,
        "./methods/innerHeight": 172,
        "./methods/innerWidth": 173,
        "./methods/maxScrollX": 174,
        "./methods/maxScrollY": 175,
        "./methods/scrollX": 176,
        "./methods/scrollY": 177
    }]
}, {}, []);
(function e(h, j, l) {
    function m(a, c) {
        if (!j[a]) {
            if (!h[a]) {
                var d = typeof require == "function" && require;
                if (!c && d) {
                    return d(a, !0)
                }
                if (i) {
                    return i(a, !0)
                }
                var b = new Error("Cannot find module '" + a + "'");
                throw b.code = "MODULE_NOT_FOUND", b
            }
            var f = j[a] = {
                exports: {}
            };
            h[a][0].call(f.exports, function(g) {
                var n = h[a][1][g];
                return m(n ? n : g)
            }, f, f.exports, e, h, j, l)
        }
        return j[a].exports
    }
    var i = typeof require == "function" && require;
    for (var k = 0; k < l.length; k++) {
        m(l[k])
    }
    return m
})({
    1: [function(o, l, i) {
        var m = o("./Request");
        var k = o("./XDomain-request");
        var j = o("./URLParser");
        var n = function() {};
        n._Request = m;
        n.prototype = {
            _defaults: {
                method: "get",
                timeout: 5000
            },
            _extend: function() {
                for (var a = 1; a < arguments.length; a++) {
                    for (var b in arguments[a]) {
                        if (arguments[a].hasOwnProperty(b)) {
                            arguments[0][b] = arguments[a][b]
                        }
                    }
                }
                return arguments[0]
            },
            _getOptions: function(b, a) {
                return this._extend({}, this._defaults, a, b)
            },
            _isCrossDomainRequest: function(a) {
                var b = new j();
                var c = b.parse(window.location.href).origin;
                var d = b.parse(a).origin;
                b.destroy();
                return (d !== c)
            },
            create: function(a) {
                return new m(a)
            },
            cors: function(a) {
                var b = (window.XDomainRequest && document.documentMode < 10) ? k : m;
                return new b(a)
            },
            get: function(a) {
                var b;
                a = this._getOptions({
                    method: "get"
                }, a);
                if (this._isCrossDomainRequest(a.url)) {
                    b = this.cors(a)
                } else {
                    b = this.create(a)
                }
                return b.send()
            },
            getJSON: function(a) {
                return this.get(a).then(function(b) {
                    return JSON.parse(b.responseText)
                })
            },
            head: function(a) {
                a = this._getOptions({
                    method: "head"
                }, a);
                return this.create(a).send()
            },
            isCrossDomainRequest: function(a) {
                return this._isCrossDomainRequest(a)
            },
            post: function(a) {
                a = this._getOptions({
                    method: "post"
                }, a);
                return this.create(a).send()
            }
        };
        l.exports = n
    }, {
        "./Request": 2,
        "./URLParser": 3,
        "./XDomain-request": 4
    }],
    2: [function(f, h, g) {
        var i = function(a) {
            this._initialize(a)
        };
        i.create = function() {
            var a = function() {};
            a.prototype = i.prototype;
            return new a()
        };
        i.prototype = {
            _addReadyStateChangeHandler: function() {
                this.xhr.onreadystatechange = function(a) {
                    if (this.xhr.readyState === 4) {
                        clearTimeout(this._timeout);
                        if (this.xhr.status >= 200 && this.xhr.status < 300) {
                            this.resolve(this.xhr)
                        } else {
                            this.reject(this.xhr)
                        }
                    }
                }.bind(this)
            },
            _getPromise: function() {
                this.promise = new Promise(function(a, b) {
                    this.resolve = a;
                    this.reject = b
                }.bind(this))
            },
            _getTransport: function() {
                return new XMLHttpRequest()
            },
            _initialize: function(a) {
                var b = this._validateConfiguration(a);
                if (b) {
                    throw b
                }
                this._configuration = a;
                var c = this._configuration.method.toUpperCase();
                this.xhr = this._getTransport();
                this._getPromise();
                this.xhr.open(c, this._configuration.url);
                this._setRequestHeaders(a.headers);
                this._addReadyStateChangeHandler()
            },
            _sendXHR: function() {
                if (this.xhr) {
                    if (this._configuration && this._configuration.data) {
                        this.xhr.send(this._configuration.data)
                    } else {
                        this.xhr.send()
                    }
                }
            },
            _setRequestHeaders: function(a) {
                if (a) {
                    a.forEach(function(b) {
                        this.xhr.setRequestHeader(b.name, b.value)
                    }, this)
                }
            },
            _setTimeout: function(a) {
                if (!a) {
                    if (this._configuration && this._configuration.timeout) {
                        a = this._configuration.timeout
                    } else {
                        clearTimeout(this._timeout);
                        this._timeout = null
                    }
                }
                if (this._timeout !== null) {
                    clearTimeout(this._timeout)
                }
                if (a > 0) {
                    this._timeout = setTimeout(function() {
                        this.xhr.abort();
                        this.reject()
                    }.bind(this), a)
                }
            },
            _timeout: null,
            _validateConfiguration: function(a) {
                if (!a) {
                    return "Must provide a configuration object"
                }
                var b = [];
                var c = a.headers;
                if (!a.url) {
                    b.push("Must provide a url")
                }
                if (!a.method) {
                    b.push("Must provide a method")
                }
                if (c) {
                    if (!Array.isArray(c)) {
                        return "Must provide an array of headers"
                    }
                    this._validateHeaders(c, b)
                }
                return b.join(", ")
            },
            _validateHeaders: function(b, a) {
                for (var c = 0, d = b.length; c < d; c++) {
                    if (!b[c].hasOwnProperty("name") || !b[c].hasOwnProperty("value")) {
                        a.push("Must provide a name and value key for all headers");
                        break
                    }
                }
            },
            promise: null,
            reject: null,
            resolve: null,
            send: function() {
                this._setTimeout();
                this._sendXHR();
                return this.promise
            },
            xhr: null
        };
        h.exports = i
    }, {}],
    3: [function(k, j, g) {
        var h = function() {
            this.parser = null
        };
        var i = h.prototype;
        i.parse = function(b) {
            var d;
            var a;
            var f;
            var m;
            var c;
            if (typeof b !== "string") {
                throw new TypeError(b + " must be a string")
            }
            if (!this.parser) {
                this.parser = document.createElement("a")
            }
            this._qualifyPath(b);
            f = this.parser.hostname;
            a = this.parser.protocol;
            m = this._normalizePort(this.parser);
            d = this.parser.origin || this._constructOriginString(this.parser, m);
            c = this.parser.search;
            return {
                originalPath: b,
                qualifiedPath: this.parser.href,
                protocol: a,
                hostname: f,
                origin: d,
                port: m,
                search: c
            }
        };
        i.destroy = function() {
            this.parser = null
        };
        i._constructOriginString = function(a, c) {
            var b = c ? ":" + c : "";
            return a.protocol + "//" + a.hostname + b
        };
        i._normalizePort = function(a) {
            return (a.port === "80" || a.port === "443" || a.port === "0") ? "" : a.port
        };
        i._qualifyPath = function(a) {
            this.parser.href = a;
            this.parser.href = this.parser.href
        };
        j.exports = h
    }, {}],
    4: [function(g, j, h) {
        var k = g("./Request");
        var i = function(a) {
            k.apply(this, arguments)
        };
        i.prototype = k.create();
        i.prototype._getTransport = function() {
            return new XDomainRequest()
        };
        i.prototype._addReadyStateChangeHandler = function() {
            this.xhr.ontimeout = function() {
                this.reject(this.xhr)
            }.bind(this);
            this.xhr.onerror = function() {
                this.reject(this.xhr)
            }.bind(this);
            this.xhr.onload = function() {
                this.resolve(this.xhr)
            }.bind(this)
        };
        i.prototype._setTimeout = function(a) {
            if (!a) {
                if (this._configuration && this._configuration.timeout) {
                    a = this._configuration.timeout
                }
            }
            if (a > 0) {
                this.xhr.timeout = a
            }
        };
        i.prototype._sendXHR = function() {
            setTimeout(function() {
                k.prototype._sendXHR.call(this)
            }.bind(this), 0)
        };
        j.exports = i
    }, {
        "./Request": 2
    }],
    5: [function(g, i, h) {
        var j = g("./ac-ajax/Ajax");
        var k = g("./ac-ajax/Request");
        i.exports = new j();
        i.exports.Ajax = j;
        i.exports.Request = k
    }, {
        "./ac-ajax/Ajax": 1,
        "./ac-ajax/Request": 2
    }],
    6: [function(g, k, h) {
        g("ac-polyfills/Array/prototype.filter");
        g("ac-polyfills/Array/prototype.some");
        var j = g("./data");

        function i() {}
        i.prototype = {
            __getBrowserVersion: function(c, b) {
                var d;
                if (!c || !b) {
                    return
                }
                var a = j.browser.filter(function(f) {
                    return f.identity === b
                });
                a.some(function(f) {
                    var o = f.versionSearch || b;
                    var n = c.indexOf(o);
                    if (n > -1) {
                        d = parseFloat(c.substring(n + o.length + 1));
                        return true
                    }
                });
                return d
            },
            __getName: function(a) {
                return this.__getIdentityStringFromArray(a)
            },
            __getIdentity: function(a) {
                if (a.string) {
                    return this.__matchSubString(a)
                } else {
                    if (a.prop) {
                        return a.identity
                    }
                }
            },
            __getIdentityStringFromArray: function(d) {
                for (var a = 0, c = d.length, b; a < c; a++) {
                    b = this.__getIdentity(d[a]);
                    if (b) {
                        return b
                    }
                }
            },
            __getOS: function(a) {
                return this.__getIdentityStringFromArray(a)
            },
            __getOSVersion: function(d, a) {
                if (!d || !a) {
                    return
                }
                var b = j.os.filter(function(l) {
                    return l.identity === a
                })[0];
                var m = b.versionSearch || a;
                var c = new RegExp(m + " ([\\d_\\.]+)", "i");
                var f = d.match(c);
                if (f !== null) {
                    return f[1].replace(/_/g, ".")
                }
            },
            __matchSubString: function(b) {
                var c = b.subString;
                if (c) {
                    var a = c.test ? !!c.test(b.string) : b.string.indexOf(c) > -1;
                    if (a) {
                        return b.identity
                    }
                }
            }
        };
        i.create = function() {
            var b = new i();
            var a = {};
            a.name = b.__getName(j.browser);
            a.version = b.__getBrowserVersion(j.versionString, a.name);
            a.os = b.__getOS(j.os);
            a.osVersion = b.__getOSVersion(j.versionString, a.os);
            return a
        };
        k.exports = i
    }, {
        "./data": 8,
        "ac-polyfills/Array/prototype.filter": 720,
        "ac-polyfills/Array/prototype.some": 724
    }],
    7: [function(d, g, f) {
        g.exports = {
            getDocumentMode: function() {
                var a;
                if (document.documentMode) {
                    a = parseInt(document.documentMode, 10)
                } else {
                    a = 5;
                    if (document.compatMode) {
                        if (document.compatMode === "CSS1Compat") {
                            a = 7
                        }
                    }
                }
                return a
            }
        }
    }, {}],
    8: [function(d, g, f) {
        g.exports = {
            browser: [{
                string: window.navigator.userAgent,
                subString: "Chrome",
                identity: "Chrome"
            }, {
                string: window.navigator.userAgent,
                subString: /silk/i,
                identity: "Silk"
            }, {
                string: window.navigator.userAgent,
                subString: "OmniWeb",
                versionSearch: "OmniWeb/",
                identity: "OmniWeb"
            }, {
                string: window.navigator.userAgent,
                subString: /mobile\/[^\s]*\ssafari\//i,
                identity: "Safari Mobile",
                versionSearch: "Version"
            }, {
                string: window.navigator.vendor,
                subString: "Apple",
                identity: "Safari",
                versionSearch: "Version"
            }, {
                prop: window.opera,
                identity: "Opera",
                versionSearch: "Version"
            }, {
                string: window.navigator.vendor,
                subString: "iCab",
                identity: "iCab"
            }, {
                string: window.navigator.vendor,
                subString: "KDE",
                identity: "Konqueror"
            }, {
                string: window.navigator.userAgent,
                subString: "Firefox",
                identity: "Firefox"
            }, {
                string: window.navigator.vendor,
                subString: "Camino",
                identity: "Camino"
            }, {
                string: window.navigator.userAgent,
                subString: "Netscape",
                identity: "Netscape"
            }, {
                string: window.navigator.userAgent,
                subString: "MSIE",
                identity: "IE",
                versionSearch: "MSIE"
            }, {
                string: window.navigator.userAgent,
                subString: "Trident",
                identity: "IE",
                versionSearch: "rv"
            }, {
                string: window.navigator.userAgent,
                subString: "Gecko",
                identity: "Mozilla",
                versionSearch: "rv"
            }, {
                string: window.navigator.userAgent,
                subString: "Mozilla",
                identity: "Netscape",
                versionSearch: "Mozilla"
            }],
            os: [{
                string: window.navigator.platform,
                subString: "Win",
                identity: "Windows",
                versionSearch: "Windows NT"
            }, {
                string: window.navigator.platform,
                subString: "Mac",
                identity: "OS X"
            }, {
                string: window.navigator.userAgent,
                subString: "iPhone",
                identity: "iOS",
                versionSearch: "iPhone OS"
            }, {
                string: window.navigator.userAgent,
                subString: "iPad",
                identity: "iOS",
                versionSearch: "CPU OS"
            }, {
                string: window.navigator.userAgent,
                subString: /android/i,
                identity: "Android"
            }, {
                string: window.navigator.platform,
                subString: "Linux",
                identity: "Linux"
            }],
            versionString: window.navigator.userAgent || window.navigator.appVersion || undefined
        }
    }, {}],
    9: [function(n, m, i) {
        var l = n("./ac-browser/BrowserData");
        var j = /applewebkit/i;
        var k = n("./ac-browser/IE");
        var o = l.create();
        o.isWebKit = function(b) {
            var a = b || window.navigator.userAgent;
            return a ? !!j.test(a) : false
        };
        o.lowerCaseUserAgent = navigator.userAgent.toLowerCase();
        if (o.name === "IE") {
            o.IE = {
                documentMode: k.getDocumentMode()
            }
        }
        m.exports = o
    }, {
        "./ac-browser/BrowserData": 6,
        "./ac-browser/IE": 7
    }],
    10: [function(g, k, h) {
        g("ac-polyfills/Array/prototype.slice");
        g("ac-polyfills/Element/prototype.classList");
        var j = g("./className/add");
        k.exports = function i() {
            var a = Array.prototype.slice.call(arguments);
            var b = a.shift(a);
            var c;
            if (b.classList && b.classList.add) {
                b.classList.add.apply(b.classList, a);
                return
            }
            for (c = 0; c < a.length; c++) {
                j(b, a[c])
            }
        }
    }, {
        "./className/add": 12,
        "ac-polyfills/Array/prototype.slice": 723,
        "ac-polyfills/Element/prototype.classList": 727
    }],
    11: [function(d, g, f) {
        g.exports = {
            add: d("./className/add"),
            contains: d("./className/contains"),
            remove: d("./className/remove")
        }
    }, {
        "./className/add": 12,
        "./className/contains": 13,
        "./className/remove": 15
    }],
    12: [function(g, k, h) {
        var j = g("./contains");
        k.exports = function i(a, b) {
            if (!j(a, b)) {
                a.className += " " + b
            }
        }
    }, {
        "./contains": 13
    }],
    13: [function(g, k, h) {
        var i = g("./getTokenRegExp");
        k.exports = function j(a, b) {
            return i(b).test(a.className)
        }
    }, {
        "./getTokenRegExp": 14
    }],
    14: [function(f, i, g) {
        i.exports = function h(a) {
            return new RegExp("(\\s|^)" + a + "(\\s|$)")
        }
    }, {}],
    15: [function(m, l, h) {
        var k = m("./contains");
        var j = m("./getTokenRegExp");
        l.exports = function i(a, b) {
            if (k(a, b)) {
                a.className = a.className.replace(j(b), "$1").trim()
            }
        }
    }, {
        "./contains": 13,
        "./getTokenRegExp": 14
    }],
    16: [function(g, j, h) {
        g("ac-polyfills/Element/prototype.classList");
        var i = g("./className/contains");
        j.exports = function k(a, b) {
            if (a.classList && a.classList.contains) {
                return a.classList.contains(b)
            }
            return i(a, b)
        }
    }, {
        "./className/contains": 13,
        "ac-polyfills/Element/prototype.classList": 727
    }],
    17: [function(d, g, f) {
        g.exports = {
            add: d("./add"),
            contains: d("./contains"),
            remove: d("./remove"),
            toggle: d("./toggle")
        }
    }, {
        "./add": 10,
        "./contains": 16,
        "./remove": 18,
        "./toggle": 19
    }],
    18: [function(j, i, k) {
        j("ac-polyfills/Array/prototype.slice");
        j("ac-polyfills/Element/prototype.classList");
        var g = j("./className/remove");
        i.exports = function h() {
            var a = Array.prototype.slice.call(arguments);
            var b = a.shift(a);
            var c;
            if (b.classList && b.classList.remove) {
                b.classList.remove.apply(b.classList, a);
                return
            }
            for (c = 0; c < a.length; c++) {
                g(b, a[c])
            }
        }
    }, {
        "./className/remove": 15,
        "ac-polyfills/Array/prototype.slice": 723,
        "ac-polyfills/Element/prototype.classList": 727
    }],
    19: [function(k, j, g) {
        k("ac-polyfills/Element/prototype.classList");
        var i = k("./className");
        j.exports = function h(b, c, a) {
            var d = (typeof a !== "undefined");
            var f;
            if (b.classList && b.classList.toggle) {
                if (d) {
                    return b.classList.toggle(c, a)
                }
                return b.classList.toggle(c)
            }
            if (d) {
                f = !!a
            } else {
                f = !i.contains(b, c)
            }
            if (f) {
                i.add(b, c)
            } else {
                i.remove(b, c)
            }
            return f
        }
    }, {
        "./className": 11,
        "ac-polyfills/Element/prototype.classList": 727
    }],
    20: [function(d, g, f) {
        g.exports.EventEmitter = d("./ac-event-emitter/EventEmitter")
    }, {
        "./ac-event-emitter/EventEmitter": 21
    }],
    21: [function(r, t, q) {
        var o = "EventEmitter:propagation";
        var l = function(a) {
            if (a) {
                this.context = a
            }
        };
        var p = l.prototype;
        var n = function() {
            if (!this.hasOwnProperty("_events") && typeof this._events !== "object") {
                this._events = {}
            }
            return this._events
        };
        var v = function(a, f) {
            var d = a[0];
            var c = a[1];
            var g = a[2];
            if ((typeof d !== "string" && typeof d !== "object") || d === null || Array.isArray(d)) {
                throw new TypeError("Expecting event name to be a string or object.")
            }
            if ((typeof d === "string") && !c) {
                throw new Error("Expecting a callback function to be provided.")
            }
            if (c && (typeof c !== "function")) {
                if (typeof d === "object" && typeof c === "object") {
                    g = c
                } else {
                    throw new TypeError("Expecting callback to be a function.")
                }
            }
            if (typeof d === "object") {
                for (var b in d) {
                    f.call(this, b, d[b], g)
                }
            }
            if (typeof d === "string") {
                d = d.split(" ");
                d.forEach(function(h) {
                    f.call(this, h, c, g)
                }, this)
            }
        };
        var m = function(d, c) {
            var b;
            var a;
            var f;
            b = n.call(this)[d];
            if (!b || b.length === 0) {
                return
            }
            b = b.slice();
            this._stoppedImmediatePropagation = false;
            for (a = 0, f = b.length; a < f; a++) {
                if (this._stoppedImmediatePropagation || c(b[a], a)) {
                    break
                }
            }
        };
        var u = function(a, d, c) {
            var b = -1;
            m.call(this, d, function(f, g) {
                if (f.callback === c) {
                    b = g;
                    return true
                }
            });
            if (b === -1) {
                return
            }
            a[d].splice(b, 1)
        };
        p.on = function() {
            var a = n.call(this);
            v.call(this, arguments, function(d, c, b) {
                a[d] = a[d] || (a[d] = []);
                a[d].push({
                    callback: c,
                    context: b
                })
            });
            return this
        };
        p.once = function() {
            v.call(this, arguments, function(a, c, b) {
                var d = function(f) {
                    c.call(b || this, f);
                    this.off(a, d)
                };
                this.on(a, d, this)
            });
            return this
        };
        p.off = function(f, c) {
            var a = n.call(this);
            if (arguments.length === 0) {
                this._events = {}
            } else {
                if (!f || (typeof f !== "string" && typeof f !== "object") || Array.isArray(f)) {
                    throw new TypeError("Expecting event name to be a string or object.")
                }
            }
            if (typeof f === "object") {
                for (var d in f) {
                    u.call(this, a, d, f[d])
                }
            }
            if (typeof f === "string") {
                var b = f.split(" ");
                if (b.length === 1) {
                    if (c) {
                        u.call(this, a, f, c)
                    } else {
                        a[f] = []
                    }
                } else {
                    b.forEach(function(g) {
                        a[g] = []
                    })
                }
            }
            return this
        };
        p.trigger = function(a, c, b) {
            if (!a) {
                throw new Error("trigger method requires an event name")
            }
            if (typeof a !== "string") {
                throw new TypeError("Expecting event names to be a string.")
            }
            if (b && typeof b !== "boolean") {
                throw new TypeError("Expecting doNotPropagate to be a boolean.")
            }
            a = a.split(" ");
            a.forEach(function(d) {
                m.call(this, d, function(f) {
                    f.callback.call(f.context || this.context || this, c)
                }.bind(this));
                if (!b) {
                    m.call(this, o, function(f) {
                        var g = d;
                        if (f.prefix) {
                            g = f.prefix + g
                        }
                        f.emitter.trigger(g, c)
                    })
                }
            }, this);
            return this
        };
        p.propagateTo = function(a, c) {
            var b = n.call(this);
            if (!b[o]) {
                this._events[o] = []
            }
            b[o].push({
                emitter: a,
                prefix: c
            })
        };
        p.stopPropagatingTo = function(d) {
            var a = n.call(this);
            if (!d) {
                a[o] = [];
                return
            }
            var c = a[o];
            var f = c.length;
            var b;
            for (b = 0; b < f; b++) {
                if (c[b].emitter === d) {
                    c.splice(b, 1);
                    break
                }
            }
        };
        p.stopImmediatePropagation = function() {
            this._stoppedImmediatePropagation = true
        };
        p.has = function(b, c, g) {
            var h = n.call(this);
            var a = h[b];
            if (arguments.length === 0) {
                return Object.keys(h)
            }
            if (!a) {
                return false
            }
            if (!c) {
                return (a.length > 0) ? true : false
            }
            for (var i = 0, f = a.length; i < f; i++) {
                var d = a[i];
                if (g && c && d.context === g && d.callback === c) {
                    return true
                } else {
                    if (c && !g && d.callback === c) {
                        return true
                    }
                }
            }
            return false
        };
        t.exports = l
    }, {}],
    22: [function(d, g, f) {
        g.exports = {
            Clip: d("./ac-clip/Clip")
        }
    }, {
        "./ac-clip/Clip": 23
    }],
    23: [function(v, w, u) {
        var r = v("ac-object").create;
        var n = v("ac-easing").createPredefined;
        var x = v("ac-clock");
        var o = v("ac-easing").Ease;
        var m = v("ac-event-emitter").EventEmitter;
        var p = "ease";

        function q(d, f, b, a) {
            a = a || {};
            this._options = a;
            this._target = d;
            this._duration = f * 1000;
            this._delay = (a.delay || 0) * 1000;
            this._remainingDelay = this._delay;
            this._progress = 0;
            this._clock = a.clock || x;
            this._playing = false;
            this._getTime = Date.now || function() {
                return new Date().getTime()
            };
            this._isYoyo = a.yoyo;
            this._direction = 1;
            this._loop = a.loop || 0;
            this._loopCount = 0;
            this._propsTo = b || {};
            this._propsFrom = a.propsFrom || {};
            this._onStart = a.onStart || null;
            this._onUpdate = a.onUpdate || null;
            this._onDraw = a.onDraw || null;
            this._onComplete = a.onComplete || null;
            var c = a.ease || p;
            this._ease = (typeof c === "function") ? new o(c) : n(c);
            this._start = this._start.bind(this);
            this._update = this._update.bind(this);
            this._draw = this._draw.bind(this);
            this._isPrepared = false;
            q._add(this)
        }
        var t = q.prototype = r(m.prototype);
        q.COMPLETE = "complete";
        q.PAUSE = "pause";
        q.PLAY = "play";
        t.play = function() {
            if (!this._playing) {
                this._playing = true;
                if (this._delay === 0 || this._remainingDelay === 0) {
                    this._start()
                } else {
                    if (!this._isPrepared) {
                        this._setDiff();
                        this._updateProps()
                    }
                    this._startTimeout = setTimeout(this._start, this._remainingDelay);
                    this._delayStart = this._getTime()
                }
            }
            return this
        };
        t.pause = function() {
            if (this._playing) {
                if (this._startTimeout) {
                    this._remainingDelay = this._getTime() - this._delayStart;
                    clearTimeout(this._startTimeout)
                }
                this._stop();
                this.trigger(q.PAUSE, this._getDetails())
            }
            return this
        };
        t.destroy = function() {
            this.pause();
            this._options = null;
            this._target = null;
            this._storeTarget = null;
            this._ease = null;
            this._clock = null;
            this._propsTo = null;
            this._propsFrom = null;
            this._storePropsTo = null;
            this._storePropsFrom = null;
            this._propsDiff = null;
            this._propsEase = null;
            this._onStart = null;
            this._onUpdate = null;
            this._onDraw = null;
            this._onComplete = null;
            q._remove(this);
            return this
        };
        t.reset = function() {
            if (!this._isPrepared) {
                return
            }
            this._stop();
            this._resetLoop(this._target, this._storeTarget);
            this._direction = 1;
            this._loop = this._options.loop || 0;
            this._loopCount = 0;
            this._propsFrom = this._storePropsFrom;
            this._propsTo = this._storePropsTo;
            this._progress = 0;
            this._setStartTime();
            if (this._onUpdate) {
                this._onUpdate.call(this, this._getDetails())
            }
            if (this._onDraw) {
                this._onDraw.call(this, this._getDetails())
            }
            return this
        };
        t.isPlaying = function() {
            return this._playing
        };
        t.getTarget = function() {
            return this._target
        };
        t.setCurrentTime = function(a) {
            this.setProgress(a * 1000 / this._duration);
            return this.getCurrentTime()
        };
        t.getCurrentTime = function() {
            return (this.getProgress() * this._duration) / 1000
        };
        t.setProgress = function(a) {
            this._progress = Math.min(1, Math.max(0, a));
            this._setStartTime();
            if (!this._isPrepared) {
                this._setDiff()
            }
            if (this._playing && a === 1) {
                this._completeProps();
                if (this._onUpdate) {
                    this._onUpdate.call(this, this._getDetails())
                }
                if (this._onDraw) {
                    this._onDraw.call(this, this._getDetails())
                }
                this._complete()
            } else {
                this._updateProps();
                if (this._onUpdate) {
                    this._onUpdate.call(this, this._getDetails())
                }
                if (this._onDraw) {
                    this._onDraw.call(this, this._getDetails())
                }
            }
            return this.getProgress()
        };
        t.getProgress = function() {
            return this._progress
        };
        t._resetLoop = function(c, a) {
            var b;
            for (b in a) {
                if (a.hasOwnProperty(b)) {
                    if (a[b] !== null) {
                        if (typeof a[b] === "object") {
                            this._resetLoop(c[b], a[b])
                        } else {
                            c[b] = a[b]
                        }
                    }
                }
            }
        };
        t._addPropsFrom = function() {
            var a;
            for (a in this._propsFrom) {
                if (this._propsFrom.hasOwnProperty(a) && this._propsTo[a] === undefined && this._target[a] !== undefined) {
                    this._propsTo[a] = this._target[a]
                }
            }
        };
        t._cloneTarget = function() {
            var a = {};
            this._cloneTargetLoop(this._propsTo, this._target, a);
            return a
        };
        t._cloneTargetLoop = function(b, d, a) {
            var f;
            var c;
            for (c in b) {
                if (d.hasOwnProperty(c)) {
                    f = typeof d[c];
                    if (d[c] !== null && f === "object") {
                        a[c] = {};
                        this._cloneTargetLoop(b[c], d[c], a[c])
                    } else {
                        if (b[c] && f === "number") {
                            a[c] = d[c]
                        }
                    }
                }
            }
        };
        t._prepareProperties = function() {
            if (!this._isPrepared) {
                this._addPropsFrom();
                this._storeTarget = this._cloneTarget();
                this._storePropsTo = this._propsTo;
                this._storePropsFrom = this._propsFrom;
                this._isPrepared = true
            }
        };
        t._setStartTime = function() {
            this._startTime = this._getTime() - (this.getProgress() * this._duration)
        };
        t._setDiff = function() {
            if (!this._isPrepared) {
                this._prepareProperties()
            }
            this._propsDiff = {};
            this._setDiffLoop(this._propsTo, this._propsFrom, this._target, this._propsDiff)
        };
        t._setDiffLoop = function(b, c, f, g) {
            var a;
            var d;
            for (d in b) {
                if (b.hasOwnProperty(d)) {
                    a = typeof b[d];
                    if (b[d] !== null && a === "object") {
                        c[d] = c[d] || {};
                        g[d] = g[d] || {};
                        this._setDiffLoop(b[d], c[d], f[d], g[d])
                    } else {
                        if (a === "number" && f[d] !== undefined) {
                            if (c[d] !== undefined) {
                                f[d] = c[d]
                            } else {
                                c[d] = f[d]
                            }
                            g[d] = b[d] - f[d]
                        } else {
                            b[d] = null;
                            c[d] = null
                        }
                    }
                }
            }
        };
        t._getDetails = function() {
            return {
                target: this.getTarget(),
                progress: this.getProgress(),
                clip: this
            }
        };
        t._start = function() {
            this._startTimeout = null;
            this._remainingDelay = 0;
            this._setStartTime();
            this._clock.on("update", this._update);
            this._clock.on("draw", this._draw);
            if (!this._clock.isRunning()) {
                this._clock.start()
            }
            this._setDiff();
            this._playing = true;
            this._running = true;
            if (this._onStart) {
                this._onStart.call(this, this._getDetails())
            }
            this.trigger(q.PLAY, this._getDetails())
        };
        t._stop = function() {
            this._playing = false;
            this._running = false;
            this._clock.off("update", this._update);
            this._clock.off("draw", this._draw)
        };
        t._updateProps = function() {
            var a;
            if (this._direction === 1) {
                a = this._ease.getValue(this._progress)
            } else {
                a = 1 - this._ease.getValue(1 - this._progress)
            }
            this._updatePropsLoop(this._propsTo, this._propsFrom, this._target, this._propsDiff, a)
        };
        t._updatePropsLoop = function(b, c, f, g, a) {
            var d;
            for (d in b) {
                if (b.hasOwnProperty(d) && b[d] !== null) {
                    if (typeof b[d] !== "number") {
                        this._updatePropsLoop(b[d], c[d], f[d], g[d], a)
                    } else {
                        f[d] = c[d] + (g[d] * a)
                    }
                }
            }
        };
        t._completeProps = function() {
            this._completePropsLoop(this._propsTo, this._target)
        };
        t._completePropsLoop = function(b, a) {
            var c;
            for (c in b) {
                if (b.hasOwnProperty(c) && b[c] !== null) {
                    if (typeof b[c] !== "number") {
                        this._completePropsLoop(b[c], a[c])
                    } else {
                        a[c] = b[c]
                    }
                }
            }
        };
        t._complete = function() {
            if (this._isYoyo && ((this._loop > 0 && this._loopCount <= this._loop) || (this._loop === 0 && this._loopCount === 0))) {
                this._propsFrom = (this._direction === 1) ? this._storePropsTo : this._storePropsFrom;
                this._propsTo = (this._direction === 1) ? this._storePropsFrom : this._storePropsTo;
                this._direction *= -1;
                if (this._direction === -1) {
                    ++this._loopCount
                }
                this.setProgress(0);
                this._start()
            } else {
                if (this._loopCount < this._loop) {
                    ++this._loopCount;
                    this.setProgress(0);
                    this._start()
                } else {
                    if (this._onComplete) {
                        this._onComplete.call(this, this._getDetails())
                    }
                    this.trigger(q.COMPLETE, this._getDetails());
                    if (this._options && this._options.destroyOnComplete) {
                        this.destroy()
                    }
                }
            }
        };
        t._update = function(a) {
            if (this._running) {
                this._progress = (a.timeNow - this._startTime) / this._duration;
                if (this._progress >= 1) {
                    this._progress = 1;
                    this._running = false;
                    this._completeProps()
                } else {
                    this._updateProps()
                }
                if (this._onUpdate) {
                    this._onUpdate.call(this, this._getDetails())
                }
            }
        };
        t._draw = function(a) {
            if (this._onDraw) {
                this._onDraw.call(this, this._getDetails())
            }
            if (!this._running) {
                this._stop();
                if (this._progress === 1) {
                    this._complete()
                }
            }
        };
        q._instantiate = function() {
            this._clips = [];
            return this
        };
        q._add = function(a) {
            this._clips.push(a)
        };
        q._remove = function(b) {
            var a = this._clips.indexOf(b);
            if (a > -1) {
                this._clips.splice(a, 1)
            }
        };
        q.getAll = function(b) {
            if (b !== undefined) {
                var a = [];
                var c = this._clips.length;
                while (c--) {
                    if (this._clips[c].getTarget() === b) {
                        a.push(this._clips[c])
                    }
                }
                return a
            }
            return Array.prototype.slice.call(this._clips)
        };
        q.destroyAll = function(b) {
            var a = this.getAll(b);
            if (this._clips.length === a.length) {
                this._clips = []
            }
            var c = a.length;
            while (c--) {
                a[c].destroy()
            }
            return a
        };
        q.to = function(c, d, b, a) {
            a = a || {};
            if (a.destroyOnComplete === undefined) {
                a.destroyOnComplete = true
            }
            return new q(c, d, b, a).play()
        };
        q.from = function(b, c, a, d) {
            d = d || {};
            d.propsFrom = a;
            if (d.destroyOnComplete === undefined) {
                d.destroyOnComplete = true
            }
            return new q(b, c, d.propsTo, d).play()
        };
        w.exports = q._instantiate()
    }, {
        "ac-clock": 26,
        "ac-easing": 153,
        "ac-event-emitter": 20,
        "ac-object": 713
    }],
    24: [function(d, g, f) {
        arguments[4][20][0].apply(f, arguments)
    }, {
        "./ac-event-emitter/EventEmitter": 25,
        dup: 20
    }],
    25: [function(d, g, f) {
        arguments[4][21][0].apply(f, arguments)
    }, {
        dup: 21
    }],
    26: [function(m, l, h) {
        var j = m("./ac-clock/Clock"),
            k = m("./ac-clock/ThrottledClock"),
            i = m("./ac-clock/sharedClockInstance");
        i.Clock = j;
        i.ThrottledClock = k;
        l.exports = i
    }, {
        "./ac-clock/Clock": 27,
        "./ac-clock/ThrottledClock": 28,
        "./ac-clock/sharedClockInstance": 29
    }],
    27: [function(o, n, i) {
        var l;
        var m = o("ac-event-emitter").EventEmitter;
        var j = new Date().getTime();

        function k() {
            m.call(this);
            this.lastFrameTime = null;
            this._animationFrame = null;
            this._active = false;
            this._startTime = null;
            this._boundOnAnimationFrame = this._onAnimationFrame.bind(this);
            this._getTime = Date.now || function() {
                return new Date().getTime()
            }
        }
        l = k.prototype = new m(null);
        l.start = function() {
            if (this._active) {
                return
            }
            this._tick()
        };
        l.stop = function() {
            if (this._active) {
                window.cancelAnimationFrame(this._animationFrame)
            }
            this._animationFrame = null;
            this.lastFrameTime = null;
            this._active = false
        };
        l.destroy = function() {
            this.stop();
            this.off();
            var a;
            for (a in this) {
                if (this.hasOwnProperty(a)) {
                    this[a] = null
                }
            }
        };
        l.isRunning = function() {
            return this._active
        };
        l._tick = function() {
            if (!this._active) {
                this._active = true
            }
            this._animationFrame = window.requestAnimationFrame(this._boundOnAnimationFrame)
        };
        l._onAnimationFrame = function(b) {
            var a = 0;
            var f = this._getTime();
            if (this.lastFrameTime === null) {
                this.lastFrameTime = f - j
            } else {
                a = b - this.lastFrameTime
            }
            var c = 0,
                d;
            if (a !== 0) {
                c = 1000 / a
            }
            d = {
                time: b,
                delta: a,
                fps: c,
                naturalFps: c,
                timeNow: f
            };
            this.trigger("update", d);
            this.trigger("draw", d);
            this._animationFrame = null;
            this.lastFrameTime = b;
            if (this._active !== false) {
                this._tick()
            } else {
                this.lastFrameTime = null
            }
        };
        n.exports = k
    }, {
        "ac-event-emitter": 24
    }],
    28: [function(o, n, i) {
        var l;
        var j = o("./sharedClockInstance"),
            m = o("ac-event-emitter").EventEmitter;

        function k(a, b) {
            if (a === null) {
                return
            }
            m.call(this);
            b = b || {};
            this._fps = a || null;
            this._clock = b.clock || j;
            this._lastThrottledTime = null;
            this._clockEvent = null;
            this._clock.on("update", this._onClockUpdate, this)
        }
        l = k.prototype = new m(null);
        l.setFps = function(a) {
            this._fps = a;
            return this
        };
        l.getFps = function() {
            return this._fps
        };
        l.start = function() {
            this._clock.start();
            return this
        };
        l.stop = function() {
            this._clock.stop();
            return this
        };
        l.isRunning = function() {
            return this._clock.isRunning()
        };
        l.destroy = function() {
            this._clock.off("update", this._onClockUpdate, this);
            this._clock.destroy.call(this)
        };
        l._onClockUpdate = function(b) {
            if (this._lastThrottledTime === null) {
                this._lastThrottledTime = this._clock.lastFrameTime
            }
            var a = b.time - this._lastThrottledTime;
            if (!this._fps) {
                throw new TypeError("FPS is not defined.")
            }
            if (a < (1000 / this._fps)) {
                return
            }
            this._clockEvent = b;
            this._clockEvent.delta = a;
            this._clockEvent.fps = 1000 / a;
            this._lastThrottledTime = this._clockEvent.time;
            this._clock.once("draw", this._onClockDraw, this);
            this.trigger("update", this._clockEvent)
        };
        l._onClockDraw = function() {
            this.trigger("draw", this._clockEvent)
        };
        n.exports = k
    }, {
        "./sharedClockInstance": 29,
        "ac-event-emitter": 24
    }],
    29: [function(f, i, g) {
        var h = f("./Clock");
        i.exports = new h()
    }, {
        "./Clock": 27
    }],
    30: [function(f, i, g) {
        var h = f("./ac-prefixer/Prefixer");
        i.exports = new h();
        i.exports.Prefixer = h
    }, {
        "./ac-prefixer/Prefixer": 31
    }],
    31: [function(y, A, w) {
        var r = y("./Prefixer/camelCasedEvents");
        var o = /(\([^\)]+\))/gi;
        var v = /([^ ,;\(]+(\([^\)]+\))?)/gi;
        var t = /(-webkit-|-moz-|-ms-)|^(webkit|moz|ms)/gi;
        var B = /^(webkit|moz|ms)/gi;
        var x = ["-webkit-", "-moz-", "-ms-"];
        var q = ["Webkit", "Moz", "ms"];
        var p = ["webkit", "moz", "ms"];

        function z() {
            this._supportsAvailable = ("CSS" in window && "supports" in window.CSS);
            this._cssPrefixes = x;
            this._domPrefixes = q;
            this._evtPrefixes = p;
            this._styleProperties = {};
            this._styleValues = {};
            this._eventTypes = {}
        }
        var u = z.prototype;
        u.getEventType = function(b) {
            var a;
            var c;
            b = b.toLowerCase();
            if (b in this._eventTypes) {
                return this._eventTypes[b]
            }
            if (this._checkEventType("on" + b)) {
                return this._eventTypes[b] = b
            }
            if (r[b]) {
                for (a in r[b]) {
                    if (this._checkEventType(a)) {
                        return this._eventTypes[b] = r[b][a]
                    }
                }
            }
            for (c = 0; c < this._evtPrefixes.length; c++) {
                if (this._checkEventType("on" + this._evtPrefixes[c] + b)) {
                    this._eventTypes[b] = this._evtPrefixes[c] + b;
                    this._reduceAvailablePrefixes(c);
                    return this._eventTypes[b]
                }
            }
            return this._eventTypes[b] = b
        };
        u._checkEventType = function(a) {
            return (a in window || a in document)
        };
        u.getStyleProperty = function(a) {
            var b;
            var d;
            var c;
            a += "";
            if (a in this._styleProperties) {
                return this._styleProperties[a].dom
            }
            a = this._toDOM(a);
            this._prepareTestElement();
            d = a.charAt(0).toUpperCase() + a.substr(1);
            if (a === "filter") {
                b = ["WebkitFilter", "filter"]
            } else {
                b = (a + " " + this._domPrefixes.join(d + " ") + d).split(" ")
            }
            for (c = 0; c < b.length; c++) {
                if (this._el.style[b[c]] !== undefined) {
                    if (c !== 0) {
                        this._reduceAvailablePrefixes(c - 1)
                    }
                    this._memoizeStyleProperty(a, b[c]);
                    return b[c]
                }
            }
            this._memoizeStyleProperty(a, false);
            return false
        };
        u._memoizeStyleProperty = function(a, d) {
            var c = this._toCSS(a);
            var b = (d === false) ? false : this._toCSS(d);
            this._styleProperties[a] = this._styleProperties[d] = this._styleProperties[c] = this._styleProperties[b] = {
                dom: d,
                css: b
            }
        };
        u.getStyleCSS = function(a, b) {
            var c;
            a = this.getStyleProperty(a);
            if (!a) {
                return false
            }
            c = this._styleProperties[a].css;
            if (typeof b !== "undefined") {
                b = this.getStyleValue(a, b);
                if (b === false) {
                    return false
                }
                c += ":" + b + ";"
            }
            return c
        };
        u.getStyleValue = function(a, b) {
            var c;
            b += "";
            a = this.getStyleProperty(a);
            if (!a) {
                return false
            }
            if (this._testStyleValue(a, b)) {
                return b
            }
            c = this._styleProperties[a].css;
            b = b.replace(v, function(h) {
                var i;
                var d;
                var f;
                var g;
                if (h[0] === "#" || !isNaN(h[0])) {
                    return h
                }
                d = h.replace(o, "");
                f = c + ":" + d;
                if (f in this._styleValues) {
                    if (this._styleValues[f] === false) {
                        return ""
                    }
                    return h.replace(d, this._styleValues[f])
                }
                i = this._cssPrefixes.map(function(j) {
                    return j + h
                });
                i = [h].concat(i);
                for (g = 0; g < i.length; g++) {
                    if (this._testStyleValue(a, i[g])) {
                        if (g !== 0) {
                            this._reduceAvailablePrefixes(g - 1)
                        }
                        this._styleValues[f] = i[g].replace(o, "");
                        return i[g]
                    }
                }
                this._styleValues[f] = false;
                return ""
            }.bind(this));
            b = b.trim();
            return (b === "") ? false : b
        };
        u._testStyleValue = function(b, c) {
            var d;
            if (this._supportsAvailable) {
                b = this._styleProperties[b].css;
                return CSS.supports(b, c)
            }
            this._prepareTestElement();
            d = this._el.style[b];
            try {
                this._el.style[b] = c
            } catch (a) {
                return false
            }
            return (this._el.style[b] && this._el.style[b] !== d)
        };
        u.stripPrefixes = function(a) {
            a = String.prototype.replace.call(a, t, "");
            return a.charAt(0).toLowerCase() + a.slice(1)
        };
        u._reduceAvailablePrefixes = function(a) {
            if (this._cssPrefixes.length !== 1) {
                this._cssPrefixes = [this._cssPrefixes[a]];
                this._domPrefixes = [this._domPrefixes[a]];
                this._evtPrefixes = [this._evtPrefixes[a]]
            }
        };
        u._toDOM = function(a) {
            var b;
            if (a.toLowerCase() === "float") {
                return "cssFloat"
            }
            a = a.replace(/-([a-z])/g, function(c, d) {
                return d.toUpperCase()
            });
            if (a.substr(0, 2) === "Ms") {
                a = "ms" + a.substr(2)
            }
            return a
        };
        u._toCSS = function(a) {
            var b;
            if (a.toLowerCase() === "cssfloat") {
                return "float"
            }
            if (B.test(a)) {
                a = "-" + a
            }
            return a.replace(/([A-Z]+)([A-Z][a-z])/g, "$1-$2").replace(/([a-z\d])([A-Z])/g, "$1-$2").toLowerCase()
        };
        u._prepareTestElement = function() {
            if (!this._el) {
                this._el = document.createElement("_")
            } else {
                this._el.style.cssText = "";
                this._el.removeAttribute("style")
            }
        };
        A.exports = z
    }, {
        "./Prefixer/camelCasedEvents": 32
    }],
    32: [function(d, g, f) {
        g.exports = {
            transitionend: {
                onwebkittransitionend: "webkitTransitionEnd",
                onmstransitionend: "MSTransitionEnd"
            },
            animationstart: {
                onwebkitanimationstart: "webkitAnimationStart",
                onmsanimationstart: "MSAnimationStart"
            },
            animationend: {
                onwebkitanimationend: "webkitAnimationEnd",
                onmsanimationend: "MSAnimationEnd"
            },
            animationiteration: {
                onwebkitanimationiteration: "webkitAnimationIteration",
                onmsanimationiteration: "MSAnimationIteration"
            },
            fullscreenchange: {
                onmsfullscreenchange: "MSFullscreenChange"
            },
            fullscreenerror: {
                onmsfullscreenerror: "MSFullscreenError"
            }
        }
    }, {}],
    33: [function(d, g, f) {
        g.exports = {
            addEventListener: d("./ac-dom-events/addEventListener"),
            dispatchEvent: d("./ac-dom-events/dispatchEvent"),
            preventDefault: d("./ac-dom-events/preventDefault"),
            removeEventListener: d("./ac-dom-events/removeEventListener"),
            stop: d("./ac-dom-events/stop"),
            stopPropagation: d("./ac-dom-events/stopPropagation"),
            target: d("./ac-dom-events/target")
        }
    }, {
        "./ac-dom-events/addEventListener": 34,
        "./ac-dom-events/dispatchEvent": 35,
        "./ac-dom-events/preventDefault": 36,
        "./ac-dom-events/removeEventListener": 37,
        "./ac-dom-events/stop": 38,
        "./ac-dom-events/stopPropagation": 39,
        "./ac-dom-events/target": 40
    }],
    34: [function(g, k, h) {
        var i = g("ac-prefixer");
        k.exports = function j(a, c, b, d) {
            c = i.getEventType(c);
            if (a.addEventListener) {
                a.addEventListener(c, b, d)
            } else {
                c = "on" + c.toLowerCase();
                a.attachEvent(c, b)
            }
            return a
        }
    }, {
        "ac-prefixer": 30
    }],
    35: [function(f, i, g) {
        i.exports = function h(a, b, c) {
            var d;
            b = b.toLowerCase();
            if (window.CustomEvent) {
                if (c) {
                    d = new CustomEvent(b, c)
                } else {
                    d = new CustomEvent(b)
                }
                a.dispatchEvent(d)
            } else {
                d = document.createEventObject();
                if (c && "detail" in c) {
                    d.detail = c.detail
                }
                a.fireEvent("on" + b, d)
            }
            return a
        }
    }, {}],
    36: [function(i, h, g) {
        h.exports = function f(a) {
            a = a || window.event;
            if (a.preventDefault) {
                a.preventDefault()
            } else {
                a.returnValue = false
            }
        }
    }, {}],
    37: [function(g, k, h) {
        var i = g("ac-prefixer");
        k.exports = function j(a, c, b, d) {
            c = i.getEventType(c);
            if (a.removeEventListener) {
                a.removeEventListener(c, b, d)
            } else {
                c = "on" + c.toLowerCase();
                a.detachEvent(c, b)
            }
            return a
        }
    }, {
        "ac-prefixer": 30
    }],
    38: [function(l, j, h) {
        var i = l("./stopPropagation");
        var m = l("./preventDefault");
        j.exports = function k(a) {
            a = a || window.event;
            i(a);
            m(a);
            a.stopped = true;
            a.returnValue = false
        }
    }, {
        "./preventDefault": 36,
        "./stopPropagation": 39
    }],
    39: [function(i, h, f) {
        h.exports = function g(a) {
            a = a || window.event;
            if (a.stopPropagation) {
                a.stopPropagation()
            } else {
                a.cancelBubble = true
            }
        }
    }, {}],
    40: [function(f, i, g) {
        i.exports = function h(a) {
            a = a || window.event;
            return (typeof a.target !== "undefined") ? a.target : a.srcElement
        }
    }, {}],
    41: [function(f, i, g) {
        var h = {
            querySelector: f("./ac-dom-traversal/querySelector"),
            querySelectorAll: f("./ac-dom-traversal/querySelectorAll"),
            ancestor: f("./ac-dom-traversal/ancestor"),
            ancestors: f("./ac-dom-traversal/ancestors"),
            children: f("./ac-dom-traversal/children"),
            firstChild: f("./ac-dom-traversal/firstChild"),
            lastChild: f("./ac-dom-traversal/lastChild"),
            siblings: f("./ac-dom-traversal/siblings"),
            nextSibling: f("./ac-dom-traversal/nextSibling"),
            nextSiblings: f("./ac-dom-traversal/nextSiblings"),
            previousSibling: f("./ac-dom-traversal/previousSibling"),
            previousSiblings: f("./ac-dom-traversal/previousSiblings"),
            filterBySelector: f("./ac-dom-traversal/filterBySelector"),
            matchesSelector: f("./ac-dom-traversal/matchesSelector")
        };
        f("./ac-dom-traversal/shims/ie")(h);
        i.exports = h
    }, {
        "./ac-dom-traversal/ancestor": 42,
        "./ac-dom-traversal/ancestors": 43,
        "./ac-dom-traversal/children": 44,
        "./ac-dom-traversal/filterBySelector": 45,
        "./ac-dom-traversal/firstChild": 46,
        "./ac-dom-traversal/lastChild": 49,
        "./ac-dom-traversal/matchesSelector": 50,
        "./ac-dom-traversal/nextSibling": 51,
        "./ac-dom-traversal/nextSiblings": 52,
        "./ac-dom-traversal/previousSibling": 53,
        "./ac-dom-traversal/previousSiblings": 54,
        "./ac-dom-traversal/querySelector": 55,
        "./ac-dom-traversal/querySelectorAll": 56,
        "./ac-dom-traversal/shims/ie": 57,
        "./ac-dom-traversal/siblings": 58
    }],
    42: [function(n, l, o) {
        var j = n("ac-dom-nodes");
        var i = n("./matchesSelector");
        var k = n("./helpers/validate");
        l.exports = function m(a, b) {
            k.childNode(a, true, "ancestors");
            k.selector(b, false, "ancestors");
            if (a !== document.body) {
                while ((a = a.parentNode) && j.isElement(a)) {
                    if (!b || i(a, b)) {
                        return a
                    }
                    if (a === document.body) {
                        break
                    }
                }
            }
            return null
        }
    }, {
        "./helpers/validate": 48,
        "./matchesSelector": 50,
        "ac-dom-nodes": 102
    }],
    43: [function(n, m, o) {
        var j = n("ac-dom-nodes");
        var i = n("./matchesSelector");
        var k = n("./helpers/validate");
        m.exports = function l(a, c) {
            var b = [];
            k.childNode(a, true, "ancestors");
            k.selector(c, false, "ancestors");
            if (a !== document.body) {
                while ((a = a.parentNode) && j.isElement(a)) {
                    if (!c || i(a, c)) {
                        b.push(a)
                    }
                    if (a === document.body) {
                        break
                    }
                }
            }
            return b
        }
    }, {
        "./helpers/validate": 48,
        "./matchesSelector": 50,
        "ac-dom-nodes": 102
    }],
    44: [function(n, l, o) {
        var j = n("ac-dom-nodes");
        var i = n("./filterBySelector");
        var k = n("./helpers/validate");
        l.exports = function m(a, c) {
            var b;
            k.parentNode(a, true, "children");
            k.selector(c, false, "children");
            b = a.children || a.childNodes;
            b = j.filterByNodeType(b);
            if (c) {
                b = i(b, c)
            }
            return b
        }
    }, {
        "./filterBySelector": 45,
        "./helpers/validate": 48,
        "ac-dom-nodes": 102
    }],
    45: [function(l, k, m) {
        var h = l("./matchesSelector");
        var j = l("./helpers/validate");
        k.exports = function i(a, b) {
            j.selector(b, true, "filterBySelector");
            a = Array.prototype.slice.call(a);
            return a.filter(function(c) {
                return h(c, b)
            })
        }
    }, {
        "./helpers/validate": 48,
        "./matchesSelector": 50
    }],
    46: [function(h, l, i) {
        var m = h("./children");
        var j = h("./helpers/validate");
        l.exports = function k(a, c) {
            var b;
            j.parentNode(a, true, "firstChild");
            j.selector(c, false, "firstChild");
            if (a.firstElementChild && !c) {
                return a.firstElementChild
            }
            b = m(a, c);
            if (b.length) {
                return b[0]
            }
            return null
        }
    }, {
        "./children": 44,
        "./helpers/validate": 48
    }],
    47: [function(d, g, f) {
        g.exports = window.Element ? (function(a) {
            return a.matches || a.matchesSelector || a.webkitMatchesSelector || a.mozMatchesSelector || a.msMatchesSelector || a.oMatchesSelector
        }(Element.prototype)) : null
    }, {}],
    48: [function(r, u, q) {
        var m = r("ac-dom-nodes");
        var v = function(a, b) {
            if (!m.isNode(a)) {
                return false
            }
            if (typeof b === "number") {
                return (a.nodeType === b)
            }
            return (b.indexOf(a.nodeType) !== -1)
        };
        var o = [m.ELEMENT_NODE, m.DOCUMENT_NODE, m.DOCUMENT_FRAGMENT_NODE];
        var n = " must be an Element, Document, or Document Fragment";
        var l = [m.ELEMENT_NODE, m.TEXT_NODE, m.COMMENT_NODE];
        var p = " must be an Element, TextNode, or Comment";
        var t = " must be a string";
        u.exports = {
            parentNode: function(b, c, d, a) {
                a = a || "node";
                if ((b || c) && !v(b, o)) {
                    throw new TypeError(d + ": " + a + n)
                }
            },
            childNode: function(b, c, d, a) {
                a = a || "node";
                if (!b && !c) {
                    return
                }
                if (!v(b, l)) {
                    throw new TypeError(d + ": " + a + p)
                }
            },
            selector: function(b, c, d, a) {
                a = a || "selector";
                if ((b || c) && typeof b !== "string") {
                    throw new TypeError(d + ": " + a + t)
                }
            }
        }
    }, {
        "ac-dom-nodes": 102
    }],
    49: [function(h, l, i) {
        var m = h("./children");
        var j = h("./helpers/validate");
        l.exports = function k(a, c) {
            var b;
            j.parentNode(a, true, "lastChild");
            j.selector(c, false, "lastChild");
            if (a.lastElementChild && !c) {
                return a.lastElementChild
            }
            b = m(a, c);
            if (b.length) {
                return b[b.length - 1]
            }
            return null
        }
    }, {
        "./children": 44,
        "./helpers/validate": 48
    }],
    50: [function(m, l, n) {
        var i = m("ac-dom-nodes");
        var j = m("./helpers/nativeMatches");
        var k = m("./helpers/validate");
        l.exports = function o(a, b) {
            k.selector(b, true, "matchesSelector");
            return i.isElement(a) ? j.call(a, b) : false
        }
    }, {
        "./helpers/nativeMatches": 47,
        "./helpers/validate": 48,
        "ac-dom-nodes": 102
    }],
    51: [function(n, m, o) {
        var j = n("ac-dom-nodes");
        var i = n("./matchesSelector");
        var k = n("./helpers/validate");
        m.exports = function l(a, b) {
            k.childNode(a, true, "nextSibling");
            k.selector(b, false, "nextSibling");
            if (a.nextElementSibling && !b) {
                return a.nextElementSibling
            }
            while (a = a.nextSibling) {
                if (j.isElement(a)) {
                    if (!b || i(a, b)) {
                        return a
                    }
                }
            }
            return null
        }
    }, {
        "./helpers/validate": 48,
        "./matchesSelector": 50,
        "ac-dom-nodes": 102
    }],
    52: [function(m, l, o) {
        var j = m("ac-dom-nodes");
        var i = m("./matchesSelector");
        var k = m("./helpers/validate");
        l.exports = function n(a, c) {
            var b = [];
            k.childNode(a, true, "nextSiblings");
            k.selector(c, false, "nextSiblings");
            while (a = a.nextSibling) {
                if (j.isElement(a)) {
                    if (!c || i(a, c)) {
                        b.push(a)
                    }
                }
            }
            return b
        }
    }, {
        "./helpers/validate": 48,
        "./matchesSelector": 50,
        "ac-dom-nodes": 102
    }],
    53: [function(n, m, o) {
        var j = n("ac-dom-nodes");
        var i = n("./matchesSelector");
        var k = n("./helpers/validate");
        m.exports = function l(a, b) {
            k.childNode(a, true, "previousSibling");
            k.selector(b, false, "previousSibling");
            if (a.previousElementSibling && !b) {
                return a.previousElementSibling
            }
            while (a = a.previousSibling) {
                if (j.isElement(a)) {
                    if (!b || i(a, b)) {
                        return a
                    }
                }
            }
            return null
        }
    }, {
        "./helpers/validate": 48,
        "./matchesSelector": 50,
        "ac-dom-nodes": 102
    }],
    54: [function(n, m, o) {
        var j = n("ac-dom-nodes");
        var i = n("./matchesSelector");
        var k = n("./helpers/validate");
        m.exports = function l(a, c) {
            var b = [];
            k.childNode(a, true, "previousSiblings");
            k.selector(c, false, "previousSiblings");
            while (a = a.previousSibling) {
                if (j.isElement(a)) {
                    if (!c || i(a, c)) {
                        b.push(a)
                    }
                }
            }
            return b.reverse()
        }
    }, {
        "./helpers/validate": 48,
        "./matchesSelector": 50,
        "ac-dom-nodes": 102
    }],
    55: [function(g, k, h) {
        var i = g("./helpers/validate");
        k.exports = function j(b, a) {
            a = a || document;
            i.parentNode(a, true, "querySelector", "context");
            i.selector(b, true, "querySelector");
            return a.querySelector(b)
        }
    }, {
        "./helpers/validate": 48
    }],
    56: [function(g, k, h) {
        var i = g("./helpers/validate");
        k.exports = function j(b, a) {
            a = a || document;
            i.parentNode(a, true, "querySelectorAll", "context");
            i.selector(b, true, "querySelectorAll");
            return Array.prototype.slice.call(a.querySelectorAll(b))
        }
    }, {
        "./helpers/validate": 48
    }],
    57: [function(n, m, o) {
        var l = n("../vendor/sizzle/sizzle");
        var i = n("ac-dom-nodes");
        var j = n("../helpers/nativeMatches");
        var k = n("../helpers/validate");
        m.exports = function(a, b) {
            if (b || !("querySelectorAll" in document)) {
                a.querySelectorAll = function(f, c) {
                    var d;
                    var g;
                    c = c || document;
                    k.parentNode(c, true, "querySelectorAll", "context");
                    k.selector(f, true, "querySelectorAll");
                    if (i.isDocumentFragment(c)) {
                        d = a.children(c);
                        g = [];
                        d.forEach(function(h) {
                            var q;
                            if (l.matchesSelector(h, f)) {
                                g.push(h)
                            }
                            q = l(f, h);
                            if (q.length) {
                                g = g.concat(q)
                            }
                        });
                        return g
                    }
                    return l(f, c)
                };
                a.querySelector = function(d, c) {
                    var f;
                    c = c || document;
                    k.parentNode(c, true, "querySelector", "context");
                    k.selector(d, true, "querySelector");
                    f = a.querySelectorAll(d, c);
                    return f.length ? f[0] : null
                }
            }
            if (b || !j) {
                a.matchesSelector = function(c, d) {
                    return l.matchesSelector(c, d)
                }
            }
        }
    }, {
        "../helpers/nativeMatches": 47,
        "../helpers/validate": 48,
        "../vendor/sizzle/sizzle": 59,
        "ac-dom-nodes": 102
    }],
    58: [function(h, l, i) {
        var m = h("./children");
        var j = h("./helpers/validate");
        l.exports = function k(a, c) {
            var b = [];
            j.childNode(a, true, "siblings");
            j.selector(c, false, "siblings");
            if (a.parentNode) {
                b = m(a.parentNode, c);
                b = b.filter(function(d) {
                    return (d !== a)
                })
            }
            return b
        }
    }, {
        "./children": 44,
        "./helpers/validate": 48
    }],
    59: [function(d, g, f) {
        /*!
         * Sizzle CSS Selector Engine
         *  Copyright 2012, The Dojo Foundation
         *  Released under the MIT, BSD, and GPL Licenses.
         *  More information: http://sizzlejs.com/
         */
        (function(a2, bd) {
            var aS, a0, be, br, bl, bn = a2.document,
                bk = bn.documentElement,
                aK = "undefined",
                bj = false,
                bm = true,
                bf = 0,
                ba = [].slice,
                aU = [].push,
                aM = ("sizcache" + Math.random()).replace(".", ""),
                aE = "[\\x20\\t\\r\\n\\f]",
                bb = "(?:\\\\.|[-\\w]|[^\\x00-\\xa0])",
                bc = "(?:[\\w#_-]|[^\\x00-\\xa0]|\\\\.)",
                aC = "([*^$|!~]?=)",
                a8 = "\\[" + aE + "*(" + bb + "+)" + aE + "*(?:" + aC + aE + "*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|(" + bc + "+)|)|)" + aE + "*\\]",
                az = ":(" + bb + "+)(?:\\((?:(['\"])((?:\\\\.|[^\\\\])*?)\\2|(.*))\\)|)",
                aA = ":(nth|eq|gt|lt|first|last|even|odd)(?:\\((\\d*)\\)|)(?=[^-]|$)",
                bg = aE + "*([\\x20\\t\\r\\n\\f>+~])" + aE + "*",
                bh = "(?=[^\\x20\\t\\r\\n\\f])(?:\\\\.|" + a8 + "|" + az.replace(2, 7) + "|[^\\\\(),])+",
                aP = new RegExp("^" + aE + "+|((?:^|[^\\\\])(?:\\\\.)*)" + aE + "+$", "g"),
                av = new RegExp("^" + bg),
                aQ = new RegExp(bh + "?(?=" + aE + "*,|$)", "g"),
                a = new RegExp("^(?:(?!,)(?:(?:^|,)" + aE + "*" + bh + ")*?|" + aE + "*(.*?))(\\)|$)"),
                aG = new RegExp(bh.slice(19, -6) + "\\x20\\t\\r\\n\\f>+~])+|" + bg, "g"),
                a9 = /^(?:#([\w\-]+)|(\w+)|\.([\w\-]+))$/,
                aZ = /[\x20\t\r\n\f]*[+~]/,
                aJ = /:not\($/,
                aY = /h\d/i,
                a6 = /input|select|textarea|button/i,
                aR = /\\(?!\\)/g,
                aw = {
                    ID: new RegExp("^#(" + bb + "+)"),
                    CLASS: new RegExp("^\\.(" + bb + "+)"),
                    NAME: new RegExp("^\\[name=['\"]?(" + bb + "+)['\"]?\\]"),
                    TAG: new RegExp("^(" + bb.replace("[-", "[-\\*") + "+)"),
                    ATTR: new RegExp("^" + a8),
                    PSEUDO: new RegExp("^" + az),
                    CHILD: new RegExp("^:(only|nth|last|first)-child(?:\\(" + aE + "*(even|odd|(([+-]|)(\\d*)n|)" + aE + "*(?:([+-]|)" + aE + "*(\\d+)|))" + aE + "*\\)|)", "i"),
                    POS: new RegExp(aA, "ig"),
                    needsContext: new RegExp("^" + aE + "*[>+~]|" + aA, "i")
                },
                aW = {},
                aV = [],
                a5 = {},
                aO = [],
                aI = function(h) {
                    h.sizzleFilter = true;
                    return h
                },
                bq = function(h) {
                    return function(i) {
                        return i.nodeName.toLowerCase() === "input" && i.type === h
                    }
                },
                aT = function(h) {
                    return function(i) {
                        var j = i.nodeName.toLowerCase();
                        return (j === "input" || j === "button") && i.type === h
                    }
                },
                c = function(k) {
                    var j = false,
                        h = bn.createElement("div");
                    try {
                        j = k(h)
                    } catch (i) {}
                    h = null;
                    return j
                },
                a1 = c(function(h) {
                    h.innerHTML = "<select></select>";
                    var i = typeof h.lastChild.getAttribute("multiple");
                    return i !== "boolean" && i !== "string"
                }),
                bt = c(function(h) {
                    h.id = aM + 0;
                    h.innerHTML = "<a name='" + aM + "'></a><div name='" + aM + "'></div>";
                    bk.insertBefore(h, bk.firstChild);
                    var i = bn.getElementsByName && bn.getElementsByName(aM).length === 2 + bn.getElementsByName(aM + 0).length;
                    bl = !bn.getElementById(aM);
                    bk.removeChild(h);
                    return i
                }),
                bo = c(function(h) {
                    h.appendChild(bn.createComment(""));
                    return h.getElementsByTagName("*").length === 0
                }),
                ax = c(function(h) {
                    h.innerHTML = "<a href='#'></a>";
                    return h.firstChild && typeof h.firstChild.getAttribute !== aK && h.firstChild.getAttribute("href") === "#"
                }),
                ay = c(function(h) {
                    h.innerHTML = "<div class='hidden e'></div><div class='hidden'></div>";
                    if (!h.getElementsByClassName || h.getElementsByClassName("e").length === 0) {
                        return false
                    }
                    h.lastChild.className = "e";
                    return h.getElementsByClassName("e").length !== 1
                });
            var a4 = function(h, k, o, l) {
                o = o || [];
                k = k || bn;
                var n, j, m, i, p = k.nodeType;
                if (p !== 1 && p !== 9) {
                    return []
                }
                if (!h || typeof h !== "string") {
                    return o
                }
                m = a7(k);
                if (!m && !l) {
                    if ((n = a9.exec(h))) {
                        if ((i = n[1])) {
                            if (p === 9) {
                                j = k.getElementById(i);
                                if (j && j.parentNode) {
                                    if (j.id === i) {
                                        o.push(j);
                                        return o
                                    }
                                } else {
                                    return o
                                }
                            } else {
                                if (k.ownerDocument && (j = k.ownerDocument.getElementById(i)) && aB(k, j) && j.id === i) {
                                    o.push(j);
                                    return o
                                }
                            }
                        } else {
                            if (n[2]) {
                                aU.apply(o, ba.call(k.getElementsByTagName(h), 0));
                                return o
                            } else {
                                if ((i = n[3]) && ay && k.getElementsByClassName) {
                                    aU.apply(o, ba.call(k.getElementsByClassName(i), 0));
                                    return o
                                }
                            }
                        }
                    }
                }
                return aN(h, k, o, l, m)
            };
            var au = a4.selectors = {
                cacheLength: 50,
                match: aw,
                order: ["ID", "TAG"],
                attrHandle: {},
                createPseudo: aI,
                find: {
                    ID: bl ? function(h, i, j) {
                        if (typeof i.getElementById !== aK && !j) {
                            var k = i.getElementById(h);
                            return k && k.parentNode ? [k] : []
                        }
                    } : function(h, i, j) {
                        if (typeof i.getElementById !== aK && !j) {
                            var k = i.getElementById(h);
                            return k ? k.id === h || typeof k.getAttributeNode !== aK && k.getAttributeNode("id").value === h ? [k] : bd : []
                        }
                    },
                    TAG: bo ? function(i, h) {
                        if (typeof h.getElementsByTagName !== aK) {
                            return h.getElementsByTagName(i)
                        }
                    } : function(m, i) {
                        var j = i.getElementsByTagName(m);
                        if (m === "*") {
                            var h, k = [],
                                l = 0;
                            for (;
                                (h = j[l]); l++) {
                                if (h.nodeType === 1) {
                                    k.push(h)
                                }
                            }
                            return k
                        }
                        return j
                    }
                },
                relative: {
                    ">": {
                        dir: "parentNode",
                        first: true
                    },
                    " ": {
                        dir: "parentNode"
                    },
                    "+": {
                        dir: "previousSibling",
                        first: true
                    },
                    "~": {
                        dir: "previousSibling"
                    }
                },
                preFilter: {
                    ATTR: function(h) {
                        h[1] = h[1].replace(aR, "");
                        h[3] = (h[4] || h[5] || "").replace(aR, "");
                        if (h[2] === "~=") {
                            h[3] = " " + h[3] + " "
                        }
                        return h.slice(0, 4)
                    },
                    CHILD: function(h) {
                        h[1] = h[1].toLowerCase();
                        if (h[1] === "nth") {
                            if (!h[2]) {
                                a4.error(h[0])
                            }
                            h[3] = +(h[3] ? h[4] + (h[5] || 1) : 2 * (h[2] === "even" || h[2] === "odd"));
                            h[4] = +((h[6] + h[7]) || h[2] === "odd")
                        } else {
                            if (h[2]) {
                                a4.error(h[0])
                            }
                        }
                        return h
                    },
                    PSEUDO: function(j) {
                        var i, h = j[4];
                        if (aw.CHILD.test(j[0])) {
                            return null
                        }
                        if (h && (i = a.exec(h)) && i.pop()) {
                            j[0] = j[0].slice(0, i[0].length - h.length - 1);
                            h = i[0].slice(0, -1)
                        }
                        j.splice(2, 3, h || j[3]);
                        return j
                    }
                },
                filter: {
                    ID: bl ? function(h) {
                        h = h.replace(aR, "");
                        return function(i) {
                            return i.getAttribute("id") === h
                        }
                    } : function(h) {
                        h = h.replace(aR, "");
                        return function(i) {
                            var j = typeof i.getAttributeNode !== aK && i.getAttributeNode("id");
                            return j && j.value === h
                        }
                    },
                    TAG: function(h) {
                        if (h === "*") {
                            return function() {
                                return true
                            }
                        }
                        h = h.replace(aR, "").toLowerCase();
                        return function(i) {
                            return i.nodeName && i.nodeName.toLowerCase() === h
                        }
                    },
                    CLASS: function(i) {
                        var h = aW[i];
                        if (!h) {
                            h = aW[i] = new RegExp("(^|" + aE + ")" + i + "(" + aE + "|$)");
                            aV.push(i);
                            if (aV.length > au.cacheLength) {
                                delete aW[aV.shift()]
                            }
                        }
                        return function(j) {
                            return h.test(j.className || (typeof j.getAttribute !== aK && j.getAttribute("class")) || "")
                        }
                    },
                    ATTR: function(h, i, j) {
                        if (!i) {
                            return function(k) {
                                return a4.attr(k, h) != null
                            }
                        }
                        return function(l) {
                            var m = a4.attr(l, h),
                                k = m + "";
                            if (m == null) {
                                return i === "!="
                            }
                            switch (i) {
                                case "=":
                                    return k === j;
                                case "!=":
                                    return k !== j;
                                case "^=":
                                    return j && k.indexOf(j) === 0;
                                case "*=":
                                    return j && k.indexOf(j) > -1;
                                case "$=":
                                    return j && k.substr(k.length - j.length) === j;
                                case "~=":
                                    return (" " + k + " ").indexOf(j) > -1;
                                case "|=":
                                    return k === j || k.substr(0, j.length + 1) === j + "-"
                            }
                        }
                    },
                    CHILD: function(k, i, h, j) {
                        if (k === "nth") {
                            var l = bf++;
                            return function(o) {
                                var n, m, p = 0,
                                    q = o;
                                if (h === 1 && j === 0) {
                                    return true
                                }
                                n = o.parentNode;
                                if (n && (n[aM] !== l || !o.sizset)) {
                                    for (q = n.firstChild; q; q = q.nextSibling) {
                                        if (q.nodeType === 1) {
                                            q.sizset = ++p;
                                            if (q === o) {
                                                break
                                            }
                                        }
                                    }
                                    n[aM] = l
                                }
                                m = o.sizset - j;
                                if (h === 0) {
                                    return m === 0
                                } else {
                                    return (m % h === 0 && m / h >= 0)
                                }
                            }
                        }
                        return function(n) {
                            var m = n;
                            switch (k) {
                                case "only":
                                case "first":
                                    while ((m = m.previousSibling)) {
                                        if (m.nodeType === 1) {
                                            return false
                                        }
                                    }
                                    if (k === "first") {
                                        return true
                                    }
                                    m = n;
                                case "last":
                                    while ((m = m.nextSibling)) {
                                        if (m.nodeType === 1) {
                                            return false
                                        }
                                    }
                                    return true
                            }
                        }
                    },
                    PSEUDO: function(h, i, k, l) {
                        var j = au.pseudos[h] || au.pseudos[h.toLowerCase()];
                        if (!j) {
                            a4.error("unsupported pseudo: " + h)
                        }
                        if (!j.sizzleFilter) {
                            return j
                        }
                        return j(i, k, l)
                    }
                },
                pseudos: {
                    not: aI(function(k, i, j) {
                        var h = bi(k.replace(aP, "$1"), i, j);
                        return function(l) {
                            return !h(l)
                        }
                    }),
                    enabled: function(h) {
                        return h.disabled === false
                    },
                    disabled: function(h) {
                        return h.disabled === true
                    },
                    checked: function(i) {
                        var h = i.nodeName.toLowerCase();
                        return (h === "input" && !!i.checked) || (h === "option" && !!i.selected)
                    },
                    selected: function(h) {
                        if (h.parentNode) {
                            h.parentNode.selectedIndex
                        }
                        return h.selected === true
                    },
                    parent: function(h) {
                        return !!h.firstChild
                    },
                    empty: function(h) {
                        return !h.firstChild
                    },
                    contains: aI(function(h) {
                        return function(i) {
                            return (i.textContent || i.innerText || bu(i)).indexOf(h) > -1
                        }
                    }),
                    has: aI(function(h) {
                        return function(i) {
                            return a4(h, i).length > 0
                        }
                    }),
                    header: function(h) {
                        return aY.test(h.nodeName)
                    },
                    text: function(h) {
                        var i, j;
                        return h.nodeName.toLowerCase() === "input" && (i = h.type) === "text" && ((j = h.getAttribute("type")) == null || j.toLowerCase() === i)
                    },
                    radio: bq("radio"),
                    checkbox: bq("checkbox"),
                    file: bq("file"),
                    password: bq("password"),
                    image: bq("image"),
                    submit: aT("submit"),
                    reset: aT("reset"),
                    button: function(h) {
                        var i = h.nodeName.toLowerCase();
                        return i === "input" && h.type === "button" || i === "button"
                    },
                    input: function(h) {
                        return a6.test(h.nodeName)
                    },
                    focus: function(i) {
                        var h = i.ownerDocument;
                        return i === h.activeElement && (!h.hasFocus || h.hasFocus()) && !!(i.type || i.href)
                    },
                    active: function(h) {
                        return h === h.ownerDocument.activeElement
                    }
                },
                setFilters: {
                    first: function(h, i, j) {
                        return j ? h.slice(1) : [h[0]]
                    },
                    last: function(h, i, j) {
                        var k = h.pop();
                        return j ? h : [k]
                    },
                    even: function(h, i, j) {
                        var k = [],
                            l = j ? 1 : 0,
                            m = h.length;
                        for (; l < m; l = l + 2) {
                            k.push(h[l])
                        }
                        return k
                    },
                    odd: function(h, i, j) {
                        var k = [],
                            l = j ? 0 : 1,
                            m = h.length;
                        for (; l < m; l = l + 2) {
                            k.push(h[l])
                        }
                        return k
                    },
                    lt: function(h, i, j) {
                        return j ? h.slice(+i) : h.slice(0, +i)
                    },
                    gt: function(h, i, j) {
                        return j ? h.slice(0, +i + 1) : h.slice(+i + 1)
                    },
                    eq: function(h, i, j) {
                        var k = h.splice(+i, 1);
                        return j ? h : k
                    }
                }
            };
            au.setFilters.nth = au.setFilters.eq;
            au.filters = au.pseudos;
            if (!ax) {
                au.attrHandle = {
                    href: function(h) {
                        return h.getAttribute("href", 2)
                    },
                    type: function(h) {
                        return h.getAttribute("type")
                    }
                }
            }
            if (bt) {
                au.order.push("NAME");
                au.find.NAME = function(i, h) {
                    if (typeof h.getElementsByName !== aK) {
                        return h.getElementsByName(i)
                    }
                }
            }
            if (ay) {
                au.order.splice(1, 0, "CLASS");
                au.find.CLASS = function(h, i, j) {
                    if (typeof i.getElementsByClassName !== aK && !j) {
                        return i.getElementsByClassName(h)
                    }
                }
            }
            try {
                ba.call(bk.childNodes, 0)[0].nodeType
            } catch (aD) {
                ba = function(i) {
                    var h, j = [];
                    for (;
                        (h = this[i]); i++) {
                        j.push(h)
                    }
                    return j
                }
            }
            var a7 = a4.isXML = function(i) {
                var h = i && (i.ownerDocument || i).documentElement;
                return h ? h.nodeName !== "HTML" : false
            };
            var aB = a4.contains = bk.compareDocumentPosition ? function(h, i) {
                return !!(h.compareDocumentPosition(i) & 16)
            } : bk.contains ? function(j, k) {
                var h = j.nodeType === 9 ? j.documentElement : j,
                    i = k.parentNode;
                return j === i || !!(i && i.nodeType === 1 && h.contains && h.contains(i))
            } : function(h, i) {
                while ((i = i.parentNode)) {
                    if (i === h) {
                        return true
                    }
                }
                return false
            };
            var bu = a4.getText = function(h) {
                var i, k = "",
                    j = 0,
                    l = h.nodeType;
                if (l) {
                    if (l === 1 || l === 9 || l === 11) {
                        if (typeof h.textContent === "string") {
                            return h.textContent
                        } else {
                            for (h = h.firstChild; h; h = h.nextSibling) {
                                k += bu(h)
                            }
                        }
                    } else {
                        if (l === 3 || l === 4) {
                            return h.nodeValue
                        }
                    }
                } else {
                    for (;
                        (i = h[j]); j++) {
                        k += bu(i)
                    }
                }
                return k
            };
            a4.attr = function(h, i) {
                var k, j = a7(h);
                if (!j) {
                    i = i.toLowerCase()
                }
                if (au.attrHandle[i]) {
                    return au.attrHandle[i](h)
                }
                if (a1 || j) {
                    return h.getAttribute(i)
                }
                k = h.getAttributeNode(i);
                return k ? typeof h[i] === "boolean" ? h[i] ? i : null : k.specified ? k.value : null : null
            };
            a4.error = function(h) {
                throw new Error("Syntax error, unrecognized expression: " + h)
            };
            [0, 0].sort(function() {
                return (bm = 0)
            });
            if (bk.compareDocumentPosition) {
                be = function(h, i) {
                    if (h === i) {
                        bj = true;
                        return 0
                    }
                    return (!h.compareDocumentPosition || !i.compareDocumentPosition ? h.compareDocumentPosition : h.compareDocumentPosition(i) & 4) ? -1 : 1
                }
            } else {
                be = function(m, n) {
                    if (m === n) {
                        bj = true;
                        return 0
                    } else {
                        if (m.sourceIndex && n.sourceIndex) {
                            return m.sourceIndex - n.sourceIndex
                        }
                    }
                    var p, j, i = [],
                        k = [],
                        q = m.parentNode,
                        o = n.parentNode,
                        l = q;
                    if (q === o) {
                        return br(m, n)
                    } else {
                        if (!q) {
                            return -1
                        } else {
                            if (!o) {
                                return 1
                            }
                        }
                    }
                    while (l) {
                        i.unshift(l);
                        l = l.parentNode
                    }
                    l = o;
                    while (l) {
                        k.unshift(l);
                        l = l.parentNode
                    }
                    p = i.length;
                    j = k.length;
                    for (var h = 0; h < p && h < j; h++) {
                        if (i[h] !== k[h]) {
                            return br(i[h], k[h])
                        }
                    }
                    return h === p ? br(m, k[h], -1) : br(i[h], n, 1)
                };
                br = function(j, k, i) {
                    if (j === k) {
                        return i
                    }
                    var h = j.nextSibling;
                    while (h) {
                        if (h === k) {
                            return -1
                        }
                        h = h.nextSibling
                    }
                    return 1
                }
            }
            a4.uniqueSort = function(i) {
                var h, j = 1;
                if (be) {
                    bj = bm;
                    i.sort(be);
                    if (bj) {
                        for (;
                            (h = i[j]); j++) {
                            if (h === i[j - 1]) {
                                i.splice(j--, 1)
                            }
                        }
                    }
                }
                return i
            };

            function a3(l, h, i, k) {
                var j = 0,
                    m = h.length;
                for (; j < m; j++) {
                    a4(l, h[j], i, k)
                }
            }

            function b(o, m, l, j, n, h) {
                var k, i = au.setFilters[m.toLowerCase()];
                if (!i) {
                    a4.error(m)
                }
                if (o || !(k = n)) {
                    a3(o || "*", j, (k = []), n)
                }
                return k.length > 0 ? i(k, l, h) : []
            }

            function aX(v, u, x, p, m) {
                var j, r, k, i, y, l, w, o, t = 0,
                    q = m.length,
                    n = aw.POS,
                    z = new RegExp("^" + n.source + "(?!" + aE + ")", "i"),
                    h = function() {
                        var A = 1,
                            B = arguments.length - 2;
                        for (; A < B; A++) {
                            if (arguments[A] === bd) {
                                j[A] = bd
                            }
                        }
                    };
                for (; t < q; t++) {
                    n.exec("");
                    v = m[t];
                    i = [];
                    k = 0;
                    y = p;
                    while ((j = n.exec(v))) {
                        o = n.lastIndex = j.index + j[0].length;
                        if (o > k) {
                            w = v.slice(k, j.index);
                            k = o;
                            l = [u];
                            if (av.test(w)) {
                                if (y) {
                                    l = y
                                }
                                y = p
                            }
                            if ((r = aJ.test(w))) {
                                w = w.slice(0, -5).replace(av, "$&*")
                            }
                            if (j.length > 1) {
                                j[0].replace(z, h)
                            }
                            y = b(w, j[1], j[2], l, y, r)
                        }
                    }
                    if (y) {
                        i = i.concat(y);
                        if ((w = v.slice(k)) && w !== ")") {
                            a3(w, i, x, p)
                        } else {
                            aU.apply(x, i)
                        }
                    } else {
                        a4(v, u, x, p)
                    }
                }
                return q === 1 ? x : a4.uniqueSort(x)
            }

            function bs(t, i, p) {
                var n, o, m, v = [],
                    r = 0,
                    q = a.exec(t),
                    k = !q.pop() && !q.pop(),
                    j = k && t.match(aQ) || [""],
                    l = au.preFilter,
                    h = au.filter,
                    u = !p && i !== bn;
                for (;
                    (o = j[r]) != null && k; r++) {
                    v.push(n = []);
                    if (u) {
                        o = " " + o
                    }
                    while (o) {
                        k = false;
                        if ((q = av.exec(o))) {
                            o = o.slice(q[0].length);
                            k = n.push({
                                part: q.pop().replace(aP, " "),
                                captures: q
                            })
                        }
                        for (m in h) {
                            if ((q = aw[m].exec(o)) && (!l[m] || (q = l[m](q, i, p)))) {
                                o = o.slice(q.shift().length);
                                k = n.push({
                                    part: m,
                                    captures: q
                                })
                            }
                        }
                        if (!k) {
                            break
                        }
                    }
                }
                if (!k) {
                    a4.error(t)
                }
                return v
            }

            function aH(h, i, j) {
                var l = i.dir,
                    k = bf++;
                if (!h) {
                    h = function(m) {
                        return m === j
                    }
                }
                return i.first ? function(n, m) {
                    while ((n = n[l])) {
                        if (n.nodeType === 1) {
                            return h(n, m) && n
                        }
                    }
                } : function(p, q) {
                    var o, n = k + "." + a0,
                        m = n + "." + aS;
                    while ((p = p[l])) {
                        if (p.nodeType === 1) {
                            if ((o = p[aM]) === m) {
                                return false
                            } else {
                                if (typeof o === "string" && o.indexOf(n) === 0) {
                                    if (p.sizset) {
                                        return p
                                    }
                                } else {
                                    p[aM] = m;
                                    if (h(p, q)) {
                                        p.sizset = true;
                                        return p
                                    }
                                    p.sizset = false
                                }
                            }
                        }
                    }
                }
            }

            function aL(i, h) {
                return i ? function(j, k) {
                    var l = h(j, k);
                    return l && i(l === true ? j : l, k)
                } : h
            }

            function aF(h, j, m) {
                var k, i, l = 0;
                for (;
                    (k = h[l]); l++) {
                    if (au.relative[k.part]) {
                        i = aH(i, au.relative[k.part], j)
                    } else {
                        k.captures.push(j, m);
                        i = aL(i, au.filter[k.part].apply(null, k.captures))
                    }
                }
                return i
            }

            function bp(h) {
                return function(j, k) {
                    var i, l = 0;
                    for (;
                        (i = h[l]); l++) {
                        if (i(j, k)) {
                            return true
                        }
                    }
                    return false
                }
            }
            var bi = a4.compile = function(n, k, m) {
                var j, h, l, i = a5[n];
                if (i && i.context === k) {
                    i.dirruns++;
                    return i
                }
                h = bs(n, k, m);
                for (l = 0;
                    (j = h[l]); l++) {
                    h[l] = aF(j, k, m)
                }
                i = a5[n] = bp(h);
                i.context = k;
                i.runs = i.dirruns = 0;
                aO.push(n);
                if (aO.length > au.cacheLength) {
                    delete a5[aO.shift()]
                }
                return i
            };
            a4.matches = function(h, i) {
                return a4(h, null, null, i)
            };
            a4.matchesSelector = function(i, h) {
                return a4(h, null, null, [i]).length > 0
            };
            var aN = function(y, m, v, q, r) {
                y = y.replace(aP, "$1");
                var o, p, u, n, k, i, j, h, w, t = y.match(aQ),
                    l = y.match(aG),
                    x = m.nodeType;
                if (aw.POS.test(y)) {
                    return aX(y, m, v, q, t)
                }
                if (q) {
                    o = ba.call(q, 0)
                } else {
                    if (t && t.length === 1) {
                        if (l.length > 1 && x === 9 && !r && (t = aw.ID.exec(l[0]))) {
                            m = au.find.ID(t[1], m, r)[0];
                            if (!m) {
                                return v
                            }
                            y = y.slice(l.shift().length)
                        }
                        h = ((t = aZ.exec(l[0])) && !t.index && m.parentNode) || m;
                        w = l.pop();
                        i = w.split(":not")[0];
                        for (u = 0, n = au.order.length; u < n; u++) {
                            j = au.order[u];
                            if ((t = aw[j].exec(i))) {
                                o = au.find[j]((t[1] || "").replace(aR, ""), h, r);
                                if (o == null) {
                                    continue
                                }
                                if (i === w) {
                                    y = y.slice(0, y.length - w.length) + i.replace(aw[j], "");
                                    if (!y) {
                                        aU.apply(v, ba.call(o, 0))
                                    }
                                }
                                break
                            }
                        }
                    }
                }
                if (y) {
                    p = bi(y, m, r);
                    a0 = p.dirruns;
                    if (o == null) {
                        o = au.find.TAG("*", (aZ.test(y) && m.parentNode) || m)
                    }
                    for (u = 0;
                        (k = o[u]); u++) {
                        aS = p.runs++;
                        if (p(k, m)) {
                            v.push(k)
                        }
                    }
                }
                return v
            };
            if (bn.querySelectorAll) {
                (function() {
                    var h, k = aN,
                        i = /'|\\/g,
                        l = /\=[\x20\t\r\n\f]*([^'"\]]*)[\x20\t\r\n\f]*\]/g,
                        m = [],
                        n = [":active"],
                        j = bk.matchesSelector || bk.mozMatchesSelector || bk.webkitMatchesSelector || bk.oMatchesSelector || bk.msMatchesSelector;
                    c(function(o) {
                        o.innerHTML = "<select><option selected></option></select>";
                        if (!o.querySelectorAll("[selected]").length) {
                            m.push("\\[" + aE + "*(?:checked|disabled|ismap|multiple|readonly|selected|value)")
                        }
                        if (!o.querySelectorAll(":checked").length) {
                            m.push(":checked")
                        }
                    });
                    c(function(o) {
                        o.innerHTML = "<p test=''></p>";
                        if (o.querySelectorAll("[test^='']").length) {
                            m.push("[*^$]=" + aE + "*(?:\"\"|'')")
                        }
                        o.innerHTML = "<input type='hidden'>";
                        if (!o.querySelectorAll(":enabled").length) {
                            m.push(":enabled", ":disabled")
                        }
                    });
                    m = m.length && new RegExp(m.join("|"));
                    aN = function(r, w, q, o, p) {
                        if (!o && !p && (!m || !m.test(r))) {
                            if (w.nodeType === 9) {
                                try {
                                    aU.apply(q, ba.call(w.querySelectorAll(r), 0));
                                    return q
                                } catch (t) {}
                            } else {
                                if (w.nodeType === 1 && w.nodeName.toLowerCase() !== "object") {
                                    var u = w.getAttribute("id"),
                                        x = u || aM,
                                        v = aZ.test(r) && w.parentNode || w;
                                    if (u) {
                                        x = x.replace(i, "\\$&")
                                    } else {
                                        w.setAttribute("id", x)
                                    }
                                    try {
                                        aU.apply(q, ba.call(v.querySelectorAll(r.replace(aQ, "[id='" + x + "'] $&")), 0));
                                        return q
                                    } catch (t) {} finally {
                                        if (!u) {
                                            w.removeAttribute("id")
                                        }
                                    }
                                }
                            }
                        }
                        return k(r, w, q, o, p)
                    };
                    if (j) {
                        c(function(o) {
                            h = j.call(o, "div");
                            try {
                                j.call(o, "[test!='']:sizzle");
                                n.push(au.match.PSEUDO)
                            } catch (p) {}
                        });
                        n = new RegExp(n.join("|"));
                        a4.matchesSelector = function(q, o) {
                            o = o.replace(l, "='$1']");
                            if (!a7(q) && !n.test(o) && (!m || !m.test(o))) {
                                try {
                                    var r = j.call(q, o);
                                    if (r || h || q.document && q.document.nodeType !== 11) {
                                        return r
                                    }
                                } catch (p) {}
                            }
                            return a4(o, null, null, [q]).length > 0
                        }
                    }
                })()
            }
            if (typeof g === "object" && g.exports) {
                g.exports = a4
            } else {
                a2.Sizzle = a4
            }
        })(window)
    }, {}],
    60: [function(d, g, f) {
        arguments[4][20][0].apply(f, arguments)
    }, {
        "./ac-event-emitter/EventEmitter": 61,
        dup: 20
    }],
    61: [function(d, g, f) {
        arguments[4][21][0].apply(f, arguments)
    }, {
        dup: 21
    }],
    62: [function(d, g, f) {
        g.exports = {
            DOMEmitter: d("./ac-dom-emitter/DOMEmitter")
        }
    }, {
        "./ac-dom-emitter/DOMEmitter": 63
    }],
    63: [function(t, u, r) {
        var q;
        var l = t("ac-event-emitter").EventEmitter,
            m = t("./DOMEmitterEvent"),
            p = t("ac-dom-events"),
            v = t("ac-dom-traversal");
        var n = "dom-emitter";

        function o(a) {
            if (a === null) {
                return
            }
            this.el = a;
            this._bindings = {};
            this._delegateFuncs = {};
            this._eventEmitter = new l()
        }
        q = o.prototype;
        q.on = function() {
            this._normalizeArgumentsAndCall(Array.prototype.slice.call(arguments, 0), this._on);
            return this
        };
        q.once = function() {
            this._normalizeArgumentsAndCall(Array.prototype.slice.call(arguments, 0), this._once);
            return this
        };
        q.off = function() {
            this._normalizeArgumentsAndCall(Array.prototype.slice.call(arguments, 0), this._off);
            return this
        };
        q.has = function(b, d, f, h) {
            var g, c;
            if (typeof d === "string") {
                g = d;
                c = f
            } else {
                c = d;
                h = f
            }
            if (g) {
                var a = this._getDelegateFuncBindingIdx(b, g, c, h, true);
                if (a > -1) {
                    return true
                }
                return false
            }
            if (this._eventEmitter && this._eventEmitter.has.apply(this._eventEmitter, arguments)) {
                return true
            }
            return false
        };
        q.trigger = function(i, a, h, c) {
            i = this._parseEventNames(i);
            i = this._cleanStringData(i);
            var f, d, g, b = i.length;
            if (typeof a === "string") {
                f = this._cleanStringData(a);
                d = h
            } else {
                d = a;
                c = h
            }
            for (g = 0; g < b; g++) {
                this._triggerDOMEvents(i[g], d, f)
            }
            return this
        };
        q.emitterTrigger = function(a, d, c) {
            if (!this._eventEmitter) {
                return this
            }
            a = this._parseEventNames(a);
            a = this._cleanStringData(a);
            d = new m(d, this);
            var f, b = a.length;
            for (f = 0; f < b; f++) {
                this._eventEmitter.trigger(a[f], d, c)
            }
            return this
        };
        q.propagateTo = function(b, a) {
            this._eventEmitter.propagateTo(b, a);
            return this
        };
        q.stopPropagatingTo = function(a) {
            this._eventEmitter.stopPropagatingTo(a);
            return this
        };
        q.stopImmediatePropagation = function() {
            this._eventEmitter.stopImmediatePropagation();
            return this
        };
        q.destroy = function() {
            this._triggerInternalEvent("willdestroy");
            this.off();
            var a;
            for (a in this) {
                if (this.hasOwnProperty(a)) {
                    this[a] = null
                }
            }
        };
        q._parseEventNames = function(a) {
            if (!a) {
                return [a]
            }
            return a.split(" ")
        };
        q._onListenerEvent = function(c, a) {
            var b = new m(a, this);
            this._eventEmitter.trigger(c, b, false)
        };
        q._setListener = function(a) {
            this._bindings[a] = this._onListenerEvent.bind(this, a);
            p.addEventListener(this.el, a, this._bindings[a])
        };
        q._removeListener = function(a) {
            p.removeEventListener(this.el, a, this._bindings[a]);
            this._bindings[a] = null
        };
        q._triggerInternalEvent = function(b, a) {
            this.emitterTrigger(n + ":" + b, a)
        };
        q._normalizeArgumentsAndCall = function(b, h) {
            var c = {};
            if (b.length === 0) {
                h.call(this, c);
                return
            }
            if (typeof b[0] === "string" || b[0] === null) {
                b = this._cleanStringData(b);
                c.events = b[0];
                if (typeof b[1] === "string") {
                    c.delegateQuery = b[1];
                    c.callback = b[2];
                    c.context = b[3]
                } else {
                    c.callback = b[1];
                    c.context = b[2]
                }
                h.call(this, c);
                return
            }
            var a, f, d = ":",
                g = b[0];
            for (a in g) {
                if (g.hasOwnProperty(a)) {
                    c = {};
                    f = this._cleanStringData(a.split(d));
                    c.events = f[0];
                    c.delegateQuery = f[1];
                    c.callback = g[a];
                    c.context = b[1];
                    h.call(this, c)
                }
            }
        };
        q._registerDelegateFunc = function(g, d, c, b, f) {
            var a = this._delegateFunc.bind(this, g, d, c, f);
            this._delegateFuncs[d] = this._delegateFuncs[d] || {};
            this._delegateFuncs[d][g] = this._delegateFuncs[d][g] || [];
            this._delegateFuncs[d][g].push({
                func: b,
                context: f,
                delegateFunc: a
            });
            return a
        };
        q._cleanStringData = function(h) {
            var i = false;
            if (typeof h === "string") {
                h = [h];
                i = true
            }
            var a = [],
                f, c, d, g, b = h.length;
            for (f = 0; f < b; f++) {
                c = h[f];
                if (typeof c === "string") {
                    if (c === "" || c === " ") {
                        continue
                    }
                    d = c.length;
                    while (c[0] === " ") {
                        c = c.slice(1, d);
                        d--
                    }
                    while (c[d - 1] === " ") {
                        c = c.slice(0, d - 1);
                        d--
                    }
                }
                a.push(c)
            }
            if (i) {
                return a[0]
            }
            return a
        };
        q._unregisterDelegateFunc = function(g, c, b, d) {
            if (!this._delegateFuncs[c] || !this._delegateFuncs[c][g]) {
                return
            }
            var f = this._getDelegateFuncBindingIdx(g, c, b, d),
                a;
            if (f > -1) {
                a = this._delegateFuncs[c][g][f].delegateFunc;
                this._delegateFuncs[c][g].splice(f, 1);
                if (this._delegateFuncs[c][g].length === 0) {
                    this._delegateFuncs[c][g] = null
                }
            }
            return a
        };
        q._unregisterDelegateFuncs = function(b, c) {
            if (!this._delegateFuncs[c]) {
                return
            }
            if (b !== null && !this._delegateFuncs[c][b]) {
                return
            }
            if (b === null) {
                var a;
                for (a in this._delegateFuncs[c]) {
                    if (this._delegateFuncs[c].hasOwnProperty(a)) {
                        this._unbindDelegateFunc(a, c)
                    }
                }
                return
            }
            this._unbindDelegateFunc(b, c)
        };
        q._unbindDelegateFunc = function(b, f) {
            var d, c, a = 0;
            while (this._delegateFuncs[f][b] && this._delegateFuncs[f][b][a]) {
                d = this._delegateFuncs[f][b][a];
                c = this._delegateFuncs[f][b][a].length;
                this._off({
                    events: b,
                    delegateQuery: f,
                    callback: d.func,
                    context: d.context
                });
                if (this._delegateFuncs[f][b] && c === this._delegateFuncs[f][b].length) {
                    a++
                }
            }
            d = c = null
        };
        q._unregisterDelegateFuncsByEvent = function(b) {
            var a;
            for (a in this._delegateFuncs) {
                if (this._delegateFuncs.hasOwnProperty(a)) {
                    this._unregisterDelegateFuncs(b, a)
                }
            }
        };
        q._delegateFunc = function(b, f, c, h, d) {
            if (this._targetHasDelegateAncestor(d.target, f)) {
                var a = Array.prototype.slice.call(arguments, 0),
                    g = a.slice(4, a.length);
                h = h || window;
                if (typeof d.detail === "object") {
                    g[0] = d.detail
                }
                c.apply(h, g)
            }
        };
        q._targetHasDelegateAncestor = function(c, a) {
            var b = c;
            while (b && b !== this.el && b !== document.documentElement) {
                if (v.matchesSelector(b, a)) {
                    return true
                }
                b = b.parentNode
            }
            return false
        };
        q._on = function(d) {
            var a = d.events,
                c = d.callback,
                f = d.delegateQuery,
                g = d.context,
                b = d.unboundCallback || c;
            a = this._parseEventNames(a);
            a.forEach(function(h, x, j, i, k) {
                if (!this.has(k)) {
                    this._setListener(k)
                }
                if (typeof i === "string") {
                    h = this._registerDelegateFunc(k, i, h, x, j)
                }
                this._triggerInternalEvent("willon", {
                    evt: k,
                    callback: h,
                    context: j,
                    delegateQuery: i
                });
                this._eventEmitter.on(k, h, j);
                this._triggerInternalEvent("didon", {
                    evt: k,
                    callback: h,
                    context: j,
                    delegateQuery: i
                })
            }.bind(this, c, b, g, f));
            a = c = b = f = g = null
        };
        q._off = function(d) {
            var a = d.events,
                c = d.callback,
                f = d.delegateQuery,
                g = d.context,
                b = d.unboundCallback || c;
            if (typeof a === "undefined") {
                this._eventEmitter.off();
                var h;
                for (h in this._bindings) {
                    if (this._bindings.hasOwnProperty(h)) {
                        this._removeListener(h)
                    }
                }
                for (h in this._delegateFuncs) {
                    if (this._delegateFuncs.hasOwnProperty(h)) {
                        this._delegateFuncs[h] = null
                    }
                }
                return
            }
            a = this._parseEventNames(a);
            a.forEach(function(i, z, k, j, y) {
                if (typeof j === "string" && typeof z === "function") {
                    i = this._unregisterDelegateFunc(y, j, z, k);
                    if (!i) {
                        return
                    }
                }
                if (typeof j === "string" && typeof i === "undefined") {
                    this._unregisterDelegateFuncs(y, j);
                    return
                }
                if (typeof y === "string" && typeof i === "undefined") {
                    this._unregisterDelegateFuncsByEvent(y);
                    if (typeof j === "string") {
                        return
                    }
                }
                this._triggerInternalEvent("willoff", {
                    evt: y,
                    callback: i,
                    context: k,
                    delegateQuery: j
                });
                this._eventEmitter.off(y, i, k);
                this._triggerInternalEvent("didoff", {
                    evt: y,
                    callback: i,
                    context: k,
                    delegateQuery: j
                });
                if (!this.has(y)) {
                    this._removeListener(y)
                }
            }.bind(this, c, b, g, f));
            a = c = b = f = g = null
        };
        q._once = function(d) {
            var b = d.events,
                c = d.callback,
                f = d.delegateQuery,
                a = d.context;
            b = this._parseEventNames(b);
            b.forEach(function(g, i, h, j) {
                if (typeof h === "string") {
                    return this._handleDelegateOnce(j, g, i, h)
                }
                if (!this.has(j)) {
                    this._setListener(j)
                }
                this._triggerInternalEvent("willonce", {
                    evt: j,
                    callback: g,
                    context: i,
                    delegateQuery: h
                });
                this._eventEmitter.once.call(this, j, g, i);
                this._triggerInternalEvent("didonce", {
                    evt: j,
                    callback: g,
                    context: i,
                    delegateQuery: h
                })
            }.bind(this, c, a, f));
            b = c = f = a = null
        };
        q._handleDelegateOnce = function(b, c, a, d) {
            this._triggerInternalEvent("willonce", {
                evt: b,
                callback: c,
                context: a,
                delegateQuery: d
            });
            this._on({
                events: b,
                context: a,
                delegateQuery: d,
                callback: this._getDelegateOnceCallback.bind(this, b, c, a, d),
                unboundCallback: c
            });
            this._triggerInternalEvent("didonce", {
                evt: b,
                callback: c,
                context: a,
                delegateQuery: d
            });
            return this
        };
        q._getDelegateOnceCallback = function(b, c, g, d) {
            var a = Array.prototype.slice.call(arguments, 0),
                f = a.slice(4, a.length);
            c.apply(g, f);
            this._off({
                events: b,
                delegateQuery: d,
                callback: c,
                context: g
            })
        };
        q._getDelegateFuncBindingIdx = function(j, c, f, h, i) {
            var a = -1;
            if (this._delegateFuncs[c] && this._delegateFuncs[c][j]) {
                var d, g, b = this._delegateFuncs[c][j].length;
                for (d = 0; d < b; d++) {
                    g = this._delegateFuncs[c][j][d];
                    if (i && typeof f === "undefined") {
                        f = g.func
                    }
                    if (g.func === f && g.context === h) {
                        a = d;
                        break
                    }
                }
            }
            return a
        };
        q._triggerDOMEvents = function(h, d, f) {
            var a = [this.el];
            if (f) {
                a = v.querySelectorAll(f, this.el)
            }
            var g, c, b = a.length;
            for (g = 0; g < b; g++) {
                p.dispatchEvent(a[g], h, {
                    bubbles: true,
                    cancelable: true,
                    detail: d
                })
            }
        };
        u.exports = o
    }, {
        "./DOMEmitterEvent": 64,
        "ac-dom-events": 33,
        "ac-dom-traversal": 41,
        "ac-event-emitter": 60
    }],
    64: [function(h, m, i) {
        var k = h("ac-dom-events");
        var l;
        var j = function(a, b) {
            this._domEmitter = b;
            this.originalEvent = a || {};
            this._originalTarget = k.target(this.originalEvent);
            this.target = this._originalTarget || this._domEmitter.el;
            this.currentTarget = this._domEmitter.el;
            this.timeStamp = this.originalEvent.timeStamp || Date.now();
            if (this._isDOMEvent(this.originalEvent)) {
                if (typeof this.originalEvent.detail === "object") {
                    this.data = this.originalEvent.detail
                }
            } else {
                if (a) {
                    this.data = this.originalEvent;
                    this.originalEvent = {}
                }
            }
        };
        l = j.prototype;
        l.preventDefault = function() {
            k.preventDefault(this.originalEvent)
        };
        l.stopPropagation = function() {
            k.stopPropagation(this.originalEvent)
        };
        l.stopImmediatePropagation = function() {
            if (this.originalEvent.stopImmediatePropagation) {
                this.originalEvent.stopImmediatePropagation()
            }
            this._domEmitter.stopImmediatePropagation()
        };
        l._isDOMEvent = function(a) {
            if (this._originalTarget || (document.createEvent !== "undefined" && typeof CustomEvent !== "undefined" && a instanceof CustomEvent)) {
                return true
            }
            return false
        };
        m.exports = j
    }, {
        "ac-dom-events": 33
    }],
    65: [function(m, l, h) {
        var j = m("./utils/addEventListener");
        var i = m("./shared/getEventType");
        l.exports = function k(a, c, b, d) {
            c = i(a, c);
            return j(a, c, b, d)
        }
    }, {
        "./shared/getEventType": 74,
        "./utils/addEventListener": 78
    }],
    66: [function(l, k, m) {
        var i = l("./utils/dispatchEvent");
        var h = l("./shared/getEventType");
        k.exports = function j(a, b, c) {
            b = h(a, b);
            return i(a, b, c)
        }
    }, {
        "./shared/getEventType": 74,
        "./utils/dispatchEvent": 79
    }],
    67: [function(d, g, f) {
        g.exports = {
            addEventListener: d("./addEventListener"),
            dispatchEvent: d("./dispatchEvent"),
            preventDefault: d("./preventDefault"),
            removeEventListener: d("./removeEventListener"),
            stop: d("./stop"),
            stopPropagation: d("./stopPropagation"),
            target: d("./target")
        }
    }, {
        "./addEventListener": 65,
        "./dispatchEvent": 66,
        "./preventDefault": 72,
        "./removeEventListener": 73,
        "./stop": 75,
        "./stopPropagation": 76,
        "./target": 77
    }],
    68: [function(n, l, p) {
        var m = n("./utils/eventTypeAvailable");
        var j = n("./shared/camelCasedEventTypes");
        var o = n("./shared/prefixHelper");
        var q = {};
        l.exports = function k(b, c) {
            var a;
            var f;
            var d;
            c = c || "div";
            b = b.toLowerCase();
            if (!(c in q)) {
                q[c] = {}
            }
            f = q[c];
            if (b in f) {
                return f[b]
            }
            if (m(b, c)) {
                return f[b] = b
            }
            if (b in j) {
                for (d = 0; d < j[b].length; d++) {
                    a = j[b][d];
                    if (m(a.toLowerCase(), c)) {
                        return f[b] = a
                    }
                }
            }
            for (d = 0; d < o.evt.length; d++) {
                a = o.evt[d] + b;
                if (m(a, c)) {
                    o.reduce(d);
                    return f[b] = a
                }
            }
            return f[b] = false
        }
    }, {
        "./shared/camelCasedEventTypes": 69,
        "./shared/prefixHelper": 70,
        "./utils/eventTypeAvailable": 71
    }],
    69: [function(d, g, f) {
        g.exports = {
            transitionend: ["webkitTransitionEnd", "MSTransitionEnd"],
            animationstart: ["webkitAnimationStart", "MSAnimationStart"],
            animationend: ["webkitAnimationEnd", "MSAnimationEnd"],
            animationiteration: ["webkitAnimationIteration", "MSAnimationIteration"],
            fullscreenchange: ["MSFullscreenChange"],
            fullscreenerror: ["MSFullscreenError"]
        }
    }, {}],
    70: [function(j, p, k) {
        var l = ["-webkit-", "-moz-", "-ms-"];
        var o = ["Webkit", "Moz", "ms"];
        var m = ["webkit", "moz", "ms"];
        var q = function() {
            this.initialize()
        };
        var n = q.prototype;
        n.initialize = function() {
            this.reduced = false;
            this.css = l;
            this.dom = o;
            this.evt = m
        };
        n.reduce = function(a) {
            if (!this.reduced) {
                this.reduced = true;
                this.css = [this.css[a]];
                this.dom = [this.dom[a]];
                this.evt = [this.evt[a]]
            }
        };
        p.exports = new q()
    }, {}],
    71: [function(k, i, g) {
        var h = {
            window: window,
            document: document
        };
        i.exports = function j(a, c) {
            var b;
            a = "on" + a;
            if (!(c in h)) {
                h[c] = document.createElement(c)
            }
            b = h[c];
            if (a in b) {
                return true
            }
            if ("setAttribute" in b) {
                b.setAttribute(a, "return;");
                return (typeof b[a] === "function")
            }
            return false
        }
    }, {}],
    72: [function(d, g, f) {
        arguments[4][36][0].apply(f, arguments)
    }, {
        dup: 36
    }],
    73: [function(l, k, m) {
        var h = l("./utils/removeEventListener");
        var i = l("./shared/getEventType");
        k.exports = function j(a, c, b, d) {
            c = i(a, c);
            return h(a, c, b, d)
        }
    }, {
        "./shared/getEventType": 74,
        "./utils/removeEventListener": 80
    }],
    74: [function(k, i, g) {
        var j = k("ac-prefixer/getEventType");
        i.exports = function h(a, b) {
            var c;
            var d;
            if ("tagName" in a) {
                c = a.tagName
            } else {
                if (a === window) {
                    c = "window"
                } else {
                    c = "document"
                }
            }
            d = j(b, c);
            if (d) {
                return d
            }
            return b
        }
    }, {
        "ac-prefixer/getEventType": 68
    }],
    75: [function(d, g, f) {
        arguments[4][38][0].apply(f, arguments)
    }, {
        "./preventDefault": 72,
        "./stopPropagation": 76,
        dup: 38
    }],
    76: [function(d, g, f) {
        arguments[4][39][0].apply(f, arguments)
    }, {
        dup: 39
    }],
    77: [function(f, i, g) {
        i.exports = function h(a) {
            a = a || window.event;
            return (typeof a.target !== "undefined") ? a.target : a.srcElement
        }
    }, {}],
    78: [function(f, i, g) {
        i.exports = function h(a, c, b, d) {
            if (a.addEventListener) {
                a.addEventListener(c, b, !!d)
            } else {
                a.attachEvent("on" + c, b)
            }
            return a
        }
    }, {}],
    79: [function(f, i, g) {
        f("ac-polyfills/CustomEvent");
        i.exports = function h(a, b, c) {
            var d;
            if (a.dispatchEvent) {
                if (c) {
                    d = new CustomEvent(b, c)
                } else {
                    d = new CustomEvent(b)
                }
                a.dispatchEvent(d)
            } else {
                d = document.createEventObject();
                if (c && "detail" in c) {
                    d.detail = c.detail
                }
                a.fireEvent("on" + b, d)
            }
            return a
        }
    }, {
        "ac-polyfills/CustomEvent": 725
    }],
    80: [function(f, i, g) {
        i.exports = function h(a, c, b, d) {
            if (a.removeEventListener) {
                a.removeEventListener(c, b, !!d)
            } else {
                a.detachEvent("on" + c, b)
            }
            return a
        }
    }, {}],
    81: [function(j, i, k) {
        var g = j("./utils/getBoundingClientRect");
        i.exports = function h(c, a) {
            var b = 1;
            if (a) {
                b = g(c).width / c.offsetWidth
            }
            return {
                width: c.scrollWidth * b,
                height: c.scrollHeight * b
            }
        }
    }, {
        "./utils/getBoundingClientRect": 92
    }],
    82: [function(j, i, k) {
        var g = j("./utils/getBoundingClientRect");
        i.exports = function h(c, a) {
            var b;
            if (a) {
                b = g(c);
                return {
                    width: b.width,
                    height: b.height
                }
            }
            return {
                width: c.offsetWidth,
                height: c.offsetHeight
            }
        }
    }, {
        "./utils/getBoundingClientRect": 92
    }],
    83: [function(n, m, o) {
        var q = n("./getDimensions");
        var p = n("./utils/getBoundingClientRect");
        var j = n("./getScrollX");
        var k = n("./getScrollY");
        m.exports = function l(d, f) {
            var b;
            var g;
            var a;
            var c;
            var h;
            if (f) {
                b = p(d);
                g = j();
                a = k();
                return {
                    top: b.top + a,
                    right: b.right + g,
                    bottom: b.bottom + a,
                    left: b.left + g
                }
            }
            c = q(d, f);
            b = {
                top: d.offsetTop,
                left: d.offsetLeft,
                width: c.width,
                height: c.height
            };
            while (d = d.offsetParent) {
                b.top += d.offsetTop;
                b.left += d.offsetLeft
            }
            return {
                top: b.top,
                right: b.left + b.width,
                bottom: b.top + b.height,
                left: b.left
            }
        }
    }, {
        "./getDimensions": 82,
        "./getScrollX": 87,
        "./getScrollY": 88,
        "./utils/getBoundingClientRect": 92
    }],
    84: [function(m, k, h) {
        var i = m("./getDimensions");
        var j = m("./getPixelsInViewport");
        k.exports = function l(b, a) {
            var c = j(b, a);
            var d = i(b, a).height;
            return (c / d)
        }
    }, {
        "./getDimensions": 82,
        "./getPixelsInViewport": 85
    }],
    85: [function(k, j, g) {
        var h = k("./getViewportPosition");
        j.exports = function i(d, a) {
            var b = document.documentElement.clientHeight;
            var f = h(d, a);
            var c;
            if (f.top >= b || f.bottom <= 0) {
                return 0
            }
            c = (f.bottom - f.top);
            if (f.top < 0) {
                c += f.top
            }
            if (f.bottom > b) {
                c -= f.bottom - b
            }
            return c
        }
    }, {
        "./getViewportPosition": 89
    }],
    86: [function(l, k, m) {
        var i = l("./getDimensions");
        var h = l("./utils/getBoundingClientRect");
        k.exports = function j(d, a) {
            var b;
            var f;
            var c;
            if (a) {
                b = h(d);
                if (d.offsetParent) {
                    f = h(d.offsetParent);
                    b.top -= f.top;
                    b.left -= f.left
                }
            } else {
                c = i(d, a);
                b = {
                    top: d.offsetTop,
                    left: d.offsetLeft,
                    width: c.width,
                    height: c.height
                }
            }
            return {
                top: b.top,
                right: b.left + b.width,
                bottom: b.top + b.height,
                left: b.left
            }
        }
    }, {
        "./getDimensions": 82,
        "./utils/getBoundingClientRect": 92
    }],
    87: [function(i, h, f) {
        h.exports = function g(b) {
            var a;
            b = b || window;
            if (b === window) {
                a = window.pageXOffset;
                if (!a) {
                    b = document.documentElement || document.body.parentNode || document.body
                } else {
                    return a
                }
            }
            return b.scrollLeft
        }
    }, {}],
    88: [function(i, h, f) {
        h.exports = function g(b) {
            var a;
            b = b || window;
            if (b === window) {
                a = window.pageYOffset;
                if (!a) {
                    b = document.documentElement || document.body.parentNode || document.body
                } else {
                    return a
                }
            }
            return b.scrollTop
        }
    }, {}],
    89: [function(n, m, o) {
        var l = n("./getPagePosition");
        var p = n("./utils/getBoundingClientRect");
        var q = n("./getScrollX");
        var j = n("./getScrollY");
        m.exports = function k(c, f) {
            var d;
            var a;
            var b;
            if (f) {
                d = p(c);
                return {
                    top: d.top,
                    right: d.right,
                    bottom: d.bottom,
                    left: d.left
                }
            }
            d = l(c);
            a = q();
            b = j();
            return {
                top: d.top - b,
                right: d.right - a,
                bottom: d.bottom - b,
                left: d.left - a
            }
        }
    }, {
        "./getPagePosition": 83,
        "./getScrollX": 87,
        "./getScrollY": 88,
        "./utils/getBoundingClientRect": 92
    }],
    90: [function(d, g, f) {
        g.exports = {
            getContentDimensions: d("./getContentDimensions"),
            getDimensions: d("./getDimensions"),
            getPagePosition: d("./getPagePosition"),
            getPercentInViewport: d("./getPercentInViewport"),
            getPixelsInViewport: d("./getPixelsInViewport"),
            getPosition: d("./getPosition"),
            getScrollX: d("./getScrollX"),
            getScrollY: d("./getScrollY"),
            getViewportPosition: d("./getViewportPosition"),
            isInViewport: d("./isInViewport")
        }
    }, {
        "./getContentDimensions": 81,
        "./getDimensions": 82,
        "./getPagePosition": 83,
        "./getPercentInViewport": 84,
        "./getPixelsInViewport": 85,
        "./getPosition": 86,
        "./getScrollX": 87,
        "./getScrollY": 88,
        "./getViewportPosition": 89,
        "./isInViewport": 91
    }],
    91: [function(h, l, i) {
        var j = h("./getPixelsInViewport");
        var m = h("./getPercentInViewport");
        l.exports = function k(b, a, d) {
            var c;
            d = d || 0;
            if (typeof d === "string" && d.slice(-2) === "px") {
                d = parseInt(d, 10);
                c = j(b, a)
            } else {
                c = m(b, a)
            }
            return (c > 0 && c >= d)
        }
    }, {
        "./getPercentInViewport": 84,
        "./getPixelsInViewport": 85
    }],
    92: [function(i, h, f) {
        h.exports = function g(b) {
            var a = b.getBoundingClientRect();
            return {
                top: a.top,
                right: a.right,
                bottom: a.bottom,
                left: a.left,
                width: a.width || a.right - a.left,
                height: a.height || a.bottom - a.top
            }
        }
    }, {}],
    93: [function(d, g, f) {
        g.exports = 8
    }, {}],
    94: [function(d, g, f) {
        g.exports = 11
    }, {}],
    95: [function(d, g, f) {
        g.exports = 9
    }, {}],
    96: [function(d, g, f) {
        g.exports = 10
    }, {}],
    97: [function(d, g, f) {
        g.exports = 1
    }, {}],
    98: [function(d, g, f) {
        g.exports = 3
    }, {}],
    99: [function(i, h, f) {
        h.exports = function g(b) {
            var c = document.createDocumentFragment();
            var a;
            if (b) {
                a = document.createElement("div");
                a.innerHTML = b;
                while (a.firstChild) {
                    c.appendChild(a.firstChild)
                }
            }
            return c
        }
    }, {}],
    100: [function(l, k, m) {
        l("ac-polyfills/Array/prototype.slice");
        l("ac-polyfills/Array/prototype.filter");
        var j = l("./internal/isNodeType");
        var i = l("./ELEMENT_NODE");
        k.exports = function h(a, b) {
            b = b || i;
            a = Array.prototype.slice.call(a);
            return a.filter(function(c) {
                return j(c, b)
            })
        }
    }, {
        "./ELEMENT_NODE": 97,
        "./internal/isNodeType": 107,
        "ac-polyfills/Array/prototype.filter": 720,
        "ac-polyfills/Array/prototype.slice": 723
    }],
    101: [function(i, h, g) {
        h.exports = function f(a, b) {
            if ("hasAttribute" in a) {
                return a.hasAttribute(b)
            }
            return (a.attributes.getNamedItem(b) !== null)
        }
    }, {}],
    102: [function(d, g, f) {
        g.exports = {
            createDocumentFragment: d("./createDocumentFragment"),
            filterByNodeType: d("./filterByNodeType"),
            hasAttribute: d("./hasAttribute"),
            insertAfter: d("./insertAfter"),
            insertBefore: d("./insertBefore"),
            insertFirstChild: d("./insertFirstChild"),
            insertLastChild: d("./insertLastChild"),
            isComment: d("./isComment"),
            isDocument: d("./isDocument"),
            isDocumentFragment: d("./isDocumentFragment"),
            isDocumentType: d("./isDocumentType"),
            isElement: d("./isElement"),
            isNode: d("./isNode"),
            isNodeList: d("./isNodeList"),
            isTextNode: d("./isTextNode"),
            remove: d("./remove"),
            replace: d("./replace"),
            COMMENT_NODE: d("./COMMENT_NODE"),
            DOCUMENT_FRAGMENT_NODE: d("./DOCUMENT_FRAGMENT_NODE"),
            DOCUMENT_NODE: d("./DOCUMENT_NODE"),
            DOCUMENT_TYPE_NODE: d("./DOCUMENT_TYPE_NODE"),
            ELEMENT_NODE: d("./ELEMENT_NODE"),
            TEXT_NODE: d("./TEXT_NODE")
        }
    }, {
        "./COMMENT_NODE": 93,
        "./DOCUMENT_FRAGMENT_NODE": 94,
        "./DOCUMENT_NODE": 95,
        "./DOCUMENT_TYPE_NODE": 96,
        "./ELEMENT_NODE": 97,
        "./TEXT_NODE": 98,
        "./createDocumentFragment": 99,
        "./filterByNodeType": 100,
        "./hasAttribute": 101,
        "./insertAfter": 103,
        "./insertBefore": 104,
        "./insertFirstChild": 105,
        "./insertLastChild": 106,
        "./isComment": 109,
        "./isDocument": 110,
        "./isDocumentFragment": 111,
        "./isDocumentType": 112,
        "./isElement": 113,
        "./isNode": 114,
        "./isNodeList": 115,
        "./isTextNode": 116,
        "./remove": 117,
        "./replace": 118
    }],
    103: [function(g, k, h) {
        var i = g("./internal/validate");
        k.exports = function j(b, a) {
            i.insertNode(b, true, "insertAfter");
            i.childNode(a, true, "insertAfter");
            i.hasParentNode(a, "insertAfter");
            if (!a.nextSibling) {
                return a.parentNode.appendChild(b)
            }
            return a.parentNode.insertBefore(b, a.nextSibling)
        }
    }, {
        "./internal/validate": 108
    }],
    104: [function(k, j, h) {
        var i = k("./internal/validate");
        j.exports = function g(b, a) {
            i.insertNode(b, true, "insertBefore");
            i.childNode(a, true, "insertBefore");
            i.hasParentNode(a, "insertBefore");
            return a.parentNode.insertBefore(b, a)
        }
    }, {
        "./internal/validate": 108
    }],
    105: [function(k, j, g) {
        var i = k("./internal/validate");
        j.exports = function h(b, a) {
            i.insertNode(b, true, "insertFirstChild");
            i.parentNode(a, true, "insertFirstChild");
            if (!a.firstChild) {
                return a.appendChild(b)
            }
            return a.insertBefore(b, a.firstChild)
        }
    }, {
        "./internal/validate": 108
    }],
    106: [function(g, k, h) {
        var j = g("./internal/validate");
        k.exports = function i(b, a) {
            j.insertNode(b, true, "insertLastChild");
            j.parentNode(a, true, "insertLastChild");
            return a.appendChild(b)
        }
    }, {
        "./internal/validate": 108
    }],
    107: [function(g, k, h) {
        var j = g("../isNode");
        k.exports = function i(a, b) {
            if (!j(a)) {
                return false
            }
            if (typeof b === "number") {
                return (a.nodeType === b)
            }
            return (b.indexOf(a.nodeType) !== -1)
        }
    }, {
        "../isNode": 114
    }],
    108: [function(A, C, x) {
        var E = A("./isNodeType");
        var D = A("../COMMENT_NODE");
        var w = A("../DOCUMENT_FRAGMENT_NODE");
        var y = A("../ELEMENT_NODE");
        var z = A("../TEXT_NODE");
        var u = [y, z, D, w];
        var B = " must be an Element, TextNode, Comment, or Document Fragment";
        var q = [y, z, D];
        var v = " must be an Element, TextNode, or Comment";
        var t = [y, w];
        var r = " must be an Element, or Document Fragment";
        var F = " must have a parentNode";
        C.exports = {
            parentNode: function(d, a, b, c) {
                c = c || "target";
                if ((d || a) && !E(d, t)) {
                    throw new TypeError(b + ": " + c + r)
                }
            },
            childNode: function(d, a, b, c) {
                c = c || "target";
                if (!d && !a) {
                    return
                }
                if (!E(d, q)) {
                    throw new TypeError(b + ": " + c + v)
                }
            },
            insertNode: function(d, a, b, c) {
                c = c || "node";
                if (!d && !a) {
                    return
                }
                if (!E(d, u)) {
                    throw new TypeError(b + ": " + c + B)
                }
            },
            hasParentNode: function(c, a, b) {
                b = b || "target";
                if (!c.parentNode) {
                    throw new TypeError(a + ": " + b + F)
                }
            }
        }
    }, {
        "../COMMENT_NODE": 93,
        "../DOCUMENT_FRAGMENT_NODE": 94,
        "../ELEMENT_NODE": 97,
        "../TEXT_NODE": 98,
        "./isNodeType": 107
    }],
    109: [function(m, l, i) {
        var j = m("./internal/isNodeType");
        var k = m("./COMMENT_NODE");
        l.exports = function h(a) {
            return j(a, k)
        }
    }, {
        "./COMMENT_NODE": 93,
        "./internal/isNodeType": 107
    }],
    110: [function(m, l, h) {
        var j = m("./internal/isNodeType");
        var i = m("./DOCUMENT_NODE");
        l.exports = function k(a) {
            return j(a, i)
        }
    }, {
        "./DOCUMENT_NODE": 95,
        "./internal/isNodeType": 107
    }],
    111: [function(m, l, h) {
        var j = m("./internal/isNodeType");
        var i = m("./DOCUMENT_FRAGMENT_NODE");
        l.exports = function k(a) {
            return j(a, i)
        }
    }, {
        "./DOCUMENT_FRAGMENT_NODE": 94,
        "./internal/isNodeType": 107
    }],
    112: [function(h, m, i) {
        var j = h("./internal/isNodeType");
        var k = h("./DOCUMENT_TYPE_NODE");
        m.exports = function l(a) {
            return j(a, k)
        }
    }, {
        "./DOCUMENT_TYPE_NODE": 96,
        "./internal/isNodeType": 107
    }],
    113: [function(m, l, h) {
        var j = m("./internal/isNodeType");
        var i = m("./ELEMENT_NODE");
        l.exports = function k(a) {
            return j(a, i)
        }
    }, {
        "./ELEMENT_NODE": 97,
        "./internal/isNodeType": 107
    }],
    114: [function(f, i, g) {
        i.exports = function h(a) {
            return !!(a && a.nodeType)
        }
    }, {}],
    115: [function(k, j, g) {
        var i = /^\[object (HTMLCollection|NodeList|Object)\]$/;
        j.exports = function h(a) {
            if (!a) {
                return false
            }
            if (typeof a.length !== "number") {
                return false
            }
            if (typeof a[0] === "object" && (!a[0] || !a[0].nodeType)) {
                return false
            }
            return i.test(Object.prototype.toString.call(a))
        }
    }, {}],
    116: [function(m, l, i) {
        var j = m("./internal/isNodeType");
        var h = m("./TEXT_NODE");
        l.exports = function k(a) {
            return j(a, h)
        }
    }, {
        "./TEXT_NODE": 98,
        "./internal/isNodeType": 107
    }],
    117: [function(k, j, g) {
        var i = k("./internal/validate");
        j.exports = function h(a) {
            i.childNode(a, true, "remove");
            if (!a.parentNode) {
                return a
            }
            return a.parentNode.removeChild(a)
        }
    }, {
        "./internal/validate": 108
    }],
    118: [function(g, j, h) {
        var i = g("./internal/validate");
        j.exports = function k(b, a) {
            i.insertNode(b, true, "insertFirstChild", "newNode");
            i.childNode(a, true, "insertFirstChild", "oldNode");
            i.hasParentNode(a, "insertFirstChild", "oldNode");
            return a.parentNode.replaceChild(b, a)
        }
    }, {
        "./internal/validate": 108
    }],
    119: [function(m, l, h) {
        var k = m("ac-prefixer/getStyleProperty");
        var j = m("ac-prefixer/stripPrefixes");
        l.exports = function i() {
            var c = Array.prototype.slice.call(arguments);
            var g = c.shift(c);
            var a = window.getComputedStyle(g);
            var b = {};
            var q;
            var f;
            var r;
            var d;
            if (typeof c[0] !== "string") {
                c = c[0]
            }
            for (d = 0; d < c.length; d++) {
                q = c[d];
                f = k(q);
                if (f) {
                    q = j(f);
                    r = a[f];
                    if (!r || r === "auto") {
                        r = null
                    }
                    if (r) {
                        r = j(r)
                    }
                } else {
                    r = null
                }
                b[q] = r
            }
            return b
        }
    }, {
        "ac-prefixer/getStyleProperty": 123,
        "ac-prefixer/stripPrefixes": 129
    }],
    120: [function(d, g, f) {
        g.exports = {
            getStyle: d("./getStyle"),
            setStyle: d("./setStyle")
        }
    }, {
        "./getStyle": 119,
        "./setStyle": 132
    }],
    121: [function(i, h, f) {
        h.exports = function g(a) {
            var b;
            var c;
            var d;
            if (!a && a !== 0) {
                return ""
            }
            if (Array.isArray(a)) {
                return a + ""
            }
            if (typeof a === "object") {
                b = "";
                c = Object.keys(a);
                for (d = 0; d < c.length; d++) {
                    b += c[d] + "(" + a[c[d]] + ") "
                }
                return b.trim()
            }
            return a
        }
    }, {}],
    122: [function(n, m, o) {
        var i = n("./shared/stylePropertyCache");
        var k = n("./getStyleProperty");
        var l = n("./getStyleValue");
        m.exports = function j(a, b) {
            var c;
            a = k(a);
            if (!a) {
                return false
            }
            c = i[a].css;
            if (typeof b !== "undefined") {
                b = l(a, b);
                if (b === false) {
                    return false
                }
                c += ":" + b + ";"
            }
            return c
        }
    }, {
        "./getStyleProperty": 123,
        "./getStyleValue": 124,
        "./shared/stylePropertyCache": 127
    }],
    123: [function(q, r, o) {
        var v = q("./shared/stylePropertyCache");
        var n = q("./shared/getStyleTestElement");
        var u = q("./utils/toCSS");
        var l = q("./utils/toDOM");
        var m = q("./shared/prefixHelper");
        var t = function(c, b) {
            var a = u(c);
            var d = (b === false) ? false : u(b);
            v[c] = v[b] = v[a] = v[d] = {
                dom: b,
                css: d
            };
            return b
        };
        r.exports = function p(c) {
            var f;
            var b;
            var d;
            var a;
            c += "";
            if (c in v) {
                return v[c].dom
            }
            d = n();
            c = l(c);
            b = c.charAt(0).toUpperCase() + c.substring(1);
            if (c === "filter") {
                f = ["WebkitFilter", "filter"]
            } else {
                f = (c + " " + m.dom.join(b + " ") + b).split(" ")
            }
            for (a = 0; a < f.length; a++) {
                if (typeof d.style[f[a]] !== "undefined") {
                    if (a !== 0) {
                        m.reduce(a - 1)
                    }
                    return t(c, f[a])
                }
            }
            return t(c, false)
        }
    }, {
        "./shared/getStyleTestElement": 125,
        "./shared/prefixHelper": 126,
        "./shared/stylePropertyCache": 127,
        "./utils/toCSS": 130,
        "./utils/toDOM": 131
    }],
    124: [function(u, w, q) {
        var t = u("./getStyleProperty");
        var n = u("./shared/styleValueAvailable");
        var o = u("./shared/prefixHelper");
        var x = u("./shared/stylePropertyCache");
        var p = {};
        var m = /(\([^\)]+\))/gi;
        var r = /([^ ,;\(]+(\([^\)]+\))?)/gi;
        w.exports = function v(b, c) {
            var a;
            c += "";
            b = t(b);
            if (!b) {
                return false
            }
            if (n(b, c)) {
                return c
            }
            a = x[b].css;
            c = c.replace(r, function(h) {
                var i;
                var d;
                var f;
                var g;
                if (h[0] === "#" || !isNaN(h[0])) {
                    return h
                }
                d = h.replace(m, "");
                f = a + ":" + d;
                if (f in p) {
                    if (p[f] === false) {
                        return ""
                    }
                    return h.replace(d, p[f])
                }
                i = o.css.map(function(j) {
                    return j + h
                });
                i = [h].concat(i);
                for (g = 0; g < i.length; g++) {
                    if (n(b, i[g])) {
                        if (g !== 0) {
                            o.reduce(g - 1)
                        }
                        p[f] = i[g].replace(m, "");
                        return i[g]
                    }
                }
                p[f] = false;
                return ""
            });
            c = c.trim();
            return (c === "") ? false : c
        }
    }, {
        "./getStyleProperty": 123,
        "./shared/prefixHelper": 126,
        "./shared/stylePropertyCache": 127,
        "./shared/styleValueAvailable": 128
    }],
    125: [function(k, j, g) {
        var i;
        j.exports = function h() {
            if (!i) {
                i = document.createElement("_")
            } else {
                i.style.cssText = "";
                i.removeAttribute("style")
            }
            return i
        };
        j.exports.resetElement = function() {
            i = null
        }
    }, {}],
    126: [function(d, g, f) {
        arguments[4][70][0].apply(f, arguments)
    }, {
        dup: 70
    }],
    127: [function(d, g, f) {
        g.exports = {}
    }, {}],
    128: [function(t, u, r) {
        var v = t("./stylePropertyCache");
        var q = t("./getStyleTestElement");
        var n = false;
        var l;
        var m;
        var p = function() {
            var b;
            if (!n) {
                n = true;
                l = ("CSS" in window && "supports" in window.CSS);
                m = false;
                b = q();
                try {
                    b.style.width = "invalid"
                } catch (a) {
                    m = true
                }
            }
        };
        u.exports = function o(d, f) {
            var a;
            var b;
            p();
            if (l) {
                d = v[d].css;
                return CSS.supports(d, f)
            }
            b = q();
            a = b.style[d];
            if (m) {
                try {
                    b.style[d] = f
                } catch (c) {
                    return false
                }
            } else {
                b.style[d] = f
            }
            return (b.style[d] && b.style[d] !== a)
        };
        u.exports.resetFlags = function() {
            n = false
        }
    }, {
        "./getStyleTestElement": 125,
        "./stylePropertyCache": 127
    }],
    129: [function(k, j, h) {
        var g = /(-webkit-|-moz-|-ms-)|^(webkit|moz|ms)/gi;
        j.exports = function i(a) {
            a = String.prototype.replace.call(a, g, "");
            return a.charAt(0).toLowerCase() + a.substring(1)
        }
    }, {}],
    130: [function(k, j, g) {
        var i = /^(webkit|moz|ms)/gi;
        j.exports = function h(a) {
            var b;
            if (a.toLowerCase() === "cssfloat") {
                return "float"
            }
            if (i.test(a)) {
                a = "-" + a
            }
            return a.replace(/([A-Z]+)([A-Z][a-z])/g, "$1-$2").replace(/([a-z\d])([A-Z])/g, "$1-$2").toLowerCase()
        }
    }, {}],
    131: [function(g, k, h) {
        var i = /-([a-z])/g;
        k.exports = function j(a) {
            var b;
            if (a.toLowerCase() === "float") {
                return "cssFloat"
            }
            a = a.replace(i, function(c, d) {
                return d.toUpperCase()
            });
            if (a.substr(0, 2) === "Ms") {
                a = "ms" + a.substring(2)
            }
            return a
        }
    }, {}],
    132: [function(n, m, o) {
        var j = n("ac-prefixer/getStyleCSS");
        var l = n("ac-prefixer/getStyleProperty");
        var i = n("./internal/normalizeValue");
        m.exports = function k(h, b) {
            var c = "";
            var d;
            var q;
            var f;
            var a;
            var g;
            if (typeof b !== "object") {
                throw new TypeError("setStyle: styles must be an Object")
            }
            for (q in b) {
                a = i(b[q]);
                if (!a && a !== 0) {
                    f = l(q);
                    if ("removeAttribute" in h.style) {
                        h.style.removeAttribute(f)
                    } else {
                        h.style[f] = ""
                    }
                } else {
                    d = j(q, a);
                    if (d !== false) {
                        c += " " + d
                    }
                }
            }
            if (c.length) {
                g = h.style.cssText;
                if (g.charAt(g.length - 1) !== ";") {
                    g += ";"
                }
                g += c;
                h.style.cssText = g
            }
            return h
        }
    }, {
        "./internal/normalizeValue": 121,
        "ac-prefixer/getStyleCSS": 122,
        "ac-prefixer/getStyleProperty": 123
    }],
    133: [function(o, m, i) {
        var l = o("ac-dom-nodes/isElement");
        var j = o("./matchesSelector");
        var k = o("./internal/validate");
        m.exports = function n(a, b, c) {
            k.childNode(a, true, "ancestors");
            k.selector(b, false, "ancestors");
            if (c && l(a) && (!b || j(a, b))) {
                return a
            }
            if (a !== document.body) {
                while ((a = a.parentNode) && l(a)) {
                    if (!b || j(a, b)) {
                        return a
                    }
                    if (a === document.body) {
                        break
                    }
                }
            }
            return null
        }
    }, {
        "./internal/validate": 140,
        "./matchesSelector": 142,
        "ac-dom-nodes/isElement": 113
    }],
    134: [function(o, n, i) {
        var l = o("ac-dom-nodes/isElement");
        var j = o("./matchesSelector");
        var k = o("./internal/validate");
        n.exports = function m(a, c, d) {
            var b = [];
            k.childNode(a, true, "ancestors");
            k.selector(c, false, "ancestors");
            if (d && l(a) && (!c || j(a, c))) {
                b.push(a)
            }
            if (a !== document.body) {
                while ((a = a.parentNode) && l(a)) {
                    if (!c || j(a, c)) {
                        b.push(a)
                    }
                    if (a === document.body) {
                        break
                    }
                }
            }
            return b
        }
    }, {
        "./internal/validate": 140,
        "./matchesSelector": 142,
        "ac-dom-nodes/isElement": 113
    }],
    135: [function(n, l, o) {
        var i = n("ac-dom-nodes/filterByNodeType");
        var j = n("./filterBySelector");
        var k = n("./internal/validate");
        l.exports = function m(a, c) {
            var b;
            k.parentNode(a, true, "children");
            k.selector(c, false, "children");
            b = a.children || a.childNodes;
            b = i(b);
            if (c) {
                b = j(b, c)
            }
            return b
        }
    }, {
        "./filterBySelector": 136,
        "./internal/validate": 140,
        "ac-dom-nodes/filterByNodeType": 100
    }],
    136: [function(l, k, m) {
        var h = l("./matchesSelector");
        var j = l("./internal/validate");
        k.exports = function i(a, b) {
            j.selector(b, true, "filterBySelector");
            a = Array.prototype.slice.call(a);
            return a.filter(function(c) {
                return h(c, b)
            })
        }
    }, {
        "./internal/validate": 140,
        "./matchesSelector": 142
    }],
    137: [function(h, l, i) {
        var m = h("./children");
        var j = h("./internal/validate");
        l.exports = function k(a, c) {
            var b;
            j.parentNode(a, true, "firstChild");
            j.selector(c, false, "firstChild");
            if (a.firstElementChild && !c) {
                return a.firstElementChild
            }
            b = m(a, c);
            if (b.length) {
                return b[0]
            }
            return null
        }
    }, {
        "./children": 135,
        "./internal/validate": 140
    }],
    138: [function(d, g, f) {
        g.exports = {
            ancestor: d("./ancestor"),
            ancestors: d("./ancestors"),
            children: d("./children"),
            filterBySelector: d("./filterBySelector"),
            firstChild: d("./firstChild"),
            lastChild: d("./lastChild"),
            matchesSelector: d("./matchesSelector"),
            nextSibling: d("./nextSibling"),
            nextSiblings: d("./nextSiblings"),
            previousSibling: d("./previousSibling"),
            previousSiblings: d("./previousSiblings"),
            querySelector: d("./querySelector"),
            querySelectorAll: d("./querySelectorAll"),
            siblings: d("./siblings")
        }
    }, {
        "./ancestor": 133,
        "./ancestors": 134,
        "./children": 135,
        "./filterBySelector": 136,
        "./firstChild": 137,
        "./lastChild": 141,
        "./matchesSelector": 142,
        "./nextSibling": 143,
        "./nextSiblings": 144,
        "./previousSibling": 145,
        "./previousSiblings": 146,
        "./querySelector": 147,
        "./querySelectorAll": 148,
        "./siblings": 151
    }],
    139: [function(d, g, f) {
        g.exports = window.Element ? (function(a) {
            return a.matches || a.matchesSelector || a.webkitMatchesSelector || a.mozMatchesSelector || a.msMatchesSelector || a.oMatchesSelector
        }(Element.prototype)) : null
    }, {}],
    140: [function(A, D, y) {
        var r = A("ac-dom-nodes/isNode");
        var E = A("ac-dom-nodes/COMMENT_NODE");
        var w = A("ac-dom-nodes/DOCUMENT_FRAGMENT_NODE");
        var x = A("ac-dom-nodes/DOCUMENT_NODE");
        var z = A("ac-dom-nodes/ELEMENT_NODE");
        var B = A("ac-dom-nodes/TEXT_NODE");
        var F = function(a, b) {
            if (!r(a)) {
                return false
            }
            if (typeof b === "number") {
                return (a.nodeType === b)
            }
            return (b.indexOf(a.nodeType) !== -1)
        };
        var u = [z, x, w];
        var t = " must be an Element, Document, or Document Fragment";
        var q = [z, B, E];
        var v = " must be an Element, TextNode, or Comment";
        var C = " must be a string";
        D.exports = {
            parentNode: function(d, a, b, c) {
                c = c || "node";
                if ((d || a) && !F(d, u)) {
                    throw new TypeError(b + ": " + c + t)
                }
            },
            childNode: function(d, a, b, c) {
                c = c || "node";
                if (!d && !a) {
                    return
                }
                if (!F(d, q)) {
                    throw new TypeError(b + ": " + c + v)
                }
            },
            selector: function(d, a, b, c) {
                c = c || "selector";
                if ((d || a) && typeof d !== "string") {
                    throw new TypeError(b + ": " + c + C)
                }
            }
        }
    }, {
        "ac-dom-nodes/COMMENT_NODE": 93,
        "ac-dom-nodes/DOCUMENT_FRAGMENT_NODE": 94,
        "ac-dom-nodes/DOCUMENT_NODE": 95,
        "ac-dom-nodes/ELEMENT_NODE": 97,
        "ac-dom-nodes/TEXT_NODE": 98,
        "ac-dom-nodes/isNode": 114
    }],
    141: [function(h, l, i) {
        var m = h("./children");
        var j = h("./internal/validate");
        l.exports = function k(a, c) {
            var b;
            j.parentNode(a, true, "lastChild");
            j.selector(c, false, "lastChild");
            if (a.lastElementChild && !c) {
                return a.lastElementChild
            }
            b = m(a, c);
            if (b.length) {
                return b[b.length - 1]
            }
            return null
        }
    }, {
        "./children": 135,
        "./internal/validate": 140
    }],
    142: [function(p, o, q) {
        var n = p("ac-dom-nodes/isElement");
        var k = p("./internal/nativeMatches");
        var l = p("./internal/validate");
        var m = p("./vendor/sizzle/sizzle");
        o.exports = function j(a, b) {
            l.selector(b, true, "matchesSelector");
            if (!n(a)) {
                return false
            }
            if (!k) {
                return m.matchesSelector(a, b)
            }
            return k.call(a, b)
        }
    }, {
        "./internal/nativeMatches": 139,
        "./internal/validate": 140,
        "./vendor/sizzle/sizzle": 152,
        "ac-dom-nodes/isElement": 113
    }],
    143: [function(o, n, i) {
        var m = o("ac-dom-nodes/isElement");
        var j = o("./matchesSelector");
        var k = o("./internal/validate");
        n.exports = function l(a, b) {
            k.childNode(a, true, "nextSibling");
            k.selector(b, false, "nextSibling");
            if (a.nextElementSibling && !b) {
                return a.nextElementSibling
            }
            while (a = a.nextSibling) {
                if (m(a)) {
                    if (!b || j(a, b)) {
                        return a
                    }
                }
            }
            return null
        }
    }, {
        "./internal/validate": 140,
        "./matchesSelector": 142,
        "ac-dom-nodes/isElement": 113
    }],
    144: [function(n, m, i) {
        var l = n("ac-dom-nodes/isElement");
        var j = n("./matchesSelector");
        var k = n("./internal/validate");
        m.exports = function o(a, c) {
            var b = [];
            k.childNode(a, true, "nextSiblings");
            k.selector(c, false, "nextSiblings");
            while (a = a.nextSibling) {
                if (l(a)) {
                    if (!c || j(a, c)) {
                        b.push(a)
                    }
                }
            }
            return b
        }
    }, {
        "./internal/validate": 140,
        "./matchesSelector": 142,
        "ac-dom-nodes/isElement": 113
    }],
    145: [function(o, n, i) {
        var l = o("ac-dom-nodes/isElement");
        var j = o("./matchesSelector");
        var k = o("./internal/validate");
        n.exports = function m(a, b) {
            k.childNode(a, true, "previousSibling");
            k.selector(b, false, "previousSibling");
            if (a.previousElementSibling && !b) {
                return a.previousElementSibling
            }
            while (a = a.previousSibling) {
                if (l(a)) {
                    if (!b || j(a, b)) {
                        return a
                    }
                }
            }
            return null
        }
    }, {
        "./internal/validate": 140,
        "./matchesSelector": 142,
        "ac-dom-nodes/isElement": 113
    }],
    146: [function(o, n, i) {
        var m = o("ac-dom-nodes/isElement");
        var j = o("./matchesSelector");
        var k = o("./internal/validate");
        n.exports = function l(a, c) {
            var b = [];
            k.childNode(a, true, "previousSiblings");
            k.selector(c, false, "previousSiblings");
            while (a = a.previousSibling) {
                if (m(a)) {
                    if (!c || j(a, c)) {
                        b.push(a)
                    }
                }
            }
            return b.reverse()
        }
    }, {
        "./internal/validate": 140,
        "./matchesSelector": 142,
        "ac-dom-nodes/isElement": 113
    }],
    147: [function(m, l, i) {
        var j = m("./internal/validate");
        var h = m("./shims/querySelector");
        l.exports = function k(b, a) {
            a = a || document;
            j.parentNode(a, true, "querySelector", "context");
            j.selector(b, true, "querySelector");
            if (!a.querySelector) {
                return h(b, a)
            }
            return a.querySelector(b)
        }
    }, {
        "./internal/validate": 140,
        "./shims/querySelector": 149
    }],
    148: [function(h, m, i) {
        var j = h("./internal/validate");
        var k = h("./shims/querySelectorAll");
        m.exports = function l(b, a) {
            a = a || document;
            j.parentNode(a, true, "querySelectorAll", "context");
            j.selector(b, true, "querySelectorAll");
            if (!a.querySelectorAll) {
                return k(b, a)
            }
            return Array.prototype.slice.call(a.querySelectorAll(b))
        }
    }, {
        "./internal/validate": 140,
        "./shims/querySelectorAll": 150
    }],
    149: [function(g, k, h) {
        var j = g("./querySelectorAll");
        k.exports = function i(b, a) {
            var c = j(b, a);
            return c.length ? c[0] : null
        }
    }, {
        "./querySelectorAll": 150
    }],
    150: [function(i, o, j) {
        var l = i("../vendor/sizzle/sizzle");
        var k = i("../children");
        var m = i("ac-dom-nodes/isDocumentFragment");
        o.exports = function n(d, b) {
            var c;
            var a;
            if (m(b)) {
                c = k(b);
                a = [];
                c.forEach(function(g) {
                    var f;
                    if (l.matchesSelector(g, d)) {
                        a.push(g)
                    }
                    f = l(d, g);
                    if (f.length) {
                        a = a.concat(f)
                    }
                });
                return a
            }
            return l(d, b)
        }
    }, {
        "../children": 135,
        "../vendor/sizzle/sizzle": 152,
        "ac-dom-nodes/isDocumentFragment": 111
    }],
    151: [function(h, l, i) {
        var m = h("./children");
        var j = h("./internal/validate");
        l.exports = function k(a, c) {
            var b = [];
            j.childNode(a, true, "siblings");
            j.selector(c, false, "siblings");
            if (a.parentNode) {
                b = m(a.parentNode, c);
                b = b.filter(function(d) {
                    return (d !== a)
                })
            }
            return b
        }
    }, {
        "./children": 135,
        "./internal/validate": 140
    }],
    152: [function(d, g, f) {
        arguments[4][59][0].apply(f, arguments)
    }, {
        dup: 59
    }],
    153: [function(d, g, f) {
        g.exports = {
            createBezier: d("./ac-easing/createBezier"),
            createPredefined: d("./ac-easing/createPredefined"),
            createStep: d("./ac-easing/createStep"),
            Ease: d("./ac-easing/Ease")
        }
    }, {
        "./ac-easing/Ease": 154,
        "./ac-easing/createBezier": 155,
        "./ac-easing/createPredefined": 156,
        "./ac-easing/createStep": 157
    }],
    154: [function(h, m, i) {
        var j = "Ease expects an easing function.";

        function k(a, b) {
            if (typeof a !== "function") {
                throw new TypeError(j)
            }
            this.easingFunction = a;
            this.cssString = b || null
        }
        var l = k.prototype;
        l.getValue = function(a) {
            return this.easingFunction(a, 0, 1, 1)
        };
        m.exports = k
    }, {}],
    155: [function(i, o, j) {
        var m = i("./Ease");
        var k = i("./helpers/KeySpline");
        var n = "Bezier curve expects exactly four (4) numbers. Given: ";
        o.exports = function l(r, b, t, c) {
            var a = Array.prototype.slice.call(arguments);
            var f = a.every(function(p) {
                return (typeof p === "number")
            });
            if (a.length !== 4 || !f) {
                throw new TypeError(n + a)
            }
            var d = new k(r, b, t, c);
            var h = function(q, x, p, w) {
                return d.get(q / w) * p + x
            };
            var g = "cubic-bezier(" + a.join(", ") + ")";
            return new m(h, g)
        }
    }, {
        "./Ease": 154,
        "./helpers/KeySpline": 158
    }],
    156: [function(q, t, p) {
        var l = q("./createStep");
        var o = q("./helpers/cssAliases");
        var r = q("./helpers/easingFunctions");
        var m = q("./Ease");
        var n = 'Easing function "%TYPE%" not recognized among the following: ' + Object.keys(r).join(", ");
        t.exports = function k(b) {
            var a;
            if (b === "step-start") {
                return l(1, "start")
            } else {
                if (b === "step-end") {
                    return l(1, "end")
                } else {
                    a = r[b]
                }
            }
            if (!a) {
                throw new Error(n.replace("%TYPE%", b))
            }
            return new m(a, o[b])
        }
    }, {
        "./Ease": 154,
        "./createStep": 157,
        "./helpers/cssAliases": 159,
        "./helpers/easingFunctions": 160
    }],
    157: [function(n, m, o) {
        var l = n("./Ease");
        var i = "Step function expects a numeric value greater than zero. Given: ";
        var j = 'Step function direction must be either "start" or "end" (default). Given: ';
        m.exports = function k(d, a) {
            a = a || "end";
            if (typeof d !== "number" || d < 1) {
                throw new TypeError(i + d)
            }
            if (a !== "start" && a !== "end") {
                throw new TypeError(j + a)
            }
            var b = function(h, f, g, t) {
                var u = g / d;
                var v = Math[(a === "start") ? "floor" : "ceil"](h / t * d);
                return f + u * v
            };
            var c = "steps(" + d + ", " + a + ")";
            return new l(b, c)
        }
    }, {
        "./Ease": 154
    }],
    158: [function(f, i, g) {
        /*! MIT License
         *
         * KeySpline - use bezier curve for transition easing function
         * Copyright (c) 2012 Gaetan Renaudeau <renaudeau.gaetan@gmail.com>
         *
         * Permission is hereby granted, free of charge, to any person obtaining a
         * copy of this software and associated documentation files (the "Software"),
         * to deal in the Software without restriction, including without limitation
         * the rights to use, copy, modify, merge, publish, distribute, sublicense,
         * and/or sell copies of the Software, and to permit persons to whom the
         * Software is furnished to do so, subject to the following conditions:
         *
         * The above copyright notice and this permission notice shall be included in
         * all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
         * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
         * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
         * DEALINGS IN THE SOFTWARE.
         */
        function h(a, d, b, q) {
            this.get = function(j) {
                if (a === d && b === q) {
                    return j
                }
                return u(p(j), d, q)
            };

            function r(k, j) {
                return 1 - 3 * j + 3 * k
            }

            function t(k, j) {
                return 3 * j - 6 * k
            }

            function v(j) {
                return 3 * j
            }

            function u(j, l, k) {
                return ((r(l, k) * j + t(l, k)) * j + v(l)) * j
            }

            function c(j, l, k) {
                return 3 * r(l, k) * j * j + 2 * t(l, k) * j + v(l)
            }

            function p(k) {
                var m = k;
                for (var l = 0; l < 4; ++l) {
                    var j = c(m, a, b);
                    if (j === 0) {
                        return m
                    }
                    var n = u(m, a, b) - k;
                    m -= n / j
                }
                return m
            }
        }
        i.exports = h
    }, {}],
    159: [function(i, h, f) {
        var g = {
            linear: "cubic-bezier(0, 0, 1, 1)",
            ease: "cubic-bezier(0.25, 0.1, 0.25, 1)",
            "ease-in": "cubic-bezier(0.42, 0, 1, 1)",
            "ease-out": "cubic-bezier(0, 0, 0.58, 1)",
            "ease-in-out": "cubic-bezier(0.42, 0, 0.58, 1)",
            "ease-in-cubic": "cubic-bezier(0.55, 0.055, 0.675, 0.19)",
            "ease-out-cubic": "cubic-bezier(0.215, 0.61, 0.355, 1)",
            "ease-in-out-cubic": "cubic-bezier(0.645, 0.045, 0.355, 1)",
            "ease-in-quad": "cubic-bezier(0.55, 0.085, 0.68, 0.53)",
            "ease-out-quad": "cubic-bezier(0.25, 0.46, 0.45, 0.94)",
            "ease-in-out-quad": "cubic-bezier(0.455, 0.03, 0.515, 0.955)",
            "ease-in-quart": "cubic-bezier(0.895, 0.03, 0.685, 0.22)",
            "ease-out-quart": "cubic-bezier(0.165, 0.84, 0.44, 1)",
            "ease-in-out-quart": "cubic-bezier(0.77, 0, 0.175, 1)",
            "ease-in-quint": "cubic-bezier(0.755, 0.05, 0.855, 0.06)",
            "ease-out-quint": "cubic-bezier(0.23, 1, 0.32, 1)",
            "ease-in-out-quint": "cubic-bezier(0.86, 0, 0.07, 1)",
            "ease-in-sine": "cubic-bezier(0.47, 0, 0.745, 0.715)",
            "ease-out-sine": "cubic-bezier(0.39, 0.575, 0.565, 1)",
            "ease-in-out-sine": "cubic-bezier(0.445, 0.05, 0.55, 0.95)",
            "ease-in-expo": "cubic-bezier(0.95, 0.05, 0.795, 0.035)",
            "ease-out-expo": "cubic-bezier(0.19, 1, 0.22, 1)",
            "ease-in-out-expo": "cubic-bezier(1, 0, 0, 1)",
            "ease-in-circ": "cubic-bezier(0.6, 0.04, 0.98, 0.335)",
            "ease-out-circ": "cubic-bezier(0.075, 0.82, 0.165, 1)",
            "ease-in-out-circ": "cubic-bezier(0.785, 0.135, 0.15, 0.86)",
            "ease-in-back": "cubic-bezier(0.6, -0.28, 0.735, 0.045)",
            "ease-out-back": "cubic-bezier(0.175, 0.885, 0.32, 1.275)",
            "ease-in-out-back": "cubic-bezier(0.68, -0.55, 0.265, 1.55)"
        };
        g.easeIn = g["ease-in"];
        g.easeOut = g["ease-out"];
        g.easeInOut = g["ease-in-out"];
        g.easeInCubic = g["ease-in-cubic"];
        g.easeOutCubic = g["ease-out-cubic"];
        g.easeInOutCubic = g["ease-in-out-cubic"];
        g.easeInQuad = g["ease-in-quad"];
        g.easeOutQuad = g["ease-out-quad"];
        g.easeInOutQuad = g["ease-in-out-quad"];
        g.easeInQuart = g["ease-in-quart"];
        g.easeOutQuart = g["ease-out-quart"];
        g.easeInOutQuart = g["ease-in-out-quart"];
        g.easeInQuint = g["ease-in-quint"];
        g.easeOutQuint = g["ease-out-quint"];
        g.easeInOutQuint = g["ease-in-out-quint"];
        g.easeInSine = g["ease-in-sine"];
        g.easeOutSine = g["ease-out-sine"];
        g.easeInOutSine = g["ease-in-out-sine"];
        g.easeInExpo = g["ease-in-expo"];
        g.easeOutExpo = g["ease-out-expo"];
        g.easeInOutExpo = g["ease-in-out-expo"];
        g.easeInCirc = g["ease-in-circ"];
        g.easeOutCirc = g["ease-out-circ"];
        g.easeInOutCirc = g["ease-in-out-circ"];
        g.easeInBack = g["ease-in-back"];
        g.easeOutBack = g["ease-out-back"];
        g.easeInOutBack = g["ease-in-out-back"];
        h.exports = g
    }, {}],
    160: [function(az, aB, X) {
        var T = az("../createBezier");
        var ag = T(0.25, 0.1, 0.25, 1).easingFunction;
        var ax = T(0.42, 0, 1, 1).easingFunction;
        var aa = T(0, 0, 0.58, 1).easingFunction;
        var af = T(0.42, 0, 0.58, 1).easingFunction;
        var ai = function(b, d, a, c) {
            return a * b / c + d
        };
        var aw = function(b, d, a, c) {
            return a * (b /= c) * b + d
        };
        var P = function(b, d, a, c) {
            return -a * (b /= c) * (b - 2) + d
        };
        var Z = function(b, d, a, c) {
            if ((b /= c / 2) < 1) {
                return a / 2 * b * b + d
            }
            return -a / 2 * ((--b) * (b - 2) - 1) + d
        };
        var av = function(b, d, a, c) {
            return a * (b /= c) * b * b + d
        };
        var aC = function(b, d, a, c) {
            return a * ((b = b / c - 1) * b * b + 1) + d
        };
        var au = function(b, d, a, c) {
            if ((b /= c / 2) < 1) {
                return a / 2 * b * b * b + d
            }
            return a / 2 * ((b -= 2) * b * b + 2) + d
        };
        var ao = function(b, d, a, c) {
            return a * (b /= c) * b * b * b + d
        };
        var aq = function(b, d, a, c) {
            return -a * ((b = b / c - 1) * b * b * b - 1) + d
        };
        var an = function(b, d, a, c) {
            if ((b /= c / 2) < 1) {
                return a / 2 * b * b * b * b + d
            }
            return -a / 2 * ((b -= 2) * b * b * b - 2) + d
        };
        var ae = function(b, d, a, c) {
            return a * (b /= c) * b * b * b * b + d
        };
        var ah = function(b, d, a, c) {
            return a * ((b = b / c - 1) * b * b * b * b + 1) + d
        };
        var ad = function(b, d, a, c) {
            if ((b /= c / 2) < 1) {
                return a / 2 * b * b * b * b * b + d
            }
            return a / 2 * ((b -= 2) * b * b * b * b + 2) + d
        };
        var aA = function(b, d, a, c) {
            return -a * Math.cos(b / c * (Math.PI / 2)) + a + d
        };
        var R = function(b, d, a, c) {
            return a * Math.sin(b / c * (Math.PI / 2)) + d
        };
        var ab = function(b, d, a, c) {
            return -a / 2 * (Math.cos(Math.PI * b / c) - 1) + d
        };
        var W = function(b, d, a, c) {
            return (b === 0) ? d : a * Math.pow(2, 10 * (b / c - 1)) + d
        };
        var ac = function(b, d, a, c) {
            return (b === c) ? d + a : a * (-Math.pow(2, -10 * b / c) + 1) + d
        };
        var al = function(b, d, a, c) {
            if (b === 0) {
                return d
            } else {
                if (b === c) {
                    return d + a
                } else {
                    if ((b /= c / 2) < 1) {
                        return a / 2 * Math.pow(2, 10 * (b - 1)) + d
                    }
                }
            }
            return a / 2 * (-Math.pow(2, -10 * --b) + 2) + d
        };
        var ar = function(b, d, a, c) {
            return -a * (Math.sqrt(1 - (b /= c) * b) - 1) + d
        };
        var ay = function(b, d, a, c) {
            return a * Math.sqrt(1 - (b = b / c - 1) * b) + d
        };
        var U = function(b, d, a, c) {
            if ((b /= c / 2) < 1) {
                return -a / 2 * (Math.sqrt(1 - b * b) - 1) + d
            }
            return a / 2 * (Math.sqrt(1 - (b -= 2) * b) + 1) + d
        };
        var Y = function(c, f, a, d) {
            var h = 1.70158;
            var b = 0;
            var g = a;
            if (c === 0) {
                return f
            } else {
                if ((c /= d) === 1) {
                    return f + a
                }
            }
            if (!b) {
                b = d * 0.3
            }
            if (g < Math.abs(a)) {
                g = a;
                h = b / 4
            } else {
                h = b / (2 * Math.PI) * Math.asin(a / g)
            }
            return -(g * Math.pow(2, 10 * (c -= 1)) * Math.sin((c * d - h) * (2 * Math.PI) / b)) + f
        };
        var V = function(c, f, a, d) {
            var h = 1.70158;
            var b = 0;
            var g = a;
            if (c === 0) {
                return f
            } else {
                if ((c /= d) === 1) {
                    return f + a
                }
            }
            if (!b) {
                b = d * 0.3
            }
            if (g < Math.abs(a)) {
                g = a;
                h = b / 4
            } else {
                h = b / (2 * Math.PI) * Math.asin(a / g)
            }
            return g * Math.pow(2, -10 * c) * Math.sin((c * d - h) * (2 * Math.PI) / b) + a + f
        };
        var aj = function(c, f, a, d) {
            var h = 1.70158;
            var b = 0;
            var g = a;
            if (c === 0) {
                return f
            } else {
                if ((c /= d / 2) === 2) {
                    return f + a
                }
            }
            if (!b) {
                b = d * (0.3 * 1.5)
            }
            if (g < Math.abs(a)) {
                g = a;
                h = b / 4
            } else {
                h = b / (2 * Math.PI) * Math.asin(a / g)
            }
            if (c < 1) {
                return -0.5 * (g * Math.pow(2, 10 * (c -= 1)) * Math.sin((c * d - h) * (2 * Math.PI) / b)) + f
            }
            return g * Math.pow(2, -10 * (c -= 1)) * Math.sin((c * d - h) * (2 * Math.PI) / b) * 0.5 + a + f
        };
        var ak = function(b, d, a, c, f) {
            if (f === undefined) {
                f = 1.70158
            }
            return a * (b /= c) * b * ((f + 1) * b - f) + d
        };
        var am = function(b, d, a, c, f) {
            if (f === undefined) {
                f = 1.70158
            }
            return a * ((b = b / c - 1) * b * ((f + 1) * b + f) + 1) + d
        };
        var at = function(b, d, a, c, f) {
            if (f === undefined) {
                f = 1.70158
            }
            if ((b /= c / 2) < 1) {
                return a / 2 * (b * b * (((f *= (1.525)) + 1) * b - f)) + d
            }
            return a / 2 * ((b -= 2) * b * (((f *= (1.525)) + 1) * b + f) + 2) + d
        };
        var S = function(b, d, a, c) {
            if ((b /= c) < (1 / 2.75)) {
                return a * (7.5625 * b * b) + d
            } else {
                if (b < (2 / 2.75)) {
                    return a * (7.5625 * (b -= (1.5 / 2.75)) * b + 0.75) + d
                } else {
                    if (b < (2.5 / 2.75)) {
                        return a * (7.5625 * (b -= (2.25 / 2.75)) * b + 0.9375) + d
                    }
                }
            }
            return a * (7.5625 * (b -= (2.625 / 2.75)) * b + 0.984375) + d
        };
        var ap = function(b, d, a, c) {
            return a - S(c - b, 0, a, c) + d
        };
        var Q = function(b, d, a, c) {
            if (b < c / 2) {
                return ap(b * 2, 0, a, c) * 0.5 + d
            }
            return S(b * 2 - c, 0, a, c) * 0.5 + a * 0.5 + d
        };
        aB.exports = {
            linear: ai,
            ease: ag,
            easeIn: ax,
            "ease-in": ax,
            easeOut: aa,
            "ease-out": aa,
            easeInOut: af,
            "ease-in-out": af,
            easeInCubic: av,
            "ease-in-cubic": av,
            easeOutCubic: aC,
            "ease-out-cubic": aC,
            easeInOutCubic: au,
            "ease-in-out-cubic": au,
            easeInQuad: aw,
            "ease-in-quad": aw,
            easeOutQuad: P,
            "ease-out-quad": P,
            easeInOutQuad: Z,
            "ease-in-out-quad": Z,
            easeInQuart: ao,
            "ease-in-quart": ao,
            easeOutQuart: aq,
            "ease-out-quart": aq,
            easeInOutQuart: an,
            "ease-in-out-quart": an,
            easeInQuint: ae,
            "ease-in-quint": ae,
            easeOutQuint: ah,
            "ease-out-quint": ah,
            easeInOutQuint: ad,
            "ease-in-out-quint": ad,
            easeInSine: aA,
            "ease-in-sine": aA,
            easeOutSine: R,
            "ease-out-sine": R,
            easeInOutSine: ab,
            "ease-in-out-sine": ab,
            easeInExpo: W,
            "ease-in-expo": W,
            easeOutExpo: ac,
            "ease-out-expo": ac,
            easeInOutExpo: al,
            "ease-in-out-expo": al,
            easeInCirc: ar,
            "ease-in-circ": ar,
            easeOutCirc: ay,
            "ease-out-circ": ay,
            easeInOutCirc: U,
            "ease-in-out-circ": U,
            easeInBack: ak,
            "ease-in-back": ak,
            easeOutBack: am,
            "ease-out-back": am,
            easeInOutBack: at,
            "ease-in-out-back": at,
            easeInElastic: Y,
            "ease-in-elastic": Y,
            easeOutElastic: V,
            "ease-out-elastic": V,
            easeInOutElastic: aj,
            "ease-in-out-elastic": aj,
            easeInBounce: ap,
            "ease-in-bounce": ap,
            easeOutBounce: S,
            "ease-out-bounce": S,
            easeInOutBounce: Q,
            "ease-in-out-bounce": Q
        }
    }, {
        "../createBezier": 155
    }],
    161: [function(d, g, f) {
        g.exports = {
            decimalToHex: d("./ac-color/decimalToHex"),
            hexToDecimal: d("./ac-color/hexToDecimal"),
            hexToRgb: d("./ac-color/hexToRgb"),
            isColor: d("./ac-color/isColor"),
            isHex: d("./ac-color/isHex"),
            isRgb: d("./ac-color/isRgb"),
            mixColors: d("./ac-color/mixColors"),
            rgbToArray: d("./ac-color/rgbToArray"),
            rgbToDecimal: d("./ac-color/rgbToDecimal"),
            rgbToHex: d("./ac-color/rgbToHex"),
            rgbToObject: d("./ac-color/rgbToObject"),
            shortToLongHex: d("./ac-color/shortToLongHex")
        }
    }, {
        "./ac-color/decimalToHex": 162,
        "./ac-color/hexToDecimal": 163,
        "./ac-color/hexToRgb": 164,
        "./ac-color/isColor": 165,
        "./ac-color/isHex": 166,
        "./ac-color/isRgb": 167,
        "./ac-color/mixColors": 168,
        "./ac-color/rgbToArray": 169,
        "./ac-color/rgbToDecimal": 170,
        "./ac-color/rgbToHex": 171,
        "./ac-color/rgbToObject": 172,
        "./ac-color/shortToLongHex": 173
    }],
    162: [function(i, h, f) {
        h.exports = function g(a) {
            return "#" + (a).toString(16)
        }
    }, {}],
    163: [function(i, h, g) {
        h.exports = function f(a) {
            return parseInt(a.substr(1), 16)
        }
    }, {}],
    164: [function(j, i, k) {
        var h = j("./shortToLongHex");
        i.exports = function g(a) {
            a = h(a);
            var b = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(a);
            return b ? "rgb(" + parseInt(b[1], 16) + ", " + parseInt(b[2], 16) + ", " + parseInt(b[3], 16) + ")" : null
        }
    }, {
        "./shortToLongHex": 173
    }],
    165: [function(m, k, h) {
        var j = m("./isRgb");
        var i = m("./isHex");
        k.exports = function l(a) {
            return j(a) || i(a)
        }
    }, {
        "./isHex": 166,
        "./isRgb": 167
    }],
    166: [function(i, h, f) {
        h.exports = function g(a) {
            var b = /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i;
            return b.test(a)
        }
    }, {}],
    167: [function(f, i, g) {
        i.exports = function h(a) {
            return typeof a === "string" && a.indexOf("rgb(") === 0
        }
    }, {}],
    168: [function(n, m, o) {
        var i = n("./isHex");
        var j = n("./hexToRgb");
        var k = n("./rgbToObject");
        m.exports = function l(g, a, b) {
            g = i(g) ? j(g) : g;
            a = i(a) ? j(a) : a;
            g = k(g);
            a = k(a);
            var c = g.r + ((a.r - g.r) * b);
            var d = g.g + ((a.g - g.g) * b);
            var f = g.b + ((a.b - g.b) * b);
            return "rgb(" + c + ", " + d + ", " + f + ")"
        }
    }, {
        "./hexToRgb": 164,
        "./isHex": 166,
        "./rgbToObject": 172
    }],
    169: [function(g, k, h) {
        var j = g("./rgbToObject");
        k.exports = function i(b) {
            var a = j(b);
            return [a.r, a.g, a.b]
        }
    }, {
        "./rgbToObject": 172
    }],
    170: [function(n, m, i) {
        var o = n("./hexToDecimal");
        var k = n("./rgbToArray");
        var l = n("./rgbToHex");
        m.exports = function j(b) {
            var a = l.apply(this, k(b));
            return o(a)
        }
    }, {
        "./hexToDecimal": 163,
        "./rgbToArray": 169,
        "./rgbToHex": 171
    }],
    171: [function(f, i, g) {
        i.exports = function h(a, b, c) {
            return "#" + ((1 << 24) + (a << 16) + (b << 8) + c).toString(16).slice(1)
        }
    }, {}],
    172: [function(f, i, g) {
        i.exports = function h(b) {
            var a = /rgb\((\d{1,3}), (\d{1,3}), (\d{1,3})\)/;
            var c = a.exec(b);
            return {
                r: Number(c[1]),
                g: Number(c[2]),
                b: Number(c[3])
            }
        }
    }, {}],
    173: [function(i, h, f) {
        h.exports = function g(a) {
            var b = /^#?([a-f\d])([a-f\d])([a-f\d])$/i;
            a = a.replace(b, function(l, c, d, m) {
                return "#" + c + c + d + d + m + m
            });
            return a
        }
    }, {}],
    174: [function(d, g, f) {
        arguments[4][20][0].apply(f, arguments)
    }, {
        "./ac-event-emitter/EventEmitter": 175,
        dup: 20
    }],
    175: [function(d, g, f) {
        arguments[4][21][0].apply(f, arguments)
    }, {
        dup: 21
    }],
    176: [function(d, g, f) {
        (function() {
            var a = {};
            if (typeof(f) === "undefined") {
                if (typeof define == "function" && typeof define.amd == "object" && define.amd) {
                    a.exports = {};
                    define(function() {
                        return a.exports
                    })
                } else {
                    a.exports = window
                }
            } else {
                a.exports = f
            }(function(z) {
                if (!J) {
                    var J = 0.000001
                }
                if (!F) {
                    var F = (typeof Float32Array !== "undefined") ? Float32Array : Array
                }
                var E = {};
                E.setMatrixArrayType = function(h) {
                    F = h
                };
                if (typeof(z) !== "undefined") {
                    z.glMatrix = E
                }
                var c = {};
                c.create = function() {
                    var h = new F(2);
                    h[0] = 0;
                    h[1] = 0;
                    return h
                };
                c.clone = function(h) {
                    var i = new F(2);
                    i[0] = h[0];
                    i[1] = h[1];
                    return i
                };
                c.fromValues = function(i, j) {
                    var h = new F(2);
                    h[0] = i;
                    h[1] = j;
                    return h
                };
                c.copy = function(i, h) {
                    i[0] = h[0];
                    i[1] = h[1];
                    return i
                };
                c.set = function(h, i, j) {
                    h[0] = i;
                    h[1] = j;
                    return h
                };
                c.add = function(i, j, h) {
                    i[0] = j[0] + h[0];
                    i[1] = j[1] + h[1];
                    return i
                };
                c.subtract = function(i, j, h) {
                    i[0] = j[0] - h[0];
                    i[1] = j[1] - h[1];
                    return i
                };
                c.sub = c.subtract;
                c.multiply = function(i, j, h) {
                    i[0] = j[0] * h[0];
                    i[1] = j[1] * h[1];
                    return i
                };
                c.mul = c.multiply;
                c.divide = function(i, j, h) {
                    i[0] = j[0] / h[0];
                    i[1] = j[1] / h[1];
                    return i
                };
                c.div = c.divide;
                c.min = function(i, j, h) {
                    i[0] = Math.min(j[0], h[0]);
                    i[1] = Math.min(j[1], h[1]);
                    return i
                };
                c.max = function(i, j, h) {
                    i[0] = Math.max(j[0], h[0]);
                    i[1] = Math.max(j[1], h[1]);
                    return i
                };
                c.scale = function(i, j, h) {
                    i[0] = j[0] * h;
                    i[1] = j[1] * h;
                    return i
                };
                c.distance = function(k, h) {
                    var j = h[0] - k[0],
                        i = h[1] - k[1];
                    return Math.sqrt(j * j + i * i)
                };
                c.dist = c.distance;
                c.squaredDistance = function(k, h) {
                    var j = h[0] - k[0],
                        i = h[1] - k[1];
                    return j * j + i * i
                };
                c.sqrDist = c.squaredDistance;
                c.length = function(h) {
                    var i = h[0],
                        j = h[1];
                    return Math.sqrt(i * i + j * j)
                };
                c.len = c.length;
                c.squaredLength = function(h) {
                    var i = h[0],
                        j = h[1];
                    return i * i + j * j
                };
                c.sqrLen = c.squaredLength;
                c.negate = function(i, h) {
                    i[0] = -h[0];
                    i[1] = -h[1];
                    return i
                };
                c.normalize = function(k, l) {
                    var h = l[0],
                        i = l[1];
                    var j = h * h + i * i;
                    if (j > 0) {
                        j = 1 / Math.sqrt(j);
                        k[0] = l[0] * j;
                        k[1] = l[1] * j
                    }
                    return k
                };
                c.dot = function(i, h) {
                    return i[0] * h[0] + i[1] * h[1]
                };
                c.cross = function(i, k, h) {
                    var j = k[0] * h[1] - k[1] * h[0];
                    i[0] = i[1] = 0;
                    i[2] = j;
                    return i
                };
                c.lerp = function(k, m, i, h) {
                    var j = m[0],
                        l = m[1];
                    k[0] = j + h * (i[0] - j);
                    k[1] = l + h * (i[1] - l);
                    return k
                };
                c.transformMat2 = function(k, l, h) {
                    var j = l[0],
                        i = l[1];
                    k[0] = h[0] * j + h[2] * i;
                    k[1] = h[1] * j + h[3] * i;
                    return k
                };
                c.transformMat2d = function(k, l, h) {
                    var j = l[0],
                        i = l[1];
                    k[0] = h[0] * j + h[2] * i + h[4];
                    k[1] = h[1] * j + h[3] * i + h[5];
                    return k
                };
                c.transformMat3 = function(k, l, h) {
                    var j = l[0],
                        i = l[1];
                    k[0] = h[0] * j + h[3] * i + h[6];
                    k[1] = h[1] * j + h[4] * i + h[7];
                    return k
                };
                c.transformMat4 = function(k, l, h) {
                    var j = l[0],
                        i = l[1];
                    k[0] = h[0] * j + h[4] * i + h[12];
                    k[1] = h[1] * j + h[5] * i + h[13];
                    return k
                };
                c.forEach = (function() {
                    var h = c.create();
                    return function(i, k, j, l, n, p) {
                        var o, m;
                        if (!k) {
                            k = 2
                        }
                        if (!j) {
                            j = 0
                        }
                        if (l) {
                            m = Math.min((l * k) + j, i.length)
                        } else {
                            m = i.length
                        }
                        for (o = j; o < m; o += k) {
                            h[0] = i[o];
                            h[1] = i[o + 1];
                            n(h, h, p);
                            i[o] = h[0];
                            i[o + 1] = h[1]
                        }
                        return i
                    }
                })();
                c.str = function(h) {
                    return "vec2(" + h[0] + ", " + h[1] + ")"
                };
                if (typeof(z) !== "undefined") {
                    z.vec2 = c
                }
                var x = {};
                x.create = function() {
                    var h = new F(3);
                    h[0] = 0;
                    h[1] = 0;
                    h[2] = 0;
                    return h
                };
                x.clone = function(h) {
                    var i = new F(3);
                    i[0] = h[0];
                    i[1] = h[1];
                    i[2] = h[2];
                    return i
                };
                x.fromValues = function(h, i, j) {
                    var k = new F(3);
                    k[0] = h;
                    k[1] = i;
                    k[2] = j;
                    return k
                };
                x.copy = function(i, h) {
                    i[0] = h[0];
                    i[1] = h[1];
                    i[2] = h[2];
                    return i
                };
                x.set = function(k, h, i, j) {
                    k[0] = h;
                    k[1] = i;
                    k[2] = j;
                    return k
                };
                x.add = function(i, j, h) {
                    i[0] = j[0] + h[0];
                    i[1] = j[1] + h[1];
                    i[2] = j[2] + h[2];
                    return i
                };
                x.subtract = function(i, j, h) {
                    i[0] = j[0] - h[0];
                    i[1] = j[1] - h[1];
                    i[2] = j[2] - h[2];
                    return i
                };
                x.sub = x.subtract;
                x.multiply = function(i, j, h) {
                    i[0] = j[0] * h[0];
                    i[1] = j[1] * h[1];
                    i[2] = j[2] * h[2];
                    return i
                };
                x.mul = x.multiply;
                x.divide = function(i, j, h) {
                    i[0] = j[0] / h[0];
                    i[1] = j[1] / h[1];
                    i[2] = j[2] / h[2];
                    return i
                };
                x.div = x.divide;
                x.min = function(i, j, h) {
                    i[0] = Math.min(j[0], h[0]);
                    i[1] = Math.min(j[1], h[1]);
                    i[2] = Math.min(j[2], h[2]);
                    return i
                };
                x.max = function(i, j, h) {
                    i[0] = Math.max(j[0], h[0]);
                    i[1] = Math.max(j[1], h[1]);
                    i[2] = Math.max(j[2], h[2]);
                    return i
                };
                x.scale = function(i, j, h) {
                    i[0] = j[0] * h;
                    i[1] = j[1] * h;
                    i[2] = j[2] * h;
                    return i
                };
                x.distance = function(k, l) {
                    var h = l[0] - k[0],
                        i = l[1] - k[1],
                        j = l[2] - k[2];
                    return Math.sqrt(h * h + i * i + j * j)
                };
                x.dist = x.distance;
                x.squaredDistance = function(k, l) {
                    var h = l[0] - k[0],
                        i = l[1] - k[1],
                        j = l[2] - k[2];
                    return h * h + i * i + j * j
                };
                x.sqrDist = x.squaredDistance;
                x.length = function(k) {
                    var h = k[0],
                        i = k[1],
                        j = k[2];
                    return Math.sqrt(h * h + i * i + j * j)
                };
                x.len = x.length;
                x.squaredLength = function(k) {
                    var h = k[0],
                        i = k[1],
                        j = k[2];
                    return h * h + i * i + j * j
                };
                x.sqrLen = x.squaredLength;
                x.negate = function(i, h) {
                    i[0] = -h[0];
                    i[1] = -h[1];
                    i[2] = -h[2];
                    return i
                };
                x.normalize = function(k, l) {
                    var m = l[0],
                        i = l[1],
                        j = l[2];
                    var h = m * m + i * i + j * j;
                    if (h > 0) {
                        h = 1 / Math.sqrt(h);
                        k[0] = l[0] * h;
                        k[1] = l[1] * h;
                        k[2] = l[2] * h
                    }
                    return k
                };
                x.dot = function(i, h) {
                    return i[0] * h[0] + i[1] * h[1] + i[2] * h[2]
                };
                x.cross = function(m, h, i) {
                    var n = h[0],
                        o = h[1],
                        p = h[2],
                        j = i[0],
                        k = i[1],
                        l = i[2];
                    m[0] = o * l - p * k;
                    m[1] = p * j - n * l;
                    m[2] = n * k - o * j;
                    return m
                };
                x.lerp = function(l, n, i, h) {
                    var j = n[0],
                        k = n[1],
                        m = n[2];
                    l[0] = j + h * (i[0] - j);
                    l[1] = k + h * (i[1] - k);
                    l[2] = m + h * (i[2] - m);
                    return l
                };
                x.transformMat4 = function(k, l, m) {
                    var h = l[0],
                        i = l[1],
                        j = l[2];
                    k[0] = m[0] * h + m[4] * i + m[8] * j + m[12];
                    k[1] = m[1] * h + m[5] * i + m[9] * j + m[13];
                    k[2] = m[2] * h + m[6] * i + m[10] * j + m[14];
                    return k
                };
                x.transformQuat = function(t, m, k) {
                    var l = m[0],
                        n = m[1],
                        o = m[2],
                        q = k[0],
                        r = k[1],
                        u = k[2],
                        p = k[3],
                        h = p * l + r * o - u * n,
                        i = p * n + u * l - q * o,
                        j = p * o + q * n - r * l,
                        v = -q * l - r * n - u * o;
                    t[0] = h * p + v * -q + i * -u - j * -r;
                    t[1] = i * p + v * -r + j * -q - h * -u;
                    t[2] = j * p + v * -u + h * -r - i * -q;
                    return t
                };
                x.forEach = (function() {
                    var h = x.create();
                    return function(i, k, j, l, n, p) {
                        var o, m;
                        if (!k) {
                            k = 3
                        }
                        if (!j) {
                            j = 0
                        }
                        if (l) {
                            m = Math.min((l * k) + j, i.length)
                        } else {
                            m = i.length
                        }
                        for (o = j; o < m; o += k) {
                            h[0] = i[o];
                            h[1] = i[o + 1];
                            h[2] = i[o + 2];
                            n(h, h, p);
                            i[o] = h[0];
                            i[o + 1] = h[1];
                            i[o + 2] = h[2]
                        }
                        return i
                    }
                })();
                x.str = function(h) {
                    return "vec3(" + h[0] + ", " + h[1] + ", " + h[2] + ")"
                };
                if (typeof(z) !== "undefined") {
                    z.vec3 = x
                }
                var y = {};
                y.create = function() {
                    var h = new F(4);
                    h[0] = 0;
                    h[1] = 0;
                    h[2] = 0;
                    h[3] = 0;
                    return h
                };
                y.clone = function(h) {
                    var i = new F(4);
                    i[0] = h[0];
                    i[1] = h[1];
                    i[2] = h[2];
                    i[3] = h[3];
                    return i
                };
                y.fromValues = function(h, i, j, l) {
                    var k = new F(4);
                    k[0] = h;
                    k[1] = i;
                    k[2] = j;
                    k[3] = l;
                    return k
                };
                y.copy = function(i, h) {
                    i[0] = h[0];
                    i[1] = h[1];
                    i[2] = h[2];
                    i[3] = h[3];
                    return i
                };
                y.set = function(k, h, i, j, l) {
                    k[0] = h;
                    k[1] = i;
                    k[2] = j;
                    k[3] = l;
                    return k
                };
                y.add = function(i, j, h) {
                    i[0] = j[0] + h[0];
                    i[1] = j[1] + h[1];
                    i[2] = j[2] + h[2];
                    i[3] = j[3] + h[3];
                    return i
                };
                y.subtract = function(i, j, h) {
                    i[0] = j[0] - h[0];
                    i[1] = j[1] - h[1];
                    i[2] = j[2] - h[2];
                    i[3] = j[3] - h[3];
                    return i
                };
                y.sub = y.subtract;
                y.multiply = function(i, j, h) {
                    i[0] = j[0] * h[0];
                    i[1] = j[1] * h[1];
                    i[2] = j[2] * h[2];
                    i[3] = j[3] * h[3];
                    return i
                };
                y.mul = y.multiply;
                y.divide = function(i, j, h) {
                    i[0] = j[0] / h[0];
                    i[1] = j[1] / h[1];
                    i[2] = j[2] / h[2];
                    i[3] = j[3] / h[3];
                    return i
                };
                y.div = y.divide;
                y.min = function(i, j, h) {
                    i[0] = Math.min(j[0], h[0]);
                    i[1] = Math.min(j[1], h[1]);
                    i[2] = Math.min(j[2], h[2]);
                    i[3] = Math.min(j[3], h[3]);
                    return i
                };
                y.max = function(i, j, h) {
                    i[0] = Math.max(j[0], h[0]);
                    i[1] = Math.max(j[1], h[1]);
                    i[2] = Math.max(j[2], h[2]);
                    i[3] = Math.max(j[3], h[3]);
                    return i
                };
                y.scale = function(i, j, h) {
                    i[0] = j[0] * h;
                    i[1] = j[1] * h;
                    i[2] = j[2] * h;
                    i[3] = j[3] * h;
                    return i
                };
                y.distance = function(k, m) {
                    var h = m[0] - k[0],
                        i = m[1] - k[1],
                        j = m[2] - k[2],
                        l = m[3] - k[3];
                    return Math.sqrt(h * h + i * i + j * j + l * l)
                };
                y.dist = y.distance;
                y.squaredDistance = function(k, m) {
                    var h = m[0] - k[0],
                        i = m[1] - k[1],
                        j = m[2] - k[2],
                        l = m[3] - k[3];
                    return h * h + i * i + j * j + l * l
                };
                y.sqrDist = y.squaredDistance;
                y.length = function(k) {
                    var h = k[0],
                        i = k[1],
                        j = k[2],
                        l = k[3];
                    return Math.sqrt(h * h + i * i + j * j + l * l)
                };
                y.len = y.length;
                y.squaredLength = function(k) {
                    var h = k[0],
                        i = k[1],
                        j = k[2],
                        l = k[3];
                    return h * h + i * i + j * j + l * l
                };
                y.sqrLen = y.squaredLength;
                y.negate = function(i, h) {
                    i[0] = -h[0];
                    i[1] = -h[1];
                    i[2] = -h[2];
                    i[3] = -h[3];
                    return i
                };
                y.normalize = function(k, l) {
                    var n = l[0],
                        i = l[1],
                        j = l[2],
                        m = l[3];
                    var h = n * n + i * i + j * j + m * m;
                    if (h > 0) {
                        h = 1 / Math.sqrt(h);
                        k[0] = l[0] * h;
                        k[1] = l[1] * h;
                        k[2] = l[2] * h;
                        k[3] = l[3] * h
                    }
                    return k
                };
                y.dot = function(i, h) {
                    return i[0] * h[0] + i[1] * h[1] + i[2] * h[2] + i[3] * h[3]
                };
                y.lerp = function(m, o, i, h) {
                    var k = o[0],
                        l = o[1],
                        n = o[2],
                        j = o[3];
                    m[0] = k + h * (i[0] - k);
                    m[1] = l + h * (i[1] - l);
                    m[2] = n + h * (i[2] - n);
                    m[3] = j + h * (i[3] - j);
                    return m
                };
                y.transformMat4 = function(k, l, n) {
                    var h = l[0],
                        i = l[1],
                        j = l[2],
                        m = l[3];
                    k[0] = n[0] * h + n[4] * i + n[8] * j + n[12] * m;
                    k[1] = n[1] * h + n[5] * i + n[9] * j + n[13] * m;
                    k[2] = n[2] * h + n[6] * i + n[10] * j + n[14] * m;
                    k[3] = n[3] * h + n[7] * i + n[11] * j + n[15] * m;
                    return k
                };
                y.transformQuat = function(t, m, k) {
                    var l = m[0],
                        n = m[1],
                        o = m[2],
                        q = k[0],
                        r = k[1],
                        u = k[2],
                        p = k[3],
                        h = p * l + r * o - u * n,
                        i = p * n + u * l - q * o,
                        j = p * o + q * n - r * l,
                        v = -q * l - r * n - u * o;
                    t[0] = h * p + v * -q + i * -u - j * -r;
                    t[1] = i * p + v * -r + j * -q - h * -u;
                    t[2] = j * p + v * -u + h * -r - i * -q;
                    return t
                };
                y.forEach = (function() {
                    var h = y.create();
                    return function(i, k, j, l, n, p) {
                        var o, m;
                        if (!k) {
                            k = 4
                        }
                        if (!j) {
                            j = 0
                        }
                        if (l) {
                            m = Math.min((l * k) + j, i.length)
                        } else {
                            m = i.length
                        }
                        for (o = j; o < m; o += k) {
                            h[0] = i[o];
                            h[1] = i[o + 1];
                            h[2] = i[o + 2];
                            h[3] = i[o + 3];
                            n(h, h, p);
                            i[o] = h[0];
                            i[o + 1] = h[1];
                            i[o + 2] = h[2];
                            i[o + 3] = h[3]
                        }
                        return i
                    }
                })();
                y.str = function(h) {
                    return "vec4(" + h[0] + ", " + h[1] + ", " + h[2] + ", " + h[3] + ")"
                };
                if (typeof(z) !== "undefined") {
                    z.vec4 = y
                }
                var D = {};
                var K = new Float32Array([1, 0, 0, 1]);
                D.create = function() {
                    var h = new F(4);
                    h[0] = 1;
                    h[1] = 0;
                    h[2] = 0;
                    h[3] = 1;
                    return h
                };
                D.clone = function(h) {
                    var i = new F(4);
                    i[0] = h[0];
                    i[1] = h[1];
                    i[2] = h[2];
                    i[3] = h[3];
                    return i
                };
                D.copy = function(i, h) {
                    i[0] = h[0];
                    i[1] = h[1];
                    i[2] = h[2];
                    i[3] = h[3];
                    return i
                };
                D.identity = function(h) {
                    h[0] = 1;
                    h[1] = 0;
                    h[2] = 0;
                    h[3] = 1;
                    return h
                };
                D.transpose = function(i, j) {
                    if (i === j) {
                        var h = j[1];
                        i[1] = j[2];
                        i[2] = h
                    } else {
                        i[0] = j[0];
                        i[1] = j[2];
                        i[2] = j[1];
                        i[3] = j[3]
                    }
                    return i
                };
                D.invert = function(n, l) {
                    var i = l[0],
                        m = l[1],
                        h = l[2],
                        j = l[3],
                        k = i * j - h * m;
                    if (!k) {
                        return null
                    }
                    k = 1 / k;
                    n[0] = j * k;
                    n[1] = -m * k;
                    n[2] = -h * k;
                    n[3] = i * k;
                    return n
                };
                D.adjoint = function(i, h) {
                    var j = h[0];
                    i[0] = h[3];
                    i[1] = -h[1];
                    i[2] = -h[2];
                    i[3] = j;
                    return i
                };
                D.determinant = function(h) {
                    return h[0] * h[3] - h[2] * h[1]
                };
                D.multiply = function(j, p, r) {
                    var k = p[0],
                        l = p[1],
                        m = p[2],
                        n = p[3];
                    var o = r[0],
                        q = r[1],
                        h = r[2],
                        i = r[3];
                    j[0] = k * o + l * h;
                    j[1] = k * q + l * i;
                    j[2] = m * o + n * h;
                    j[3] = m * q + n * i;
                    return j
                };
                D.mul = D.multiply;
                D.rotate = function(j, p, h) {
                    var k = p[0],
                        l = p[1],
                        m = p[2],
                        n = p[3],
                        o = Math.sin(h),
                        i = Math.cos(h);
                    j[0] = k * i + l * o;
                    j[1] = k * -o + l * i;
                    j[2] = m * i + n * o;
                    j[3] = m * -o + n * i;
                    return j
                };
                D.scale = function(j, i, p) {
                    var k = i[0],
                        l = i[1],
                        m = i[2],
                        n = i[3],
                        o = p[0],
                        h = p[1];
                    j[0] = k * o;
                    j[1] = l * h;
                    j[2] = m * o;
                    j[3] = n * h;
                    return j
                };
                D.str = function(h) {
                    return "mat2(" + h[0] + ", " + h[1] + ", " + h[2] + ", " + h[3] + ")"
                };
                if (typeof(z) !== "undefined") {
                    z.mat2 = D
                }
                var L = {};
                var B = new Float32Array([1, 0, 0, 1, 0, 0]);
                L.create = function() {
                    var h = new F(6);
                    h[0] = 1;
                    h[1] = 0;
                    h[2] = 0;
                    h[3] = 1;
                    h[4] = 0;
                    h[5] = 0;
                    return h
                };
                L.clone = function(h) {
                    var i = new F(6);
                    i[0] = h[0];
                    i[1] = h[1];
                    i[2] = h[2];
                    i[3] = h[3];
                    i[4] = h[4];
                    i[5] = h[5];
                    return i
                };
                L.copy = function(i, h) {
                    i[0] = h[0];
                    i[1] = h[1];
                    i[2] = h[2];
                    i[3] = h[3];
                    i[4] = h[4];
                    i[5] = h[5];
                    return i
                };
                L.identity = function(h) {
                    h[0] = 1;
                    h[1] = 0;
                    h[2] = 0;
                    h[3] = 1;
                    h[4] = 0;
                    h[5] = 0;
                    return h
                };
                L.invert = function(m, i) {
                    var n = i[0],
                        o = i[1],
                        p = i[2],
                        h = i[3],
                        k = i[4],
                        l = i[5];
                    var j = n * h - o * p;
                    if (!j) {
                        return null
                    }
                    j = 1 / j;
                    m[0] = h * j;
                    m[1] = -o * j;
                    m[2] = -p * j;
                    m[3] = n * j;
                    m[4] = (p * l - h * k) * j;
                    m[5] = (o * k - n * l) * j;
                    return m
                };
                L.determinant = function(h) {
                    return h[0] * h[3] - h[1] * h[2]
                };
                L.multiply = function(n, r, t) {
                    var q = r[0],
                        m = r[1],
                        o = r[2],
                        p = r[3],
                        k = r[4],
                        l = r[5],
                        v = t[0],
                        h = t[1],
                        i = t[2],
                        j = t[3],
                        u = t[4],
                        w = t[5];
                    n[0] = q * v + m * i;
                    n[1] = q * h + m * j;
                    n[2] = o * v + p * i;
                    n[3] = o * h + p * j;
                    n[4] = v * k + i * l + u;
                    n[5] = h * k + j * l + w;
                    return n
                };
                L.mul = L.multiply;
                L.rotate = function(m, h, i) {
                    var n = h[0],
                        o = h[1],
                        p = h[2],
                        r = h[3],
                        j = h[4],
                        l = h[5],
                        q = Math.sin(i),
                        k = Math.cos(i);
                    m[0] = n * k + o * q;
                    m[1] = -n * q + o * k;
                    m[2] = p * k + r * q;
                    m[3] = -p * q + k * r;
                    m[4] = k * j + q * l;
                    m[5] = k * l - q * j;
                    return m
                };
                L.scale = function(j, i, l) {
                    var k = l[0],
                        h = l[1];
                    j[0] = i[0] * k;
                    j[1] = i[1] * h;
                    j[2] = i[2] * k;
                    j[3] = i[3] * h;
                    j[4] = i[4] * k;
                    j[5] = i[5] * h;
                    return j
                };
                L.translate = function(i, h, j) {
                    i[0] = h[0];
                    i[1] = h[1];
                    i[2] = h[2];
                    i[3] = h[3];
                    i[4] = h[4] + j[0];
                    i[5] = h[5] + j[1];
                    return i
                };
                L.str = function(h) {
                    return "mat2d(" + h[0] + ", " + h[1] + ", " + h[2] + ", " + h[3] + ", " + h[4] + ", " + h[5] + ")"
                };
                if (typeof(z) !== "undefined") {
                    z.mat2d = L
                }
                var G = {};
                var A = new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);
                G.create = function() {
                    var h = new F(9);
                    h[0] = 1;
                    h[1] = 0;
                    h[2] = 0;
                    h[3] = 0;
                    h[4] = 1;
                    h[5] = 0;
                    h[6] = 0;
                    h[7] = 0;
                    h[8] = 1;
                    return h
                };
                G.clone = function(h) {
                    var i = new F(9);
                    i[0] = h[0];
                    i[1] = h[1];
                    i[2] = h[2];
                    i[3] = h[3];
                    i[4] = h[4];
                    i[5] = h[5];
                    i[6] = h[6];
                    i[7] = h[7];
                    i[8] = h[8];
                    return i
                };
                G.copy = function(i, h) {
                    i[0] = h[0];
                    i[1] = h[1];
                    i[2] = h[2];
                    i[3] = h[3];
                    i[4] = h[4];
                    i[5] = h[5];
                    i[6] = h[6];
                    i[7] = h[7];
                    i[8] = h[8];
                    return i
                };
                G.identity = function(h) {
                    h[0] = 1;
                    h[1] = 0;
                    h[2] = 0;
                    h[3] = 0;
                    h[4] = 1;
                    h[5] = 0;
                    h[6] = 0;
                    h[7] = 0;
                    h[8] = 1;
                    return h
                };
                G.transpose = function(j, l) {
                    if (j === l) {
                        var k = l[1],
                            i = l[2],
                            h = l[5];
                        j[1] = l[3];
                        j[2] = l[6];
                        j[3] = k;
                        j[5] = l[7];
                        j[6] = i;
                        j[7] = h
                    } else {
                        j[0] = l[0];
                        j[1] = l[3];
                        j[2] = l[6];
                        j[3] = l[1];
                        j[4] = l[4];
                        j[5] = l[7];
                        j[6] = l[2];
                        j[7] = l[5];
                        j[8] = l[8]
                    }
                    return j
                };
                G.invert = function(j, r) {
                    var k = r[0],
                        l = r[1],
                        n = r[2],
                        m = r[3],
                        o = r[4],
                        q = r[5],
                        u = r[6],
                        v = r[7],
                        h = r[8],
                        i = h * o - q * v,
                        p = -h * m + q * u,
                        t = v * m - o * u,
                        w = k * i + l * p + n * t;
                    if (!w) {
                        return null
                    }
                    w = 1 / w;
                    j[0] = i * w;
                    j[1] = (-h * l + n * v) * w;
                    j[2] = (q * l - n * o) * w;
                    j[3] = p * w;
                    j[4] = (h * k - n * u) * w;
                    j[5] = (-q * k + n * m) * w;
                    j[6] = t * w;
                    j[7] = (-v * k + l * u) * w;
                    j[8] = (o * k - l * m) * w;
                    return j
                };
                G.adjoint = function(k, r) {
                    var l = r[0],
                        m = r[1],
                        n = r[2],
                        o = r[3],
                        p = r[4],
                        q = r[5],
                        h = r[6],
                        i = r[7],
                        j = r[8];
                    k[0] = (p * j - q * i);
                    k[1] = (n * i - m * j);
                    k[2] = (m * q - n * p);
                    k[3] = (q * h - o * j);
                    k[4] = (l * j - n * h);
                    k[5] = (n * o - l * q);
                    k[6] = (o * i - p * h);
                    k[7] = (m * h - l * i);
                    k[8] = (l * p - m * o);
                    return k
                };
                G.determinant = function(h) {
                    var l = h[0],
                        m = h[1],
                        n = h[2],
                        o = h[3],
                        p = h[4],
                        q = h[5],
                        i = h[6],
                        j = h[7],
                        k = h[8];
                    return l * (k * p - q * j) + m * (-k * o + q * i) + n * (j * o - p * i)
                };
                G.multiply = function(r, k, l) {
                    var h = k[0],
                        i = k[1],
                        j = k[2],
                        V = k[3],
                        W = k[4],
                        X = k[5],
                        u = k[6],
                        v = k[7],
                        w = k[8],
                        S = l[0],
                        T = l[1],
                        U = l[2],
                        m = l[3],
                        n = l[4],
                        p = l[5],
                        o = l[6],
                        q = l[7],
                        t = l[8];
                    r[0] = S * h + T * V + U * u;
                    r[1] = S * i + T * W + U * v;
                    r[2] = S * j + T * X + U * w;
                    r[3] = m * h + n * V + p * u;
                    r[4] = m * i + n * W + p * v;
                    r[5] = m * j + n * X + p * w;
                    r[6] = o * h + q * V + t * u;
                    r[7] = o * i + q * W + t * v;
                    r[8] = o * j + q * X + t * w;
                    return r
                };
                G.mul = G.multiply;
                G.translate = function(i, q, o) {
                    var j = q[0],
                        k = q[1],
                        m = q[2],
                        l = q[3],
                        n = q[4],
                        p = q[5],
                        u = q[6],
                        v = q[7],
                        h = q[8],
                        r = o[0],
                        t = o[1];
                    i[0] = j;
                    i[1] = k;
                    i[2] = m;
                    i[3] = l;
                    i[4] = n;
                    i[5] = p;
                    i[6] = r * j + t * l + u;
                    i[7] = r * k + t * n + v;
                    i[8] = r * m + t * p + h;
                    return i
                };
                G.rotate = function(k, t, u) {
                    var l = t[0],
                        n = t[1],
                        p = t[2],
                        o = t[3],
                        q = t[4],
                        r = t[5],
                        h = t[6],
                        i = t[7],
                        j = t[8],
                        m = Math.sin(u),
                        v = Math.cos(u);
                    k[0] = v * l + m * o;
                    k[1] = v * n + m * q;
                    k[2] = v * p + m * r;
                    k[3] = v * o - m * l;
                    k[4] = v * q - m * n;
                    k[5] = v * r - m * p;
                    k[6] = h;
                    k[7] = i;
                    k[8] = j;
                    return k
                };
                G.scale = function(k, h, l) {
                    var j = l[0],
                        i = l[2];
                    k[0] = j * h[0];
                    k[1] = j * h[1];
                    k[2] = j * h[2];
                    k[3] = i * h[3];
                    k[4] = i * h[4];
                    k[5] = i * h[5];
                    k[6] = h[6];
                    k[7] = h[7];
                    k[8] = h[8];
                    return k
                };
                G.fromMat2d = function(i, h) {
                    i[0] = h[0];
                    i[1] = h[1];
                    i[2] = 0;
                    i[3] = h[2];
                    i[4] = h[3];
                    i[5] = 0;
                    i[6] = h[4];
                    i[7] = h[5];
                    i[8] = 1;
                    return i
                };
                G.fromQuat = function(m, o) {
                    var t = o[0],
                        u = o[1],
                        v = o[2],
                        r = o[3],
                        l = t + t,
                        U = u + u,
                        q = v + v,
                        w = t * l,
                        S = t * U,
                        T = t * q,
                        n = u * U,
                        p = u * q,
                        i = v * q,
                        h = r * l,
                        j = r * U,
                        k = r * q;
                    m[0] = 1 - (n + i);
                    m[1] = S + k;
                    m[2] = T - j;
                    m[3] = S - k;
                    m[4] = 1 - (w + i);
                    m[5] = p + h;
                    m[6] = T + j;
                    m[7] = p - h;
                    m[8] = 1 - (w + n);
                    return m
                };
                G.str = function(h) {
                    return "mat3(" + h[0] + ", " + h[1] + ", " + h[2] + ", " + h[3] + ", " + h[4] + ", " + h[5] + ", " + h[6] + ", " + h[7] + ", " + h[8] + ")"
                };
                if (typeof(z) !== "undefined") {
                    z.mat3 = G
                }
                var H = {};
                var b = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);
                H.create = function() {
                    var h = new F(16);
                    h[0] = 1;
                    h[1] = 0;
                    h[2] = 0;
                    h[3] = 0;
                    h[4] = 0;
                    h[5] = 1;
                    h[6] = 0;
                    h[7] = 0;
                    h[8] = 0;
                    h[9] = 0;
                    h[10] = 1;
                    h[11] = 0;
                    h[12] = 0;
                    h[13] = 0;
                    h[14] = 0;
                    h[15] = 1;
                    return h
                };
                H.clone = function(h) {
                    var i = new F(16);
                    i[0] = h[0];
                    i[1] = h[1];
                    i[2] = h[2];
                    i[3] = h[3];
                    i[4] = h[4];
                    i[5] = h[5];
                    i[6] = h[6];
                    i[7] = h[7];
                    i[8] = h[8];
                    i[9] = h[9];
                    i[10] = h[10];
                    i[11] = h[11];
                    i[12] = h[12];
                    i[13] = h[13];
                    i[14] = h[14];
                    i[15] = h[15];
                    return i
                };
                H.copy = function(i, h) {
                    i[0] = h[0];
                    i[1] = h[1];
                    i[2] = h[2];
                    i[3] = h[3];
                    i[4] = h[4];
                    i[5] = h[5];
                    i[6] = h[6];
                    i[7] = h[7];
                    i[8] = h[8];
                    i[9] = h[9];
                    i[10] = h[10];
                    i[11] = h[11];
                    i[12] = h[12];
                    i[13] = h[13];
                    i[14] = h[14];
                    i[15] = h[15];
                    return i
                };
                H.identity = function(h) {
                    h[0] = 1;
                    h[1] = 0;
                    h[2] = 0;
                    h[3] = 0;
                    h[4] = 0;
                    h[5] = 1;
                    h[6] = 0;
                    h[7] = 0;
                    h[8] = 0;
                    h[9] = 0;
                    h[10] = 1;
                    h[11] = 0;
                    h[12] = 0;
                    h[13] = 0;
                    h[14] = 0;
                    h[15] = 1;
                    return h
                };
                H.transpose = function(i, m) {
                    if (i === m) {
                        var j = m[1],
                            l = m[2],
                            o = m[3],
                            h = m[6],
                            k = m[7],
                            n = m[11];
                        i[1] = m[4];
                        i[2] = m[8];
                        i[3] = m[12];
                        i[4] = j;
                        i[6] = m[9];
                        i[7] = m[13];
                        i[8] = l;
                        i[9] = h;
                        i[11] = m[14];
                        i[12] = o;
                        i[13] = k;
                        i[14] = n
                    } else {
                        i[0] = m[0];
                        i[1] = m[4];
                        i[2] = m[8];
                        i[3] = m[12];
                        i[4] = m[1];
                        i[5] = m[5];
                        i[6] = m[9];
                        i[7] = m[13];
                        i[8] = m[2];
                        i[9] = m[6];
                        i[10] = m[10];
                        i[11] = m[14];
                        i[12] = m[3];
                        i[13] = m[7];
                        i[14] = m[11];
                        i[15] = m[15]
                    }
                    return i
                };
                H.invert = function(q, l) {
                    var h = l[0],
                        j = l[1],
                        k = l[2],
                        n = l[3],
                        ao = l[4],
                        ap = l[5],
                        ad = l[6],
                        af = l[7],
                        r = l[8],
                        t = l[9],
                        u = l[10],
                        v = l[11],
                        aq = l[12],
                        ar = l[13],
                        i = l[14],
                        m = l[15],
                        w = h * ap - j * ao,
                        ac = h * ad - k * ao,
                        ae = h * af - n * ao,
                        ah = j * ad - k * ap,
                        ai = j * af - n * ap,
                        aj = k * af - n * ad,
                        ak = r * ar - t * aq,
                        al = r * i - u * aq,
                        am = r * m - v * aq,
                        an = t * i - u * ar,
                        o = t * m - v * ar,
                        p = u * m - v * i,
                        ag = w * p - ac * o + ae * an + ah * am - ai * al + aj * ak;
                    if (!ag) {
                        return null
                    }
                    ag = 1 / ag;
                    q[0] = (ap * p - ad * o + af * an) * ag;
                    q[1] = (k * o - j * p - n * an) * ag;
                    q[2] = (ar * aj - i * ai + m * ah) * ag;
                    q[3] = (u * ai - t * aj - v * ah) * ag;
                    q[4] = (ad * am - ao * p - af * al) * ag;
                    q[5] = (h * p - k * am + n * al) * ag;
                    q[6] = (i * ae - aq * aj - m * ac) * ag;
                    q[7] = (r * aj - u * ae + v * ac) * ag;
                    q[8] = (ao * o - ap * am + af * ak) * ag;
                    q[9] = (j * am - h * o - n * ak) * ag;
                    q[10] = (aq * ai - ar * ae + m * w) * ag;
                    q[11] = (t * ae - r * ai - v * w) * ag;
                    q[12] = (ap * al - ao * an - ad * ak) * ag;
                    q[13] = (h * an - j * al + k * ak) * ag;
                    q[14] = (ar * ac - aq * ah - i * w) * ag;
                    q[15] = (r * ah - t * ac + u * w) * ag;
                    return q
                };
                H.adjoint = function(u, p) {
                    var j = p[0],
                        l = p[1],
                        n = p[2],
                        t = p[3],
                        R = p[4],
                        m = p[5],
                        o = p[6],
                        q = p[7],
                        v = p[8],
                        w = p[9],
                        P = p[10],
                        Q = p[11],
                        h = p[12],
                        i = p[13],
                        k = p[14],
                        r = p[15];
                    u[0] = (m * (P * r - Q * k) - w * (o * r - q * k) + i * (o * Q - q * P));
                    u[1] = -(l * (P * r - Q * k) - w * (n * r - t * k) + i * (n * Q - t * P));
                    u[2] = (l * (o * r - q * k) - m * (n * r - t * k) + i * (n * q - t * o));
                    u[3] = -(l * (o * Q - q * P) - m * (n * Q - t * P) + w * (n * q - t * o));
                    u[4] = -(R * (P * r - Q * k) - v * (o * r - q * k) + h * (o * Q - q * P));
                    u[5] = (j * (P * r - Q * k) - v * (n * r - t * k) + h * (n * Q - t * P));
                    u[6] = -(j * (o * r - q * k) - R * (n * r - t * k) + h * (n * q - t * o));
                    u[7] = (j * (o * Q - q * P) - R * (n * Q - t * P) + v * (n * q - t * o));
                    u[8] = (R * (w * r - Q * i) - v * (m * r - q * i) + h * (m * Q - q * w));
                    u[9] = -(j * (w * r - Q * i) - v * (l * r - t * i) + h * (l * Q - t * w));
                    u[10] = (j * (m * r - q * i) - R * (l * r - t * i) + h * (l * q - t * m));
                    u[11] = -(j * (m * Q - q * w) - R * (l * Q - t * w) + v * (l * q - t * m));
                    u[12] = -(R * (w * k - P * i) - v * (m * k - o * i) + h * (m * P - o * w));
                    u[13] = (j * (w * k - P * i) - v * (l * k - n * i) + h * (l * P - n * w));
                    u[14] = -(j * (m * k - o * i) - R * (l * k - n * i) + h * (l * o - n * m));
                    u[15] = (j * (m * P - o * w) - R * (l * P - n * w) + v * (l * o - n * m));
                    return u
                };
                H.determinant = function(o) {
                    var j = o[0],
                        l = o[1],
                        n = o[2],
                        p = o[3],
                        an = o[4],
                        ab = o[5],
                        ad = o[6],
                        af = o[7],
                        t = o[8],
                        u = o[9],
                        v = o[10],
                        w = o[11],
                        h = o[12],
                        i = o[13],
                        k = o[14],
                        m = o[15],
                        aa = j * ab - l * an,
                        ac = j * ad - n * an,
                        ae = j * af - p * an,
                        ag = l * ad - n * ab,
                        ah = l * af - p * ab,
                        ai = n * af - p * ad,
                        aj = t * i - u * h,
                        ak = t * k - v * h,
                        al = t * m - w * h,
                        am = u * k - v * i,
                        q = u * m - w * i,
                        r = v * m - w * k;
                    return aa * r - ac * q + ae * am + ag * al - ah * ak + ai * aj
                };
                H.multiply = function(u, n, q) {
                    var j = n[0],
                        k = n[1],
                        m = n[2],
                        p = n[3],
                        Y = n[4],
                        aa = n[5],
                        r = n[6],
                        w = n[7],
                        v = n[8],
                        U = n[9],
                        V = n[10],
                        W = n[11],
                        h = n[12],
                        i = n[13],
                        l = n[14],
                        o = n[15];
                    var X = q[0],
                        Z = q[1],
                        ab = q[2],
                        t = q[3];
                    u[0] = X * j + Z * Y + ab * v + t * h;
                    u[1] = X * k + Z * aa + ab * U + t * i;
                    u[2] = X * m + Z * r + ab * V + t * l;
                    u[3] = X * p + Z * w + ab * W + t * o;
                    X = q[4];
                    Z = q[5];
                    ab = q[6];
                    t = q[7];
                    u[4] = X * j + Z * Y + ab * v + t * h;
                    u[5] = X * k + Z * aa + ab * U + t * i;
                    u[6] = X * m + Z * r + ab * V + t * l;
                    u[7] = X * p + Z * w + ab * W + t * o;
                    X = q[8];
                    Z = q[9];
                    ab = q[10];
                    t = q[11];
                    u[8] = X * j + Z * Y + ab * v + t * h;
                    u[9] = X * k + Z * aa + ab * U + t * i;
                    u[10] = X * m + Z * r + ab * V + t * l;
                    u[11] = X * p + Z * w + ab * W + t * o;
                    X = q[12];
                    Z = q[13];
                    ab = q[14];
                    t = q[15];
                    u[12] = X * j + Z * Y + ab * v + t * h;
                    u[13] = X * k + Z * aa + ab * U + t * i;
                    u[14] = X * m + Z * r + ab * V + t * l;
                    u[15] = X * p + Z * w + ab * W + t * o;
                    return u
                };
                H.mul = H.multiply;
                H.translate = function(m, k, r) {
                    var t = r[0],
                        u = r[1],
                        v = r[2],
                        h, i, j, l, w, S, T, U, n, o, p, q;
                    if (k === m) {
                        m[12] = k[0] * t + k[4] * u + k[8] * v + k[12];
                        m[13] = k[1] * t + k[5] * u + k[9] * v + k[13];
                        m[14] = k[2] * t + k[6] * u + k[10] * v + k[14];
                        m[15] = k[3] * t + k[7] * u + k[11] * v + k[15]
                    } else {
                        h = k[0];
                        i = k[1];
                        j = k[2];
                        l = k[3];
                        w = k[4];
                        S = k[5];
                        T = k[6];
                        U = k[7];
                        n = k[8];
                        o = k[9];
                        p = k[10];
                        q = k[11];
                        m[0] = h;
                        m[1] = i;
                        m[2] = j;
                        m[3] = l;
                        m[4] = w;
                        m[5] = S;
                        m[6] = T;
                        m[7] = U;
                        m[8] = n;
                        m[9] = o;
                        m[10] = p;
                        m[11] = q;
                        m[12] = h * t + w * u + n * v + k[12];
                        m[13] = i * t + S * u + o * v + k[13];
                        m[14] = j * t + T * u + p * v + k[14];
                        m[15] = l * t + U * u + q * v + k[15]
                    }
                    return m
                };
                H.scale = function(k, m, l) {
                    var h = l[0],
                        i = l[1],
                        j = l[2];
                    k[0] = m[0] * h;
                    k[1] = m[1] * h;
                    k[2] = m[2] * h;
                    k[3] = m[3] * h;
                    k[4] = m[4] * i;
                    k[5] = m[5] * i;
                    k[6] = m[6] * i;
                    k[7] = m[7] * i;
                    k[8] = m[8] * j;
                    k[9] = m[9] * j;
                    k[10] = m[10] * j;
                    k[11] = m[11] * j;
                    k[12] = m[12];
                    k[13] = m[13];
                    k[14] = m[14];
                    k[15] = m[15];
                    return k
                };
                H.rotate = function(m, aw, au, aq) {
                    var ag = aq[0],
                        ah = aq[1],
                        ai = aq[2],
                        l = Math.sqrt(ag * ag + ah * ah + ai * ai),
                        r, h, t, ar, at, av, ax, aj, ak, al, am, n, o, p, q, u, v, w, i, j, k, an, ao, ap;
                    if (Math.abs(l) < J) {
                        return null
                    }
                    l = 1 / l;
                    ag *= l;
                    ah *= l;
                    ai *= l;
                    r = Math.sin(au);
                    h = Math.cos(au);
                    t = 1 - h;
                    ar = aw[0];
                    at = aw[1];
                    av = aw[2];
                    ax = aw[3];
                    aj = aw[4];
                    ak = aw[5];
                    al = aw[6];
                    am = aw[7];
                    n = aw[8];
                    o = aw[9];
                    p = aw[10];
                    q = aw[11];
                    u = ag * ag * t + h;
                    v = ah * ag * t + ai * r;
                    w = ai * ag * t - ah * r;
                    i = ag * ah * t - ai * r;
                    j = ah * ah * t + h;
                    k = ai * ah * t + ag * r;
                    an = ag * ai * t + ah * r;
                    ao = ah * ai * t - ag * r;
                    ap = ai * ai * t + h;
                    m[0] = ar * u + aj * v + n * w;
                    m[1] = at * u + ak * v + o * w;
                    m[2] = av * u + al * v + p * w;
                    m[3] = ax * u + am * v + q * w;
                    m[4] = ar * i + aj * j + n * k;
                    m[5] = at * i + ak * j + o * k;
                    m[6] = av * i + al * j + p * k;
                    m[7] = ax * i + am * j + q * k;
                    m[8] = ar * an + aj * ao + n * ap;
                    m[9] = at * an + ak * ao + o * ap;
                    m[10] = av * an + al * ao + p * ap;
                    m[11] = ax * an + am * ao + q * ap;
                    if (aw !== m) {
                        m[12] = aw[12];
                        m[13] = aw[13];
                        m[14] = aw[14];
                        m[15] = aw[15]
                    }
                    return m
                };
                H.rotateX = function(o, u, h) {
                    var n = Math.sin(h),
                        i = Math.cos(h),
                        p = u[4],
                        q = u[5],
                        r = u[6],
                        t = u[7],
                        j = u[8],
                        k = u[9],
                        l = u[10],
                        m = u[11];
                    if (u !== o) {
                        o[0] = u[0];
                        o[1] = u[1];
                        o[2] = u[2];
                        o[3] = u[3];
                        o[12] = u[12];
                        o[13] = u[13];
                        o[14] = u[14];
                        o[15] = u[15]
                    }
                    o[4] = p * i + j * n;
                    o[5] = q * i + k * n;
                    o[6] = r * i + l * n;
                    o[7] = t * i + m * n;
                    o[8] = j * i - p * n;
                    o[9] = k * i - q * n;
                    o[10] = l * i - r * n;
                    o[11] = m * i - t * n;
                    return o
                };
                H.rotateY = function(j, p, q) {
                    var o = Math.sin(q),
                        r = Math.cos(q),
                        k = p[0],
                        l = p[1],
                        m = p[2],
                        n = p[3],
                        t = p[8],
                        u = p[9],
                        h = p[10],
                        i = p[11];
                    if (p !== j) {
                        j[4] = p[4];
                        j[5] = p[5];
                        j[6] = p[6];
                        j[7] = p[7];
                        j[12] = p[12];
                        j[13] = p[13];
                        j[14] = p[14];
                        j[15] = p[15]
                    }
                    j[0] = k * r - t * o;
                    j[1] = l * r - u * o;
                    j[2] = m * r - h * o;
                    j[3] = n * r - i * o;
                    j[8] = k * o + t * r;
                    j[9] = l * o + u * r;
                    j[10] = m * o + h * r;
                    j[11] = n * o + i * r;
                    return j
                };
                H.rotateZ = function(j, u, h) {
                    var o = Math.sin(h),
                        i = Math.cos(h),
                        k = u[0],
                        l = u[1],
                        m = u[2],
                        n = u[3],
                        p = u[4],
                        q = u[5],
                        r = u[6],
                        t = u[7];
                    if (u !== j) {
                        j[8] = u[8];
                        j[9] = u[9];
                        j[10] = u[10];
                        j[11] = u[11];
                        j[12] = u[12];
                        j[13] = u[13];
                        j[14] = u[14];
                        j[15] = u[15]
                    }
                    j[0] = k * i + p * o;
                    j[1] = l * i + q * o;
                    j[2] = m * i + r * o;
                    j[3] = n * i + t * o;
                    j[4] = p * i - k * o;
                    j[5] = q * i - l * o;
                    j[6] = r * i - m * o;
                    j[7] = t * i - n * o;
                    return j
                };
                H.fromRotationTranslation = function(m, o, q) {
                    var u = o[0],
                        v = o[1],
                        w = o[2],
                        t = o[3],
                        l = u + u,
                        W = v + v,
                        r = w + w,
                        T = u * l,
                        U = u * W,
                        V = u * r,
                        n = v * W,
                        p = v * r,
                        i = w * r,
                        h = t * l,
                        j = t * W,
                        k = t * r;
                    m[0] = 1 - (n + i);
                    m[1] = U + k;
                    m[2] = V - j;
                    m[3] = 0;
                    m[4] = U - k;
                    m[5] = 1 - (T + i);
                    m[6] = p + h;
                    m[7] = 0;
                    m[8] = V + j;
                    m[9] = p - h;
                    m[10] = 1 - (T + n);
                    m[11] = 0;
                    m[12] = q[0];
                    m[13] = q[1];
                    m[14] = q[2];
                    m[15] = 1;
                    return m
                };
                H.fromQuat = function(m, o) {
                    var t = o[0],
                        u = o[1],
                        v = o[2],
                        r = o[3],
                        l = t + t,
                        U = u + u,
                        q = v + v,
                        w = t * l,
                        S = t * U,
                        T = t * q,
                        n = u * U,
                        p = u * q,
                        i = v * q,
                        h = r * l,
                        j = r * U,
                        k = r * q;
                    m[0] = 1 - (n + i);
                    m[1] = S + k;
                    m[2] = T - j;
                    m[3] = 0;
                    m[4] = S - k;
                    m[5] = 1 - (w + i);
                    m[6] = p + h;
                    m[7] = 0;
                    m[8] = T + j;
                    m[9] = p - h;
                    m[10] = 1 - (w + n);
                    m[11] = 0;
                    m[12] = 0;
                    m[13] = 0;
                    m[14] = 0;
                    m[15] = 1;
                    return m
                };
                H.frustum = function(j, m, o, n, p, h, i) {
                    var q = 1 / (o - m),
                        k = 1 / (p - n),
                        l = 1 / (h - i);
                    j[0] = (h * 2) * q;
                    j[1] = 0;
                    j[2] = 0;
                    j[3] = 0;
                    j[4] = 0;
                    j[5] = (h * 2) * k;
                    j[6] = 0;
                    j[7] = 0;
                    j[8] = (o + m) * q;
                    j[9] = (p + n) * k;
                    j[10] = (i + h) * l;
                    j[11] = -1;
                    j[12] = 0;
                    j[13] = 0;
                    j[14] = (i * h * 2) * l;
                    j[15] = 0;
                    return j
                };
                H.perspective = function(i, l, n, m, h) {
                    var j = 1 / Math.tan(l / 2),
                        k = 1 / (m - h);
                    i[0] = j / n;
                    i[1] = 0;
                    i[2] = 0;
                    i[3] = 0;
                    i[4] = 0;
                    i[5] = j;
                    i[6] = 0;
                    i[7] = 0;
                    i[8] = 0;
                    i[9] = 0;
                    i[10] = (h + m) * k;
                    i[11] = -1;
                    i[12] = 0;
                    i[13] = 0;
                    i[14] = (2 * h * m) * k;
                    i[15] = 0;
                    return i
                };
                H.ortho = function(k, m, o, n, q, h, i) {
                    var j = 1 / (m - o),
                        p = 1 / (n - q),
                        l = 1 / (h - i);
                    k[0] = -2 * j;
                    k[1] = 0;
                    k[2] = 0;
                    k[3] = 0;
                    k[4] = 0;
                    k[5] = -2 * p;
                    k[6] = 0;
                    k[7] = 0;
                    k[8] = 0;
                    k[9] = 0;
                    k[10] = 2 * l;
                    k[11] = 0;
                    k[12] = (m + o) * j;
                    k[13] = (q + n) * p;
                    k[14] = (i + h) * l;
                    k[15] = 1;
                    return k
                };
                H.lookAt = function(p, i, h, Y) {
                    var j, k, m, r, u, w, V, W, X, o, l = i[0],
                        n = i[1],
                        q = i[2],
                        Z = Y[0],
                        aa = Y[1],
                        ab = Y[2],
                        t = h[0],
                        v = h[1],
                        U = h[2];
                    if (Math.abs(l - t) < J && Math.abs(n - v) < J && Math.abs(q - U) < J) {
                        return H.identity(p)
                    }
                    V = l - t;
                    W = n - v;
                    X = q - U;
                    o = 1 / Math.sqrt(V * V + W * W + X * X);
                    V *= o;
                    W *= o;
                    X *= o;
                    j = aa * X - ab * W;
                    k = ab * V - Z * X;
                    m = Z * W - aa * V;
                    o = Math.sqrt(j * j + k * k + m * m);
                    if (!o) {
                        j = 0;
                        k = 0;
                        m = 0
                    } else {
                        o = 1 / o;
                        j *= o;
                        k *= o;
                        m *= o
                    }
                    r = W * m - X * k;
                    u = X * j - V * m;
                    w = V * k - W * j;
                    o = Math.sqrt(r * r + u * u + w * w);
                    if (!o) {
                        r = 0;
                        u = 0;
                        w = 0
                    } else {
                        o = 1 / o;
                        r *= o;
                        u *= o;
                        w *= o
                    }
                    p[0] = j;
                    p[1] = r;
                    p[2] = V;
                    p[3] = 0;
                    p[4] = k;
                    p[5] = u;
                    p[6] = W;
                    p[7] = 0;
                    p[8] = m;
                    p[9] = w;
                    p[10] = X;
                    p[11] = 0;
                    p[12] = -(j * l + k * n + m * q);
                    p[13] = -(r * l + u * n + w * q);
                    p[14] = -(V * l + W * n + X * q);
                    p[15] = 1;
                    return p
                };
                H.str = function(h) {
                    return "mat4(" + h[0] + ", " + h[1] + ", " + h[2] + ", " + h[3] + ", " + h[4] + ", " + h[5] + ", " + h[6] + ", " + h[7] + ", " + h[8] + ", " + h[9] + ", " + h[10] + ", " + h[11] + ", " + h[12] + ", " + h[13] + ", " + h[14] + ", " + h[15] + ")"
                };
                if (typeof(z) !== "undefined") {
                    z.mat4 = H
                }
                var C = {};
                var I = new Float32Array([0, 0, 0, 1]);
                C.create = function() {
                    var h = new F(4);
                    h[0] = 0;
                    h[1] = 0;
                    h[2] = 0;
                    h[3] = 1;
                    return h
                };
                C.clone = y.clone;
                C.fromValues = y.fromValues;
                C.copy = y.copy;
                C.set = y.set;
                C.identity = function(h) {
                    h[0] = 0;
                    h[1] = 0;
                    h[2] = 0;
                    h[3] = 1;
                    return h
                };
                C.setAxisAngle = function(k, i, h) {
                    h = h * 0.5;
                    var j = Math.sin(h);
                    k[0] = j * i[0];
                    k[1] = j * i[1];
                    k[2] = j * i[2];
                    k[3] = Math.cos(h);
                    return k
                };
                C.add = y.add;
                C.multiply = function(l, q, r) {
                    var n = q[0],
                        o = q[1],
                        p = q[2],
                        m = q[3],
                        i = r[0],
                        j = r[1],
                        k = r[2],
                        h = r[3];
                    l[0] = n * h + m * i + o * k - p * j;
                    l[1] = o * h + m * j + p * i - n * k;
                    l[2] = p * h + m * k + n * j - o * i;
                    l[3] = m * h - n * i - o * j - p * k;
                    return l
                };
                C.mul = C.multiply;
                C.scale = y.scale;
                C.rotateX = function(l, h, j) {
                    j *= 0.5;
                    var n = h[0],
                        o = h[1],
                        p = h[2],
                        m = h[3],
                        k = Math.sin(j),
                        i = Math.cos(j);
                    l[0] = n * i + m * k;
                    l[1] = o * i + p * k;
                    l[2] = p * i - o * k;
                    l[3] = m * i - n * k;
                    return l
                };
                C.rotateY = function(l, h, j) {
                    j *= 0.5;
                    var n = h[0],
                        o = h[1],
                        p = h[2],
                        m = h[3],
                        k = Math.sin(j),
                        i = Math.cos(j);
                    l[0] = n * i - p * k;
                    l[1] = o * i + m * k;
                    l[2] = p * i + n * k;
                    l[3] = m * i - o * k;
                    return l
                };
                C.rotateZ = function(l, h, j) {
                    j *= 0.5;
                    var n = h[0],
                        o = h[1],
                        p = h[2],
                        m = h[3],
                        k = Math.sin(j),
                        i = Math.cos(j);
                    l[0] = n * i + o * k;
                    l[1] = o * i - n * k;
                    l[2] = p * i + m * k;
                    l[3] = m * i - p * k;
                    return l
                };
                C.calculateW = function(k, l) {
                    var h = l[0],
                        i = l[1],
                        j = l[2];
                    k[0] = h;
                    k[1] = i;
                    k[2] = j;
                    k[3] = -Math.sqrt(Math.abs(1 - h * h - i * i - j * j));
                    return k
                };
                C.dot = y.dot;
                C.lerp = y.lerp;
                C.slerp = function(j, q, r, m) {
                    var t = q[0],
                        l = q[1],
                        o = q[2],
                        p = q[3],
                        v = r[0],
                        w = r[1],
                        P = r[2],
                        u = r[3];
                    var k = t * v + l * w + o * P + p * u,
                        i, n, O, h;
                    if (Math.abs(k) >= 1) {
                        if (j !== q) {
                            j[0] = t;
                            j[1] = l;
                            j[2] = o;
                            j[3] = p
                        }
                        return j
                    }
                    i = Math.acos(k);
                    n = Math.sqrt(1 - k * k);
                    if (Math.abs(n) < 0.001) {
                        j[0] = (t * 0.5 + v * 0.5);
                        j[1] = (l * 0.5 + w * 0.5);
                        j[2] = (o * 0.5 + P * 0.5);
                        j[3] = (p * 0.5 + u * 0.5);
                        return j
                    }
                    O = Math.sin((1 - m) * i) / n;
                    h = Math.sin(m * i) / n;
                    j[0] = (t * O + v * h);
                    j[1] = (l * O + w * h);
                    j[2] = (o * O + P * h);
                    j[3] = (p * O + u * h);
                    return j
                };
                C.invert = function(k, m) {
                    var o = m[0],
                        n = m[1],
                        i = m[2],
                        j = m[3],
                        h = o * o + n * n + i * i + j * j,
                        l = h ? 1 / h : 0;
                    k[0] = -o * l;
                    k[1] = -n * l;
                    k[2] = -i * l;
                    k[3] = j * l;
                    return k
                };
                C.conjugate = function(i, h) {
                    i[0] = -h[0];
                    i[1] = -h[1];
                    i[2] = -h[2];
                    i[3] = h[3];
                    return i
                };
                C.length = y.length;
                C.len = C.length;
                C.squaredLength = y.squaredLength;
                C.sqrLen = C.squaredLength;
                C.normalize = y.normalize;
                C.fromMat3 = (function() {
                    var h = [1, 2, 0];
                    return function(m, o) {
                        var l = o[0] + o[4] + o[8];
                        var j;
                        if (l > 0) {
                            j = Math.sqrt(l + 1);
                            m[3] = 0.5 * j;
                            j = 0.5 / j;
                            m[0] = (o[7] - o[5]) * j;
                            m[1] = (o[2] - o[6]) * j;
                            m[2] = (o[3] - o[1]) * j
                        } else {
                            var k = 0;
                            if (o[4] > o[0]) {
                                k = 1
                            }
                            if (o[8] > o[k * 3 + k]) {
                                k = 2
                            }
                            var n = h[k];
                            var i = h[n];
                            j = Math.sqrt(o[k * 3 + k] - o[n * 3 + n] - o[i * 3 + i] + 1);
                            m[k] = 0.5 * j;
                            j = 0.5 / j;
                            m[3] = (o[i * 3 + n] - o[n * 3 + i]) * j;
                            m[n] = (o[n * 3 + k] + o[k * 3 + n]) * j;
                            m[i] = (o[i * 3 + k] + o[k * 3 + i]) * j
                        }
                        return m
                    }
                })();
                C.str = function(h) {
                    return "quat(" + h[0] + ", " + h[1] + ", " + h[2] + ", " + h[3] + ")"
                };
                if (typeof(z) !== "undefined") {
                    z.quat = C
                }
            })(a.exports)
        })()
    }, {}],
    177: [function(d, g, f) {
        g.exports = {
            Transform: d("./ac-transform/Transform")
        }
    }, {
        "./ac-transform/Transform": 178
    }],
    178: [function(ag, ao, L) {
        var ah = ag("gl-matrix").mat4;
        var aq = ag("gl-matrix").vec3;
        var ar = ag("gl-matrix").vec4;
        var an = ag("gl-matrix").quat;
        var am = Math.PI / 180;
        var ap = 180 / Math.PI;
        var Q = 0,
            ad = 0,
            U = 1,
            K = 1,
            X = 2,
            ab = 3;
        var ai = 4,
            M = 4,
            aj = 5,
            O = 5,
            ak = 6,
            al = 7;
        var S = 8,
            Z = 9,
            ac = 10,
            ae = 11;
        var N = 12,
            P = 12,
            R = 13,
            T = 13,
            W = 14,
            Y = 15;

        function aa() {
            this.m = ah.create()
        }
        var V = aa.prototype;
        V.rotateX = function(a) {
            var b = am * a;
            ah.rotateX(this.m, this.m, b);
            return this
        };
        V.rotateY = function(a) {
            var b = am * a;
            ah.rotateY(this.m, this.m, b);
            return this
        };
        V.rotateZ = function(a) {
            var b = am * a;
            ah.rotateZ(this.m, this.m, b);
            return this
        };
        V.rotate = V.rotateZ;
        V.rotate3d = function(a, c, d, f) {
            if (c === null || c === undefined) {
                c = a
            }
            if (d === null || c === undefined) {
                d = a
            }
            var b = am * f;
            ah.rotate(this.m, this.m, b, [a, c, d]);
            return this
        };
        V.rotateAxisAngle = V.rotate3d;
        V.scale = function(a, b) {
            b = b || a;
            ah.scale(this.m, this.m, [a, b, 1]);
            return this
        };
        V.scaleX = function(a) {
            ah.scale(this.m, this.m, [a, 1, 1]);
            return this
        };
        V.scaleY = function(a) {
            ah.scale(this.m, this.m, [1, a, 1]);
            return this
        };
        V.scaleZ = function(a) {
            ah.scale(this.m, this.m, [1, 1, a]);
            return this
        };
        V.scale3d = function(c, a, b) {
            ah.scale(this.m, this.m, [c, a, b]);
            return this
        };
        V.skew = function(c, a) {
            if (a === null || a === undefined) {
                return this.skewX(c)
            }
            c = am * c;
            a = am * a;
            var b = ah.create();
            b[M] = Math.tan(c);
            b[K] = Math.tan(a);
            ah.multiply(this.m, this.m, b);
            return this
        };
        V.skewX = function(a) {
            a = am * a;
            var b = ah.create();
            b[M] = Math.tan(a);
            ah.multiply(this.m, this.m, b);
            return this
        };
        V.skewY = function(a) {
            a = am * a;
            var b = ah.create();
            b[K] = Math.tan(a);
            ah.multiply(this.m, this.m, b);
            return this
        };
        V.translate = function(a, b) {
            b = b || 0;
            ah.translate(this.m, this.m, [a, b, 0]);
            return this
        };
        V.translate3d = function(a, b, c) {
            ah.translate(this.m, this.m, [a, b, c]);
            return this
        };
        V.translateX = function(a) {
            ah.translate(this.m, this.m, [a, 0, 0]);
            return this
        };
        V.translateY = function(a) {
            ah.translate(this.m, this.m, [0, a, 0]);
            return this
        };
        V.translateZ = function(a) {
            ah.translate(this.m, this.m, [0, 0, a]);
            return this
        };
        V.perspective = function(a) {
            var b = ah.create();
            if (a !== 0) {
                b[ae] = -1 / a
            }
            ah.multiply(this.m, this.m, b)
        };
        V.inverse = function() {
            var a = this.clone();
            a.m = ah.invert(a.m, this.m);
            return a
        };
        V.reset = function() {
            ah.identity(this.m);
            return this
        };
        V.clone = function() {
            var a = new aa();
            a.m = ah.clone(this.m);
            return a
        };
        V.toArray = function() {
            var a = this.m;
            if (this.isAffine()) {
                return [a[ad], a[K], a[M], a[O], a[P], a[T]]
            }
            return [a[Q], a[U], a[X], a[ab], a[ai], a[aj], a[ak], a[al], a[S], a[Z], a[ac], a[ae], a[N], a[R], a[W], a[Y]]
        };
        V.fromArray = function(a) {
            this.m = Array.prototype.slice.call(a);
            return this
        };
        V.setMatrixValue = function(a) {
            a = String(a).trim();
            var b = ah.create();
            if (a === "none") {
                this.m = b;
                return this
            }
            var d = a.slice(0, a.indexOf("(")),
                c, f;
            if (d === "matrix3d") {
                c = a.slice(9, -1).split(",");
                for (f = 0; f < c.length; f++) {
                    b[f] = parseFloat(c[f])
                }
            } else {
                if (d === "matrix") {
                    c = a.slice(7, -1).split(",");
                    for (f = c.length; f--;) {
                        c[f] = parseFloat(c[f])
                    }
                    b[Q] = c[0];
                    b[U] = c[1];
                    b[N] = c[4];
                    b[ai] = c[2];
                    b[aj] = c[3];
                    b[R] = c[5]
                } else {
                    throw new TypeError("Invalid Matrix Value")
                }
            }
            this.m = b;
            return this
        };
        V.decompose = function(f) {
            f = f || false;
            var a = ah.clone(this.m);
            var k = aq.create();
            var u = aq.create();
            var n = aq.create();
            var i = ar.create();
            var p = ar.create();
            var o = aq.create();
            for (var y = 0; y < 16; y++) {
                a[y] /= a[Y]
            }
            var c = ah.clone(a);
            c[ab] = 0;
            c[al] = 0;
            c[ae] = 0;
            c[Y] = 1;
            var x = a[3],
                m = a[7],
                j = a[11],
                r = a[12],
                t = a[13],
                v = a[14],
                w = a[15];
            var g = ar.create();
            if (!af(a[ab]) || !af(a[al]) || !af(a[ae])) {
                g[0] = a[ab];
                g[1] = a[al];
                g[2] = a[ae];
                g[3] = a[Y];
                var z = ah.invert(ah.create(), c);
                var h = ah.transpose(ah.create(), z);
                i = ar.transformMat4(i, g, h)
            } else {
                i = ar.fromValues(0, 0, 0, 1)
            }
            k[0] = r;
            k[1] = t;
            k[2] = v;
            var l = [aq.create(), aq.create(), aq.create()];
            l[0][0] = a[0];
            l[0][1] = a[1];
            l[0][2] = a[2];
            l[1][0] = a[4];
            l[1][1] = a[5];
            l[1][2] = a[6];
            l[2][0] = a[8];
            l[2][1] = a[9];
            l[2][2] = a[10];
            u[0] = aq.length(l[0]);
            aq.normalize(l[0], l[0]);
            n[0] = aq.dot(l[0], l[1]);
            l[1] = this._combine(l[1], l[0], 1, -n[0]);
            u[1] = aq.length(l[1]);
            aq.normalize(l[1], l[1]);
            n[0] /= u[1];
            n[1] = aq.dot(l[0], l[2]);
            l[2] = this._combine(l[2], l[0], 1, -n[1]);
            n[2] = aq.dot(l[1], l[2]);
            l[2] = this._combine(l[2], l[1], 1, -n[2]);
            u[2] = aq.length(l[2]);
            aq.normalize(l[2], l[2]);
            n[1] /= u[2];
            n[2] /= u[2];
            var b = aq.cross(aq.create(), l[1], l[2]);
            if (aq.dot(l[0], b) < 0) {
                for (y = 0; y < 3; y++) {
                    u[y] *= -1;
                    l[y][0] *= -1;
                    l[y][1] *= -1;
                    l[y][2] *= -1
                }
            }
            p[0] = 0.5 * Math.sqrt(Math.max(1 + l[0][0] - l[1][1] - l[2][2], 0));
            p[1] = 0.5 * Math.sqrt(Math.max(1 - l[0][0] + l[1][1] - l[2][2], 0));
            p[2] = 0.5 * Math.sqrt(Math.max(1 - l[0][0] - l[1][1] + l[2][2], 0));
            p[3] = 0.5 * Math.sqrt(Math.max(1 + l[0][0] + l[1][1] + l[2][2], 0));
            if (l[2][1] > l[1][2]) {
                p[0] = -p[0]
            }
            if (l[0][2] > l[2][0]) {
                p[1] = -p[1]
            }
            if (l[1][0] > l[0][1]) {
                p[2] = -p[2]
            }
            var q = ar.fromValues(p[0], p[1], p[2], 2 * Math.acos(p[3]));
            var d = this._rotationFromQuat(p);
            if (f) {
                n[0] = Math.round(n[0] * ap * 100) / 100;
                n[1] = Math.round(n[1] * ap * 100) / 100;
                n[2] = Math.round(n[2] * ap * 100) / 100;
                d[0] = Math.round(d[0] * ap * 100) / 100;
                d[1] = Math.round(d[1] * ap * 100) / 100;
                d[2] = Math.round(d[2] * ap * 100) / 100;
                q[3] = Math.round(q[3] * ap * 100) / 100
            }
            return {
                translation: k,
                scale: u,
                skew: n,
                perspective: i,
                quaternion: p,
                eulerRotation: d,
                axisAngle: q
            }
        };
        V.recompose = function(c, d, h, g, f) {
            c = c || aq.create();
            d = d || aq.create();
            h = h || aq.create();
            g = g || ar.create();
            f = f || ar.create();
            var a = ah.fromRotationTranslation(ah.create(), f, c);
            a[ab] = g[0];
            a[al] = g[1];
            a[ae] = g[2];
            a[Y] = g[3];
            var b = ah.create();
            if (h[2] !== 0) {
                b[Z] = h[2];
                ah.multiply(a, a, b)
            }
            if (h[1] !== 0) {
                b[Z] = 0;
                b[S] = h[1];
                ah.multiply(a, a, b)
            }
            if (h[0]) {
                b[S] = 0;
                b[4] = h[0];
                ah.multiply(a, a, b)
            }
            ah.scale(a, a, d);
            this.m = a;
            return this
        };
        V.isAffine = function() {
            return (this.m[X] === 0 && this.m[ab] === 0 && this.m[ak] === 0 && this.m[al] === 0 && this.m[S] === 0 && this.m[Z] === 0 && this.m[ac] === 1 && this.m[ae] === 0 && this.m[W] === 0 && this.m[Y] === 1)
        };
        V.toString = function() {
            var a = this.m;
            if (this.isAffine()) {
                return "matrix(" + a[ad] + ", " + a[K] + ", " + a[M] + ", " + a[O] + ", " + a[P] + ", " + a[T] + ")"
            }
            return "matrix3d(" + a[Q] + ", " + a[U] + ", " + a[X] + ", " + a[ab] + ", " + a[ai] + ", " + a[aj] + ", " + a[ak] + ", " + a[al] + ", " + a[S] + ", " + a[Z] + ", " + a[ac] + ", " + a[ae] + ", " + a[N] + ", " + a[R] + ", " + a[W] + ", " + a[Y] + ")"
        };
        V.toCSSString = V.toString;
        V._combine = function(a, c, d, f) {
            var b = aq.create();
            b[0] = (d * a[0]) + (f * c[0]);
            b[1] = (d * a[1]) + (f * c[1]);
            b[2] = (d * a[2]) + (f * c[2]);
            return b
        };
        V._matrix2dToMat4 = function(b) {
            var d = ah.create();
            for (var c = 0; c < 4; c++) {
                for (var a = 0; a < 4; a++) {
                    d[c * 4 + a] = b[c][a]
                }
            }
            return d
        };
        V._mat4ToMatrix2d = function(c) {
            var b = [];
            for (var d = 0; d < 4; d++) {
                b[d] = [];
                for (var a = 0; a < 4; a++) {
                    b[d][a] = c[d * 4 + a]
                }
            }
            return b
        };
        V._rotationFromQuat = function(k) {
            var g = k[3] * k[3];
            var h = k[0] * k[0];
            var i = k[1] * k[1];
            var j = k[2] * k[2];
            var a = h + i + j + g;
            var f = k[0] * k[1] + k[2] * k[3];
            var b, c, d;
            if (f > 0.499 * a) {
                c = 2 * Math.atan2(k[0], k[3]);
                d = Math.PI / 2;
                b = 0;
                return aq.fromValues(b, c, d)
            }
            if (f < -0.499 * a) {
                c = -2 * Math.atan2(k[0], k[3]);
                d = -Math.PI / 2;
                b = 0;
                return aq.fromValues(b, c, d)
            }
            c = Math.atan2(2 * k[1] * k[3] - 2 * k[0] * k[2], h - i - j + g);
            d = Math.asin(2 * f / a);
            b = Math.atan2(2 * k[0] * k[3] - 2 * k[1] * k[2], -h + i - j + g);
            return aq.fromValues(b, c, d)
        };
        var af = function(a) {
            return Math.abs(a) < 0.0001
        };
        ao.exports = aa
    }, {
        "gl-matrix": 176
    }],
    179: [function(d, g, f) {
        g.exports = {
            Clip: d("./ac-eclipse/ClipFactory"),
            Timeline: d("./ac-eclipse/Timeline")
        }
    }, {
        "./ac-eclipse/ClipFactory": 180,
        "./ac-eclipse/Timeline": 181
    }],
    180: [function(p, r, o) {
        p("./helpers/Float32Array");
        var t = p("./helpers/transitionEnd");
        var n = p("ac-clip").Clip;
        var l = p("./clips/ClipEasing");
        var q = p("./clips/ClipInlineCss");
        var m = p("./clips/ClipTransitionCss");

        function u(d, a, c, b) {
            if (d.nodeType) {
                if (t === undefined || (b && b.inlineStyles)) {
                    return new q(d, a, c, b)
                }
                return new m(d, a, c, b)
            }
            return new l(d, a, c, b)
        }
        for (var v in n) {
            if (typeof n[v] === "function" && v.substr(0, 1) !== "_") {
                u[v] = n[v].bind(n)
            }
        }
        u.to = function(d, a, c, b) {
            b = b || {};
            if (b.destroyOnComplete === undefined) {
                b.destroyOnComplete = true
            }
            return new u(d, a, c, b).play()
        };
        u.from = function(c, d, b, a) {
            a = a || {};
            a.propsFrom = b;
            if (a.destroyOnComplete === undefined) {
                a.destroyOnComplete = true
            }
            return new u(c, d, a.propsTo, a).play()
        };
        r.exports = u
    }, {
        "./clips/ClipEasing": 182,
        "./clips/ClipInlineCss": 183,
        "./clips/ClipTransitionCss": 184,
        "./helpers/Float32Array": 187,
        "./helpers/transitionEnd": 198,
        "ac-clip": 22
    }],
    181: [function(q, o, k) {
        var p = q("ac-object").create;
        var j = q("ac-clip").Clip;
        var m = q("ac-event-emitter").EventEmitter;

        function l(a) {
            a = a || {}
        }
        var n = l.prototype = p(m.prototype);
        o.exports = l
    }, {
        "ac-clip": 22,
        "ac-event-emitter": 174,
        "ac-object": 713
    }],
    182: [function(w, x, v) {
        var o = w("ac-object").clone;
        var r = w("ac-object").create;
        var n = w("../helpers/isCssCubicBezierString");
        var t = w("../helpers/BezierCurveCssManager");
        var q = w("ac-clip").Clip;
        var p = "ease";

        function m(H, a, l, c) {
            var F = o(c || {}, true);
            var f = 0;
            var j = {};
            var D = {};
            var E = F.propsFrom || {};
            var h = {};
            var i, b;
            if (n(F.ease)) {
                F.ease = t.create(F.ease).toEasingFunction()
            }
            if (F.propsEase) {
                var g = F.ease || p;
                for (i in l) {
                    if (l.hasOwnProperty(i)) {
                        b = F.propsEase[i];
                        if (n(b)) {
                            b = t.create(F.propsEase[i]).toEasingFunction()
                        }
                        if (b === undefined) {
                            if (j[g] === undefined) {
                                j[g] = {};
                                D[g] = {};
                                h[g] = g;
                                f++
                            }
                            j[g][i] = l[i];
                            D[g][i] = E[i]
                        } else {
                            if (typeof b === "function") {
                                j[f] = {};
                                D[f] = {};
                                j[f][i] = l[i];
                                D[f][i] = E[i];
                                h[f] = b;
                                f++
                            } else {
                                if (j[b] === undefined) {
                                    j[b] = {};
                                    D[b] = {};
                                    h[b] = b;
                                    f++
                                }
                                j[b][i] = l[i];
                                D[b][i] = E[i]
                            }
                        }
                    }
                }
            }
            if (f > 1) {
                this._storeOnUpdate = F.onUpdate || null;
                F.onUpdate = null;
                var G = F.onStart;
                var k = F.onDraw;
                var d = F.onComplete;
                F.onStart = null;
                F.onDraw = null;
                F.onComplete = null;
                this._clips = [];
                for (b in j) {
                    if (j.hasOwnProperty(b)) {
                        F.ease = h[b];
                        F.propsFrom = D[b];
                        this._clips.push(new q(H, a, j[b], F))
                    }
                }
                F.onUpdate = this._onUpdate;
                F.onStart = G;
                F.onDraw = k;
                F.onComplete = d;
                F.propsFrom = null;
                F.ease = "linear";
                l = {}
            } else {
                for (i in h) {
                    if (h.hasOwnProperty(i)) {
                        F.ease = h[i]
                    }
                }
            }
            q.call(this, H, a, l, F)
        }
        var u = m.prototype = r(q.prototype);
        u.reset = function() {
            var b = q.prototype.reset.call(this);
            if (this._clips) {
                var a = this._clips.length;
                while (a--) {
                    this._clips[a].reset()
                }
            }
            return b
        };
        u.destroy = function() {
            var b = q.prototype.destroy.call(this);
            if (this._clips) {
                var a = this._clips.length;
                while (a--) {
                    this._clips[a].reset()
                }
                this._clips = null
            }
            this._eases = null;
            this._storeOnUpdate = null;
            return b
        };
        u._onUpdate = function(a) {
            var c = (this._direction === 1) ? a.progress : 1 - a.progress;
            var b = this._clips.length;
            while (b--) {
                this._clips[b].setProgress(c)
            }
            if (typeof this._storeOnUpdate === "function") {
                this._storeOnUpdate.call(this, a)
            }
        };
        x.exports = m
    }, {
        "../helpers/BezierCurveCssManager": 186,
        "../helpers/isCssCubicBezierString": 194,
        "ac-clip": 22,
        "ac-object": 713
    }],
    183: [function(x, z, w) {
        var A = x("../helpers/convertToStyleObject");
        var y = x("../helpers/convertToTransitionableObjects");
        var q = x("ac-object").clone;
        var t = x("ac-object").create;
        var r = x("../helpers/removeTransitions");
        var u = x("../helpers/BezierCurveCssManager");
        var o = x("./ClipEasing");
        var p = x("ac-dom-styles");

        function B(a, c, j, f) {
            var k = q(f || {}, true);
            this._el = a;
            var h = y(this._el, j || {}, k.propsFrom || {});
            this._styles = h.target;
            this._stylesFrom = h.propsFrom;
            j = h.propsTo;
            var d;
            this._storeOnStart = k.onStart || null;
            this._storeOnDraw = k.onDraw || null;
            this._storeOnComplete = k.onComplete || null;
            k.onStart = this._onStart;
            k.onDraw = this._onDraw;
            k.onComplete = this._onComplete;
            k.propsFrom = h.propsFrom;
            o.call(this, this._styles, c, j, k);
            r(this._el, this._styles);
            var i = (this._isYoyo) ? this._stylesFrom : j;
            this._completeStyles = A(i);
            if (k.removeStylesOnComplete !== undefined) {
                var g = k.removeStylesOnComplete;
                if (typeof g === "boolean" && g) {
                    for (d in this._completeStyles) {
                        if (this._completeStyles.hasOwnProperty(d)) {
                            this._completeStyles[d] = null
                        }
                    }
                } else {
                    if (typeof g === "object" && g.length) {
                        var b = g.length;
                        while (b--) {
                            d = g[b];
                            if (this._completeStyles.hasOwnProperty(d)) {
                                this._completeStyles[d] = null
                            }
                        }
                    }
                }
            }
        }
        var v = B.prototype = t(o.prototype);
        v.play = function() {
            var a = o.prototype.play.call(this);
            if (this._remainingDelay !== 0) {
                p.setStyle(this._el, A(this._styles))
            }
            return a
        };
        v.reset = function() {
            var a = o.prototype.reset.call(this);
            p.setStyle(this._el, A(this._styles));
            return a
        };
        v.destroy = function() {
            var a = o.prototype.destroy.call(this);
            this._el = null;
            this._styles = null;
            this._stylesFrom = null;
            this._stylesTo = null;
            this._completeStyles = null;
            this._storeOnStart = null;
            this._storeOnDraw = null;
            this._storeOnComplete = null;
            return a
        };
        v.getTarget = function() {
            return this._el
        };
        v._onStart = function(a) {
            if (this.isPlaying() && this._direction === 1 && this._delay === 0) {
                p.setStyle(this._el, A(this._stylesFrom))
            }
            if (typeof this._storeOnStart === "function") {
                this._storeOnStart.call(this, a)
            }
        };
        v._onDraw = function(a) {
            p.setStyle(this._el, A(this._styles));
            if (typeof this._storeOnDraw === "function") {
                this._storeOnDraw.call(this, a)
            }
        };
        v._onComplete = function(a) {
            p.setStyle(this._el, this._completeStyles);
            if (typeof this._storeOnComplete === "function") {
                this._storeOnComplete.call(this, a)
            }
        };
        z.exports = B
    }, {
        "../helpers/BezierCurveCssManager": 186,
        "../helpers/convertToStyleObject": 190,
        "../helpers/convertToTransitionableObjects": 191,
        "../helpers/removeTransitions": 195,
        "./ClipEasing": 182,
        "ac-dom-styles": 120,
        "ac-object": 713
    }],
    184: [function(L, T, y) {
        var R = L("../helpers/convertToStyleObject");
        var H = L("../helpers/convertToTransitionableObjects");
        var A = L("ac-object").clone;
        var J = L("ac-object").create;
        var D = L("ac-easing").createPredefined;
        var K = L("../helpers/isCssCubicBezierString");
        var C = L("../helpers/removeTransitions");
        var O = L("../helpers/splitUnits");
        var S = L("../helpers/toCamCase");
        var M = L("../helpers/transitionEnd");
        var I = L("../helpers/waitAnimationFrames");
        var B = L("../helpers/BezierCurveCssManager");
        var F = L("./ClipEasing");
        var z = L("ac-dom-styles");
        var E = L("../helpers/PageVisibilityManager");
        var Q = "ease";
        var N = "%EASE% is not a supported predefined ease when transitioning with Elements and CSS transition. If you need to use %EASE% then pass the inlineStyle:true option.";

        function P(n, c, l, h) {
            var m = A(h || {}, true);
            this._el = n;
            var k = H(this._el, l || {}, m.propsFrom || {});
            this._styles = k.target;
            this._propsTo = k.propsTo;
            this._propsFrom = k.propsFrom;
            this._storeOnStart = m.onStart || null;
            this._storeOnComplete = m.onComplete || null;
            m.onStart = this._onStart;
            m.onComplete = this._onComplete;
            m.propsFrom = this._propsFrom;
            this._stylesTo = A(this._propsTo, true);
            this._stylesFrom = A(this._propsFrom, true);
            m.ease = m.ease || Q;
            this._eases = {};
            this._propsArray = [];
            this._propsComplete = {};
            var i;
            var d;
            var f = R(this._stylesTo);
            var a = R(this._stylesFrom);
            this._propsEase = A(m.propsEase || {}, true);
            var g;
            for (g in this._stylesTo) {
                if (this._stylesTo.hasOwnProperty(g)) {
                    this._propsArray[this._propsArray.length] = g;
                    this._propsComplete[S(g)] = {
                        "1": f[g],
                        "-1": a[g]
                    };
                    if (this._propsEase[g] === undefined) {
                        if (this._eases[m.ease] === undefined) {
                            i = this._convertEase(m.ease);
                            this._eases[m.ease] = i.css;
                            d = i.js
                        }
                        this._propsEase[g] = m.ease
                    } else {
                        if (this._eases[this._propsEase[g]] === undefined) {
                            i = this._convertEase(this._propsEase[g]);
                            this._eases[this._propsEase[g]] = i.css;
                            m.propsEase[g] = i.js
                        } else {
                            if (K(this._propsEase[g])) {
                                m.propsEase[g] = this._eases[this._propsEase[g]]["1"].toEasingFunction()
                            }
                        }
                    }
                }
            }
            m.ease = d;
            F.call(this, this._styles, c, this._propsTo, m);
            this.on("pause", this._onPaused);
            C(this._el, this._stylesTo);
            this._otherTransitions = z.getStyle(this._el, "transition").transition;
            if (this._otherTransitions === null || this._otherTransitions === "all 0s ease 0s") {
                this._otherTransitions = ""
            }
            this._completeStyles = R((m.yoyo) ? this._stylesFrom : this._stylesTo);
            this._completeStyles.transition = this._otherTransitions;
            if (m.removeStylesOnComplete !== undefined) {
                var j = m.removeStylesOnComplete;
                if (typeof j === "boolean" && j) {
                    for (g in this._stylesTo) {
                        this._completeStyles[g] = null
                    }
                } else {
                    if (typeof j === "object" && j.length) {
                        var b = j.length;
                        while (b--) {
                            this._completeStyles[j[b]] = null
                        }
                    }
                }
            }
        }
        var G = P.prototype = J(F.prototype);
        G.play = function() {
            var a = F.prototype.play.call(this);
            if (this._direction === 1 && this.getProgress() === 0 && this._remainingDelay !== 0) {
                this._applyStyles(0, R(this._stylesFrom))
            }
            return a
        };
        G.reset = function() {
            var a = F.prototype.reset.call(this);
            this._applyStyles(0, R(this._target));
            return a
        };
        G.destroy = function() {
            var a = F.prototype.destroy.call(this);
            E.off("changed", this._onVisibilityChanged);
            this._removeTransitionListener();
            this._el = null;
            this._propsArray = null;
            this._propsComplete = null;
            this._styles = null;
            this._stylesFrom = null;
            this._stylesTo = null;
            this._completeStyles = null;
            this._storeOnStart = null;
            this._storeOnComplete = null;
            this._onTransitionEnded = null;
            return a
        };
        G.getTarget = function() {
            return this._el
        };
        G.setProgress = function(b) {
            var a = F.prototype.setProgress.call(this, b);
            this._applyStyles(0, R(this._target));
            if (this.isPlaying()) {
                this._isWaitingForStylesToBeApplied = true;
                I(this._setStylesAfterWaiting, 2)
            }
            return a
        };
        G._convertEase = function(a) {
            var d;
            var b;
            if (K(a)) {
                d = B.create(a);
                b = d.toEasingFunction()
            } else {
                var c = D(a);
                if (c.cssString === null) {
                    throw new Error(N.replace(/%EASE%/g, a))
                }
                d = B.create(c.cssString);
                b = a
            }
            return {
                css: {
                    "1": d,
                    "-1": d.reversed()
                },
                js: b
            }
        };
        G._stop = function() {
            this._removeTransitionListener();
            F.prototype._stop.call(this)
        };
        G._complete = function() {
            if (this._isWaitingForStylesToBeApplied) {
                this._isWaitingForStylesToBeApplied = false;
                var a = R((this._direction > 0) ? this._stylesTo : this._stylesFrom);
                this._applyStyles(0, a);
                F.prototype._complete.call(this)
            } else {
                if (this._isComplete()) {
                    F.prototype._complete.call(this)
                } else {
                    this._el.addEventListener(M, this._onTransitionEnded)
                }
            }
        };
        G._onTransitionEnded = function() {
            this._removeTransitionListener();
            F.prototype._complete.call(this)
        };
        G._removeTransitionListener = function() {
            if (this._el && this._onTransitionEnded) {
                this._el.removeEventListener(M, this._onTransitionEnded)
            }
        };
        G._isComplete = function() {
            var c = z.getStyle.apply(this, [this._el].concat([this._propsArray]));
            c.transform = null;
            var b;
            var a;
            for (a in c) {
                if (c.hasOwnProperty(a) && c[a] !== null) {
                    b = this._propsComplete[a][this._direction];
                    if (c[a] !== b && this._el.style[a] !== b && String(O(c[a]).value) !== b) {
                        return false
                    }
                }
            }
            return true
        };
        G._applyStyles = function(a, f) {
            if (a > 0) {
                var d = this._otherTransitions + ((this._otherTransitions.length) ? ", " : "");
                var c = {};
                var b;
                for (b in this._eases) {
                    if (this._eases.hasOwnProperty(b)) {
                        c[b] = this._eases[b][this._direction].splitAt(this.getProgress()).toCSSString()
                    }
                }
                for (b in this._stylesTo) {
                    if (this._stylesTo.hasOwnProperty(b)) {
                        d += b + " " + a + "ms " + c[this._propsEase[b]] + " 0ms, "
                    }
                }
                f.transition = d.substr(0, d.length - 2)
            } else {
                f.transition = this._otherTransitions
            }
            z.setStyle(this._el, f)
        };
        G._setStylesAfterWaiting = function() {
            this._isWaitingForStylesToBeApplied = false;
            if (this.isPlaying()) {
                var a = this._duration * (1 - this.getProgress());
                var b = R((this._direction > 0) ? this._stylesTo : this._stylesFrom);
                this._applyStyles(a, b)
            }
        };
        G._prepareProperties = function() {
            this._onTransitionEnded = this._onTransitionEnded.bind(this);
            this._setStylesAfterWaiting = this._setStylesAfterWaiting.bind(this);
            this._onVisibilityChanged = this._onVisibilityChanged.bind(this);
            E.on(E.CHANGED, this._onVisibilityChanged);
            return F.prototype._prepareProperties.call(this)
        };
        G._onVisibilityChanged = function(a) {
            if (this.isPlaying() && !a.hiddenState) {
                this._update({
                    timeNow: this._getTime()
                });
                this.setProgress(this.getProgress())
            }
        };
        G._onPaused = function(b) {
            var a = z.getStyle.apply(this, [this._el].concat([this._propsArray]));
            a.transition = this._otherTransitions;
            z.setStyle(this._el, a)
        };
        G._onStart = function(b) {
            var a = (this._direction === 1 && this.getProgress() === 0 && this._delay === 0) ? 2 : 0;
            if (a) {
                this._isWaitingForStylesToBeApplied = true;
                this._applyStyles(0, R(this._stylesFrom))
            }
            I(this._setStylesAfterWaiting, a);
            if (typeof this._storeOnStart === "function") {
                this._storeOnStart.call(this, b)
            }
        };
        G._onComplete = function(a) {
            z.setStyle(this._el, this._completeStyles);
            if (typeof this._storeOnComplete === "function") {
                this._storeOnComplete.call(this, a)
            }
        };
        T.exports = P
    }, {
        "../helpers/BezierCurveCssManager": 186,
        "../helpers/PageVisibilityManager": 188,
        "../helpers/convertToStyleObject": 190,
        "../helpers/convertToTransitionableObjects": 191,
        "../helpers/isCssCubicBezierString": 194,
        "../helpers/removeTransitions": 195,
        "../helpers/splitUnits": 196,
        "../helpers/toCamCase": 197,
        "../helpers/transitionEnd": 198,
        "../helpers/waitAnimationFrames": 199,
        "./ClipEasing": 182,
        "ac-dom-styles": 120,
        "ac-easing": 153,
        "ac-object": 713
    }],
    185: [function(m, l, i) {
        var j = m("ac-easing").createBezier;

        function h(a, b) {
            this.manager = b;
            this.p1 = {
                x: a[0],
                y: a[1]
            };
            this.p2 = {
                x: a[2],
                y: a[3]
            };
            this._cacheSplits = {}
        }
        var k = h.prototype;
        k.splitAt = function(u) {
            if (u === 0) {
                return this
            } else {
                if (this._cacheSplits[u] !== undefined) {
                    return this._cacheSplits[u]
                }
            }
            var b = [this.p1.x, this.p2.x];
            var f = [this.p1.y, this.p2.y];
            var g = 0;
            var d = u;
            var w = 0;
            var c = 1;
            var v = this._getStartX(u, b);
            while (d !== v && g < 1000) {
                if (d < v) {
                    c = u
                } else {
                    w = u
                }
                u = w + ((c - w) * 0.5);
                v = this._getStartX(u, b);
                ++g
            }
            var t = this._splitBezier(u, b, f);
            var a = this._normalize(t);
            var x = this.manager.create(a);
            this._cacheSplits[d] = x;
            return x
        };
        k.reversed = function() {
            var a = this.toArray();
            return this.manager.create([0.5 - (a[2] - 0.5), 0.5 - (a[3] - 0.5), 0.5 - (a[0] - 0.5), 0.5 - (a[1] - 0.5)])
        };
        k.toArray = function() {
            var a = [this.p1.x, this.p1.y, this.p2.x, this.p2.y];
            return Array.prototype.slice.call(a)
        };
        k.toCSSString = function() {
            return "cubic-bezier(" + this.p1.x + ", " + this.p1.y + ", " + this.p2.x + ", " + this.p2.y + ")"
        };
        k.toEasingFunction = function() {
            return j.apply(this, this.toArray()).easingFunction
        };
        k._getStartX = function(a, g) {
            var b = a - 1;
            var c = a * a;
            var d = b * b;
            var f = c * a;
            return f - 3 * c * b * g[1] + 3 * a * d * g[0]
        };
        k._splitBezier = function(a, g, o) {
            var b = a - 1;
            var c = a * a;
            var d = b * b;
            var f = c * a;
            return [f - 3 * c * b * g[1] + 3 * a * d * g[0], f - 3 * c * b * o[1] + 3 * a * d * o[0], c - 2 * a * b * g[1] + d * g[0], c - 2 * a * b * o[1] + d * o[0], a - b * g[1], a - b * o[1]]
        };
        k._normalize = function(a) {
            return [(a[2] - a[0]) / (1 - a[0]), (a[3] - a[1]) / (1 - a[1]), (a[4] - a[0]) / (1 - a[0]), (a[5] - a[1]) / (1 - a[1])]
        };
        l.exports = h
    }, {
        "ac-easing": 153
    }],
    186: [function(m, l, i) {
        var h = m("./BezierCurveCss");

        function j() {
            this._instances = {}
        }
        var k = j.prototype;
        k.create = function(a) {
            var b;
            if (typeof a === "string") {
                b = a.replace(/ /g, "")
            } else {
                b = "cubic-bezier(" + a.join(",") + ")"
            }
            if (this._instances[b] === undefined) {
                if (typeof a === "string") {
                    a = a.match(/\d*\.?\d+/g);
                    var c = a.length;
                    while (c--) {
                        a[c] = Number(a[c])
                    }
                }
                this._instances[b] = new h(a, this)
            }
            return this._instances[b]
        };
        l.exports = new j()
    }, {
        "./BezierCurveCss": 185
    }],
    187: [function(d, g, f) {
        if (typeof window.Float32Array === "undefined") {
            window.Float32Array = function() {}
        }
    }, {}],
    188: [function(o, m, i) {
        var n = o("ac-object").create;
        var k = o("ac-event-emitter").EventEmitter;

        function j() {
            var a;
            if (typeof document.hidden !== "undefined") {
                this._hidden = "hidden";
                a = "visibilitychange"
            } else {
                if (typeof document.mozHidden !== "undefined") {
                    this._hidden = "mozHidden";
                    a = "mozvisibilitychange"
                } else {
                    if (typeof document.msHidden !== "undefined") {
                        this._hidden = "msHidden";
                        a = "msvisibilitychange"
                    } else {
                        if (typeof document.webkitHidden !== "undefined") {
                            this._hidden = "webkitHidden";
                            a = "webkitvisibilitychange"
                        }
                    }
                }
            }
            if (typeof document[this._hidden] === "undefined") {
                this.isHidden = false
            } else {
                this.isHidden = document[this._hidden]
            }
            document.addEventListener(a, this._handleVisibilityChange.bind(this), false)
        }
        var l = j.prototype = n(k.prototype);
        l.CHANGED = "changed";
        l._handleVisibilityChange = function(a) {
            this.isHidden = document[this._hidden];
            this.trigger(this.CHANGED, {
                hiddenState: this.isHidden
            })
        };
        m.exports = new j()
    }, {
        "ac-event-emitter": 174,
        "ac-object": 713
    }],
    189: [function(p, o, q) {
        var j = p("./splitUnits");
        var m = p("ac-dom-metrics");
        var k = {
            translateX: "width",
            translateY: "height"
        };

        function l(d, b, a) {
            this._transform = d;
            var c;
            var g;
            var f;
            for (f in a) {
                if (a.hasOwnProperty(f) && typeof this._transform[f] === "function") {
                    c = j(a[f]);
                    if (c.unit === "%") {
                        g = this._convertPercentToPixelValue(f, c.value, b)
                    } else {
                        g = c.value
                    }
                    this._transform[f].call(this._transform, g)
                }
            }
        }
        var n = l.prototype;
        n._convertPercentToPixelValue = function(a, b, c) {
            a = k[a];
            var d = m.getDimensions(c);
            if (d[a]) {
                b *= 0.01;
                return d[a] * b
            }
            return b
        };
        n.toArray = function() {
            return this._transform.toArray()
        };
        n.toCSSString = function() {
            return this._transform.toCSSString()
        };
        o.exports = l
    }, {
        "./splitUnits": 196,
        "ac-dom-metrics": 90
    }],
    190: [function(f, i, g) {
        i.exports = function h(b) {
            var c = {};
            var d;
            var a;
            for (a in b) {
                if (b.hasOwnProperty(a) && b[a] !== null) {
                    if (b[a].isColor) {
                        c[a] = "rgb(" + Math.round(b[a].r) + ", " + Math.round(b[a].g) + ", " + Math.round(b[a].b) + ")"
                    } else {
                        if (a === "transform") {
                            d = (b[a].length === 6) ? "matrix" : "matrix3d";
                            c[a] = d + "(" + b[a].join(",") + ")"
                        } else {
                            c[a] = b[a].value + b[a].unit
                        }
                    }
                }
            }
            return c
        }
    }, {}],
    191: [function(A, D, x) {
        var v = A("ac-object").clone;
        var z = A("./cssColorNames");
        var C = A("./splitUnits");
        var E = A("./toCamCase");
        var q = A("ac-color");
        var r = A("ac-dom-styles");
        var w = A("ac-feature");
        var y = A("ac-transform").Transform;
        var F = A("./TransformMatrix");
        var t = function(a) {
            if (z[a]) {
                a = z[a]
            } else {
                if (q.isHex(a)) {
                    a = q.hexToRgb(a)
                }
                a = q.rgbToObject(a)
            }
            a.isColor = true;
            return a
        };
        var u = function(a) {
            return [a[0], a[1], 0, 0, a[2], a[3], 0, 0, 0, 0, 1, 0, a[4], a[5], 0, 1]
        };
        D.exports = function B(k, d, f) {
            var i = {};
            d = v(d, true);
            f = v(f, true);
            var a;
            var c, h, g;
            var j = w.cssPropertyAvailable("transform");
            var b;
            for (b in d) {
                if (d.hasOwnProperty(b) && d[b] !== null) {
                    if (b === "transform") {
                        if (j) {
                            c = new y();
                            a = r.getStyle(k, "transform")["transform"] || "none";
                            c.setMatrixValue(a);
                            h = new F(new y(), k, d[b])
                        }
                        if (h && h.toCSSString() !== c.toCSSString()) {
                            g = new F(f[b] ? new y() : c.clone(), k, f[b]);
                            i[b] = c.toArray();
                            d[b] = h.toArray();
                            f[b] = g.toArray()
                        } else {
                            i[b] = null;
                            d[b] = null
                        }
                    } else {
                        a = r.getStyle(k, b)[E(b)] || f[b];
                        if (q.isColor(a)) {
                            i[b] = t(a);
                            f[b] = (f[b] !== undefined) ? t(f[b]) : v(i[b], true);
                            d[b] = t(d[b])
                        } else {
                            i[b] = C(a);
                            f[b] = (f[b] !== undefined) ? C(f[b]) : v(i[b], true);
                            d[b] = C(d[b])
                        }
                    }
                }
            }
            for (b in f) {
                if (f.hasOwnProperty(b) && f[b] !== null && (d[b] === undefined || d[b] === null)) {
                    if (b === "transform") {
                        if (j) {
                            c = new y();
                            c.setMatrixValue(getComputedStyle(k).transform || getComputedStyle(k).webkitTransform || "none");
                            g = new F(new y(), k, f[b])
                        }
                        if (g && g.toCSSString() !== c.toCSSString()) {
                            h = new F(c.clone());
                            i[b] = c.toArray();
                            d[b] = h.toArray();
                            f[b] = g.toArray()
                        } else {
                            i[b] = null;
                            d[b] = null;
                            f[b] = null
                        }
                    } else {
                        a = r.getStyle(k, b)[E(b)];
                        if (q.isColor(a)) {
                            i[b] = t(a);
                            d[b] = v(i[b], true);
                            f[b] = t(f[b])
                        } else {
                            i[b] = C(a);
                            f[b] = C(f[b]);
                            d[b] = v(i[b], true)
                        }
                    }
                }
            }
            if (i.transform) {
                if (i.transform.length === 16 || f.transform.length === 16 || d.transform.length === 16) {
                    if (i.transform.length === 6) {
                        i.transform = u(i.transform)
                    }
                    if (f.transform.length === 6) {
                        f.transform = u(f.transform)
                    }
                    if (d.transform.length === 6) {
                        d.transform = u(d.transform)
                    }
                }
            }
            return {
                target: i,
                propsTo: d,
                propsFrom: f
            }
        }
    }, {
        "./TransformMatrix": 189,
        "./cssColorNames": 192,
        "./splitUnits": 196,
        "./toCamCase": 197,
        "ac-color": 161,
        "ac-dom-styles": 120,
        "ac-feature": 213,
        "ac-object": 713,
        "ac-transform": 177
    }],
    192: [function(f, h, g) {
        var i = {
            aqua: {
                r: 0,
                g: 255,
                b: 255
            },
            aliceblue: {
                r: 240,
                g: 248,
                b: 255
            },
            antiquewhite: {
                r: 250,
                g: 235,
                b: 215
            },
            black: {
                r: 0,
                g: 0,
                b: 0
            },
            blue: {
                r: 0,
                g: 0,
                b: 255
            },
            cyan: {
                r: 0,
                g: 255,
                b: 255
            },
            darkblue: {
                r: 0,
                g: 0,
                b: 139
            },
            darkcyan: {
                r: 0,
                g: 139,
                b: 139
            },
            darkgreen: {
                r: 0,
                g: 100,
                b: 0
            },
            darkturquoise: {
                r: 0,
                g: 206,
                b: 209
            },
            deepskyblue: {
                r: 0,
                g: 191,
                b: 255
            },
            green: {
                r: 0,
                g: 128,
                b: 0
            },
            lime: {
                r: 0,
                g: 255,
                b: 0
            },
            mediumblue: {
                r: 0,
                g: 0,
                b: 205
            },
            mediumspringgreen: {
                r: 0,
                g: 250,
                b: 154
            },
            navy: {
                r: 0,
                g: 0,
                b: 128
            },
            springgreen: {
                r: 0,
                g: 255,
                b: 127
            },
            teal: {
                r: 0,
                g: 128,
                b: 128
            },
            midnightblue: {
                r: 25,
                g: 25,
                b: 112
            },
            dodgerblue: {
                r: 30,
                g: 144,
                b: 255
            },
            lightseagreen: {
                r: 32,
                g: 178,
                b: 170
            },
            forestgreen: {
                r: 34,
                g: 139,
                b: 34
            },
            seagreen: {
                r: 46,
                g: 139,
                b: 87
            },
            darkslategray: {
                r: 47,
                g: 79,
                b: 79
            },
            darkslategrey: {
                r: 47,
                g: 79,
                b: 79
            },
            limegreen: {
                r: 50,
                g: 205,
                b: 50
            },
            mediumseagreen: {
                r: 60,
                g: 179,
                b: 113
            },
            turquoise: {
                r: 64,
                g: 224,
                b: 208
            },
            royalblue: {
                r: 65,
                g: 105,
                b: 225
            },
            steelblue: {
                r: 70,
                g: 130,
                b: 180
            },
            darkslateblue: {
                r: 72,
                g: 61,
                b: 139
            },
            mediumturquoise: {
                r: 72,
                g: 209,
                b: 204
            },
            indigo: {
                r: 75,
                g: 0,
                b: 130
            },
            darkolivegreen: {
                r: 85,
                g: 107,
                b: 47
            },
            cadetblue: {
                r: 95,
                g: 158,
                b: 160
            },
            cornflowerblue: {
                r: 100,
                g: 149,
                b: 237
            },
            mediumaquamarine: {
                r: 102,
                g: 205,
                b: 170
            },
            dimgray: {
                r: 105,
                g: 105,
                b: 105
            },
            dimgrey: {
                r: 105,
                g: 105,
                b: 105
            },
            slateblue: {
                r: 106,
                g: 90,
                b: 205
            },
            olivedrab: {
                r: 107,
                g: 142,
                b: 35
            },
            slategray: {
                r: 112,
                g: 128,
                b: 144
            },
            slategrey: {
                r: 112,
                g: 128,
                b: 144
            },
            lightslategray: {
                r: 119,
                g: 136,
                b: 153
            },
            lightslategrey: {
                r: 119,
                g: 136,
                b: 153
            },
            mediumslateblue: {
                r: 123,
                g: 104,
                b: 238
            },
            lawngreen: {
                r: 124,
                g: 252,
                b: 0
            },
            aquamarine: {
                r: 127,
                g: 255,
                b: 212
            },
            chartreuse: {
                r: 127,
                g: 255,
                b: 0
            },
            gray: {
                r: 128,
                g: 128,
                b: 128
            },
            grey: {
                r: 128,
                g: 128,
                b: 128
            },
            maroon: {
                r: 128,
                g: 0,
                b: 0
            },
            olive: {
                r: 128,
                g: 128,
                b: 0
            },
            purple: {
                r: 128,
                g: 0,
                b: 128
            },
            lightskyblue: {
                r: 135,
                g: 206,
                b: 250
            },
            skyblue: {
                r: 135,
                g: 206,
                b: 235
            },
            blueviolet: {
                r: 138,
                g: 43,
                b: 226
            },
            darkmagenta: {
                r: 139,
                g: 0,
                b: 139
            },
            darkred: {
                r: 139,
                g: 0,
                b: 0
            },
            saddlebrown: {
                r: 139,
                g: 69,
                b: 19
            },
            darkseagreen: {
                r: 143,
                g: 188,
                b: 143
            },
            lightgreen: {
                r: 144,
                g: 238,
                b: 144
            },
            mediumpurple: {
                r: 147,
                g: 112,
                b: 219
            },
            darkviolet: {
                r: 148,
                g: 0,
                b: 211
            },
            palegreen: {
                r: 152,
                g: 251,
                b: 152
            },
            darkorchid: {
                r: 153,
                g: 50,
                b: 204
            },
            yellowgreen: {
                r: 154,
                g: 205,
                b: 50
            },
            sienna: {
                r: 160,
                g: 82,
                b: 45
            },
            brown: {
                r: 165,
                g: 42,
                b: 42
            },
            darkgray: {
                r: 169,
                g: 169,
                b: 169
            },
            darkgrey: {
                r: 169,
                g: 169,
                b: 169
            },
            greenyellow: {
                r: 173,
                g: 255,
                b: 47
            },
            lightblue: {
                r: 173,
                g: 216,
                b: 230
            },
            paleturquoise: {
                r: 175,
                g: 238,
                b: 238
            },
            lightsteelblue: {
                r: 176,
                g: 196,
                b: 222
            },
            powderblue: {
                r: 176,
                g: 224,
                b: 230
            },
            firebrick: {
                r: 178,
                g: 34,
                b: 34
            },
            darkgoldenrod: {
                r: 184,
                g: 134,
                b: 11
            },
            mediumorchid: {
                r: 186,
                g: 85,
                b: 211
            },
            rosybrown: {
                r: 188,
                g: 143,
                b: 143
            },
            darkkhaki: {
                r: 189,
                g: 183,
                b: 107
            },
            silver: {
                r: 192,
                g: 192,
                b: 192
            },
            mediumvioletred: {
                r: 199,
                g: 21,
                b: 133
            },
            indianred: {
                r: 205,
                g: 92,
                b: 92
            },
            peru: {
                r: 205,
                g: 133,
                b: 63
            },
            chocolate: {
                r: 210,
                g: 105,
                b: 30
            },
            tan: {
                r: 210,
                g: 180,
                b: 140
            },
            lightgray: {
                r: 211,
                g: 211,
                b: 211
            },
            lightgrey: {
                r: 211,
                g: 211,
                b: 211
            },
            thistle: {
                r: 216,
                g: 191,
                b: 216
            },
            goldenrod: {
                r: 218,
                g: 165,
                b: 32
            },
            orchid: {
                r: 218,
                g: 112,
                b: 214
            },
            palevioletred: {
                r: 219,
                g: 112,
                b: 147
            },
            crimson: {
                r: 220,
                g: 20,
                b: 60
            },
            gainsboro: {
                r: 220,
                g: 220,
                b: 220
            },
            plum: {
                r: 221,
                g: 160,
                b: 221
            },
            burlywood: {
                r: 222,
                g: 184,
                b: 135
            },
            lightcyan: {
                r: 224,
                g: 255,
                b: 255
            },
            lavender: {
                r: 230,
                g: 230,
                b: 250
            },
            darksalmon: {
                r: 233,
                g: 150,
                b: 122
            },
            palegoldenrod: {
                r: 238,
                g: 232,
                b: 170
            },
            violet: {
                r: 238,
                g: 130,
                b: 238
            },
            azure: {
                r: 240,
                g: 255,
                b: 255
            },
            honeydew: {
                r: 240,
                g: 255,
                b: 240
            },
            khaki: {
                r: 240,
                g: 230,
                b: 140
            },
            lightcoral: {
                r: 240,
                g: 128,
                b: 128
            },
            sandybrown: {
                r: 244,
                g: 164,
                b: 96
            },
            beige: {
                r: 245,
                g: 245,
                b: 220
            },
            mintcream: {
                r: 245,
                g: 255,
                b: 250
            },
            wheat: {
                r: 245,
                g: 222,
                b: 179
            },
            whitesmoke: {
                r: 245,
                g: 245,
                b: 245
            },
            ghostwhite: {
                r: 248,
                g: 248,
                b: 255
            },
            lightgoldenrodyellow: {
                r: 250,
                g: 250,
                b: 210
            },
            linen: {
                r: 250,
                g: 240,
                b: 230
            },
            salmon: {
                r: 250,
                g: 128,
                b: 114
            },
            oldlace: {
                r: 253,
                g: 245,
                b: 230
            },
            bisque: {
                r: 255,
                g: 228,
                b: 196
            },
            blanchedalmond: {
                r: 255,
                g: 235,
                b: 205
            },
            coral: {
                r: 255,
                g: 127,
                b: 80
            },
            cornsilk: {
                r: 255,
                g: 248,
                b: 220
            },
            darkorange: {
                r: 255,
                g: 140,
                b: 0
            },
            deeppink: {
                r: 255,
                g: 20,
                b: 147
            },
            floralwhite: {
                r: 255,
                g: 250,
                b: 240
            },
            fuchsia: {
                r: 255,
                g: 0,
                b: 255
            },
            gold: {
                r: 255,
                g: 215,
                b: 0
            },
            hotpink: {
                r: 255,
                g: 105,
                b: 180
            },
            ivory: {
                r: 255,
                g: 255,
                b: 240
            },
            lavenderblush: {
                r: 255,
                g: 240,
                b: 245
            },
            lemonchiffon: {
                r: 255,
                g: 250,
                b: 205
            },
            lightpink: {
                r: 255,
                g: 182,
                b: 193
            },
            lightsalmon: {
                r: 255,
                g: 160,
                b: 122
            },
            lightyellow: {
                r: 255,
                g: 255,
                b: 224
            },
            magenta: {
                r: 255,
                g: 0,
                b: 255
            },
            mistyrose: {
                r: 255,
                g: 228,
                b: 225
            },
            moccasin: {
                r: 255,
                g: 228,
                b: 181
            },
            navajowhite: {
                r: 255,
                g: 222,
                b: 173
            },
            orange: {
                r: 255,
                g: 165,
                b: 0
            },
            orangered: {
                r: 255,
                g: 69,
                b: 0
            },
            papayawhip: {
                r: 255,
                g: 239,
                b: 213
            },
            peachpuff: {
                r: 255,
                g: 218,
                b: 185
            },
            pink: {
                r: 255,
                g: 192,
                b: 203
            },
            red: {
                r: 255,
                g: 0,
                b: 0
            },
            seashell: {
                r: 255,
                g: 245,
                b: 238
            },
            snow: {
                r: 255,
                g: 250,
                b: 250
            },
            tomato: {
                r: 255,
                g: 99,
                b: 71
            },
            white: {
                r: 255,
                g: 255,
                b: 255
            },
            yellow: {
                r: 255,
                g: 255,
                b: 0
            },
            rebeccapurple: {
                r: 102,
                g: 51,
                b: 153
            }
        };
        h.exports = i
    }, {}],
    193: [function(f, i, g) {
        i.exports = function h(d) {
            if (d.transitionProperty) {
                var a = "";
                var n = d.transitionProperty.split(", ");
                var c = d.transitionDuration.split(", ");
                var b = d.transitionTimingFunction.replace(/\d+[,]+[\s]/gi, function(j) {
                    return j.substr(0, j.length - 1)
                }).split(", ");
                var p = d.transitionDelay.split(", ");
                var o = n.length;
                while (o--) {
                    a += n[o] + " " + c[o] + " " + b[o] + " " + p[o] + ", "
                }
                return a.substr(0, a.length - 2)
            }
            return false
        }
    }, {}],
    194: [function(i, h, f) {
        h.exports = function g(a) {
            return typeof a === "string" && a.substr(0, 13) === "cubic-bezier("
        }
    }, {}],
    195: [function(m, l, h) {
        var j = m("./getShorthandTransition");
        var k = m("ac-dom-styles");
        l.exports = function i(c, a) {
            var b = k.getStyle(c, "transition", "transition-property", "transition-duration", "transition-timing-function", "transition-delay");
            b = b.transition || j(b);
            if (b && b.length) {
                b = b.split(",");
                var d = 0;
                var g;
                var f = b.length;
                while (f--) {
                    g = b[f].trim().split(" ")[0];
                    if (a[g] !== undefined) {
                        b.splice(f, 1);
                        ++d
                    }
                }
                if (d) {
                    if (b.length === 0) {
                        b = ["all"]
                    }
                    k.setStyle(c, {
                        transition: b.join(",").trim()
                    })
                }
            }
        }
    }, {
        "./getShorthandTransition": 193,
        "ac-dom-styles": 120
    }],
    196: [function(i, h, f) {
        h.exports = function g(a) {
            a = String(a);
            if (a.indexOf(" ") > -1) {
                throw new Error("Shorthand CSS is not supported. Please use longhand CSS only.")
            }
            var b = /(\d*\.?\d*)(.*)/;
            var d = 1;
            if (a && a.substr(0, 1) === "-") {
                a = a.substr(1);
                d = -1
            }
            var c = String(a).match(b);
            return {
                value: Number(c[1]) * d,
                unit: c[2]
            }
        }
    }, {}],
    197: [function(i, h, f) {
        h.exports = function g(a) {
            var b = function(l, d, c, m) {
                return (c === 0) && (m.substr(1, 3) !== "moz") ? d : d.toUpperCase()
            };
            return a.replace(/-(\w)/g, b)
        }
    }, {}],
    198: [function(j, i, k) {
        var h;
        i.exports = (function g() {
            if (h) {
                return h
            }
            var c;
            var b = document.createElement("fakeelement");
            var a = {
                transition: "transitionend",
                OTransition: "oTransitionEnd",
                MozTransition: "transitionend",
                WebkitTransition: "webkitTransitionEnd"
            };
            for (c in a) {
                if (b.style[c] !== undefined) {
                    h = a[c];
                    return h
                }
            }
        })()
    }, {}],
    199: [function(j, i, g) {
        var h = j("./PageVisibilityManager");
        i.exports = function k(a, c) {
            if (c) {
                var b = function(m) {
                    if (h.isHidden) {
                        setTimeout(m, 16)
                    } else {
                        window.requestAnimationFrame(m)
                    }
                };
                var d = 0;
                var f = function() {
                    if (d === c) {
                        a.call(this)
                    } else {
                        ++d;
                        b(f)
                    }
                };
                f()
            } else {
                a.call(this)
            }
        }
    }, {
        "./PageVisibilityManager": 188
    }],
    200: [function(d, g, f) {
        g.exports = {
            EventEmitterMicro: d("./ac-event-emitter-micro/EventEmitterMicro")
        }
    }, {
        "./ac-event-emitter-micro/EventEmitterMicro": 201
    }],
    201: [function(g, k, h) {
        function i() {
            this._events = {}
        }
        var j = i.prototype;
        j.on = function(b, a) {
            this._events[b] = this._events[b] || [];
            this._events[b].push(a)
        };
        j.once = function(d, a) {
            var b = this;

            function c(f) {
                b.off(d, c);
                if (f !== undefined) {
                    a(f)
                } else {
                    a()
                }
            }
            this.on(d, c)
        };
        j.off = function(b, a) {
            if (b in this._events === false) {
                return
            }
            this._events[b].splice(this._events[b].indexOf(a), 1)
        };
        j.trigger = function(c, a) {
            if (c in this._events === false) {
                return
            }
            for (var b = 0; b < this._events[c].length; b++) {
                if (a !== undefined) {
                    this._events[c][b](a)
                } else {
                    this._events[c][b]()
                }
            }
        };
        j.destroy = function() {
            for (var a in this._events) {
                this._events[a] = null
            }
            this._events = null
        };
        k.exports = i
    }, {}],
    202: [function(d, g, f) {
        g.exports = {
            EventEmitter: d("./ac-event-emitter/EventEmitter")
        }
    }, {
        "./ac-event-emitter/EventEmitter": 203
    }],
    203: [function(u, v, t) {
        var q = "EventEmitter:propagation";
        var m = function(a) {
            if (a) {
                this.context = a
            }
        };
        var r = m.prototype;
        var p = function() {
            if (!this.hasOwnProperty("_events") && typeof this._events !== "object") {
                this._events = {}
            }
            return this._events
        };
        var o = function(a) {
            if (typeof Array.isArray === "function") {
                return Array.isArray(a)
            }
            return Object.prototype.toString.call(a) === "[object Array]"
        };
        var x = function(i, d) {
            var f = i[0];
            var b = i[1];
            var g = i[2];
            var a;
            var c;
            var h;
            if ((typeof f !== "string" && typeof f !== "object") || f === null || o(f)) {
                throw new TypeError("Expecting event name to be a string or object.")
            }
            if ((typeof f === "string") && !b) {
                throw new Error("Expecting a callback function to be provided.")
            }
            if (b && (typeof b !== "function")) {
                if (typeof f === "object" && typeof b === "object") {
                    g = b
                } else {
                    throw new TypeError("Expecting callback to be a function.")
                }
            }
            d.call(this, f, b, g)
        };
        var n = function(c, b, f) {
            var a;
            var g;
            var d;
            a = p.call(this)[c];
            if (!a || a.length === 0) {
                return
            }
            a = a.slice();
            this._stoppedImmediatePropagation = false;
            for (g = 0, d = a.length; g < d; g += 1) {
                if (this._stoppedImmediatePropagation || b.call(f, a[g], g)) {
                    break
                }
            }
        };
        var w = function(d, c, b) {
            var a = -1;
            n.call(this, c, function(f, g) {
                if (f.callback === b) {
                    a = g;
                    return true
                }
            });
            if (a === -1) {
                return
            }
            d[c].splice(a, 1)
        };
        r.on = function() {
            var a = p.call(this);
            x.call(this, arguments, function(c, b, d) {
                a[c] = a[c] || (a[c] = []);
                a[c].push({
                    callback: b,
                    context: d
                })
            });
            return this
        };
        r.once = function() {
            x.call(this, arguments, function(d, b, a) {
                var c = function(f) {
                    b.call(a || this, f);
                    this.off(d, c)
                };
                this.on(d, c, this)
            });
            return this
        };
        r.off = function(c, b) {
            var f = p.call(this);
            var a;
            var g;
            var d;
            var h;
            if (arguments.length === 0) {
                this._events = {}
            } else {
                if (!c || (typeof c !== "string" && typeof c !== "object") || Array.isArray(c)) {
                    throw new TypeError("Expecting event name to be a string or object.")
                }
            }
            if (typeof c === "object") {
                for (a in c) {
                    if (c.hasOwnProperty(a)) {
                        w.call(this, f, a, c[a])
                    }
                }
            }
            if (typeof c === "string") {
                g = c.split(" ");
                if (g.length === 1) {
                    if (b) {
                        w.call(this, f, c, b)
                    } else {
                        f[c] = []
                    }
                } else {
                    for (h = 0, d = g.length; h < d; h += 1) {
                        f[g[h]] = []
                    }
                }
            }
            return this
        };
        r.trigger = function(c, b, h) {
            var g;
            var d;
            var a;
            var f;
            if (!c) {
                throw new Error("trigger method requires an event name")
            }
            if (typeof c !== "string") {
                throw new TypeError("Expecting event names to be a string.")
            }
            if (h && typeof h !== "boolean") {
                throw new TypeError("Expecting doNotPropagate to be a boolean.")
            }
            c = c.split(" ");
            for (f = 0, d = c.length; f < d; f += 1) {
                a = c[f];
                n.call(this, a, function(i) {
                    i.callback.call(i.context || this.context || this, b)
                }, this);
                if (!h) {
                    g = a;
                    n.call(this, q, function(i) {
                        if (i.prefix) {
                            g = i.prefix + g
                        }
                        i.emitter.trigger(g, b)
                    })
                }
            }
            return this
        };
        r.propagateTo = function(c, b) {
            var a = p.call(this);
            if (!a[q]) {
                this._events[q] = []
            }
            a[q].push({
                emitter: c,
                prefix: b
            })
        };
        r.stopPropagatingTo = function(c) {
            var f = p.call(this);
            if (!c) {
                f[q] = [];
                return
            }
            var b = f[q];
            var d = b.length;
            var a;
            for (a = 0; a < d; a += 1) {
                if (b[a].emitter === c) {
                    b.splice(a, 1);
                    break
                }
            }
        };
        r.stopImmediatePropagation = function() {
            this._stoppedImmediatePropagation = true
        };
        r.has = function(j, i, g) {
            var h = p.call(this);
            var b = h[j];
            var a;
            var c;
            var f;
            var d;
            var k;
            if (arguments.length === 0) {
                d = [];
                for (k in h) {
                    if (h.hasOwnProperty(k)) {
                        d.push(k)
                    }
                }
                return d
            }
            if (!b) {
                return false
            }
            if (!i) {
                return (b.length > 0) ? true : false
            }
            for (c = 0, f = b.length; c < f; c += 1) {
                a = b[c];
                if ((g && i && a.context === g && a.callback === i) || (i && !g && a.callback === i)) {
                    return true
                }
            }
            return false
        };
        v.exports = m
    }, {}],
    204: [function(h, m, i) {
        var j = h("./helpers/globals");
        var k = h("ac-function/once");
        var l = function() {
            var b = j.getDocument();
            var a = b.createElement("canvas");
            return !!(typeof a.getContext === "function" && a.getContext("2d"))
        };
        m.exports = k(l);
        m.exports.original = l
    }, {
        "./helpers/globals": 212,
        "ac-function/once": 225
    }],
    205: [function(o, n, i) {
        var k = o("ac-browser");
        var j = o("./touchAvailable").original;
        var m = o("ac-function/once");

        function l() {
            return (!j() || (k.os === "iOS" && k.version >= 8) || k.name === "Chrome")
        }
        n.exports = m(l);
        n.exports.original = l
    }, {
        "./touchAvailable": 240,
        "ac-browser": 220,
        "ac-function/once": 225
    }],
    206: [function(m, l, h) {
        var j = m("./helpers/globals");
        var k = m("ac-function/once");

        function i() {
            var a = false;
            var d = j.getDocument();
            var b = j.getNavigator();
            try {
                if ("cookie" in d && !!b.cookieEnabled) {
                    d.cookie = "ac_feature_cookie=1";
                    a = (d.cookie.indexOf("ac_feature_cookie") !== -1);
                    d.cookie = "ac_feature_cookie=; expires=Thu, 01 Jan 1970 00:00:01 GMT;"
                }
            } catch (c) {}
            return a
        }
        l.exports = k(i);
        l.exports.original = i
    }, {
        "./helpers/globals": 212,
        "ac-function/once": 225
    }],
    207: [function(m, l, h) {
        var j = m("ac-prefixer/getStyleValue");
        var k = m("ac-function/once");

        function i() {
            var a = ["linear-gradient(to bottom right, #9f9, white)", "linear-gradient(top left, #9f9, white)", "gradient(linear, left top, right bottom, from(#9f9), to(white))"];
            return a.some(function(b) {
                return !!j("background-image", b)
            })
        }
        l.exports = k(i);
        l.exports.original = i
    }, {
        "ac-function/once": 225,
        "ac-prefixer/getStyleValue": 228
    }],
    208: [function(o, n, i) {
        var l = o("ac-prefixer/getStyleValue");
        var m = o("ac-prefixer/getStyleProperty");
        var k = o("ac-function/memoize");

        function j(a, b) {
            if (typeof b !== "undefined") {
                return !!l(a, b)
            } else {
                return !!m(a)
            }
        }
        n.exports = k(j);
        n.exports.original = j
    }, {
        "ac-function/memoize": 224,
        "ac-prefixer/getStyleProperty": 227,
        "ac-prefixer/getStyleValue": 228
    }],
    209: [function(h, m, i) {
        var k = h("ac-prefixer/getStyleValue");
        var l = h("ac-function/once");

        function j() {
            return !!k("margin", "1vw 1vh")
        }
        m.exports = l(j);
        m.exports.original = j
    }, {
        "ac-function/once": 225,
        "ac-prefixer/getStyleValue": 228
    }],
    210: [function(h, l, i) {
        var k = h("./helpers/globals");
        var j = h("ac-function/memoize");

        function m(d, b) {
            var c = k.getDocument();
            var a;
            b = b || "div";
            a = c.createElement(b);
            return (d in a)
        }
        l.exports = j(m);
        l.exports.original = m
    }, {
        "./helpers/globals": 212,
        "ac-function/memoize": 224
    }],
    211: [function(m, k, h) {
        var i = m("ac-prefixer/getEventType");
        var j = m("ac-function/memoize");

        function l(a, b) {
            return !!i(a, b)
        }
        k.exports = j(l);
        k.exports.original = l
    }, {
        "ac-function/memoize": 224,
        "ac-prefixer/getEventType": 226
    }],
    212: [function(d, g, f) {
        g.exports = {
            getWindow: function() {
                return window
            },
            getDocument: function() {
                return document
            },
            getNavigator: function() {
                return navigator
            }
        }
    }, {}],
    213: [function(d, g, f) {
        g.exports = {
            canvasAvailable: d("./canvasAvailable"),
            continuousScrollEventsAvailable: d("./continuousScrollEventsAvailable"),
            cookiesAvailable: d("./cookiesAvailable"),
            cssLinearGradientAvailable: d("./cssLinearGradientAvailable"),
            cssPropertyAvailable: d("./cssPropertyAvailable"),
            cssViewportUnitsAvailable: d("./cssViewportUnitsAvailable"),
            elementAttributeAvailable: d("./elementAttributeAvailable"),
            eventTypeAvailable: d("./eventTypeAvailable"),
            isDesktop: d("./isDesktop"),
            isHandheld: d("./isHandheld"),
            isRetina: d("./isRetina"),
            isTablet: d("./isTablet"),
            localStorageAvailable: d("./localStorageAvailable"),
            mediaElementsAvailable: d("./mediaElementsAvailable"),
            sessionStorageAvailable: d("./sessionStorageAvailable"),
            svgAvailable: d("./svgAvailable"),
            threeDTransformsAvailable: d("./threeDTransformsAvailable"),
            touchAvailable: d("./touchAvailable"),
            webGLAvailable: d("./webGLAvailable")
        }
    }, {
        "./canvasAvailable": 204,
        "./continuousScrollEventsAvailable": 205,
        "./cookiesAvailable": 206,
        "./cssLinearGradientAvailable": 207,
        "./cssPropertyAvailable": 208,
        "./cssViewportUnitsAvailable": 209,
        "./elementAttributeAvailable": 210,
        "./eventTypeAvailable": 211,
        "./isDesktop": 214,
        "./isHandheld": 215,
        "./isRetina": 216,
        "./isTablet": 217,
        "./localStorageAvailable": 218,
        "./mediaElementsAvailable": 219,
        "./sessionStorageAvailable": 237,
        "./svgAvailable": 238,
        "./threeDTransformsAvailable": 239,
        "./touchAvailable": 240,
        "./webGLAvailable": 241
    }],
    214: [function(n, m, i) {
        var j = n("./touchAvailable").original;
        var k = n("./helpers/globals");
        var l = n("ac-function/once");

        function o() {
            var a = k.getWindow();
            return (!j() && !a.orientation)
        }
        m.exports = l(o);
        m.exports.original = o
    }, {
        "./helpers/globals": 212,
        "./touchAvailable": 240,
        "ac-function/once": 225
    }],
    215: [function(m, l, o) {
        var n = m("./isDesktop").original;
        var j = m("./isTablet").original;
        var k = m("ac-function/once");

        function i() {
            return (!n() && !j())
        }
        l.exports = k(i);
        l.exports.original = i
    }, {
        "./isDesktop": 214,
        "./isTablet": 217,
        "ac-function/once": 225
    }],
    216: [function(g, k, h) {
        var j = g("./helpers/globals");
        k.exports = function i() {
            var a = j.getWindow();
            return ("devicePixelRatio" in a && a.devicePixelRatio >= 1.5)
        }
    }, {
        "./helpers/globals": 212
    }],
    217: [function(n, m, i) {
        var o = n("./isDesktop").original;
        var k = n("./helpers/globals");
        var l = n("ac-function/once");

        function j() {
            var a = k.getWindow();
            var b = a.screen.width;
            if (a.orientation && a.screen.height < b) {
                b = a.screen.height
            }
            return (!o() && b >= 600)
        }
        m.exports = l(j);
        m.exports.original = j
    }, {
        "./helpers/globals": 212,
        "./isDesktop": 214,
        "ac-function/once": 225
    }],
    218: [function(m, l, i) {
        var j = m("./helpers/globals");
        var k = m("ac-function/once");

        function h() {
            var a = j.getWindow();
            var b = false;
            try {
                b = !!(a.localStorage && a.localStorage.non_existent !== null)
            } catch (c) {}
            return b
        }
        l.exports = k(h);
        l.exports.original = h
    }, {
        "./helpers/globals": 212,
        "ac-function/once": 225
    }],
    219: [function(h, m, i) {
        var j = h("./helpers/globals");
        var l = h("ac-function/once");

        function k() {
            var a = j.getWindow();
            return ("HTMLMediaElement" in a)
        }
        m.exports = l(k);
        m.exports.original = k
    }, {
        "./helpers/globals": 212,
        "ac-function/once": 225
    }],
    220: [function(d, g, f) {
        arguments[4][9][0].apply(f, arguments)
    }, {
        "./ac-browser/BrowserData": 221,
        "./ac-browser/IE": 222,
        dup: 9
    }],
    221: [function(g, k, h) {
        var j = g("./data");

        function i() {}
        i.prototype = {
            __getBrowserVersion: function(c, b) {
                var d;
                if (!c || !b) {
                    return
                }
                var a = j.browser.filter(function(f) {
                    return f.identity === b
                });
                a.some(function(f) {
                    var o = f.versionSearch || b;
                    var n = c.indexOf(o);
                    if (n > -1) {
                        d = parseFloat(c.substring(n + o.length + 1));
                        return true
                    }
                });
                return d
            },
            __getName: function(a) {
                return this.__getIdentityStringFromArray(a)
            },
            __getIdentity: function(a) {
                if (a.string) {
                    return this.__matchSubString(a)
                } else {
                    if (a.prop) {
                        return a.identity
                    }
                }
            },
            __getIdentityStringFromArray: function(d) {
                for (var a = 0, c = d.length, b; a < c; a++) {
                    b = this.__getIdentity(d[a]);
                    if (b) {
                        return b
                    }
                }
            },
            __getOS: function(a) {
                return this.__getIdentityStringFromArray(a)
            },
            __getOSVersion: function(d, a) {
                if (!d || !a) {
                    return
                }
                var b = j.os.filter(function(l) {
                    return l.identity === a
                })[0];
                var m = b.versionSearch || a;
                var c = new RegExp(m + " ([\\d_\\.]+)", "i");
                var f = d.match(c);
                if (f !== null) {
                    return f[1].replace(/_/g, ".")
                }
            },
            __matchSubString: function(b) {
                var c = b.subString;
                if (c) {
                    var a = c.test ? !!c.test(b.string) : b.string.indexOf(c) > -1;
                    if (a) {
                        return b.identity
                    }
                }
            }
        };
        i.create = function() {
            var b = new i();
            var a = {};
            a.name = b.__getName(j.browser);
            a.version = b.__getBrowserVersion(j.versionString, a.name);
            a.os = b.__getOS(j.os);
            a.osVersion = b.__getOSVersion(j.versionString, a.os);
            return a
        };
        k.exports = i
    }, {
        "./data": 223
    }],
    222: [function(d, g, f) {
        arguments[4][7][0].apply(f, arguments)
    }, {
        dup: 7
    }],
    223: [function(d, g, f) {
        arguments[4][8][0].apply(f, arguments)
    }, {
        dup: 8
    }],
    224: [function(k, j, g) {
        var h = function() {
            var a = "";
            var b;
            for (b = 0; b < arguments.length; b++) {
                if (b > 0) {
                    a += ","
                }
                a += arguments[b]
            }
            return a
        };
        j.exports = function i(a, b) {
            b = b || h;
            var c = function() {
                var f = arguments;
                var d = b.apply(this, f);
                if (!(d in c.cache)) {
                    c.cache[d] = a.apply(this, f)
                }
                return c.cache[d]
            };
            c.cache = {};
            return c
        }
    }, {}],
    225: [function(f, i, g) {
        i.exports = function h(a) {
            var b;
            return function() {
                if (typeof b === "undefined") {
                    b = a.apply(this, arguments)
                }
                return b
            }
        }
    }, {}],
    226: [function(d, g, f) {
        arguments[4][68][0].apply(f, arguments)
    }, {
        "./shared/camelCasedEventTypes": 229,
        "./shared/prefixHelper": 231,
        "./utils/eventTypeAvailable": 234,
        dup: 68
    }],
    227: [function(d, g, f) {
        arguments[4][123][0].apply(f, arguments)
    }, {
        "./shared/getStyleTestElement": 230,
        "./shared/prefixHelper": 231,
        "./shared/stylePropertyCache": 232,
        "./utils/toCSS": 235,
        "./utils/toDOM": 236,
        dup: 123
    }],
    228: [function(d, g, f) {
        arguments[4][124][0].apply(f, arguments)
    }, {
        "./getStyleProperty": 227,
        "./shared/prefixHelper": 231,
        "./shared/stylePropertyCache": 232,
        "./shared/styleValueAvailable": 233,
        dup: 124
    }],
    229: [function(d, g, f) {
        arguments[4][69][0].apply(f, arguments)
    }, {
        dup: 69
    }],
    230: [function(d, g, f) {
        arguments[4][125][0].apply(f, arguments)
    }, {
        dup: 125
    }],
    231: [function(d, g, f) {
        arguments[4][70][0].apply(f, arguments)
    }, {
        dup: 70
    }],
    232: [function(d, g, f) {
        arguments[4][127][0].apply(f, arguments)
    }, {
        dup: 127
    }],
    233: [function(d, g, f) {
        arguments[4][128][0].apply(f, arguments)
    }, {
        "./getStyleTestElement": 230,
        "./stylePropertyCache": 232,
        dup: 128
    }],
    234: [function(d, g, f) {
        arguments[4][71][0].apply(f, arguments)
    }, {
        dup: 71
    }],
    235: [function(d, g, f) {
        arguments[4][130][0].apply(f, arguments)
    }, {
        dup: 130
    }],
    236: [function(d, g, f) {
        arguments[4][131][0].apply(f, arguments)
    }, {
        dup: 131
    }],
    237: [function(m, l, h) {
        var j = m("./helpers/globals");
        var k = m("ac-function/once");

        function i() {
            var a = j.getWindow();
            var c = false;
            try {
                if ("sessionStorage" in a && typeof a.sessionStorage.setItem === "function") {
                    a.sessionStorage.setItem("ac_feature", "test");
                    c = true;
                    a.sessionStorage.removeItem("ac_feature", "test")
                }
            } catch (b) {}
            return c
        }
        l.exports = k(i);
        l.exports.original = i
    }, {
        "./helpers/globals": 212,
        "ac-function/once": 225
    }],
    238: [function(m, l, h) {
        var j = m("./helpers/globals");
        var k = m("ac-function/once");

        function i() {
            var a = j.getDocument();
            return !!a.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#Image", "1.1")
        }
        l.exports = k(i);
        l.exports.original = i
    }, {
        "./helpers/globals": 212,
        "ac-function/once": 225
    }],
    239: [function(h, m, i) {
        var j = h("ac-prefixer/getStyleValue");
        var l = h("ac-function/once");

        function k() {
            return !!(j("perspective", "1px") && j("transform", "translateZ(0)"))
        }
        m.exports = l(k);
        m.exports.original = k
    }, {
        "ac-function/once": 225,
        "ac-prefixer/getStyleValue": 228
    }],
    240: [function(m, l, h) {
        var j = m("./helpers/globals");
        var k = m("ac-function/once");

        function i() {
            var a = j.getWindow();
            var c = j.getDocument();
            var b = j.getNavigator();
            return !!(("ontouchstart" in a) || (a.DocumentTouch && c instanceof a.DocumentTouch) || (b.maxTouchPoints > 0) || (b.msMaxTouchPoints > 0))
        }
        l.exports = k(i);
        l.exports.original = i
    }, {
        "./helpers/globals": 212,
        "ac-function/once": 225
    }],
    241: [function(m, l, h) {
        var j = m("./helpers/globals");
        var k = m("ac-function/once");

        function i() {
            var b = j.getDocument();
            var a = b.createElement("canvas");
            return !!(typeof a.getContext === "function" && a.getContext("webgl"))
        }
        l.exports = k(i);
        l.exports.original = i
    }, {
        "./helpers/globals": 212,
        "ac-function/once": 225
    }],
    242: [function(d, g, f) {
        arguments[4][9][0].apply(f, arguments)
    }, {
        "./ac-browser/BrowserData": 243,
        "./ac-browser/IE": 244,
        dup: 9
    }],
    243: [function(d, g, f) {
        arguments[4][221][0].apply(f, arguments)
    }, {
        "./data": 245,
        dup: 221
    }],
    244: [function(d, g, f) {
        arguments[4][7][0].apply(f, arguments)
    }, {
        dup: 7
    }],
    245: [function(d, g, f) {
        arguments[4][8][0].apply(f, arguments)
    }, {
        dup: 8
    }],
    246: [function(d, g, f) {
        arguments[4][20][0].apply(f, arguments)
    }, {
        "./ac-event-emitter/EventEmitter": 247,
        dup: 20
    }],
    247: [function(d, g, f) {
        arguments[4][21][0].apply(f, arguments)
    }, {
        dup: 21
    }],
    248: [function(d, g, f) {
        arguments[4][30][0].apply(f, arguments)
    }, {
        "./ac-prefixer/Prefixer": 249,
        dup: 30
    }],
    249: [function(d, g, f) {
        arguments[4][31][0].apply(f, arguments)
    }, {
        "./Prefixer/camelCasedEvents": 250,
        dup: 31
    }],
    250: [function(d, g, f) {
        arguments[4][32][0].apply(f, arguments)
    }, {
        dup: 32
    }],
    251: [function(o, n, i) {
        var k = o("./ac-feature/helpers/memoize");
        var m = ["cssPropertyAvailable", "isRetina"];
        var l;
        var j = {
            canvasAvailable: o("./ac-feature/canvasAvailable"),
            continuousScrollEventsAvailable: o("./ac-feature/continuousScrollEventsAvailable"),
            cookiesAvailable: o("./ac-feature/cookiesAvailable"),
            cssLinearGradientAvailable: o("./ac-feature/cssLinearGradientAvailable"),
            cssPropertyAvailable: o("./ac-feature/cssPropertyAvailable"),
            isDesktop: o("./ac-feature/isDesktop"),
            isHandheld: o("./ac-feature/isHandheld"),
            isRetina: o("./ac-feature/isRetina"),
            isTablet: o("./ac-feature/isTablet"),
            localStorageAvailable: o("./ac-feature/localStorageAvailable"),
            mediaElementsAvailable: o("./ac-feature/mediaElementsAvailable"),
            sessionStorageAvailable: o("./ac-feature/sessionStorageAvailable"),
            svgAvailable: o("./ac-feature/svgAvailable"),
            threeDTransformsAvailable: o("./ac-feature/threeDTransformsAvailable"),
            touchAvailable: o("./ac-feature/touchAvailable"),
            webGLAvailable: o("./ac-feature/webGLAvailable")
        };
        for (l in j) {
            if (m.indexOf(l) === -1) {
                j[l] = k(j[l])
            }
        }
        n.exports = j
    }, {
        "./ac-feature/canvasAvailable": 252,
        "./ac-feature/continuousScrollEventsAvailable": 253,
        "./ac-feature/cookiesAvailable": 254,
        "./ac-feature/cssLinearGradientAvailable": 255,
        "./ac-feature/cssPropertyAvailable": 256,
        "./ac-feature/helpers/memoize": 258,
        "./ac-feature/isDesktop": 259,
        "./ac-feature/isHandheld": 260,
        "./ac-feature/isRetina": 261,
        "./ac-feature/isTablet": 262,
        "./ac-feature/localStorageAvailable": 263,
        "./ac-feature/mediaElementsAvailable": 264,
        "./ac-feature/sessionStorageAvailable": 265,
        "./ac-feature/svgAvailable": 266,
        "./ac-feature/threeDTransformsAvailable": 267,
        "./ac-feature/touchAvailable": 268,
        "./ac-feature/webGLAvailable": 269
    }],
    252: [function(g, k, h) {
        var i = g("./helpers/globals");
        k.exports = function j() {
            var b = i.getDocument();
            var a = b.createElement("canvas");
            return !!(typeof a.getContext === "function" && a.getContext("2d"))
        }
    }, {
        "./helpers/globals": 257
    }],
    253: [function(m, l, h) {
        var j = m("ac-browser");
        var i = m("./touchAvailable");
        l.exports = function k() {
            return (!i() || (j.os === "iOS" && j.version >= 8) || j.name === "Chrome")
        }
    }, {
        "./touchAvailable": 268,
        "ac-browser": 242
    }],
    254: [function(k, j, g) {
        var i = k("./helpers/globals");
        j.exports = function h() {
            var a = false;
            var d = i.getDocument();
            var b = i.getNavigator();
            try {
                if ("cookie" in d && !!b.cookieEnabled) {
                    d.cookie = "ac_feature_cookie=1";
                    a = (d.cookie.indexOf("ac_feature_cookie") !== -1);
                    d.cookie = "ac_feature_cookie=; expires=Thu, 01 Jan 1970 00:00:01 GMT;"
                }
            } catch (c) {}
            return a
        }
    }, {
        "./helpers/globals": 257
    }],
    255: [function(j, i, k) {
        var h = j("./cssPropertyAvailable");
        i.exports = function g() {
            var a = ["linear-gradient(to bottom right, #9f9, white)", "linear-gradient(top left, #9f9, white)", "gradient(linear, left top, right bottom, from(#9f9), to(white))"];
            return a.some(function(b) {
                return h("background-image", b)
            })
        }
    }, {
        "./cssPropertyAvailable": 256
    }],
    256: [function(k, j, g) {
        var i = k("ac-prefixer");
        j.exports = function h(a, b) {
            if (typeof b !== "undefined") {
                return !!i.getStyleValue(a, b)
            } else {
                return !!i.getStyleProperty(a)
            }
        }
    }, {
        "ac-prefixer": 248
    }],
    257: [function(d, g, f) {
        arguments[4][212][0].apply(f, arguments)
    }, {
        dup: 212
    }],
    258: [function(f, i, g) {
        i.exports = function h(a) {
            var b;
            return function() {
                if (typeof b !== "undefined") {
                    return b
                } else {
                    return b = a()
                }
            }
        }
    }, {}],
    259: [function(l, k, h) {
        var i = l("./touchAvailable");
        var j = l("./helpers/globals");
        k.exports = function m() {
            var a = j.getWindow();
            return (!i() && !a.orientation)
        }
    }, {
        "./helpers/globals": 257,
        "./touchAvailable": 268
    }],
    260: [function(k, j, m) {
        var l = k("./isDesktop");
        var i = k("./isTablet");
        j.exports = function h() {
            return (!l() && !i())
        }
    }, {
        "./isDesktop": 259,
        "./isTablet": 262
    }],
    261: [function(g, k, h) {
        var j = g("./helpers/globals");
        k.exports = function i() {
            var a = j.getWindow();
            return ("devicePixelRatio" in a && a.devicePixelRatio >= 1.5)
        }
    }, {
        "./helpers/globals": 257
    }],
    262: [function(l, k, h) {
        var m = l("./isDesktop");
        var j = l("./helpers/globals");
        k.exports = function i() {
            var a = j.getWindow();
            var b = a.screen.width;
            if (a.orientation && a.screen.height < b) {
                b = a.screen.height
            }
            return (!m() && b >= 600)
        }
    }, {
        "./helpers/globals": 257,
        "./isDesktop": 259
    }],
    263: [function(k, j, h) {
        var i = k("./helpers/globals");
        j.exports = function g() {
            var a = i.getWindow();
            var b = false;
            try {
                b = !!(a.localStorage && a.localStorage.non_existent !== null)
            } catch (c) {}
            return b
        }
    }, {
        "./helpers/globals": 257
    }],
    264: [function(g, k, h) {
        var i = g("./helpers/globals");
        k.exports = function j() {
            var a = i.getWindow();
            return ("HTMLMediaElement" in a)
        }
    }, {
        "./helpers/globals": 257
    }],
    265: [function(k, j, g) {
        var i = k("./helpers/globals");
        j.exports = function h() {
            var a = i.getWindow();
            var c = false;
            try {
                if ("sessionStorage" in a && typeof a.sessionStorage.setItem === "function") {
                    a.sessionStorage.setItem("ac_feature", "test");
                    c = true;
                    a.sessionStorage.removeItem("ac_feature", "test")
                }
            } catch (b) {}
            return c
        }
    }, {
        "./helpers/globals": 257
    }],
    266: [function(k, j, g) {
        var i = k("./helpers/globals");
        j.exports = function h() {
            var a = i.getDocument();
            return a.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#Image", "1.1")
        }
    }, {
        "./helpers/globals": 257
    }],
    267: [function(k, j, g) {
        var h = k("./cssPropertyAvailable");
        j.exports = function i() {
            return (h("perspective", "1px") && h("transform", "translateZ(0)"))
        }
    }, {
        "./cssPropertyAvailable": 256
    }],
    268: [function(k, j, g) {
        var i = k("./helpers/globals");
        j.exports = function h() {
            var a = i.getWindow();
            var b = i.getDocument();
            return !!(("ontouchstart" in a) || a.DocumentTouch && b instanceof a.DocumentTouch)
        }
    }, {
        "./helpers/globals": 257
    }],
    269: [function(k, j, g) {
        var i = k("./helpers/globals");
        j.exports = function h() {
            var b = i.getDocument();
            var a = b.createElement("canvas");
            return !!(typeof a.getContext === "function" && a.getContext("webgl"))
        }
    }, {
        "./helpers/globals": 257
    }],
    270: [function(d, g, f) {
        g.exports = d("./ac-fullscreen/fullscreen")
    }, {
        "./ac-fullscreen/fullscreen": 276
    }],
    271: [function(d, g, f) {
        g.exports = {
            STANDARD: "standard",
            IOS: "ios"
        }
    }, {}],
    272: [function(v, x, r) {
        var t = v("ac-dom-events/addEventListener");
        var n = v("ac-event-emitter").EventEmitter;
        var z = v("./../events/types");
        var y = v("./../consts/modes");
        var w = new n();

        function p(a) {
            w.trigger(z.ENTERFULLSCREEN, a)
        }

        function o(a) {
            w.trigger(z.EXITFULLSCREEN, a)
        }

        function u(a) {
            if (w.fullscreenElement()) {
                p(a)
            } else {
                o(a)
            }
        }

        function q() {
            t(document, "fullscreenchange", u)
        }
        q();
        w.fullscreenEnabled = function(b) {
            var a = document.fullscreenEnabled || document.webkitFullscreenEnabled || document.mozFullScreenEnabled || ("webkitCancelFullScreen" in document);
            return !!(a)
        };
        w.fullscreenElement = function() {
            return document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.webkitCurrentFullScreenElement
        };
        w.exitFullscreen = function(b) {
            var a;
            if (typeof document.exitFullscreen === "function") {
                a = "exitFullscreen"
            } else {
                if (typeof document.webkitExitFullscreen === "function") {
                    a = "webkitExitFullscreen"
                } else {
                    if (typeof document.webkitCancelFullScreen === "function") {
                        a = "webkitCancelFullScreen"
                    } else {
                        if (typeof document.mozCancelFullScreen === "function") {
                            a = "mozCancelFullScreen"
                        }
                    }
                }
            }
            if (typeof document[a] === "function") {
                document[a].call(document)
            }
        };
        w.requestFullscreen = function(b) {
            var a;
            if (typeof b.requestFullscreen === "function") {
                a = "requestFullscreen"
            } else {
                if (typeof b.webkitRequestFullscreen === "function") {
                    a = "webkitRequestFullscreen"
                } else {
                    if (typeof b.webkitRequestFullScreen === "function") {
                        a = "webkitRequestFullScreen"
                    } else {
                        if (typeof b.mozRequestFullScreen === "function") {
                            a = "mozRequestFullScreen"
                        }
                    }
                }
            }
            if (typeof b[a] === "function") {
                b[a].call(b)
            }
        };
        w.mode = y.STANDARD;
        x.exports = w
    }, {
        "./../consts/modes": 271,
        "./../events/types": 275,
        "ac-dom-events/addEventListener": 65,
        "ac-event-emitter": 246
    }],
    273: [function(k, j, h) {
        var g = k("./ios");
        var i = k("./desktop");
        j.exports = {
            create: function() {
                var a = i;
                if ("webkitEnterFullscreen" in document.createElement("video") && !("webkitRequestFullScreen" in document.createElement("div"))) {
                    a = g
                }
                return a
            }
        }
    }, {
        "./desktop": 272,
        "./ios": 274
    }],
    274: [function(v, w, t) {
        var u = v("ac-dom-events/addEventListener");
        var n = v("ac-event-emitter").EventEmitter;
        var z = v("./../events/types");
        var x = v("./../consts/modes");
        var o;
        y();

        function y() {
            u(document, "webkitbeginfullscreen", p, true);
            u(document, "webkitendfullscreen", q, true)
        }

        function p(a) {
            r.trigger(z.ENTERFULLSCREEN, a)
        }

        function q(a) {
            o = undefined;
            r.trigger(z.EXITFULLSCREEN, a)
        }
        var r = new n();
        r.fullscreenEnabled = function(a) {
            return !!(a.webkitSupportsFullscreen)
        };
        r.fullscreenElement = function() {
            return o
        };
        r.exitFullscreen = function(a) {
            if (a && typeof a.webkitExitFullscreen === "function") {
                a.webkitExitFullscreen()
            }
        };
        r.requestFullscreen = function(a) {
            if (typeof a.webkitEnterFullscreen === "function") {
                a.webkitEnterFullscreen()
            }
        };
        r.mode = x.IOS;
        w.exports = r
    }, {
        "./../consts/modes": 271,
        "./../events/types": 275,
        "ac-dom-events/addEventListener": 65,
        "ac-event-emitter": 246
    }],
    275: [function(d, g, f) {
        g.exports = {
            ENTERFULLSCREEN: "enterfullscreen",
            EXITFULLSCREEN: "exitfullscreen"
        }
    }, {}],
    276: [function(q, r, p) {
        var k = q("ac-event-emitter").EventEmitter;
        var m = q("./delegate/factory");
        var t = "Error: Element missing. ac-fullscreen requires an element to be specified";
        var n = new k();
        var o = m.create();
        o.propagateTo(n);

        function l() {
            throw new Error(t)
        }
        n.requestFullscreen = function(a) {
            if (!a) {
                l()
            }
            return o.requestFullscreen(a)
        };
        n.fullscreenEnabled = function(a) {
            if (!a) {
                l()
            }
            return o.fullscreenEnabled(a)
        };
        n.fullscreenElement = function() {
            return o.fullscreenElement()
        };
        n.exitFullscreen = function(a) {
            if (!a) {
                l()
            }
            return o.exitFullscreen(a)
        };
        n.getMode = function() {
            return o.mode
        };
        r.exports = n
    }, {
        "./delegate/factory": 273,
        "ac-event-emitter": 246
    }],
    277: [function(d, g, f) {
        g.exports = {
            TouchClick: d("./ac-gesture-touchclick/TouchClick")
        }
    }, {
        "./ac-gesture-touchclick/TouchClick": 278
    }],
    278: [function(q, r, p) {
        var n = q("ac-dom-events");
        var k = q("ac-event-emitter").EventEmitter;
        var t = q("ac-object");
        var m = q("ac-feature");

        function l(a) {
            a = a || {};
            this.el = a.el;
            this._onTouchStart = this._onTouchStart.bind(this);
            this._onTouchMove = this._onTouchMove.bind(this);
            this._onTouchEnd = this._onTouchEnd.bind(this);
            this._onClick = this._onClick.bind(this);
            this._touchStart = false;
            this.activate()
        }
        var o = l.prototype = t.create(k.prototype);
        o._broadcastClick = function(a) {
            this.trigger("click", {
                originalEvent: a
            })
        };
        o._onClick = function(a) {
            n.stop(a);
            if (!this._touchAvailable()) {
                this._broadcastClick(a)
            }
        };
        o._onTouchStart = function() {
            this._touchStart = true
        };
        o._onTouchEnd = function(a) {
            if (this._touchStart === true) {
                n.stop(a);
                this._broadcastClick(a)
            }
            this._touchStart = false
        };
        o._onTouchMove = function() {
            this._touchStart = false
        };
        o._touchAvailable = function() {
            return m.touchAvailable()
        };
        o.activate = function() {
            if (this._touchAvailable()) {
                n.addEventListener(this.el, "touchstart", this._onTouchStart);
                n.addEventListener(this.el, "touchmove", this._onTouchMove);
                n.addEventListener(this.el, "touchend", this._onTouchEnd)
            }
            n.addEventListener(this.el, "click", this._onClick)
        };
        o.deactivate = function() {
            n.removeEventListener(this.el, "touchstart", this._onTouchStart);
            n.removeEventListener(this.el, "touchmove", this._onTouchMove);
            n.removeEventListener(this.el, "touchend", this._onTouchEnd);
            n.removeEventListener(this.el, "click", this._onClick)
        };
        l.create = function(a, b) {
            b = b || {};
            return new l({
                el: a
            })
        };
        r.exports = l
    }, {
        "ac-dom-events": 67,
        "ac-event-emitter": 246,
        "ac-feature": 251,
        "ac-object": 713
    }],
    279: [function(d, g, f) {
        arguments[4][30][0].apply(f, arguments)
    }, {
        "./ac-prefixer/Prefixer": 280,
        dup: 30
    }],
    280: [function(d, g, f) {
        arguments[4][31][0].apply(f, arguments)
    }, {
        "./Prefixer/camelCasedEvents": 281,
        dup: 31
    }],
    281: [function(d, g, f) {
        arguments[4][32][0].apply(f, arguments)
    }, {
        dup: 32
    }],
    282: [function(d, g, f) {
        g.exports = {
            addEventListener: d("./ac-dom-events/addEventListener"),
            dispatchEvent: d("./ac-dom-events/dispatchEvent"),
            removeEventListener: d("./ac-dom-events/removeEventListener"),
            stop: d("./ac-dom-events/stop"),
            target: d("./ac-dom-events/target")
        }
    }, {
        "./ac-dom-events/addEventListener": 283,
        "./ac-dom-events/dispatchEvent": 284,
        "./ac-dom-events/removeEventListener": 285,
        "./ac-dom-events/stop": 286,
        "./ac-dom-events/target": 287
    }],
    283: [function(d, g, f) {
        arguments[4][34][0].apply(f, arguments)
    }, {
        "ac-prefixer": 279,
        dup: 34
    }],
    284: [function(d, g, f) {
        arguments[4][35][0].apply(f, arguments)
    }, {
        dup: 35
    }],
    285: [function(d, g, f) {
        arguments[4][37][0].apply(f, arguments)
    }, {
        "ac-prefixer": 279,
        dup: 37
    }],
    286: [function(f, h, g) {
        h.exports = function i(a) {
            if (!a) {
                a = window.event
            }
            if (a.stopPropagation) {
                a.stopPropagation()
            } else {
                a.cancelBubble = true
            }
            if (a.preventDefault) {
                a.preventDefault()
            }
            a.stopped = true;
            a.returnValue = false
        }
    }, {}],
    287: [function(f, i, g) {
        i.exports = function h(a) {
            return (typeof a.target !== "undefined") ? a.target : a.srcElement
        }
    }, {}],
    288: [function(i, h, f) {
        var g = i("./ac-keyboard/Keyboard");
        h.exports = new g();
        h.exports.Keyboard = g;
        h.exports.keys = i("./ac-keyboard/keymap")
    }, {
        "./ac-keyboard/Keyboard": 290,
        "./ac-keyboard/keymap": 291
    }],
    289: [function(k, j, g) {
        var h = ["keyLocation"];

        function i(b) {
            this.originalEvent = b;
            var a;
            for (a in b) {
                if (typeof b[a] !== "function" && h.indexOf(a) === -1) {
                    this[a] = b[a]
                }
            }
            this.location = (this.originalEvent.keyLocation === undefined) ? this.originalEvent.location : this.originalEvent.keyLocation
        }
        i.prototype = {
            preventDefault: function() {
                if (typeof this.originalEvent.preventDefault !== "function") {
                    this.originalEvent.returnValue = false;
                    return
                }
                return this.originalEvent.preventDefault()
            },
            stopPropagation: function() {
                return this.originalEvent.stopPropagation()
            }
        };
        j.exports = i
    }, {}],
    290: [function(x, z, v) {
        var t = x("ac-dom-events");
        var o = x("ac-event-emitter").EventEmitter;
        var w = x("./KeyEvent");
        var r = x("./keymap");
        var q = 0;
        var y = 1;
        var B = 2;
        var p = 3;
        var u;

        function A() {
            this._keysDown = [];
            this._keyDownEmitter = new o();
            this._keyUpEmitter = new o();
            t.addEventListener(document, "keydown", this._DOMKeyDown.bind(this), true);
            t.addEventListener(document, "keyup", this._DOMKeyUp.bind(this), true);
            this._listening = []
        }
        u = A.prototype;
        u._castEventNameNumberToString = function(a) {
            if (typeof a === "number") {
                return a.toString()
            }
            return a
        };
        u._DOMKeyDown = function(b) {
            var c = this._normalizeKeyboardEvent(b);
            var a = c.keyCode;
            this._trackKeyDown(a);
            this._keyDownEmitter.trigger(a.toString(), c)
        };
        u._DOMKeyUp = function(b) {
            var c = this._normalizeKeyboardEvent(b);
            var a = c.keyCode;
            this._trackKeyUp(a);
            this._keyUpEmitter.trigger(a.toString(), c)
        };
        u.addKeyDown = function() {
            var b = Array.prototype.slice.call(arguments);
            var a = b.shift();
            if (a === undefined) {
                throw new TypeError('Could not listen for keyup event on "' + a + '"')
            }
            a = this._castEventNameNumberToString(a);
            return this._keyDownEmitter.on.apply(this._keyDownEmitter, [a].concat(b))
        };
        u.addKeyUp = function() {
            var b = Array.prototype.slice.call(arguments);
            var a = b.shift();
            if (a === undefined) {
                throw new TypeError('Could not listen for keyup event on "' + a + '"')
            }
            a = this._castEventNameNumberToString(a);
            return this._keyUpEmitter.on.apply(this._keyUpEmitter, [a].concat(b))
        };
        u.removeKeyDown = function() {
            var b = Array.prototype.slice.call(arguments);
            var a = b.shift();
            a = this._castEventNameNumberToString(a);
            return this._keyDownEmitter.off.apply(this._keyDownEmitter, [a].concat(b))
        };
        u.removeKeyUp = function() {
            var b = Array.prototype.slice.call(arguments);
            var a = b.shift();
            a = this._castEventNameNumberToString(a);
            return this._keyUpEmitter.off.apply(this._keyUpEmitter, [a].concat(b))
        };
        u.isDown = function(a) {
            return (this._keysDown.indexOf(a) !== -1)
        };
        u.isUp = function(a) {
            return !this.isDown(a)
        };
        u._trackKeyUp = function(a) {
            var b = this._keysDown.indexOf(a);
            if (b !== -1) {
                this._keysDown.splice(b, 1)
            }
        };
        u._trackKeyDown = function(a) {
            if (this._keysDown.indexOf(a) === -1) {
                this._keysDown.push(a)
            }
        };
        u._normalizeKeyboardEvent = function(a) {
            return new w(a)
        };
        z.exports = A
    }, {
        "./KeyEvent": 289,
        "./keymap": 291,
        "ac-dom-events": 282,
        "ac-event-emitter": 246
    }],
    291: [function(d, g, f) {
        g.exports = {
            BACKSPACE: 8,
            TAB: 9,
            ENTER: 13,
            SHIFT: 16,
            CONTROL: 17,
            ALT: 18,
            COMMAND: 91,
            CAPSLOCK: 20,
            ESCAPE: 27,
            PAGE_UP: 33,
            PAGE_DOWN: 34,
            END: 35,
            HOME: 36,
            ARROW_LEFT: 37,
            ARROW_UP: 38,
            ARROW_RIGHT: 39,
            ARROW_DOWN: 40,
            DELETE: 46,
            ZERO: 48,
            ONE: 49,
            TWO: 50,
            THREE: 51,
            FOUR: 52,
            FIVE: 53,
            SIX: 54,
            SEVEN: 55,
            EIGHT: 56,
            NINE: 57,
            A: 65,
            B: 66,
            C: 67,
            D: 68,
            E: 69,
            F: 70,
            G: 71,
            H: 72,
            I: 73,
            J: 74,
            K: 75,
            L: 76,
            M: 77,
            N: 78,
            O: 79,
            P: 80,
            Q: 81,
            R: 82,
            S: 83,
            T: 84,
            U: 85,
            V: 86,
            W: 87,
            X: 88,
            Y: 89,
            Z: 90,
            NUMPAD_ZERO: 96,
            NUMPAD_ONE: 97,
            NUMPAD_TWO: 98,
            NUMPAD_THREE: 99,
            NUMPAD_FOUR: 100,
            NUMPAD_FIVE: 101,
            NUMPAD_SIX: 102,
            NUMPAD_SEVEN: 103,
            NUMPAD_EIGHT: 104,
            NUMPAD_NINE: 105,
            NUMPAD_ASTERISK: 106,
            NUMPAD_PLUS: 107,
            NUMPAD_DASH: 109,
            NUMPAD_DOT: 110,
            NUMPAD_SLASH: 111,
            NUMPAD_EQUALS: 187,
            TICK: 192,
            LEFT_BRACKET: 219,
            RIGHT_BRACKET: 221,
            BACKSLASH: 220,
            SEMICOLON: 186,
            APOSTRAPHE: 222,
            SPACEBAR: 32,
            CLEAR: 12,
            COMMA: 188,
            DOT: 190,
            SLASH: 191
        }
    }, {}],
    292: [function(d, g, f) {
        g.exports = {
            add: d("./ac-classlist/add"),
            contains: d("./ac-classlist/contains"),
            remove: d("./ac-classlist/remove"),
            toggle: d("./ac-classlist/toggle")
        }
    }, {
        "./ac-classlist/add": 293,
        "./ac-classlist/contains": 294,
        "./ac-classlist/remove": 296,
        "./ac-classlist/toggle": 297
    }],
    293: [function(g, k, h) {
        var j = g("./helpers/className");
        k.exports = function i() {
            var a = Array.prototype.slice.call(arguments);
            var b = a.shift(a);
            if (b.classList && b.classList.add) {
                b.classList.add.apply(b.classList, a)
            } else {
                a.forEach(j.add.bind(this, b))
            }
        }
    }, {
        "./helpers/className": 295
    }],
    294: [function(g, j, h) {
        var i = g("./helpers/className");
        j.exports = function k(a, b) {
            if (a.classList && a.classList.contains) {
                return a.classList.contains(b)
            }
            return i.contains(a, b)
        }
    }, {
        "./helpers/className": 295
    }],
    295: [function(o, n, j) {
        var k = function(a) {
            return new RegExp("(\\s|^)" + a + "(\\s|$)")
        };
        var l = function(a, b) {
            return k(b).test(a.className)
        };
        var m = function(a, b) {
            if (!l(a, b)) {
                a.className += " " + b
            }
        };
        var i = function(a, b) {
            if (l(a, b)) {
                a.className = a.className.replace(k(b), "$1").trim()
            }
        };
        n.exports = {
            contains: l,
            add: m,
            remove: i
        }
    }, {}],
    296: [function(k, j, g) {
        var i = k("./helpers/className");
        j.exports = function h() {
            var a = Array.prototype.slice.call(arguments);
            var b = a.shift(a);
            if (b.classList && b.classList.remove) {
                b.classList.remove.apply(b.classList, a)
            } else {
                a.forEach(i.remove.bind(this, b))
            }
        }
    }, {
        "./helpers/className": 295
    }],
    297: [function(k, j, g) {
        var i = k("./helpers/className");
        j.exports = function h(b, c, a) {
            var d = (typeof a !== "undefined");
            var f;
            if (b.classList && b.classList.toggle) {
                if (d) {
                    return b.classList.toggle(c, a)
                }
                return b.classList.toggle(c)
            }
            if (d) {
                f = !!a
            } else {
                f = !i.contains(b, c)
            }
            if (f) {
                i.add(b, c)
            } else {
                i.remove(b, c)
            }
            return f
        }
    }, {
        "./helpers/className": 295
    }],
    298: [function(d, g, f) {
        arguments[4][30][0].apply(f, arguments)
    }, {
        "./ac-prefixer/Prefixer": 299,
        dup: 30
    }],
    299: [function(d, g, f) {
        arguments[4][31][0].apply(f, arguments)
    }, {
        "./Prefixer/camelCasedEvents": 300,
        dup: 31
    }],
    300: [function(d, g, f) {
        arguments[4][32][0].apply(f, arguments)
    }, {
        dup: 32
    }],
    301: [function(d, g, f) {
        arguments[4][33][0].apply(f, arguments)
    }, {
        "./ac-dom-events/addEventListener": 302,
        "./ac-dom-events/dispatchEvent": 303,
        "./ac-dom-events/preventDefault": 304,
        "./ac-dom-events/removeEventListener": 305,
        "./ac-dom-events/stop": 306,
        "./ac-dom-events/stopPropagation": 307,
        "./ac-dom-events/target": 308,
        dup: 33
    }],
    302: [function(d, g, f) {
        arguments[4][34][0].apply(f, arguments)
    }, {
        "ac-prefixer": 298,
        dup: 34
    }],
    303: [function(d, g, f) {
        arguments[4][35][0].apply(f, arguments)
    }, {
        dup: 35
    }],
    304: [function(d, g, f) {
        arguments[4][36][0].apply(f, arguments)
    }, {
        dup: 36
    }],
    305: [function(d, g, f) {
        arguments[4][37][0].apply(f, arguments)
    }, {
        "ac-prefixer": 298,
        dup: 37
    }],
    306: [function(d, g, f) {
        arguments[4][38][0].apply(f, arguments)
    }, {
        "./preventDefault": 304,
        "./stopPropagation": 307,
        dup: 38
    }],
    307: [function(d, g, f) {
        arguments[4][39][0].apply(f, arguments)
    }, {
        dup: 39
    }],
    308: [function(d, g, f) {
        arguments[4][40][0].apply(f, arguments)
    }, {
        dup: 40
    }],
    309: [function(d, g, f) {
        arguments[4][41][0].apply(f, arguments)
    }, {
        "./ac-dom-traversal/ancestor": 310,
        "./ac-dom-traversal/ancestors": 311,
        "./ac-dom-traversal/children": 312,
        "./ac-dom-traversal/filterBySelector": 313,
        "./ac-dom-traversal/firstChild": 314,
        "./ac-dom-traversal/lastChild": 317,
        "./ac-dom-traversal/matchesSelector": 318,
        "./ac-dom-traversal/nextSibling": 319,
        "./ac-dom-traversal/nextSiblings": 320,
        "./ac-dom-traversal/previousSibling": 321,
        "./ac-dom-traversal/previousSiblings": 322,
        "./ac-dom-traversal/querySelector": 323,
        "./ac-dom-traversal/querySelectorAll": 324,
        "./ac-dom-traversal/shims/ie": 325,
        "./ac-dom-traversal/siblings": 326,
        dup: 41
    }],
    310: [function(d, g, f) {
        arguments[4][42][0].apply(f, arguments)
    }, {
        "./helpers/validate": 316,
        "./matchesSelector": 318,
        "ac-dom-nodes": 331,
        dup: 42
    }],
    311: [function(d, g, f) {
        arguments[4][43][0].apply(f, arguments)
    }, {
        "./helpers/validate": 316,
        "./matchesSelector": 318,
        "ac-dom-nodes": 331,
        dup: 43
    }],
    312: [function(d, g, f) {
        arguments[4][44][0].apply(f, arguments)
    }, {
        "./filterBySelector": 313,
        "./helpers/validate": 316,
        "ac-dom-nodes": 331,
        dup: 44
    }],
    313: [function(d, g, f) {
        arguments[4][45][0].apply(f, arguments)
    }, {
        "./helpers/validate": 316,
        "./matchesSelector": 318,
        dup: 45
    }],
    314: [function(d, g, f) {
        arguments[4][46][0].apply(f, arguments)
    }, {
        "./children": 312,
        "./helpers/validate": 316,
        dup: 46
    }],
    315: [function(d, g, f) {
        arguments[4][47][0].apply(f, arguments)
    }, {
        dup: 47
    }],
    316: [function(d, g, f) {
        arguments[4][48][0].apply(f, arguments)
    }, {
        "ac-dom-nodes": 331,
        dup: 48
    }],
    317: [function(d, g, f) {
        arguments[4][49][0].apply(f, arguments)
    }, {
        "./children": 312,
        "./helpers/validate": 316,
        dup: 49
    }],
    318: [function(d, g, f) {
        arguments[4][50][0].apply(f, arguments)
    }, {
        "./helpers/nativeMatches": 315,
        "./helpers/validate": 316,
        "ac-dom-nodes": 331,
        dup: 50
    }],
    319: [function(d, g, f) {
        arguments[4][51][0].apply(f, arguments)
    }, {
        "./helpers/validate": 316,
        "./matchesSelector": 318,
        "ac-dom-nodes": 331,
        dup: 51
    }],
    320: [function(d, g, f) {
        arguments[4][52][0].apply(f, arguments)
    }, {
        "./helpers/validate": 316,
        "./matchesSelector": 318,
        "ac-dom-nodes": 331,
        dup: 52
    }],
    321: [function(d, g, f) {
        arguments[4][53][0].apply(f, arguments)
    }, {
        "./helpers/validate": 316,
        "./matchesSelector": 318,
        "ac-dom-nodes": 331,
        dup: 53
    }],
    322: [function(d, g, f) {
        arguments[4][54][0].apply(f, arguments)
    }, {
        "./helpers/validate": 316,
        "./matchesSelector": 318,
        "ac-dom-nodes": 331,
        dup: 54
    }],
    323: [function(d, g, f) {
        arguments[4][55][0].apply(f, arguments)
    }, {
        "./helpers/validate": 316,
        dup: 55
    }],
    324: [function(d, g, f) {
        arguments[4][56][0].apply(f, arguments)
    }, {
        "./helpers/validate": 316,
        dup: 56
    }],
    325: [function(d, g, f) {
        arguments[4][57][0].apply(f, arguments)
    }, {
        "../helpers/nativeMatches": 315,
        "../helpers/validate": 316,
        "../vendor/sizzle/sizzle": 327,
        "ac-dom-nodes": 331,
        dup: 57
    }],
    326: [function(d, g, f) {
        arguments[4][58][0].apply(f, arguments)
    }, {
        "./children": 312,
        "./helpers/validate": 316,
        dup: 58
    }],
    327: [function(d, g, f) {
        arguments[4][59][0].apply(f, arguments)
    }, {
        dup: 59
    }],
    328: [function(d, g, f) {
        arguments[4][62][0].apply(f, arguments)
    }, {
        "./ac-dom-emitter/DOMEmitter": 329,
        dup: 62
    }],
    329: [function(t, u, r) {
        var q;
        var l = t("ac-event-emitter").EventEmitter,
            m = t("./DOMEmitterEvent"),
            p = t("ac-dom-events"),
            v = t("ac-dom-traversal");
        var n = "dom-emitter";

        function o(a) {
            if (a === null) {
                return
            }
            this.el = a;
            this._bindings = {};
            this._delegateFuncs = {};
            this._eventEmitter = new l()
        }
        q = o.prototype;
        q.on = function() {
            this._normalizeArgumentsAndCall(Array.prototype.slice.call(arguments, 0), this._on);
            return this
        };
        q.once = function() {
            this._normalizeArgumentsAndCall(Array.prototype.slice.call(arguments, 0), this._once);
            return this
        };
        q.off = function() {
            this._normalizeArgumentsAndCall(Array.prototype.slice.call(arguments, 0), this._off);
            return this
        };
        q.has = function(b, d, f, h) {
            var g, c;
            if (typeof d === "string") {
                g = d;
                c = f
            } else {
                c = d;
                h = f
            }
            if (g) {
                var a = this._getDelegateFuncBindingIdx(b, g, c, h, true);
                if (a > -1) {
                    return true
                }
                return false
            }
            if (this._eventEmitter && this._eventEmitter.has.apply(this._eventEmitter, arguments)) {
                return true
            }
            return false
        };
        q.trigger = function(i, a, h, c) {
            i = this._parseEventNames(i);
            i = this._cleanStringData(i);
            var f, d, g, b = i.length;
            if (typeof a === "string") {
                f = this._cleanStringData(a);
                d = h
            } else {
                d = a;
                c = h
            }
            for (g = 0; g < b; g++) {
                this._triggerDOMEvents(i[g], d, f)
            }
            return this
        };
        q.emitterTrigger = function(a, d, c) {
            a = this._parseEventNames(a);
            a = this._cleanStringData(a);
            d = new m(d, this);
            var f, b = a.length;
            for (f = 0; f < b; f++) {
                this._eventEmitter.trigger(a[f], d, c)
            }
            return this
        };
        q.propagateTo = function(b, a) {
            this._eventEmitter.propagateTo(b, a);
            return this
        };
        q.stopPropagatingTo = function(a) {
            this._eventEmitter.stopPropagatingTo(a);
            return this
        };
        q.stopImmediatePropagation = function() {
            this._eventEmitter.stopImmediatePropagation();
            return this
        };
        q.destroy = function() {
            this._triggerInternalEvent("willdestroy");
            this.off();
            this.el = this._eventEmitter = this._bindings = this._delegateFuncs = null
        };
        q._parseEventNames = function(a) {
            if (!a) {
                return [a]
            }
            return a.split(" ")
        };
        q._onListenerEvent = function(a, b) {
            this.emitterTrigger(a, b, false)
        };
        q._setListener = function(a) {
            this._bindings[a] = this._onListenerEvent.bind(this, a);
            p.addEventListener(this.el, a, this._bindings[a])
        };
        q._removeListener = function(a) {
            p.removeEventListener(this.el, a, this._bindings[a]);
            this._bindings[a] = null
        };
        q._triggerInternalEvent = function(b, a) {
            this.emitterTrigger(n + ":" + b, a)
        };
        q._normalizeArgumentsAndCall = function(b, h) {
            var c = {};
            if (b.length === 0) {
                h.call(this, c);
                return
            }
            if (typeof b[0] === "string" || b[0] === null) {
                b = this._cleanStringData(b);
                c.events = b[0];
                if (typeof b[1] === "string") {
                    c.delegateQuery = b[1];
                    c.callback = b[2];
                    c.context = b[3]
                } else {
                    c.callback = b[1];
                    c.context = b[2]
                }
                h.call(this, c);
                return
            }
            var a, f, d = ":",
                g = b[0];
            for (a in g) {
                if (g.hasOwnProperty(a)) {
                    c = {};
                    f = this._cleanStringData(a.split(d));
                    c.events = f[0];
                    c.delegateQuery = f[1];
                    c.callback = g[a];
                    c.context = b[1];
                    h.call(this, c)
                }
            }
        };
        q._registerDelegateFunc = function(g, d, c, b, f) {
            var a = this._delegateFunc.bind(this, g, d, c, f);
            this._delegateFuncs[d] = this._delegateFuncs[d] || {};
            this._delegateFuncs[d][g] = this._delegateFuncs[d][g] || [];
            this._delegateFuncs[d][g].push({
                func: b,
                context: f,
                delegateFunc: a
            });
            return a
        };
        q._cleanStringData = function(h) {
            var i = false;
            if (typeof h === "string") {
                h = [h];
                i = true
            }
            var a = [],
                f, c, d, g, b = h.length;
            for (f = 0; f < b; f++) {
                c = h[f];
                if (typeof c === "string") {
                    if (c === "" || c === " ") {
                        continue
                    }
                    d = c.length;
                    while (c[0] === " ") {
                        c = c.slice(1, d);
                        d--
                    }
                    while (c[d - 1] === " ") {
                        c = c.slice(0, d - 1);
                        d--
                    }
                }
                a.push(c)
            }
            if (i) {
                return a[0]
            }
            return a
        };
        q._unregisterDelegateFunc = function(g, c, b, d) {
            if (!this._delegateFuncs[c] || !this._delegateFuncs[c][g]) {
                return
            }
            var f = this._getDelegateFuncBindingIdx(g, c, b, d),
                a;
            if (f > -1) {
                a = this._delegateFuncs[c][g][f].delegateFunc;
                this._delegateFuncs[c][g].splice(f, 1);
                if (this._delegateFuncs[c][g].length === 0) {
                    this._delegateFuncs[c][g] = null
                }
            }
            return a
        };
        q._unregisterDelegateFuncs = function(b, c) {
            if (!this._delegateFuncs[c]) {
                return
            }
            if (b !== null && !this._delegateFuncs[c][b]) {
                return
            }
            if (b === null) {
                var a;
                for (a in this._delegateFuncs[c]) {
                    if (this._delegateFuncs[c].hasOwnProperty(a)) {
                        this._unbindDelegateFunc(a, c)
                    }
                }
                return
            }
            this._unbindDelegateFunc(b, c)
        };
        q._unbindDelegateFunc = function(b, f) {
            var d, c, a = 0;
            while (this._delegateFuncs[f][b] && this._delegateFuncs[f][b][a]) {
                d = this._delegateFuncs[f][b][a];
                c = this._delegateFuncs[f][b][a].length;
                this._off({
                    events: b,
                    delegateQuery: f,
                    callback: d.func,
                    context: d.context
                });
                if (this._delegateFuncs[f][b] && c === this._delegateFuncs[f][b].length) {
                    a++
                }
            }
            d = c = null
        };
        q._unregisterDelegateFuncsByEvent = function(b) {
            var a;
            for (a in this._delegateFuncs) {
                if (this._delegateFuncs.hasOwnProperty(a)) {
                    this._unregisterDelegateFuncs(b, a)
                }
            }
        };
        q._delegateFunc = function(b, f, c, h, d) {
            if (this._targetHasDelegateAncestor(d.target, f)) {
                var a = Array.prototype.slice.call(arguments, 0),
                    g = a.slice(4, a.length);
                h = h || window;
                if (typeof d.detail === "object") {
                    g[0] = d.detail
                }
                c.apply(h, g)
            }
        };
        q._targetHasDelegateAncestor = function(c, a) {
            var b = c;
            while (b && b !== this.el && b !== document.documentElement) {
                if (v.matchesSelector(b, a)) {
                    return true
                }
                b = b.parentNode
            }
            return false
        };
        q._on = function(d) {
            var a = d.events,
                c = d.callback,
                f = d.delegateQuery,
                g = d.context,
                b = d.unboundCallback || c;
            a = this._parseEventNames(a);
            a.forEach(function(h, x, j, i, k) {
                if (!this.has(k)) {
                    this._setListener(k)
                }
                if (typeof i === "string") {
                    h = this._registerDelegateFunc(k, i, h, x, j)
                }
                this._triggerInternalEvent("willon", {
                    evt: k,
                    callback: h,
                    context: j,
                    delegateQuery: i
                });
                this._eventEmitter.on(k, h, j);
                this._triggerInternalEvent("didon", {
                    evt: k,
                    callback: h,
                    context: j,
                    delegateQuery: i
                })
            }.bind(this, c, b, g, f));
            a = c = b = f = g = null
        };
        q._off = function(d) {
            var a = d.events,
                c = d.callback,
                f = d.delegateQuery,
                g = d.context,
                b = d.unboundCallback || c;
            if (typeof a === "undefined") {
                this._eventEmitter.off();
                var h;
                for (h in this._bindings) {
                    if (this._bindings.hasOwnProperty(h)) {
                        this._removeListener(h)
                    }
                }
                for (h in this._delegateFuncs) {
                    if (this._delegateFuncs.hasOwnProperty(h)) {
                        this._delegateFuncs[h] = null
                    }
                }
                return
            }
            a = this._parseEventNames(a);
            a.forEach(function(i, z, k, j, y) {
                if (typeof j === "string" && typeof z === "function") {
                    i = this._unregisterDelegateFunc(y, j, z, k);
                    if (!i) {
                        return
                    }
                }
                if (typeof j === "string" && typeof i === "undefined") {
                    this._unregisterDelegateFuncs(y, j);
                    return
                }
                if (typeof y === "string" && typeof i === "undefined") {
                    this._unregisterDelegateFuncsByEvent(y);
                    if (typeof j === "string") {
                        return
                    }
                }
                this._triggerInternalEvent("willoff", {
                    evt: y,
                    callback: i,
                    context: k,
                    delegateQuery: j
                });
                this._eventEmitter.off(y, i, k);
                this._triggerInternalEvent("didoff", {
                    evt: y,
                    callback: i,
                    context: k,
                    delegateQuery: j
                });
                if (!this.has(y)) {
                    this._removeListener(y)
                }
            }.bind(this, c, b, g, f));
            a = c = b = f = g = null
        };
        q._once = function(d) {
            var b = d.events,
                c = d.callback,
                f = d.delegateQuery,
                a = d.context;
            b = this._parseEventNames(b);
            b.forEach(function(g, i, h, j) {
                if (typeof h === "string") {
                    return this._handleDelegateOnce(j, g, i, h)
                }
                if (!this.has(j)) {
                    this._setListener(j)
                }
                this._triggerInternalEvent("willonce", {
                    evt: j,
                    callback: g,
                    context: i,
                    delegateQuery: h
                });
                this._eventEmitter.once.call(this, j, g, i);
                this._triggerInternalEvent("didonce", {
                    evt: j,
                    callback: g,
                    context: i,
                    delegateQuery: h
                })
            }.bind(this, c, a, f));
            b = c = f = a = null
        };
        q._handleDelegateOnce = function(b, c, a, d) {
            this._triggerInternalEvent("willonce", {
                evt: b,
                callback: c,
                context: a,
                delegateQuery: d
            });
            this._on({
                events: b,
                context: a,
                delegateQuery: d,
                callback: this._getDelegateOnceCallback.bind(this, b, c, a, d),
                unboundCallback: c
            });
            this._triggerInternalEvent("didonce", {
                evt: b,
                callback: c,
                context: a,
                delegateQuery: d
            });
            return this
        };
        q._getDelegateOnceCallback = function(b, c, g, d) {
            var a = Array.prototype.slice.call(arguments, 0),
                f = a.slice(4, a.length);
            c.apply(g, f);
            this._off({
                events: b,
                delegateQuery: d,
                callback: c,
                context: g
            })
        };
        q._getDelegateFuncBindingIdx = function(j, c, f, h, i) {
            var a = -1;
            if (this._delegateFuncs[c] && this._delegateFuncs[c][j]) {
                var d, g, b = this._delegateFuncs[c][j].length;
                for (d = 0; d < b; d++) {
                    g = this._delegateFuncs[c][j][d];
                    if (i && typeof f === "undefined") {
                        f = g.func
                    }
                    if (g.func === f && g.context === h) {
                        a = d;
                        break
                    }
                }
            }
            return a
        };
        q._triggerDOMEvents = function(h, d, f) {
            var a = [this.el];
            if (f) {
                a = v.querySelectorAll(f, this.el)
            }
            var g, c, b = a.length;
            for (g = 0; g < b; g++) {
                p.dispatchEvent(a[g], h, {
                    bubbles: true,
                    cancelable: true,
                    detail: d
                })
            }
        };
        u.exports = o
    }, {
        "./DOMEmitterEvent": 330,
        "ac-dom-events": 301,
        "ac-dom-traversal": 309,
        "ac-event-emitter": 246
    }],
    330: [function(h, m, i) {
        var k = h("ac-dom-events");
        var l;
        var j = function(a, b) {
            this._domEmitter = b;
            this._originalTarget = k.target(a);
            this.originalEvent = a || {};
            this.target = this._originalTarget || this._domEmitter.el;
            this.currentTarget = this._domEmitter.el;
            this.timeStamp = this.originalEvent.timeStamp || Date.now();
            if (this._isDOMEvent(this.originalEvent)) {
                if (typeof this.originalEvent.detail === "object") {
                    this.data = this.originalEvent.detail
                }
            } else {
                if (a) {
                    this.data = this.originalEvent;
                    this.originalEvent = {}
                }
            }
        };
        l = j.prototype;
        l.preventDefault = function() {
            k.preventDefault(this.originalEvent)
        };
        l.stopPropagation = function() {
            k.stopPropagation(this.originalEvent)
        };
        l.stopImmediatePropagation = function() {
            if (this.originalEvent.stopImmediatePropagation) {
                this.originalEvent.stopImmediatePropagation()
            }
            this._domEmitter.stopImmediatePropagation()
        };
        l._isDOMEvent = function(a) {
            if (this._originalTarget || (document.createEvent !== "undefined" && typeof CustomEvent !== "undefined" && a instanceof CustomEvent)) {
                return true
            }
            return false
        };
        m.exports = j
    }, {
        "ac-dom-events": 301
    }],
    331: [function(l, k, m) {
        var h = l("./ac-dom-nodes/helpers/nodeTypes");
        var j;
        var i = {
            createDocumentFragment: l("./ac-dom-nodes/createDocumentFragment"),
            filterByNodeType: l("./ac-dom-nodes/filterByNodeType"),
            insertAfter: l("./ac-dom-nodes/insertAfter"),
            insertBefore: l("./ac-dom-nodes/insertBefore"),
            insertFirstChild: l("./ac-dom-nodes/insertFirstChild"),
            insertLastChild: l("./ac-dom-nodes/insertLastChild"),
            isComment: l("./ac-dom-nodes/isComment"),
            isDocument: l("./ac-dom-nodes/isDocument"),
            isDocumentFragment: l("./ac-dom-nodes/isDocumentFragment"),
            isDocumentType: l("./ac-dom-nodes/isDocumentType"),
            isElement: l("./ac-dom-nodes/isElement"),
            isNode: l("./ac-dom-nodes/isNode"),
            isNodeList: l("./ac-dom-nodes/isNodeList"),
            isTextNode: l("./ac-dom-nodes/isTextNode"),
            remove: l("./ac-dom-nodes/remove"),
            replace: l("./ac-dom-nodes/replace")
        };
        for (j in h) {
            i[j] = h[j]
        }
        k.exports = i
    }, {
        "./ac-dom-nodes/createDocumentFragment": 332,
        "./ac-dom-nodes/filterByNodeType": 333,
        "./ac-dom-nodes/helpers/nodeTypes": 335,
        "./ac-dom-nodes/insertAfter": 337,
        "./ac-dom-nodes/insertBefore": 338,
        "./ac-dom-nodes/insertFirstChild": 339,
        "./ac-dom-nodes/insertLastChild": 340,
        "./ac-dom-nodes/isComment": 341,
        "./ac-dom-nodes/isDocument": 342,
        "./ac-dom-nodes/isDocumentFragment": 343,
        "./ac-dom-nodes/isDocumentType": 344,
        "./ac-dom-nodes/isElement": 345,
        "./ac-dom-nodes/isNode": 346,
        "./ac-dom-nodes/isNodeList": 347,
        "./ac-dom-nodes/isTextNode": 348,
        "./ac-dom-nodes/remove": 349,
        "./ac-dom-nodes/replace": 350
    }],
    332: [function(i, h, f) {
        h.exports = function g(b) {
            var c = document.createDocumentFragment();
            var a;
            if (b) {
                a = document.createElement("div");
                a.innerHTML = b;
                while (a.firstChild) {
                    c.appendChild(a.firstChild)
                }
            }
            return c
        }
    }, {}],
    333: [function(l, k, m) {
        var j = l("./helpers/isNodeType");
        var i = l("./helpers/nodeTypes").ELEMENT_NODE;
        k.exports = function h(a, b) {
            b = b || i;
            a = Array.prototype.slice.call(a);
            return a.filter(function(c) {
                return j(c, b)
            })
        }
    }, {
        "./helpers/isNodeType": 334,
        "./helpers/nodeTypes": 335
    }],
    334: [function(g, k, h) {
        var j = g("../isNode");
        k.exports = function i(a, b) {
            if (!j(a)) {
                return false
            }
            if (typeof b === "number") {
                return (a.nodeType === b)
            }
            return (b.indexOf(a.nodeType) !== -1)
        }
    }, {
        "../isNode": 346
    }],
    335: [function(d, g, f) {
        g.exports = {
            ELEMENT_NODE: 1,
            TEXT_NODE: 3,
            COMMENT_NODE: 8,
            DOCUMENT_NODE: 9,
            DOCUMENT_TYPE_NODE: 10,
            DOCUMENT_FRAGMENT_NODE: 11
        }
    }, {}],
    336: [function(v, x, t) {
        var u = v("./nodeTypes");
        var y = v("./isNodeType");
        var q = [u.ELEMENT_NODE, u.TEXT_NODE, u.COMMENT_NODE, u.DOCUMENT_FRAGMENT_NODE];
        var w = " must be an Element, TextNode, Comment, or Document Fragment";
        var n = [u.ELEMENT_NODE, u.TEXT_NODE, u.COMMENT_NODE];
        var r = " must be an Element, TextNode, or Comment";
        var p = [u.ELEMENT_NODE, u.DOCUMENT_FRAGMENT_NODE];
        var o = " must be an Element, or Document Fragment";
        var z = " must have a parentNode";
        x.exports = {
            parentNode: function(d, a, b, c) {
                c = c || "target";
                if ((d || a) && !y(d, p)) {
                    throw new TypeError(b + ": " + c + o)
                }
            },
            childNode: function(d, a, b, c) {
                c = c || "target";
                if (!d && !a) {
                    return
                }
                if (!y(d, n)) {
                    throw new TypeError(b + ": " + c + r)
                }
            },
            insertNode: function(d, a, b, c) {
                c = c || "node";
                if (!d && !a) {
                    return
                }
                if (!y(d, q)) {
                    throw new TypeError(b + ": " + c + w)
                }
            },
            hasParentNode: function(c, a, b) {
                b = b || "target";
                if (!c.parentNode) {
                    throw new TypeError(a + ": " + b + z)
                }
            }
        }
    }, {
        "./isNodeType": 334,
        "./nodeTypes": 335
    }],
    337: [function(g, k, h) {
        var i = g("./helpers/validate");
        k.exports = function j(b, a) {
            i.insertNode(b, true, "insertAfter");
            i.childNode(a, true, "insertAfter");
            i.hasParentNode(a, "insertAfter");
            if (!a.nextSibling) {
                return a.parentNode.appendChild(b)
            }
            return a.parentNode.insertBefore(b, a.nextSibling)
        }
    }, {
        "./helpers/validate": 336
    }],
    338: [function(k, j, h) {
        var i = k("./helpers/validate");
        j.exports = function g(b, a) {
            i.insertNode(b, true, "insertBefore");
            i.childNode(a, true, "insertBefore");
            i.hasParentNode(a, "insertBefore");
            return a.parentNode.insertBefore(b, a)
        }
    }, {
        "./helpers/validate": 336
    }],
    339: [function(k, j, g) {
        var i = k("./helpers/validate");
        j.exports = function h(b, a) {
            i.insertNode(b, true, "insertFirstChild");
            i.parentNode(a, true, "insertFirstChild");
            if (!a.firstChild) {
                return a.appendChild(b)
            }
            return a.insertBefore(b, a.firstChild)
        }
    }, {
        "./helpers/validate": 336
    }],
    340: [function(g, k, h) {
        var j = g("./helpers/validate");
        k.exports = function i(b, a) {
            j.insertNode(b, true, "insertLastChild");
            j.parentNode(a, true, "insertLastChild");
            return a.appendChild(b)
        }
    }, {
        "./helpers/validate": 336
    }],
    341: [function(m, l, i) {
        var j = m("./helpers/isNodeType");
        var k = m("./helpers/nodeTypes").COMMENT_NODE;
        l.exports = function h(a) {
            return j(a, k)
        }
    }, {
        "./helpers/isNodeType": 334,
        "./helpers/nodeTypes": 335
    }],
    342: [function(m, l, h) {
        var j = m("./helpers/isNodeType");
        var i = m("./helpers/nodeTypes").DOCUMENT_NODE;
        l.exports = function k(a) {
            return j(a, i)
        }
    }, {
        "./helpers/isNodeType": 334,
        "./helpers/nodeTypes": 335
    }],
    343: [function(m, l, h) {
        var j = m("./helpers/isNodeType");
        var i = m("./helpers/nodeTypes").DOCUMENT_FRAGMENT_NODE;
        l.exports = function k(a) {
            return j(a, i)
        }
    }, {
        "./helpers/isNodeType": 334,
        "./helpers/nodeTypes": 335
    }],
    344: [function(h, m, i) {
        var j = h("./helpers/isNodeType");
        var k = h("./helpers/nodeTypes").DOCUMENT_TYPE_NODE;
        m.exports = function l(a) {
            return j(a, k)
        }
    }, {
        "./helpers/isNodeType": 334,
        "./helpers/nodeTypes": 335
    }],
    345: [function(m, l, h) {
        var j = m("./helpers/isNodeType");
        var i = m("./helpers/nodeTypes").ELEMENT_NODE;
        l.exports = function k(a) {
            return j(a, i)
        }
    }, {
        "./helpers/isNodeType": 334,
        "./helpers/nodeTypes": 335
    }],
    346: [function(d, g, f) {
        arguments[4][114][0].apply(f, arguments)
    }, {
        dup: 114
    }],
    347: [function(d, g, f) {
        arguments[4][115][0].apply(f, arguments)
    }, {
        dup: 115
    }],
    348: [function(m, l, i) {
        var j = m("./helpers/isNodeType");
        var h = m("./helpers/nodeTypes").TEXT_NODE;
        l.exports = function k(a) {
            return j(a, h)
        }
    }, {
        "./helpers/isNodeType": 334,
        "./helpers/nodeTypes": 335
    }],
    349: [function(k, j, g) {
        var i = k("./helpers/validate");
        j.exports = function h(a) {
            i.childNode(a, true, "remove");
            if (!a.parentNode) {
                return a
            }
            return a.parentNode.removeChild(a)
        }
    }, {
        "./helpers/validate": 336
    }],
    350: [function(g, j, h) {
        var i = g("./helpers/validate");
        j.exports = function k(b, a) {
            i.insertNode(b, true, "insertFirstChild", "newNode");
            i.childNode(a, true, "insertFirstChild", "oldNode");
            i.hasParentNode(a, "insertFirstChild", "oldNode");
            return a.parentNode.replaceChild(b, a)
        }
    }, {
        "./helpers/validate": 336
    }],
    351: [function(d, g, f) {
        arguments[4][30][0].apply(f, arguments)
    }, {
        "./ac-prefixer/Prefixer": 352,
        dup: 30
    }],
    352: [function(d, g, f) {
        arguments[4][31][0].apply(f, arguments)
    }, {
        "./Prefixer/camelCasedEvents": 353,
        dup: 31
    }],
    353: [function(d, g, f) {
        arguments[4][32][0].apply(f, arguments)
    }, {
        dup: 32
    }],
    354: [function(d, g, f) {
        g.exports = {
            canvasAvailable: d("./ac-feature/canvasAvailable"),
            continuousScrollEventsAvailable: d("./ac-feature/continuousScrollEventsAvailable"),
            cookiesAvailable: d("./ac-feature/cookiesAvailable"),
            cssLinearGradientAvailable: d("./ac-feature/cssLinearGradientAvailable"),
            cssPropertyAvailable: d("./ac-feature/cssPropertyAvailable"),
            isDesktop: d("./ac-feature/isDesktop"),
            isHandheld: d("./ac-feature/isHandheld"),
            isRetina: d("./ac-feature/isRetina"),
            isTablet: d("./ac-feature/isTablet"),
            localStorageAvailable: d("./ac-feature/localStorageAvailable"),
            sessionStorageAvailable: d("./ac-feature/sessionStorageAvailable"),
            svgAvailable: d("./ac-feature/svgAvailable"),
            threeDTransformsAvailable: d("./ac-feature/threeDTransformsAvailable"),
            touchAvailable: d("./ac-feature/touchAvailable")
        }
    }, {
        "./ac-feature/canvasAvailable": 355,
        "./ac-feature/continuousScrollEventsAvailable": 356,
        "./ac-feature/cookiesAvailable": 357,
        "./ac-feature/cssLinearGradientAvailable": 358,
        "./ac-feature/cssPropertyAvailable": 359,
        "./ac-feature/isDesktop": 360,
        "./ac-feature/isHandheld": 361,
        "./ac-feature/isRetina": 362,
        "./ac-feature/isTablet": 363,
        "./ac-feature/localStorageAvailable": 364,
        "./ac-feature/sessionStorageAvailable": 365,
        "./ac-feature/svgAvailable": 366,
        "./ac-feature/threeDTransformsAvailable": 367,
        "./ac-feature/touchAvailable": 368
    }],
    355: [function(g, k, h) {
        var i = null;
        k.exports = function j() {
            var a;
            if (i === null) {
                a = document.createElement("canvas");
                i = !!(typeof a.getContext === "function" && a.getContext("2d"))
            }
            return i
        }
    }, {}],
    356: [function(o, n, i) {
        var k = o("ac-browser");
        var j = o("./touchAvailable");
        var m = null;
        n.exports = function l() {
            if (m === null) {
                m = (!j() || (k.os === "iOS" && k.version >= 8) || k.name === "Chrome")
            }
            return m
        }
    }, {
        "./touchAvailable": 368,
        "ac-browser": 242
    }],
    357: [function(l, k, m) {
        var i = Object.prototype.hasOwnProperty;
        var j = null;
        k.exports = function h() {
            if (j === null) {
                j = false;
                try {
                    if ("cookie" in document && !!navigator.cookieEnabled) {
                        document.cookie = "ac_feature_cookie=1";
                        j = (document.cookie.indexOf("ac_feature_cookie") !== -1);
                        document.cookie = "ac_feature_cookie=; expires=Thu, 01 Jan 1970 00:00:01 GMT;"
                    }
                } catch (a) {}
            }
            return j
        }
    }, {}],
    358: [function(l, k, m) {
        var i = l("./cssPropertyAvailable");
        var j = null;
        k.exports = function h() {
            var a;
            if (j === null) {
                a = ["linear-gradient(to bottom right, #9f9, white)", "linear-gradient(top left, #9f9, white)", "gradient(linear, left top, right bottom, from(#9f9), to(white))"];
                j = a.some(function(b) {
                    return i("background-image", b)
                })
            }
            return j
        }
    }, {
        "./cssPropertyAvailable": 359
    }],
    359: [function(k, j, g) {
        var i = k("ac-prefixer");
        j.exports = function h(a, b) {
            if (b) {
                return !!i.getStyleValue(a, b)
            } else {
                return !!i.getStyleProperty(a)
            }
        }
    }, {
        "ac-prefixer": 351
    }],
    360: [function(k, j, m) {
        var h = k("./touchAvailable");
        var i = null;
        j.exports = function l() {
            if (i === null) {
                i = (!h() && !window.orientation)
            }
            return i
        }
    }, {
        "./touchAvailable": 368
    }],
    361: [function(l, k, n) {
        var m = l("./isDesktop");
        var i = l("./isTablet");
        var j = null;
        k.exports = function o() {
            if (j === null) {
                j = (!m() && !i())
            }
            return j
        }
    }, {
        "./isDesktop": 360,
        "./isTablet": 363
    }],
    362: [function(f, i, g) {
        i.exports = function h() {
            var b = ["min-device-pixel-ratio:1.5", "-webkit-min-device-pixel-ratio:1.5", "min-resolution:1.5dppx", "min-resolution:144dpi", "min--moz-device-pixel-ratio:1.5"];
            var a;
            if (window.devicePixelRatio !== undefined) {
                if (window.devicePixelRatio >= 1.5) {
                    return true
                }
            } else {
                for (a = 0; a < b.length; a += 1) {
                    if (window.matchMedia("(" + b[a] + ")").matches === true) {
                        return true
                    }
                }
            }
            return false
        }
    }, {}],
    363: [function(m, l, o) {
        var n = m("./isDesktop");
        var i = null;
        var k = function() {
            if (typeof window.orientation === "undefined") {
                return window.screen.width
            }
            return window.screen.width < window.screen.height ? window.screen.width : window.screen.height
        };
        l.exports = function j() {
            if (i === null) {
                i = (!n() && k() >= 600)
            }
            return i
        }
    }, {
        "./isDesktop": 360
    }],
    364: [function(k, j, h) {
        var i = null;
        j.exports = function g() {
            if (i === null) {
                i = false;
                try {
                    i = !!(window.localStorage && window.localStorage.non_existent !== null)
                } catch (a) {}
            }
            return i
        }
    }, {}],
    365: [function(k, j, g) {
        var i = null;
        j.exports = function h() {
            if (i === null) {
                try {
                    if (typeof window.sessionStorage !== "undefined" && typeof window.sessionStorage.setItem === "function") {
                        window.sessionStorage.setItem("ac_browser_detect", "test");
                        i = true;
                        window.sessionStorage.removeItem("ac_browser_detect", "test")
                    } else {
                        i = false
                    }
                } catch (a) {
                    i = false
                }
            }
            return i
        }
    }, {}],
    366: [function(k, j, g) {
        var i = null;
        j.exports = function h() {
            if (i === null) {
                i = document.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#Image", "1.1")
            }
            return i
        }
    }, {}],
    367: [function(m, l, h) {
        var i = m("./cssPropertyAvailable");
        var j = null;
        l.exports = function k() {
            if (j === null) {
                j = (i("perspective", "1px") && i("transform", "translateZ(0)"))
            }
            return j
        }
    }, {
        "./cssPropertyAvailable": 359
    }],
    368: [function(k, j, g) {
        var i = null;
        j.exports = function h() {
            if (i === null) {
                i = !!(("ontouchstart" in window) || window.DocumentTouch && document instanceof window.DocumentTouch)
            }
            return i
        }
    }, {}],
    369: [function(Q, V, B) {
        var G = Object.prototype.toString;
        var N = Object.prototype.hasOwnProperty;
        var W = typeof Array.prototype.indexOf === "function" ? function(a, b) {
            return a.indexOf(b)
        } : function(a, b) {
            for (var c = 0; c < a.length; c++) {
                if (a[c] === b) {
                    return c
                }
            }
            return -1
        };
        var O = Array.isArray || function(a) {
            return G.call(a) == "[object Array]"
        };
        var D = Object.keys || function(b) {
            var a = [];
            for (var c in b) {
                if (b.hasOwnProperty(c)) {
                    a.push(c)
                }
            }
            return a
        };
        var E = typeof Array.prototype.forEach === "function" ? function(a, b) {
            return a.forEach(b)
        } : function(a, b) {
            for (var c = 0; c < a.length; c++) {
                b(a[c])
            }
        };
        var M = function(a, b, f) {
            if (typeof a.reduce === "function") {
                return a.reduce(b, f)
            }
            var c = f;
            for (var d = 0; d < a.length; d++) {
                c = b(c, a[d])
            }
            return c
        };
        var A = /^[0-9]+$/;

        function U(b, c) {
            if (b[c].length == 0) {
                return b[c] = {}
            }
            var d = {};
            for (var a in b[c]) {
                if (N.call(b[c], a)) {
                    d[a] = b[c][a]
                }
            }
            b[c] = d;
            return d
        }

        function I(c, f, g, b) {
            var a = c.shift();
            if (N.call(Object.prototype, g)) {
                return
            }
            if (!a) {
                if (O(f[g])) {
                    f[g].push(b)
                } else {
                    if ("object" == typeof f[g]) {
                        f[g] = b
                    } else {
                        if ("undefined" == typeof f[g]) {
                            f[g] = b
                        } else {
                            f[g] = [f[g], b]
                        }
                    }
                }
            } else {
                var d = f[g] = f[g] || [];
                if ("]" == a) {
                    if (O(d)) {
                        if ("" != b) {
                            d.push(b)
                        }
                    } else {
                        if ("object" == typeof d) {
                            d[D(d).length] = b
                        } else {
                            d = f[g] = [f[g], b]
                        }
                    }
                } else {
                    if (~W(a, "]")) {
                        a = a.substr(0, a.length - 1);
                        if (!A.test(a) && O(d)) {
                            d = U(f, g)
                        }
                        I(c, d, a, b)
                    } else {
                        if (!A.test(a) && O(d)) {
                            d = U(f, g)
                        }
                        I(c, d, a, b)
                    }
                }
            }
        }

        function T(f, g, b) {
            if (~W(g, "]")) {
                var c = g.split("["),
                    a = c.length,
                    d = a - 1;
                I(c, f, "base", b)
            } else {
                if (!A.test(g) && O(f.base)) {
                    var h = {};
                    for (var i in f.base) {
                        h[i] = f.base[i]
                    }
                    f.base = h
                }
                L(f.base, g, b)
            }
            return f
        }

        function K(b) {
            if ("object" != typeof b) {
                return b
            }
            if (O(b)) {
                var a = [];
                for (var c in b) {
                    if (N.call(b, c)) {
                        a.push(b[c])
                    }
                }
                return a
            }
            for (var d in b) {
                b[d] = K(b[d])
            }
            return b
        }

        function S(b) {
            var a = {
                base: {}
            };
            E(D(b), function(c) {
                T(a, c, b[c])
            });
            return K(a.base)
        }

        function R(b) {
            var a = M(String(b).split("&"), function(i, d) {
                var c = W(d, "="),
                    f = F(d),
                    h = d.substr(0, f || c),
                    g = d.substr(f || c, d.length),
                    g = g.substr(W(g, "=") + 1, g.length);
                if ("" == h) {
                    h = d, g = ""
                }
                if ("" == h) {
                    return i
                }
                return T(i, J(h), J(g))
            }, {
                base: {}
            }).base;
            return K(a)
        }
        B.parse = function(a) {
            if (null == a || "" == a) {
                return {}
            }
            return "object" == typeof a ? S(a) : R(a)
        };
        var H = B.stringify = function(b, a) {
            if (O(b)) {
                return P(b, a)
            } else {
                if ("[object Object]" == G.call(b)) {
                    return C(b, a)
                } else {
                    if ("string" == typeof b) {
                        return X(b, a)
                    } else {
                        return a + "=" + encodeURIComponent(String(b))
                    }
                }
            }
        };

        function X(b, a) {
            if (!a) {
                throw new TypeError("stringify expects an object")
            }
            return a + "=" + encodeURIComponent(b)
        }

        function P(a, b) {
            var d = [];
            if (!b) {
                throw new TypeError("stringify expects an object")
            }
            for (var c = 0; c < a.length; c++) {
                d.push(H(a[c], b + "[" + c + "]"))
            }
            return d.join("&")
        }

        function C(b, c) {
            var h = [],
                d = D(b),
                f;
            for (var g = 0, a = d.length; g < a; ++g) {
                f = d[g];
                if ("" == f) {
                    continue
                }
                if (null == b[f]) {
                    h.push(encodeURIComponent(f) + "=")
                } else {
                    h.push(H(b[f], c ? c + "[" + encodeURIComponent(f) + "]" : encodeURIComponent(f)))
                }
            }
            return h.join("&")
        }

        function L(c, d, b) {
            var a = c[d];
            if (N.call(Object.prototype, d)) {
                return
            }
            if (undefined === a) {
                c[d] = b
            } else {
                if (O(a)) {
                    a.push(b)
                } else {
                    c[d] = [a, b]
                }
            }
        }

        function F(c) {
            var a = c.length,
                d, b;
            for (var f = 0; f < a; ++f) {
                b = c[f];
                if ("]" == b) {
                    d = false
                }
                if ("[" == b) {
                    d = true
                }
                if ("=" == b && !d) {
                    return f
                }
            }
        }

        function J(b) {
            try {
                return decodeURIComponent(b.replace(/\+/g, " "))
            } catch (a) {
                return b
            }
        }
    }, {}],
    370: [function(d, g, f) {
        g.exports = {
            clone: d("./ac-object/clone"),
            create: d("./ac-object/create"),
            defaults: d("./ac-object/defaults"),
            extend: d("./ac-object/extend"),
            getPrototypeOf: d("./ac-object/getPrototypeOf"),
            isDate: d("./ac-object/isDate"),
            isEmpty: d("./ac-object/isEmpty"),
            isRegExp: d("./ac-object/isRegExp"),
            toQueryParameters: d("./ac-object/toQueryParameters")
        }
    }, {
        "./ac-object/clone": 371,
        "./ac-object/create": 372,
        "./ac-object/defaults": 373,
        "./ac-object/extend": 374,
        "./ac-object/getPrototypeOf": 375,
        "./ac-object/isDate": 376,
        "./ac-object/isEmpty": 377,
        "./ac-object/isRegExp": 378,
        "./ac-object/toQueryParameters": 379
    }],
    371: [function(g, k, h) {
        var i = g("./extend");
        k.exports = function j(a) {
            return i({}, a)
        }
    }, {
        "./extend": 374
    }],
    372: [function(g, j, h) {
        var i = function() {};
        j.exports = function k(a) {
            if (arguments.length > 1) {
                throw new Error("Second argument not supported")
            }
            if (a === null || typeof a !== "object") {
                throw new TypeError("Object prototype may only be an Object.")
            }
            if (typeof Object.create === "function") {
                return Object.create(a)
            } else {
                i.prototype = a;
                return new i()
            }
        }
    }, {}],
    373: [function(g, k, h) {
        var i = g("./extend");
        k.exports = function j(a, b) {
            if (typeof a !== "object") {
                throw new TypeError("defaults: must provide a defaults object")
            }
            b = b || {};
            if (typeof b !== "object") {
                throw new TypeError("defaults: options must be a typeof object")
            }
            return i({}, a, b)
        }
    }, {
        "./extend": 374
    }],
    374: [function(k, j, g) {
        var h = Object.prototype.hasOwnProperty;
        j.exports = function i() {
            var a;
            var b;
            if (arguments.length < 2) {
                a = [{}, arguments[0]]
            } else {
                a = [].slice.call(arguments)
            }
            b = a.shift();
            a.forEach(function(c) {
                if (c != null) {
                    for (var d in c) {
                        if (h.call(c, d)) {
                            b[d] = c[d]
                        }
                    }
                }
            });
            return b
        }
    }, {}],
    375: [function(k, j, g) {
        var h = Object.prototype.hasOwnProperty;
        j.exports = function i(a) {
            if (Object.getPrototypeOf) {
                return Object.getPrototypeOf(a)
            } else {
                if (typeof a !== "object") {
                    throw new Error("Requested prototype of a value that is not an object.")
                } else {
                    if (typeof this.__proto__ === "object") {
                        return a.__proto__
                    } else {
                        var c = a.constructor;
                        var b;
                        if (h.call(a, "constructor")) {
                            b = c;
                            if (!(delete a.constructor)) {
                                return null
                            }
                            c = a.constructor;
                            a.constructor = b
                        }
                        return c ? c.prototype : null
                    }
                }
            }
        }
    }, {}],
    376: [function(f, h, g) {
        h.exports = function i(a) {
            return Object.prototype.toString.call(a) === "[object Date]"
        }
    }, {}],
    377: [function(k, j, g) {
        var h = Object.prototype.hasOwnProperty;
        j.exports = function i(b) {
            var a;
            if (typeof b !== "object") {
                throw new TypeError("ac-base.Object.isEmpty : Invalid parameter - expected object")
            }
            for (a in b) {
                if (h.call(b, a)) {
                    return false
                }
            }
            return true
        }
    }, {}],
    378: [function(i, h, f) {
        h.exports = function g(a) {
            return window.RegExp ? a instanceof RegExp : false
        }
    }, {}],
    379: [function(k, i, g) {
        var h = k("qs");
        i.exports = function j(a) {
            if (typeof a !== "object") {
                throw new TypeError("toQueryParameters error: argument is not an object")
            }
            return h.stringify(a)
        }
    }, {
        qs: 369
    }],
    380: [function(f, i, g) {
        var h = f("./ac-modal-video/ModalVideo");
        h.create = f("./ac-modal-video/factory/create");
        i.exports = {
            ModalVideo: h
        }
    }, {
        "./ac-modal-video/ModalVideo": 381,
        "./ac-modal-video/factory/create": 384
    }],
    381: [function(z, B, w) {
        var A = z("ac-modal");
        var D = z("ac-object");
        var q = z("ac-classlist");
        var p = z("ac-event-emitter").EventEmitter;
        var C = z("./featureDetect/featureDetect");
        var x = z("./delegate/Default");
        var r = z("./delegate/Mobile");
        var u = x;
        var t;
        var y = {
            deepLink: false,
            playOnOpen: false,
            closeOnEnded: false,
            autoAppend: true
        };
        var v = function(a, b) {
            this.options = D.defaults(y, b || {});
            this.modal = this.options.modal || new A.Modal();
            this._delegate = this._createDelegate();
            this.setPlayer(a);
            if (this.options.autoAppend) {
                this.appendPlayer(a)
            }
            q.add(this.modal.modalEl, "ac-modal-video");
            this.modal.propagateTo(this);
            this.modal.on("willclose", this._willClose, this)
        };
        t = v.prototype = D.create(p.prototype);
        t._createDelegate = function() {
            var a;
            var b = x;
            if (C.shouldPlayInModal() === false) {
                b = r
            }
            return new b(this.player, this.modal, this.options)
        };
        t.appendPlayer = function(b) {
            var a = document.createElement("div");
            b.appendTo(a);
            this.modal.appendContent(a)
        };
        t.getPlayer = function() {
            return this._delegate.getPlayer()
        };
        t.setPlayer = function(a) {
            return this._delegate.setPlayer(a)
        };
        t.open = function() {
            this._delegate.open()
        };
        t.close = function() {
            this._delegate.close()
        };
        t._willClose = function() {
            this._delegate.willClose()
        };
        t._pause = function() {
            this._delegate.pause()
        };
        B.exports = v
    }, {
        "./delegate/Default": 382,
        "./delegate/Mobile": 383,
        "./featureDetect/featureDetect": 386,
        "ac-classlist": 292,
        "ac-event-emitter": 246,
        "ac-modal": 411,
        "ac-object": 370
    }],
    382: [function(k, j, h) {
        function g(b, a, c) {
            this.player = b;
            this.modal = a;
            this.options = c
        }
        var i = g.prototype;
        i.pause = function() {
            if (this.player && this.player.getReadyState() > 0) {
                this.player.pause()
            }
        };
        i.play = function() {
            if (this.player && this.player.getReadyState() > 0) {
                this.player.play()
            } else {
                this.player.once("loadedmetadata", this.player.play, this.player)
            }
        };
        i._bindPlayerEvents = function() {
            this.player.on("ended", this._onEnded, this)
        };
        i._unbindPlayerEvents = function() {
            this.player.off("ended", this._onEnded, this);
            this.player.off("loadedmetadata", this.player.play, this.player);
            this.player.off("timeupdate", this.pause, this);
            this.player.off("play", this.pause, this)
        };
        i.open = function() {
            if (this.player && this.player.has("timeupdate", this._onTimeUpdateOnce)) {
                this.player.off("timeupdate", this._onTimeUpdateOnce)
            }
            this.modal.open();
            if (this.player && this.player.getPaused()) {
                this.player.off("play", this.pause);
                if (this.options.playOnOpen) {
                    this.play()
                }
            }
        };
        i.getPlayer = function() {
            return this.player
        };
        i.setPlayer = function(a) {
            if (this.player) {
                this._unbindPlayerEvents()
            }
            this.player = a;
            this._bindPlayerEvents()
        };
        i.close = function() {
            this.modal.close()
        };
        i.willClose = function() {
            if (this.player && this.player.isFullscreen()) {
                this.player.exitFullscreen()
            }
            if (this.player && this.player.getReadyState() > 0) {
                if (this.player.getEnded() === false) {
                    this.pause()
                }
            } else {
                if (this.player) {
                    this.player.on("play", this.pause, this)
                }
            }
            if (this.player && this.player.getEnded() === false) {
                this.player.on("timeupdate", this._onTimeUpdateOnce, this)
            }
        };
        i._onEnded = function() {
            if (this.options.closeOnEnded) {
                this.close()
            }
        };
        i._onTimeUpdateOnce = function() {
            this.pause();
            this.player.off("timeupdate", this._onTimeUpdateOnce)
        };
        j.exports = g
    }, {}],
    383: [function(o, m, j) {
        var i = o("ac-object");
        var k = o("./Default");

        function n() {
            k.apply(this, arguments)
        }
        var l = n.prototype = i.create(k.prototype);
        l.open = function() {
            this.player.play()
        };
        m.exports = n
    }, {
        "./Default": 382,
        "ac-object": 370
    }],
    384: [function(n, m, i) {
        var k = n("./../ModalVideo");
        var l = n("ac-dom-emitter").DOMEmitter;
        var j = n("./router");
        m.exports = function o(b, c) {
            c = c || {};
            var d = new k(b, c);
            var f;
            if (c.deepLink) {
                f = j.createOrGet();
                f.createRoute(c.deepLink, d.open, d);
                f.start()
            }
            if (c.triggerSelector) {
                var a = new l(document);
                a.on("click", c.triggerSelector, function(g) {
                    g.preventDefault();
                    d.open()
                }, d)
            }
            return d
        }
    }, {
        "./../ModalVideo": 381,
        "./router": 385,
        "ac-dom-emitter": 328
    }],
    385: [function(j, i, k) {
        var g = j("ac-router");
        var h = null;
        i.exports = {
            create: function() {
                h = new g.Router({
                    hashChange: true,
                    pushState: false
                })
            },
            get: function() {
                return h
            },
            destroy: function() {
                h = null
            },
            createOrGet: function() {
                if (h === null) {
                    this.create()
                }
                return this.get()
            }
        }
    }, {
        "ac-router": 464
    }],
    386: [function(i, h, f) {
        var g = i("ac-feature");
        h.exports = {
            shouldPlayInModal: function() {
                return (g.isTablet() || g.isDesktop())
            }
        }
    }, {
        "ac-feature": 354
    }],
    387: [function(d, g, f) {
        arguments[4][292][0].apply(f, arguments)
    }, {
        "./ac-classlist/add": 388,
        "./ac-classlist/contains": 389,
        "./ac-classlist/remove": 391,
        "./ac-classlist/toggle": 392,
        dup: 292
    }],
    388: [function(d, g, f) {
        arguments[4][293][0].apply(f, arguments)
    }, {
        "./helpers/className": 390,
        dup: 293
    }],
    389: [function(d, g, f) {
        arguments[4][294][0].apply(f, arguments)
    }, {
        "./helpers/className": 390,
        dup: 294
    }],
    390: [function(d, g, f) {
        arguments[4][295][0].apply(f, arguments)
    }, {
        dup: 295
    }],
    391: [function(d, g, f) {
        arguments[4][296][0].apply(f, arguments)
    }, {
        "./helpers/className": 390,
        dup: 296
    }],
    392: [function(d, g, f) {
        arguments[4][297][0].apply(f, arguments)
    }, {
        "./helpers/className": 390,
        dup: 297
    }],
    393: [function(d, g, f) {
        arguments[4][30][0].apply(f, arguments)
    }, {
        "./ac-prefixer/Prefixer": 394,
        dup: 30
    }],
    394: [function(d, g, f) {
        arguments[4][31][0].apply(f, arguments)
    }, {
        "./Prefixer/camelCasedEvents": 395,
        dup: 31
    }],
    395: [function(d, g, f) {
        arguments[4][32][0].apply(f, arguments)
    }, {
        dup: 32
    }],
    396: [function(d, g, f) {
        arguments[4][282][0].apply(f, arguments)
    }, {
        "./ac-dom-events/addEventListener": 397,
        "./ac-dom-events/dispatchEvent": 398,
        "./ac-dom-events/removeEventListener": 399,
        "./ac-dom-events/stop": 400,
        "./ac-dom-events/target": 401,
        dup: 282
    }],
    397: [function(d, g, f) {
        arguments[4][34][0].apply(f, arguments)
    }, {
        "ac-prefixer": 393,
        dup: 34
    }],
    398: [function(d, g, f) {
        arguments[4][35][0].apply(f, arguments)
    }, {
        dup: 35
    }],
    399: [function(d, g, f) {
        arguments[4][37][0].apply(f, arguments)
    }, {
        "ac-prefixer": 393,
        dup: 37
    }],
    400: [function(d, g, f) {
        arguments[4][286][0].apply(f, arguments)
    }, {
        dup: 286
    }],
    401: [function(d, g, f) {
        arguments[4][287][0].apply(f, arguments)
    }, {
        dup: 287
    }],
    402: [function(d, g, f) {
        arguments[4][30][0].apply(f, arguments)
    }, {
        "./ac-prefixer/Prefixer": 403,
        dup: 30
    }],
    403: [function(d, g, f) {
        arguments[4][31][0].apply(f, arguments)
    }, {
        "./Prefixer/camelCasedEvents": 404,
        dup: 31
    }],
    404: [function(d, g, f) {
        arguments[4][32][0].apply(f, arguments)
    }, {
        dup: 32
    }],
    405: [function(d, g, f) {
        g.exports = {
            getStyle: d("./ac-dom-styles/getStyle"),
            setStyle: d("./ac-dom-styles/setStyle")
        }
    }, {
        "./ac-dom-styles/getStyle": 406,
        "./ac-dom-styles/setStyle": 409
    }],
    406: [function(l, k, m) {
        var j = l("ac-prefixer");
        var h = l("./shim/getComputedStyle");
        k.exports = function i() {
            var c = Array.prototype.slice.call(arguments);
            var g = c.shift(c);
            var a = h(g);
            var b = {};
            var q;
            var f;
            var r;
            var d;
            if (typeof c[0] !== "string") {
                c = c[0]
            }
            for (d = 0; d < c.length; d++) {
                q = c[d];
                f = j.getStyleProperty(q);
                if (f) {
                    q = j.stripPrefixes(f);
                    r = a[f];
                    if (!r || r === "auto") {
                        r = null
                    }
                    if (r) {
                        r = j.stripPrefixes(r)
                    }
                } else {
                    r = null
                }
                b[q] = r
            }
            return b
        }
    }, {
        "./shim/getComputedStyle": 410,
        "ac-prefixer": 402
    }],
    407: [function(j, i, k) {
        var g = {
            transform: ["matrix", "translate", "translateX", "translateY", "scale", "scaleX", "scaleY", "rotate", "skewX", "skewY", "matrix3d", "translate3d", "translateZ", "scale3d", "scaleZ", "rotate3d", "rotateX", "rotateY", "rotateZ", "perspective"],
            filter: ["blur", "brightness", "contrast", "drop-shadow", "grayscale", "hue-rotate", "invert", "saturate", "sepia"]
        };
        i.exports = function h(c) {
            var a;
            var b;
            var d;
            var f;
            for (a in g) {
                b = c[a] ? c[a] : "";
                for (f = 0; f < g[a].length; f++) {
                    d = g[a][f];
                    if (d in c) {
                        b += " " + d + "(" + c[d] + ")";
                        delete c[d]
                    }
                }
                b = b.trim();
                if (b) {
                    c[a] = b
                }
            }
            return c
        }
    }, {}],
    408: [function(i, h, f) {
        h.exports = function g(d) {
            var b;
            var a;
            var c;
            var n;
            var m;
            if (typeof d === "string") {
                b = {};
                a = d.split(";");
                n = a.length;
                for (m = 0; m < n; m += 1) {
                    c = a[m].indexOf(":");
                    if (c > 0) {
                        b[a[m].substr(0, c).trim()] = a[m].substr(c + 1).trim()
                    }
                }
            } else {
                b = d
            }
            return b
        }
    }, {}],
    409: [function(n, m, o) {
        var k = n("ac-prefixer");
        var i = n("./helpers/cssToObject");
        var j = n("./helpers/combinePartialProperties");
        m.exports = function l(g, b) {
            var c;
            var d;
            var h;
            var f;
            var a;
            if ((typeof b !== "string" && typeof b !== "object") || Array.isArray(b)) {
                throw new TypeError("setStyle: styles must be an Object or String")
            }
            b = i(b);
            b = j(b);
            c = "";
            for (h in b) {
                a = b[h];
                if (!a && a !== 0) {
                    f = k.getStyleProperty(h);
                    if ("removeAttribute" in g.style) {
                        g.style.removeAttribute(f)
                    } else {
                        g.style[f] = ""
                    }
                } else {
                    d = k.getStyleCSS(h, a);
                    if (d !== false) {
                        c += " " + d
                    }
                }
            }
            if (c.length) {
                g.style.cssText += c
            }
            return g
        }
    }, {
        "./helpers/combinePartialProperties": 407,
        "./helpers/cssToObject": 408,
        "ac-prefixer": 402
    }],
    410: [function(d, g, f) {
        g.exports = (function() {
            if ("getComputedStyle" in window) {
                return window.getComputedStyle
            }
            return function(b) {
                var i;
                var a;
                var c;
                i = b.currentStyle;
                for (a in i) {
                    if (a === "styleFloat") {
                        c["float"] = c.cssFloat = i[a]
                    } else {
                        c[a] = i[a]
                    }
                }
                return c
            }
        }())
    }, {}],
    411: [function(d, g, f) {
        g.exports = {
            Modal: d("./ac-modal/Modal")
        }
    }, {
        "./ac-modal/Modal": 412
    }],
    412: [function(C, D, A) {
        var E = C("ac-classlist");
        var v = C("ac-dom-styles");
        var t = C("ac-dom-events");
        var u = C("ac-dom-nodes");
        var w = C("ac-dom-traversal");
        var B = C("ac-object");
        var y = C("ac-keyboard");
        var r = y.keys;
        var q = C("ac-event-emitter").EventEmitter;
        var F = document.documentElement;
        var z;

        function x(a) {
            this.opened = false;
            this.closeButton = null;
            this.modalEl = null;
            this.contentEl = null;
            this._keysToClose = [r.ESCAPE];
            this._keysToOpen = [];
            this._boundClose = this.close.bind(this);
            this._generateElements();
            if (a) {
                this.appendContent(a)
            }
        }
        var z = x.prototype = B.create(q.prototype);
        z._getScrollX = function() {
            var a = window.pageXOffset;
            if (!a) {
                var b = document.documentElement || document.body.parentNode || document.body;
                a = b.scrollLeft
            }
            return a
        };
        z._getScrollY = function() {
            var a = window.pageYOffset;
            if (!a) {
                var b = document.documentElement || document.body.parentNode || document.body;
                a = b.scrollTop
            }
            return a
        };
        z.open = function() {
            this._scrollX = this._getScrollX();
            this._scrollY = this._getScrollY();
            if (!this.opened) {
                this._attachEvents();
                this.trigger("willopen");
                E.add(F, "modal-open");
                this.opened = true;
                this.trigger("open")
            }
        };
        z.close = function() {
            this.trigger("willclose");
            this._removeEvents();
            E.remove(F, "modal-open");
            this._returnToScrollPosition();
            this.opened = false;
            this.trigger("close")
        };
        z.appendContent = function(a) {
            if (a && u.isElement(a)) {
                this.contentEl.appendChild(a)
            } else {
                throw new TypeError(a + " is not an Element")
            }
        };
        z.removeContent = function(a) {
            if (this.contentEl.contains(a)) {
                u.remove(a)
            }
        };
        z.emptyContent = function() {
            var a = w.children(this.contentEl);
            a.forEach(u.remove)
        };
        z.destroy = function() {};
        z.addKeyToClose = function(a) {
            this._keysToClose.push(a);
            y.addKeyUp(a, this.close, this)
        };
        z.removeKeyToClose = function(a) {
            var b = this._keysToClose.indexOf(a);
            if (b !== -1) {
                this._keysToClose.splice(b, 1)
            }
            y.removeKeyUp(a, this.close, this)
        };
        z._removeEvents = function() {
            t.removeEventListener(this.closeButton, "click", this._boundClose);
            this._keysToClose.forEach(this.removeKeyToClose, this)
        };
        z._attachEvents = function() {
            t.addEventListener(this.closeButton, "click", this._boundClose);
            this._keysToClose.forEach(this.addKeyToClose, this)
        };
        z._generateCloseButton = function() {
            var a = document.createElement("button");
            E.add(a, "modal-close", "icon", "icon-closealt");
            return a
        };
        z._generateModalEl = function() {
            var a = document.createElement("div");
            E.add(a, "modal");
            return a
        };
        z._createContentElement = function() {
            var a = document.createElement("div");
            E.add(a, "modal-content");
            return a
        };
        z._generateElements = function() {
            this.closeButton = this._closeButton || this._generateCloseButton();
            this.contentEl = this._createContentElement();
            this.modalEl = this._modalEl || this._generateModalEl();
            this.modalEl.appendChild(this.closeButton);
            this.modalEl.appendChild(this.contentEl);
            document.body.appendChild(this.modalEl);
            E.add(F, "has-modal")
        };
        z._returnToScrollPosition = function() {
            window.scrollTo(this._scrollX || 0, this._scrollY || 0)
        };
        D.exports = x
    }, {
        "ac-classlist": 387,
        "ac-dom-events": 396,
        "ac-dom-nodes": 102,
        "ac-dom-styles": 405,
        "ac-dom-traversal": 138,
        "ac-event-emitter": 246,
        "ac-keyboard": 288,
        "ac-object": 713
    }],
    413: [function(d, g, f) {
        arguments[4][369][0].apply(f, arguments)
    }, {
        dup: 369
    }],
    414: [function(i, o, j) {
        var m = i("./ac-base/globals");
        var k = m.window.AC = m.window.AC || {};
        var n = i("./ac-base/Environment");
        var l = i("./ac-base/Element/onDOMReady");
        if (n.Browser.IE) {
            if (n.Browser.IE.documentMode < 9) {
                i("./ac-base/shims/html5.js")()
            }
            if (n.Browser.IE.documentMode < 8) {
                l(i("./ac-base/shims/ie/nonClickableImageBooster"))
            }
        }
        if (typeof define !== "undefined") {
            k.define = define;
            k.require = i
        }
        k.adler32 = i("./ac-base/adler32");
        k.Ajax = i("./ac-base/Ajax");
        k.Array = i("./ac-base/Array");
        k.bindEventListeners = i("./ac-base/bindEventListeners");
        k.Canvas = i("./ac-base/Canvas");
        k.Class = i("./ac-base/Class");
        k.Date = i("./ac-base/Date");
        k.DeferredQueue = i("./ac-base/DeferredQueue");
        k.EasingFunctions = i("./ac-base/EasingFunctions");
        k.Element = i("./ac-base/Element");
        k.Environment = n;
        k.Event = i("./ac-base/Event");
        k.Function = i("./ac-base/Function");
        k.History = i("./ac-base/History");
        k.log = i("./ac-base/log");
        k.namespace = i("./ac-base/namespace");
        k.NotificationCenter = i("./ac-base/NotificationCenter");
        k.Object = i("./ac-base/Object");
        k.onDOMReady = l;
        k.onWindowLoad = i("./ac-base/Element/onWindowLoad");
        k.queryParameters = i("./ac-base/queryParameters");
        k.RegExp = i("./ac-base/RegExp");
        k.Registry = i("./ac-base/Registry");
        k.String = i("./ac-base/String");
        k.Synthesize = i("./ac-base/Synthesize");
        k.uid = i("./ac-base/uid");
        k.Viewport = i("./ac-base/Viewport");
        k.windowHasLoaded = false;
        k.Element.addEventListener(m.window, "load", function() {
            k.windowHasLoaded = true
        });
        o.exports = k
    }, {
        "./ac-base/Ajax": 415,
        "./ac-base/Array": 419,
        "./ac-base/Canvas": 420,
        "./ac-base/Class": 421,
        "./ac-base/Date": 422,
        "./ac-base/DeferredQueue": 423,
        "./ac-base/EasingFunctions": 424,
        "./ac-base/Element": 425,
        "./ac-base/Element/onDOMReady": 428,
        "./ac-base/Element/onWindowLoad": 429,
        "./ac-base/Environment": 431,
        "./ac-base/Event": 437,
        "./ac-base/Function": 438,
        "./ac-base/History": 439,
        "./ac-base/NotificationCenter": 440,
        "./ac-base/Object": 441,
        "./ac-base/RegExp": 442,
        "./ac-base/Registry": 443,
        "./ac-base/String": 445,
        "./ac-base/Synthesize": 446,
        "./ac-base/Viewport": 447,
        "./ac-base/adler32": 448,
        "./ac-base/bindEventListeners": 449,
        "./ac-base/globals": 450,
        "./ac-base/log": 451,
        "./ac-base/namespace": 452,
        "./ac-base/queryParameters": 453,
        "./ac-base/shims/html5.js": 454,
        "./ac-base/shims/ie/nonClickableImageBooster": 458,
        "./ac-base/uid": 459
    }],
    415: [function(i, h, g) {
        var f = {};
        i("./Ajax/ajax-tracker")(f);
        i("./Ajax/ajax-response")(f);
        i("./Ajax/ajax-request")(f);
        f.getTransport = function() {
            return new XMLHttpRequest()
        };
        f.checkURL = function(c, a) {
            var d = f.__validateArguments(c, a);
            if (d) {
                throw d
            }
            var b = f.getTransport();
            this.__handleReadyStateChange(b, a);
            b.open("HEAD", c, true);
            b.send(null)
        };
        f.__handleReadyStateChange = function(a, b) {
            a.onreadystatechange = function() {
                if (this.readyState === 4) {
                    if (typeof b === "function") {
                        b(this.status === 200)
                    }
                }
            }
        };
        f.__validateArguments = function(c, a) {
            var b;
            if (!c) {
                b = "Must provide a url"
            }
            if (!a) {
                b = "Must provide a callback"
            }
            if (!c && !a) {
                b = "Must provide a url and callback"
            }
            return b
        };
        h.exports = f
    }, {
        "./Ajax/ajax-request": 416,
        "./Ajax/ajax-response": 417,
        "./Ajax/ajax-tracker": 418
    }],
    416: [function(k, j, g) {
        var i = k("../Class");
        var h = k("../Object");
        j.exports = function(b) {
            var a = i();
            a.prototype = {
                __defaultOptions: {
                    method: "get"
                },
                initialize: function(c, d) {
                    this._transport = b.getTransport();
                    this._mimeTypeOverride = null;
                    this._options = null;
                    h.synthesize(this);
                    this.setOptions(h.extend(h.clone(this.__defaultOptions), d || {}));
                    b.AjaxTracker.sharedInstance().addResponder(this);
                    this.__configureTransport(c)
                },
                __configureTransport: function(c) {
                    this.transport().onreadystatechange = this.__handleTransportStateChange.bind(this);
                    this.transport().open(this.options().method, c, true);
                    this.transport().setRequestHeader("Content-Type", this.options().contentType);
                    this.transport().send(null)
                },
                __handleTransportStateChange: function() {
                    if (this.transport().readyState === 4) {
                        var c = new b.AjaxResponse(this)
                    }
                },
                overrideMimeType: function(c) {
                    this._mimeTypeOverride = c;
                    if (this.transport().overrideMimeType) {
                        this.transport().overrideMimeType(c)
                    }
                },
                _overrideMimeType: null
            };
            b.AjaxRequest = a
        }
    }, {
        "../Class": 421,
        "../Object": 441
    }],
    417: [function(f, i, g) {
        var h = f("../Class");
        i.exports = function(b) {
            var a = h();
            a.prototype = {
                _request: null,
                _transport: null,
                initialize: function(d) {
                    this._transport = d.transport();
                    this._request = d;
                    var c = false;
                    var k = this._transport.readyState === 4;
                    if (k) {
                        this.__triggerCallbacks();
                        c = true
                    }
                    if (c) {
                        if (this._request.options().onComplete) {
                            this._request.options().onComplete(this)
                        }
                        b.AjaxTracker.sharedInstance().removeResponder(d)
                    }
                },
                __triggerCallbacks: function() {
                    var c = this._transport.status;
                    var d = c >= 200 && c < 300;
                    var l = c >= 400 && c < 500;
                    var m = c >= 500 && c < 600 || c === 0;
                    if (d && this._request.options().onSuccess) {
                        this._request.options().onSuccess(this)
                    }
                    if (l && this._request.options().onFailure) {
                        this._request.options().onFailure(this)
                    }
                    if (m && this._request.options().onError) {
                        this._request.options().onError(this)
                    }
                },
                responseText: function() {
                    return this._transport.responseText
                },
                responseXML: function() {
                    return this._transport.responseXML
                },
                responseJSON: function() {
                    return JSON.parse(this._transport.responseText)
                }
            };
            b.AjaxResponse = a
        }
    }, {
        "../Class": 421
    }],
    418: [function(f, i, g) {
        var h = f("../Class");
        i.exports = function(b) {
            var a = h();
            a.prototype = {
                __responders: [],
                initialize: function() {},
                addResponder: function(c) {
                    this.__responders.push(c);
                    return this.__responders
                },
                removeResponder: function(d) {
                    var k = this.__responders.length;
                    this.__responders = this.__responders.filter(function(j) {
                        return j !== d
                    });
                    var c = this.__responders.length;
                    if (k > c) {
                        return true
                    }
                    return false
                }
            };
            b.AjaxTracker = a
        }
    }, {
        "../Class": 421
    }],
    419: [function(k, j, g) {
        var i = k("./Environment/Browser");
        var h = {};
        h.toArray = function(a) {
            return Array.prototype.slice.call(a)
        };
        h.flatten = function(a) {
            var c = [];
            var b = function(d) {
                if (Array.isArray(d)) {
                    d.forEach(b)
                } else {
                    c.push(d)
                }
            };
            a.forEach(b);
            return c
        };
        h.without = function(f, a) {
            var c;
            var d = f.indexOf(a);
            var b = f.length;
            if (d >= 0) {
                if (d === (b - 1)) {
                    c = f.slice(0, (b - 1))
                } else {
                    if (d === 0) {
                        c = f.slice(1)
                    } else {
                        c = f.slice(0, d);
                        c = c.concat(f.slice(d + 1))
                    }
                }
            } else {
                return f
            }
            return c
        };
        if (i.name === "IE") {
            k("./shims/ie/Array")(h, i)
        }
        j.exports = h
    }, {
        "./Environment/Browser": 432,
        "./shims/ie/Array": 455
    }],
    420: [function(k, j, g) {
        var i = k("./Element");
        var h = {};
        h.imageDataFromFile = function(b, a) {
            if (typeof a !== "function") {
                throw new TypeError("Need callback method to call when imageData is retrieved.")
            }
            if (typeof b !== "string" || b === "") {
                throw new TypeError("Src for imageData must be an Image Node with a src attribute or a string.")
            }
            var c = new Image();
            c.onload = function() {
                a(h.imageDataFromNode(c))
            };
            c.src = b
        };
        h.imageDataFromNode = function(d) {
            if (!i.isElement(d) || d.getAttribute("src") === "null" || d.width === 0) {
                throw new TypeError("Source node must be an IMG tag and must have already loaded.")
            }
            var a;
            var c = document.createElement("canvas");
            var b = c.getContext("2d");
            c.width = d.width;
            c.height = d.height;
            b.drawImage(d, 0, 0);
            a = b.getImageData(0, 0, d.width, d.height);
            return a
        };
        j.exports = h
    }, {
        "./Element": 425
    }],
    421: [function(p, o, q) {
        var j = p("./Object");
        var k = p("./Array");
        var l = p("./Function");
        var n = p("./Element/onDOMReady");

        function m() {
            var d = k.toArray(arguments);
            var f = (typeof d[0] === "function") ? d.shift() : null;
            var a = d.shift() || {};
            var b;
            var c = function() {
                var h;
                var g;
                h = ((typeof this.initialize === "function" && c.__shouldInitialize !== false) ? this.initialize.apply(this, arguments) : false);
                if (h === m.Invalidate) {
                    g = function() {
                        try {
                            if (this && this._parentClass && this._parentClass._sharedInstance === this) {
                                this._parentClass._sharedInstance = null
                            }
                        } catch (i) {
                            throw i
                        }
                    };
                    window.setTimeout(g.bind(this), 200)
                }
            };
            c.__superclass = f;
            if (f) {
                if (f.__superclass) {
                    b = m(f.__superclass, f.prototype)
                } else {
                    b = m(f.prototype)
                }
                b.__shouldInitialize = false;
                c.prototype = new b();
                j.extend(c.prototype, a);
                m.__wrapSuperMethods(c)
            } else {
                c.prototype = a
            }
            c.sharedInstance = function() {
                if (!c._sharedInstance) {
                    c._sharedInstance = new c();
                    c._sharedInstance._parentClass = c
                }
                return c._sharedInstance
            };
            j.synthesize(c.prototype);
            c.autocreate = a.__instantiateOnDOMReady || false;
            delete a.__instantiateOnDOMReady;
            if (c.autocreate) {
                n(function() {
                    if (c.autocreate) {
                        c.sharedInstance()
                    }
                })
            }
            return c
        }
        m.__wrapSuperMethods = function(a) {
            var b = a.prototype;
            var c = a.__superclass.prototype;
            var g;
            for (g in b) {
                if (b.hasOwnProperty(g)) {
                    if (typeof b[g] === "function") {
                        var d = b[g];
                        var f = l.getParamNames(d);
                        if (f[0] === "$super") {
                            b[g] = (function(u, v) {
                                var i = c[u];
                                return function h() {
                                    var r = k.toArray(arguments);
                                    return v.apply(this, [i.bind(this)].concat(r))
                                }
                            }(g, d))
                        }
                    }
                }
            }
            return this
        };
        m.Invalidate = function() {
            return false
        };
        o.exports = m
    }, {
        "./Array": 419,
        "./Element/onDOMReady": 428,
        "./Function": 438,
        "./Object": 441
    }],
    422: [function(f, i, g) {
        var h = {};
        h.isDate = function(a) {
            return !!(a && typeof a.getTime === "function")
        };
        i.exports = h
    }, {}],
    423: [function(q, t, l) {
        var k = q("./Array");
        var m = q("./Class");
        var o = q("./Object");
        var n = {
            autoplay: false,
            asynchronous: false
        };
        var p = m({
            initialize: function(a) {
                if (typeof a !== "object") {
                    a = {}
                }
                this._options = o.extend(o.clone(n), a);
                this._isPlaying = false;
                this._isRunningAction = false;
                this._queue = [];
                this.didFinish = this.__didFinish.bind(this);
                this.synthesize()
            },
            add: function(a, b) {
                var c = {};
                var d;
                if (b > 0) {
                    c.delay = b
                }
                d = new p.Action(a, c);
                this.queue().push(d);
                if (!this.isPlaying() && this._options.autoplay === true) {
                    this.start()
                }
            },
            remove: function(a) {
                this.setQueue(k.without(this.queue(), a))
            },
            start: function() {
                if (this.isPlaying()) {
                    return false
                }
                this.setIsPlaying(true);
                this.__runNextAction()
            },
            stop: function() {
                if (!this.isPlaying()) {
                    return false
                }
                this.setIsPlaying(false)
            },
            clear: function() {
                this.setQueue([]);
                this.stop()
            },
            __didFinish: function() {
                this.setIsRunningAction(false);
                this.__runNextAction()
            },
            __runNextAction: function() {
                if (!this.isPlaying()) {
                    return false
                }
                if (this.queue().length && !this.isRunningAction()) {
                    var a = this.queue().shift();
                    a.run();
                    if (this._options.asynchronous === true) {
                        this.setIsRunningAction(true);
                        return
                    }
                    this.__runNextAction()
                }
            }
        });
        var r = {
            delay: 0
        };
        p.Action = m({
            initialize: function(a, b) {
                if (typeof a !== "function") {
                    throw new TypeError("Deferred Queue func must be a function.")
                }
                if (typeof b !== "object") {
                    b = {}
                }
                this._options = o.extend(o.clone(r), b);
                this.__func = a;
                this.synthesize()
            },
            run: function() {
                var a = this.__func;
                if (typeof this._options.delay === "number" && this._options.delay > 0) {
                    window.setTimeout(function() {
                        a()
                    }, this._options.delay * 1000)
                } else {
                    a()
                }
            }
        });
        t.exports = p
    }, {
        "./Array": 419,
        "./Class": 421,
        "./Object": 441
    }],
    424: [function(f, i, g) {
        var h = {
            linear: function(b, d, a, c) {
                return a * b / c + d
            },
            easeInQuad: function(b, d, a, c) {
                return a * (b /= c) * b + d
            },
            easeOutQuad: function(b, d, a, c) {
                return -a * (b /= c) * (b - 2) + d
            },
            easeInOutQuad: function(b, d, a, c) {
                if ((b /= c / 2) < 1) {
                    return a / 2 * b * b + d
                }
                return -a / 2 * ((--b) * (b - 2) - 1) + d
            },
            easeInCubic: function(b, d, a, c) {
                return a * (b /= c) * b * b + d
            },
            easeOutCubic: function(b, d, a, c) {
                return a * ((b = b / c - 1) * b * b + 1) + d
            },
            easeInOutCubic: function(b, d, a, c) {
                if ((b /= c / 2) < 1) {
                    return a / 2 * b * b * b + d
                }
                return a / 2 * ((b -= 2) * b * b + 2) + d
            },
            easeInQuart: function(b, d, a, c) {
                return a * (b /= c) * b * b * b + d
            },
            easeOutQuart: function(b, d, a, c) {
                return -a * ((b = b / c - 1) * b * b * b - 1) + d
            },
            easeInOutQuart: function(b, d, a, c) {
                if ((b /= c / 2) < 1) {
                    return a / 2 * b * b * b * b + d
                }
                return -a / 2 * ((b -= 2) * b * b * b - 2) + d
            },
            easeInQuint: function(b, d, a, c) {
                return a * (b /= c) * b * b * b * b + d
            },
            easeOutQuint: function(b, d, a, c) {
                return a * ((b = b / c - 1) * b * b * b * b + 1) + d
            },
            easeInOutQuint: function(b, d, a, c) {
                if ((b /= c / 2) < 1) {
                    return a / 2 * b * b * b * b * b + d
                }
                return a / 2 * ((b -= 2) * b * b * b * b + 2) + d
            },
            easeInSine: function(b, d, a, c) {
                return -a * Math.cos(b / c * (Math.PI / 2)) + a + d
            },
            easeOutSine: function(b, d, a, c) {
                return a * Math.sin(b / c * (Math.PI / 2)) + d
            },
            easeInOutSine: function(b, d, a, c) {
                return -a / 2 * (Math.cos(Math.PI * b / c) - 1) + d
            },
            easeInExpo: function(b, d, a, c) {
                return (b == 0) ? d : a * Math.pow(2, 10 * (b / c - 1)) + d
            },
            easeOutExpo: function(b, d, a, c) {
                return (b == c) ? d + a : a * (-Math.pow(2, -10 * b / c) + 1) + d
            },
            easeInOutExpo: function(b, d, a, c) {
                if (b == 0) {
                    return d
                }
                if (b == c) {
                    return d + a
                }
                if ((b /= c / 2) < 1) {
                    return a / 2 * Math.pow(2, 10 * (b - 1)) + d
                }
                return a / 2 * (-Math.pow(2, -10 * --b) + 2) + d
            },
            easeInCirc: function(b, d, a, c) {
                return -a * (Math.sqrt(1 - (b /= c) * b) - 1) + d
            },
            easeOutCirc: function(b, d, a, c) {
                return a * Math.sqrt(1 - (b = b / c - 1) * b) + d
            },
            easeInOutCirc: function(b, d, a, c) {
                if ((b /= c / 2) < 1) {
                    return -a / 2 * (Math.sqrt(1 - b * b) - 1) + d
                }
                return a / 2 * (Math.sqrt(1 - (b -= 2) * b) + 1) + d
            },
            easeInElastic: function(c, m, a, d) {
                var o = 1.70158;
                var b = 0;
                var n = a;
                if (c == 0) {
                    return m
                }
                if ((c /= d) == 1) {
                    return m + a
                }
                if (!b) {
                    b = d * 0.3
                }
                if (n < Math.abs(a)) {
                    n = a;
                    o = b / 4
                } else {
                    o = b / (2 * Math.PI) * Math.asin(a / n)
                }
                return -(n * Math.pow(2, 10 * (c -= 1)) * Math.sin((c * d - o) * (2 * Math.PI) / b)) + m
            },
            easeOutElastic: function(c, m, a, d) {
                var o = 1.70158;
                var b = 0;
                var n = a;
                if (c == 0) {
                    return m
                }
                if ((c /= d) == 1) {
                    return m + a
                }
                if (!b) {
                    b = d * 0.3
                }
                if (n < Math.abs(a)) {
                    n = a;
                    o = b / 4
                } else {
                    o = b / (2 * Math.PI) * Math.asin(a / n)
                }
                return n * Math.pow(2, -10 * c) * Math.sin((c * d - o) * (2 * Math.PI) / b) + a + m
            },
            easeInOutElastic: function(c, m, a, d) {
                var o = 1.70158;
                var b = 0;
                var n = a;
                if (c == 0) {
                    return m
                }
                if ((c /= d / 2) == 2) {
                    return m + a
                }
                if (!b) {
                    b = d * (0.3 * 1.5)
                }
                if (n < Math.abs(a)) {
                    n = a;
                    o = b / 4
                } else {
                    o = b / (2 * Math.PI) * Math.asin(a / n)
                }
                if (c < 1) {
                    return -0.5 * (n * Math.pow(2, 10 * (c -= 1)) * Math.sin((c * d - o) * (2 * Math.PI) / b)) + m
                }
                return n * Math.pow(2, -10 * (c -= 1)) * Math.sin((c * d - o) * (2 * Math.PI) / b) * 0.5 + a + m
            },
            easeInBack: function(b, d, a, c, k) {
                if (k == undefined) {
                    k = 1.70158
                }
                return a * (b /= c) * b * ((k + 1) * b - k) + d
            },
            easeOutBack: function(b, d, a, c, k) {
                if (k == undefined) {
                    k = 1.70158
                }
                return a * ((b = b / c - 1) * b * ((k + 1) * b + k) + 1) + d
            },
            easeInOutBack: function(b, d, a, c, k) {
                if (k == undefined) {
                    k = 1.70158
                }
                if ((b /= c / 2) < 1) {
                    return a / 2 * (b * b * (((k *= (1.525)) + 1) * b - k)) + d
                }
                return a / 2 * ((b -= 2) * b * (((k *= (1.525)) + 1) * b + k) + 2) + d
            },
            easeInBounce: function(b, d, a, c) {
                return a - h.easeOutBounce(c - b, 0, a, c) + d
            },
            easeOutBounce: function(b, d, a, c) {
                if ((b /= c) < (1 / 2.75)) {
                    return a * (7.5625 * b * b) + d
                } else {
                    if (b < (2 / 2.75)) {
                        return a * (7.5625 * (b -= (1.5 / 2.75)) * b + 0.75) + d
                    } else {
                        if (b < (2.5 / 2.75)) {
                            return a * (7.5625 * (b -= (2.25 / 2.75)) * b + 0.9375) + d
                        } else {
                            return a * (7.5625 * (b -= (2.625 / 2.75)) * b + 0.984375) + d
                        }
                    }
                }
            },
            easeInOutBounce: function(b, d, a, c) {
                if (b < c / 2) {
                    return h.easeInBounce(b * 2, 0, a, c) * 0.5 + d
                }
                return h.easeOutBounce(b * 2 - c, 0, a, c) * 0.5 + a * 0.5 + d
            }
        };
        h.ease = function(c, d) {
            if (d === "ease") {
                d = "easeInOutSine"
            } else {
                if (d === "ease-in") {
                    d = "easeInCubic"
                } else {
                    if (d === "ease-out") {
                        d = "easeOutCubic"
                    } else {
                        if (d === "ease-in-out") {
                            d = "easeInOutCubic"
                        } else {
                            if (d === "linear") {
                                d = "linear"
                            } else {
                                if (d === "step-start") {
                                    return (c === 0) ? 0 : 1
                                } else {
                                    if (d === "step-end") {
                                        return (c === 1) ? 1 : 0
                                    } else {
                                        if (typeof d === "string" && /^steps\(\d+\,\s*(start|end)\)$/.test(d)) {
                                            var k = parseInt(d.match(/\d+/)[0]);
                                            var b = d.match(/(start|end)/)[0];
                                            var a = (1 / k);
                                            return Math[(b === "start") ? "floor" : "ceil"]((c / a)) * a
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            if (typeof d === "string") {
                if (typeof h[d] === "function" && d !== "ease") {
                    d = h[d]
                } else {
                    throw new TypeError('"' + d + '" is not a valid easing type')
                }
            }
            return d(c, 0, 1, 1)
        };
        i.exports = h
    }, {}],
    425: [function(v, x, u) {
        var q = v("./Viewport");
        var p = v("./log");
        var n = v("./Element/events");
        var m = v("./Element/vendorTransformHelper");
        var w = v("./Environment/Browser");
        var r = {
            addEventListener: n.addEventListener,
            removeEventListener: n.removeEventListener,
            addVendorPrefixEventListener: n.addVendorPrefixEventListener,
            removeVendorPrefixEventListener: n.removeVendorPrefixEventListener,
            addVendorEventListener: function(d, c, b, a) {
                p("ac-base.Element.addVendorEventListener is deprecated. Please use ac-base.Element.addVendorPrefixEventListener.");
                return this.addVendorPrefixEventListener(d, c, b, a)
            },
            removeVendorEventListener: function(d, c, b, a) {
                p("ac-base.Element.removeVendorEventListener is deprecated. Please use ac-base.Element.removeVendorPrefixEventListener.");
                return this.removeVendorPrefixEventListener(d, c, b, a)
            }
        };
        v("./Element/EventDelegate")(r);
        r.getElementById = function(a) {
            if (typeof a === "string") {
                a = document.getElementById(a)
            }
            if (r.isElement(a)) {
                return a
            } else {
                return null
            }
        };
        r.selectAll = function(a, b) {
            if (typeof b === "undefined") {
                b = document
            } else {
                if (!r.isElement(b) && b.nodeType !== 9 && b.nodeType !== 11) {
                    throw new TypeError("ac-base.Element.selectAll: Invalid context nodeType")
                }
            }
            if (typeof a !== "string") {
                throw new TypeError("ac-base.Element.selectAll: Selector must be a string")
            }
            return Array.prototype.slice.call(b.querySelectorAll(a))
        };
        r.select = function(a, b) {
            if (typeof b === "undefined") {
                b = document
            } else {
                if (!r.isElement(b) && b.nodeType !== 9 && b.nodeType !== 11) {
                    throw new TypeError("ac-base.Element.select: Invalid context nodeType")
                }
            }
            if (typeof a !== "string") {
                throw new TypeError("ac-base.Element.select: Selector must be a string")
            }
            return b.querySelector(a)
        };
        var t = window.Element ? (function(a) {
            return a.matches || a.matchesSelector || a.webkitMatchesSelector || a.mozMatchesSelector || a.msMatchesSelector || a.oMatchesSelector
        }(Element.prototype)) : null;
        r.matchesSelector = function(b, a) {
            return r.isElement(b) ? t.call(b, a) : false
        };
        r.matches = function(b, a) {
            p("ac-base.Element.matches is deprecated. Use ac-base.Element.filterBySelector instead.");
            return r.filterBySelector(a, b)
        };
        r.filterBySelector = function(b, f) {
            var a = [];
            for (var c = 0, d = b.length; c < d; c++) {
                if (r.isElement(b[c]) && t.call(b[c], f)) {
                    a[a.length] = b[c]
                }
            }
            return a
        };
        r.setOpacity = function(a, b) {
            p("ac-base.Element.setOpacity is deprecated. Use ac-base.Element.setStyle instead.");
            return r.setStyle(a, {
                opacity: b
            })
        };
        r.setStyle = function(f, d) {
            if ((typeof d !== "string" && typeof d !== "object") || Array.isArray(d)) {
                throw new TypeError("styles argument must be either an object or a string")
            }
            f = r.getElementById(f);
            var a;
            var c;
            var b;
            a = r.setStyle.__explodeStyleStringToObject(d);
            for (b in a) {
                if (a.hasOwnProperty(b)) {
                    c = b.replace(/-(\w)/g, r.setStyle.__camelCaseReplace);
                    r.setStyle.__setStyle(f, c, a, a[b])
                }
            }
            return f
        };
        r.setStyle.__explodeStyleStringToObject = function(c) {
            var f = (typeof c === "object") ? c : {};
            var b;
            var d;
            var a;
            var g;
            if (typeof c === "string") {
                b = c.split(";");
                a = b.length;
                for (g = 0; g < a; g += 1) {
                    d = b[g].indexOf(":");
                    if (d > 0) {
                        f[b[g].substr(0, d).trim()] = b[g].substr(d + 1).trim()
                    }
                }
            }
            return f
        };
        r.setStyle.__setStyle = function(c, b, d, a) {
            if (typeof c.style[b] !== "undefined") {
                c.style[b] = a
            }
        };
        r.setStyle.__camelCaseReplace = function(d, c, b, a) {
            return (b === 0) && (a.substr(1, 3) !== "moz") ? c : c.toUpperCase()
        };
        r.getStyle = function(d, c, a) {
            var b;
            c = c.replace(/-(\w)/g, r.setStyle.__camelCaseReplace);
            d = r.getElementById(d);
            c = (c === "float") ? "cssFloat" : c;
            a = a || window.getComputedStyle(d, null);
            b = a ? a[c] : null;
            if (c === "opacity") {
                return b ? parseFloat(b) : 1
            }
            return b === "auto" ? null : b
        };
        r.cumulativeOffset = function(d) {
            var c = r.getBoundingBox(d);
            var a = q.scrollOffsets();
            var b = [c.top + a.y, c.left + a.x];
            b.top = b[0];
            b.left = b[1];
            return b
        };
        r.getBoundingBox = function(d) {
            d = r.getElementById(d);
            var b = d.getBoundingClientRect();
            var a = b.width || b.right - b.left;
            var c = b.height || b.bottom - b.top;
            return {
                top: b.top,
                right: b.right,
                bottom: b.bottom,
                left: b.left,
                width: a,
                height: c
            }
        };
        r.getInnerDimensions = function(f) {
            var b = r.getBoundingBox(f);
            var a = b.width;
            var c = b.height;
            var d;
            var h;
            var g = window.getComputedStyle ? window.getComputedStyle(f, null) : null;
            ["padding", "border"].forEach(function(i) {
                ["Top", "Right", "Bottom", "Left"].forEach(function(j) {
                    d = i === "border" ? i + j + "Width" : i + j;
                    h = parseFloat(r.getStyle(f, d, g));
                    h = isNaN(h) ? 0 : h;
                    if (j === "Right" || j === "Left") {
                        a -= h
                    }
                    if (j === "Top" || j === "Bottom") {
                        c -= h
                    }
                })
            });
            return {
                width: a,
                height: c
            }
        };
        r.getOuterDimensions = function(f) {
            var b = r.getBoundingBox(f);
            var a = b.width;
            var d = b.height;
            var c;
            var g = window.getComputedStyle ? window.getComputedStyle(f, null) : null;
            ["margin"].forEach(function(h) {
                ["Top", "Right", "Bottom", "Left"].forEach(function(i) {
                    c = parseFloat(r.getStyle(f, h + i, g));
                    c = isNaN(c) ? 0 : c;
                    if (i === "Right" || i === "Left") {
                        a += c
                    }
                    if (i === "Top" || i === "Bottom") {
                        d += c
                    }
                })
            });
            return {
                width: a,
                height: d
            }
        };
        r.hasClassName = function(b, c) {
            var a = r.getElementById(b);
            if (a && a.className !== "") {
                return new RegExp("(\\s|^)" + c + "(\\s|$)").test(a.className)
            } else {
                return false
            }
        };
        r.addClassName = function(b, c) {
            var a = r.getElementById(b);
            if (a.classList) {
                a.classList.add(c)
            } else {
                if (!r.hasClassName(a, c)) {
                    a.className += " " + c
                }
            }
        };
        r.removeClassName = function(c, d) {
            var a = r.getElementById(c);
            if (r.hasClassName(a, d)) {
                var b = new RegExp("(\\s|^)" + d + "(\\s|$)");
                a.className = a.className.replace(b, "$1").trim()
            }
        };
        r.toggleClassName = function(b, c) {
            var a = r.getElementById(b);
            if (a.classList) {
                a.classList.toggle(c)
            } else {
                if (r.hasClassName(a, c)) {
                    r.removeClassName(a, c)
                } else {
                    r.addClassName(a, c)
                }
            }
        };
        r.isElement = function(a) {
            return !!(a && a.nodeType === 1)
        };
        r.setVendorPrefixStyle = function(a, d, f) {
            if (typeof d !== "string") {
                throw new TypeError("ac-base.Element.setVendorPrefixStyle: property must be a string")
            }
            if (typeof f !== "string" && typeof f !== "number") {
                throw new TypeError("ac-base.Element.setVendorPrefixStyle: value must be a string or a number")
            }
            f += "";
            a = r.getElementById(a);
            var g = ["", "webkit", "Moz", "ms", "O"];
            var b;
            var c;
            d = d.replace(/-(webkit|moz|ms|o)-/i, "");
            d = d.replace(/^(webkit|Moz|ms|O)/, "");
            d = d.charAt(0).toLowerCase() + d.slice(1);
            d = d.replace(/-(\w)/, function(i, h) {
                return h.toUpperCase()
            });
            f = f.replace(/-(webkit|moz|ms|o)-/, "-vendor-");
            g.forEach(function(h) {
                b = (h === "") ? d : h + d.charAt(0).toUpperCase() + d.slice(1);
                c = (h === "") ? f.replace("-vendor-", "") : f.replace("-vendor-", "-" + h.charAt(0).toLowerCase() + h.slice(1) + "-");
                if (b in a.style) {
                    r.setStyle(a, b + ":" + c)
                }
            })
        };
        r.getVendorPrefixStyle = function(a, b) {
            if (typeof b !== "string") {
                throw new TypeError("ac-base.Element.getVendorPrefixStyle: property must be a string")
            }
            a = r.getElementById(a);
            var c = ["", "webkit", "Moz", "ms", "O"];
            var d;
            b = b.replace(/-(webkit|moz|ms|o)-/i, "");
            b = b.replace(/^(webkit|Moz|ms|O)/, "").charAt(0).toLowerCase() + b.slice(1);
            b = b.replace(/-(\w)/, function(g, f) {
                return f.toUpperCase()
            });
            c.some(function(g, h) {
                var f = (g === "") ? b : g + b.charAt(0).toUpperCase() + b.slice(1);
                if (f in a.style) {
                    d = r.getStyle(a, f);
                    return true
                }
            });
            return d
        };
        r.insert = function(c, b, a) {
            if (!c || !(c.nodeType === 1 || c.nodeType === 3 || c.nodeType === 11)) {
                throw new TypeError("ac-base.Element.insert: element must be a valid node of type element, text, or document fragment")
            }
            if (!b || !(b.nodeType === 1 || b.nodeType === 11)) {
                throw new TypeError("ac-base.Element.insert: target must be a valid node of type element or document fragment")
            }
            switch (a) {
                case "before":
                    if (b.nodeType === 11) {
                        throw new TypeError("ac-base.Element.insert: target cannot be nodeType of documentFragment when using placement ‘before’")
                    }
                    b.parentNode.insertBefore(c, b);
                    break;
                case "after":
                    if (b.nodeType === 11) {
                        throw new TypeError("ac-base.Element.insert: target cannot be nodeType of documentFragment when using placement ‘after’")
                    }
                    b.parentNode.insertBefore(c, b.nextSibling);
                    break;
                case "first":
                    b.insertBefore(c, b.firstChild);
                    break;
                default:
                    b.appendChild(c)
            }
        };
        r.insertAt = function(c, b, g) {
            var d;
            var a;
            var f;
            c = r.getElementById(c);
            b = r.getElementById(b);
            if (!r.isElement(c) || !r.isElement(b)) {
                throw new TypeError("ac-base.Element.insertAt: element must be a valid DOM element")
            }
            d = r.children(b);
            if (g < 0 && d.length) {
                g += d.length
            }
            if (b.contains(c) && g > d.indexOf(c)) {
                g++
            }
            if (d && g <= d.length - 1) {
                for (f = 0, a = d.length; f < a; f++) {
                    if (f === g) {
                        b.insertBefore(c, d[f]);
                        break
                    }
                }
            } else {
                b.appendChild(c)
            }
        };
        r.children = function(d) {
            var c, b;
            d = r.getElementById(d);
            if (!r.isElement(d)) {
                throw new TypeError("ac-base.Element.children: element must be a valid DOM element")
            }
            if (d.children) {
                c = [];
                for (var f = 0, a = d.children.length; f < a; f++) {
                    b = d.children[f];
                    if (b && b.nodeType === 1) {
                        c.push(b)
                    }
                }
            }
            return c.length ? c : null
        };
        r.remove = function(a, b) {
            if (!r.isElement(a)) {
                throw new TypeError("ac-base.Element.remove: element must be a valid DOM element")
            }
            if (b === true) {
                var c = a.parentNode.removeChild(a);
                return c
            } else {
                a.parentNode.removeChild(a)
            }
        };
        r.viewportOffset = function(a) {
            var b = r.getBoundingBox(a);
            return {
                x: b.left,
                y: b.top
            }
        };
        r.pixelsInViewport = function(d, f) {
            var c;
            if (!r.isElement(d)) {
                throw new TypeError("ac-base.Element.pixelsInViewport : element must be a valid DOM element")
            }
            var b = q.dimensions();
            f = f || r.getBoundingBox(d);
            var a = f.top;
            if (a >= 0) {
                c = b.height - a;
                if (c > f.height) {
                    c = f.height
                }
            } else {
                c = f.height + a
            }
            if (c < 0) {
                c = 0
            }
            if (c > b.height) {
                c = b.height
            }
            return c
        };
        r.percentInViewport = function(c) {
            var a = r.getBoundingBox(c);
            var b = r.pixelsInViewport(c, a);
            return b / a.height
        };
        r.isInViewport = function(c, b) {
            if (typeof b !== "number" || 1 < b || b < 0) {
                b = 0
            }
            var a = r.percentInViewport(c);
            return (a > b || a === 1)
        };
        var o = function(c, b) {
            c = r.getElementById(c);
            var a = c.parentNode;
            while (a && r.isElement(a)) {
                if (typeof b === "function") {
                    if (b(a) === false) {
                        break
                    }
                }
                if (a !== document.body) {
                    a = a.parentNode
                } else {
                    a = null
                }
            }
        };
        r.ancestors = function(a, c) {
            var b = [];
            o(a, function(d) {
                if (c === undefined || r.matchesSelector(d, c)) {
                    b.push(d)
                }
            });
            return b
        };
        r.ancestor = function(c, b) {
            c = r.getElementById(c);
            var a = null;
            if (c !== null && b === undefined) {
                return c.parentNode
            }
            o(c, function(d) {
                if (r.matchesSelector(d, b)) {
                    a = d;
                    return false
                }
            });
            return a
        };
        r.setVendorPrefixTransform = function(a, b) {
            if ((typeof b !== "string" && typeof b !== "object") || Array.isArray(b) || b === null) {
                throw new TypeError("ac-base.Element.setVendorPrefixTransform: transformFunctions argument must be either an object or a string")
            }
            r.setVendorPrefixStyle(a, "transform", m.convert2dFunctions(b))
        };
        if (w.name === "IE") {
            v("./shims/ie/Element")(r, w)
        }
        x.exports = r
    }, {
        "./Element/EventDelegate": 426,
        "./Element/events": 427,
        "./Element/vendorTransformHelper": 430,
        "./Environment/Browser": 432,
        "./Viewport": 447,
        "./log": 451,
        "./shims/ie/Element": 456
    }],
    426: [function(d, g, f) {
        g.exports = function(a) {
            function b(c, i) {
                this.element = c;
                this.options = i || {}
            }
            b.prototype = {
                __findMatchingTarget: function(c) {
                    var i = null;
                    if (a.matchesSelector(c, this.options.selector)) {
                        i = c
                    } else {
                        i = a.ancestor(c, this.options.selector)
                    }
                    return i
                },
                __generateDelegateMethod: function() {
                    var i = this;
                    var c = i.options.handler;
                    return function(o) {
                        var h = o.target || o.srcElement;
                        var m = i.__findMatchingTarget(h);
                        var n;
                        if (m !== null) {
                            n = new b.Event(o);
                            n.setTarget(m);
                            c(n)
                        }
                    }
                },
                attachEventListener: function() {
                    this.__delegateMethod = this.__generateDelegateMethod();
                    a.addEventListener(this.element, this.options.eventType, this.__delegateMethod);
                    return this.__delegateMethod
                },
                unbind: function() {
                    a.removeEventListener(this.element, this.options.eventType, this.__delegateMethod);
                    this.__delegateMethod = undefined
                }
            };
            b.instances = [];
            b.filterInstances = function(i) {
                var c = [];
                b.instances.forEach(function(h) {
                    if (i(h) === true) {
                        c.push(h)
                    }
                });
                return c
            };
            b.Event = function(c) {
                this.originalEvent = c
            };
            b.Event.prototype.setTarget = function(c) {
                this.target = c;
                this.currentTarget = c
            };
            a.addEventDelegate = function(l, m, n, c) {
                var o = new a.__EventDelegate(l, {
                    eventType: m,
                    selector: n,
                    handler: c
                });
                b.instances.push(o);
                return o.attachEventListener()
            };
            a.removeEventDelegate = function(l, m, n, c) {
                var o = a.__EventDelegate.filterInstances(function(i) {
                    var h = i.options;
                    return i.element === l && h.selector === n && h.eventType === m && h.handler === c
                });
                o.forEach(function(h) {
                    h.unbind()
                })
            };
            a.__EventDelegate = b
        }
    }, {}],
    427: [function(f, h, g) {
        var i = {};
        i.addEventListener = function(a, c, b, d) {
            if (a.addEventListener) {
                a.addEventListener(c, b, d)
            } else {
                if (a.attachEvent) {
                    a.attachEvent("on" + c, b)
                } else {
                    a["on" + c] = b
                }
            }
            return a
        };
        i.dispatchEvent = function(a, b) {
            if (document.createEvent) {
                a.dispatchEvent(new CustomEvent(b))
            } else {
                a.fireEvent("on" + b, document.createEventObject())
            }
            return a
        };
        i.removeEventListener = function(a, c, b, d) {
            if (a.removeEventListener) {
                a.removeEventListener(c, b, d)
            } else {
                a.detachEvent("on" + c, b)
            }
            return a
        };
        i.addVendorPrefixEventListener = function(c, b, a, d) {
            if (b.match(/^webkit/i)) {
                b = b.replace(/^webkit/i, "")
            } else {
                if (b.match(/^moz/i)) {
                    b = b.replace(/^moz/i, "")
                } else {
                    if (b.match(/^ms/i)) {
                        b = b.replace(/^ms/i, "")
                    } else {
                        if (b.match(/^o/i)) {
                            b = b.replace(/^o/i, "")
                        } else {
                            b = b.charAt(0).toUpperCase() + b.slice(1)
                        }
                    }
                }
            }
            if (/WebKit/i.test(window.navigator.userAgent)) {
                return i.addEventListener(c, "webkit" + b, a, d)
            } else {
                if (/Opera/i.test(window.navigator.userAgent)) {
                    return i.addEventListener(c, "O" + b, a, d)
                } else {
                    if (/Gecko/i.test(window.navigator.userAgent) || /Trident/i.test(window.navigator.userAgent)) {
                        return i.addEventListener(c, b.toLowerCase(), a, d)
                    } else {
                        b = b.charAt(0).toLowerCase() + b.slice(1);
                        return i.addEventListener(c, b, a, d)
                    }
                }
            }
        };
        i.removeVendorPrefixEventListener = function(c, b, a, d) {
            if (b.match(/^webkit/i)) {
                b = b.replace(/^webkit/i, "")
            } else {
                if (b.match(/^moz/i)) {
                    b = b.replace(/^moz/i, "")
                } else {
                    if (b.match(/^ms/i)) {
                        b = b.replace(/^ms/i, "")
                    } else {
                        if (b.match(/^o/i)) {
                            b = b.replace(/^o/i, "")
                        } else {
                            b = b.charAt(0).toUpperCase() + b.slice(1)
                        }
                    }
                }
            }
            i.removeEventListener(c, "webkit" + b, a, d);
            i.removeEventListener(c, "O" + b, a, d);
            i.removeEventListener(c, b.toLowerCase(), a, d);
            b = b.charAt(0).toLowerCase() + b.slice(1);
            return i.removeEventListener(c, b, a, d)
        };
        h.exports = i
    }, {}],
    428: [function(t, v, r) {
        var q = t("../globals");
        var l = t("./events");
        var u;
        var p;

        function o(a) {
            var c = q.document;
            var d = q.window;
            if (a.type === "readystatechange" && c.readyState !== "complete") {
                return
            }
            var b = p.length;
            while (b--) {
                p.shift().call(d, a.type || a)
            }
            l.removeEventListener(c, "DOMContentLoaded", o, false);
            l.removeEventListener(c, "readystatechange", o, false);
            l.removeEventListener(d, "load", o, false);
            clearTimeout(u)
        }

        function n() {
            try {
                q.document.documentElement.doScroll("left")
            } catch (a) {
                u = setTimeout(n, 50);
                return
            }
            o("poll")
        }
        v.exports = function m(c) {
            var d = q.document;
            var a = q.window;
            if (d.readyState === "complete") {
                c.call(a, "lazy")
            } else {
                if (!p || !p.length) {
                    p = [];
                    l.addEventListener(d, "DOMContentLoaded", o, false);
                    l.addEventListener(d, "readystatechange", o, false);
                    l.addEventListener(a, "load", o, false);
                    if (d.createEventObject && d.documentElement.doScroll) {
                        try {
                            if (!a.frameElement) {
                                n()
                            }
                        } catch (b) {}
                    }
                }
                p.push(c)
            }
        }
    }, {
        "../globals": 450,
        "./events": 427
    }],
    429: [function(p, n, j) {
        var l = p("../globals");
        var o = p("./events");
        var k;

        function m() {
            var a = k.length;
            while (a--) {
                k.shift()()
            }
            o.removeEventListener(l.window, "load", m)
        }
        n.exports = function q(a) {
            if (l.document.readyState === "complete") {
                a()
            } else {
                if (!k) {
                    k = [];
                    o.addEventListener(l.window, "load", m)
                }
                k.push(a)
            }
        }
    }, {
        "../globals": 450,
        "./events": 427
    }],
    430: [function(i, h, f) {
        var g = {
            __objectifiedFunctions: {},
            __paramMaps: {
                translate: "p1, p2, 0",
                translateX: "p1, 0, 0",
                translateY: "0, p1, 0",
                scale: "p1, p2, 1",
                scaleX: "p1, 1, 1",
                scaleY: "1, p1, 1",
                rotate: "0, 0, 1, p1",
                matrix: "p1, p2, 0, 0, p3, p4, 0, 0, 0, 0, 1, 0, p5, p6, 0, 1"
            },
            convert2dFunctions: function(c) {
                var d;
                this.__init(c);
                for (var b in this.__objectifiedFunctions) {
                    if (this.__objectifiedFunctions.hasOwnProperty(b)) {
                        d = this.__objectifiedFunctions[b].replace(" ", "").split(",");
                        if (b in this.__paramMaps) {
                            for (var a in this.__paramMaps) {
                                if (b === a) {
                                    this.valuesToSet.push(this.__stripFunctionAxis(b) + "3d(" + this.__map2DTransformParams(d, this.__paramMaps[b]) + ")")
                                }
                            }
                        } else {
                            this.valuesToSet.push(b + "(" + this.__objectifiedFunctions[b] + ")")
                        }
                    }
                }
                return this.valuesToSet.join(" ")
            },
            __init: function(a) {
                this.valuesToSet = [];
                this.__objectifiedFunctions = (typeof a === "object") ? a : {};
                if (typeof a === "string") {
                    this.__objectifiedFunctions = this.__objectifyFunctionString(a)
                }
            },
            __map2DTransformParams: function(b, a) {
                b.forEach(function(c, d) {
                    a = a.replace("p" + (d + 1), c)
                });
                return a
            },
            __splitFunctionStringToArray: function(a) {
                return a.match(/[\w]+\(.+?\)/g)
            },
            __splitFunctionNameAndParams: function(a) {
                return a.match(/(.*)\((.*)\)/)
            },
            __stripFunctionAxis: function(a) {
                return a.match(/([a-z]+)(|X|Y)$/)[1]
            },
            __objectifyFunctionString: function(c) {
                var b = this;
                var a;
                this.__splitFunctionStringToArray(c).forEach(function(d) {
                    a = b.__splitFunctionNameAndParams(d);
                    b.__objectifiedFunctions[a[1]] = a[2]
                });
                return this.__objectifiedFunctions
            }
        };
        h.exports = g
    }, {}],
    431: [function(f, i, g) {
        var h = {
            Browser: f("./Environment/Browser"),
            Feature: f("./Environment/Feature")
        };
        i.exports = h
    }, {
        "./Environment/Browser": 432,
        "./Environment/Feature": 435
    }],
    432: [function(g, k, h) {
        var j = g("./Browser/BrowserData");
        var i = j.create();
        i.isWebKit = function(b) {
            var a = b || window.navigator.userAgent;
            return a ? !!a.match(/applewebkit/i) : false
        };
        i.lowerCaseUserAgent = navigator.userAgent.toLowerCase();
        if (i.name === "IE") {
            g("../shims/ie/Environment/Browser")(i)
        }
        k.exports = i
    }, {
        "../shims/ie/Environment/Browser": 457,
        "./Browser/BrowserData": 433
    }],
    433: [function(m, l, h) {
        var k = m("./data");
        var i = m("../../RegExp");

        function j() {}
        j.prototype = {
            __getBrowserVersion: function(d, c) {
                if (!d || !c) {
                    return
                }
                var a = k.browser.filter(function(g) {
                    return g.identity === c
                })[0];
                var f = a.versionSearch || c;
                var b = d.indexOf(f);
                if (b > -1) {
                    return parseFloat(d.substring(b + f.length + 1))
                }
            },
            __getName: function(a) {
                return this.__getIdentityStringFromArray(a)
            },
            __getIdentity: function(a) {
                if (a.string) {
                    return this.__matchSubString(a)
                } else {
                    if (a.prop) {
                        return a.identity
                    }
                }
            },
            __getIdentityStringFromArray: function(d) {
                for (var a = 0, c = d.length, b; a < c; a++) {
                    b = this.__getIdentity(d[a]);
                    if (b) {
                        return b
                    }
                }
            },
            __getOS: function(a) {
                return this.__getIdentityStringFromArray(a)
            },
            __getOSVersion: function(d, a) {
                if (!d || !a) {
                    return
                }
                var b = k.os.filter(function(o) {
                    return o.identity === a
                })[0];
                var g = b.versionSearch || a;
                var c = new RegExp(g + " ([\\d_\\.]+)", "i");
                var f = d.match(c);
                if (f !== null) {
                    return f[1].replace(/_/g, ".")
                }
            },
            __matchSubString: function(b) {
                var c = b.subString;
                var a;
                if (c) {
                    a = i.isRegExp(c) && !!b.string.match(c);
                    if (a || b.string.indexOf(c) > -1) {
                        return b.identity
                    }
                }
            }
        };
        j.create = function() {
            var b = new j();
            var a = {};
            a.name = b.__getName(k.browser);
            a.version = b.__getBrowserVersion(k.versionString, a.name);
            a.os = b.__getOS(k.os);
            a.osVersion = b.__getOSVersion(k.versionString, a.os);
            return a
        };
        l.exports = j
    }, {
        "../../RegExp": 442,
        "./data": 434
    }],
    434: [function(d, g, f) {
        arguments[4][8][0].apply(f, arguments)
    }, {
        dup: 8
    }],
    435: [function(l, k, m) {
        var j = l("../log");
        var h = {
            localStorageAvailable: l("./Feature/localStorageAvailable")
        };
        var i = Object.prototype.hasOwnProperty;
        (function() {
            var b = null;
            var a = null;
            var d = null;
            var c = null;
            h.isCSSAvailable = function(f) {
                j("ac-base.Environment.Feature.isCSSAvailable is deprecated. Please use ac-base.Environment.Feature.cssPropertyAvailable instead.");
                return this.cssPropertyAvailable(f)
            };
            h.cssPropertyAvailable = function(A) {
                if (b === null) {
                    b = document.createElement("browserdetect").style
                }
                if (a === null) {
                    a = ["-webkit-", "-moz-", "-o-", "-ms-", "-khtml-", ""]
                }
                if (d === null) {
                    d = ["Webkit", "Moz", "O", "ms", "Khtml", ""]
                }
                if (c === null) {
                    c = {}
                }
                A = A.replace(/([A-Z]+)([A-Z][a-z])/g, "$1\\-$2").replace(/([a-z\d])([A-Z])/g, "$1\\-$2").replace(/^(\-*webkit|\-*moz|\-*o|\-*ms|\-*khtml)\-/, "").toLowerCase();
                switch (A) {
                    case "gradient":
                        if (c.gradient !== undefined) {
                            return c.gradient
                        }
                        A = "background-image:";
                        var f = "gradient(linear,left top,right bottom,from(#9f9),to(white));";
                        var g = "linear-gradient(left top,#9f9, white);";
                        b.cssText = (A + a.join(f + A) + a.join(g + A)).slice(0, -A.length);
                        c.gradient = (b.backgroundImage.indexOf("gradient") !== -1);
                        return c.gradient;
                    case "inset-box-shadow":
                        if (c["inset-box-shadow"] !== undefined) {
                            return c["inset-box-shadow"]
                        }
                        A = "box-shadow:";
                        var B = "#fff 0 1px 1px inset;";
                        b.cssText = a.join(A + B);
                        c["inset-box-shadow"] = (b.cssText.indexOf("inset") !== -1);
                        return c["inset-box-shadow"];
                    default:
                        var v = A.split("-");
                        var z = v.length;
                        var w;
                        var x;
                        var y;
                        if (v.length > 0) {
                            A = v[0];
                            for (x = 1; x < z; x += 1) {
                                A += v[x].substr(0, 1).toUpperCase() + v[x].substr(1)
                            }
                        }
                        w = A.substr(0, 1).toUpperCase() + A.substr(1);
                        if (c[A] !== undefined) {
                            return c[A]
                        }
                        for (y = d.length - 1; y >= 0; y -= 1) {
                            if (b[d[y] + A] !== undefined || b[d[y] + w] !== undefined) {
                                c[A] = true;
                                return true
                            }
                        }
                        return false
                }
            }
        }());
        h.supportsThreeD = function() {
            j("ac-base.Environment.Feature.supportsThreeD is deprecated. Please use ac-base.Environment.Feature.threeDTransformsAvailable instead.");
            return this.threeDTransformsAvailable()
        };
        h.threeDTransformsAvailable = function() {
            if (typeof this._threeDTransformsAvailable !== "undefined") {
                return this._threeDTransformsAvailable
            }
            var a, c;
            try {
                this._threeDTransformsAvailable = false;
                if (i.call(window, "styleMedia")) {
                    this._threeDTransformsAvailable = window.styleMedia.matchMedium("(-webkit-transform-3d)")
                } else {
                    if (i.call(window, "media")) {
                        this._threeDTransformsAvailable = window.media.matchMedium("(-webkit-transform-3d)")
                    }
                }
                if (!this._threeDTransformsAvailable) {
                    if (!(c = document.getElementById("supportsThreeDStyle"))) {
                        c = document.createElement("style");
                        c.id = "supportsThreeDStyle";
                        c.textContent = "@media (transform-3d),(-o-transform-3d),(-moz-transform-3d),(-ms-transform-3d),(-webkit-transform-3d) { #supportsThreeD { height:3px } }";
                        document.querySelector("head").appendChild(c)
                    }
                    if (!(a = document.querySelector("#supportsThreeD"))) {
                        a = document.createElement("div");
                        a.id = "supportsThreeD";
                        document.body.appendChild(a)
                    }
                    this._threeDTransformsAvailable = (a.offsetHeight === 3) || c.style.MozTransform !== undefined || c.style.WebkitTransform !== undefined
                }
                return this._threeDTransformsAvailable
            } catch (b) {
                return false
            }
        };
        h.supportsCanvas = function() {
            j("ac-base.Environment.Feature.supportsCanvas is deprecated. Please use ac-base.Environment.Feature.canvasAvailable instead.");
            return this.canvasAvailable()
        };
        h.canvasAvailable = function() {
            if (typeof this._canvasAvailable !== "undefined") {
                return this._canvasAvailable
            }
            var a = document.createElement("canvas");
            this._canvasAvailable = !!(typeof a.getContext === "function" && a.getContext("2d"));
            return this._canvasAvailable
        };
        h.sessionStorageAvailable = function() {
            if (typeof this._sessionStorageAvailable !== "undefined") {
                return this._sessionStorageAvailable
            }
            try {
                if (typeof window.sessionStorage !== "undefined" && typeof window.sessionStorage.setItem === "function") {
                    window.sessionStorage.setItem("ac_browser_detect", "test");
                    this._sessionStorageAvailable = true;
                    window.sessionStorage.removeItem("ac_browser_detect", "test")
                } else {
                    this._sessionStorageAvailable = false
                }
            } catch (a) {
                this._sessionStorageAvailable = false
            }
            return this._sessionStorageAvailable
        };
        h.cookiesAvailable = function() {
            if (typeof this._cookiesAvailable !== "undefined") {
                return this._cookiesAvailable
            }
            this._cookiesAvailable = (i.call(document, "cookie") && !!navigator.cookieEnabled) ? true : false;
            return this._cookiesAvailable
        };
        h.__normalizedScreenWidth = function() {
            if (typeof window.orientation === "undefined") {
                return window.screen.width
            }
            return window.screen.width < window.screen.height ? window.screen.width : window.screen.height
        };
        h.touchAvailable = function() {
            return !!(("ontouchstart" in window) || window.DocumentTouch && document instanceof window.DocumentTouch)
        };
        h.isDesktop = function() {
            if (!this.touchAvailable() && !window.orientation) {
                return true
            }
            return false
        };
        h.isHandheld = function() {
            return !this.isDesktop() && !this.isTablet()
        };
        h.isTablet = function() {
            return !this.isDesktop() && this.__normalizedScreenWidth() > 480
        };
        h.isRetina = function() {
            var b = ["min-device-pixel-ratio:1.5", "-webkit-min-device-pixel-ratio:1.5", "min-resolution:1.5dppx", "min-resolution:144dpi", "min--moz-device-pixel-ratio:1.5"];
            var a;
            if (window.devicePixelRatio !== undefined) {
                if (window.devicePixelRatio >= 1.5) {
                    return true
                }
            } else {
                for (a = 0; a < b.length; a += 1) {
                    if (window.matchMedia("(" + b[a] + ")").matches === true) {
                        return true
                    }
                }
            }
            return false
        };
        h.svgAvailable = function() {
            return document.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#Image", "1.1")
        };
        k.exports = h
    }, {
        "../log": 451,
        "./Feature/localStorageAvailable": 436
    }],
    436: [function(j, i, g) {
        var h = null;
        i.exports = function k() {
            if (h === null) {
                h = !!(window.localStorage && window.localStorage.non_existent !== null)
            }
            return h
        }
    }, {}],
    437: [function(f, i, g) {
        var h = {};
        h.stop = function(a) {
            if (!a) {
                a = window.event
            }
            if (a.stopPropagation) {
                a.stopPropagation()
            } else {
                a.cancelBubble = true
            }
            if (a.preventDefault) {
                a.preventDefault()
            }
            a.stopped = true;
            a.returnValue = false
        };
        h.target = function(a) {
            return (typeof a.target !== "undefined") ? a.target : a.srcElement
        };
        h.Keys = {
            UP: 38,
            DOWN: 40,
            LEFT: 37,
            RIGHT: 39,
            ESC: 27,
            SPACE: 32,
            BACKSPACE: 8,
            DELETE: 46,
            END: 35,
            HOME: 36,
            PAGEDOWN: 34,
            PAGEUP: 33,
            RETURN: 13,
            TAB: 9
        };
        i.exports = h
    }, {}],
    438: [function(k, j, g) {
        var h = k("./Array");
        var i = {};
        i.emptyFunction = function() {};
        i.bindAsEventListener = function(c, a) {
            var b = h.toArray(arguments).slice(2);
            return function(d) {
                return c.apply(a, [d || window.event].concat(b))
            }
        };
        i.getParamNames = function(a) {
            var b = a.toString();
            return b.slice(b.indexOf("(") + 1, b.indexOf(")")).match(/([^\s,]+)/g) || []
        };
        i.iterateFramesOverAnimationDuration = function(a, b, d) {
            var c = 0;
            var o;
            var n;
            var f;
            b = b * 1000;
            n = function(l) {
                f = f || l;
                c = b ? Math.min(Math.max(0, (l - f) / b), 1) : 1;
                a(c);
                if (c < 1) {
                    o = window.requestAnimationFrame(n)
                } else {
                    window.cancelAnimationFrame(o);
                    if (typeof d === "function") {
                        d()
                    }
                }
            };
            o = window.requestAnimationFrame(n)
        };
        j.exports = i
    }, {
        "./Array": 419
    }],
    439: [function(q, o, j) {
        var m = q("./NotificationCenter");
        var n = q("./Class");
        var k = q("./Object");
        var l = q("./Element");
        var p = {};
        p.HashChange = n({
            initialize: function(a) {
                this._boundEventHandler = null;
                this._notificationString = a || "ac-history-hashchange";
                this.synthesize()
            },
            __eventHandler: function(b) {
                var a = new p.HashChange.Event(b);
                m.publish(this.notificationString(), {
                    data: a
                }, false)
            },
            __bindWindowEvent: function() {
                this.setBoundEventHandler(this.__eventHandler.bind(this));
                l.addEventListener(window, "hashchange", this.boundEventHandler())
            },
            __unbindWindowEvent: function() {
                l.removeEventListener(window, "hashchange", this.boundEventHandler());
                this.setBoundEventHandler(null)
            },
            subscribe: function(a) {
                if (this.boundEventHandler() === null) {
                    this.__bindWindowEvent()
                }
                m.subscribe(this.notificationString(), a)
            },
            unsubscribe: function(a) {
                m.unsubscribe(this.notificationString(), a);
                if (!m.hasSubscribers(this.notificationString())) {
                    this.__unbindWindowEvent()
                }
            }
        });
        p.HashChange.Event = n({
            initialize: function(a) {
                this.event = a;
                k.extend(this, a);
                if (this.hasOwnProperty("oldURL") && this.oldURL.match("#")) {
                    this.oldHash = this.oldURL.split("#")[1]
                }
                if (this.hasOwnProperty("newURL") && this.newURL.match("#")) {
                    this.newHash = this.newURL.split("#")[1]
                }
            }
        });
        o.exports = p
    }, {
        "./Class": 421,
        "./Element": 425,
        "./NotificationCenter": 440,
        "./Object": 441
    }],
    440: [function(f, i, g) {
        var h = {};
        i.exports = {
            publish: function(a, c, d) {
                c = c || {};
                var b = function() {
                    if ((!h[a]) || h[a].length < 1) {
                        return
                    }
                    h[a].forEach(function(k) {
                        if (typeof k !== "undefined") {
                            if (k.target && c.target) {
                                if (k.target === c.target) {
                                    k.callback(c.data)
                                }
                            } else {
                                k.callback(c.data)
                            }
                        }
                    })
                };
                if (d === true) {
                    window.setTimeout(b, 10)
                } else {
                    b()
                }
            },
            subscribe: function(c, a, b) {
                if (!h[c]) {
                    h[c] = []
                }
                h[c].push({
                    callback: a,
                    target: b
                })
            },
            unsubscribe: function(c, a, b) {
                var d = h[c].slice(0);
                h[c].forEach(function(l, m) {
                    if (typeof l !== "undefined") {
                        if (b) {
                            if (a === l.callback && l.target === b) {
                                d.splice(m, 1)
                            }
                        } else {
                            if (a === l.callback) {
                                d.splice(m, 1)
                            }
                        }
                    }
                });
                h[c] = d
            },
            hasSubscribers: function(b, a) {
                if ((!h[b]) || h[b].length < 1) {
                    return false
                }
                if (!a) {
                    return true
                }
                var d = h[b].length;
                var c;
                while (d--) {
                    c = h[b][d];
                    if (c.target && a) {
                        if (c.target === a) {
                            return true
                        }
                    }
                }
                return false
            }
        }
    }, {}],
    441: [function(u, v, q) {
        var p = u("./Synthesize");
        var m = u("qs");
        var r = {};
        var t = Object.prototype.hasOwnProperty;
        r.extend = function o() {
            var a;
            var b;
            if (arguments.length < 2) {
                a = [{}, arguments[0]]
            } else {
                a = [].slice.call(arguments)
            }
            b = a.shift();
            a.forEach(function(c) {
                for (var d in c) {
                    if (t.call(c, d)) {
                        b[d] = c[d]
                    }
                }
            });
            return b
        };
        r.clone = function n(a) {
            return r.extend({}, a)
        };
        if (Object.getPrototypeOf) {
            r.getPrototypeOf = Object.getPrototypeOf
        } else {
            if (typeof this.__proto__ === "object") {
                r.getPrototypeOf = function l(a) {
                    return a.__proto__
                }
            } else {
                r.getPrototypeOf = function l(c) {
                    var b = c.constructor;
                    var a;
                    if (t.call(c, "constructor")) {
                        a = b;
                        if (!(delete c.constructor)) {
                            return null
                        }
                        b = c.constructor;
                        c.constructor = a
                    }
                    return b ? b.prototype : null
                }
            }
        }
        r.toQueryParameters = function(a) {
            if (typeof a !== "object") {
                throw new TypeError("toQueryParameters error: argument is not an object")
            }
            return m.stringify(a)
        };
        r.isEmpty = function(b) {
            var a;
            if (typeof b !== "object") {
                throw new TypeError("ac-base.Object.isEmpty : Invalid parameter - expected object")
            }
            for (a in b) {
                if (t.call(b, a)) {
                    return false
                }
            }
            return true
        };
        r.synthesize = function(a) {
            if (typeof a === "object") {
                r.extend(a, r.clone(p));
                a.synthesize();
                return a
            } else {
                throw new TypeError("Argument supplied was not a valid object.")
            }
        };
        v.exports = r
    }, {
        "./Synthesize": 446,
        qs: 413
    }],
    442: [function(i, h, f) {
        var g = {};
        g.isRegExp = function(a) {
            return window.RegExp ? a instanceof RegExp : false
        };
        h.exports = g
    }, {}],
    443: [function(n, m, o) {
        var l = n("./Class");
        var i = n("./Object");
        var k = n("./Element");
        var j = l();
        j.Component = n("./Registry/Component");
        j.prototype = {
            __defaultOptions: {
                contextInherits: [],
                matchCatchAll: false
            },
            initialize: function(a, b) {
                if (typeof a !== "string") {
                    throw new Error("Prefix not defined for Component Registry")
                }
                if (typeof b !== "object") {
                    b = {}
                }
                this._options = i.extend(i.clone(this.__defaultOptions), b);
                this._prefix = a;
                this._reservedNames = [];
                this.__model = [];
                this.__lookup = {};
                i.synthesize(this)
            },
            addComponent: function(d, b, h, g, c) {
                var a = null;
                var f;
                if (!this.__isReserved(d)) {
                    if (typeof d === "string") {
                        if (typeof g === "string") {
                            a = this.lookup(g)
                        }
                        if (!a && d !== "_base") {
                            a = this.lookup("_base") || this.addComponent("_base")
                        }
                        if (this.lookup(d)) {
                            throw new Error("Cannot overwrite existing Component: " + d)
                        }
                        if (typeof c !== "object") {
                            c = {}
                        }
                        if (typeof c.inherits === "undefined" && Array.isArray(this._options.contextInherits)) {
                            c.inherits = this._options.contextInherits
                        }
                        f = this.__lookup[d] = new j.Component(d, b, h, a, c);
                        this.__addToModel(f);
                        return f
                    }
                }
                return null
            },
            match: function(a) {
                var b;
                if (b = this.__matchName(a)) {
                    return b
                }
                if (b = this.__matchQualifier(a)) {
                    return b
                }
                if (this.options().matchCatchAll === true) {
                    if (typeof this.__model[1] !== "undefined") {
                        if (typeof this.__model[1][0] !== "undefined") {
                            return this.__model[1][0]
                        } else {
                            throw new Error("Catchall Type not defined")
                        }
                    } else {
                        throw new Error("No non-_base types defined at index 1.")
                    }
                }
                return null
            },
            __matchName: function(b) {
                if (!k.isElement(b)) {
                    return null
                }
                var c, a;
                for (c = this.__model.length - 1; c >= 0; c--) {
                    if (Array.isArray(this.__model[c])) {
                        for (a = this.__model[c].length - 1; a >= 0; a--) {
                            if (k.hasClassName(b, this._prefix + this.__model[c][a].name())) {
                                return this.__model[c][a]
                            }
                        }
                    }
                }
                return null
            },
            __matchQualifier: function(b) {
                if (!k.isElement(b)) {
                    return null
                }
                var c, a;
                for (c = this.__model.length - 1; c >= 0; c--) {
                    if (Array.isArray(this.__model[c])) {
                        for (a = this.__model[c].length - 1; a >= 0; a--) {
                            if (typeof this.__model[c][a].qualifier === "function") {
                                if (this.__model[c][a].qualifier.apply(this.__model[c][a], [b, this._prefix]) === true) {
                                    return this.__model[c][a]
                                }
                            }
                        }
                    }
                }
                return null
            },
            __addToModel: function(a) {
                if (j.Component.isComponent(a)) {
                    if (typeof this.__model[a.level()] === "undefined") {
                        this.__model[a.level()] = []
                    }
                    this.__model[a.level()].push(a)
                }
            },
            lookup: function(a) {
                if (typeof a === "string") {
                    if (typeof this.__lookup[a] !== "undefined") {
                        return this.__lookup[a]
                    }
                }
                return null
            },
            hasComponent: function(b) {
                var a;
                if (typeof b === "object" && typeof b.name === "function") {
                    if (a = this.lookup(b.name())) {
                        return a === b
                    }
                }
                return false
            },
            reserveName: function(a) {
                if (typeof a === "string") {
                    if (this.lookup(a) !== null) {
                        throw new Error("Cannot reserve name: Component with name already exists.")
                    } else {
                        if (!this.__isReserved(a)) {
                            this._reservedNames.push(a)
                        }
                    }
                } else {
                    throw new Error("Cannot reserve name: Name must be a string")
                }
            },
            __isReserved: function(a) {
                if (typeof a === "string") {
                    return (this._reservedNames.indexOf(a) !== -1)
                } else {
                    throw new Error("Cannot check if this name is reserved because it is not a String.")
                }
            }
        };
        m.exports = j
    }, {
        "./Class": 421,
        "./Element": 425,
        "./Object": 441,
        "./Registry/Component": 444
    }],
    444: [function(o, m, i) {
        var l = o("../Class");
        var k = o("../Function");
        var j = o("../Object");
        var n = l();
        n.prototype = {
            initialize: function(f, c, a, b, d) {
                if (typeof f !== "string") {
                    throw new Error("Cannot create Component without a name")
                }
                this._name = f;
                this._properties = c || {};
                this.qualifier = typeof a === "function" ? a : k.emptyFunction;
                this._parent = b;
                this._context = d || {};
                j.synthesize(this)
            },
            properties: function() {
                var a = (typeof this._parent === "undefined" || this._parent === null) ? {} : this._parent.properties();
                return j.extend(a, this._properties)
            },
            context: function(a) {
                if (this._context[a]) {
                    return this._context[a]
                } else {
                    if (Array.isArray(this._context.inherits) && this._context.inherits.indexOf[a] !== -1) {
                        return (this.parent()) ? this.parent().context(a) : null
                    }
                }
                return null
            },
            level: function() {
                if (typeof this._level !== "undefined") {
                    return this._level
                }
                if (this._name === "_base") {
                    return 0
                } else {
                    if (typeof this._parent === "undefined" || this._parent.name() === "_base") {
                        return 1
                    } else {
                        return this._parent.level() + 1
                    }
                }
            }
        };
        n.isComponent = function(a) {
            return (a instanceof n)
        };
        m.exports = n
    }, {
        "../Class": 421,
        "../Function": 438,
        "../Object": 441
    }],
    445: [function(j, i, k) {
        var h = j("qs");
        var g = {};
        g.isString = function(a) {
            return (typeof a === "string")
        };
        g.toCamelCase = function(a) {
            if (!g.isString(a)) {
                throw new TypeError("Argument must be of type String.")
            }
            return a.replace(/-+(.)?/g, function(c, b) {
                return b ? b.toUpperCase() : ""
            })
        };
        g.queryStringToObject = function(a) {
            if (!g.isString(a)) {
                throw new TypeError("QueryStringToObject error: argument must be a string")
            }
            return h.parse(a)
        };
        g.toQueryPair = function(b, a) {
            if (!g.isString(b) || !g.isString(a)) {
                throw new TypeError("toQueryPair error: argument must be a string")
            }
            return encodeURIComponent(b) + "=" + encodeURIComponent(a)
        };
        i.exports = g
    }, {
        qs: 413
    }],
    446: [function(l, j, h) {
        var i = {};

        function k(c, b) {
            var a = c.slice(1, c.length);
            if (typeof b[a] === "undefined") {
                b[a] = function() {
                    return b[c]
                }
            }
        }

        function m(c, b) {
            var a = c.slice(1, c.length);
            a = "set" + a.slice(0, 1).toUpperCase() + a.slice(1, a.length);
            if (typeof b[a] === "undefined") {
                b[a] = function(d) {
                    b[c] = d
                }
            }
        }
        i.synthesize = function(a) {
            if (typeof a !== "object") {
                a = this
            }
            var b;
            for (b in a) {
                if (a.hasOwnProperty(b)) {
                    if (b.charAt(0) === "_" && b.charAt(1) !== "_") {
                        if (typeof a[b] !== "function") {
                            k(b, a);
                            m(b, a)
                        }
                    }
                }
            }
        };
        j.exports = i
    }, {}],
    447: [function(f, i, g) {
        var h = {};
        h.scrollOffsets = function() {
            return {
                x: window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft,
                y: window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop
            }
        };
        h.dimensions = function() {
            return {
                height: window.innerHeight || document.documentElement.clientHeight,
                width: window.innerWidth || document.documentElement.clientWidth
            }
        };
        i.exports = h
    }, {}],
    448: [function(f, h, g) {
        h.exports = function i(d) {
            var n = 65521;
            var b = 1;
            var m = 0;
            var a;
            var c;
            for (c = 0; c < d.length; c += 1) {
                a = d.charCodeAt(c);
                b = (b + a) % n;
                m = (m + b) % n
            }
            return (m << 16) | b
        }
    }, {}],
    449: [function(h, m, i) {
        var k = h("./Element");
        var j = h("./Function");
        m.exports = function l(c, b, d) {
            var a;
            b = k.getElementById(b);
            if (!k.isElement(b)) {
                throw "Invalid or non-existent element passed to bindEventListeners."
            }
            for (a in d) {
                if (d.hasOwnProperty(a)) {
                    var f = d[a];
                    if (typeof f === "function") {
                        k.addEventListener(b, a, j.bindAsEventListener(f, c))
                    } else {
                        if (typeof f === "string") {
                            k.addEventListener(b, a, j.bindAsEventListener(c[f], c))
                        }
                    }
                }
            }
        }
    }, {
        "./Element": 425,
        "./Function": 438
    }],
    450: [function(d, g, f) {
        g.exports = {
            console: window.console,
            document: document,
            window: window
        }
    }, {}],
    451: [function(m, l, i) {
        var n = m("./Environment/Feature/localStorageAvailable");
        var j = "f7c9180f-5c45-47b4-8de4-428015f096c0";
        var o = (n() && !!window.localStorage.getItem(j));
        l.exports = function k(a) {
            if (window.console && typeof console.log === "function" && o) {
                console.log(a)
            }
        }
    }, {
        "./Environment/Feature/localStorageAvailable": 436
    }],
    452: [function(f, i, g) {
        i.exports = function h(b) {
            var d;
            if (!(b && b.match && b.match(/\S/))) {
                throw "Attempt to create namespace with no name."
            }
            var c = b.split(/\./);
            var a = window;
            for (d = 0; d < c.length; d++) {
                a[c[d]] = a[c[d]] || {};
                a = a[c[d]]
            }
        }
    }, {}],
    453: [function(j, i, k) {
        var g = j("./String");
        i.exports = function h() {
            var b = {};
            var a = window.location.toString().split("?")[1];
            if (g.isString(a)) {
                b = g.queryStringToObject(a)
            }
            return b
        }
    }, {
        "./String": 445
    }],
    454: [function(d, g, f) {
        g.exports = function() {
            var a = ["abbr", "article", "aside", "command", "details", "figcaption", "figure", "footer", "header", "hgroup", "mark", "meter", "nav", "output", "picture", "progress", "section", "source", "summary", "time", "video"];
            a.forEach(function(b) {
                document.createElement(b)
            })
        }
    }, {}],
    455: [function(d, g, f) {
        g.exports = function(b, a) {
            if (a.IE.documentMode <= 8) {
                b.toArray = function(l) {
                    var c = [];
                    var m = l.length;
                    var i;
                    if (m > 0) {
                        for (i = 0; i < m; i += 1) {
                            c.push(l[i])
                        }
                    }
                    return c
                }
            }
        }
    }, {}],
    456: [function(k, j, g) {
        var h = k("../../Array");
        var i = k("../../vendor/Sizzle");
        j.exports = function(a, b, c) {
            var d = b.IE.documentMode;
            c = c || i;
            if (d < 8) {
                a.selectAll = function(p, o) {
                    if (typeof o === "undefined") {
                        o = document
                    } else {
                        if (!a.isElement(o) && o.nodeType !== 9 && o.nodeType !== 11) {
                            throw new TypeError("ac-base.Element.selectAll: Invalid context nodeType")
                        }
                    }
                    if (typeof p !== "string") {
                        throw new TypeError("ac-base.Element.selectAll: Selector must be a string")
                    }
                    if (o.nodeType === 11) {
                        var q = [];
                        var f;
                        h.toArray(o.childNodes).forEach(function(l) {
                            if (c.matchesSelector(l, p)) {
                                q.push(l)
                            }
                            if (f = c(p, l).length > 0) {
                                q.concat(f)
                            }
                        });
                        return q
                    }
                    return c(p, o)
                }
            } else {
                if (d < 9) {
                    a.selectAll = function(m, f) {
                        if (typeof f === "undefined") {
                            f = document
                        } else {
                            if (!a.isElement(f) && f.nodeType !== 9 && f.nodeType !== 11) {
                                throw new TypeError("ac-base.Element.selectAll: Invalid context nodeType")
                            }
                        }
                        if (typeof m !== "string") {
                            throw new TypeError("ac-base.Element.selectAll: Selector must be a string")
                        }
                        return h.toArray(f.querySelectorAll(m))
                    }
                }
            }
            if (d < 8) {
                a.select = function(p, f) {
                    if (typeof f === "undefined") {
                        f = document
                    } else {
                        if (!a.isElement(f) && f.nodeType !== 9 && f.nodeType !== 11) {
                            throw new TypeError("ac-base.Element.select: Invalid context nodeType")
                        }
                    }
                    if (typeof p !== "string") {
                        throw new TypeError("ac-base.Element.select: Selector must be a string")
                    }
                    if (f.nodeType === 11) {
                        var o = [];
                        var q;
                        h.toArray(f.childNodes).some(function(l) {
                            if (c.matchesSelector(l, p)) {
                                o = l;
                                return true
                            } else {
                                if (q = c(p, l).length > 0) {
                                    o = q[0];
                                    return true
                                }
                            }
                        });
                        return o
                    }
                    return c(p, f)[0]
                }
            }
            if (d < 9) {
                a.matchesSelector = function(f, m) {
                    return c.matchesSelector(f, m)
                };
                a.filterBySelector = function(f, m) {
                    return c.matches(m, f)
                }
            }
            if (d < 9 && typeof window.getComputedStyle !== "function") {
                a.getStyle = function(f, t, p) {
                    f = a.getElementById(f);
                    var q;
                    var r;
                    p = p || f.currentStyle;
                    if (p) {
                        t = t.replace(/-(\w)/g, a.setStyle.__camelCaseReplace);
                        t = t === "float" ? "styleFloat" : t;
                        if (t === "opacity") {
                            q = f.filters["DXImageTransform.Microsoft.Alpha"] || f.filters.Alpha;
                            if (q) {
                                return parseFloat(q.Opacity / 100)
                            }
                            return 1
                        }
                        r = p[t] || null;
                        return r === "auto" ? null : r
                    }
                }
            }
            if (d <= 8) {
                a.setStyle.__superSetStyle = a.setStyle.__setStyle;
                a.setStyle.__setStyle = function(f, q, o, p) {
                    if (q === "opacity") {
                        a.setStyle.__setOpacity(f, p)
                    } else {
                        a.setStyle.__superSetStyle(f, q, o, p)
                    }
                };
                a.setStyle.__setOpacity = function(n, f) {
                    f = (f > 1) ? 1 : ((f < 0.00001) ? 0 : f) * 100;
                    var o = n.filters["DXImageTransform.Microsoft.Alpha"] || n.filters.Alpha;
                    if (o) {
                        o.Opacity = f
                    } else {
                        n.style.filter += " progid:DXImageTransform.Microsoft.Alpha(Opacity=" + f + ")"
                    }
                }
            }
            if (b.version < 8) {
                a.getBoundingBox = function(p) {
                    p = a.getElementById(p);
                    var r = p.offsetLeft;
                    var t = p.offsetTop;
                    var q = p.offsetWidth;
                    var f = p.offsetHeight;
                    return {
                        top: t,
                        right: r + q,
                        bottom: t + f,
                        left: r,
                        width: q,
                        height: f
                    }
                }
            }
        }
    }, {
        "../../Array": 419,
        "../../vendor/Sizzle": 460
    }],
    457: [function(d, g, f) {
        g.exports = function(a) {
            function b() {
                var c;
                if (document.documentMode) {
                    c = parseInt(document.documentMode, 10)
                } else {
                    c = 5;
                    if (document.compatMode) {
                        if (document.compatMode === "CSS1Compat") {
                            c = 7
                        }
                    }
                }
                return c
            }
            a.IE = {
                documentMode: b()
            }
        }
    }, {}],
    458: [function(k, j, g) {
        var i = k("../../Element");

        function h(b, a) {
            var d = false;
            var c = b.parentNode;
            while (c !== a) {
                if (c) {
                    if (c.currentStyle.hasLayout) {
                        d = true;
                        break
                    }
                    c = c.parentNode
                }
            }
            return d
        }
        j.exports = function() {
            var b;
            var r;
            var a;
            var t;
            var f = [];
            var u;
            var d = (location.protocol === "https:" ? "https://ssl" : "http://images") + ".apple.com";
            var q = "g";
            var c = "url(" + d + "/global/elements/blank." + q + "if)";
            i.selectAll("a > * img").forEach(function(l) {
                b = l.parentNode;
                r = i.ancestor(l, "a");
                if (h(l, r) && l.height > 0 && l.width > 0) {
                    if (!i.select("ieclickbooster", r)) {
                        a = document.createElement("ieclickbooster");
                        t = i.getStyle(r, "position");
                        if (t === "static") {
                            i.setStyle(r, {
                                position: "relative"
                            })
                        }
                        i.selectAll("> *", r).forEach(function(n) {
                            var m = parseInt(n.currentStyle.zIndex, 10);
                            if (m > 0) {
                                f.push(m)
                            }
                        });
                        f.sort(function(m, n) {
                            return n - m
                        });
                        u = f[0] ? f[0].toString() : "1";
                        i.insert(a, r);
                        i.setStyle(a, {
                            display: "block",
                            position: "absolute",
                            top: "0",
                            bottom: "0",
                            left: "0",
                            right: "0",
                            background: c,
                            cursor: "pointer",
                            zIndex: u
                        })
                    }
                }
            })
        }
    }, {
        "../../Element": 425
    }],
    459: [function(g, j, h) {
        var k = 0;
        j.exports = function i() {
            return k++
        }
    }, {}],
    460: [function(d, g, f) {
        /*!
         * Sizzle CSS Selector Engine
         *  Copyright 2012, The Dojo Foundation
         *  Released under the MIT, BSD, and GPL Licenses.
         *  More information: http://sizzlejs.com/
         */
        (function(a2, bd) {
            var aS, a0, be, br, bl, bn = a2.document,
                bk = bn.documentElement,
                aK = "undefined",
                bj = false,
                bm = true,
                bf = 0,
                ba = [].slice,
                aU = [].push,
                aM = ("sizcache" + Math.random()).replace(".", ""),
                aE = "[\\x20\\t\\r\\n\\f]",
                bb = "(?:\\\\.|[-\\w]|[^\\x00-\\xa0])",
                bc = "(?:[\\w#_-]|[^\\x00-\\xa0]|\\\\.)",
                aC = "([*^$|!~]?=)",
                a8 = "\\[" + aE + "*(" + bb + "+)" + aE + "*(?:" + aC + aE + "*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|(" + bc + "+)|)|)" + aE + "*\\]",
                az = ":(" + bb + "+)(?:\\((?:(['\"])((?:\\\\.|[^\\\\])*?)\\2|(.*))\\)|)",
                aA = ":(nth|eq|gt|lt|first|last|even|odd)(?:\\((\\d*)\\)|)(?=[^-]|$)",
                bg = aE + "*([\\x20\\t\\r\\n\\f>+~])" + aE + "*",
                bh = "(?=[^\\x20\\t\\r\\n\\f])(?:\\\\.|" + a8 + "|" + az.replace(2, 7) + "|[^\\\\(),])+",
                aP = new RegExp("^" + aE + "+|((?:^|[^\\\\])(?:\\\\.)*)" + aE + "+$", "g"),
                av = new RegExp("^" + bg),
                aQ = new RegExp(bh + "?(?=" + aE + "*,|$)", "g"),
                a = new RegExp("^(?:(?!,)(?:(?:^|,)" + aE + "*" + bh + ")*?|" + aE + "*(.*?))(\\)|$)"),
                aG = new RegExp(bh.slice(19, -6) + "\\x20\\t\\r\\n\\f>+~])+|" + bg, "g"),
                a9 = /^(?:#([\w\-]+)|(\w+)|\.([\w\-]+))$/,
                aZ = /[\x20\t\r\n\f]*[+~]/,
                aJ = /:not\($/,
                aY = /h\d/i,
                a6 = /input|select|textarea|button/i,
                aR = /\\(?!\\)/g,
                aw = {
                    ID: new RegExp("^#(" + bb + "+)"),
                    CLASS: new RegExp("^\\.(" + bb + "+)"),
                    NAME: new RegExp("^\\[name=['\"]?(" + bb + "+)['\"]?\\]"),
                    TAG: new RegExp("^(" + bb.replace("[-", "[-\\*") + "+)"),
                    ATTR: new RegExp("^" + a8),
                    PSEUDO: new RegExp("^" + az),
                    CHILD: new RegExp("^:(only|nth|last|first)-child(?:\\(" + aE + "*(even|odd|(([+-]|)(\\d*)n|)" + aE + "*(?:([+-]|)" + aE + "*(\\d+)|))" + aE + "*\\)|)", "i"),
                    POS: new RegExp(aA, "ig"),
                    needsContext: new RegExp("^" + aE + "*[>+~]|" + aA, "i")
                },
                aW = {},
                aV = [],
                a5 = {},
                aO = [],
                aI = function(h) {
                    h.sizzleFilter = true;
                    return h
                },
                bq = function(h) {
                    return function(i) {
                        return i.nodeName.toLowerCase() === "input" && i.type === h
                    }
                },
                aT = function(h) {
                    return function(i) {
                        var j = i.nodeName.toLowerCase();
                        return (j === "input" || j === "button") && i.type === h
                    }
                },
                c = function(k) {
                    var j = false,
                        h = bn.createElement("div");
                    try {
                        j = k(h)
                    } catch (i) {}
                    h = null;
                    return j
                },
                a1 = c(function(h) {
                    h.innerHTML = "<select></select>";
                    var i = typeof h.lastChild.getAttribute("multiple");
                    return i !== "boolean" && i !== "string"
                }),
                bt = c(function(h) {
                    h.id = aM + 0;
                    h.innerHTML = "<a name='" + aM + "'></a><div name='" + aM + "'></div>";
                    bk.insertBefore(h, bk.firstChild);
                    var i = bn.getElementsByName && bn.getElementsByName(aM).length === 2 + bn.getElementsByName(aM + 0).length;
                    bl = !bn.getElementById(aM);
                    bk.removeChild(h);
                    return i
                }),
                bo = c(function(h) {
                    h.appendChild(bn.createComment(""));
                    return h.getElementsByTagName("*").length === 0
                }),
                ax = c(function(h) {
                    h.innerHTML = "<a href='#'></a>";
                    return h.firstChild && typeof h.firstChild.getAttribute !== aK && h.firstChild.getAttribute("href") === "#"
                }),
                ay = c(function(h) {
                    h.innerHTML = "<div class='hidden e'></div><div class='hidden'></div>";
                    if (!h.getElementsByClassName || h.getElementsByClassName("e").length === 0) {
                        return false
                    }
                    h.lastChild.className = "e";
                    return h.getElementsByClassName("e").length !== 1
                });
            var a4 = function(h, k, o, l) {
                o = o || [];
                k = k || bn;
                var n, j, m, i, p = k.nodeType;
                if (p !== 1 && p !== 9) {
                    return []
                }
                if (!h || typeof h !== "string") {
                    return o
                }
                m = a7(k);
                if (!m && !l) {
                    if ((n = a9.exec(h))) {
                        if ((i = n[1])) {
                            if (p === 9) {
                                j = k.getElementById(i);
                                if (j && j.parentNode) {
                                    if (j.id === i) {
                                        o.push(j);
                                        return o
                                    }
                                } else {
                                    return o
                                }
                            } else {
                                if (k.ownerDocument && (j = k.ownerDocument.getElementById(i)) && aB(k, j) && j.id === i) {
                                    o.push(j);
                                    return o
                                }
                            }
                        } else {
                            if (n[2]) {
                                aU.apply(o, ba.call(k.getElementsByTagName(h), 0));
                                return o
                            } else {
                                if ((i = n[3]) && ay && k.getElementsByClassName) {
                                    aU.apply(o, ba.call(k.getElementsByClassName(i), 0));
                                    return o
                                }
                            }
                        }
                    }
                }
                return aN(h, k, o, l, m)
            };
            var au = a4.selectors = {
                cacheLength: 50,
                match: aw,
                order: ["ID", "TAG"],
                attrHandle: {},
                createPseudo: aI,
                find: {
                    ID: bl ? function(h, i, j) {
                        if (typeof i.getElementById !== aK && !j) {
                            var k = i.getElementById(h);
                            return k && k.parentNode ? [k] : []
                        }
                    } : function(h, i, j) {
                        if (typeof i.getElementById !== aK && !j) {
                            var k = i.getElementById(h);
                            return k ? k.id === h || typeof k.getAttributeNode !== aK && k.getAttributeNode("id").value === h ? [k] : bd : []
                        }
                    },
                    TAG: bo ? function(i, h) {
                        if (typeof h.getElementsByTagName !== aK) {
                            return h.getElementsByTagName(i)
                        }
                    } : function(m, i) {
                        var j = i.getElementsByTagName(m);
                        if (m === "*") {
                            var h, k = [],
                                l = 0;
                            for (;
                                (h = j[l]); l++) {
                                if (h.nodeType === 1) {
                                    k.push(h)
                                }
                            }
                            return k
                        }
                        return j
                    }
                },
                relative: {
                    ">": {
                        dir: "parentNode",
                        first: true
                    },
                    " ": {
                        dir: "parentNode"
                    },
                    "+": {
                        dir: "previousSibling",
                        first: true
                    },
                    "~": {
                        dir: "previousSibling"
                    }
                },
                preFilter: {
                    ATTR: function(h) {
                        h[1] = h[1].replace(aR, "");
                        h[3] = (h[4] || h[5] || "").replace(aR, "");
                        if (h[2] === "~=") {
                            h[3] = " " + h[3] + " "
                        }
                        return h.slice(0, 4)
                    },
                    CHILD: function(h) {
                        h[1] = h[1].toLowerCase();
                        if (h[1] === "nth") {
                            if (!h[2]) {
                                a4.error(h[0])
                            }
                            h[3] = +(h[3] ? h[4] + (h[5] || 1) : 2 * (h[2] === "even" || h[2] === "odd"));
                            h[4] = +((h[6] + h[7]) || h[2] === "odd")
                        } else {
                            if (h[2]) {
                                a4.error(h[0])
                            }
                        }
                        return h
                    },
                    PSEUDO: function(j) {
                        var i, h = j[4];
                        if (aw.CHILD.test(j[0])) {
                            return null
                        }
                        if (h && (i = a.exec(h)) && i.pop()) {
                            j[0] = j[0].slice(0, i[0].length - h.length - 1);
                            h = i[0].slice(0, -1)
                        }
                        j.splice(2, 3, h || j[3]);
                        return j
                    }
                },
                filter: {
                    ID: bl ? function(h) {
                        h = h.replace(aR, "");
                        return function(i) {
                            return i.getAttribute("id") === h
                        }
                    } : function(h) {
                        h = h.replace(aR, "");
                        return function(i) {
                            var j = typeof i.getAttributeNode !== aK && i.getAttributeNode("id");
                            return j && j.value === h
                        }
                    },
                    TAG: function(h) {
                        if (h === "*") {
                            return function() {
                                return true
                            }
                        }
                        h = h.replace(aR, "").toLowerCase();
                        return function(i) {
                            return i.nodeName && i.nodeName.toLowerCase() === h
                        }
                    },
                    CLASS: function(i) {
                        var h = aW[i];
                        if (!h) {
                            h = aW[i] = new RegExp("(^|" + aE + ")" + i + "(" + aE + "|$)");
                            aV.push(i);
                            if (aV.length > au.cacheLength) {
                                delete aW[aV.shift()]
                            }
                        }
                        return function(j) {
                            return h.test(j.className || (typeof j.getAttribute !== aK && j.getAttribute("class")) || "")
                        }
                    },
                    ATTR: function(h, i, j) {
                        if (!i) {
                            return function(k) {
                                return a4.attr(k, h) != null
                            }
                        }
                        return function(l) {
                            var m = a4.attr(l, h),
                                k = m + "";
                            if (m == null) {
                                return i === "!="
                            }
                            switch (i) {
                                case "=":
                                    return k === j;
                                case "!=":
                                    return k !== j;
                                case "^=":
                                    return j && k.indexOf(j) === 0;
                                case "*=":
                                    return j && k.indexOf(j) > -1;
                                case "$=":
                                    return j && k.substr(k.length - j.length) === j;
                                case "~=":
                                    return (" " + k + " ").indexOf(j) > -1;
                                case "|=":
                                    return k === j || k.substr(0, j.length + 1) === j + "-"
                            }
                        }
                    },
                    CHILD: function(k, i, h, j) {
                        if (k === "nth") {
                            var l = bf++;
                            return function(o) {
                                var n, m, p = 0,
                                    q = o;
                                if (h === 1 && j === 0) {
                                    return true
                                }
                                n = o.parentNode;
                                if (n && (n[aM] !== l || !o.sizset)) {
                                    for (q = n.firstChild; q; q = q.nextSibling) {
                                        if (q.nodeType === 1) {
                                            q.sizset = ++p;
                                            if (q === o) {
                                                break
                                            }
                                        }
                                    }
                                    n[aM] = l
                                }
                                m = o.sizset - j;
                                if (h === 0) {
                                    return m === 0
                                } else {
                                    return (m % h === 0 && m / h >= 0)
                                }
                            }
                        }
                        return function(n) {
                            var m = n;
                            switch (k) {
                                case "only":
                                case "first":
                                    while ((m = m.previousSibling)) {
                                        if (m.nodeType === 1) {
                                            return false
                                        }
                                    }
                                    if (k === "first") {
                                        return true
                                    }
                                    m = n;
                                case "last":
                                    while ((m = m.nextSibling)) {
                                        if (m.nodeType === 1) {
                                            return false
                                        }
                                    }
                                    return true
                            }
                        }
                    },
                    PSEUDO: function(h, i, k, l) {
                        var j = au.pseudos[h] || au.pseudos[h.toLowerCase()];
                        if (!j) {
                            a4.error("unsupported pseudo: " + h)
                        }
                        if (!j.sizzleFilter) {
                            return j
                        }
                        return j(i, k, l)
                    }
                },
                pseudos: {
                    not: aI(function(k, i, j) {
                        var h = bi(k.replace(aP, "$1"), i, j);
                        return function(l) {
                            return !h(l)
                        }
                    }),
                    enabled: function(h) {
                        return h.disabled === false
                    },
                    disabled: function(h) {
                        return h.disabled === true
                    },
                    checked: function(i) {
                        var h = i.nodeName.toLowerCase();
                        return (h === "input" && !!i.checked) || (h === "option" && !!i.selected)
                    },
                    selected: function(h) {
                        if (h.parentNode) {
                            h.parentNode.selectedIndex
                        }
                        return h.selected === true
                    },
                    parent: function(h) {
                        return !!h.firstChild
                    },
                    empty: function(h) {
                        return !h.firstChild
                    },
                    contains: aI(function(h) {
                        return function(i) {
                            return (i.textContent || i.innerText || bu(i)).indexOf(h) > -1
                        }
                    }),
                    has: aI(function(h) {
                        return function(i) {
                            return a4(h, i).length > 0
                        }
                    }),
                    header: function(h) {
                        return aY.test(h.nodeName)
                    },
                    text: function(h) {
                        var i, j;
                        return h.nodeName.toLowerCase() === "input" && (i = h.type) === "text" && ((j = h.getAttribute("type")) == null || j.toLowerCase() === i)
                    },
                    radio: bq("radio"),
                    checkbox: bq("checkbox"),
                    file: bq("file"),
                    password: bq("password"),
                    image: bq("image"),
                    submit: aT("submit"),
                    reset: aT("reset"),
                    button: function(h) {
                        var i = h.nodeName.toLowerCase();
                        return i === "input" && h.type === "button" || i === "button"
                    },
                    input: function(h) {
                        return a6.test(h.nodeName)
                    },
                    focus: function(i) {
                        var h = i.ownerDocument;
                        return i === h.activeElement && (!h.hasFocus || h.hasFocus()) && !!(i.type || i.href)
                    },
                    active: function(h) {
                        return h === h.ownerDocument.activeElement
                    }
                },
                setFilters: {
                    first: function(h, i, j) {
                        return j ? h.slice(1) : [h[0]]
                    },
                    last: function(h, i, j) {
                        var k = h.pop();
                        return j ? h : [k]
                    },
                    even: function(h, i, j) {
                        var k = [],
                            l = j ? 1 : 0,
                            m = h.length;
                        for (; l < m; l = l + 2) {
                            k.push(h[l])
                        }
                        return k
                    },
                    odd: function(h, i, j) {
                        var k = [],
                            l = j ? 0 : 1,
                            m = h.length;
                        for (; l < m; l = l + 2) {
                            k.push(h[l])
                        }
                        return k
                    },
                    lt: function(h, i, j) {
                        return j ? h.slice(+i) : h.slice(0, +i)
                    },
                    gt: function(h, i, j) {
                        return j ? h.slice(0, +i + 1) : h.slice(+i + 1)
                    },
                    eq: function(h, i, j) {
                        var k = h.splice(+i, 1);
                        return j ? h : k
                    }
                }
            };
            au.setFilters.nth = au.setFilters.eq;
            au.filters = au.pseudos;
            if (!ax) {
                au.attrHandle = {
                    href: function(h) {
                        return h.getAttribute("href", 2)
                    },
                    type: function(h) {
                        return h.getAttribute("type")
                    }
                }
            }
            if (bt) {
                au.order.push("NAME");
                au.find.NAME = function(i, h) {
                    if (typeof h.getElementsByName !== aK) {
                        return h.getElementsByName(i)
                    }
                }
            }
            if (ay) {
                au.order.splice(1, 0, "CLASS");
                au.find.CLASS = function(h, i, j) {
                    if (typeof i.getElementsByClassName !== aK && !j) {
                        return i.getElementsByClassName(h)
                    }
                }
            }
            try {
                ba.call(bk.childNodes, 0)[0].nodeType
            } catch (aD) {
                ba = function(i) {
                    var h, j = [];
                    for (;
                        (h = this[i]); i++) {
                        j.push(h)
                    }
                    return j
                }
            }
            var a7 = a4.isXML = function(i) {
                var h = i && (i.ownerDocument || i).documentElement;
                return h ? h.nodeName !== "HTML" : false
            };
            var aB = a4.contains = bk.compareDocumentPosition ? function(h, i) {
                return !!(h.compareDocumentPosition(i) & 16)
            } : bk.contains ? function(j, k) {
                var h = j.nodeType === 9 ? j.documentElement : j,
                    i = k.parentNode;
                return j === i || !!(i && i.nodeType === 1 && h.contains && h.contains(i))
            } : function(h, i) {
                while ((i = i.parentNode)) {
                    if (i === h) {
                        return true
                    }
                }
                return false
            };
            var bu = a4.getText = function(h) {
                var i, k = "",
                    j = 0,
                    l = h.nodeType;
                if (l) {
                    if (l === 1 || l === 9 || l === 11) {
                        if (typeof h.textContent === "string") {
                            return h.textContent
                        } else {
                            for (h = h.firstChild; h; h = h.nextSibling) {
                                k += bu(h)
                            }
                        }
                    } else {
                        if (l === 3 || l === 4) {
                            return h.nodeValue
                        }
                    }
                } else {
                    for (;
                        (i = h[j]); j++) {
                        k += bu(i)
                    }
                }
                return k
            };
            a4.attr = function(h, i) {
                var k, j = a7(h);
                if (!j) {
                    i = i.toLowerCase()
                }
                if (au.attrHandle[i]) {
                    return au.attrHandle[i](h)
                }
                if (a1 || j) {
                    return h.getAttribute(i)
                }
                k = h.getAttributeNode(i);
                return k ? typeof h[i] === "boolean" ? h[i] ? i : null : k.specified ? k.value : null : null
            };
            a4.error = function(h) {
                throw new Error("Syntax error, unrecognized expression: " + h)
            };
            [0, 0].sort(function() {
                return (bm = 0)
            });
            if (bk.compareDocumentPosition) {
                be = function(h, i) {
                    if (h === i) {
                        bj = true;
                        return 0
                    }
                    return (!h.compareDocumentPosition || !i.compareDocumentPosition ? h.compareDocumentPosition : h.compareDocumentPosition(i) & 4) ? -1 : 1
                }
            } else {
                be = function(m, n) {
                    if (m === n) {
                        bj = true;
                        return 0
                    } else {
                        if (m.sourceIndex && n.sourceIndex) {
                            return m.sourceIndex - n.sourceIndex
                        }
                    }
                    var p, j, i = [],
                        k = [],
                        q = m.parentNode,
                        o = n.parentNode,
                        l = q;
                    if (q === o) {
                        return br(m, n)
                    } else {
                        if (!q) {
                            return -1
                        } else {
                            if (!o) {
                                return 1
                            }
                        }
                    }
                    while (l) {
                        i.unshift(l);
                        l = l.parentNode
                    }
                    l = o;
                    while (l) {
                        k.unshift(l);
                        l = l.parentNode
                    }
                    p = i.length;
                    j = k.length;
                    for (var h = 0; h < p && h < j; h++) {
                        if (i[h] !== k[h]) {
                            return br(i[h], k[h])
                        }
                    }
                    return h === p ? br(m, k[h], -1) : br(i[h], n, 1)
                };
                br = function(j, k, i) {
                    if (j === k) {
                        return i
                    }
                    var h = j.nextSibling;
                    while (h) {
                        if (h === k) {
                            return -1
                        }
                        h = h.nextSibling
                    }
                    return 1
                }
            }
            a4.uniqueSort = function(i) {
                var h, j = 1;
                if (be) {
                    bj = bm;
                    i.sort(be);
                    if (bj) {
                        for (;
                            (h = i[j]); j++) {
                            if (h === i[j - 1]) {
                                i.splice(j--, 1)
                            }
                        }
                    }
                }
                return i
            };

            function a3(l, h, i, k) {
                var j = 0,
                    m = h.length;
                for (; j < m; j++) {
                    a4(l, h[j], i, k)
                }
            }

            function b(o, m, l, j, n, h) {
                var k, i = au.setFilters[m.toLowerCase()];
                if (!i) {
                    a4.error(m)
                }
                if (o || !(k = n)) {
                    a3(o || "*", j, (k = []), n)
                }
                return k.length > 0 ? i(k, l, h) : []
            }

            function aX(v, u, x, p, m) {
                var j, r, k, i, y, l, w, o, t = 0,
                    q = m.length,
                    n = aw.POS,
                    z = new RegExp("^" + n.source + "(?!" + aE + ")", "i"),
                    h = function() {
                        var A = 1,
                            B = arguments.length - 2;
                        for (; A < B; A++) {
                            if (arguments[A] === bd) {
                                j[A] = bd
                            }
                        }
                    };
                for (; t < q; t++) {
                    n.exec("");
                    v = m[t];
                    i = [];
                    k = 0;
                    y = p;
                    while ((j = n.exec(v))) {
                        o = n.lastIndex = j.index + j[0].length;
                        if (o > k) {
                            w = v.slice(k, j.index);
                            k = o;
                            l = [u];
                            if (av.test(w)) {
                                if (y) {
                                    l = y
                                }
                                y = p
                            }
                            if ((r = aJ.test(w))) {
                                w = w.slice(0, -5).replace(av, "$&*")
                            }
                            if (j.length > 1) {
                                j[0].replace(z, h)
                            }
                            y = b(w, j[1], j[2], l, y, r)
                        }
                    }
                    if (y) {
                        i = i.concat(y);
                        if ((w = v.slice(k)) && w !== ")") {
                            a3(w, i, x, p)
                        } else {
                            aU.apply(x, i)
                        }
                    } else {
                        a4(v, u, x, p)
                    }
                }
                return q === 1 ? x : a4.uniqueSort(x)
            }

            function bs(t, i, p) {
                var n, o, m, v = [],
                    r = 0,
                    q = a.exec(t),
                    k = !q.pop() && !q.pop(),
                    j = k && t.match(aQ) || [""],
                    l = au.preFilter,
                    h = au.filter,
                    u = !p && i !== bn;
                for (;
                    (o = j[r]) != null && k; r++) {
                    v.push(n = []);
                    if (u) {
                        o = " " + o
                    }
                    while (o) {
                        k = false;
                        if ((q = av.exec(o))) {
                            o = o.slice(q[0].length);
                            k = n.push({
                                part: q.pop().replace(aP, " "),
                                captures: q
                            })
                        }
                        for (m in h) {
                            if ((q = aw[m].exec(o)) && (!l[m] || (q = l[m](q, i, p)))) {
                                o = o.slice(q.shift().length);
                                k = n.push({
                                    part: m,
                                    captures: q
                                })
                            }
                        }
                        if (!k) {
                            break
                        }
                    }
                }
                if (!k) {
                    a4.error(t)
                }
                return v
            }

            function aH(h, i, j) {
                var l = i.dir,
                    k = bf++;
                if (!h) {
                    h = function(m) {
                        return m === j
                    }
                }
                return i.first ? function(n, m) {
                    while ((n = n[l])) {
                        if (n.nodeType === 1) {
                            return h(n, m) && n
                        }
                    }
                } : function(p, q) {
                    var o, n = k + "." + a0,
                        m = n + "." + aS;
                    while ((p = p[l])) {
                        if (p.nodeType === 1) {
                            if ((o = p[aM]) === m) {
                                return false
                            } else {
                                if (typeof o === "string" && o.indexOf(n) === 0) {
                                    if (p.sizset) {
                                        return p
                                    }
                                } else {
                                    p[aM] = m;
                                    if (h(p, q)) {
                                        p.sizset = true;
                                        return p
                                    }
                                    p.sizset = false
                                }
                            }
                        }
                    }
                }
            }

            function aL(i, h) {
                return i ? function(j, k) {
                    var l = h(j, k);
                    return l && i(l === true ? j : l, k)
                } : h
            }

            function aF(h, j, m) {
                var k, i, l = 0;
                for (;
                    (k = h[l]); l++) {
                    if (au.relative[k.part]) {
                        i = aH(i, au.relative[k.part], j)
                    } else {
                        k.captures.push(j, m);
                        i = aL(i, au.filter[k.part].apply(null, k.captures))
                    }
                }
                return i
            }

            function bp(h) {
                return function(j, k) {
                    var i, l = 0;
                    for (;
                        (i = h[l]); l++) {
                        if (i(j, k)) {
                            return true
                        }
                    }
                    return false
                }
            }
            var bi = a4.compile = function(n, k, m) {
                var j, h, l, i = a5[n];
                if (i && i.context === k) {
                    i.dirruns++;
                    return i
                }
                h = bs(n, k, m);
                for (l = 0;
                    (j = h[l]); l++) {
                    h[l] = aF(j, k, m)
                }
                i = a5[n] = bp(h);
                i.context = k;
                i.runs = i.dirruns = 0;
                aO.push(n);
                if (aO.length > au.cacheLength) {
                    delete a5[aO.shift()]
                }
                return i
            };
            a4.matches = function(h, i) {
                return a4(h, null, null, i)
            };
            a4.matchesSelector = function(i, h) {
                return a4(h, null, null, [i]).length > 0
            };
            var aN = function(y, m, v, q, r) {
                y = y.replace(aP, "$1");
                var o, p, u, n, k, i, j, h, w, t = y.match(aQ),
                    l = y.match(aG),
                    x = m.nodeType;
                if (aw.POS.test(y)) {
                    return aX(y, m, v, q, t)
                }
                if (q) {
                    o = ba.call(q, 0)
                } else {
                    if (t && t.length === 1) {
                        if (l.length > 1 && x === 9 && !r && (t = aw.ID.exec(l[0]))) {
                            m = au.find.ID(t[1], m, r)[0];
                            if (!m) {
                                return v
                            }
                            y = y.slice(l.shift().length)
                        }
                        h = ((t = aZ.exec(l[0])) && !t.index && m.parentNode) || m;
                        w = l.pop();
                        i = w.split(":not")[0];
                        for (u = 0, n = au.order.length; u < n; u++) {
                            j = au.order[u];
                            if ((t = aw[j].exec(i))) {
                                o = au.find[j]((t[1] || "").replace(aR, ""), h, r);
                                if (o == null) {
                                    continue
                                }
                                if (i === w) {
                                    y = y.slice(0, y.length - w.length) + i.replace(aw[j], "");
                                    if (!y) {
                                        aU.apply(v, ba.call(o, 0))
                                    }
                                }
                                break
                            }
                        }
                    }
                }
                if (y) {
                    p = bi(y, m, r);
                    a0 = p.dirruns;
                    if (o == null) {
                        o = au.find.TAG("*", (aZ.test(y) && m.parentNode) || m)
                    }
                    for (u = 0;
                        (k = o[u]); u++) {
                        aS = p.runs++;
                        if (p(k, m)) {
                            v.push(k)
                        }
                    }
                }
                return v
            };
            if (bn.querySelectorAll) {
                (function() {
                    var h, k = aN,
                        i = /'|\\/g,
                        l = /\=[\x20\t\r\n\f]*([^'"\]]*)[\x20\t\r\n\f]*\]/g,
                        m = [],
                        n = [":active"],
                        j = bk.matchesSelector || bk.mozMatchesSelector || bk.webkitMatchesSelector || bk.oMatchesSelector || bk.msMatchesSelector;
                    c(function(o) {
                        o.innerHTML = "<select><option selected></option></select>";
                        if (!o.querySelectorAll("[selected]").length) {
                            m.push("\\[" + aE + "*(?:checked|disabled|ismap|multiple|readonly|selected|value)")
                        }
                        if (!o.querySelectorAll(":checked").length) {
                            m.push(":checked")
                        }
                    });
                    c(function(o) {
                        o.innerHTML = "<p test=''></p>";
                        if (o.querySelectorAll("[test^='']").length) {
                            m.push("[*^$]=" + aE + "*(?:\"\"|'')")
                        }
                        o.innerHTML = "<input type='hidden'>";
                        if (!o.querySelectorAll(":enabled").length) {
                            m.push(":enabled", ":disabled")
                        }
                    });
                    m = m.length && new RegExp(m.join("|"));
                    aN = function(r, w, q, o, p) {
                        if (!o && !p && (!m || !m.test(r))) {
                            if (w.nodeType === 9) {
                                try {
                                    aU.apply(q, ba.call(w.querySelectorAll(r), 0));
                                    return q
                                } catch (t) {}
                            } else {
                                if (w.nodeType === 1 && w.nodeName.toLowerCase() !== "object") {
                                    var u = w.getAttribute("id"),
                                        x = u || aM,
                                        v = aZ.test(r) && w.parentNode || w;
                                    if (u) {
                                        x = x.replace(i, "\\$&")
                                    } else {
                                        w.setAttribute("id", x)
                                    }
                                    try {
                                        aU.apply(q, ba.call(v.querySelectorAll(r.replace(aQ, "[id='" + x + "'] $&")), 0));
                                        return q
                                    } catch (t) {} finally {
                                        if (!u) {
                                            w.removeAttribute("id")
                                        }
                                    }
                                }
                            }
                        }
                        return k(r, w, q, o, p)
                    };
                    if (j) {
                        c(function(o) {
                            h = j.call(o, "div");
                            try {
                                j.call(o, "[test!='']:sizzle");
                                n.push(au.match.PSEUDO)
                            } catch (p) {}
                        });
                        n = new RegExp(n.join("|"));
                        a4.matchesSelector = function(q, o) {
                            o = o.replace(l, "='$1']");
                            if (!a7(q) && !n.test(o) && (!m || !m.test(o))) {
                                try {
                                    var r = j.call(q, o);
                                    if (r || h || q.document && q.document.nodeType !== 11) {
                                        return r
                                    }
                                } catch (p) {}
                            }
                            return a4(o, null, null, [q]).length > 0
                        }
                    }
                })()
            }
            if (typeof g === "object" && g.exports) {
                g.exports = a4
            } else {
                a2.Sizzle = a4
            }
        })(window)
    }, {}],
    461: [function(d, g, f) {
        g.exports = {
            Routes: d("./ac-routes/Routes"),
            Route: d("./ac-routes/Route")
        }
    }, {
        "./ac-routes/Route": 462,
        "./ac-routes/Routes": 463
    }],
    462: [function(g, k, h) {
        function i(c, a, d, b, f) {
            this.path = c;
            this.callback = a;
            this.context = d;
            this.greedy = b || false;
            this.priority = f || 0;
            if (typeof this.priority !== "number") {
                throw new Error("Priority must be a Number.")
            }
            this.identifierPattern = "([a-zA-Z0-9\\-\\_]+)";
            this.tokensRe = new RegExp(":" + this.identifierPattern, "g");
            this.matcher = this._createRouteMatcher(c)
        }
        var j = i.prototype;
        j._createRouteMatcher = function(c) {
            if (c && c.exec) {
                return {
                    pattern: c
                }
            } else {
                if (c === "/") {
                    return {
                        pattern: /^\/$/
                    }
                } else {
                    if (typeof c !== "string") {
                        throw new Error("path must be either a string or regex")
                    }
                }
            }
            var d = this._extractRouteTokens(c);
            var a = c.replace(this.tokensRe, this.identifierPattern);
            var b = new RegExp(a, "g");
            return {
                pattern: b,
                routeTokens: d
            }
        };
        j._extractRouteTokens = function(a) {
            var d = a.replace(this.tokensRe, ":" + this.identifierPattern);
            var b = new RegExp(d, "g");
            var c = b.exec(a);
            if (c && c.length > 1) {
                c = c.slice(1)
            } else {
                c = null
            }
            return c
        };
        j.match = function(c) {
            this.matcher.pattern.lastIndex = 0;
            var d = this.matcher.pattern.exec(c);
            if (d) {
                var b = (d.length) ? d.slice(1) : [];
                var a = this.callback;
                if (a && typeof a === "function") {
                    a.apply(this.context || this, b);
                    return true
                }
            }
            return false
        };
        k.exports = i
    }, {}],
    463: [function(m, l, h) {
        var j = m("./Route");

        function i(a) {
            this._routes = {};
            if (a) {
                this.addRoutes(a)
            }
        }
        var k = i.prototype;
        k._getIndex = function(b, a, c) {
            if (this._routes[b] !== undefined) {
                var d = this._routes[b].length;
                while (--d > -1) {
                    if (this._routes[b][d].callback === a && this._routes[b][d].context === c) {
                        return d
                    }
                }
            }
            return -1
        };
        k.match = function(a) {
            var b, c;
            for (b in this._routes) {
                c = this._routes[b].length;
                while (--c > -1) {
                    if (this._routes[b][c].match(a) && this._routes[b][c].greedy) {
                        break
                    }
                }
            }
        };
        k.add = function(b) {
            if (this._routes[b.path] === undefined) {
                this._routes[b.path] = [b]
            } else {
                if (!this.get(b.path, b.callback, b.context)) {
                    var a, c = this._routes[b.path].length;
                    if (c > 0) {
                        for (a = 0; a < c; ++a) {
                            if (this._routes[b.path][a].priority > b.priority) {
                                this._routes[b.path].splice(a, 0, b);
                                return b
                            }
                        }
                    }
                    this._routes[b.path].push(b)
                }
            }
            return b
        };
        k.remove = function(b) {
            var a = this._getIndex(b.path, b.callback, b.context);
            if (a > -1) {
                this._routes[b.path].splice(a, 1);
                return b
            }
            return false
        };
        k.get = function(b, a, c) {
            var d = this._getIndex(b, a, c);
            if (d > -1) {
                return this._routes[b][d]
            }
            return false
        };
        k.createRoute = function(c, a, d, b, f) {
            var g = new j(c, a, d, b, f);
            this.add(g);
            return g
        };
        k.addRoutes = function(c) {
            if (c instanceof Array) {
                var a, b, d = c.length;
                for (a = 0; a < d; ++a) {
                    b = c[a];
                    if (b && typeof b === "object") {
                        this.add(b)
                    }
                }
            } else {
                throw new Error("routes must be an Array.")
            }
        };
        k.removeRoutes = function(c) {
            if (c instanceof Array) {
                var a, b, d = c.length;
                for (a = 0; a < d; ++a) {
                    b = c[a];
                    if (b && typeof b === "object") {
                        this.remove(b)
                    }
                }
            } else {
                throw new Error("routes must be an Array.")
            }
        };
        k.getRoutes = function(a) {
            if (this._routes[a] === undefined) {
                return []
            }
            return this._routes[a]
        };
        l.exports = i
    }, {
        "./Route": 462
    }],
    464: [function(d, g, f) {
        g.exports = {
            Router: d("./ac-router/Router"),
            History: d("./ac-router/History"),
            Routes: d("ac-routes").Routes,
            Route: d("ac-routes").Route
        }
    }, {
        "./ac-router/History": 465,
        "./ac-router/Router": 466,
        "ac-routes": 461
    }],
    465: [function(i, o, j) {
        var n = i("ac-base").Element;
        var k = i("ac-event-emitter").EventEmitter;

        function l(a) {
            a = a || {};
            this.history = window.history;
            this.rootStripper = /^\/+|\/+$/g;
            this.root = a.root || "/";
            this.root = ("/" + this.root + "/").replace(this.rootStripper, "/");
            var b = a.resolveInitialHash === undefined ? true : a.resolveInitialHash;
            this._pushState = a.pushState === undefined ? true : this._pushState;
            this._hashChange = a.hashChange || false;
            this._setUpdateVars(b);
            if (a.autoStart) {
                this.start()
            }
        }
        var m = l.prototype = new k();
        m._isRoot = function(a) {
            return ("/" + a + "/").replace(this.rootStripper, "/") === this.root
        };
        m._isPushStateSupported = function() {
            return (this.history && this.history.pushState)
        };
        m._isHashChangeSupported = function() {
            return ("onhashchange" in window)
        };
        m._setUpdateVars = function(a) {
            if (this._pushState && this._isPushStateSupported()) {
                if (a && this._hashChange && window.location.href.indexOf("#")) {
                    this.history.pushState({}, document.title, window.location.href.replace("#", ""))
                }
                this._hashChange = false
            } else {
                if (a && this._pushState && this._hashChange && window.location.href.indexOf("#") < 0) {
                    if (!window.location.origin) {
                        window.location.origin = window.location.protocol + "//" + window.location.hostname;
                        window.location.origin += (window.location.port ? ":" + window.location.port : "")
                    }
                    var b = window.location.href.substr(window.location.origin.length + this.root.length);
                    if (b.length) {
                        window.location = window.location.origin + this.root + "#" + b;
                        return
                    }
                }
                if (this._hashChange && !this._isHashChangeSupported()) {
                    this._interval = 50;
                    this._iframe = document.createElement('<iframe src="javascript:0" tabindex="-1" style="display:none;">');
                    this._iframe = document.body.appendChild(this._iframe).contentWindow;
                    this._iframe.document.open().close()
                }
                this._pushState = false
            }
        };
        m._checkUrl = function() {
            var a = this._iframe.location.hash.substr(1);
            if (a.length === 0) {
                a = "/"
            }
            if (this.fragment() !== a) {
                window.location.hash = "#" + (a === "/" ? "" : a);
                this._ignoreHashChange = false;
                this._handleHashChange()
            }
        };
        m._handlePopState = function(a) {
            this.trigger("popstate", {
                fragment: this.fragment()
            })
        };
        m._handleHashChange = function(a) {
            if (this._ignoreHashChange) {
                this._ignoreHashChange = false;
                return
            }
            this.trigger("popstate", {
                fragment: this.fragment()
            })
        };
        m.canUpdate = function() {
            return this._pushState || this._hashChange
        };
        m.start = function() {
            if (!this.started && (this._pushState || this._hashChange)) {
                this.started = true;
                if (this._pushState) {
                    this._handlePopState = this._handlePopState.bind(this);
                    n.addEventListener(window, "popstate", this._handlePopState)
                } else {
                    if (this._hashChange) {
                        if (this._isHashChangeSupported()) {
                            this._handleHashChange = this._handleHashChange.bind(this);
                            n.addEventListener(window, "hashchange", this._handleHashChange)
                        } else {
                            this._iframe.location.hash = this.fragment();
                            this._checkUrl = this._checkUrl.bind(this);
                            this._checkUrlInterval = setInterval(this._checkUrl, this._interval)
                        }
                    }
                }
            }
            return this.started || false
        };
        m.stop = function() {
            if (this.started) {
                this.started = false;
                if (this._pushState) {
                    n.removeEventListener(window, "popstate", this._handlePopState)
                } else {
                    if (this._hashChange) {
                        if (this._isHashChangeSupported()) {
                            n.removeEventListener(window, "hashchange", this._handleHashChange)
                        } else {
                            if (this._checkUrlInterval) {
                                clearInterval(this._checkUrlInterval);
                                this._checkUrlInterval = null
                            }
                        }
                    }
                }
            }
        };
        m.navigate = function(a, b) {
            if (!this.started || !this.canUpdate()) {
                return false
            }
            b = b || {};
            a = (a === "/" && this.root !== "/") ? "" : a;
            var c = ((this._isRoot(a) ? "" : this.root) + a).replace("//", "/");
            if (this._pushState) {
                this.history.pushState(b, document.title, c)
            } else {
                if (this._hashChange) {
                    this._ignoreHashChange = true;
                    window.location.hash = "#" + a;
                    if (!this._isHashChangeSupported()) {
                        this._iframe.document.open().close();
                        this._iframe.location.hash = "#" + a
                    }
                }
            }
            return true
        };
        m.fragment = function() {
            var a = "";
            if (this._pushState) {
                a = (window.location.pathname).substr(this.root.length)
            } else {
                if (this._hashChange) {
                    a = window.location.hash.substr(1)
                }
            }
            return a === "" ? "/" : a
        };
        o.exports = l
    }, {
        "ac-base": 414,
        "ac-event-emitter": 246
    }],
    466: [function(p, r, n) {
        var l = p("ac-base").Element;
        var o = p("./History");
        var k = p("ac-routes").Route;
        var t = p("ac-routes").Routes;

        function q(a) {
            a = a || {};
            this._intercept = a.intercept || "[data-route]";
            this._interceptAttribute = a.attribute || "href";
            this._handleTrigger = this._handleTrigger.bind(this);
            this.intercept(this._intercept);
            this.history = a.history || new o({
                root: a.root,
                autoStart: a.autoStart,
                pushState: a.pushState,
                hashChange: a.hashChange,
                resolveInitialHash: a.resolveInitialHash
            });
            t.call(this, a.routes);
            if (a.autoStart) {
                if (!this.history.started) {
                    this.history.start()
                }
                this.start()
            }
        }
        var m = q.prototype = new t();
        m._handleTrigger = function(a) {
            if (!this.started) {
                return
            }
            var d = a.currentTarget;
            var b = d.getAttribute(this._interceptAttribute);
            if (b) {
                if (/^(http|https):\/\/+/.exec(b) && this._interceptAttribute === "href") {
                    b = b.substr(b.indexOf(this.history.root) + this.history.root.length) || "/"
                }
                var c = a.originalEvent;
                if (this.navigate(b) && c) {
                    if (c.preventDefault) {
                        c.preventDefault()
                    } else {
                        c.returnValue = false
                    }
                }
            }
        };
        m._handlePopstate = function(a) {
            this.navigate(a.fragment, true)
        };
        m.start = function() {
            if (!this.started) {
                this.started = true;
                this.history.start();
                this._handlePopstate = this._handlePopstate.bind(this);
                this.history.on("popstate", this._handlePopstate);
                this.navigate(this.history.fragment(), true)
            }
        };
        m.stop = function() {
            if (this.started) {
                this.started = false;
                this.history.stop();
                this.history.off("popstate", this._handlePopstate)
            }
        };
        m.navigate = function(a, b) {
            if (this.history.fragment() === a && !b) {
                return this.history.canUpdate()
            }
            if (a && !b) {
                if (!this.history.navigate(a)) {
                    return false
                }
            }
            this.match(a);
            return true
        };
        m.intercept = function(a) {
            var b = document.body;
            l.addEventDelegate(b, "click", a, this._handleTrigger)
        };
        r.exports = q
    }, {
        "./History": 465,
        "ac-base": 414,
        "ac-routes": 461
    }],
    467: [function(d, g, f) {
        g.exports = {
            SharedInstance: d("./ac-shared-instance/SharedInstance")
        }
    }, {
        "./ac-shared-instance/SharedInstance": 468
    }],
    468: [function(p, m, q) {
        var l = window,
            n = "AC",
            k = "SharedInstance",
            o = l[n];
        var j = (function() {
            var a = {};
            return {
                get: function(c, d) {
                    var b = null;
                    if (a[c] && a[c][d]) {
                        b = a[c][d]
                    }
                    return b
                },
                set: function(b, d, c) {
                    if (!a[b]) {
                        a[b] = {}
                    }
                    if (typeof c === "function") {
                        a[b][d] = new c()
                    } else {
                        a[b][d] = c
                    }
                    return a[b][d]
                },
                share: function(b, d, c) {
                    var f = this.get(b, d);
                    if (!f) {
                        f = this.set(b, d, c)
                    }
                    return f
                },
                remove: function(c, d) {
                    var b = typeof d;
                    if (b === "string" || b === "number") {
                        if (!a[c] || !a[c][d]) {
                            return
                        }
                        a[c][d] = null;
                        return
                    }
                    if (a[c]) {
                        a[c] = null
                    }
                }
            }
        }());
        if (!o) {
            o = l[n] = {}
        }
        if (!o[k]) {
            o[k] = j
        }
        m.exports = o[k]
    }, {}],
    469: [function(d, g, f) {
        g.exports = {
            CID: d("./ac-mvc-cid/CID")
        }
    }, {
        "./ac-mvc-cid/CID": 470
    }],
    470: [function(q, o, j) {
        var k = q("ac-shared-instance").SharedInstance;
        var n = "ac-mvc-cid:CID",
            p = "1.0.0";

        function l() {
            this._idCount = 0
        }
        var m = l.prototype;
        m._cidPrefix = "cid";
        m.getNewCID = function() {
            var a = this._cidPrefix + "-" + this._idCount;
            this._idCount++;
            return a
        };
        o.exports = k.share(n, p, l)
    }, {
        "ac-shared-instance": 467
    }],
    471: [function(d, g, f) {
        arguments[4][369][0].apply(f, arguments)
    }, {
        dup: 369
    }],
    472: [function(d, g, f) {
        arguments[4][370][0].apply(f, arguments)
    }, {
        "./ac-object/clone": 473,
        "./ac-object/create": 474,
        "./ac-object/defaults": 475,
        "./ac-object/extend": 476,
        "./ac-object/getPrototypeOf": 477,
        "./ac-object/isDate": 478,
        "./ac-object/isEmpty": 479,
        "./ac-object/isRegExp": 480,
        "./ac-object/toQueryParameters": 481,
        dup: 370
    }],
    473: [function(d, g, f) {
        arguments[4][371][0].apply(f, arguments)
    }, {
        "./extend": 476,
        dup: 371
    }],
    474: [function(d, g, f) {
        arguments[4][372][0].apply(f, arguments)
    }, {
        dup: 372
    }],
    475: [function(d, g, f) {
        arguments[4][373][0].apply(f, arguments)
    }, {
        "./extend": 476,
        dup: 373
    }],
    476: [function(d, g, f) {
        arguments[4][374][0].apply(f, arguments)
    }, {
        dup: 374
    }],
    477: [function(d, g, f) {
        arguments[4][375][0].apply(f, arguments)
    }, {
        dup: 375
    }],
    478: [function(d, g, f) {
        arguments[4][376][0].apply(f, arguments)
    }, {
        dup: 376
    }],
    479: [function(d, g, f) {
        arguments[4][377][0].apply(f, arguments)
    }, {
        dup: 377
    }],
    480: [function(d, g, f) {
        arguments[4][378][0].apply(f, arguments)
    }, {
        dup: 378
    }],
    481: [function(d, g, f) {
        arguments[4][379][0].apply(f, arguments)
    }, {
        dup: 379,
        qs: 471
    }],
    482: [function(d, g, f) {
        g.exports = {
            Model: d("./ac-mvc-model/Model")
        }
    }, {
        "./ac-mvc-model/Model": 483
    }],
    483: [function(q, p, j) {
        var n = q("ac-event-emitter").EventEmitter;
        var k = q("ac-object");
        var m = q("ac-mvc-cid").CID;
        var l = function(a) {
            this.attributes = k.defaults(this.defaultAttributes, a || {});
            this.cid = m.getNewCID();
            if (this.attributes[this.idAttribute]) {
                this.id = this.attributes[this.idAttribute]
            }
        };
        var o = l.prototype = k.create(n.prototype);
        o.defaultAttributes = {};
        o.idAttribute = "id";
        o._trigger = function(a, b, c) {
            c = c || {};
            if (c.silent !== true) {
                this.trigger(a, b)
            }
        };
        o._triggerChange = function(a, b, c) {
            return this._trigger("change:" + a, b, c)
        };
        o.get = function(a) {
            if (!this.attributes) {
                return
            }
            return this.attributes[a]
        };
        o.set = function(c, d) {
            if (!this.attributes) {
                return
            }
            var g;
            var h;
            var a;
            var b = {};
            var f = false;
            for (g in c) {
                if (c.hasOwnProperty(g)) {
                    a = this.get(g);
                    if ((typeof a === "object" && typeof c[g] === "object" && JSON.stringify(a) === JSON.stringify(c[g])) || (a === c[g])) {
                        continue
                    }
                    f = true;
                    this.attributes[g] = c[g];
                    h = {
                        value: c[g],
                        previous: a
                    };
                    b[g] = h;
                    this._triggerChange(g, h, d)
                }
            }
            if (f) {
                this._trigger("change", b, d)
            }
        };
        o.has = function(a) {
            if (!this.attributes) {
                return false
            }
            return (this.attributes[a] !== undefined)
        };
        o.eachAttribute = function(b, c) {
            if (!this.attributes) {
                return
            }
            var a;
            for (a in this.attributes) {
                if (this.attributes.hasOwnProperty(a)) {
                    b.call(c, {
                        attribute: a,
                        value: this.attributes[a]
                    })
                }
            }
        };
        o.destroy = function() {
            this.trigger("destroy");
            this.off();
            var a;
            for (a in this) {
                if (this.hasOwnProperty(a)) {
                    this[a] = null
                }
            }
        };
        p.exports = l
    }, {
        "ac-event-emitter": 246,
        "ac-mvc-cid": 469,
        "ac-object": 472
    }],
    484: [function(d, g, f) {
        g.exports = {
            localization: d("./ac-video-localization/localization")
        }
    }, {
        "./ac-video-localization/localization": 485
    }],
    485: [function(j, q, k) {
        var m = j("./translations");
        var n = "/global/ac_media_player/scripts/ac_media_languages/";
        var o = document.getElementsByTagName("html")[0];
        var p = j("ac-mvc-model").Model;
        var l = {
            create: function(a) {
                a = a || this.getLang();
                var b = this.getRequestPath(a);
                return this.sendRequest(b)
            },
            getRequestPath: function(a) {
                return n + this.getTranslationFileName(a)
            },
            getLang: function() {
                var b = o.getAttribute("lang");
                var a;
                if (!b) {
                    a = "en-us"
                } else {
                    switch (b.toLowerCase()) {
                        case "es-418":
                            a = "es-LA";
                            break;
                        case "pt":
                            a = "pt-BR";
                            break;
                        default:
                            a = b;
                            break
                    }
                }
                return a
            },
            getTranslationFileName: function(c) {
                var a = c.toLowerCase().split("-")[0];
                var b = m[c] || false;
                if (!b) {
                    b = m[a] || m.en
                }
                return b
            },
            sendRequest: function(a) {
                return new Promise(function(b, c) {
                    var d = new XMLHttpRequest();
                    d.onreadystatechange = function() {
                        if (d.readyState === 4) {
                            if (d.status >= 200 && d.status < 300) {
                                try {
                                    var h = JSON.parse(d.responseText);
                                    for (var f in h) {
                                        h[f].replace(/<br\s{0,}\/>/g, "")
                                    }
                                    b(new p(h))
                                } catch (g) {
                                    c(g)
                                }
                            } else {
                                c(d)
                            }
                        }
                    };
                    d.open("GET", a);
                    d.send()
                })
            }
        };
        q.exports = l
    }, {
        "./translations": 486,
        "ac-mvc-model": 482
    }],
    486: [function(d, g, f) {
        g.exports = {
            "bg-BG": "bg-BG.json",
            "cs-CZ": "cs-CZ.json",
            "el-GR": "el-GR.json",
            "de-AT": "de-AT.json",
            "de-CH": "de-CH.json",
            "de-DE": "de-DE.json",
            "de-LI": "de-LI.json",
            "da-DK": "da-DK.json",
            en: "en.json",
            "en-US": "en-US.json",
            "en-AP": "en-AP.json",
            "en-CA": "en-CA.json",
            "en-GB": "en-GB.json",
            "en-HK": "en-HK.json",
            "en-IE": "en-IE.json",
            "en-IN": "en-IN.json",
            "en-KR": "en-KR.json",
            "en-AU": "en-AU.json",
            "en-NZ": "en-NZ.json",
            "en-SG": "en-SG.json",
            "en-ZA": "en-ZA.json",
            es: "es.json",
            "es-LA": "es-LA.json",
            "es-MX": "es-MX.json",
            "es-ES": "es-ES.json",
            "et-EE": "et-EE.json",
            "fi-FI": "fi-FI.json",
            fr: "fr.json",
            "fr-BE": "fr-BE.json",
            "fr-CA": "fr-CA.json",
            "fr-CH": "fr-CH.json",
            "fr-FR": "fr-FR.json",
            "hr-HR": "hr-HR.json",
            "hu-HU": "hu-HU.json",
            "it-IT": "it-IT.json",
            ja: "ja.json",
            "ja-JP": "ja-JP.json",
            "ko-KR": "ko-KR.json",
            "lt-LT": "lt-LT.json",
            "lv-LV": "lv-LV.json",
            "nl-BE": "nl-BE.json",
            "nl-NL": "nl-NL.json",
            "no-NO": "no-NO.json",
            "pl-PL": "pl-PL.json",
            pt: "pt.json",
            "pt-BR": "pt-BR.json",
            "pt-PT": "pt-PT.json",
            "ro-RO": "ro-RO.json",
            "ru-RU": "ru-RU.json",
            "sk-SK": "sk-SK.json",
            "sv-SE": "sv-SE.json",
            "tr-TR": "tr-TR.json",
            zh: "zh.json",
            "zh-CN": "zh-CN.json",
            "zh-HK": "zh-HK.json",
            "zh-TW": "zh-TW.json"
        }
    }, {}],
    487: [function(d, g, f) {
        arguments[4][292][0].apply(f, arguments)
    }, {
        "./ac-classlist/add": 488,
        "./ac-classlist/contains": 489,
        "./ac-classlist/remove": 491,
        "./ac-classlist/toggle": 492,
        dup: 292
    }],
    488: [function(d, g, f) {
        arguments[4][293][0].apply(f, arguments)
    }, {
        "./helpers/className": 490,
        dup: 293
    }],
    489: [function(d, g, f) {
        arguments[4][294][0].apply(f, arguments)
    }, {
        "./helpers/className": 490,
        dup: 294
    }],
    490: [function(d, g, f) {
        arguments[4][295][0].apply(f, arguments)
    }, {
        dup: 295
    }],
    491: [function(d, g, f) {
        arguments[4][296][0].apply(f, arguments)
    }, {
        "./helpers/className": 490,
        dup: 296
    }],
    492: [function(d, g, f) {
        arguments[4][297][0].apply(f, arguments)
    }, {
        "./helpers/className": 490,
        dup: 297
    }],
    493: [function(l, k, m) {
        var h = l("./ac-dom-nodes/helpers/nodeTypes");
        var j;
        var i = {
            createDocumentFragment: l("./ac-dom-nodes/createDocumentFragment"),
            filterByNodeType: l("./ac-dom-nodes/filterByNodeType"),
            insertAfter: l("./ac-dom-nodes/insertAfter"),
            insertBefore: l("./ac-dom-nodes/insertBefore"),
            insertFirstChild: l("./ac-dom-nodes/insertFirstChild"),
            insertLastChild: l("./ac-dom-nodes/insertLastChild"),
            isComment: l("./ac-dom-nodes/isComment"),
            isDocument: l("./ac-dom-nodes/isDocument"),
            isDocumentFragment: l("./ac-dom-nodes/isDocumentFragment"),
            isDocumentType: l("./ac-dom-nodes/isDocumentType"),
            isElement: l("./ac-dom-nodes/isElement"),
            isNode: l("./ac-dom-nodes/isNode"),
            isTextNode: l("./ac-dom-nodes/isTextNode"),
            remove: l("./ac-dom-nodes/remove"),
            replace: l("./ac-dom-nodes/replace")
        };
        for (j in h) {
            i[j] = h[j]
        }
        k.exports = i
    }, {
        "./ac-dom-nodes/createDocumentFragment": 494,
        "./ac-dom-nodes/filterByNodeType": 495,
        "./ac-dom-nodes/helpers/nodeTypes": 497,
        "./ac-dom-nodes/insertAfter": 499,
        "./ac-dom-nodes/insertBefore": 500,
        "./ac-dom-nodes/insertFirstChild": 501,
        "./ac-dom-nodes/insertLastChild": 502,
        "./ac-dom-nodes/isComment": 503,
        "./ac-dom-nodes/isDocument": 504,
        "./ac-dom-nodes/isDocumentFragment": 505,
        "./ac-dom-nodes/isDocumentType": 506,
        "./ac-dom-nodes/isElement": 507,
        "./ac-dom-nodes/isNode": 508,
        "./ac-dom-nodes/isTextNode": 509,
        "./ac-dom-nodes/remove": 510,
        "./ac-dom-nodes/replace": 511
    }],
    494: [function(d, g, f) {
        arguments[4][332][0].apply(f, arguments)
    }, {
        dup: 332
    }],
    495: [function(d, g, f) {
        arguments[4][333][0].apply(f, arguments)
    }, {
        "./helpers/isNodeType": 496,
        "./helpers/nodeTypes": 497,
        dup: 333
    }],
    496: [function(d, g, f) {
        arguments[4][334][0].apply(f, arguments)
    }, {
        "../isNode": 508,
        dup: 334
    }],
    497: [function(d, g, f) {
        arguments[4][335][0].apply(f, arguments)
    }, {
        dup: 335
    }],
    498: [function(d, g, f) {
        arguments[4][336][0].apply(f, arguments)
    }, {
        "./isNodeType": 496,
        "./nodeTypes": 497,
        dup: 336
    }],
    499: [function(d, g, f) {
        arguments[4][337][0].apply(f, arguments)
    }, {
        "./helpers/validate": 498,
        dup: 337
    }],
    500: [function(d, g, f) {
        arguments[4][338][0].apply(f, arguments)
    }, {
        "./helpers/validate": 498,
        dup: 338
    }],
    501: [function(d, g, f) {
        arguments[4][339][0].apply(f, arguments)
    }, {
        "./helpers/validate": 498,
        dup: 339
    }],
    502: [function(d, g, f) {
        arguments[4][340][0].apply(f, arguments)
    }, {
        "./helpers/validate": 498,
        dup: 340
    }],
    503: [function(m, l, i) {
        var j = m("./helpers/isNodeType");
        var k = m("./helpers/nodeTypes").COMMENT_NODE;
        l.exports = function h(a) {
            return j(a, k)
        }
    }, {
        "./helpers/isNodeType": 496,
        "./helpers/nodeTypes": 497
    }],
    504: [function(m, l, h) {
        var j = m("./helpers/isNodeType");
        var i = m("./helpers/nodeTypes").DOCUMENT_NODE;
        l.exports = function k(a) {
            return j(a, i)
        }
    }, {
        "./helpers/isNodeType": 496,
        "./helpers/nodeTypes": 497
    }],
    505: [function(m, l, h) {
        var j = m("./helpers/isNodeType");
        var i = m("./helpers/nodeTypes").DOCUMENT_FRAGMENT_NODE;
        l.exports = function k(a) {
            return j(a, i)
        }
    }, {
        "./helpers/isNodeType": 496,
        "./helpers/nodeTypes": 497
    }],
    506: [function(h, m, i) {
        var j = h("./helpers/isNodeType");
        var k = h("./helpers/nodeTypes").DOCUMENT_TYPE_NODE;
        m.exports = function l(a) {
            return j(a, k)
        }
    }, {
        "./helpers/isNodeType": 496,
        "./helpers/nodeTypes": 497
    }],
    507: [function(m, l, h) {
        var j = m("./helpers/isNodeType");
        var i = m("./helpers/nodeTypes").ELEMENT_NODE;
        l.exports = function k(a) {
            return j(a, i)
        }
    }, {
        "./helpers/isNodeType": 496,
        "./helpers/nodeTypes": 497
    }],
    508: [function(f, i, g) {
        i.exports = function h(a) {
            return !!(a && a.nodeType)
        }
    }, {}],
    509: [function(m, l, i) {
        var j = m("./helpers/isNodeType");
        var h = m("./helpers/nodeTypes").TEXT_NODE;
        l.exports = function k(a) {
            return j(a, h)
        }
    }, {
        "./helpers/isNodeType": 496,
        "./helpers/nodeTypes": 497
    }],
    510: [function(d, g, f) {
        arguments[4][349][0].apply(f, arguments)
    }, {
        "./helpers/validate": 498,
        dup: 349
    }],
    511: [function(d, g, f) {
        arguments[4][350][0].apply(f, arguments)
    }, {
        "./helpers/validate": 498,
        dup: 350
    }],
    512: [function(d, g, f) {
        arguments[4][467][0].apply(f, arguments)
    }, {
        "./ac-shared-instance/SharedInstance": 513,
        dup: 467
    }],
    513: [function(d, g, f) {
        arguments[4][468][0].apply(f, arguments)
    }, {
        dup: 468
    }],
    514: [function(d, g, f) {
        arguments[4][469][0].apply(f, arguments)
    }, {
        "./ac-mvc-cid/CID": 515,
        dup: 469
    }],
    515: [function(d, g, f) {
        arguments[4][470][0].apply(f, arguments)
    }, {
        "ac-shared-instance": 512,
        dup: 470
    }],
    516: [function(d, g, f) {
        arguments[4][369][0].apply(f, arguments)
    }, {
        dup: 369
    }],
    517: [function(d, g, f) {
        arguments[4][370][0].apply(f, arguments)
    }, {
        "./ac-object/clone": 518,
        "./ac-object/create": 519,
        "./ac-object/defaults": 520,
        "./ac-object/extend": 521,
        "./ac-object/getPrototypeOf": 522,
        "./ac-object/isDate": 523,
        "./ac-object/isEmpty": 524,
        "./ac-object/isRegExp": 525,
        "./ac-object/toQueryParameters": 526,
        dup: 370
    }],
    518: [function(d, g, f) {
        arguments[4][371][0].apply(f, arguments)
    }, {
        "./extend": 521,
        dup: 371
    }],
    519: [function(d, g, f) {
        arguments[4][372][0].apply(f, arguments)
    }, {
        dup: 372
    }],
    520: [function(d, g, f) {
        arguments[4][373][0].apply(f, arguments)
    }, {
        "./extend": 521,
        dup: 373
    }],
    521: [function(d, g, f) {
        arguments[4][374][0].apply(f, arguments)
    }, {
        dup: 374
    }],
    522: [function(d, g, f) {
        arguments[4][375][0].apply(f, arguments)
    }, {
        dup: 375
    }],
    523: [function(d, g, f) {
        arguments[4][376][0].apply(f, arguments)
    }, {
        dup: 376
    }],
    524: [function(d, g, f) {
        arguments[4][377][0].apply(f, arguments)
    }, {
        dup: 377
    }],
    525: [function(d, g, f) {
        arguments[4][378][0].apply(f, arguments)
    }, {
        dup: 378
    }],
    526: [function(d, g, f) {
        arguments[4][379][0].apply(f, arguments)
    }, {
        dup: 379,
        qs: 516
    }],
    527: [function(d, g, f) {
        g.exports = {
            View: d("./ac-mvc-view/View")
        }
    }, {
        "./ac-mvc-view/View": 528
    }],
    528: [function(r, u, p) {
        var m = r("ac-dom-emitter").DOMEmitter;
        var t = r("ac-mvc-cid").CID;
        var q = r("ac-object");
        var n = r("ac-dom-nodes");
        var l = r("ac-classlist");

        function v(b) {
            var d;
            var a;
            var c;
            this.options = q.defaults(this.defaultOptions, b || {});
            this.cid = t.getNewCID();
            this.model = this.options.model;
            if (this.options.template) {
                this.template = this.options.template
            }
            d = this.options.tagName || this.tagName;
            a = this.options.element;
            c = this.options.className || this.className;
            if (!a) {
                a = document.createElement(d)
            }
            m.call(this, a);
            if (c) {
                this.addClassName(c)
            }
            if (this.options.events) {
                this.delegateEvents(this.options.events)
            }
        }
        var o = v.prototype = q.create(m.prototype);
        o.tagName = "div";
        o.defaultOptions = {};
        o.getTagName = function() {
            return this.el.tagName.toLowerCase()
        };
        o.appendTo = function(a) {
            n.insertLastChild(this.el, a);
            return this
        };
        o.render = function() {};
        o.addClassName = function(a) {
            return this._manipulateClassName(a, "add")
        };
        o.removeClassName = function(a) {
            return this._manipulateClassName(a, "remove")
        };
        o._manipulateClassName = function(a, c) {
            var b;
            if (typeof a === "string") {
                b = a.split(" ")
            } else {
                if (typeof a === "object" && Array.isArray(a)) {
                    b = a.slice()
                } else {
                    return this
                }
            }
            b.unshift(this.el);
            l[c].apply(this.el, b);
            return this
        };
        o.destroy = function() {
            this.emitterTrigger("destroy");
            this.off();
            n.remove(this.el);
            var a;
            for (a in this) {
                if (this.hasOwnProperty(a)) {
                    this[a] = null
                }
            }
        };
        o.delegateEvents = function(a, d) {
            d = d || this;
            var b, c;
            for (b in a) {
                if (a.hasOwnProperty(b)) {
                    c = a[b];
                    if (typeof c === "string") {
                        a[b] = this[a[b]]
                    }
                }
            }
            this.on(a, d);
            return this
        };
        u.exports = v
    }, {
        "ac-classlist": 487,
        "ac-dom-emitter": 62,
        "ac-dom-nodes": 493,
        "ac-mvc-cid": 514,
        "ac-object": 517
    }],
    529: [function(d, g, f) {
        arguments[4][369][0].apply(f, arguments)
    }, {
        dup: 369
    }],
    530: [function(d, g, f) {
        g.exports = {
            isString: d("./ac-string/isString"),
            toCamelCase: d("./ac-string/toCamelCase"),
            queryStringToObject: d("./ac-string/queryStringToObject"),
            toQueryPair: d("./ac-string/toQueryPair"),
            queryParameters: d("./ac-string/queryParameters"),
            supplant: d("./ac-string/supplant")
        }
    }, {
        "./ac-string/isString": 531,
        "./ac-string/queryParameters": 532,
        "./ac-string/queryStringToObject": 533,
        "./ac-string/supplant": 534,
        "./ac-string/toCamelCase": 535,
        "./ac-string/toQueryPair": 536
    }],
    531: [function(i, h, f) {
        h.exports = function g(a) {
            return (typeof a === "string")
        }
    }, {}],
    532: [function(j, i, k) {
        var h = j("./queryStringToObject");
        i.exports = function g() {
            var b = {};
            var a = window.location.toString().split("?")[1];
            if (typeof a === "string") {
                b = h(a)
            }
            return b
        }
    }, {
        "./queryStringToObject": 533
    }],
    533: [function(j, i, k) {
        var h = j("qs");
        i.exports = function g(a) {
            if (typeof a !== "string") {
                throw new TypeError("QueryStringToObject error: argument must be a string")
            }
            return h.parse(a)
        }
    }, {
        qs: 529
    }],
    534: [function(f, i, g) {
        i.exports = function h(a, b, c) {
            if (!b) {
                return a
            }
            c = c || /{([^{}]*)}/g;
            return a.replace(c, function(l, m) {
                var d = b[m];
                return typeof d === "string" || typeof d === "number" ? d : l
            })
        }
    }, {}],
    535: [function(f, i, g) {
        i.exports = function h(a) {
            if (typeof a !== "string") {
                throw new TypeError("Argument must be of type String.")
            }
            return a.replace(/-+(.)?/g, function(c, b) {
                return b ? b.toUpperCase() : ""
            })
        }
    }, {}],
    536: [function(f, i, g) {
        i.exports = function h(b, a) {
            if (typeof b !== "string" || typeof a !== "string") {
                throw new TypeError("toQueryPair error: argument must be a string")
            }
            return encodeURIComponent(b) + "=" + encodeURIComponent(a)
        }
    }, {}],
    537: [function(d, g, f) {
        g.exports = {
            View: d("./ac-video-nosupportview/NoSupportView")
        }
    }, {
        "./ac-video-nosupportview/NoSupportView": 538
    }],
    538: [function(p, o, k) {
        var l = p("ac-mvc-view").View;
        var q = p("ac-object");
        var j = p("ac-string");

        function m() {
            l.apply(this, arguments)
        }
        var n = m.prototype = q.create(l.prototype);
        n.className = ["ac-video-nosupport"];
        n.defaultOptions = {
            template: '<a onclick="s_objectID=&quot;http://www.apple.com/quicktime/download/_1&quot;;return this.s_oc?this.s_oc(e):true" href="{downloadquicktimeurl}" class="ac-video-quicktime-download"><span class="ac-video-quicktime-download-title">{downloadquicktimetitle}</span><span class="ac-video-quicktime-download-text">{downloadquicktimetext}</span><span class="ac-video-quicktime-download-button">{downloadquicktimebutton}</span></a>'
        };
        n.render = function() {
            this.el.innerHTML = j.supplant(this.options.template, this.model.attributes)
        };
        o.exports = m
    }, {
        "ac-mvc-view": 527,
        "ac-object": 713,
        "ac-string": 530
    }],
    539: [function(d, g, f) {
        g.exports = {
            create: d("./ac-films/factory/films")
        }
    }, {
        "./ac-films/factory/films": 545
    }],
    540: [function(z, F, w) {
        var r = z("ac-video-localization").localization;
        var D = z("ac-video-nosupportview").View;
        var x = z("ac-feature");
        var y = z("./LegacyAnalyticsTranslator");
        var A = z("ac-classlist");
        var q = z("ac-event-emitter").EventEmitter;
        var B = z("ac-object");
        var u = z("./VideoSourceCollection");
        var E = z("./factory/player");
        var t = z("ac-fullscreen");

        function C(a) {
            q.call(this);
            this._currentVideo = null;
            this.videoSrcCollection = new u();
            this.analyticsTranslator = null;
            this.player = null;
            this.localization = null;
            this.noSupportView = null;
            this.options = B.defaults(C.defaults, a)
        }
        var v = C.prototype = B.create(q.prototype);
        C.defaults = {
            analytics: true,
            playerOptions: {
                crossorigin: "anonymous",
                preload: "none"
            }
        };
        v.play = function(a) {
            var b = null;
            if (!this.player) {
                this.createPlayer()
            }
            if (a) {
                b = this.videoSrcCollection.getSource(a);
                if (b === this.getCurrentVideo()) {
                    this.player.addClassName("player-fullscreen");
                    this.player.play();
                    return
                }
            } else {
                if (!this.player.getCurrentSrc()) {
                    b = this.videoSrcCollection.getSourceByIndex(0)
                } else {
                    b = this.getCurrentVideo()
                }
            }
            if (b) {
                if (b.poster) {
                    this.setPoster(b.poster)
                }
                if (this.localization === null) {
                    this.ensureLocalization().then(this.play.bind(this, a))
                } else {
                    this._playVideoBySrcObj(b)
                }
            }
        };
        v._bindPlayerEvents = function() {
            this.player.on("enterfullscreen", this._onEnterFullscreen, this);
            this.player.on("ended", this._onEnded, this);
            this.player.on("exitfullscreen", this._onExitFullscreen, this)
        };
        v._onEnterFullscreen = function() {
            A.add(this.player.el, "player-fullscreen")
        };
        v._onExitFullscreen = function() {
            A.remove(this.player.el, "player-fullscreen")
        };
        v._onEnded = function() {};
        v.pause = function() {
            this.player.pause()
        };
        v.setSrc = function(a) {
            return this._setNewPlayerSrc(a)
        };
        v.getCurrentSrc = function() {
            return this.player.getCurrentSrc().attributes.src
        };
        v.getCurrentVideo = function() {
            return this._currentVideo
        };
        v.createVideoResource = function(a, b) {
            return this.videoSrcCollection.addSource(a, b)
        };
        v.createPlayer = function() {
            this.on("novideosupport", this._onNoVideoSupport, this);
            if (this.options.poster) {
                this.options.playerOptions.poster = this.options.poster
            }
            this.player = E(this.options.playerOptions);
            if (this.player) {
                this._bindPlayerEvents();
                this.defaultPosterFrame = this.player.getPoster();
                if (!this.analyticsTranslator && this.options.analytics === true) {
                    this.analyticsTranslator = new y(this.player);
                    this.analyticsTranslator.activate()
                }
                this._applyDocumentClassnames()
            }
            return this.player
        };
        v.loadLocalization = function() {
            return r.create().then(function(a) {
                this.localization = a
            }.bind(this))
        };
        v.ensureLocalization = function() {
            var a;
            if (this.localization === null) {
                a = this.loadLocalization()
            } else {
                a = Promise.resolve()
            }
            return a
        };
        v.createNoSupportView = function() {
            this.ensureLocalization().then(function() {
                var a = new D({
                    model: this.localization
                });
                a.render();
                this.noSupportView = a;
                this.trigger("novideosupport");
                this._onNoVideoSupport()
            }.bind(this))
        };
        v.setPoster = function(a) {
            if (a !== this.player.getPoster()) {
                this.player.setPoster(a)
            }
        };
        v._playVideoBySrcObj = function(a) {
            var b = this.player.getCurrentSrc();
            if (!b || (b.attributes.src && b.attributes.src !== a.src)) {
                if (x.isDesktop()) {
                    this.player.once("canplaythrough", this.player.play, this.player);
                    this._setNewPlayerSrc(a)
                } else {
                    this.player.addClassName("player-fullscreen");
                    this._setNewPlayerSrc(a);
                    this.player.play()
                }
            } else {
                this.player.play()
            }
        };
        v._setNewPlayerSrc = function(a) {
            var b = this._setPlayerSrcFromSourceObject(a, this.player);
            if (b) {
                this._currentVideo = a;
                if (this.options.analytics === true) {
                    this.analyticsTranslator.addSourceObject(a.id, a.cid)
                }
                if (a.poster) {
                    this.setPoster(a.poster)
                }
            }
            return b
        };
        v._setPlayerSrcFromSourceObject = function(c, b) {
            var a = null;
            if (b && c.vatResource && typeof c.vatResource.setPlayerSrc === "function") {
                c.vatResource.setPlayerSrc(this.player, window.innerWidth);
                this.player.once("readystatechange", function() {
                    var d = this.player.el;
                    var f = this.player.getMediaWidth();
                    var g = this.player.getMediaHeight();
                    if (f && f !== 848 && g && g !== 480) {
                        d.style.paddingBottom = (g / f * 100) + "%"
                    }
                }, this);
                c.cid = b.getCurrentSrc().cid;
                a = b.getCurrentSrc().attributes.src
            }
            return a
        };
        v._applyDocumentClassnames = function() {
            var a;
            if (x.isHandheld()) {
                a = "ac-player-handheld"
            }
            if (x.isTablet()) {
                a = "ac-player-tablet"
            }
            if (x.isDesktop()) {
                a = "ac-player-desktop"
            }
            A.add(document.documentElement, a)
        };
        v._onNoVideoSupport = function() {};
        F.exports = C
    }, {
        "./LegacyAnalyticsTranslator": 541,
        "./VideoSourceCollection": 543,
        "./factory/player": 546,
        "ac-classlist": 17,
        "ac-event-emitter": 246,
        "ac-feature": 251,
        "ac-fullscreen": 270,
        "ac-object": 713,
        "ac-video-localization": 484,
        "ac-video-nosupportview": 537
    }],
    541: [function(j, q, k) {
        var m = j("ac-analytics");
        var n = j("ac-event-emitter").EventEmitter;
        var p = j("ac-dom-traversal");

        function l(a) {
            this.player = a;
            this.sources = {};
            this.currentStubPlayer = null
        }
        var o = l.prototype;
        o.activate = function() {
            this.player.on("play", function() {
                this.setCurrentStubPlayer();
                this._proxyEvent("play")
            }, this);
            this.player.on("ended", function() {
                this._proxyEvent("ended")
            }, this);
            this.player.on("timeupdate", function() {
                this._proxyEvent("timeupdate")
            }, this, this);
            this.player.on("texttrackshow", function() {
                this._proxyEvent("captions-enabled")
            }, this);
            this.player.on("durationchange", this.setCurrentStubPlayer, this)
        };
        o.getEventData = function() {
            var a = false;
            var b = this.player.getVisibleTextTracks();
            if (b && b.models && b.models.length > 0) {
                a = true
            }
            return {
                closeCaptionsEnabled: a,
                currentTime: this.player.getCurrentTime(),
                duration: this.player.getDuration(),
                playerType: null,
                videoType: null
            }
        };
        o._createObserver = function(a) {
            var b;
            if (m && m.observer && m.observer.Video) {
                b = new m.observer.Video(a, {
                    mediaEventPrefix: ""
                })
            }
            return b
        };
        o._proxyEvent = function(a) {
            if (this.currentStubPlayer) {
                this.currentStubPlayer.trigger(a, this.getEventData())
            }
        };
        o.setCurrentStubPlayer = function() {
            var a = this.getCurrentSourceObject();
            if (a && a.stubPlayer) {
                this.currentStubPlayer = a.stubPlayer
            }
        };
        o.getSourceObjectByCID = function(a) {
            var c;
            for (var b in this.sources) {
                if (this.sources.hasOwnProperty(b)) {
                    if (this.sources[b].cid === a) {
                        c = this.sources[b];
                        break
                    }
                }
            }
            return c
        };
        o.getCurrentSourceObject = function() {
            var b = this.player.getCurrentSrc();
            var a;
            if (b) {
                a = this.getSourceObjectByCID(b.cid)
            }
            return a
        };
        o.addSourceObject = function(h, f) {
            var c;
            var i;
            var a = "data-analytics-id";
            var d = "";
            var b = "";
            var g;
            if (!this.sources[h]) {
                c = p.querySelector("#" + h);
                if (c) {
                    if (c.getAttribute(a)) {
                        i = c;
                        d = c.getAttribute(a);
                        b = h
                    } else {
                        i = p.querySelector("[" + a + "]", c);
                        if (i) {
                            d = i.getAttribute(a);
                            b = i.getAttribute("id") || ""
                        }
                    }
                    if (i) {
                        g = this._createStubPlayer(i, d, b);
                        this.sources[h] = {
                            stubPlayer: g,
                            observer: this._createObserver(g),
                            cid: f
                        }
                    }
                }
            }
        };
        o._createStubPlayer = function(b, d, c) {
            var a = new n();
            a.element = b;
            a.targetId = d || c || "";
            return a
        };
        q.exports = l
    }, {
        "ac-analytics": "ac-analytics",
        "ac-dom-traversal": 138,
        "ac-event-emitter": 246
    }],
    542: [function(C, E, z) {
        var u = C("ac-modal").Modal;
        var y = C("ac-modal-video").ModalVideo;
        var B = C("ac-object");
        var w = C("./FilmsController");
        var A = C("ac-feature");
        var t = C("ac-fullscreen");
        var v = C("ac-browser");
        var D = C("ac-classlist");
        var r = C("ac-keyboard");
        var q = r.keys;

        function F(a) {
            w.apply(this, arguments);
            this.options = B.extend(F.defaults, this.options);
            this.modalVideo = null
        }
        var x = F.prototype = B.create(w.prototype);
        F.defaults = B.extend(w.defaults, {
            modalOptions: {
                playOnOpen: true,
                closeOnEnded: true
            }
        });
        x.play = function(a) {
            w.prototype.play.call(this, a);
            if (!this.modalVideo.modal.opened) {
                this.openModal()
            }
        };
        x.openModal = function() {
            this.modalVideo.open()
        };
        x.createPlayer = function() {
            w.prototype.createPlayer.call(this);
            this._createModalVideo()
        };
        x._handleFullscreen = function() {
            var c = false;
            var b = this.modalVideo.modal;
            b.removeKeyToClose(q.ESCAPE);
            var d = function(f) {
                c = true
            };
            var a = function(f) {
                if (c === true) {
                    b.close()
                }
                c = false
            };
            r.addKeyDown(q.ESCAPE, d);
            r.addKeyUp(q.ESCAPE, a)
        };
        x._createModalVideo = function() {
            var a = {
                playOnOpen: false,
                closeOnEnded: false
            };
            if (this.player) {
                this.modalVideo = y.create(this.player, a);
                this._handleFullscreen();
                this._bindModalEvents()
            } else {
                this.modalVideo = new u()
            }
            this.trigger("modalready", {
                modal: this.modalVideo
            })
        };
        x._onEnded = function() {
            if (this.options.modalOptions.closeOnEnded === true) {
                this.modalVideo.close()
            }
        };
        x._guaranteeVolume = function() {
            if (this.player && this.player.getReadyState() > 0) {
                this.player.setVolume(1)
            } else {
                if (this.player) {
                    this.player.once("readystatechange", function() {
                        this.player.setVolume(1)
                    }, this)
                }
            }
        };
        x._bindModalEvents = function() {
            this.modalVideo.on("close", this._onModalClose, this);
            this.modalVideo.on("open", this._onModalOpen, this)
        };
        x._bindPlayerEvents = function() {
            if (this.player) {
                this.player.on("ended", this._onEnded, this)
            }
        };
        x._onModalClose = function() {
            this.player.setCurrentTime(0);
            this.player.getVisibleTextTracks().forEach(function(a) {
                a.hide()
            });
            this.pause();
            if (A.isTablet()) {
                t.exitFullscreen(this.player.getMediaElement())
            }
        };
        x._onModalOpen = function() {
            this._guaranteeVolume();
            if (this.options.modalOptions.playOnOpen === true) {
                if (A.isTablet()) {
                    this.player.play()
                }
            }
        };
        x._onEnded = function() {
            if (this.options.modalOptions.closeOnEnded === true) {
                this.modalVideo.close()
            }
        };
        x._onNoVideoSupport = function() {
            if (this.noSupportView && this.modalVideo) {
                this.modalVideo.appendContent(this.noSupportView.el)
            }
        };
        E.exports = F
    }, {
        "./FilmsController": 540,
        "ac-browser": 242,
        "ac-classlist": 17,
        "ac-feature": 251,
        "ac-fullscreen": 270,
        "ac-keyboard": 288,
        "ac-modal": 411,
        "ac-modal-video": 380,
        "ac-object": 713
    }],
    543: [function(m, l, h) {
        var i = m("./VideoSourceObject").create;

        function j() {
            this.sources = []
        }
        var k = j.prototype;
        k.addSource = function(a, b) {
            var c = i(a, b);
            if (c) {
                this.sources.push(c);
                c.index = this.sources.length - 1
            }
            return c
        };
        k.getSource = function(b) {
            var a = null;
            if (typeof b === "number") {
                a = this.getSourceByIndex(b)
            } else {
                if (typeof b === "string") {
                    if (/^cid/.test(b)) {
                        a = this.getSourceByCid(b)
                    } else {
                        a = this.getSourceById(b)
                    }
                }
            }
            return a
        };
        k.getSourceByIndex = function(a) {
            return this.sources[a]
        };
        k.getSourceById = function(a) {
            return this.getSourceByPropertyValue("id", a)
        };
        k.getSourceByCid = function(a) {
            return this.getSourceByPropertyValue("cid", a)
        };
        k.getSourceByPropertyValue = function(a, c) {
            var b = null;
            this.sources.some(function(d) {
                var f = false;
                if (d[a] === c) {
                    b = d;
                    f = true
                }
                return f
            });
            return b
        };
        l.exports = j
    }, {
        "./VideoSourceObject": 544
    }],
    544: [function(i, n, j) {
        var l = i("ac-vatman");
        var k = l.vatResource;
        var m = "data-acv-poster";

        function o(b, f) {
            if (typeof b !== "string") {
                throw new TypeError(b + " must be a string")
            }
            var d = f.element || null;
            var g = null;
            var a = null;
            var c = f.posterAttribute || m;
            if (d) {
                a = d.getAttribute(c);
                g = d.id
            }
            return {
                vatResource: k.create(b),
                element: d,
                src: b,
                poster: a,
                id: g,
                cid: null
            }
        }
        n.exports = {
            create: o
        }
    }, {
        "ac-vatman": 848
    }],
    545: [function(x, y, r) {
        var v = x("../FilmsController");
        var z = x("../ModalFilmsController");
        var w = x("ac-object");
        var n = x("./sources");
        var t = x("ac-feature");
        var o = x("../posters");
        var p = x("ac-dom-events");
        var u = {
            poster: null,
            modal: false,
            deepLink: true,
            playOnClick: true
        };

        function q(a, c) {
            c = w.defaults(u, c || {});
            var b;
            if (c.modal === true && !t.isHandheld()) {
                b = new z(c)
            } else {
                b = new v(c)
            }
            b.loadLocalization();
            b.createPlayer();
            if (b.player) {
                n(a, b, c)
            } else {
                b.createNoSupportView();
                a.forEach(function(d) {
                    p.addEventListener(d, "click", function(f) {
                        p.preventDefault(f);
                        b.modalVideo.open()
                    })
                })
            }
            return b
        }
        y.exports = q
    }, {
        "../FilmsController": 540,
        "../ModalFilmsController": 542,
        "../posters": 548,
        "./sources": 547,
        "ac-dom-events": 67,
        "ac-feature": 251,
        "ac-object": 713
    }],
    546: [function(t, u, p) {
        var n = t("ac-vatman");
        var v = t("ac-video").Player;
        var q = t("ac-feature");
        var m = t("ac-fullscreen");
        var r = t("ac-dom-events");

        function w(a) {
            a.on("ended", function() {
                m.exitFullscreen(a.getMediaElement())
            });
            a.on("exitfullscreen", function() {
                a.setCurrentTime(0)
            })
        }

        function x(a) {
            a.on("enterfullscreen", function() {
                var c = a.getMediaElement();
                var b;
                if (c.tagName.toLowerCase() !== "video") {
                    b = a.getMediaHeight() / a.getMediaWidth();
                    c.style.height = c.offsetWidth * b + "px"
                }
            });
            a.on("exitfullscreen", function() {
                var b = a.getMediaElement();
                if (b.tagName.toLowerCase() !== "video") {
                    b.style.height = null
                }
            })
        }

        function o(a) {
            a = a || {};
            var b = n.createPlayer(v, a);
            if (b) {
                if (q.isHandheld()) {
                    w(b);
                    b.appendTo(document.body)
                } else {
                    x(b)
                }
            }
            return b
        }
        u.exports = o
    }, {
        "ac-dom-events": 67,
        "ac-feature": 251,
        "ac-fullscreen": 270,
        "ac-vatman": 848,
        "ac-video": 1164
    }],
    547: [function(A, B, y) {
        var r = A("ac-router");
        var p = A("ac-gesture-touchclick").TouchClick;
        var u = A("../windowLoad");
        var t = A("../posters.js");
        var z = A("ac-vatman");
        var x = A("ac-dom-traversal").querySelector;
        var q = A("ac-browser");
        var v = A("ac-feature");
        var D = (q.name === "Chrome");
        var C = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;

        function w(b, c, d) {
            var a;
            var f;
            if (d.deepLink === true) {
                f = new r.Router({
                    hashChange: true,
                    pushState: false
                })
            }
            b.forEach(function(m) {
                var j;
                var l = m.getAttribute("href");
                var h = m.getAttribute("data-film-id") || m.getAttribute("id");
                var k = {
                    element: m
                };
                var g;
                var i = l;
                if (D) {
                    i = z.vatClient.getSource(l, C)
                }
                if (i !== l) {
                    m.setAttribute("href", i)
                }
                if (!c.player) {
                    c.createPlayer()
                }
                if (l) {
                    g = c.createVideoResource(l, k);
                    if (!g.poster) {
                        g.poster = c.defaultPosterFrame
                    }
                    if (g.poster) {
                        t.loadPoster(g.poster)
                    }
                    if (d.deepLink === true && g.id) {
                        f.createRoute(g.id, function() {
                            u(function() {
                                if (v.isTablet()) {
                                    var G = c.player;
                                    var n = G.poster;
                                    var o = G.getPoster();
                                    var H = G.getMediaElement();
                                    if (n) {
                                        H.setAttribute("poster", o);
                                        n._hide()
                                    }
                                }
                                c.player.setPreload("auto");
                                c.play(g.id)
                            })
                        })
                    }
                    if (d.playOnClick === true) {
                        j = p.create(m);
                        j.on("click", function() {
                            if (c.player && c.player.getPreload() === "none") {
                                c.player.setPreload("auto")
                            }
                            c.play(h)
                        })
                    }
                }
            });
            if (d.deepLink === true) {
                if (v.isTablet()) {
                    u(function() {
                        window.requestAnimationFrame(function() {
                            f.start()
                        })
                    })
                } else {
                    f.start()
                }
            }
        }
        B.exports = w
    }, {
        "../posters.js": 548,
        "../windowLoad": 549,
        "ac-browser": 242,
        "ac-dom-traversal": 138,
        "ac-feature": 251,
        "ac-gesture-touchclick": 277,
        "ac-router": 464,
        "ac-vatman": 848
    }],
    548: [function(i, h, f) {
        function g(a) {
            new Image().src = a
        }
        h.exports = {
            loadPoster: g
        }
    }, {}],
    549: [function(m, l, h) {
        var i = false;
        var j = m("ac-dom-events");
        j.addEventListener(window, "load", function() {
            i = true
        });

        function k(a) {
            if (i) {
                a()
            } else {
                j.addEventListener(window, "load", a)
            }
        }
        l.exports = k
    }, {
        "ac-dom-events": 67
    }],
    550: [function(d, g, f) {
        g.exports = {
            log: d("./ac-console/log")
        }
    }, {
        "./ac-console/log": 551
    }],
    551: [function(l, k, h) {
        var i = "f7c9180f-5c45-47b4-8de4-428015f096c0";
        var m = !!(function() {
            try {
                return window.localStorage.getItem(i)
            } catch (a) {}
        }());
        k.exports = function j() {
            if (window.console && typeof console.log !== "undefined" && m) {
                console.log.apply(console, Array.prototype.slice.call(arguments, 0))
            }
        }
    }, {}],
    552: [function(d, g, f) {
        arguments[4][133][0].apply(f, arguments)
    }, {
        "./internal/validate": 554,
        "./matchesSelector": 555,
        "ac-dom-nodes/isElement": 113,
        dup: 133
    }],
    553: [function(d, g, f) {
        arguments[4][139][0].apply(f, arguments)
    }, {
        dup: 139
    }],
    554: [function(A, D, y) {
        A("ac-polyfills/Array/prototype.indexOf");
        var r = A("ac-dom-nodes/isNode");
        var E = A("ac-dom-nodes/COMMENT_NODE");
        var w = A("ac-dom-nodes/DOCUMENT_FRAGMENT_NODE");
        var x = A("ac-dom-nodes/DOCUMENT_NODE");
        var z = A("ac-dom-nodes/ELEMENT_NODE");
        var B = A("ac-dom-nodes/TEXT_NODE");
        var F = function(a, b) {
            if (!r(a)) {
                return false
            }
            if (typeof b === "number") {
                return (a.nodeType === b)
            }
            return (b.indexOf(a.nodeType) !== -1)
        };
        var u = [z, x, w];
        var t = " must be an Element, Document, or Document Fragment";
        var q = [z, B, E];
        var v = " must be an Element, TextNode, or Comment";
        var C = " must be a string";
        D.exports = {
            parentNode: function(d, a, b, c) {
                c = c || "node";
                if ((d || a) && !F(d, u)) {
                    throw new TypeError(b + ": " + c + t)
                }
            },
            childNode: function(d, a, b, c) {
                c = c || "node";
                if (!d && !a) {
                    return
                }
                if (!F(d, q)) {
                    throw new TypeError(b + ": " + c + v)
                }
            },
            selector: function(d, a, b, c) {
                c = c || "selector";
                if ((d || a) && typeof d !== "string") {
                    throw new TypeError(b + ": " + c + C)
                }
            }
        }
    }, {
        "ac-dom-nodes/COMMENT_NODE": 93,
        "ac-dom-nodes/DOCUMENT_FRAGMENT_NODE": 94,
        "ac-dom-nodes/DOCUMENT_NODE": 95,
        "ac-dom-nodes/ELEMENT_NODE": 97,
        "ac-dom-nodes/TEXT_NODE": 98,
        "ac-dom-nodes/isNode": 114,
        "ac-polyfills/Array/prototype.indexOf": 722
    }],
    555: [function(p, o, q) {
        var n = p("ac-dom-nodes/isElement");
        var l = p("./internal/validate");
        var k = p("./internal/nativeMatches");
        var m = p("./shims/matchesSelector");
        o.exports = function j(a, b) {
            l.selector(b, true, "matchesSelector");
            if (!n(a)) {
                return false
            }
            if (!k) {
                return m(a, b)
            }
            return k.call(a, b)
        }
    }, {
        "./internal/nativeMatches": 553,
        "./internal/validate": 554,
        "./shims/matchesSelector": 557,
        "ac-dom-nodes/isElement": 113
    }],
    556: [function(i, o, j) {
        i("ac-polyfills/Array/prototype.slice");
        var k = i("./internal/validate");
        var l = i("./shims/querySelectorAll");
        var m = ("querySelectorAll" in document);
        o.exports = function n(b, a) {
            a = a || document;
            k.parentNode(a, true, "querySelectorAll", "context");
            k.selector(b, true, "querySelectorAll");
            if (!m) {
                return l(b, a)
            }
            return Array.prototype.slice.call(a.querySelectorAll(b))
        }
    }, {
        "./internal/validate": 554,
        "./shims/querySelectorAll": 558,
        "ac-polyfills/Array/prototype.slice": 723
    }],
    557: [function(k, j, g) {
        var i = k("../querySelectorAll");
        j.exports = function h(a, f) {
            var b = a.parentNode || document;
            var d = i(f, b);
            var c;
            for (c = 0; c < d.length; c++) {
                if (d[c] === a) {
                    return true
                }
            }
            return false
        }
    }, {
        "../querySelectorAll": 556
    }],
    558: [function(q, p, j) {
        var m = q("ac-dom-nodes/isElement");
        var n = q("ac-dom-nodes/isDocumentFragment");
        var k = q("ac-dom-nodes/remove");
        var l = "_ac_qsa";
        p.exports = function o(d, b) {
            var f = document.createElement("style");
            var g;
            var c = [];
            var a;
            b = b || document;
            document[l] = [];
            if (n(b)) {
                b.appendChild(f)
            } else {
                document.body.appendChild(f)
            }
            f.styleSheet.cssText = d + "{ac-qsa:expression(document." + l + " && document." + l + ".push(this))}";
            window.scrollBy(0, 0);
            while (document[l].length) {
                a = document[l].shift();
                a.style.removeAttribute("ac-qsa");
                if (b === document) {
                    c.push(a)
                } else {
                    g = a;
                    while ((g = g.parentNode) && m(g)) {
                        if (g === b) {
                            c.push(a);
                            break
                        }
                    }
                }
                c.push(a)
            }
            document[l] = null;
            k(f);
            return c
        }
    }, {
        "ac-dom-nodes/isDocumentFragment": 111,
        "ac-dom-nodes/isElement": 113,
        "ac-dom-nodes/remove": 117
    }],
    559: [function(d, g, f) {
        arguments[4][161][0].apply(f, arguments)
    }, {
        "./ac-color/decimalToHex": 560,
        "./ac-color/hexToDecimal": 561,
        "./ac-color/hexToRgb": 562,
        "./ac-color/isColor": 563,
        "./ac-color/isHex": 564,
        "./ac-color/isRgb": 565,
        "./ac-color/mixColors": 566,
        "./ac-color/rgbToArray": 567,
        "./ac-color/rgbToDecimal": 568,
        "./ac-color/rgbToHex": 569,
        "./ac-color/rgbToObject": 570,
        "./ac-color/shortToLongHex": 571,
        dup: 161
    }],
    560: [function(d, g, f) {
        arguments[4][162][0].apply(f, arguments)
    }, {
        dup: 162
    }],
    561: [function(d, g, f) {
        arguments[4][163][0].apply(f, arguments)
    }, {
        dup: 163
    }],
    562: [function(d, g, f) {
        arguments[4][164][0].apply(f, arguments)
    }, {
        "./shortToLongHex": 571,
        dup: 164
    }],
    563: [function(d, g, f) {
        arguments[4][165][0].apply(f, arguments)
    }, {
        "./isHex": 564,
        "./isRgb": 565,
        dup: 165
    }],
    564: [function(d, g, f) {
        arguments[4][166][0].apply(f, arguments)
    }, {
        dup: 166
    }],
    565: [function(d, g, f) {
        arguments[4][167][0].apply(f, arguments)
    }, {
        dup: 167
    }],
    566: [function(d, g, f) {
        arguments[4][168][0].apply(f, arguments)
    }, {
        "./hexToRgb": 562,
        "./isHex": 564,
        "./rgbToObject": 570,
        dup: 168
    }],
    567: [function(d, g, f) {
        arguments[4][169][0].apply(f, arguments)
    }, {
        "./rgbToObject": 570,
        dup: 169
    }],
    568: [function(d, g, f) {
        arguments[4][170][0].apply(f, arguments)
    }, {
        "./hexToDecimal": 561,
        "./rgbToArray": 567,
        "./rgbToHex": 569,
        dup: 170
    }],
    569: [function(d, g, f) {
        arguments[4][171][0].apply(f, arguments)
    }, {
        dup: 171
    }],
    570: [function(d, g, f) {
        arguments[4][172][0].apply(f, arguments)
    }, {
        dup: 172
    }],
    571: [function(d, g, f) {
        arguments[4][173][0].apply(f, arguments)
    }, {
        dup: 173
    }],
    572: [function(d, g, f) {
        arguments[4][176][0].apply(f, arguments)
    }, {
        dup: 176
    }],
    573: [function(d, g, f) {
        arguments[4][177][0].apply(f, arguments)
    }, {
        "./ac-transform/Transform": 574,
        dup: 177
    }],
    574: [function(d, g, f) {
        arguments[4][178][0].apply(f, arguments)
    }, {
        dup: 178,
        "gl-matrix": 572
    }],
    575: [function(d, g, f) {
        g.exports = {
            Clip: d("./ac-eclipse/Clip"),
            Timeline: d("./ac-eclipse/Timeline")
        }
    }, {
        "./ac-eclipse/Clip": 576,
        "./ac-eclipse/Timeline": 577
    }],
    576: [function(n, m, p) {
        n("./helpers/Float32Array");
        var j = n("./helpers/transitionEnd");
        var q = n("./clips/ClipEasing");
        var k = n("./clips/ClipInlineCss");
        var l = n("./clips/ClipTransitionCss");

        function o(b, c, a, d) {
            if (b.nodeType) {
                if (j === undefined || (d && d.inlineStyles)) {
                    return new k(b, c, a, d)
                }
                return new l(b, c, a, d)
            }
            return new q(b, c, a, d)
        }
        m.exports = o
    }, {
        "./clips/ClipEasing": 578,
        "./clips/ClipInlineCss": 579,
        "./clips/ClipTransitionCss": 580,
        "./helpers/Float32Array": 583,
        "./helpers/transitionEnd": 593
    }],
    577: [function(d, g, f) {
        arguments[4][181][0].apply(f, arguments)
    }, {
        "ac-clip": 22,
        "ac-event-emitter": 595,
        "ac-object": 713,
        dup: 181
    }],
    578: [function(w, x, v) {
        var o = w("ac-object").clone;
        var r = w("ac-object").create;
        var n = w("../helpers/isCssCubicBezierString");
        var t = w("../helpers/BezierCurveCssManager");
        var q = w("ac-clip").Clip;
        var p = "ease";

        function m(H, a, l, c) {
            var F = o(c || {}, true);
            var f = 0;
            var j = {};
            var D = {};
            var E = F.propsFrom || {};
            var h = {};
            var i, b;
            if (n(F.ease)) {
                F.ease = t.create(F.ease).toEasingFunction()
            }
            if (F.propsEase) {
                var g = F.ease || p;
                for (i in l) {
                    if (l.hasOwnProperty(i)) {
                        b = F.propsEase[i];
                        if (n(b)) {
                            b = t.create(F.propsEase[i]).toEasingFunction()
                        }
                        if (b === undefined) {
                            if (j[g] === undefined) {
                                j[g] = {};
                                D[g] = {};
                                h[g] = g;
                                f++
                            }
                            j[g][i] = l[i];
                            D[g][i] = E[i]
                        } else {
                            if (typeof b === "function") {
                                j[f] = {};
                                D[f] = {};
                                j[f][i] = l[i];
                                D[f][i] = E[i];
                                h[f] = b;
                                f++
                            } else {
                                if (j[b] === undefined) {
                                    j[b] = {};
                                    D[b] = {};
                                    h[b] = b;
                                    f++
                                }
                                j[b][i] = l[i];
                                D[b][i] = E[i]
                            }
                        }
                    }
                }
            }
            if (f > 1) {
                this._storeOnUpdate = F.onUpdate || null;
                F.onUpdate = null;
                var G = F.onStart;
                var k = F.onDraw;
                var d = F.onComplete;
                F.onStart = null;
                F.onDraw = null;
                F.onComplete = null;
                this._clips = [];
                for (b in j) {
                    if (j.hasOwnProperty(b)) {
                        F.ease = h[b];
                        F.propsFrom = D[b];
                        this._clips.push(new q(H, a, j[b], F))
                    }
                }
                F.onUpdate = this._onUpdate;
                F.onStart = G;
                F.onDraw = k;
                F.onComplete = d;
                F.propsFrom = null;
                F.ease = "linear";
                l = {}
            } else {
                for (i in h) {
                    if (h.hasOwnProperty(i)) {
                        F.ease = h[i]
                    }
                }
            }
            q.call(this, H, a, l, F)
        }
        var u = m.prototype = r(q.prototype);
        u.reset = function() {
            var b = q.prototype.reset.call(this);
            if (this._clips) {
                var a = this._clips.length;
                while (a--) {
                    this._clips[a].reset()
                }
            }
            return b
        };
        u.destroy = function() {
            var b = q.prototype.destroy.call(this);
            if (this._clips) {
                var a = this._clips.length;
                while (a--) {
                    this._clips[a].reset()
                }
                this._clips = null
            }
            this._eases = null;
            this._storeOnUpdate = null;
            return b
        };
        u._onUpdate = function(a) {
            var c = (this._direction === 1) ? a.progress : 1 - a.progress;
            var b = this._clips.length;
            while (b--) {
                this._clips[b].setProgress(c)
            }
            if (typeof this._storeOnUpdate === "function") {
                this._storeOnUpdate.call(this, a)
            }
        };
        x.exports = m
    }, {
        "../helpers/BezierCurveCssManager": 582,
        "../helpers/isCssCubicBezierString": 589,
        "ac-clip": 22,
        "ac-object": 713
    }],
    579: [function(x, z, w) {
        var A = x("../helpers/convertToStyleObject");
        var y = x("../helpers/convertToTransitionableObjects");
        var q = x("ac-object").clone;
        var t = x("ac-object").create;
        var r = x("../helpers/removeTransitions");
        var u = x("../helpers/BezierCurveCssManager");
        var o = x("./ClipEasing");
        var p = x("ac-dom-styles");

        function B(a, c, j, f) {
            var k = q(f || {}, true);
            this._el = a;
            var h = y(this._el, j || {}, k.propsFrom || {});
            this._styles = h.target;
            this._stylesFrom = h.propsFrom;
            j = h.propsTo;
            var d;
            this._storeOnStart = k.onStart || null;
            this._storeOnDraw = k.onDraw || null;
            this._storeOnComplete = k.onComplete || null;
            k.onStart = this._onStart;
            k.onDraw = this._onDraw;
            k.onComplete = this._onComplete;
            k.propsFrom = h.propsFrom;
            o.call(this, this._styles, c, j, k);
            r(this._el, this._styles);
            var i = (this._isYoyo) ? this._stylesFrom : j;
            this._completeStyles = A(i);
            if (k.removeStylesOnComplete !== undefined) {
                var g = k.removeStylesOnComplete;
                if (typeof g === "boolean" && g) {
                    for (d in this._completeStyles) {
                        if (this._completeStyles.hasOwnProperty(d)) {
                            this._completeStyles[d] = null
                        }
                    }
                } else {
                    if (typeof g === "object" && g.length) {
                        var b = g.length;
                        while (b--) {
                            d = g[b];
                            if (this._completeStyles.hasOwnProperty(d)) {
                                this._completeStyles[d] = null
                            }
                        }
                    }
                }
            }
        }
        var v = B.prototype = t(o.prototype);
        v.reset = function() {
            var a = o.prototype.reset.call(this);
            p.setStyle(this._el, A(this._styles));
            return a
        };
        v.destroy = function() {
            var a = o.prototype.destroy.call(this);
            this._el = null;
            this._styles = null;
            this._stylesFrom = null;
            this._stylesTo = null;
            this._completeStyles = null;
            this._storeOnStart = null;
            this._storeOnDraw = null;
            this._storeOnComplete = null;
            return a
        };
        v.getTarget = function() {
            return this._el
        };
        v._onStart = function(a) {
            if (this.isPlaying() && this._direction === 1) {
                p.setStyle(this._el, A(this._stylesFrom))
            }
            if (typeof this._storeOnStart === "function") {
                this._storeOnStart.call(this, a)
            }
        };
        v._onDraw = function(a) {
            p.setStyle(this._el, A(this._styles));
            if (typeof this._storeOnDraw === "function") {
                this._storeOnDraw.call(this, a)
            }
        };
        v._onComplete = function(a) {
            p.setStyle(this._el, this._completeStyles);
            if (typeof this._storeOnComplete === "function") {
                this._storeOnComplete.call(this, a)
            }
        };
        z.exports = B
    }, {
        "../helpers/BezierCurveCssManager": 582,
        "../helpers/convertToStyleObject": 585,
        "../helpers/convertToTransitionableObjects": 586,
        "../helpers/removeTransitions": 590,
        "./ClipEasing": 578,
        "ac-dom-styles": 120,
        "ac-object": 713
    }],
    580: [function(I, P, w) {
        var N = I("../helpers/convertToStyleObject");
        var E = I("../helpers/convertToTransitionableObjects");
        var y = I("ac-object").clone;
        var G = I("ac-object").create;
        var B = I("ac-easing").createPredefined;
        var H = I("../helpers/isCssCubicBezierString");
        var A = I("../helpers/removeTransitions");
        var K = I("../helpers/splitUnits");
        var O = I("../helpers/toCamCase");
        var J = I("../helpers/transitionEnd");
        var F = I("../helpers/waitAnimationFrames");
        var z = I("../helpers/BezierCurveCssManager");
        var C = I("./ClipEasing");
        var x = I("ac-dom-styles");
        var M = "ease";

        function L(b, f, n, j) {
            var a = y(j || {}, true);
            this._el = b;
            var m = E(this._el, n || {}, a.propsFrom || {});
            this._styles = m.target;
            this._propsTo = m.propsTo;
            this._propsFrom = m.propsFrom;
            this._storeOnStart = a.onStart || null;
            this._storeOnComplete = a.onComplete || null;
            a.onStart = this._onStart;
            a.onComplete = this._onComplete;
            a.propsFrom = this._propsFrom;
            this._stylesTo = y(this._propsTo, true);
            this._stylesFrom = y(this._propsFrom, true);
            a.ease = a.ease || M;
            this._eases = {};
            this._propsArray = [];
            this._propsComplete = {};
            var k;
            var g;
            var h = N(this._stylesTo);
            var c = N(this._stylesFrom);
            this._propsEase = y(a.propsEase || {}, true);
            var i;
            for (i in this._stylesTo) {
                if (this._stylesTo.hasOwnProperty(i)) {
                    this._propsArray[this._propsArray.length] = i;
                    this._propsComplete[O(i)] = {
                        "1": h[i],
                        "-1": c[i]
                    };
                    if (this._propsEase[i] === undefined) {
                        if (this._eases[a.ease] === undefined) {
                            k = this._convertEase(a.ease);
                            this._eases[a.ease] = k.css;
                            g = k.js
                        }
                        this._propsEase[i] = a.ease
                    } else {
                        if (this._eases[this._propsEase[i]] === undefined) {
                            k = this._convertEase(this._propsEase[i]);
                            this._eases[this._propsEase[i]] = k.css;
                            a.propsEase[i] = k.js
                        } else {
                            if (H(this._propsEase[i])) {
                                a.propsEase[i] = this._eases[this._propsEase[i]]["1"].toEasingFunction()
                            }
                        }
                    }
                }
            }
            a.ease = g;
            C.call(this, this._styles, f, this._propsTo, a);
            this._onTransitionEnded = this._onTransitionEnded.bind(this);
            this.on("pause", this._onPaused);
            A(this._el, this._stylesTo);
            this._otherTransitions = x.getStyle(this._el, "transition").transition;
            if (this._otherTransitions === null || this._otherTransitions === "all 0s ease 0s") {
                this._otherTransitions = ""
            }
            this._completeStyles = {
                transition: this._otherTransitions
            };
            if (a.removeStylesOnComplete !== undefined) {
                var l = a.removeStylesOnComplete;
                if (typeof l === "boolean" && l) {
                    for (i in this._stylesTo) {
                        this._completeStyles[i] = null
                    }
                } else {
                    if (typeof l === "object" && l.length) {
                        var d = l.length;
                        while (d--) {
                            this._completeStyles[l[d]] = null
                        }
                    }
                }
            }
        }
        var D = L.prototype = G(C.prototype);
        D.reset = function() {
            var a = C.prototype.reset.call(this);
            this._applyStyles(0, N(this._target));
            return a
        };
        D.destroy = function() {
            var a = C.prototype.destroy.call(this);
            this._removeTransitionListener();
            this._el = null;
            this._propsArray = null;
            this._propsComplete = null;
            this._styles = null;
            this._stylesFrom = null;
            this._stylesTo = null;
            this._completeStyles = null;
            this._storeOnStart = null;
            this._storeOnComplete = null;
            this._onTransitionEnded = null;
            return a
        };
        D.getTarget = function() {
            return this._el
        };
        D.setProgress = function(b) {
            var a = C.prototype.setProgress.call(this, b);
            this._applyStyles(0, N(this._target));
            if (this.isPlaying()) {
                F(function() {
                    if (this.isPlaying()) {
                        var c = this._duration * (1 - this.getProgress());
                        var d = N((this._direction > 0) ? this._stylesTo : this._stylesFrom);
                        this._applyStyles(c, d)
                    }
                }.bind(this), 2)
            }
            return a
        };
        D._convertEase = function(c) {
            var b;
            var a;
            if (H(c)) {
                b = z.create(c);
                a = b.toEasingFunction()
            } else {
                b = z.create(B(c).cssString);
                a = c
            }
            return {
                css: {
                    "1": b,
                    "-1": b.reversed()
                },
                js: a
            }
        };
        D._stop = function() {
            this._removeTransitionListener();
            C.prototype._stop.call(this)
        };
        D._complete = function() {
            if (this._isComplete()) {
                C.prototype._complete.call(this)
            } else {
                this._el.addEventListener(J, this._onTransitionEnded)
            }
        };
        D._onTransitionEnded = function() {
            this._removeTransitionListener();
            C.prototype._complete.call(this)
        };
        D._removeTransitionListener = function() {
            if (this._el && this._onTransitionEnded) {
                this._el.removeEventListener(J, this._onTransitionEnded)
            }
        };
        D._isComplete = function() {
            var b = x.getStyle.apply(this, [this._el].concat([this._propsArray]));
            b.transform = null;
            var a;
            var c;
            for (c in b) {
                if (b.hasOwnProperty(c) && b[c] !== null) {
                    a = this._propsComplete[c][this._direction];
                    if (b[c] !== a && this._el.style[c] !== a && String(K(b[c]).value) !== a) {
                        return false
                    }
                }
            }
            return true
        };
        D._applyStyles = function(f, c) {
            if (f > 0) {
                var d = this._otherTransitions + ((this._otherTransitions.length) ? ", " : "");
                var b = {};
                var a;
                for (a in this._eases) {
                    if (this._eases.hasOwnProperty(a)) {
                        b[a] = this._eases[a][this._direction].splitAt(this.getProgress()).toCSSString()
                    }
                }
                for (a in this._stylesTo) {
                    if (this._stylesTo.hasOwnProperty(a)) {
                        d += a + " " + f + "ms " + b[this._propsEase[a]] + " 0ms, "
                    }
                }
                c.transition = d.substr(0, d.length - 2)
            } else {
                c.transition = this._otherTransitions
            }
            x.setStyle(this._el, c)
        };
        D._onPaused = function(b) {
            var a = x.getStyle.apply(this, [this._el].concat([this._propsArray]));
            a.transition = this._otherTransitions;
            x.setStyle(this._el, a)
        };
        D._onStart = function(b) {
            var a = (this._direction === 1 && this.getProgress() === 0) ? 2 : 0;
            if (a) {
                this._applyStyles(0, N(this._stylesFrom))
            }
            F(function() {
                if (this.isPlaying()) {
                    var c = this._duration * (1 - this.getProgress());
                    var d = N((this._direction > 0) ? this._stylesTo : this._stylesFrom);
                    this._applyStyles(c, d)
                }
            }.bind(this), a);
            if (typeof this._storeOnStart === "function") {
                this._storeOnStart.call(this, b)
            }
        };
        D._onComplete = function(a) {
            x.setStyle(this._el, this._completeStyles);
            if (typeof this._storeOnComplete === "function") {
                this._storeOnComplete.call(this, a)
            }
        };
        P.exports = L
    }, {
        "../helpers/BezierCurveCssManager": 582,
        "../helpers/convertToStyleObject": 585,
        "../helpers/convertToTransitionableObjects": 586,
        "../helpers/isCssCubicBezierString": 589,
        "../helpers/removeTransitions": 590,
        "../helpers/splitUnits": 591,
        "../helpers/toCamCase": 592,
        "../helpers/transitionEnd": 593,
        "../helpers/waitAnimationFrames": 594,
        "./ClipEasing": 578,
        "ac-dom-styles": 120,
        "ac-easing": 153,
        "ac-object": 713
    }],
    581: [function(d, g, f) {
        arguments[4][185][0].apply(f, arguments)
    }, {
        "ac-easing": 153,
        dup: 185
    }],
    582: [function(d, g, f) {
        arguments[4][186][0].apply(f, arguments)
    }, {
        "./BezierCurveCss": 581,
        dup: 186
    }],
    583: [function(d, g, f) {
        arguments[4][187][0].apply(f, arguments)
    }, {
        dup: 187
    }],
    584: [function(d, g, f) {
        arguments[4][189][0].apply(f, arguments)
    }, {
        "./splitUnits": 591,
        "ac-dom-metrics": 90,
        dup: 189
    }],
    585: [function(f, i, g) {
        i.exports = function h(b) {
            var c = {};
            var a;
            for (a in b) {
                if (b.hasOwnProperty(a) && b[a] !== null) {
                    if (b[a].isColor) {
                        c[a] = "rgb(" + Math.round(b[a].r) + ", " + Math.round(b[a].g) + ", " + Math.round(b[a].b) + ")"
                    } else {
                        if (a === "transform") {
                            c[a] = "matrix(" + b[a].join(",") + ")"
                        } else {
                            c[a] = b[a].value + b[a].unit
                        }
                    }
                }
            }
            return c
        }
    }, {}],
    586: [function(y, B, v) {
        var t = y("ac-object").clone;
        var x = y("./cssColorNames");
        var A = y("./splitUnits");
        var C = y("./toCamCase");
        var p = y("ac-color");
        var q = y("ac-dom-styles");
        var u = y("ac-feature");
        var w = y("ac-transform").Transform;
        var D = y("./TransformMatrix");
        var r = function(a) {
            if (x[a]) {
                a = x[a]
            } else {
                if (p.isHex(a)) {
                    a = p.hexToRgb(a)
                }
                a = p.rgbToObject(a)
            }
            a.isColor = true;
            return a
        };
        B.exports = function z(a, f, g) {
            var j = {};
            f = t(f, true);
            g = t(g, true);
            var b;
            var d, i, h;
            var k = u.cssPropertyAvailable("transform");
            var c;
            for (c in f) {
                if (f.hasOwnProperty(c) && f[c] !== null) {
                    if (c === "transform") {
                        if (k) {
                            d = new w();
                            b = q.getStyle(a, "transform")["transform"] || "none";
                            d.setMatrixValue(b);
                            i = new D(new w(), a, f[c])
                        }
                        if (i && i.toCSSString() !== d.toCSSString()) {
                            h = new D(g[c] ? new w() : d.clone(), a, g[c]);
                            j[c] = d.toArray();
                            f[c] = i.toArray();
                            g[c] = h.toArray()
                        } else {
                            j[c] = null;
                            f[c] = null
                        }
                    } else {
                        b = q.getStyle(a, c)[C(c)];
                        if (p.isColor(b)) {
                            j[c] = r(b);
                            g[c] = (g[c] !== undefined) ? r(g[c]) : t(j[c], true);
                            f[c] = r(f[c])
                        } else {
                            j[c] = A(b);
                            g[c] = (g[c] !== undefined) ? A(g[c]) : t(j[c], true);
                            f[c] = A(f[c])
                        }
                    }
                }
            }
            for (c in g) {
                if (g.hasOwnProperty(c) && g[c] !== null && (f[c] === undefined || f[c] === null)) {
                    if (c === "transform") {
                        if (k) {
                            d = new w();
                            d.setMatrixValue(getComputedStyle(a).transform || getComputedStyle(a).webkitTransform || "none");
                            h = new D(new w(), a, g[c])
                        }
                        if (h && h.toCSSString() !== d.toCSSString()) {
                            i = new D(d.clone());
                            j[c] = d.toArray();
                            f[c] = i.toArray();
                            g[c] = h.toArray()
                        } else {
                            j[c] = null;
                            f[c] = null;
                            g[c] = null
                        }
                    } else {
                        b = q.getStyle(a, c)[C(c)];
                        if (p.isColor(b)) {
                            j[c] = r(b);
                            f[c] = t(j[c], true);
                            g[c] = r(g[c])
                        } else {
                            j[c] = A(b);
                            g[c] = A(g[c]);
                            f[c] = t(j[c], true)
                        }
                    }
                }
            }
            return {
                target: j,
                propsTo: f,
                propsFrom: g
            }
        }
    }, {
        "./TransformMatrix": 584,
        "./cssColorNames": 587,
        "./splitUnits": 591,
        "./toCamCase": 592,
        "ac-color": 559,
        "ac-dom-styles": 120,
        "ac-feature": 213,
        "ac-object": 713,
        "ac-transform": 573
    }],
    587: [function(d, g, f) {
        arguments[4][192][0].apply(f, arguments)
    }, {
        dup: 192
    }],
    588: [function(d, g, f) {
        arguments[4][193][0].apply(f, arguments)
    }, {
        dup: 193
    }],
    589: [function(d, g, f) {
        arguments[4][194][0].apply(f, arguments)
    }, {
        dup: 194
    }],
    590: [function(d, g, f) {
        arguments[4][195][0].apply(f, arguments)
    }, {
        "./getShorthandTransition": 588,
        "ac-dom-styles": 120,
        dup: 195
    }],
    591: [function(d, g, f) {
        arguments[4][196][0].apply(f, arguments)
    }, {
        dup: 196
    }],
    592: [function(d, g, f) {
        arguments[4][197][0].apply(f, arguments)
    }, {
        dup: 197
    }],
    593: [function(d, g, f) {
        arguments[4][198][0].apply(f, arguments)
    }, {
        dup: 198
    }],
    594: [function(i, h, g) {
        h.exports = function f(a, b) {
            if (b) {
                var c = 0;
                var d = function() {
                    if (c === b) {
                        a.call(this)
                    } else {
                        ++c;
                        window.requestAnimationFrame(d)
                    }
                };
                d()
            } else {
                a.call(this)
            }
        }
    }, {}],
    595: [function(d, g, f) {
        arguments[4][20][0].apply(f, arguments)
    }, {
        "./ac-event-emitter/EventEmitter": 596,
        dup: 20
    }],
    596: [function(d, g, f) {
        arguments[4][21][0].apply(f, arguments)
    }, {
        dup: 21
    }],
    597: [function(i, h, f) {
        function g(c, a) {
            var b;
            return function() {
                var l = arguments;
                var d = this;
                var m = function() {
                    b = null;
                    c.apply(d, l)
                };
                clearTimeout(b);
                b = setTimeout(m, a)
            }
        }
        h.exports = g
    }, {}],
    598: [function(p, o, j) {
        var q = p("ac-dom-events/preventDefault");
        var k = p("ac-dom-events/stopPropagation");

        function m(a) {
            if (a.touches && a.touches.length === 0) {
                return false
            }
            if (typeof a.pageX !== "number") {
                return false
            }
            return true
        }

        function n(a) {
            this.originalEvent = a;
            if (m(a)) {
                this.pageX = a.touches ? a.touches[0].pageX : this.originalEvent.pageX;
                this.pageY = a.touches ? a.touches[0].pageY : this.originalEvent.pageY
            }
        }
        var l = n.prototype;
        l.preventDefault = function() {
            q(this.originalEvent)
        };
        l.stopPropagation = function() {
            k(this.originalEvent)
        };
        o.exports = n
    }, {
        "ac-dom-events/preventDefault": 72,
        "ac-dom-events/stopPropagation": 76
    }],
    599: [function(u, w, q) {
        var m = u("ac-event-emitter").EventEmitter;
        var t = u("ac-dom-events/addEventListener");
        var v = u("ac-dom-events/removeEventListener");
        var r = u("./PointerEvent");
        var n = u("ac-object/create");
        var o = u("./util/inputs");

        function x(b, a) {
            this.options = a || {};
            this.element = b;
            this._listeners = [];
            if (a.mouse === true) {
                this._listeners.push(o.MOUSE)
            }
            if (a.touch === true) {
                this._listeners.push(o.TOUCH)
            }
            this._boundMove = this._move.bind(this);
            this._boundEnd = this._end.bind(this);
            this._boundCancel = this._cancel.bind(this);
            this._boundStart = this._start.bind(this);
            this._hasFiredStart = false;
            this._startEvent = null
        }
        var p = x.prototype = n(m.prototype);
        p._start = function(b) {
            for (var a = 0; a < this._listeners.length; a += 1) {
                t(this.element, this._listeners[a].MOVE_EVENT, this._boundMove);
                t(this.element, this._listeners[a].END_EVENT, this._boundEnd);
                t(this.element, this._listeners[a].CANCEL_EVENT, this._boundCancel)
            }
            this._startEvent = new r(b)
        };
        p._move = function(a) {
            if (this._hasFiredStart === false) {
                this._hasFiredStart = true;
                this.trigger("start", this._startEvent)
            }
            this.trigger("move", new r(a))
        };
        p._end = function(a) {
            this._removeAllListeners();
            this.trigger("end", new r(a));
            this._hasFiredStart = false;
            this._startEvent = null
        };
        p._cancel = function(a) {
            this._removeAllListeners();
            this.trigger("cancel", new r(a));
            this._hasFiredStart = false;
            this._startEvent = null
        };
        p._removeAllListeners = function() {
            for (var a = 0; a < this._listeners.length; a += 1) {
                v(this.element, this._listeners[a].MOVE_EVENT, this._boundMove);
                v(this.element, this._listeners[a].END_EVENT, this._boundEnd);
                v(this.element, this._listeners[a].CANCEL_EVENT, this._boundCancel)
            }
        };
        p.activate = function() {
            for (var a = 0; a < this._listeners.length; a += 1) {
                t(this.element, this._listeners[a].START_EVENT, this._boundStart)
            }
        };
        p.destroy = function() {
            this._boundStart = null;
            this._boundEnd = null;
            this._boundCancel = null
        };
        x.create = function(b, a) {
            return new x(b, a)
        };
        w.exports = x
    }, {
        "./PointerEvent": 598,
        "./util/inputs": 600,
        "ac-dom-events/addEventListener": 65,
        "ac-dom-events/removeEventListener": 73,
        "ac-event-emitter": 595,
        "ac-object/create": 709
    }],
    600: [function(i, h, f) {
        var g = {
            MOUSE: {
                START_EVENT: "mousedown",
                MOVE_EVENT: "mousemove",
                END_EVENT: "mouseup",
                CANCEL_EVENT: "mouseleave"
            },
            TOUCH: {
                START_EVENT: "touchstart",
                MOVE_EVENT: "touchmove",
                END_EVENT: "touchend",
                CANCEL_EVENT: "touchcancel"
            }
        };
        h.exports = g
    }, {}],
    601: [function(d, g, f) {
        g.exports = {
            flatten: d("./ac-array/flatten"),
            intersection: d("./ac-array/intersection"),
            toArray: d("./ac-array/toArray"),
            union: d("./ac-array/union"),
            unique: d("./ac-array/unique"),
            without: d("./ac-array/without")
        }
    }, {
        "./ac-array/flatten": 602,
        "./ac-array/intersection": 603,
        "./ac-array/toArray": 604,
        "./ac-array/union": 605,
        "./ac-array/unique": 606,
        "./ac-array/without": 607
    }],
    602: [function(f, i, g) {
        i.exports = function h(a) {
            var c = [];
            var b = function(d) {
                if (Array.isArray(d)) {
                    d.forEach(b)
                } else {
                    c.push(d)
                }
            };
            a.forEach(b);
            return c
        }
    }, {}],
    603: [function(f, i, g) {
        i.exports = function h(p) {
            if (!p) {
                return []
            }
            var a = arguments.length;
            var c = 0;
            var j = p.length;
            var o = [];
            var b;
            for (c; c < j; c++) {
                b = p[c];
                if (o.indexOf(b) > -1) {
                    continue
                }
                for (var d = 1; d < a; d++) {
                    if (arguments[d].indexOf(b) < 0) {
                        break
                    }
                }
                if (d === a) {
                    o.push(b)
                }
            }
            return o
        }
    }, {}],
    604: [function(f, h, g) {
        h.exports = function i(a) {
            return Array.prototype.slice.call(a)
        }
    }, {}],
    605: [function(h, m, i) {
        var j = h("./flatten");
        var k = h("./unique");
        m.exports = function l(a) {
            return k(j(Array.prototype.slice.call(arguments)))
        }
    }, {
        "./flatten": 602,
        "./unique": 606
    }],
    606: [function(f, i, g) {
        i.exports = function h(a) {
            var b = function(d, c) {
                if (d.indexOf(c) < 0) {
                    d.push(c)
                }
                return d
            };
            return a.reduce(b, [])
        }
    }, {}],
    607: [function(f, h, g) {
        h.exports = function i(q, r, a) {
            var c;
            var o = q.indexOf(r);
            var b = q.length;
            if (o >= 0) {
                if (a) {
                    c = q.slice(0, b);
                    var d, p = 0;
                    for (d = o; d < b; d++) {
                        if (q[d] === r) {
                            c.splice(d - p, 1);
                            p++
                        }
                    }
                } else {
                    if (o === (b - 1)) {
                        c = q.slice(0, (b - 1))
                    } else {
                        if (o === 0) {
                            c = q.slice(1)
                        } else {
                            c = q.slice(0, o);
                            c = c.concat(q.slice(o + 1))
                        }
                    }
                }
            } else {
                return q
            }
            return c
        }
    }, {}],
    608: [function(d, g, f) {
        arguments[4][467][0].apply(f, arguments)
    }, {
        "./ac-shared-instance/SharedInstance": 609,
        dup: 467
    }],
    609: [function(d, g, f) {
        arguments[4][468][0].apply(f, arguments)
    }, {
        dup: 468
    }],
    610: [function(d, g, f) {
        arguments[4][469][0].apply(f, arguments)
    }, {
        "./ac-mvc-cid/CID": 611,
        dup: 469
    }],
    611: [function(d, g, f) {
        arguments[4][470][0].apply(f, arguments)
    }, {
        "ac-shared-instance": 608,
        dup: 470
    }],
    612: [function(d, g, f) {
        arguments[4][369][0].apply(f, arguments)
    }, {
        dup: 369
    }],
    613: [function(d, g, f) {
        arguments[4][370][0].apply(f, arguments)
    }, {
        "./ac-object/clone": 614,
        "./ac-object/create": 615,
        "./ac-object/defaults": 616,
        "./ac-object/extend": 617,
        "./ac-object/getPrototypeOf": 618,
        "./ac-object/isDate": 619,
        "./ac-object/isEmpty": 620,
        "./ac-object/isRegExp": 621,
        "./ac-object/toQueryParameters": 622,
        dup: 370
    }],
    614: [function(d, g, f) {
        arguments[4][371][0].apply(f, arguments)
    }, {
        "./extend": 617,
        dup: 371
    }],
    615: [function(d, g, f) {
        arguments[4][372][0].apply(f, arguments)
    }, {
        dup: 372
    }],
    616: [function(d, g, f) {
        arguments[4][373][0].apply(f, arguments)
    }, {
        "./extend": 617,
        dup: 373
    }],
    617: [function(d, g, f) {
        arguments[4][374][0].apply(f, arguments)
    }, {
        dup: 374
    }],
    618: [function(d, g, f) {
        arguments[4][375][0].apply(f, arguments)
    }, {
        dup: 375
    }],
    619: [function(d, g, f) {
        arguments[4][376][0].apply(f, arguments)
    }, {
        dup: 376
    }],
    620: [function(d, g, f) {
        arguments[4][377][0].apply(f, arguments)
    }, {
        dup: 377
    }],
    621: [function(d, g, f) {
        arguments[4][378][0].apply(f, arguments)
    }, {
        dup: 378
    }],
    622: [function(d, g, f) {
        arguments[4][379][0].apply(f, arguments)
    }, {
        dup: 379,
        qs: 612
    }],
    623: [function(d, g, f) {
        g.exports = {
            Collection: d("./ac-mvc-collection/Collection")
        }
    }, {
        "./ac-mvc-collection/Collection": 624
    }],
    624: [function(y, A, t) {
        var w = y("ac-object"),
            p = y("ac-array"),
            z = y("ac-mvc-cid").CID,
            o = y("ac-event-emitter").EventEmitter;
        var u = ["every", "filter", "forEach", "map", "reduce", "reduceRight", "some", "slice", "sort", "reverse", "indexOf", "lastIndexOf"];
        var q = ["intersection", "union", "unique", "without"];
        var B = {
            add: "add",
            remove: "remove",
            set: "set",
            reset: "reset",
            empty: "empty",
            destroy: "destroy"
        };

        function x(a, d, c, b) {
            if (typeof a[d] !== "undefined") {
                return
            }
            a[d] = (function(g, f) {
                return function() {
                    var h = p.toArray(arguments),
                        i = f.concat(h);
                    return g.apply(this, i)
                }
            }(c, b))
        }

        function v(a) {
            o.call(this);
            this.options = w.defaults(this.defaultOptions, a || {});
            this.models = [];
            this.cid = z.getNewCID();
            if (this.options.ModelType) {
                this.ModelType = this.options.ModelType
            }
            if (this.ModelType) {
                this._modelsObject = {}
            }
            this.on(B.add, this._addToModelsObject, this);
            this.on(B.remove, this._removeFromModelsObject, this);
            if (this.options.models) {
                this.add(this.options.models)
            }
        }
        var r = v.prototype = w.create(o.prototype);
        r.defaultOptions = {};
        r.count = function() {
            if (!this.models) {
                return null
            }
            return this.models.length
        };
        r.add = function(a, b) {
            b = b || {};
            if (typeof a === "undefined") {
                a = []
            }
            a = this._returnAsArray(a);
            a = this._createModels(a);
            if (this.models.length === 0) {
                this.models = a
            } else {
                this.models = this.models.concat(a)
            }
            this._trigger(B.add, {
                models: a
            }, b);
            return this
        };
        r.remove = function(a, c) {
            c = c || {};
            if (!a) {
                return []
            }
            a = this._returnAsArray(a);
            var d = [],
                b, f, g = a.length;
            for (b = 0; b < g; b++) {
                f = this.indexOf(a[b]);
                if (f > -1) {
                    d.push(a[b]);
                    this.spliceWithOptions([f, 1], {
                        silent: true
                    })
                }
            }
            if (d.length > 0) {
                this._trigger(B.remove, {
                    models: d
                }, c)
            }
            return d
        };
        r.reset = function(a, b) {
            b = b || {};
            this.empty(b);
            this.add(a, b);
            this._trigger(B.reset, {
                models: this.models
            }, b);
            return this
        };
        r.empty = function(a) {
            a = a || {};
            var b = this.slice(0);
            this.models = [];
            if (this._modelsObject) {
                this._modelsObject = {}
            }
            if (b.length > 0) {
                this._trigger(B.remove, {
                    models: b
                }, a);
                this._trigger(B.empty, {
                    models: b
                }, a)
            }
            return b
        };
        r.destroy = function(c) {
            c = c || {};
            var a = this.empty(c);
            this._trigger(B.destroy, {
                models: a
            }, c);
            this.off();
            var b;
            for (b in this) {
                if (this.hasOwnProperty(b)) {
                    this[b] = null
                }
            }
        };
        r.get = function(a) {
            var c = this._getModelByID(a);
            if (c) {
                return c
            }
            var b, d = this.models.length;
            for (b = 0; b < d; b++) {
                if ((typeof this.models[b].id !== "undefined" && this.models[b].id === a) || (typeof this.models[b].cid !== "undefined" && this.models[b].cid === a)) {
                    c = this.models[b];
                    break
                }
            }
            return c
        };
        r.set = function(D, f) {
            f = f || {};
            if (typeof D === "undefined") {
                D = []
            }
            D = this._returnAsArray(D);
            var n, h = "id",
                j = D.length,
                i = [],
                c = [],
                a = {},
                g;
            if (this.ModelType && this.ModelType.prototype.idAttribute) {
                h = this.ModelType.prototype.idAttribute
            }
            if (f.matchParameter) {
                h = f.matchParameter
            }
            for (n = 0; n < j; n++) {
                g = null;
                if (typeof D[n] === "object") {
                    g = this.get(D[n][h])
                }
                if (g) {
                    if (this.ModelType) {
                        g.set(D[n]);
                        a[g.cid] = true
                    } else {
                        g = D[n]
                    }
                    c.push(g);
                    continue
                }
                if (this.ModelType) {
                    D[n] = this._createModel(D[n])
                }
                if (this.ModelType || this.indexOf(D[n]) === -1) {
                    i.push(D[n])
                }
                c.push(D[n])
            }
            var b, l = c.length,
                k = [],
                d, m;
            j = this.models.length;
            for (n = 0; n < j; n++) {
                m = this.models[n];
                if (this.ModelType) {
                    d = true;
                    if (a[m.cid]) {
                        d = false
                    }
                } else {
                    d = true;
                    for (b = 0; b < l; b++) {
                        if (m === c[b]) {
                            d = false;
                            break
                        }
                    }
                }
                if (d) {
                    k.push(m)
                }
            }
            this.models = c;
            if (i.length > 0) {
                this._trigger(B.add, {
                    models: i
                }, f)
            }
            if (k.length > 0) {
                this._trigger(B.remove, {
                    models: k
                }, f)
            }
            this._trigger(B.set, {
                models: c
            }, f);
            return k
        };
        r.at = function(a) {
            if (!this.models) {
                return
            }
            return this.models[a]
        };
        r.find = function(i, g) {
            if (typeof i !== "object") {
                console.warn("Collection.protoype.find query needs to be an object");
                return []
            }
            g = g || {};
            var f = [],
                j = false,
                l = 0,
                a, b, d = null,
                h = 0,
                k = this.models.length,
                c = k;
            if (g.reverse) {
                h = k - 1;
                c = -1;
                j = true
            }
            if (g.limit) {
                d = g.limit
            }
            for (b = h;
                (j ? b > c : b < c);
                (j ? b-- : b++)) {
                a = this.models[b];
                if (this._modelMatchesProperties(a, i)) {
                    if (j) {
                        f.unshift(a)
                    } else {
                        f.push(a)
                    }
                    l++;
                    if (d && l >= d) {
                        break
                    }
                }
            }
            return f
        };
        r.push = function() {
            return this.pushWithOptions(p.toArray(arguments))
        };
        r.pop = function() {
            return this.popWithOptions(p.toArray(arguments))
        };
        r.shift = function() {
            return this.shiftWithOptions(p.toArray(arguments))
        };
        r.unshift = function() {
            return this.unshiftWithOptions(p.toArray(arguments))
        };
        r.splice = function() {
            return this.spliceWithOptions(p.toArray(arguments))
        };
        r.pushWithOptions = function(b, c) {
            c = c || {};
            var a = this._createModels(b),
                d = Array.prototype.push.apply(this.models, a);
            if (a.length > 0) {
                this._trigger(B.add, {
                    models: a
                }, c)
            }
            return d
        };
        r.popWithOptions = function(b, c) {
            c = c || {};
            var a = Array.prototype.pop.call(this.models);
            if (a) {
                this._trigger(B.remove, {
                    models: [a]
                }, c)
            }
            return a
        };
        r.shiftWithOptions = function(b, c) {
            c = c || {};
            var a = Array.prototype.shift.call(this.models);
            if (a) {
                this._trigger(B.remove, {
                    models: [a]
                }, c)
            }
            return a
        };
        r.unshiftWithOptions = function(b, c) {
            c = c || {};
            var a = this._createModels(b),
                d = Array.prototype.unshift.apply(this.models, a);
            if (a.length > 0) {
                this._trigger(B.add, {
                    models: a
                }, c)
            }
            return d
        };
        r.spliceWithOptions = function(d, f) {
            f = f || {};
            var c = [d[0], d[1]],
                g, a, b;
            if (d.length > 2) {
                g = d.slice(2, d.length);
                a = this._createModels(g);
                c = c.concat(a)
            }
            b = Array.prototype.splice.apply(this.models, c);
            if (b.length > 0) {
                this._trigger(B.remove, {
                    models: b
                }, f)
            }
            if (a) {
                this._trigger(B.add, {
                    models: a
                }, f)
            }
            return b
        };
        r._trigger = function(c, a, b) {
            b = b || {};
            if (!b.silent) {
                this.trigger(c, a)
            }
        };
        r._getModelByID = function(a) {
            if (this.ModelType && this._modelsObject && this._modelsObject[a]) {
                return this._modelsObject[a]
            }
            return null
        };
        r._createModel = function(a) {
            if (a instanceof this.ModelType || a instanceof v) {
                return a
            }
            return new this.ModelType(a)
        };
        r._createModels = function(c) {
            if (!this.ModelType) {
                return Array.prototype.slice.call(c, 0)
            }
            var d = [],
                b, a, f = c.length;
            for (a = 0; a < f; a++) {
                b = c[a];
                if (!(b instanceof this.ModelType)) {
                    b = this._createModel(b)
                }
                d.push(b)
            }
            return d
        };
        r._modelMatchesProperties = function(c, a) {
            var b;
            for (b in a) {
                if (a.hasOwnProperty(b)) {
                    if (this._getPropFromModel(c, b) !== a[b]) {
                        return false
                    }
                }
            }
            return true
        };
        r._getPropFromModel = function(b, a) {
            if (this.ModelType) {
                return b.get(a)
            }
            return b[a]
        };
        r._addToModelsObject = function(a) {
            if (!this._modelsObject || !a.models) {
                this._modelsObject = {}
            }
            a.models.forEach(function(b) {
                this._modelsObject[b.id] = b;
                this._modelsObject[b.cid] = b
            }, this)
        };
        r._removeFromModelsObject = function(a) {
            if (!this._modelsObject || !a.models) {
                this._modelsObject = {}
            }
            a.models.forEach(function(b) {
                this._modelsObject[b.id] = null;
                this._modelsObject[b.cid] = null
            }, this)
        };
        r._returnAsArray = function(a) {
            if (!Array.isArray(a)) {
                a = [a]
            }
            return a
        };
        r._acArrayProxy = function(a) {
            var b = p.toArray(arguments);
            b[0] = this.models;
            return p[a].apply(p, b)
        };
        r._arrayPrototypeProxy = function(a) {
            var b = p.toArray(arguments);
            b.shift();
            return Array.prototype[a].apply(this.models, b)
        };
        u.forEach(function(a) {
            if (typeof Array.prototype[a] === "function") {
                x(this, a, this._arrayPrototypeProxy, [a])
            }
        }, r);
        q.forEach(function(a) {
            if (typeof p[a] === "function") {
                x(this, a, this._acArrayProxy, [a])
            }
        }, r);
        A.exports = v
    }, {
        "ac-array": 601,
        "ac-event-emitter": 595,
        "ac-mvc-cid": 610,
        "ac-object": 613
    }],
    625: [function(d, g, f) {
        arguments[4][467][0].apply(f, arguments)
    }, {
        "./ac-shared-instance/SharedInstance": 626,
        dup: 467
    }],
    626: [function(d, g, f) {
        arguments[4][468][0].apply(f, arguments)
    }, {
        dup: 468
    }],
    627: [function(d, g, f) {
        arguments[4][469][0].apply(f, arguments)
    }, {
        "./ac-mvc-cid/CID": 628,
        dup: 469
    }],
    628: [function(d, g, f) {
        arguments[4][470][0].apply(f, arguments)
    }, {
        "ac-shared-instance": 625,
        dup: 470
    }],
    629: [function(d, g, f) {
        arguments[4][369][0].apply(f, arguments)
    }, {
        dup: 369
    }],
    630: [function(d, g, f) {
        arguments[4][370][0].apply(f, arguments)
    }, {
        "./ac-object/clone": 631,
        "./ac-object/create": 632,
        "./ac-object/defaults": 633,
        "./ac-object/extend": 634,
        "./ac-object/getPrototypeOf": 635,
        "./ac-object/isDate": 636,
        "./ac-object/isEmpty": 637,
        "./ac-object/isRegExp": 638,
        "./ac-object/toQueryParameters": 639,
        dup: 370
    }],
    631: [function(d, g, f) {
        arguments[4][371][0].apply(f, arguments)
    }, {
        "./extend": 634,
        dup: 371
    }],
    632: [function(d, g, f) {
        arguments[4][372][0].apply(f, arguments)
    }, {
        dup: 372
    }],
    633: [function(d, g, f) {
        arguments[4][373][0].apply(f, arguments)
    }, {
        "./extend": 634,
        dup: 373
    }],
    634: [function(d, g, f) {
        arguments[4][374][0].apply(f, arguments)
    }, {
        dup: 374
    }],
    635: [function(d, g, f) {
        arguments[4][375][0].apply(f, arguments)
    }, {
        dup: 375
    }],
    636: [function(d, g, f) {
        arguments[4][376][0].apply(f, arguments)
    }, {
        dup: 376
    }],
    637: [function(d, g, f) {
        arguments[4][377][0].apply(f, arguments)
    }, {
        dup: 377
    }],
    638: [function(d, g, f) {
        arguments[4][378][0].apply(f, arguments)
    }, {
        dup: 378
    }],
    639: [function(d, g, f) {
        arguments[4][379][0].apply(f, arguments)
    }, {
        dup: 379,
        qs: 629
    }],
    640: [function(d, g, f) {
        arguments[4][482][0].apply(f, arguments)
    }, {
        "./ac-mvc-model/Model": 641,
        dup: 482
    }],
    641: [function(d, g, f) {
        arguments[4][483][0].apply(f, arguments)
    }, {
        "ac-event-emitter": 595,
        "ac-mvc-cid": 627,
        "ac-object": 630,
        dup: 483
    }],
    642: [function(f, h, g) {
        function i(a, c) {
            var b = a.mass;
            return {
                equilibrium: c,
                stiffness: -30,
                damping: -8,
                update: function(n) {
                    var p;
                    if (n.fps === 0) {
                        return
                    }
                    p = 1 / n.fps;
                    var o = this.stiffness * ((a.position.x - 0) - this.equilibrium);
                    var d = this.damping * a.velocity.x;
                    var q = (o + d) / b;
                    a.velocity.x += q * p;
                    a.position.x += a.velocity.x * p
                }
            }
        }
        h.exports = {
            create: i
        }
    }, {}],
    643: [function(d, g, f) {
        arguments[4][461][0].apply(f, arguments)
    }, {
        "./ac-routes/Route": 644,
        "./ac-routes/Routes": 645,
        dup: 461
    }],
    644: [function(d, g, f) {
        arguments[4][462][0].apply(f, arguments)
    }, {
        dup: 462
    }],
    645: [function(d, g, f) {
        arguments[4][463][0].apply(f, arguments)
    }, {
        "./Route": 644,
        dup: 463
    }],
    646: [function(k, j, g) {
        function h(a) {
            this.options = a || {}
        }
        var i = h.prototype;
        i.onExit = function() {};
        i.onEnter = function() {};
        j.exports = h
    }, {}],
    647: [function(n, m, i) {
        var o = n("ac-object");
        var k = n("ac-event-emitter").EventEmitter;

        function j(a) {
            this.options = a || {};
            this.previousState = null;
            this.currentState = a.currentState || null
        }
        var l = j.prototype = o.create(k.prototype);
        l.handleInput = function(b, a) {
            var c = this.currentState[b];
            if (typeof c === "function") {
                return this.currentState[b](this, a)
            }
        };
        l.gotoPreviousState = function(a) {
            this.changeState(this.previousState, a)
        };
        l.changeState = function(a, b) {
            this.previousState = this.currentState;
            this.currentState = a;
            var c = [this.previousState.onExit(this, b), this.currentState.onEnter(this, b)];
            return Promise.all(c)
        };
        m.exports = j
    }, {
        "ac-event-emitter": 595,
        "ac-object": 713
    }],
    648: [function(d, g, f) {
        g.exports = {
            StateMachine: d("./StateMachine"),
            State: d("./State")
        }
    }, {
        "./State": 646,
        "./StateMachine": 647
    }],
    649: [function(h, m, i) {
        var j = h("./ac-gallery/Gallery");
        var k = h("./ac-gallery/SlideGallery");
        var l = h("./ac-gallery/FadeGallery");
        m.exports = {
            Gallery: j,
            SlideGallery: k,
            FadeGallery: l
        }
    }, {
        "./ac-gallery/FadeGallery": 650,
        "./ac-gallery/Gallery": 651,
        "./ac-gallery/SlideGallery": 652
    }],
    650: [function(o, n, j) {
        var k = o("./Gallery");
        var i = o("ac-eclipse").Clip;
        var m = o("ac-dom-styles/setStyle");
        var l = k.extend({
            initialize: function() {
                this._boundCreateClip = this._createClip.bind(this);
                this.canSpring = false
            },
            _createClip: function(b, f, a, g, c) {
                var d = new i(b, a, {
                    opacity: 1
                }, {
                    onStart: function() {
                        m(f, {
                            zIndex: 1
                        });
                        m(b, {
                            zIndex: 2
                        })
                    },
                    onComplete: function() {
                        m(f, {
                            opacity: 0
                        });
                        window.requestAnimationFrame(c)
                    },
                    ease: g
                });
                return d
            },
            drawInitial: function(a) {
                var b = a.get("element");
                m(b, {
                    zIndex: 2,
                    opacity: 1
                });
                this.model.forEach(function(c) {
                    if (c !== a) {
                        m(c.get("element"), {
                            zIndex: 1,
                            opacity: 0
                        })
                    }
                }, this)
            },
            draw: function(f, c, d) {
                var a = f.get("element");
                var b = c.get("element");
                var g = d.easing || this.getEasing();
                var h = d.duration || this.getDuration();
                return new Promise(function(t, u) {
                    var v = this._createClip(a, b, h, g, t);
                    v.play()
                }.bind(this))
            },
            destroy: function() {
                this._boundCreateClip = null
            }
        });
        n.exports = l
    }, {
        "./Gallery": 651,
        "ac-dom-styles/setStyle": 132,
        "ac-eclipse": 575
    }],
    651: [function(F, G, B) {
        var D = F("ac-object/defaults");
        var w = F("ac-object/create");
        var u = F("ac-object/extend");
        var v = F("./model/GalleryCollection");
        var r = F("ac-event-emitter").EventEmitter;
        var H = F("ac-routes").Routes;
        var t = F("ac-state-machine").StateMachine;
        var C = F("./states/factory");
        var y = 'Could not create gallery: "id" is missing';
        var A = 'Could not create gallery: "el" was not specified';
        var E = {
            duration: 0.4,
            easing: "linear",
            endless: false,
            initial: 0
        };

        function x(a) {
            this.options = D(E, a || {});
            this.id = this.options.id;
            if (!this.id) {
                throw new Error(y)
            }
            this.model = this.options.model || new v();
            this.model.setSelected(this.options.initial);
            this.stateMachine = new t({
                currentState: C.create("initialize", this)
            });
            this.routes = a.routes || new H();
            this.routes.add(this.routes.createRoute(this.id + "/show/:id", this.show, this));
            this.routes.add(this.routes.createRoute(this.id + "/previous", this.showPrevious, this));
            this.routes.add(this.routes.createRoute(this.id + "/next", this.showNext, this));
            this.el = this.options.el;
            if (!this.el) {
                throw new Error(A)
            }
            this.easing = this.options.easing || this.easing;
            this.duration = this.options.duration || this.duration;
            this.initialize(a);
            this.show(this.model.getSelected())
        }
        var z = x.prototype = w(r.prototype);
        z.sendGalleryEvent = function(a) {
            this.trigger(a.type, a.data)
        };
        z.easing = "linear";
        z.duration = 0.4;
        z.getSlideAt = function(a) {
            return this.model.at(a)
        };
        z.setDuration = function(a) {
            this.duration = a
        };
        z.getDuration = function() {
            return this.duration
        };
        z.setEasing = function(a) {
            this.easing = a
        };
        z.getEasing = function() {
            return this.easing
        };
        z.cancelDraw = function() {};
        z.initialize = function() {};
        z.drawInitial = function() {};
        z.beforeDraw = function() {};
        z.draw = function() {};
        z.afterDraw = function() {};
        z.destroy = function() {};
        z.drawBounceInProgress = function() {};
        z.drawBounceOutProgress = function() {};
        z.drawProgress = function() {};
        z.drawSnap = function() {};
        z.drawResize = function() {};
        z.removeStyles = function() {};
        z.resize = function() {};
        z.setProgress = function(a) {
            this.stateMachine.handleInput("seek", {
                progress: a
            })
        };
        z.snap = function(a) {
            this.stateMachine.handleInput("pointerUp", {
                progress: a
            })
        };
        z.getSelected = function() {
            return this.model.getSelected()
        };
        z.getItems = function() {
            return this.model.models
        };
        z.setEngaged = function(a) {
            this.stateMachine.handleInput("engagementChange", {
                engaged: a
            })
        };
        z.slideAt = function() {
            var a = this.model.at.apply(this.model, arguments);
            if (!a) {
                return null
            }
            return a
        };
        z.getPreviousState = function() {
            return this.stateMachine.previousState
        };
        z.getCurrentState = function() {
            return this.stateMachine.currentState
        };
        z.isEndless = function() {
            return this.model.isEndless()
        };
        z.indexOf = function(a) {
            return this.model.indexOf(a)
        };
        z.count = function() {
            return this.model.count()
        };
        z.getNext = function() {
            return this.model.getNext()
        };
        z.getPrevious = function() {
            return this.model.getPrevious()
        };
        z.getSelectedIndex = function() {
            return this.model.indexOfSelected()
        };
        z.showNext = function(b) {
            var a = this.model.getNext();
            return this.show(a, b)
        };
        z.showPrevious = function(b) {
            var a = this.model.getPrevious();
            return this.show(a, b)
        };
        z.getLastIndex = function() {
            return this.model.count() - 1
        };
        z.getLast = function() {
            return this.model.getLast()
        };
        z.getFirst = function() {
            return this.model.at(0)
        };
        z.show = function(a, b) {
            this.stateMachine.handleInput("onDraw", {
                query: a,
                options: b
            })
        };
        z.clear = function() {
            this.stateMachine.handleInput("onClear")
        };
        z.dealloc = function() {
            this.stateMachine.handleInput("onDealloc")
        };
        x.create = F("./factory/create");
        x.extend = function(a) {
            var b = this;
            var c = function() {
                b.apply(this, arguments)
            };
            var d = w(this.prototype);
            c.prototype = u(d, a);
            u(c, this);
            return c
        };
        G.exports = x
    }, {
        "./factory/create": 654,
        "./model/GalleryCollection": 660,
        "./states/factory": 670,
        "ac-event-emitter": 595,
        "ac-object/create": 709,
        "ac-object/defaults": 710,
        "ac-object/extend": 711,
        "ac-routes": 643,
        "ac-state-machine": 648
    }],
    652: [function(z, B, x) {
        var r = z("./Gallery");
        var t = z("ac-eclipse").Clip;
        var v = z("ac-dom-styles/setStyle");
        var u = z("ac-dom-metrics/getDimensions");
        var p = z("ac-dom-events/addEventListener");
        var o = z("ac-dom-events/removeEventListener");
        var w = z("./SlideGallery/feature-detect");
        var y = z("./model/SlideGalleryTransformData");
        var q = "Could not create SlideGallery: no `slideEl` option was specified";
        var A = r.extend({
            _bounceInClip: null,
            _bounceOutClip: null,
            _getBounceInClip: function() {
                if (this._bounceInClip !== null) {
                    return this._bounceInClip
                }
                var a = this._getTransformStyles(this.getFirst(), this.getFirst(), {
                    addDistance: u(this.options.el).width
                });
                var b = this._getTransformStyles(this.getFirst(), this.getLast());
                this._bounceInClip = new t(this.options.slideEl, this.getDuration() * this.count(), a, {
                    ease: "linear",
                    propsFrom: b
                });
                return this._bounceInClip
            },
            _getBounceOutClip: function() {
                if (this._bounceOutClip !== null) {
                    return this._bounceOutClip
                }
                var a = this._getTransformStyles(this.getLast(), this.getFirst(), {
                    addDistance: -u(this.options.el).width
                });
                var b = this._getTransformStyles(this.getLast(), this.getFirst());
                this._bounceOutClip = new t(this.options.slideEl, this.getDuration(), a, {
                    ease: "linear",
                    propsFrom: b
                });
                return this._bounceOutClip
            },
            _renderProgress: function(a, b) {
                a.setProgress(b)
            },
            _clip: null,
            _toClip: function() {
                if (this._clip) {
                    return this._clip
                }
                var a = this._getTransformStyles(this.getLast(), this.getFirst());
                var b = this._getTransformStyles(this.getFirst(), this.getLast());
                this._clip = new t(this.options.slideEl, this.getDuration(), a, {
                    ease: "linear",
                    propsFrom: b
                });
                return this._clip
            },
            initialize: function(a) {
                if (!a.slideEl) {
                    throw new Error(q)
                }
            },
            drawBounceOutProgress: function(b) {
                var a = this._getBounceOutClip();
                this._renderProgress(a, b)
            },
            drawBounceInProgress: function(b) {
                var a = this._getBounceInClip();
                this._renderProgress(a, b)
            },
            drawProgress: function(b) {
                var a = this._toClip();
                return this._renderProgress(a, b)
            },
            drawInitial: function(a) {
                this.drawSnap(a)
            },
            drawSnap: function(f, b, c) {
                var a = this._toClip();
                var g = this.indexOf(f);
                var d = g / (this.count() - 1);
                a.setProgress(d)
            },
            removeStyles: function() {
                v(this.options.slideEl, {
                    transition: null,
                    transform: null
                })
            },
            drawResize: function(c, a, b) {
                this._clip = null;
                this.drawSnap(c, a, b)
            },
            _getTransitionProp: function() {
                if (w.canUseTransform()) {
                    return "transform"
                }
                return "left"
            },
            _transitionEndString: "transitionend",
            _drawCSSTransition: function(c, a, b) {
                var d = this._getTransitionProp();
                return new Promise(function(f, g) {
                    var h = function(i) {
                        if (i.target === this.options.slideEl) {
                            v(this.options.slideEl, {
                                transition: null
                            });
                            o(this.options.slideEl, this._transitionEndString, h);
                            f()
                        }
                    }.bind(this);
                    p(this.options.slideEl, this._transitionEndString, h);
                    c.transition = d + " " + b + "s " + a;
                    v(this.options.slideEl, c)
                }.bind(this))
            },
            _drawRAFTransition: function(c, a, b) {
                return new Promise(function(d, f) {
                    var g = new t(this.options.slideEl, b, c, {
                        easing: a,
                        onComplete: d,
                        inlineStyles: true
                    });
                    g.play()
                }.bind(this))
            },
            _getTransformStyles: function(d, a, b) {
                var c = new y(this, d, a, b);
                c.calculate();
                c.setStyles(this.didCalculateStyles(c.styles, d, a));
                return c.renderStylesObject()
            },
            didCalculateStyles: function(a, c, b) {
                return a
            },
            draw: function(g, d, f) {
                var b = f.duration || this.getDuration();
                var a = f.easing || this.getEasing();
                var c = this._getTransformStyles(g, d);
                if (w.canUseCSSTransitions()) {
                    return this._drawCSSTransition(c, a, b)
                } else {
                    return this._drawRAFTransition(c, a, b)
                }
            },
            destroy: function() {
                this.removeStyles();
                this._bounceInClip = null;
                this._bounceOutClip = null;
                this._clip = null
            }
        });
        B.exports = A
    }, {
        "./Gallery": 651,
        "./SlideGallery/feature-detect": 653,
        "./model/SlideGalleryTransformData": 662,
        "ac-dom-events/addEventListener": 65,
        "ac-dom-events/removeEventListener": 73,
        "ac-dom-metrics/getDimensions": 82,
        "ac-dom-styles/setStyle": 132,
        "ac-eclipse": 575
    }],
    653: [function(i, h, f) {
        var g = i("ac-feature/cssPropertyAvailable");
        h.exports = {
            canUseCSSTransitions: function() {
                return g("transition")
            },
            canUseTransform: function() {
                return g("transform")
            }
        }
    }, {
        "ac-feature/cssPropertyAvailable": 208
    }],
    654: [function(H, K, w) {
        var I = H("./../model/GalleryCollection");
        var G = H("ac-object/defaults");
        var B = H("ac-dom-nodes/isElement");
        var E = H("./../inputs/pointer");
        var A = H("./../inputs/Trigger");
        var v = H("./../inputs/Keyboard");
        var u = H("./../inputs/Engagement");
        var J = H("./../inputs/resize");
        var x = H("./../observer/analytics");
        var D = H("./../observer/trigger");
        var y = "Could not create gallery: triggerSelector should be a string";
        var F = 'Could not create gallery: no "model" was specified';
        var z = {
            keyboard: true,
            trigger: {
                events: ["click"]
            }
        };

        function C(a, b) {
            b = b || {};
            b.models = a.map(function(c) {
                if (B(c)) {
                    return {
                        id: c.id,
                        element: c
                    }
                }
                return c
            });
            return new I(b)
        }
        K.exports = function L(g) {
            g = g || {};
            g = G(z, g);
            if (!g.model) {
                throw new Error(F)
            }
            g.model = C(g.model, {
                endless: g.endless
            });
            var i = new this(g);
            var b = {};
            var h = {};
            b.resize = J(i, g.resize);
            if (g.pointer) {
                var c = g.pointer;
                c.element = c.el || i.el;
                b.pointer = E(i, c)
            }
            if (g.triggerSelector) {
                if (typeof g.triggerSelector !== "string") {
                    throw new Error(y)
                } else {
                    b.trigger = A(i, {
                        selector: g.triggerSelector,
                        events: g.trigger.events
                    });
                    h.trigger = D(i, {
                        selector: g.triggerSelector
                    })
                }
            }
            if (g.keyboard === true) {
                i.keyboard = v(i)
            }
            var d = g.engagementElement || i.el;
            b.engagement = u(i, {
                el: d
            });
            var a = i.id;
            if (i.el && i.el.getAttribute("data-analytics-id")) {
                a = i.el.getAttribute("data-analytics-id")
            }
            var f = {
                galleryName: a
            };
            x(i, f);
            i.inputs = b;
            i.observers = h;
            return i
        }
    }, {
        "./../inputs/Engagement": 655,
        "./../inputs/Keyboard": 656,
        "./../inputs/Trigger": 657,
        "./../inputs/pointer": 658,
        "./../inputs/resize": 659,
        "./../model/GalleryCollection": 660,
        "./../observer/analytics": 664,
        "./../observer/trigger": 665,
        "ac-dom-nodes/isElement": 113,
        "ac-object/defaults": 710
    }],
    655: [function(o, n, i) {
        var k = o("ac-element-tracker").ElementTracker;
        var m = o("ac-object/create");
        var j = {
            handleEngagementChange: function(a) {
                this.stateMachine.handleInput("engagementChange", {
                    engaged: a
                })
            },
            isNotEngaged: function() {
                this.handleEngagementChange(false)
            },
            isEngaged: function() {
                this.handleEngagementChange(true)
            },
            onEnterView: function() {
                this.isEngaged()
            },
            onExitView: function() {
                this.isNotEngaged()
            }
        };
        n.exports = function l(f, d) {
            d = d || {};
            var b = new k();
            var c = b.addElement(d.el);
            var a = m(j);
            a.stateMachine = f.stateMachine;
            b.refreshElementState(c);
            if (c.inView) {
                a.onEnterView()
            } else {
                a.onExitView()
            }
            c.on("enterview", a.onEnterView, a);
            c.on("exitview", a.onExitView, a);
            b.start();
            f.once("destroy", function() {
                c.off("enterview", a.onEnterView, a);
                c.off("exitview", a.onExitView, a);
                b = null;
                c = null
            });
            return a
        }
    }, {
        "ac-element-tracker": "ac-element-tracker",
        "ac-object/create": 709
    }],
    656: [function(o, n, p) {
        var l = o("ac-dom-events/addEventListener");
        var j = o("ac-dom-events/removeEventListener");
        var m = o("ac-object/create");
        var q = {
            keyDown: function(a) {
                this.stateMachine.handleInput("keydown", {
                    interactionEvent: a
                })
            }
        };
        n.exports = function k(b, a) {
            a = a || {};
            var d = m(q);
            d.stateMachine = b.stateMachine;
            var c = function(f) {
                d.keyDown(f)
            };
            l(document, "keydown", c);
            b.once("destroy", function() {
                j(document, "keydown", c);
                c = null
            });
            return d
        }
    }, {
        "ac-dom-events/addEventListener": 65,
        "ac-dom-events/removeEventListener": 73,
        "ac-object/create": 709
    }],
    657: [function(w, x, v) {
        var o = w("ac-dom-events/addEventListener");
        var m = w("ac-dom-events/removeEventListener");
        var q = w("ac-dom-events");
        var p = w("ac-object/create");
        var n = w("ac-dom-traversal/matchesSelector");
        var t = w("ac-dom-traversal/ancestor");
        var r = {
            triggerInteraction: function(c) {
                var a = q.target(c);
                var b = null;
                if (n(a, this.selector)) {
                    b = a
                } else {
                    if (n(a, this.selector + " *")) {
                        b = t(a, this.selector)
                    }
                }
                if (b) {
                    q.preventDefault(c);
                    this.stateMachine.handleInput("trigger", {
                        interactionEvent: c,
                        target: b
                    })
                }
            }
        };
        x.exports = function u(a, c) {
            var d = p(r);
            d.selector = c.selector;
            d.stateMachine = a.stateMachine;
            var b = function(f) {
                d.triggerInteraction(f)
            };
            c.events.forEach(function(f) {
                o(document, f, b)
            });
            a.once("destroy", function() {
                c.events.forEach(function(f) {
                    m(document, f, b)
                });
                d = null
            });
            return d
        }
    }, {
        "ac-dom-events": 67,
        "ac-dom-events/addEventListener": 65,
        "ac-dom-events/removeEventListener": 73,
        "ac-dom-traversal/ancestor": 552,
        "ac-dom-traversal/matchesSelector": 555,
        "ac-object/create": 709
    }],
    658: [function(q, p, j) {
        var m = q("ac-gesture/PointerMove");
        var o = q("ac-object/create");
        var l = {
            onPointerMove: function(a) {
                this.stateMachine.handleInput("pointerMove", {
                    interactionEvent: a
                })
            },
            onPointerDown: function(a) {
                var b = {
                    interactionEvent: a,
                    element: this.gesture.element
                };
                this.stateMachine.handleInput("pointerDown", b)
            },
            onPointerUp: function(a) {
                this.stateMachine.handleInput("pointerUp", {
                    interactionEvent: a
                })
            }
        };
        var n = {
            interactions: [],
            handledDown: false,
            isMovingHorizontal: function() {
                if (this.interactions.length < 4) {
                    return null
                }
                var g = this.interactions[0];
                var b = this.interactions[this.interactions.length - 1];
                var f = b.pageX - g.pageX;
                var h = b.pageY - g.pageY;
                var c = Math.atan2(h, f);
                var i = c * (180 / Math.PI);
                var d = 75;
                var a = Math.abs(i) < d || Math.abs(i) > (180 - d);
                return a
            },
            onPointerMove: function(a) {
                if (this.interactions.length < 4) {
                    this.interactions.push(a);
                    return
                }
                if (this.isMovingHorizontal()) {
                    if (!this.handledDown) {
                        this.handledDown = true;
                        this.parent.onPointerDown(this.interactions[0])
                    }
                    this.parent.onPointerMove(a)
                }
            },
            onPointerDown: function(a) {
                this.interactions.push(a)
            },
            onPointerUp: function(a) {
                if (this.handledDown === true) {
                    this.parent.onPointerUp(a)
                }
                this.interactions = [];
                this.handledDown = false
            }
        };
        p.exports = function k(d, c) {
            c = c || {};
            var b = m.create(c.element, c);
            var f = o(l);
            f.stateMachine = d.stateMachine;
            f.gesture = b;
            var a = o(n);
            a.parent = f;
            b.on("start", function(g) {
                a.onPointerDown(g)
            });
            b.on("move", function(g) {
                a.onPointerMove(g)
            });
            b.on("end", function(g) {
                a.onPointerUp(g)
            });
            b.on("cancel", function(g) {
                a.onPointerUp(g)
            });
            b.activate();
            d.once("destroy", function() {
                b.off();
                b._removeAllListeners();
                b.destroy();
                b = null
            });
            return a
        }
    }, {
        "ac-gesture/PointerMove": 599,
        "ac-object/create": 709
    }],
    659: [function(p, o, q) {
        var j = p("ac-function/debounce");
        var m = p("ac-dom-events/addEventListener");
        var k = p("ac-dom-events/removeEventListener");
        var n = p("ac-object/create");
        var l = {
            resize: function(a) {
                this.stateMachine.handleInput("resize", a)
            }
        };
        o.exports = function(c, a) {
            a = a || {};
            if (typeof a.debounceTimeout === "number") {
                a.debounceTimeout = a.debounceTimeout
            } else {
                a.debounceTimeout = 300
            }
            var b = n(l);
            b.stateMachine = c.stateMachine;
            var f = j(function(g) {
                b.resize(g)
            }, a.debounceTimeout);
            m(window, "resize", f);

            function d() {
                k(window, "resize", f);
                f = null
            }
            c.once("destroy", d);
            return b
        }
    }, {
        "ac-dom-events/addEventListener": 65,
        "ac-dom-events/removeEventListener": 73,
        "ac-function/debounce": 597,
        "ac-object/create": 709
    }],
    660: [function(q, p, j) {
        var n = q("ac-mvc-collection").Collection;
        var l = q("ac-mvc-model").Model;
        var o = q("ac-object/create");

        function k() {
            n.apply(this, arguments);
            this._selected = null
        }
        var m = k.prototype = o(n.prototype);
        m.ModelType = l;
        m.query = function(a) {
            var b;
            if (typeof a === "number") {
                b = this.at(a)
            } else {
                if (typeof a === "string") {
                    b = this.get(a)
                } else {
                    if (this.indexOf(a) !== -1) {
                        b = a
                    }
                }
            }
            return b
        };
        m.isEndless = function() {
            return !!this.options.endless
        };
        m.getPrevious = function() {
            var b = this.indexOf(this._selected) - 1;
            var a;
            if (this.isEndless() === true && b < 0) {
                b = this.models.length - 1
            }
            a = this.models[b];
            if (a === undefined) {
                a = null
            }
            return a
        };
        m.getNext = function() {
            var b = this.indexOf(this._selected) + 1;
            var a;
            if (this.isEndless() === true && b === this.models.length) {
                b = 0
            }
            a = this.at(b);
            if (a === undefined) {
                a = null
            }
            return a
        };
        m.getFirst = function() {
            return this.at(0)
        };
        m.getLast = function() {
            return this.at(this.models.length - 1)
        };
        m.count = function() {
            return this.models.length
        };
        m.setSelected = function(a) {
            this._selected = this.query(a)
        };
        m.getSelected = function() {
            return this._selected
        };
        m.indexOfSelected = function() {
            return this.indexOf(this._selected)
        };
        p.exports = k
    }, {
        "ac-mvc-collection": 623,
        "ac-mvc-model": 640,
        "ac-object/create": 709
    }],
    661: [function(m, l, h) {
        var j = "Could not trigger event: Event data is invalid";

        function k(b, a) {
            a = a || {};
            this.data = a || {};
            this.type = b
        }

        function i(a) {
            if (!a || !a.incoming || !a.outgoing) {
                throw new TypeError(j)
            }
        }
        k.create = function(b, a) {
            return new k(b, a)
        };
        k.createWillShowEvent = function(a) {
            i(a);
            return new k("willShow", a)
        };
        k.createDidShowEvent = function(a) {
            i(a);
            return new k("didShow", a)
        };
        l.exports = k
    }, {}],
    662: [function(n, m, o) {
        var k = n("./../SlideGallery/feature-detect");
        var i = n("ac-dom-metrics/getDimensions");

        function j(c, d, a, b) {
            this.gallery = c;
            this.incoming = d;
            this.outgoing = a;
            this.options = b || {};
            this.styles = {}
        }
        var l = j.prototype;
        l._getTranslateXDistance = function(d) {
            var c = this.gallery.indexOf(d);
            var a = 0;
            for (var b = 0; b < c; b += 1) {
                a += i(this.gallery.slideAt(b).get("element")).width
            }
            return -a
        };
        l._convertTranslateXToLeftIfNoTransformSupport = function() {
            if (!k.canUseTransform()) {
                this.styles.left = this.styles.transform.translateX;
                this.styles.transform = undefined
            }
        };
        l.calculate = function() {
            var a = this._getTranslateXDistance(this.incoming);
            this.styles = this._buildTransformObject(a)
        };
        l.setStyles = function(a) {
            this.styles = a
        };
        l._buildTransformObject = function(a) {
            return {
                transform: {
                    translateX: a,
                    translateZ: 0
                }
            }
        };
        l._addUnits = function() {
            if (!/px/.test(this.styles.transform.translateX)) {
                this.styles.transform.translateX += "px"
            }
        };
        l.renderStylesObject = function() {
            if (typeof this.options.addDistance === "number") {
                this.styles.transform.translateX = parseInt(this.styles.transform.translateX) + this.options.addDistance
            }
            if (this.options.invert === true) {
                this.styles.transform.translateX = -(parseInt(this.styles.transform.translateX))
            }
            this._addUnits();
            this._convertTranslateXToLeftIfNoTransformSupport();
            return this.styles
        };
        m.exports = j
    }, {
        "./../SlideGallery/feature-detect": 653,
        "ac-dom-metrics/getDimensions": 82
    }],
    663: [function(g, k, h) {
        function i(a) {
            this.options = a || {};
            this._interactions = [];
            this._particle = this.options.particle;
            this.pixelDistance = this.options.pixelDistance;
            this.distance = this.options.distance
        }
        var j = i.prototype;
        j.destroy = function() {
            this._particle = null
        };
        j._updateFromInteraction = function() {
            if (this._interactions.length < 2) {
                return
            }
            var b = this._interactions[0];
            var c = this._interactions[1];
            var a = -(c.pageX - b.pageX);
            var n = this.pixelDistance;
            var d = this.distance;
            var o = a / n;
            var f = (d * o);
            this._particle.velocity = {
                x: f,
                y: f
            };
            this._particle.position.x += this._particle.velocity.x;
            this._particle.position.y += this._particle.velocity.y;
            this._removeInteraction()
        };
        j._onUpdate = function(a) {
            this._updateFromInteraction()
        };
        j._removeInteraction = function() {
            this._interactions.shift()
        };
        j.addInteraction = function(a) {
            if (this._interactions.length === 2) {
                this._removeInteraction()
            }
            this._interactions.push(a);
            this._onUpdate()
        };
        j.onPointerDown = function(a) {
            this.addInteraction(a)
        };
        j.onPointerMove = function(a) {
            a.preventDefault();
            this.addInteraction(a)
        };
        j.onPointerUp = function(a) {
            this._interactions = []
        };
        j.isMovingHorizontally = function() {
            if (this._interactions.length < 4) {
                return null
            }
            var b = this._interactions[0];
            var f = this._interactions[this._interactions.length - 1];
            var a = f.x - b.x;
            var c = f.y - b.y;
            var m = Math.atan2(c, a);
            var d = m * (180 / Math.PI);
            return (d < 15)
        };
        k.exports = i
    }, {}],
    664: [function(m, l, h) {
        var k;
        try {
            k = m("ac-analytics").observer.Gallery
        } catch (j) {}
        l.exports = function i(b, c) {
            if (!k) {
                return
            }
            var a = new k(b, c);
            b.once("destroy", function() {
                if (a.gallery) {
                    a.removeListener()
                }
                a = null
            })
        }
    }, {
        "ac-analytics": "ac-analytics"
    }],
    665: [function(r, t, q) {
        var m = r("ac-object/create");
        var u = r("ac-dom-traversal/querySelectorAll");
        var n = r("ac-classlist/add");
        var p = r("ac-classlist/remove");
        var v = "current";
        var l = "disabled";
        var o = {
            paintPaddleNavs: function(b, a) {
                if (this.gallery.isEndless()) {
                    return
                }
                if (b === this.gallery.getFirst()) {
                    this.disablePreviousPaddles()
                } else {
                    if (a && a === this.gallery.getFirst()) {
                        this.enablePreviousPaddles()
                    }
                }
                if (b === this.gallery.getLast()) {
                    this.disableNextPaddles()
                } else {
                    if (a && a === this.gallery.getLast()) {
                        this.enableNextPaddles()
                    }
                }
            },
            generateFullSelector: function(a, b) {
                return this.selector + '[href="#' + a + "/show/" + b + '"]'
            },
            addClassNameToElements: function(a, b) {
                a.forEach(function(c) {
                    n(c, b)
                })
            },
            removeClassNameFromElements: function(a, b) {
                a.forEach(function(c) {
                    p(c, b)
                })
            },
            getElementsPointingToSlide: function(a) {
                var b = this.generateFullSelector(this.gallery.id, a.id);
                return u(b)
            },
            getNextPaddleNavs: function() {
                var a = this.selector + '[href="#' + this.gallery.id + '/next"]';
                return u(a)
            },
            getPreviousPaddleNavs: function() {
                var a = this.selector + '[href="#' + this.gallery.id + '/previous"]';
                return u(a)
            },
            disableNextPaddles: function() {
                var a = this.getNextPaddleNavs();
                this.addClassNameToElements(a, l)
            },
            enableNextPaddles: function() {
                var a = this.getNextPaddleNavs();
                this.removeClassNameFromElements(a, l)
            },
            disablePreviousPaddles: function() {
                var a = this.getPreviousPaddleNavs();
                this.addClassNameToElements(a, l)
            },
            enablePreviousPaddles: function() {
                var a = this.getPreviousPaddleNavs();
                this.removeClassNameFromElements(a, l)
            },
            onWillShow: function(b) {
                var a = this.getElementsPointingToSlide(b.incoming);
                this.addClassNameToElements(a, v);
                var c = this.getElementsPointingToSlide(b.outgoing);
                this.removeClassNameFromElements(c, v);
                if (this.gallery.isEndless()) {
                    return
                }
                if (b.incoming === this.gallery.getFirst()) {
                    this.disablePreviousPaddles()
                } else {
                    if (b.outgoing === this.gallery.getFirst()) {
                        this.enablePreviousPaddles()
                    }
                }
                if (b.incoming === this.gallery.getLast()) {
                    this.disableNextPaddles()
                } else {
                    if (b.outgoing === this.gallery.getLast()) {
                        this.enableNextPaddles()
                    }
                }
                this.paintPaddleNavs(b.incoming, b.outgoing)
            },
            onReady: function() {
                var a = this.gallery.getSelected();
                var b = u(this.selector);
                this.removeClassNameFromElements(b, v);
                var c = this.getElementsPointingToSlide(a);
                this.addClassNameToElements(c, v);
                this.paintPaddleNavs(a)
            }
        };
        t.exports = function(b, c) {
            c = c || {};
            var a = m(o);
            a.selector = c.selector;
            a.gallery = b;
            b.on("willShow", a.onWillShow, a);
            b.once("ready", a.onReady, a);
            b.once("destroy", function() {
                b.off("willShow", a.onWillShow, a);
                b.off("ready", a.onReady, a);
                var d = a.getElementsPointingToSlide(b.getSelected());
                a.removeClassNameFromElements(d, v);
                a = null
            });
            return a
        }
    }, {
        "ac-classlist/add": 10,
        "ac-classlist/remove": 18,
        "ac-dom-traversal/querySelectorAll": 556,
        "ac-object/create": 709
    }],
    666: [function(q, p, j) {
        var k = q("ac-state-machine").State;
        var o = q("ac-object/create");
        var l = q("./factory");
        var m = function(b, a) {
            k.apply(this, arguments);
            this.gallery = b;
            this.options = a || {}
        };
        var n = m.prototype = o(k.prototype);
        n.onDealloc = function(a, b) {
            a.changeState(l.create("dealloc", this.gallery), b)
        };
        p.exports = m
    }, {
        "./factory": 670,
        "ac-object/create": 709,
        "ac-state-machine": 648
    }],
    667: [function(i, o, j) {
        var l = i("./GalleryState");
        var n = i("ac-object/create");
        var k = function() {
            l.apply(this, arguments)
        };
        var m = k.prototype = n(l.prototype);
        m.name = "dealloc";
        m.onEnter = function(a, b) {
            this.gallery.destroy();
            this.gallery.trigger("destroy");
            this.gallery.off()
        };
        o.exports = k
    }, {
        "./GalleryState": 666,
        "ac-object/create": 709
    }],
    668: [function(r, t, o) {
        var p = r("./GalleryState");
        var m = r("ac-object/create");
        var k = r("./../model/UserDrag");
        var q = r("./factory");

        function l() {
            p.apply(this, arguments);
            this.index = (typeof this.options.startIndex === "number") ? this.options.startIndex : this.gallery.getSelectedIndex();
            this.count = this.gallery.count();
            this.stops = this._generateStops();
            this.particle = this.options.particle || this._createParticle();
            this.distance = this.stops[1]
        }
        var n = l.prototype = m(p.prototype);
        n.name = "dragging";
        n._createParticle = function() {
            return {
                position: {
                    x: this.stops[this.index],
                    y: this.stops[this.index]
                },
                mass: 0.5
            }
        };
        n._generateStops = function() {
            var a = this.count - 1;
            var b = [];
            var c = 0;
            while (c <= a) {
                b.push(c / a);
                c += 1
            }
            return b
        };
        n.onEnter = function(a, b) {
            if (a.previousState.name !== "seeking") {
                this.userDragModel = new k({
                    pixelDistance: b.element.offsetWidth,
                    startIndex: this.startIndex,
                    count: this.count,
                    particle: this.particle,
                    distance: this.distance
                });
                this.userDragModel.onPointerDown(b.interactionEvent);
                a.changeState(q.create("seeking", this.gallery), {
                    progress: this.particle.position.x
                })
            }
        };
        n.onExit = function(a, b) {
            if (a.currentState.name !== "seeking") {
                this.userDragModel.destroy();
                this.userDragModel = null;
                this.boundOnPointerComplete = null;
                this.gallery = null
            }
        };
        n.pointerMove = function(a, b) {
            this.userDragModel.onPointerMove(b.interactionEvent);
            var c = this.particle.position;
            a.changeState(q.create("seeking", this.gallery), {
                progress: c.x
            })
        };
        n.getNextPosition = function() {
            var a = this.index;
            if (this.particle.velocity.x > 0) {
                a += 1;
                if (a >= this.stops.length) {
                    a = this.stops.length - 1
                }
            } else {
                a -= 1;
                if (a < 0) {
                    a = 0
                }
            }
            return this.stops[a]
        };
        n.getNextIndex = function() {
            return this.stops.indexOf(this.getNextPosition())
        };
        n.pointerUp = function(a, b) {
            this.userDragModel.onPointerUp(b.interactionEvent);
            if (this.gallery.canSpring !== false) {
                a.changeState(q.create("springing", this.gallery, {
                    particle: this.particle,
                    equilibrium: this.getNextPosition(),
                    index: this.getNextIndex(),
                    interactionEvent: b.interactionEvent
                }), b)
            } else {
                b = b || {};
                b.incoming = this.gallery.slideAt(this.getNextIndex());
                b.outgoing = this.gallery.getSelected();
                a.changeState(q.create("drawing", this.gallery), b)
            }
        };
        t.exports = l
    }, {
        "./../model/UserDrag": 663,
        "./GalleryState": 666,
        "./factory": 670,
        "ac-object/create": 709
    }],
    669: [function(t, u, o) {
        var v = t("ac-console");
        var m = t("ac-object/create");
        var q = t("./GalleryState");
        var r = t("./factory");
        var p = t("./../model/GalleryEvent");
        var l = function() {
            q.apply(this, arguments);
            this._nextState = "idle"
        };
        var n = l.prototype = m(q.prototype);
        n.name = "drawing";
        n.engagementChange = function(a, b) {
            this._nextState = "not_engaged"
        };
        n.pointerMove = function(a, b) {
            b.interactionEvent.preventDefault()
        };
        n.onDealloc = function(a, b) {
            this._nextState = "dealloc"
        };
        n.onEnter = function(f, d) {
            var i = this.gallery;
            var g = d.incoming;
            var c = d.outgoing;
            var j = d.options || {};
            var h = j.interactionEvent || i.interactionEvent;
            var b = {
                incoming: g,
                outgoing: c,
                interactionEvent: h,
                options: j
            };
            var a = Promise.resolve();
            if (g !== c) {
                i.sendGalleryEvent(p.createWillShowEvent(b));
                a = a.then(i.beforeDraw.bind(i, g, c, j)).then(i.draw.bind(i, g, c, j)).then(i.afterDraw.bind(i, g, c, j))
            } else {
                this._nextState = "idle"
            }
            return a.then(function() {
                f.changeState(r.create(this._nextState, i), {
                    incoming: g,
                    outgoing: c,
                    event: b
                })
            }.bind(this))["catch"](function(k) {
                v.log(k)
            })
        };
        n.onExit = function(c, a) {
            var b = this.gallery;
            if (c.currentState.name !== "dealloc" && b.getSelected() !== a.incoming) {
                b.model.setSelected(a.incoming);
                b.sendGalleryEvent(p.createDidShowEvent(a.event))
            }
            this._nextState = null
        };
        u.exports = l
    }, {
        "./../model/GalleryEvent": 661,
        "./GalleryState": 666,
        "./factory": 670,
        "ac-console": 550,
        "ac-object/create": 709
    }],
    670: [function(k, j, g) {
        var h;
        j.exports = {
            create: function i(b, d, c) {
                var a = h[b];
                if (!a) {
                    throw new Error('Could not create state: state "' + b + '" not found')
                }
                return new a(d, c)
            }
        };
        h = {
            initialize: k("./initialize"),
            idle: k("./idle"),
            not_engaged: k("./not_engaged"),
            seeking: k("./seeking"),
            resize: k("./resize"),
            dealloc: k("./dealloc"),
            drawing: k("./drawing"),
            dragging: k("./dragging"),
            springing: k("./springing")
        }
    }, {
        "./dealloc": 667,
        "./dragging": 668,
        "./drawing": 669,
        "./idle": 671,
        "./initialize": 672,
        "./not_engaged": 673,
        "./resize": 674,
        "./seeking": 675,
        "./springing": 676
    }],
    671: [function(j, q, k) {
        var n = j("./GalleryState");
        var p = j("ac-object/create");
        var m = j("./factory");
        var l = function() {
            n.apply(this, arguments)
        };
        var o = l.prototype = p(n.prototype);
        o.name = "idle";
        o.engagementChange = function(a, b) {
            if (b.engaged === false) {
                a.changeState(m.create("not_engaged", this.gallery), b)
            }
        };
        o.seek = function(a, b) {
            a.changeState(m.create("seeking", this.gallery), b)
        };
        o.trigger = function(a, c) {
            var b = c.target;
            this.gallery.interactionEvent = c.interactionEvent;
            this.gallery.routes.match(b.getAttribute("href"))
        };
        o.keydown = function(a, b) {
            var c = b.interactionEvent;
            var d = ("which" in c) ? c.which : c.keyCode;
            if (d === 37) {
                this.gallery.showPrevious(b)
            } else {
                if (d === 39) {
                    this.gallery.showNext(b)
                }
            }
        };
        o.resize = function(a, b) {
            a.changeState(m.create("resize", this.gallery), b)
        };
        o.onClear = function() {
            this.gallery.removeStyles()
        };
        o.pointerDown = function(a, b) {
            a.changeState(m.create("dragging", this.gallery), b)
        };
        o.seek = function(a, b) {
            a.changeState(m.create("seeking", this.gallery), b)
        };
        o.onDraw = function(f, a) {
            var d = this.gallery.model.query(a.query);
            var b = this.gallery.model.getSelected();
            var c = a.options || {};
            if (!d || d === b) {
                return
            }
            f.changeState(m.create("drawing", this.gallery), {
                incoming: d,
                outgoing: b,
                options: c
            })
        };
        q.exports = l
    }, {
        "./GalleryState": 666,
        "./factory": 670,
        "ac-object/create": 709
    }],
    672: [function(r, t, n) {
        var p = r("./GalleryState");
        var l = r("ac-object/create");
        var o = r("./../model/GalleryEvent");
        var q = r("./factory");

        function k() {
            p.apply(this, arguments);
            this._engaged = true
        }
        var m = k.prototype = l(p.prototype);
        m.name = "initialize";
        m.engagementChange = function(a, b) {
            this._engaged = b.engaged
        };
        m.onDraw = function(d, b) {
            var c = this.gallery.model.query(b.query);
            var a = this.gallery.drawInitial(c);
            return Promise.resolve().then(a).then(function() {
                var f = "idle";
                if (this._engaged === false) {
                    f = "not_engaged"
                }
                d.changeState(q.create(f, this.gallery))
            }.bind(this))
        };
        m.onExit = function(a, b) {
            var c = o.create("ready", {
                incoming: this.gallery.getSelected()
            });
            this.gallery.sendGalleryEvent(c);
            this._engaged = null
        };
        t.exports = k
    }, {
        "./../model/GalleryEvent": 661,
        "./GalleryState": 666,
        "./factory": 670,
        "ac-object/create": 709
    }],
    673: [function(q, p, j) {
        var m = q("./GalleryState");
        var o = q("ac-object/create");
        var l = q("./factory");

        function k() {
            m.apply(this, arguments)
        }
        var n = k.prototype = o(m.prototype);
        n.name = "not_engaged";
        n.resize = function(a, b) {
            a.changeState(l.create("resize", this.gallery), b)
        };
        n.engagementChange = function(a, b) {
            if (b.engaged === true) {
                a.changeState(l.create("idle", this.gallery))
            }
        };
        p.exports = k
    }, {
        "./GalleryState": 666,
        "./factory": 670,
        "ac-object/create": 709
    }],
    674: [function(q, p, j) {
        var l = q("./GalleryState");
        var n = q("./../model/GalleryEvent");
        var o = q("ac-object/create");
        var k = function() {
            l.apply(this, arguments)
        };
        var m = k.prototype = o(l.prototype);
        m.name = "resize";
        m.onEnter = function(a, b) {
            this.gallery.sendGalleryEvent(n.create("resizing"));
            var c = this.gallery.getSelected();
            Promise.resolve().then(this.gallery.drawResize.bind(this.gallery, c)).then(function() {
                a.changeState(a.previousState, b)
            }.bind(this))
        };
        m.onExit = function(a, b) {
            this.gallery.sendGalleryEvent(n.create("resized"))
        };
        p.exports = k
    }, {
        "./../model/GalleryEvent": 661,
        "./GalleryState": 666,
        "ac-object/create": 709
    }],
    675: [function(q, p, j) {
        var l = q("./GalleryState");
        var n = q("ac-object/create");
        var o = q("./../model/GalleryEvent");

        function k() {
            l.apply(this, arguments)
        }
        var m = k.prototype = n(l.prototype);
        m.name = "seeking";
        m.drawProgress = function(a) {
            if (a < 0) {
                return this.gallery.drawBounceInProgress(Math.abs(a))
            } else {
                if (a > 1) {
                    return this.gallery.drawBounceOutProgress(a - 1)
                } else {
                    return this.gallery.drawProgress(a)
                }
            }
        };
        m.onEnter = function(a, c) {
            var b = {
                progress: c.progress
            };
            this.gallery.sendGalleryEvent(o.create("willseek", b));
            this.drawProgress(c.progress);
            this.gallery.sendGalleryEvent(o.create("didseek", b));
            a.changeState(a.previousState, c)
        };
        m.onExit = function(a, b) {
            this.gallery = null
        };
        p.exports = k
    }, {
        "./../model/GalleryEvent": 661,
        "./GalleryState": 666,
        "ac-object/create": 709
    }],
    676: [function(r, u, o) {
        var p = r("./GalleryState");
        var m = r("ac-object/create");
        var q = r("./factory");
        var v = r("ac-clock").Clock;
        var t = r("ac-physics/spring");

        function l() {
            p.apply(this, arguments);
            this.particle = this.options.particle;
            this.equilibrium = this.options.equilibrium;
            this.index = this.options.index;
            this.spring = t.create(this.particle, this.equilibrium);
            this.spring.stiffness = -60;
            this.spring.damping = -10;
            this.interactionEvent = null;
            this.clock = new v();
            this.clock.start();
            this.clock.on("update", this._clockUpdate, this);
            this.clock.on("draw", this._clockDraw, this)
        }
        var n = l.prototype = m(p.prototype);
        n.name = "springing";
        n.onEnter = function(a, b) {
            if (a.previousState.name !== "seeking") {
                if (b.interactionEvent.originalEvent) {
                    this.interactionEvent = b.interactionEvent.originalEvent
                } else {
                    this.interactionEvent = b.interactionEvent
                }
                this._setLastPosition();
                this.fsm = a
            }
        };
        n.onExit = function(a, b) {
            if (a.currentState.name !== "seeking") {
                this.clock.stop();
                this.clock.off();
                this.equilibrium = null;
                this.index = null;
                this.fsm = null;
                this.particle = null;
                this.spring = null;
                this.clock = null;
                this.lastPosition = null;
                this.interactionEvent = null
            }
        };
        n.pointerDown = function(a, b) {
            a.changeState(q.create("dragging", this.gallery, {
                particle: this.particle,
                startIndex: this.index
            }), b)
        };
        n._clockUpdate = function(b) {
            var a = Math.abs(this.particle.position.x - this.spring.equilibrium);
            if (b.fps === 0) {
                return
            }
            if (a > 0.0005) {
                this.spring.update(b)
            } else {
                this.particle.position.x = this.spring.equilibrium
            }
        };
        n._clockDraw = function(b) {
            var a;
            if (this._shouldDraw()) {
                a = Math.abs(this.particle.position.x - this.spring.equilibrium);
                this._setLastPosition();
                if (a !== 0) {
                    this.fsm.changeState(q.create("seeking", this.gallery), {
                        progress: this.particle.position.x
                    })
                } else {
                    this.fsm.changeState(q.create("drawing", this.gallery), {
                        incoming: this.gallery.slideAt(this.index),
                        outgoing: this.gallery.getSelected(),
                        options: {
                            interactionEvent: this.interactionEvent
                        }
                    })
                }
            }
        };
        n._setLastPosition = function() {
            this.lastPosition = {
                x: this.particle.position.x,
                y: this.particle.position.y
            }
        };
        n._shouldDraw = function() {
            if (this.lastPosition.x === this.particle.position.x && this.lastPosition.y === this.particle.position.y) {
                return false
            }
            return true
        };
        u.exports = l
    }, {
        "./GalleryState": 666,
        "./factory": 670,
        "ac-clock": 26,
        "ac-object/create": 709,
        "ac-physics/spring": 642
    }],
    677: [function(d, g, f) {
        arguments[4][9][0].apply(f, arguments)
    }, {
        "./ac-browser/BrowserData": 678,
        "./ac-browser/IE": 679,
        dup: 9
    }],
    678: [function(d, g, f) {
        arguments[4][221][0].apply(f, arguments)
    }, {
        "./data": 680,
        dup: 221
    }],
    679: [function(d, g, f) {
        arguments[4][7][0].apply(f, arguments)
    }, {
        dup: 7
    }],
    680: [function(d, g, f) {
        arguments[4][8][0].apply(f, arguments)
    }, {
        dup: 8
    }],
    681: [function(d, g, f) {
        arguments[4][20][0].apply(f, arguments)
    }, {
        "./ac-event-emitter/EventEmitter": 682,
        dup: 20
    }],
    682: [function(d, g, f) {
        arguments[4][21][0].apply(f, arguments)
    }, {
        dup: 21
    }],
    683: [function(d, g, f) {
        arguments[4][30][0].apply(f, arguments)
    }, {
        "./ac-prefixer/Prefixer": 684,
        dup: 30
    }],
    684: [function(d, g, f) {
        arguments[4][31][0].apply(f, arguments)
    }, {
        "./Prefixer/camelCasedEvents": 685,
        dup: 31
    }],
    685: [function(d, g, f) {
        arguments[4][32][0].apply(f, arguments)
    }, {
        dup: 32
    }],
    686: [function(d, g, f) {
        arguments[4][251][0].apply(f, arguments)
    }, {
        "./ac-feature/canvasAvailable": 687,
        "./ac-feature/continuousScrollEventsAvailable": 688,
        "./ac-feature/cookiesAvailable": 689,
        "./ac-feature/cssLinearGradientAvailable": 690,
        "./ac-feature/cssPropertyAvailable": 691,
        "./ac-feature/helpers/memoize": 693,
        "./ac-feature/isDesktop": 694,
        "./ac-feature/isHandheld": 695,
        "./ac-feature/isRetina": 696,
        "./ac-feature/isTablet": 697,
        "./ac-feature/localStorageAvailable": 698,
        "./ac-feature/mediaElementsAvailable": 699,
        "./ac-feature/sessionStorageAvailable": 700,
        "./ac-feature/svgAvailable": 701,
        "./ac-feature/threeDTransformsAvailable": 702,
        "./ac-feature/touchAvailable": 703,
        "./ac-feature/webGLAvailable": 704,
        dup: 251
    }],
    687: [function(d, g, f) {
        arguments[4][252][0].apply(f, arguments)
    }, {
        "./helpers/globals": 692,
        dup: 252
    }],
    688: [function(d, g, f) {
        arguments[4][253][0].apply(f, arguments)
    }, {
        "./touchAvailable": 703,
        "ac-browser": 677,
        dup: 253
    }],
    689: [function(d, g, f) {
        arguments[4][254][0].apply(f, arguments)
    }, {
        "./helpers/globals": 692,
        dup: 254
    }],
    690: [function(d, g, f) {
        arguments[4][255][0].apply(f, arguments)
    }, {
        "./cssPropertyAvailable": 691,
        dup: 255
    }],
    691: [function(d, g, f) {
        arguments[4][256][0].apply(f, arguments)
    }, {
        "ac-prefixer": 683,
        dup: 256
    }],
    692: [function(d, g, f) {
        arguments[4][212][0].apply(f, arguments)
    }, {
        dup: 212
    }],
    693: [function(d, g, f) {
        arguments[4][258][0].apply(f, arguments)
    }, {
        dup: 258
    }],
    694: [function(d, g, f) {
        arguments[4][259][0].apply(f, arguments)
    }, {
        "./helpers/globals": 692,
        "./touchAvailable": 703,
        dup: 259
    }],
    695: [function(d, g, f) {
        arguments[4][260][0].apply(f, arguments)
    }, {
        "./isDesktop": 694,
        "./isTablet": 697,
        dup: 260
    }],
    696: [function(d, g, f) {
        arguments[4][261][0].apply(f, arguments)
    }, {
        "./helpers/globals": 692,
        dup: 261
    }],
    697: [function(d, g, f) {
        arguments[4][262][0].apply(f, arguments)
    }, {
        "./helpers/globals": 692,
        "./isDesktop": 694,
        dup: 262
    }],
    698: [function(d, g, f) {
        arguments[4][263][0].apply(f, arguments)
    }, {
        "./helpers/globals": 692,
        dup: 263
    }],
    699: [function(d, g, f) {
        arguments[4][264][0].apply(f, arguments)
    }, {
        "./helpers/globals": 692,
        dup: 264
    }],
    700: [function(d, g, f) {
        arguments[4][265][0].apply(f, arguments)
    }, {
        "./helpers/globals": 692,
        dup: 265
    }],
    701: [function(d, g, f) {
        arguments[4][266][0].apply(f, arguments)
    }, {
        "./helpers/globals": 692,
        dup: 266
    }],
    702: [function(d, g, f) {
        arguments[4][267][0].apply(f, arguments)
    }, {
        "./cssPropertyAvailable": 691,
        dup: 267
    }],
    703: [function(d, g, f) {
        arguments[4][268][0].apply(f, arguments)
    }, {
        "./helpers/globals": 692,
        dup: 268
    }],
    704: [function(d, g, f) {
        arguments[4][269][0].apply(f, arguments)
    }, {
        "./helpers/globals": 692,
        dup: 269
    }],
    705: [function(d, g, f) {
        g.exports.Localnav = d("./ac-localnav/Localnav");
        g.exports.LocalnavExpandable = d("./ac-localnav/LocalnavExpandable")
    }, {
        "./ac-localnav/Localnav": 706,
        "./ac-localnav/LocalnavExpandable": 707
    }],
    706: [function(D, H, B) {
        var v, y = D("ac-browser"),
            E = D("ac-classlist"),
            u = D("ac-dom-metrics"),
            x = D("ac-dom-traversal"),
            C = D("ac-feature"),
            F = D("ac-object"),
            w = D("ac-sticky"),
            r = D("ac-event-emitter").EventEmitter,
            t = D("ac-window-delegate").WindowDelegate;
        try {
            v = D("ac-analytics")
        } catch (z) {}
        var G = function(a) {
            var b = {
                localnavWrapperClassSelector: ".localnav-wrapper",
                analyticsEnabled: true
            };
            this._options = F.extend(b, a);
            this._localnavWrapperElement = x.querySelector(this._options.localnavWrapperClassSelector);
            this._isOldIE = y.name === "IE" && y.version < 9;
            b = null
        };
        var A = G.prototype = new r(null);
        A.createLocalnav = function() {
            w.create(this._localnavWrapperElement, {
                touchmove: true
            }).propagateTo(this);
            this.on("became-sticky", this._becameSticky.bind(this));
            this.on("became-unsticky", this._becameUnsticky.bind(this));
            t.on("resize orientationchange", this._resizeUpdate.bind(this));
            window.requestAnimationFrame(this._resizeUpdate.bind(this))
        };
        A._becameSticky = function() {
            this._localnavWrapperElement.setAttribute("data-analytics-region", "product nav locked");
            if (this._options.analyticsEnabled && typeof v === "object") {
                v.regions.refreshRegion(this._localnavWrapperElement)
            }
        };
        A._becameUnsticky = function() {
            this._localnavWrapperElement.setAttribute("data-analytics-region", "product nav");
            if (this._options.analyticsEnabled && typeof v === "object") {
                v.regions.refreshRegion(this._localnavWrapperElement)
            }
        };
        A._resizeUpdate = function() {
            var b = x.querySelector(".localnav-links");
            var a = x.querySelector(".localnav-title");
            E.remove(b, "localnav-long-links");
            if (u.getDimensions(a, true).width + u.getDimensions(b, true).width >= u.getDimensions(this._localnavWrapperElement, true).width) {
                E.add(b, "localnav-long-links")
            }
        };
        H.exports = G
    }, {
        "ac-analytics": "ac-analytics",
        "ac-browser": 677,
        "ac-classlist": 17,
        "ac-dom-metrics": 90,
        "ac-dom-traversal": 138,
        "ac-event-emitter": 681,
        "ac-feature": 686,
        "ac-object": 713,
        "ac-sticky": 830,
        "ac-window-delegate": 1191
    }],
    707: [function(B, G, z) {
        var u, w = B("ac-browser"),
            H = B("ac-dom-events"),
            v = B("ac-dom-traversal"),
            C = B("ac-classlist"),
            A = B("ac-feature"),
            D = B("ac-object"),
            r = B("ac-event-emitter").EventEmitter,
            E = B("./Localnav"),
            t = B("ac-window-delegate").WindowDelegate;
        try {
            u = B("ac-analytics")
        } catch (x) {}
        var F = function(a) {
            E.call(this, a);
            this._checkbox = v.querySelector("#localnav-disclosure");
            this._tray = v.querySelector(".localnav-tray-wrapper");
            this._localnavSiblings = v.siblings(this._localnavWrapperElement);
            this._localnavDisclosure = v.querySelector(".localnav-head-disclosure");
            if (!A.cssPropertyAvailable("transition")) {
                C.add(document.documentElement, "no-transition")
            }
            if (this._options.analyticsEnabled && typeof u === "object") {
                this._analyticsEmitter = new r();
                new u.observer.Event(this._analyticsEmitter, {
                    interactionEvents: ["localnav-open"]
                })
            }
            H.addEventListener(this._checkbox, "click", this._toggleTray.bind(this));
            t.on("scroll", this._scrollUpdate.bind(this))
        };
        var y = F.prototype = D.create(E.prototype);
        y._scrollUpdate = function() {
            if (this._checkbox && this._checkbox.checked) {
                this._closeTray()
            }
        };
        y._resizeUpdate = function() {};
        y._toggleTray = function() {
            if (this._checkbox && this._checkbox.checked) {
                this._openTray()
            } else {
                this._closeTray()
            }
        };
        y._toggleOldieCheckedClass = function() {
            if (this._isOldIE) {
                C.toggle(this._checkbox, "oldie-checked")
            }
        };
        y._openTray = function() {
            this._checkbox.checked = true;
            this._toggleOldieCheckedClass();
            this._localnavDisclosure.setAttribute("aria-label", "close local navigation");
            this._localnavDisclosure.setAttribute("aria-checked", true);
            if (this._analyticsEmitter) {
                var a = (this._localnavWrapperElement.getAttribute("data-analytics-region").indexOf("locked") > -1) ? "locked" : "unlocked";
                this._analyticsEmitter.trigger("localnav-open", {
                    prop3: "{PAGE_NAME_NO_LOCALE} - explore - " + a,
                    title: "{PAGE_NAME_NO_LOCALE} - explore - " + a
                })
            }
            if (!this._isOldIE) {
                this._localnavSiblings.forEach(function(b) {
                    H.addEventListener(b, "click", this._closeTray.bind(this))
                }.bind(this))
            }
        };
        y._closeTray = function() {
            this._checkbox.checked = false;
            this._toggleOldieCheckedClass();
            this._localnavDisclosure.setAttribute("aria-label", "open local navigation");
            this._localnavDisclosure.setAttribute("aria-checked", false);
            if (!this._isOldIE) {
                this._localnavSiblings.forEach(function(a) {
                    H.removeEventListener(a, "click", this._closeTray.bind(this))
                }.bind(this))
            }
        };
        G.exports = F
    }, {
        "./Localnav": 706,
        "ac-analytics": "ac-analytics",
        "ac-browser": 677,
        "ac-classlist": 17,
        "ac-dom-events": 67,
        "ac-dom-traversal": 138,
        "ac-event-emitter": 681,
        "ac-feature": 686,
        "ac-object": 713,
        "ac-window-delegate": 1191
    }],
    708: [function(o, n, i) {
        o("ac-polyfills/Array/isArray");
        var k = o("./extend");
        var j = Object.prototype.hasOwnProperty;
        var m = function(c, b) {
            var a;
            for (a in b) {
                if (j.call(b, a)) {
                    if (b[a] === null) {
                        c[a] = null
                    } else {
                        if (typeof b[a] === "object") {
                            c[a] = Array.isArray(b[a]) ? [] : {};
                            m(c[a], b[a])
                        } else {
                            c[a] = b[a]
                        }
                    }
                }
            }
            return c
        };
        n.exports = function l(a, b) {
            if (b) {
                return m({}, a)
            }
            return k({}, a)
        }
    }, {
        "./extend": 711,
        "ac-polyfills/Array/isArray": 719
    }],
    709: [function(d, g, f) {
        arguments[4][372][0].apply(f, arguments)
    }, {
        dup: 372
    }],
    710: [function(d, g, f) {
        arguments[4][373][0].apply(f, arguments)
    }, {
        "./extend": 711,
        dup: 373
    }],
    711: [function(k, j, g) {
        k("ac-polyfills/Array/prototype.forEach");
        var h = Object.prototype.hasOwnProperty;
        j.exports = function i() {
            var a;
            var b;
            if (arguments.length < 2) {
                a = [{}, arguments[0]]
            } else {
                a = [].slice.call(arguments)
            }
            b = a.shift();
            a.forEach(function(c) {
                if (c != null) {
                    for (var d in c) {
                        if (h.call(c, d)) {
                            b[d] = c[d]
                        }
                    }
                }
            });
            return b
        }
    }, {
        "ac-polyfills/Array/prototype.forEach": 721
    }],
    712: [function(d, g, f) {
        arguments[4][375][0].apply(f, arguments)
    }, {
        dup: 375
    }],
    713: [function(d, g, f) {
        g.exports = {
            clone: d("./clone"),
            create: d("./create"),
            defaults: d("./defaults"),
            extend: d("./extend"),
            getPrototypeOf: d("./getPrototypeOf"),
            isDate: d("./isDate"),
            isEmpty: d("./isEmpty"),
            isRegExp: d("./isRegExp"),
            toQueryParameters: d("./toQueryParameters")
        }
    }, {
        "./clone": 708,
        "./create": 709,
        "./defaults": 710,
        "./extend": 711,
        "./getPrototypeOf": 712,
        "./isDate": 714,
        "./isEmpty": 715,
        "./isRegExp": 716,
        "./toQueryParameters": 718
    }],
    714: [function(d, g, f) {
        arguments[4][376][0].apply(f, arguments)
    }, {
        dup: 376
    }],
    715: [function(d, g, f) {
        arguments[4][377][0].apply(f, arguments)
    }, {
        dup: 377
    }],
    716: [function(d, g, f) {
        arguments[4][378][0].apply(f, arguments)
    }, {
        dup: 378
    }],
    717: [function(d, g, f) {
        arguments[4][369][0].apply(f, arguments)
    }, {
        dup: 369
    }],
    718: [function(d, g, f) {
        arguments[4][379][0].apply(f, arguments)
    }, {
        dup: 379,
        qs: 717
    }],
    719: [function(d, g, f) {
        if (!Array.isArray) {
            Array.isArray = function(a) {
                return Object.prototype.toString.call(a) === "[object Array]"
            }
        }
    }, {}],
    720: [function(f, i, g) {
        if (!Array.prototype.filter) {
            Array.prototype.filter = function h(a, b) {
                var c = Object(this);
                var n = c.length >>> 0;
                var d;
                var m = [];
                if (typeof a !== "function") {
                    throw new TypeError(a + " is not a function")
                }
                for (d = 0; d < n; d += 1) {
                    if (d in c && a.call(b, c[d], d, c)) {
                        m.push(c[d])
                    }
                }
                return m
            }
        }
    }, {}],
    721: [function(f, i, g) {
        if (!Array.prototype.forEach) {
            Array.prototype.forEach = function h(a, b) {
                var c = Object(this);
                var l;
                var d;
                if (typeof a !== "function") {
                    throw new TypeError("No function object passed to forEach.")
                }
                for (l = 0; l < this.length; l += 1) {
                    d = c[l];
                    a.call(b, d, l, c)
                }
            }
        }
    }, {}],
    722: [function(f, i, g) {
        if (!Array.prototype.indexOf) {
            Array.prototype.indexOf = function h(c, b) {
                var a = b || 0;
                var d = 0;
                if (a < 0) {
                    a = this.length + b - 1;
                    if (a < 0) {
                        throw "Wrapped past beginning of array while looking up a negative start index."
                    }
                }
                for (d = 0; d < this.length; d++) {
                    if (this[d] === c) {
                        return d
                    }
                }
                return (-1)
            }
        }
    }, {}],
    723: [function(d, g, f) {
        (function() {
            var b = Array.prototype.slice;
            try {
                b.call(document.documentElement)
            } catch (a) {
                Array.prototype.slice = function(v, q) {
                    q = (typeof q !== "undefined") ? q : this.length;
                    if (Object.prototype.toString.call(this) === "[object Array]") {
                        return b.call(this, v, q)
                    }
                    var i, r = [],
                        p, t = this.length;
                    var u = v || 0;
                    u = (u >= 0) ? u : t + u;
                    var c = (q) ? q : t;
                    if (q < 0) {
                        c = t + q
                    }
                    p = c - u;
                    if (p > 0) {
                        r = new Array(p);
                        if (this.charAt) {
                            for (i = 0; i < p; i++) {
                                r[i] = this.charAt(u + i)
                            }
                        } else {
                            for (i = 0; i < p; i++) {
                                r[i] = this[u + i]
                            }
                        }
                    }
                    return r
                }
            }
        }())
    }, {}],
    724: [function(f, i, g) {
        if (!Array.prototype.some) {
            Array.prototype.some = function h(a, b) {
                var d = Object(this);
                var l = d.length >>> 0;
                var c;
                if (typeof a !== "function") {
                    throw new TypeError(a + " is not a function")
                }
                for (c = 0; c < l; c += 1) {
                    if (c in d && a.call(b, d[c], c, d) === true) {
                        return true
                    }
                }
                return false
            }
        }
    }, {}],
    725: [function(f, i, g) {
        if (document.createEvent) {
            try {
                new window.CustomEvent("click")
            } catch (h) {
                window.CustomEvent = (function() {
                    function a(c, b) {
                        b = b || {
                            bubbles: false,
                            cancelable: false,
                            detail: undefined
                        };
                        var d = document.createEvent("CustomEvent");
                        d.initCustomEvent(c, b.bubbles, b.cancelable, b.detail);
                        return d
                    }
                    a.prototype = window.Event.prototype;
                    return a
                }())
            }
        }
    }, {}],
    726: [function(i, h, g) {
        if (!Date.now) {
            Date.now = function f() {
                return new Date().getTime()
            }
        }
    }, {}],
    727: [function(d, g, f) {
        /*! @source http://purl.eligrey.com/github/classList.js/blob/master/classList.js*/
        if ("document" in self) {
            if (!("classList" in document.createElement("_"))) {
                (function(u) {
                    if (!("Element" in u)) {
                        return
                    }
                    var D = "classList",
                        y = "prototype",
                        b = u.Element[y],
                        C = Object,
                        t = String[y].trim || function() {
                            return this.replace(/^\s+|\s+$/g, "")
                        },
                        B = Array[y].indexOf || function(h) {
                            var i = 0,
                                j = this.length;
                            for (; i < j; i++) {
                                if (i in this && this[i] === h) {
                                    return i
                                }
                            }
                            return -1
                        },
                        a = function(i, h) {
                            this.name = i;
                            this.code = DOMException[i];
                            this.message = h
                        },
                        x = function(h, i) {
                            if (i === "") {
                                throw new a("SYNTAX_ERR", "An invalid or illegal string was specified")
                            }
                            if (/\s/.test(i)) {
                                throw new a("INVALID_CHARACTER_ERR", "String contains an invalid character")
                            }
                            return B.call(h, i)
                        },
                        A = function(h) {
                            var i = t.call(h.getAttribute("class") || ""),
                                j = i ? i.split(/\s+/) : [],
                                k = 0,
                                l = j.length;
                            for (; k < l; k++) {
                                this.push(j[k])
                            }
                            this._updateClassName = function() {
                                h.setAttribute("class", this.toString())
                            }
                        },
                        z = A[y] = [],
                        v = function() {
                            return new A(this)
                        };
                    a[y] = Error[y];
                    z.item = function(h) {
                        return this[h] || null
                    };
                    z.contains = function(h) {
                        h += "";
                        return x(this, h) !== -1
                    };
                    z.add = function() {
                        var h = arguments,
                            i = 0,
                            k = h.length,
                            j, l = false;
                        do {
                            j = h[i] + "";
                            if (x(this, j) === -1) {
                                this.push(j);
                                l = true
                            }
                        } while (++i < k);
                        if (l) {
                            this._updateClassName()
                        }
                    };
                    z.remove = function() {
                        var m = arguments,
                            h = 0,
                            k = m.length,
                            i, l = false,
                            j;
                        do {
                            i = m[h] + "";
                            j = x(this, i);
                            while (j !== -1) {
                                this.splice(j, 1);
                                l = true;
                                j = x(this, i)
                            }
                        } while (++h < k);
                        if (l) {
                            this._updateClassName()
                        }
                    };
                    z.toggle = function(j, i) {
                        j += "";
                        var k = this.contains(j),
                            h = k ? i !== true && "remove" : i !== false && "add";
                        if (h) {
                            this[h](j)
                        }
                        if (i === true || i === false) {
                            return i
                        } else {
                            return !k
                        }
                    };
                    z.toString = function() {
                        return this.join(" ")
                    };
                    if (C.defineProperty) {
                        var c = {
                            get: v,
                            enumerable: true,
                            configurable: true
                        };
                        try {
                            C.defineProperty(b, D, c)
                        } catch (w) {
                            if (w.number === -2146823252) {
                                c.enumerable = false;
                                C.defineProperty(b, D, c)
                            }
                        }
                    } else {
                        if (C[y].__defineGetter__) {
                            b.__defineGetter__(D, v)
                        }
                    }
                }(self))
            } else {
                (function() {
                    var b = document.createElement("_");
                    b.classList.add("c1", "c2");
                    if (!b.classList.contains("c2")) {
                        var a = function(j) {
                            var k = DOMTokenList.prototype[j];
                            DOMTokenList.prototype[j] = function(h) {
                                var i, m = arguments.length;
                                for (i = 0; i < m; i++) {
                                    h = arguments[i];
                                    k.call(this, h)
                                }
                            }
                        };
                        a("add");
                        a("remove")
                    }
                    b.classList.toggle("c3", false);
                    if (b.classList.contains("c3")) {
                        var c = DOMTokenList.prototype.toggle;
                        DOMTokenList.prototype.toggle = function(k, j) {
                            if (1 in arguments && !this.contains(k) === !j) {
                                return j
                            } else {
                                return c.call(this, k)
                            }
                        }
                    }
                    b = null
                }())
            }
        }
    }, {}],
    728: [function(o, n, i) {
        var l = navigator.userAgent.toLowerCase();
        var k = (l.indexOf("msie") > -1) ? parseInt(l.split("msie")[1]) : false;
        var j = k < 9;
        if (!Object.assign) {
            if (!Object.keys) {
                Object.keys = function m(b) {
                    var c = [];
                    var a;
                    if ((!b) || (typeof b.hasOwnProperty !== "function")) {
                        throw "Object.keys called on non-object."
                    }
                    for (a in b) {
                        if (b.hasOwnProperty(a)) {
                            c.push(a)
                        }
                    }
                    return c
                }
            }
            if (!j && Object.defineProperty) {
                if (!Object.assign) {
                    Object.defineProperty(Object, "assign", {
                        enumerable: false,
                        configurable: true,
                        writable: true,
                        value: function(B, y) {
                            if (B === undefined || B === null) {
                                throw new TypeError("Cannot convert first argument to object")
                            }
                            var z = Object(B);
                            var a = false;
                            var x;
                            for (var h = 1; h < arguments.length; h++) {
                                var d = arguments[h];
                                if (d === undefined || d === null) {
                                    continue
                                }
                                var f = Object.keys(Object(d));
                                for (var g = 0, b = f.length; g < b; g++) {
                                    var A = f[g];
                                    try {
                                        var c = Object.getOwnPropertyDescriptor(d, A);
                                        if (c !== undefined && c.enumerable) {
                                            z[A] = d[A]
                                        }
                                    } catch (C) {
                                        if (!a) {
                                            a = true;
                                            x = C
                                        }
                                    }
                                }
                                if (a) {
                                    throw x
                                }
                            }
                            return z
                        }
                    })
                }
            } else {
                Object.assign = function() {
                    for (var a = 1; a < arguments.length; a++) {
                        for (var b in arguments[a]) {
                            if (arguments[a].hasOwnProperty(b)) {
                                arguments[0][b] = arguments[a][b]
                            }
                        }
                    }
                    return arguments[0]
                }
            }
        }
    }, {}],
    729: [function(f, i, g) {
        if (!Object.create) {
            var h = function() {};
            Object.create = function(a) {
                if (arguments.length > 1) {
                    throw new Error("Second argument not supported")
                }
                if (a === null || typeof a !== "object") {
                    throw new TypeError("Object prototype may only be an Object.")
                }
                h.prototype = a;
                return new h()
            }
        }
    }, {}],
    730: [function(d, g, f) {
        g.exports = d("es6-promise").polyfill()
    }, {
        "es6-promise": 731
    }],
    731: [function(g, k, h) {
        var j = g("./promise/promise").Promise;
        var i = g("./promise/polyfill").polyfill;
        h.Promise = j;
        h.polyfill = i
    }, {
        "./promise/polyfill": 735,
        "./promise/promise": 736
    }],
    732: [function(m, l, h) {
        var i = m("./utils").isArray;
        var j = m("./utils").isFunction;

        function k(b) {
            var a = this;
            if (!i(b)) {
                throw new TypeError("You must pass an array to all.")
            }
            return new a(function(u, v) {
                var d = [],
                    c = b.length,
                    r;
                if (c === 0) {
                    u([])
                }

                function t(n) {
                    return function(o) {
                        g(n, o)
                    }
                }

                function g(o, n) {
                    d[o] = n;
                    if (--c === 0) {
                        u(d)
                    }
                }
                for (var f = 0; f < b.length; f++) {
                    r = b[f];
                    if (r && j(r.then)) {
                        r.then(t(f), v)
                    } else {
                        g(f, r)
                    }
                }
            })
        }
        h.all = k
    }, {
        "./utils": 740
    }],
    733: [function(d, g, f) {
        (function(y, x) {
            var b = (typeof window !== "undefined") ? window : {};
            var r = b.MutationObserver || b.WebKitMutationObserver;
            var c = (typeof x !== "undefined") ? x : (this === undefined ? window : this);

            function q() {
                return function() {
                    y.nextTick(a)
                }
            }

            function v() {
                var h = 0;
                var j = new r(a);
                var i = document.createTextNode("");
                j.observe(i, {
                    characterData: true
                });
                return function() {
                    i.data = (h = ++h % 2)
                }
            }

            function t() {
                return function() {
                    c.setTimeout(a, 1)
                }
            }
            var u = [];

            function a() {
                for (var i = 0; i < u.length; i++) {
                    var j = u[i];
                    var h = j[0],
                        k = j[1];
                    h(k)
                }
                u = []
            }
            var w;
            if (typeof y !== "undefined" && {}.toString.call(y) === "[object process]") {
                w = q()
            } else {
                if (r) {
                    w = v()
                } else {
                    w = t()
                }
            }

            function z(h, j) {
                var i = u.push([h, j]);
                if (i === 1) {
                    w()
                }
            }
            f.asap = z
        }).call(this, d("_process"), typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
        _process: 1209
    }],
    734: [function(j, i, h) {
        var k = {
            instrument: false
        };

        function g(b, a) {
            if (arguments.length === 2) {
                k[b] = a
            } else {
                return k[b]
            }
        }
        h.config = k;
        h.configure = g
    }, {}],
    735: [function(d, g, f) {
        (function(c) {
            var i = d("./promise").Promise;
            var a = d("./utils").isFunction;

            function b() {
                var h;
                if (typeof c !== "undefined") {
                    h = c
                } else {
                    if (typeof window !== "undefined" && window.document) {
                        h = window
                    } else {
                        h = self
                    }
                }
                var k = "Promise" in h && "resolve" in h.Promise && "reject" in h.Promise && "all" in h.Promise && "race" in h.Promise && (function() {
                    var j;
                    new h.Promise(function(m) {
                        j = m
                    });
                    return a(j)
                }());
                if (!k) {
                    h.Promise = i
                }
            }
            f.polyfill = b
        }).call(this, typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {
        "./promise": 736,
        "./utils": 740
    }],
    736: [function(R, ae, L) {
        var O = R("./config").config;
        var Q = R("./config").configure;
        var M = R("./utils").objectOrFunction;
        var ah = R("./utils").isFunction;
        var ad = R("./utils").now;
        var ac = R("./all").all;
        var Z = R("./race").race;
        var X = R("./resolve").resolve;
        var af = R("./reject").reject;
        var J = R("./asap").asap;
        var P = 0;
        O.async = J;

        function ab(a) {
            if (!ah(a)) {
                throw new TypeError("You must pass a resolver function as the first argument to the promise constructor")
            }
            if (!(this instanceof ab)) {
                throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.")
            }
            this._subscribers = [];
            T(a, this)
        }

        function T(a, b) {
            function f(g) {
                I(b, g)
            }

            function c(g) {
                Y(b, g)
            }
            try {
                a(f, c)
            } catch (d) {
                c(d)
            }
        }

        function G(c, a, d, i) {
            var k = ah(d),
                f, g, b, j;
            if (k) {
                try {
                    f = d(i);
                    b = true
                } catch (h) {
                    j = true;
                    g = h
                }
            } else {
                f = i;
                b = true
            }
            if (K(a, f)) {
                return
            } else {
                if (k && b) {
                    I(a, f)
                } else {
                    if (j) {
                        Y(a, g)
                    } else {
                        if (c === ag) {
                            I(a, f)
                        } else {
                            if (c === N) {
                                Y(a, f)
                            }
                        }
                    }
                }
            }
        }
        var W = void 0;
        var S = 0;
        var ag = 1;
        var N = 2;

        function U(g, a, b, c) {
            var d = g._subscribers;
            var f = d.length;
            d[f] = a;
            d[f + ag] = b;
            d[f + N] = c
        }

        function H(c, h) {
            var a, b, d = c._subscribers,
                f = c._detail;
            for (var g = 0; g < d.length; g += 3) {
                a = d[g];
                b = d[g + h];
                G(h, a, b, f)
            }
            c._subscribers = null
        }
        ab.prototype = {
            constructor: ab,
            _state: undefined,
            _detail: undefined,
            _subscribers: undefined,
            then: function(a, c) {
                var b = this;
                var f = new this.constructor(function() {});
                if (this._state) {
                    var d = arguments;
                    O.async(function g() {
                        G(b._state, f, d[b._state - 1], b._detail)
                    })
                } else {
                    U(this, f, a, c)
                }
                return f
            },
            "catch": function(a) {
                return this.then(null, a)
            }
        };
        ab.all = ac;
        ab.race = Z;
        ab.resolve = X;
        ab.reject = af;

        function K(a, c) {
            var b = null,
                f;
            try {
                if (a === c) {
                    throw new TypeError("A promises callback cannot return that same promise.")
                }
                if (M(c)) {
                    b = c.then;
                    if (ah(b)) {
                        b.call(c, function(g) {
                            if (f) {
                                return true
                            }
                            f = true;
                            if (c !== g) {
                                I(a, g)
                            } else {
                                aa(a, g)
                            }
                        }, function(g) {
                            if (f) {
                                return true
                            }
                            f = true;
                            Y(a, g)
                        });
                        return true
                    }
                }
            } catch (d) {
                if (f) {
                    return true
                }
                Y(a, d);
                return true
            }
            return false
        }

        function I(a, b) {
            if (a === b) {
                aa(a, b)
            } else {
                if (!K(a, b)) {
                    aa(a, b)
                }
            }
        }

        function aa(a, b) {
            if (a._state !== W) {
                return
            }
            a._state = S;
            a._detail = b;
            O.async(F, a)
        }

        function Y(a, b) {
            if (a._state !== W) {
                return
            }
            a._state = S;
            a._detail = b;
            O.async(V, a)
        }

        function F(a) {
            H(a, a._state = ag)
        }

        function V(a) {
            H(a, a._state = N)
        }
        L.Promise = ab
    }, {
        "./all": 732,
        "./asap": 733,
        "./config": 734,
        "./race": 737,
        "./reject": 738,
        "./resolve": 739,
        "./utils": 740
    }],
    737: [function(k, i, g) {
        var h = k("./utils").isArray;

        function j(b) {
            var a = this;
            if (!h(b)) {
                throw new TypeError("You must pass an array to race.")
            }
            return new a(function(c, d) {
                var f = [],
                    p;
                for (var o = 0; o < b.length; o++) {
                    p = b[o];
                    if (p && typeof p.then === "function") {
                        p.then(c, d)
                    } else {
                        c(p)
                    }
                }
            })
        }
        g.race = j
    }, {
        "./utils": 740
    }],
    738: [function(f, i, g) {
        function h(a) {
            var b = this;
            return new b(function(c, d) {
                d(a)
            })
        }
        g.reject = h
    }, {}],
    739: [function(f, i, g) {
        function h(a) {
            if (a && typeof a === "object" && a.constructor === this) {
                return a
            }
            var b = this;
            return new b(function(c) {
                c(a)
            })
        }
        g.resolve = h
    }, {}],
    740: [function(n, m, i) {
        function l(a) {
            return k(a) || (typeof a === "object" && a !== null)
        }

        function k(a) {
            return typeof a === "function"
        }

        function j(a) {
            return Object.prototype.toString.call(a) === "[object Array]"
        }
        var o = Date.now || function() {
            return new Date().getTime()
        };
        i.objectOrFunction = l;
        i.isFunction = k;
        i.isArray = j;
        i.now = o
    }, {}],
    741: [function(d, g, f) {
        g.exports["Array.isArray"] = d("./ac-polyfills/Array/isArray");
        g.exports["Array.prototype.every"] = d("./ac-polyfills/Array/prototype.every");
        g.exports["Array.prototype.filter"] = d("./ac-polyfills/Array/prototype.filter");
        g.exports["Array.prototype.forEach"] = d("./ac-polyfills/Array/prototype.forEach");
        g.exports["Array.prototype.indexOf"] = d("./ac-polyfills/Array/prototype.indexOf");
        g.exports["Array.prototype.lastIndexOf"] = d("./ac-polyfills/Array/prototype.lastIndexOf");
        g.exports["Array.prototype.map"] = d("./ac-polyfills/Array/prototype.map");
        g.exports["Array.prototype.reduce"] = d("./ac-polyfills/Array/prototype.reduce");
        g.exports["Array.prototype.reduceRight"] = d("./ac-polyfills/Array/prototype.reduceRight");
        g.exports["Array.prototype.slice"] = d("./ac-polyfills/Array/prototype.slice");
        g.exports["Array.prototype.some"] = d("./ac-polyfills/Array/prototype.some");
        g.exports.CustomEvent = d("./ac-polyfills/CustomEvent");
        g.exports["Date.now"] = d("./ac-polyfills/Date/now");
        g.exports["Date.prototype.toISOString"] = d("./ac-polyfills/Date/prototype.toISOString");
        g.exports["Date.prototype.toJSON"] = d("./ac-polyfills/Date/prototype.toJSON");
        g.exports["Element-HTMLElement.prototype.classList"] = d("./ac-polyfills/Element-HTMLElement/prototype.classList");
        g.exports["Function.prototype.bind"] = d("./ac-polyfills/Function/prototype.bind");
        g.exports.JSON = d("./ac-polyfills/JSON");
        g.exports["Object.assign"] = d("./ac-polyfills/Object/assign");
        g.exports["Object.create"] = d("./ac-polyfills/Object/create");
        g.exports["Object.is"] = d("./ac-polyfills/Object/is");
        g.exports["Object.keys"] = d("./ac-polyfills/Object/keys");
        g.exports.Promise = d("./ac-polyfills/Promise");
        g.exports["String.prototype.trim"] = d("./ac-polyfills/String/prototype.trim");
        g.exports.XMLHttpRequest = d("./ac-polyfills/XMLHttpRequest");
        g.exports["console.log"] = d("./ac-polyfills/console.log");
        g.exports.getComputedStyle = d("./ac-polyfills/getComputedStyle");
        g.exports.html5shiv = d("./ac-polyfills/html5shiv");
        g.exports.matchMedia = d("./ac-polyfills/matchMedia");
        g.exports.requestAnimationFrame = d("./ac-polyfills/requestAnimationFrame");
        g.exports.all = {
            polyfill: function() {
                d("./ac-polyfills/Array/isArray").polyfill();
                d("./ac-polyfills/Array/prototype.every").polyfill();
                d("./ac-polyfills/Array/prototype.filter").polyfill();
                d("./ac-polyfills/Array/prototype.forEach").polyfill();
                d("./ac-polyfills/Array/prototype.indexOf").polyfill();
                d("./ac-polyfills/Array/prototype.lastIndexOf").polyfill();
                d("./ac-polyfills/Array/prototype.map").polyfill();
                d("./ac-polyfills/Array/prototype.reduce").polyfill();
                d("./ac-polyfills/Array/prototype.reduceRight").polyfill();
                d("./ac-polyfills/Array/prototype.slice").polyfill();
                d("./ac-polyfills/Array/prototype.some").polyfill();
                d("./ac-polyfills/CustomEvent").polyfill();
                d("./ac-polyfills/Date/now").polyfill();
                d("./ac-polyfills/Date/prototype.toISOString").polyfill();
                d("./ac-polyfills/Date/prototype.toJSON").polyfill();
                d("./ac-polyfills/Element-HTMLElement/prototype.classList").polyfill();
                d("./ac-polyfills/Function/prototype.bind").polyfill();
                d("./ac-polyfills/JSON").polyfill();
                d("./ac-polyfills/Object/assign").polyfill();
                d("./ac-polyfills/Object/create").polyfill();
                d("./ac-polyfills/Object/is").polyfill();
                d("./ac-polyfills/Object/keys").polyfill();
                d("./ac-polyfills/Promise").polyfill();
                d("./ac-polyfills/String/prototype.trim").polyfill();
                d("./ac-polyfills/XMLHttpRequest").polyfill();
                d("./ac-polyfills/console.log").polyfill();
                d("./ac-polyfills/getComputedStyle").polyfill();
                d("./ac-polyfills/html5shiv").polyfill();
                d("./ac-polyfills/matchMedia").polyfill();
                d("./ac-polyfills/requestAnimationFrame").polyfill()
            }
        }
    }, {
        "./ac-polyfills/Array/isArray": 742,
        "./ac-polyfills/Array/prototype.every": 743,
        "./ac-polyfills/Array/prototype.filter": 744,
        "./ac-polyfills/Array/prototype.forEach": 745,
        "./ac-polyfills/Array/prototype.indexOf": 746,
        "./ac-polyfills/Array/prototype.lastIndexOf": 747,
        "./ac-polyfills/Array/prototype.map": 748,
        "./ac-polyfills/Array/prototype.reduce": 749,
        "./ac-polyfills/Array/prototype.reduceRight": 750,
        "./ac-polyfills/Array/prototype.slice": 751,
        "./ac-polyfills/Array/prototype.some": 752,
        "./ac-polyfills/CustomEvent": 753,
        "./ac-polyfills/Date/now": 754,
        "./ac-polyfills/Date/prototype.toISOString": 755,
        "./ac-polyfills/Date/prototype.toJSON": 756,
        "./ac-polyfills/Element-HTMLElement/prototype.classList": 757,
        "./ac-polyfills/Function/prototype.bind": 758,
        "./ac-polyfills/JSON": 759,
        "./ac-polyfills/Object/assign": 760,
        "./ac-polyfills/Object/create": 761,
        "./ac-polyfills/Object/is": 762,
        "./ac-polyfills/Object/keys": 763,
        "./ac-polyfills/Promise": 764,
        "./ac-polyfills/String/prototype.trim": 765,
        "./ac-polyfills/XMLHttpRequest": 766,
        "./ac-polyfills/console.log": 767,
        "./ac-polyfills/getComputedStyle": 768,
        "./ac-polyfills/html5shiv": 769,
        "./ac-polyfills/matchMedia": 770,
        "./ac-polyfills/requestAnimationFrame": 771
    }],
    742: [function(d, g, f) {
        g.exports = {
            polyfill: function() {
                if (!Array.isArray) {
                    Array.isArray = function(a) {
                        return Object.prototype.toString.call(a) === "[object Array]"
                    }
                }
            }
        }
    }, {}],
    743: [function(d, g, f) {
        g.exports = {
            polyfill: function() {
                if (!Array.prototype.every) {
                    Array.prototype.every = function a(b, c) {
                        var i = Object(this);
                        var m = i.length >>> 0;
                        var l;
                        if (typeof b !== "function") {
                            throw new TypeError(b + " is not a function")
                        }
                        for (l = 0; l < m; l += 1) {
                            if (l in i && !b.call(c, i[l], l, i)) {
                                return false
                            }
                        }
                        return true
                    }
                }
            }
        }
    }, {}],
    744: [function(d, g, f) {
        g.exports = {
            polyfill: function() {
                if (!Array.prototype.filter) {
                    Array.prototype.filter = function a(b, c) {
                        var i = Object(this);
                        var o = i.length >>> 0;
                        var m;
                        var n = [];
                        if (typeof b !== "function") {
                            throw new TypeError(b + " is not a function")
                        }
                        for (m = 0; m < o; m += 1) {
                            if (m in i && b.call(c, i[m], m, i)) {
                                n.push(i[m])
                            }
                        }
                        return n
                    }
                }
            }
        }
    }, {}],
    745: [function(d, g, f) {
        g.exports = {
            polyfill: function() {
                if (!Array.prototype.forEach) {
                    Array.prototype.forEach = function a(b, c) {
                        var i = Object(this);
                        var m;
                        var l;
                        if (typeof b !== "function") {
                            throw new TypeError("No function object passed to forEach.")
                        }
                        for (m = 0; m < this.length; m += 1) {
                            l = i[m];
                            b.call(c, l, m, i)
                        }
                    }
                }
            }
        }
    }, {}],
    746: [function(d, g, f) {
        g.exports = {
            polyfill: function() {
                if (!Array.prototype.indexOf) {
                    Array.prototype.indexOf = function a(j, c) {
                        var b = c || 0;
                        var k = 0;
                        if (b < 0) {
                            b = this.length + c - 1;
                            if (b < 0) {
                                throw "Wrapped past beginning of array while looking up a negative start index."
                            }
                        }
                        for (k = 0; k < this.length; k++) {
                            if (this[k] === j) {
                                return k
                            }
                        }
                        return (-1)
                    }
                }
            }
        }
    }, {}],
    747: [function(d, g, f) {
        g.exports = {
            polyfill: function() {
                if (!Array.prototype.lastIndexOf) {
                    Array.prototype.lastIndexOf = function a(b, c) {
                        var l = Object(this);
                        var m = l.length >>> 0;
                        var i;
                        c = parseInt(c, 10);
                        if (m <= 0) {
                            return -1
                        }
                        i = (typeof c === "number") ? Math.min(m - 1, c) : m - 1;
                        i = i >= 0 ? i : m - Math.abs(i);
                        for (; i >= 0; i -= 1) {
                            if (i in l && b === l[i]) {
                                return i
                            }
                        }
                        return -1
                    }
                }
            }
        }
    }, {}],
    748: [function(d, g, f) {
        g.exports = {
            polyfill: function() {
                if (!Array.prototype.map) {
                    Array.prototype.map = function a(b, c) {
                        var m = Object(this);
                        var n = m.length >>> 0;
                        var i;
                        var o = new Array(n);
                        if (typeof b !== "function") {
                            throw new TypeError(b + " is not a function")
                        }
                        for (i = 0; i < n; i += 1) {
                            if (i in m) {
                                o[i] = b.call(c, m[i], i, m)
                            }
                        }
                        return o
                    }
                }
            }
        }
    }, {}],
    749: [function(d, g, f) {
        g.exports = {
            polyfill: function() {
                if (!Array.prototype.reduce) {
                    Array.prototype.reduce = function a(b, m) {
                        var i = Object(this);
                        var n = i.length >>> 0;
                        var c = 0;
                        var o;
                        if (typeof b !== "function") {
                            throw new TypeError(b + " is not a function")
                        }
                        if (typeof m === "undefined") {
                            if (!n) {
                                throw new TypeError("Reduce of empty array with no initial value")
                            }
                            o = i[0];
                            c = 1
                        } else {
                            o = m
                        }
                        while (c < n) {
                            if (c in i) {
                                o = b.call(undefined, o, i[c], c, i);
                                c += 1
                            }
                        }
                        return o
                    }
                }
            }
        }
    }, {}],
    750: [function(d, g, f) {
        g.exports = {
            polyfill: function() {
                if (!Array.prototype.reduceRight) {
                    Array.prototype.reduceRight = function a(b, m) {
                        var i = Object(this);
                        var n = i.length >>> 0;
                        var c = n - 1;
                        var o;
                        if (typeof b !== "function") {
                            throw new TypeError(b + " is not a function")
                        }
                        if (m === undefined) {
                            if (!n) {
                                throw new TypeError("Reduce of empty array with no initial value")
                            }
                            o = i[n - 1];
                            c = n - 2
                        } else {
                            o = m
                        }
                        while (c >= 0) {
                            if (c in i) {
                                o = b.call(undefined, o, i[c], c, i);
                                c -= 1
                            }
                        }
                        return o
                    }
                }
            }
        }
    }, {}],
    751: [function(d, g, f) {
        g.exports = {
            polyfill: function() {
                (function() {
                    var b = Array.prototype.slice;
                    try {
                        b.call(document.documentElement)
                    } catch (a) {
                        Array.prototype.slice = function(v, q) {
                            q = (typeof q !== "undefined") ? q : this.length;
                            if (Object.prototype.toString.call(this) === "[object Array]") {
                                return b.call(this, v, q)
                            }
                            var i, r = [],
                                p, t = this.length;
                            var u = v || 0;
                            u = (u >= 0) ? u : t + u;
                            var c = (q) ? q : t;
                            if (q < 0) {
                                c = t + q
                            }
                            p = c - u;
                            if (p > 0) {
                                r = new Array(p);
                                if (this.charAt) {
                                    for (i = 0; i < p; i++) {
                                        r[i] = this.charAt(u + i)
                                    }
                                } else {
                                    for (i = 0; i < p; i++) {
                                        r[i] = this[u + i]
                                    }
                                }
                            }
                            return r
                        }
                    }
                }())
            }
        }
    }, {}],
    752: [function(d, g, f) {
        g.exports = {
            polyfill: function() {
                if (!Array.prototype.some) {
                    Array.prototype.some = function a(b, c) {
                        var l = Object(this);
                        var m = l.length >>> 0;
                        var i;
                        if (typeof b !== "function") {
                            throw new TypeError(b + " is not a function")
                        }
                        for (i = 0; i < m; i += 1) {
                            if (i in l && b.call(c, l[i], i, l) === true) {
                                return true
                            }
                        }
                        return false
                    }
                }
            }
        }
    }, {}],
    753: [function(d, g, f) {
        g.exports = {
            polyfill: function() {
                if (document.createEvent) {
                    try {
                        new window.CustomEvent("click")
                    } catch (a) {
                        window.CustomEvent = (function() {
                            function b(j, c) {
                                c = c || {
                                    bubbles: false,
                                    cancelable: false,
                                    detail: undefined
                                };
                                var k = document.createEvent("CustomEvent");
                                k.initCustomEvent(j, c.bubbles, c.cancelable, c.detail);
                                return k
                            }
                            b.prototype = window.Event.prototype;
                            return b
                        }())
                    }
                }
            }
        }
    }, {}],
    754: [function(d, g, f) {
        g.exports = {
            polyfill: function() {
                if (!Date.now) {
                    Date.now = function a() {
                        return new Date().getTime()
                    }
                }
            }
        }
    }, {}],
    755: [function(d, g, f) {
        g.exports = {
            polyfill: function() {
                if (!Date.prototype.toISOString) {
                    Date.prototype.toISOString = function a() {
                        if (!isFinite(this)) {
                            throw new RangeError("Date.prototype.toISOString called on non-finite value.")
                        }
                        var c = {
                            year: this.getUTCFullYear(),
                            month: this.getUTCMonth() + 1,
                            day: this.getUTCDate(),
                            hours: this.getUTCHours(),
                            minutes: this.getUTCMinutes(),
                            seconds: this.getUTCSeconds(),
                            mseconds: (this.getUTCMilliseconds() / 1000).toFixed(3).substr(2, 3)
                        };
                        var b;
                        var i;
                        for (b in c) {
                            if (c.hasOwnProperty(b) && b !== "year" && b !== "mseconds") {
                                c[b] = String(c[b]).length === 1 ? "0" + String(c[b]) : String(c[b])
                            }
                        }
                        if (c.year < 0 || c.year > 9999) {
                            i = c.year < 0 ? "-" : "+";
                            c.year = i + String(Math.abs(c.year / 1000000)).substr(2, 6)
                        }
                        return c.year + "-" + c.month + "-" + c.day + "T" + c.hours + ":" + c.minutes + ":" + c.seconds + "." + c.mseconds + "Z"
                    }
                }
            }
        }
    }, {}],
    756: [function(d, g, f) {
        g.exports = {
            polyfill: function() {
                if (!Date.prototype.toJSON) {
                    Date.prototype.toJSON = function(b) {
                        var a = Object(this);
                        var k;
                        var c = function(m) {
                            var h = typeof m;
                            var i = [null, "undefined", "boolean", "string", "number"].some(function(l) {
                                return l === h
                            });
                            if (i) {
                                return true
                            }
                            return false
                        };
                        var j = function(i) {
                            var h;
                            if (c(i)) {
                                return i
                            }
                            h = (typeof i.valueOf === "function") ? i.valueOf() : (typeof i.toString === "function") ? i.toString() : null;
                            if (h && c(h)) {
                                return h
                            }
                            throw new TypeError(i + " cannot be converted to a primitive")
                        };
                        k = j(a);
                        if (typeof k === "number" && !isFinite(k)) {
                            return null
                        }
                        if (typeof a.toISOString !== "function") {
                            throw new TypeError("toISOString is not callable")
                        }
                        return a.toISOString.call(a)
                    }
                }
            }
        }
    }, {}],
    757: [function(d, g, f) {
        g.exports = {
            polyfill: function() {
                /*! @source http://purl.eligrey.com/github/classList.js/blob/master/classList.js*/
                if ("document" in self) {
                    if (!("classList" in document.createElement("_"))) {
                        (function(u) {
                            if (!("Element" in u)) {
                                return
                            }
                            var D = "classList",
                                y = "prototype",
                                b = u.Element[y],
                                C = Object,
                                t = String[y].trim || function() {
                                    return this.replace(/^\s+|\s+$/g, "")
                                },
                                B = Array[y].indexOf || function(h) {
                                    var i = 0,
                                        j = this.length;
                                    for (; i < j; i++) {
                                        if (i in this && this[i] === h) {
                                            return i
                                        }
                                    }
                                    return -1
                                },
                                a = function(i, h) {
                                    this.name = i;
                                    this.code = DOMException[i];
                                    this.message = h
                                },
                                x = function(h, i) {
                                    if (i === "") {
                                        throw new a("SYNTAX_ERR", "An invalid or illegal string was specified")
                                    }
                                    if (/\s/.test(i)) {
                                        throw new a("INVALID_CHARACTER_ERR", "String contains an invalid character")
                                    }
                                    return B.call(h, i)
                                },
                                A = function(h) {
                                    var i = t.call(h.getAttribute("class") || ""),
                                        j = i ? i.split(/\s+/) : [],
                                        k = 0,
                                        l = j.length;
                                    for (; k < l; k++) {
                                        this.push(j[k])
                                    }
                                    this._updateClassName = function() {
                                        h.setAttribute("class", this.toString())
                                    }
                                },
                                z = A[y] = [],
                                v = function() {
                                    return new A(this)
                                };
                            a[y] = Error[y];
                            z.item = function(h) {
                                return this[h] || null
                            };
                            z.contains = function(h) {
                                h += "";
                                return x(this, h) !== -1
                            };
                            z.add = function() {
                                var h = arguments,
                                    i = 0,
                                    k = h.length,
                                    j, l = false;
                                do {
                                    j = h[i] + "";
                                    if (x(this, j) === -1) {
                                        this.push(j);
                                        l = true
                                    }
                                } while (++i < k);
                                if (l) {
                                    this._updateClassName()
                                }
                            };
                            z.remove = function() {
                                var m = arguments,
                                    h = 0,
                                    k = m.length,
                                    i, l = false,
                                    j;
                                do {
                                    i = m[h] + "";
                                    j = x(this, i);
                                    while (j !== -1) {
                                        this.splice(j, 1);
                                        l = true;
                                        j = x(this, i)
                                    }
                                } while (++h < k);
                                if (l) {
                                    this._updateClassName()
                                }
                            };
                            z.toggle = function(j, i) {
                                j += "";
                                var k = this.contains(j),
                                    h = k ? i !== true && "remove" : i !== false && "add";
                                if (h) {
                                    this[h](j)
                                }
                                if (i === true || i === false) {
                                    return i
                                } else {
                                    return !k
                                }
                            };
                            z.toString = function() {
                                return this.join(" ")
                            };
                            if (C.defineProperty) {
                                var c = {
                                    get: v,
                                    enumerable: true,
                                    configurable: true
                                };
                                try {
                                    C.defineProperty(b, D, c)
                                } catch (w) {
                                    if (w.number === -2146823252) {
                                        c.enumerable = false;
                                        C.defineProperty(b, D, c)
                                    }
                                }
                            } else {
                                if (C[y].__defineGetter__) {
                                    b.__defineGetter__(D, v)
                                }
                            }
                        }(self))
                    } else {
                        (function() {
                            var b = document.createElement("_");
                            b.classList.add("c1", "c2");
                            if (!b.classList.contains("c2")) {
                                var a = function(j) {
                                    var k = DOMTokenList.prototype[j];
                                    DOMTokenList.prototype[j] = function(h) {
                                        var i, m = arguments.length;
                                        for (i = 0; i < m; i++) {
                                            h = arguments[i];
                                            k.call(this, h)
                                        }
                                    }
                                };
                                a("add");
                                a("remove")
                            }
                            b.classList.toggle("c3", false);
                            if (b.classList.contains("c3")) {
                                var c = DOMTokenList.prototype.toggle;
                                DOMTokenList.prototype.toggle = function(k, j) {
                                    if (1 in arguments && !this.contains(k) === !j) {
                                        return j
                                    } else {
                                        return c.call(this, k)
                                    }
                                }
                            }
                            b = null
                        }())
                    }
                }
            }
        }
    }, {}],
    758: [function(d, g, f) {
        g.exports = {
            polyfill: function() {
                if (!Function.prototype.bind) {
                    Function.prototype.bind = function(k) {
                        if (typeof this !== "function") {
                            throw new TypeError("Function.prototype.bind - what is trying to be bound is not callable")
                        }
                        var a = Array.prototype.slice.call(arguments, 1);
                        var b = this;
                        var j = function() {};
                        var c = function() {
                            return b.apply((this instanceof j && k) ? this : k, a.concat(Array.prototype.slice.call(arguments)))
                        };
                        j.prototype = this.prototype;
                        c.prototype = new j();
                        return c
                    }
                }
            }
        }
    }, {}],
    759: [function(require, module, exports) {
        module.exports = {
            polyfill: function() {
                if (typeof JSON !== "object") {
                    JSON = {}
                }(function() {
                    function f(n) {
                        return n < 10 ? "0" + n : n
                    }
                    if (typeof Date.prototype.toJSON !== "function") {
                        Date.prototype.toJSON = function() {
                            return isFinite(this.valueOf()) ? this.getUTCFullYear() + "-" + f(this.getUTCMonth() + 1) + "-" + f(this.getUTCDate()) + "T" + f(this.getUTCHours()) + ":" + f(this.getUTCMinutes()) + ":" + f(this.getUTCSeconds()) + "Z" : null
                        };
                        String.prototype.toJSON = Number.prototype.toJSON = Boolean.prototype.toJSON = function() {
                            return this.valueOf()
                        }
                    }
                    var cx, escapable, gap, indent, meta, rep;

                    function quote(string) {
                        escapable.lastIndex = 0;
                        return escapable.test(string) ? '"' + string.replace(escapable, function(a) {
                            var c = meta[a];
                            return typeof c === "string" ? c : "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4)
                        }) + '"' : '"' + string + '"'
                    }

                    function str(key, holder) {
                        var i, k, v, length, mind = gap,
                            partial, value = holder[key];
                        if (value && typeof value === "object" && typeof value.toJSON === "function") {
                            value = value.toJSON(key)
                        }
                        if (typeof rep === "function") {
                            value = rep.call(holder, key, value)
                        }
                        switch (typeof value) {
                            case "string":
                                return quote(value);
                            case "number":
                                return isFinite(value) ? String(value) : "null";
                            case "boolean":
                            case "null":
                                return String(value);
                            case "object":
                                if (!value) {
                                    return "null"
                                }
                                gap += indent;
                                partial = [];
                                if (Object.prototype.toString.apply(value) === "[object Array]") {
                                    length = value.length;
                                    for (i = 0; i < length; i += 1) {
                                        partial[i] = str(i, value) || "null"
                                    }
                                    v = partial.length === 0 ? "[]" : gap ? "[\n" + gap + partial.join(",\n" + gap) + "\n" + mind + "]" : "[" + partial.join(",") + "]";
                                    gap = mind;
                                    return v
                                }
                                if (rep && typeof rep === "object") {
                                    length = rep.length;
                                    for (i = 0; i < length; i += 1) {
                                        if (typeof rep[i] === "string") {
                                            k = rep[i];
                                            v = str(k, value);
                                            if (v) {
                                                partial.push(quote(k) + (gap ? ": " : ":") + v)
                                            }
                                        }
                                    }
                                } else {
                                    for (k in value) {
                                        if (Object.prototype.hasOwnProperty.call(value, k)) {
                                            v = str(k, value);
                                            if (v) {
                                                partial.push(quote(k) + (gap ? ": " : ":") + v)
                                            }
                                        }
                                    }
                                }
                                v = partial.length === 0 ? "{}" : gap ? "{\n" + gap + partial.join(",\n" + gap) + "\n" + mind + "}" : "{" + partial.join(",") + "}";
                                gap = mind;
                                return v
                        }
                    }
                    if (typeof JSON.stringify !== "function") {
                        escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g;
                        meta = {
                            "\b": "\\b",
                            "\t": "\\t",
                            "\n": "\\n",
                            "\f": "\\f",
                            "\r": "\\r",
                            '"': '\\"',
                            "\\": "\\\\"
                        };
                        JSON.stringify = function(value, replacer, space) {
                            var i;
                            gap = "";
                            indent = "";
                            if (typeof space === "number") {
                                for (i = 0; i < space; i += 1) {
                                    indent += " "
                                }
                            } else {
                                if (typeof space === "string") {
                                    indent = space
                                }
                            }
                            rep = replacer;
                            if (replacer && typeof replacer !== "function" && (typeof replacer !== "object" || typeof replacer.length !== "number")) {
                                throw new Error("JSON.stringify")
                            }
                            return str("", {
                                "": value
                            })
                        }
                    }
                    if (typeof JSON.parse !== "function") {
                        cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g;
                        JSON.parse = function(text, reviver) {
                            var j;

                            function walk(holder, key) {
                                var k, v, value = holder[key];
                                if (value && typeof value === "object") {
                                    for (k in value) {
                                        if (Object.prototype.hasOwnProperty.call(value, k)) {
                                            v = walk(value, k);
                                            if (v !== undefined) {
                                                value[k] = v
                                            } else {
                                                delete value[k]
                                            }
                                        }
                                    }
                                }
                                return reviver.call(holder, key, value)
                            }
                            text = String(text);
                            cx.lastIndex = 0;
                            if (cx.test(text)) {
                                text = text.replace(cx, function(a) {
                                    return "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4)
                                })
                            }
                            if (/^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]").replace(/(?:^|:|,)(?:\s*\[)+/g, ""))) {
                                j = eval("(" + text + ")");
                                return typeof reviver === "function" ? walk({
                                    "": j
                                }, "") : j
                            }
                            throw new SyntaxError("JSON.parse")
                        }
                    }
                }())
            }
        }
    }, {}],
    760: [function(d, g, f) {
        g.exports = {
            polyfill: function() {
                if (!Object.assign) {
                    if (!Object.keys) {
                        Object.keys = function a(c) {
                            var i = [];
                            var b;
                            if ((!c) || (typeof c.hasOwnProperty !== "function")) {
                                throw "Object.keys called on non-object."
                            }
                            for (b in c) {
                                if (c.hasOwnProperty(b)) {
                                    i.push(b)
                                }
                            }
                            return i
                        }
                    }
                    if (Object.defineProperty) {
                        if (!Object.assign) {
                            Object.defineProperty(Object, "assign", {
                                enumerable: false,
                                configurable: true,
                                writable: true,
                                value: function(c, C) {
                                    if (c === undefined || c === null) {
                                        throw new TypeError("Cannot convert first argument to object")
                                    }
                                    var D = Object(c);
                                    var u = false;
                                    var B;
                                    for (var A = 1; A < arguments.length; A++) {
                                        var x = arguments[A];
                                        if (x === undefined || x === null) {
                                            continue
                                        }
                                        var y = Object.keys(Object(x));
                                        for (var z = 0, v = y.length; z < v; z++) {
                                            var b = y[z];
                                            try {
                                                var w = Object.getOwnPropertyDescriptor(x, b);
                                                if (w !== undefined && w.enumerable) {
                                                    D[b] = x[b]
                                                }
                                            } catch (i) {
                                                if (!u) {
                                                    u = true;
                                                    B = i
                                                }
                                            }
                                        }
                                        if (u) {
                                            throw B
                                        }
                                    }
                                    return D
                                }
                            })
                        }
                    } else {
                        Object.assign = function() {
                            for (var b = 1; b < arguments.length; b++) {
                                for (var c in arguments[b]) {
                                    if (arguments[b].hasOwnProperty(c)) {
                                        arguments[0][c] = arguments[b][c]
                                    }
                                }
                            }
                            return arguments[0]
                        }
                    }
                }
            }
        }
    }, {}],
    761: [function(d, g, f) {
        g.exports = {
            polyfill: function() {
                if (!Object.create) {
                    var a = function() {};
                    Object.create = function(b) {
                        if (arguments.length > 1) {
                            throw new Error("Second argument not supported")
                        }
                        if (b === null || typeof b !== "object") {
                            throw new TypeError("Object prototype may only be an Object.")
                        }
                        a.prototype = b;
                        return new a()
                    }
                }
            }
        }
    }, {}],
    762: [function(d, g, f) {
        g.exports = {
            polyfill: function() {
                if (!Object.is) {
                    Object.is = function(a, b) {
                        if (a === 0 && b === 0) {
                            return 1 / a === 1 / b
                        }
                        if (a !== a) {
                            return b !== b
                        }
                        return a === b
                    }
                }
            }
        }
    }, {}],
    763: [function(d, g, f) {
        g.exports = {
            polyfill: function() {
                if (!Object.keys) {
                    Object.keys = function a(c) {
                        var i = [];
                        var b;
                        if ((!c) || (typeof c.hasOwnProperty !== "function")) {
                            throw "Object.keys called on non-object."
                        }
                        for (b in c) {
                            if (c.hasOwnProperty(b)) {
                                i.push(b)
                            }
                        }
                        return i
                    }
                }
            }
        }
    }, {}],
    764: [function(d, g, f) {
        g.exports = d("es6-promise")
    }, {
        "es6-promise": 772
    }],
    765: [function(d, g, f) {
        g.exports = {
            polyfill: function() {
                if (!String.prototype.trim) {
                    String.prototype.trim = function a() {
                        return this.replace(/^\s+|\s+$/g, "")
                    }
                }
            }
        }
    }, {}],
    766: [function(d, g, f) {
        g.exports = {
            polyfill: function() {
                window.XMLHttpRequest = window.XMLHttpRequest || function() {
                    var a;
                    try {
                        a = new ActiveXObject("Msxml2.XMLHTTP")
                    } catch (b) {
                        try {
                            a = new ActiveXObject("Microsoft.XMLHTTP")
                        } catch (b) {
                            a = false
                        }
                    }
                    return a
                }
            }
        }
    }, {}],
    767: [function(d, g, f) {
        g.exports = {
            polyfill: function() {
                (function(o) {
                    var a, b;
                    var l = {};
                    var c = function() {};
                    var m = "memory".split(",");
                    var n = ("assert,clear,count,debug,dir,dirxml,error,exception,group,groupCollapsed,groupEnd,info,log,markTimeline,profile,profiles,profileEnd,show,table,time,timeEnd,timeline,timelineEnd,timeStamp,trace,warn").split(",");
                    while (a = m.pop()) {
                        o[a] = o[a] || l
                    }
                    while (b = n.pop()) {
                        o[b] = o[b] || c
                    }
                })(this.console = this.console || {})
            }
        }
    }, {}],
    768: [function(d, g, f) {
        g.exports = {
            polyfill: function() {
                if (!window.getComputedStyle) {
                    function a(r, o, p) {
                        r.document;
                        var q = r.currentStyle[o].match(/([\d\.]+)(%|cm|em|in|mm|pc|pt|)/) || [0, 0, ""],
                            t = q[1],
                            v = q[2],
                            u;
                        p = !p ? p : /%|em/.test(v) && r.parentElement ? a(r.parentElement, "fontSize", null) : 16;
                        u = o == "fontSize" ? p : /width/i.test(o) ? r.clientWidth : r.clientHeight;
                        return v == "%" ? t / 100 * u : v == "cm" ? t * 0.3937 * 96 : v == "em" ? t * p : v == "in" ? t * 96 : v == "mm" ? t * 0.3937 * 96 / 10 : v == "pc" ? t * 12 * 96 / 72 : v == "pt" ? t * 96 / 72 : t
                    }

                    function b(p, v) {
                        var u = v == "border" ? "Width" : "",
                            q = v + "Top" + u,
                            l = v + "Right" + u,
                            t = v + "Bottom" + u,
                            r = v + "Left" + u;
                        p[v] = (p[q] == p[l] && p[q] == p[t] && p[q] == p[r] ? [p[q]] : p[q] == p[t] && p[r] == p[l] ? [p[q], p[l]] : p[r] == p[l] ? [p[q], p[l], p[t]] : [p[q], p[l], p[t], p[r]]).join(" ")
                    }

                    function c(q) {
                        var p = this,
                            r = q.currentStyle,
                            v = a(q, "fontSize"),
                            u = function(h) {
                                return "-" + h.toLowerCase()
                            },
                            o;
                        for (o in r) {
                            Array.prototype.push.call(p, o == "styleFloat" ? "float" : o.replace(/[A-Z]/, u));
                            if (o == "width") {
                                p[o] = q.offsetWidth + "px"
                            } else {
                                if (o == "height") {
                                    p[o] = q.offsetHeight + "px"
                                } else {
                                    if (o == "styleFloat") {
                                        p["float"] = r[o];
                                        p.cssFloat = r[o]
                                    } else {
                                        if (/margin.|padding.|border.+W/.test(o) && p[o] != "auto") {
                                            p[o] = Math.round(a(q, o, v)) + "px"
                                        } else {
                                            if (/^outline/.test(o)) {
                                                try {
                                                    p[o] = r[o]
                                                } catch (t) {
                                                    p.outlineColor = r.color;
                                                    p.outlineStyle = p.outlineStyle || "none";
                                                    p.outlineWidth = p.outlineWidth || "0px";
                                                    p.outline = [p.outlineColor, p.outlineWidth, p.outlineStyle].join(" ")
                                                }
                                            } else {
                                                p[o] = r[o]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        b(p, "margin");
                        b(p, "padding");
                        b(p, "border");
                        p.fontSize = Math.round(v) + "px"
                    }
                    c.prototype = {
                        constructor: c,
                        getPropertyPriority: function() {
                            throw new Error("NotSupportedError: DOM Exception 9")
                        },
                        getPropertyValue: function(i) {
                            return this[i.replace(/-\w/g, function(h) {
                                return h[1].toUpperCase()
                            })]
                        },
                        item: function(i) {
                            return this[i]
                        },
                        removeProperty: function() {
                            throw new Error("NoModificationAllowedError: DOM Exception 7")
                        },
                        setProperty: function() {
                            throw new Error("NoModificationAllowedError: DOM Exception 7")
                        },
                        getPropertyCSSValue: function() {
                            throw new Error("NotSupportedError: DOM Exception 9")
                        }
                    };
                    window.getComputedStyle = function(i) {
                        return new c(i)
                    }
                }
            }
        }
    }, {}],
    769: [function(d, g, f) {
        g.exports = {
            polyfill: function() {
                (function(F, D) {
                    var J = "3.7.2";
                    var M = F.html5 || {};
                    var I = /^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i;
                    var N = /^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i;
                    var c;
                    var H = "_html5shiv";
                    var P = 0;
                    var B = {};
                    var L;
                    (function() {
                        try {
                            var i = D.createElement("a");
                            i.innerHTML = "<xyz></xyz>";
                            c = ("hidden" in i);
                            L = i.childNodes.length == 1 || (function() {
                                (D.createElement)("a");
                                var j = D.createDocumentFragment();
                                return (typeof j.cloneNode == "undefined" || typeof j.createDocumentFragment == "undefined" || typeof j.createElement == "undefined")
                            }())
                        } catch (h) {
                            c = true;
                            L = true
                        }
                    }());

                    function K(j, k) {
                        var i = j.createElement("p"),
                            h = j.getElementsByTagName("head")[0] || j.documentElement;
                        i.innerHTML = "x<style>" + k + "</style>";
                        return h.insertBefore(i.lastChild, h.firstChild)
                    }

                    function E() {
                        var h = G.elements;
                        return typeof h == "string" ? h.split(" ") : h
                    }

                    function A(i, h) {
                        var j = G.elements;
                        if (typeof j != "string") {
                            j = j.join(" ")
                        }
                        if (typeof i != "string") {
                            i = i.join(" ")
                        }
                        G.elements = j + " " + i;
                        O(h)
                    }

                    function z(i) {
                        var h = B[i[H]];
                        if (!h) {
                            h = {};
                            P++;
                            i[H] = P;
                            B[P] = h
                        }
                        return h
                    }

                    function C(j, i, k) {
                        if (!i) {
                            i = D
                        }
                        if (L) {
                            return i.createElement(j)
                        }
                        if (!k) {
                            k = z(i)
                        }
                        var h;
                        if (k.cache[j]) {
                            h = k.cache[j].cloneNode()
                        } else {
                            if (N.test(j)) {
                                h = (k.cache[j] = k.createElem(j)).cloneNode()
                            } else {
                                h = k.createElem(j)
                            }
                        }
                        return h.canHaveChildren && !I.test(j) && !h.tagUrn ? k.frag.appendChild(h) : h
                    }

                    function b(m, j) {
                        if (!m) {
                            m = D
                        }
                        if (L) {
                            return m.createDocumentFragment()
                        }
                        j = j || z(m);
                        var i = j.frag.cloneNode(),
                            l = 0,
                            h = E(),
                            k = h.length;
                        for (; l < k; l++) {
                            i.createElement(h[l])
                        }
                        return i
                    }

                    function a(i, h) {
                        if (!h.cache) {
                            h.cache = {};
                            h.createElem = i.createElement;
                            h.createFrag = i.createDocumentFragment;
                            h.frag = h.createFrag()
                        }
                        i.createElement = function(j) {
                            if (!G.shivMethods) {
                                return h.createElem(j)
                            }
                            return C(j, i, h)
                        };
                        i.createDocumentFragment = Function("h,f", "return function(){var n=f.cloneNode(),c=n.createElement;h.shivMethods&&(" + E().join().replace(/[\w\-:]+/g, function(j) {
                            h.createElem(j);
                            h.frag.createElement(j);
                            return 'c("' + j + '")'
                        }) + ");return n}")(G, h.frag)
                    }

                    function O(i) {
                        if (!i) {
                            i = D
                        }
                        var h = z(i);
                        if (G.shivCSS && !c && !h.hasCSS) {
                            h.hasCSS = !!K(i, "article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}mark{background:#FF0;color:#000}template{display:none}")
                        }
                        if (!L) {
                            a(i, h)
                        }
                        return i
                    }
                    var G = {
                        elements: M.elements || "abbr article aside audio bdi canvas data datalist details dialog figcaption figure footer header hgroup main mark meter nav output picture progress section summary template time video",
                        version: J,
                        shivCSS: (M.shivCSS !== false),
                        supportsUnknownElements: L,
                        shivMethods: (M.shivMethods !== false),
                        type: "default",
                        shivDocument: O,
                        createElement: C,
                        createDocumentFragment: b,
                        addElements: A
                    };
                    F.html5 = G;
                    O(D)
                }(this, document))
            }
        }
    }, {}],
    770: [function(d, g, f) {
        g.exports = {
            polyfill: function() {
                window.matchMedia = window.matchMedia || (function(c, b) {
                    var m, o = c.documentElement,
                        n = o.firstElementChild || o.firstChild,
                        l = c.createElement("body"),
                        a = c.createElement("div");
                    a.id = "mq-test-1";
                    a.style.cssText = "position:absolute;top:-100em";
                    l.style.background = "none";
                    l.appendChild(a);
                    return function(h) {
                        a.innerHTML = '&shy;<style media="' + h + '"> #mq-test-1 { width:42px; }</style>';
                        o.insertBefore(l, n);
                        m = a.offsetWidth === 42;
                        o.removeChild(l);
                        return {
                            matches: m,
                            media: h
                        }
                    }
                }(document))
            }
        }
    }, {}],
    771: [function(d, g, f) {
        g.exports = {
            polyfill: function() {
                (function() {
                    var b = 0;
                    var a = ["ms", "moz", "webkit", "o"];
                    for (var c = 0; c < a.length && !window.requestAnimationFrame;
                        ++c) {
                        window.requestAnimationFrame = window[a[c] + "RequestAnimationFrame"];
                        window.cancelAnimationFrame = window[a[c] + "CancelAnimationFrame"] || window[a[c] + "CancelRequestAnimationFrame"]
                    }
                    if (!window.requestAnimationFrame) {
                        window.requestAnimationFrame = function(m, p) {
                            var q = Date.now();
                            var o = Math.max(0, 16 - (q - b));
                            var n = window.setTimeout(function() {
                                m(q + o)
                            }, o);
                            b = q + o;
                            return n
                        }
                    }
                    if (!window.cancelAnimationFrame) {
                        window.cancelAnimationFrame = function(i) {
                            clearTimeout(i)
                        }
                    }
                }())
            }
        }
    }, {}],
    772: [function(d, g, f) {
        arguments[4][731][0].apply(f, arguments)
    }, {
        "./promise/polyfill": 776,
        "./promise/promise": 777,
        dup: 731
    }],
    773: [function(d, g, f) {
        arguments[4][732][0].apply(f, arguments)
    }, {
        "./utils": 781,
        dup: 732
    }],
    774: [function(d, g, f) {
        arguments[4][733][0].apply(f, arguments)
    }, {
        _process: 1209,
        dup: 733
    }],
    775: [function(d, g, f) {
        arguments[4][734][0].apply(f, arguments)
    }, {
        dup: 734
    }],
    776: [function(d, g, f) {
        arguments[4][735][0].apply(f, arguments)
    }, {
        "./promise": 777,
        "./utils": 781,
        dup: 735
    }],
    777: [function(d, g, f) {
        arguments[4][736][0].apply(f, arguments)
    }, {
        "./all": 773,
        "./asap": 774,
        "./config": 775,
        "./race": 778,
        "./reject": 779,
        "./resolve": 780,
        "./utils": 781,
        dup: 736
    }],
    778: [function(d, g, f) {
        arguments[4][737][0].apply(f, arguments)
    }, {
        "./utils": 781,
        dup: 737
    }],
    779: [function(d, g, f) {
        arguments[4][738][0].apply(f, arguments)
    }, {
        dup: 738
    }],
    780: [function(d, g, f) {
        arguments[4][739][0].apply(f, arguments)
    }, {
        dup: 739
    }],
    781: [function(d, g, f) {
        arguments[4][740][0].apply(f, arguments)
    }, {
        dup: 740
    }],
    782: [function(d, g, f) {
        g.exports = {
            Queue: d("./ac-queue/Queue"),
            QueueItem: d("./ac-queue/QueueItem"),
            LiveQueue: d("./ac-queue/LiveQueue")
        }
    }, {
        "./ac-queue/LiveQueue": 783,
        "./ac-queue/Queue": 784,
        "./ac-queue/QueueItem": 785
    }],
    783: [function(i, o, j) {
        i("ac-polyfills")["Promise"].polyfill();
        i("ac-polyfills")["requestAnimationFrame"].polyfill();
        i("ac-polyfills")["Function.prototype.bind"].polyfill();
        var l = i("./Queue");
        var k = i("./QueueItem");

        function m(a) {
            this._queue = new l();
            this._maxProcesses = a || 1;
            this._availableSlots = this._maxProcesses;
            this._rafId = 0;
            this._isRunning = false;
            this._boundFunctions = {
                _run: this._run.bind(this),
                _releaseSlot: this._releaseSlot.bind(this)
            }
        }
        var n = m.prototype;
        n.start = function() {
            if (this._isRunning) {
                cancelAnimationFrame(this._rafId)
            }
            this._rafId = requestAnimationFrame(this._boundFunctions._run);
            this._isRunning = true
        };
        n.pause = function() {
            if (this._isRunning) {
                cancelAnimationFrame(this._rafId);
                this._rafId = 0
            }
            this._isRunning = false
        };
        n.stop = function() {
            this.pause();
            this.clear()
        };
        n.enqueue = function(b, a) {
            if (typeof b !== "function") {
                throw new Error("LiveQueue can only enqueue functions")
            }
            return this._queue.enqueue(b, a)
        };
        n.clear = function() {
            this._queue = new l()
        };
        n.destroy = function() {
            this.pause();
            this._isRunning = false;
            this._queue = null;
            this._boundFunctions = null
        };
        n.count = function() {
            return this._queue.count() + this.pending()
        };
        n.pending = function() {
            return this._maxProcesses - this._availableSlots
        };
        n.isEmpty = function() {
            return this.count() === 0
        };
        n._run = function() {
            if (!this._isRunning) {
                return
            }
            this._rafId = requestAnimationFrame(this._boundFunctions._run);
            if (this._queue.isEmpty() || this._availableSlots == 0) {
                return
            }
            var a = this._queue.dequeue();
            var b = a.data();
            if (this._isPromise(b)) {
                this._retainSlot();
                b.then(this._boundFunctions._releaseSlot, this._boundFunctions._releaseSlot)
            }
            this._stopRunningIfDone()
        };
        n._retainSlot = function() {
            this._availableSlots--
        };
        n._releaseSlot = function() {
            this._availableSlots++;
            this._stopRunningIfDone()
        };
        n._stopRunningIfDone = function() {
            if (this._rafId != 0 && this._queue.count() === 0 && this._availableSlots == this._maxProcesses) {
                cancelAnimationFrame(this._rafId);
                this._rafId = 0
            }
        };
        n._isPromise = function(a) {
            return !!(a && typeof a.then === "function")
        };
        o.exports = m
    }, {
        "./Queue": 784,
        "./QueueItem": 785,
        "ac-polyfills": 741
    }],
    784: [function(h, m, i) {
        var j = h("./QueueItem");

        function k() {
            this._items = []
        }
        var l = k.prototype;
        l.enqueue = function(a, b) {
            if (b === undefined) {
                b = k.PRIORITY_DEFAULT
            }
            return this.enqueueQueueItem(new j(a, b))
        };
        l.enqueueQueueItem = function(a) {
            this._items.push(a);
            return a
        };
        l.dequeue = function() {
            this._heapSort();
            var a = this._items.length - 1;
            var b = this._items[0];
            this._items[0] = this._items[a];
            this._items.pop();
            return b
        };
        l.peek = function() {
            if (this.count() == 0) {
                return null
            }
            this._heapSort();
            return this._items[0]
        };
        l.isEmpty = function() {
            return this._items.length === 0
        };
        l.count = function() {
            return this._items.length
        };
        l.toString = function() {
            var a = ["Queue total items: " + this.count() + "\n"];
            for (var b = 0; b < this.count(); ++b) {
                a.push(this._items[b].toString() + "\n")
            }
            return a.join("")
        };
        l._heapSort = function() {
            var d = 0;
            for (var a = this._items.length - 1; a >= 0; a--) {
                var f = a;
                while (f > 0) {
                    d++;
                    var c = Math.floor((f - 1) / 2);
                    if (this._items[f].compareTo(this._items[c]) >= 0) {
                        break
                    }
                    var b = this._items[f];
                    this._items[f] = this._items[c];
                    this._items[c] = b;
                    f = c
                }
            }
        };
        k.PRIORITY_LOW = 10;
        k.PRIORITY_DEFAULT = 5;
        k.PRIORITY_HIGH = 1;
        m.exports = k
    }, {
        "./QueueItem": 785
    }],
    785: [function(h, m, i) {
        var j = 0;

        function k(a, b) {
            this.priority = b;
            this.data = a;
            this.insertionOrder = j++
        }
        var l = k.prototype;
        l.compareTo = function(a) {
            if (this.priority < a.priority) {
                return -1
            } else {
                if (this.priority > a.priority) {
                    return 1
                } else {
                    return (this.insertionOrder < a.insertionOrder) ? -1 : 1
                }
            }
        };
        l.toString = function() {
            return "QueueItem {priority:" + this.priority + ",\tdata:" + this.data + "\tinsertionOrder:" + this.insertionOrder + "}"
        };
        m.exports = k
    }, {}],
    786: [function(d, g, f) {
        g.exports.DOMEmitter = d("./ac-dom-emitter/DOMEmitter")
    }, {
        "./ac-dom-emitter/DOMEmitter": 787
    }],
    787: [function(i, o, j) {
        var l;
        var m = i("ac-event-emitter").EventEmitter;
        var n = "dom-emitter";

        function k(a) {
            if (a === null) {
                return
            }
            this.el = a;
            this._bindings = {};
            this._eventEmitter = new m()
        }
        l = k.prototype;
        l._parseEventNames = function(a) {
            if (!a) {
                return [a]
            }
            return a.split(" ")
        };
        l._onListenerEvent = function(a, b) {
            this.trigger(a, b, false)
        };
        l._setListener = function(a) {
            this._bindings[a] = this._onListenerEvent.bind(this, a);
            this._addEventListener(a, this._bindings[a])
        };
        l._removeListener = function(a) {
            this._removeEventListener(a, this._bindings[a]);
            delete this._bindings[a]
        };
        l._addEventListener = function(b, a, c) {
            if (this.el.addEventListener) {
                this.el.addEventListener(b, a, c)
            } else {
                if (this.el.attachEvent) {
                    this.el.attachEvent("on" + b, a)
                } else {
                    target["on" + b] = a
                }
            }
            return this
        };
        l._removeEventListener = function(b, a, c) {
            if (this.el.removeEventListener) {
                this.el.removeEventListener(b, a, c)
            } else {
                this.el.detachEvent("on" + b, a)
            }
            return this
        };
        l._triggerInternalEvent = function(b, a) {
            this.trigger(n + ":" + b, a)
        };
        l.on = function(c, a, b) {
            c = this._parseEventNames(c);
            c.forEach(function(g, d, f) {
                if (!this.has(f)) {
                    this._setListener(f)
                }
                this._triggerInternalEvent("willon", {
                    evt: f,
                    callback: g,
                    context: d
                });
                this._eventEmitter.on(f, g, d);
                this._triggerInternalEvent("didon", {
                    evt: f,
                    callback: g,
                    context: d
                })
            }.bind(this, a, b));
            return this
        };
        l.off = function(d, a, b) {
            var c = Array.prototype.slice.call(arguments, 0);
            d = this._parseEventNames(d);
            d.forEach(function(g, h, t, f) {
                if (t.length === 0) {
                    this._eventEmitter.off();
                    var r;
                    for (r in this._bindings) {
                        if (this._bindings.hasOwnProperty(r)) {
                            this._removeListener(r)
                        }
                    }
                    return
                }
                this._triggerInternalEvent("willoff", {
                    evt: f,
                    callback: g,
                    context: h
                });
                this._eventEmitter.off(f, g, h);
                this._triggerInternalEvent("didoff", {
                    evt: f,
                    callback: g,
                    context: h
                });
                if (!this.has(f)) {
                    this._removeListener(f)
                }
            }.bind(this, a, b, c));
            return this
        };
        l.once = function(c, a, b) {
            c = this._parseEventNames(c);
            c.forEach(function(g, d, f) {
                if (!this.has(f)) {
                    this._setListener(f)
                }
                this._triggerInternalEvent("willonce", {
                    evt: f,
                    callback: g,
                    context: d
                });
                this._eventEmitter.once.call(this, f, g, d);
                this._triggerInternalEvent("didonce", {
                    evt: f,
                    callback: g,
                    context: d
                })
            }.bind(this, a, b));
            return this
        };
        l.has = function(c, a, b) {
            if (this._eventEmitter && this._eventEmitter.has.apply(this._eventEmitter, arguments)) {
                return true
            }
            return false
        };
        l.trigger = function(c, b, a) {
            c = this._parseEventNames(c);
            c.forEach(function(d, g, f) {
                this._eventEmitter.trigger(f, d, g)
            }.bind(this, b, a));
            return this
        };
        l.destroy = function() {
            this._triggerInternalEvent("willdestroy");
            this.off();
            this.el = this._eventEmitter = this._bindings = null
        };
        o.exports = k
    }, {
        "ac-event-emitter": 788
    }],
    788: [function(d, g, f) {
        arguments[4][20][0].apply(f, arguments)
    }, {
        "./ac-event-emitter/EventEmitter": 789,
        dup: 20
    }],
    789: [function(d, g, f) {
        arguments[4][21][0].apply(f, arguments)
    }, {
        dup: 21
    }],
    790: [function(d, g, f) {
        g.exports = {
            ScrollTimeUpdate: d("./ac-scroll-time-update/ScrollTimeUpdate"),
            ElementScrollTimeUpdate: d("./ac-scroll-time-update/ElementScrollTimeUpdate")
        }
    }, {
        "./ac-scroll-time-update/ElementScrollTimeUpdate": 791,
        "./ac-scroll-time-update/ScrollTimeUpdate": 792
    }],
    791: [function(o, l, i) {
        var m = o("./ScrollTimeUpdate"),
            n = o("ac-window-delegate").WindowDelegate;
        var k;
        var j = function(a, b) {
            b = b || {};
            this.el = a;
            this._updateOnResize = false;
            m.call(this, 0, 0, b);
            this.setOffsets();
            this._clock.on("update", this._onResizeClockUpdate, this);
            this._clock.on("draw", this._onResizeClockDraw, this);
            n.on("resize orientationchange", this._onResize, this)
        };
        k = j.prototype = new m(null);
        k.setOffsets = function() {
            var b = this.el.getBoundingClientRect(),
                c = n.scrollY(),
                a = b.top + c,
                d = b.bottom + c;
            if (this.options.startInView) {
                a = a - n.innerHeight()
            }
            if (typeof this.options.offsetTop === "function") {
                a = a + this.options.offsetTop()
            } else {
                if (typeof this.options.offsetTop === "number") {
                    a = a + this.options.offsetTop
                }
            }
            if (typeof this.options.offsetBottom === "function") {
                d = d - this.options.offsetBottom()
            } else {
                if (typeof this.options.offsetBottom === "number") {
                    d = d - this.options.offsetBottom
                }
            }
            this.min = a;
            this.max = d;
            this._distance = this.max - this.min;
            return this
        };
        k.destroy = function() {
            n.off("resize orientationchange", this._onResize, this);
            this._clock.off("update", this._onResizeClockUpdate, this);
            this._clock.off("draw", this._onResizeClockDraw, this);
            m.prototype.destroy.call(this)
        };
        k._onResize = function() {
            this._updateOnResize = true
        };
        k._onResizeClockUpdate = function() {
            if (!this._updateOnResize) {
                return
            }
            this.setOffsets()
        };
        k._onResizeClockDraw = function() {
            if (!this._updateOnResize) {
                return
            }
            this.setCurrentTime();
            this._updateOnResize = false
        };
        l.exports = j
    }, {
        "./ScrollTimeUpdate": 792,
        "ac-window-delegate": 1191
    }],
    792: [function(r, u, q) {
        var p, m = r("ac-event-emitter").EventEmitter,
            v = r("ac-clock"),
            l = r("ac-window-delegate").WindowDelegate,
            t = r("ac-value-smoother").ValueSmoother,
            n = r("ac-dom-emitter").DOMEmitter;
        var o = function(c, b, a) {
            if (c === null) {
                return
            }
            m.call(this);
            this.options = a || {};
            this.min = c;
            this.max = b;
            this._distance = b - c;
            this._clock = this.options.clock || v;
            this._emitter = l;
            this._lastTime = null;
            this._timeObj = null;
            if (this.options.el) {
                this._target = this.options.el;
                this._emitter = new n(this.options.el)
            }
            this._shouldUpdate = false;
            this._shouldDraw = false;
            this._didInitializeSmoothing = false;
            this._emitter.on("scroll", this._debounceTimeUpdate, this);
            this._clock.on("update", this._onClockUpdate, this);
            this._clock.on("draw", this._onClockDraw, this);
            if (this.options.smooth) {
                this._enableSmoothing(true)
            }
        };
        p = o.prototype = new m(null);
        p.setCurrentTime = function(b, a) {
            b = b || this._getCalculatedCurrentTime();
            if (b === this._lastTime) {
                return
            }
            this._timeObj = {
                time: b,
                lastTime: this._lastTime
            };
            this._triggerUpdate();
            if (a) {
                this._triggerDraw()
            } else {
                this._shouldDraw = true
            }
            this._lastTime = b
        };
        p.start = function() {
            this._clock.start()
        };
        p.stop = function() {
            this._clock.stop()
        };
        p.setSmoothing = function(a) {
            if (typeof a !== "boolean") {
                return
            }
            if (a) {
                this._enableSmoothing();
                return
            }
            this._disableSmoothing()
        };
        p.destroy = function() {
            this._disableSmoothing();
            this.off();
            this._emitter.off("scroll", this._debounceTimeUpdate, this);
            this._clock.off("update", this._onClockUpdate, this);
            this._clock.off("draw", this._onClockDraw, this);
            var a;
            for (a in this) {
                if (this.hasOwnProperty(a)) {
                    this[a] = null
                }
            }
        };
        p._getCalculatedCurrentTime = function() {
            var d = l.scrollY(),
                a = this.min,
                b = this.max,
                c = this._distance;
            if (this._target) {
                d = this._target.scrollTop
            }
            if (d < a) {
                d = a
            }
            if (d > b) {
                d = b
            }
            return (d - a) / (c)
        };
        p._debounceTimeUpdate = function() {
            this._shouldUpdate = true
        };
        p._triggerUpdate = function() {
            this.trigger("_update", this._timeObj);
            if (!this.options.smooth) {
                this.trigger("update", this._timeObj)
            }
        };
        p._triggerDraw = function() {
            this.trigger("_draw", this._timeObj);
            if (!this.options.smooth) {
                this.trigger("draw", this._timeObj)
            }
        };
        p._onClockUpdate = function() {
            if (!this._shouldUpdate) {
                return
            }
            this.setCurrentTime();
            this._shouldUpdate = false
        };
        p._onClockDraw = function() {
            if (!this._shouldDraw) {
                return
            }
            this._triggerDraw();
            this._shouldDraw = false
        };
        p._initializeSmoothing = function() {
            this.options.smoothingPrecision = this.options.smoothingPrecision || 4;
            this.options.smoothingPoolSize = this.options.smoothingPoolSize || t.prototype.sampling;
            this._smoother = new t(this.options.smoothingPoolSize);
            this._smoothedValues = this._lastSmoothedValues = this._lastUpdateEvent = {
                time: null,
                lastTime: null
            };
            this._didUpdateSmootherTrack = false;
            this._shouldUpdateAndDraw = false;
            this._didInitializeSmoothing = true
        };
        p._enableSmoothing = function(a) {
            if (!this._didInitializeSmoothing) {
                this._initializeSmoothing()
            }
            if (!this.options.smooth || a) {
                this.on("_update", this._updateSmoothing, this);
                this._clock.on("update", this._smoothOnUpdate, this);
                this._clock.on("draw", this._smoothOnDraw, this);
                this.options.smooth = true
            }
        };
        p._disableSmoothing = function() {
            this.off("_update", this._updateSmoothing, this);
            this._clock.off("update", this._smoothOnUpdate, this);
            this._clock.off("draw", this._smoothOnDraw, this);
            this.options.smooth = false
        };
        p._updateSmoothing = function(a) {
            a.lastTime = a.lastTime || 0;
            this._lastUpdateEvent = a;
            this._didUpdateSmootherTrack = true
        };
        p._smoothOnUpdate = function() {
            var b = (this._didUpdateSmootherTrack || this._lastSmoothedValues.time !== this._smoothedValues.time || this._lastSmoothedValues.lastTime !== this._smoothedValues.lastTime);
            if (!b) {
                this._shouldUpdateAndDraw = false;
                return
            }
            this._didUpdateSmootherTrack = false;
            var c = this._lastUpdateEvent.lastTime,
                a = {};
            a.lastTime = this._smoothedValues.time;
            a.time = this._smoother.smooth(this._lastUpdateEvent.time);
            if (a.lastTime === null) {
                a.lastTime = parseFloat(c.toFixed(this.options.smoothingPrecision))
            }
            a.time = parseFloat(a.time.toFixed(this.options.smoothingPrecision));
            a.lastTime = a.lastTime;
            this._lastSmoothedValues = this._smoothedValues;
            this._smoothedValues = a;
            this._shouldUpdateAndDraw = true;
            this.trigger("update", this._smoothedValues)
        };
        p._smoothOnDraw = function(a) {
            if (!this._shouldUpdateAndDraw) {
                return
            }
            this.trigger("draw", this._smoothedValues);
            this._shouldUpdateAndDraw = false
        };
        u.exports = o
    }, {
        "ac-clock": 26,
        "ac-dom-emitter": 786,
        "ac-event-emitter": 788,
        "ac-value-smoother": 834,
        "ac-window-delegate": 1191
    }],
    793: [function(d, g, f) {
        arguments[4][9][0].apply(f, arguments)
    }, {
        "./ac-browser/BrowserData": 794,
        "./ac-browser/IE": 795,
        dup: 9
    }],
    794: [function(d, g, f) {
        arguments[4][221][0].apply(f, arguments)
    }, {
        "./data": 796,
        dup: 221
    }],
    795: [function(d, g, f) {
        arguments[4][7][0].apply(f, arguments)
    }, {
        dup: 7
    }],
    796: [function(d, g, f) {
        arguments[4][8][0].apply(f, arguments)
    }, {
        dup: 8
    }],
    797: [function(d, g, f) {
        arguments[4][30][0].apply(f, arguments)
    }, {
        "./ac-prefixer/Prefixer": 798,
        dup: 30
    }],
    798: [function(d, g, f) {
        arguments[4][31][0].apply(f, arguments)
    }, {
        "./Prefixer/camelCasedEvents": 799,
        dup: 31
    }],
    799: [function(d, g, f) {
        arguments[4][32][0].apply(f, arguments)
    }, {
        dup: 32
    }],
    800: [function(d, g, f) {
        arguments[4][405][0].apply(f, arguments)
    }, {
        "./ac-dom-styles/getStyle": 801,
        "./ac-dom-styles/setStyle": 804,
        dup: 405
    }],
    801: [function(d, g, f) {
        arguments[4][406][0].apply(f, arguments)
    }, {
        "./shim/getComputedStyle": 805,
        "ac-prefixer": 797,
        dup: 406
    }],
    802: [function(d, g, f) {
        arguments[4][407][0].apply(f, arguments)
    }, {
        dup: 407
    }],
    803: [function(d, g, f) {
        arguments[4][408][0].apply(f, arguments)
    }, {
        dup: 408
    }],
    804: [function(d, g, f) {
        arguments[4][409][0].apply(f, arguments)
    }, {
        "./helpers/combinePartialProperties": 802,
        "./helpers/cssToObject": 803,
        "ac-prefixer": 797,
        dup: 409
    }],
    805: [function(d, g, f) {
        arguments[4][410][0].apply(f, arguments)
    }, {
        dup: 410
    }],
    806: [function(d, g, f) {
        arguments[4][20][0].apply(f, arguments)
    }, {
        "./ac-event-emitter/EventEmitter": 807,
        dup: 20
    }],
    807: [function(d, g, f) {
        arguments[4][21][0].apply(f, arguments)
    }, {
        dup: 21
    }],
    808: [function(d, g, f) {
        arguments[4][30][0].apply(f, arguments)
    }, {
        "./ac-prefixer/Prefixer": 809,
        dup: 30
    }],
    809: [function(d, g, f) {
        arguments[4][31][0].apply(f, arguments)
    }, {
        "./Prefixer/camelCasedEvents": 810,
        dup: 31
    }],
    810: [function(d, g, f) {
        arguments[4][32][0].apply(f, arguments)
    }, {
        dup: 32
    }],
    811: [function(d, g, f) {
        arguments[4][251][0].apply(f, arguments)
    }, {
        "./ac-feature/canvasAvailable": 812,
        "./ac-feature/continuousScrollEventsAvailable": 813,
        "./ac-feature/cookiesAvailable": 814,
        "./ac-feature/cssLinearGradientAvailable": 815,
        "./ac-feature/cssPropertyAvailable": 816,
        "./ac-feature/helpers/memoize": 818,
        "./ac-feature/isDesktop": 819,
        "./ac-feature/isHandheld": 820,
        "./ac-feature/isRetina": 821,
        "./ac-feature/isTablet": 822,
        "./ac-feature/localStorageAvailable": 823,
        "./ac-feature/mediaElementsAvailable": 824,
        "./ac-feature/sessionStorageAvailable": 825,
        "./ac-feature/svgAvailable": 826,
        "./ac-feature/threeDTransformsAvailable": 827,
        "./ac-feature/touchAvailable": 828,
        "./ac-feature/webGLAvailable": 829,
        dup: 251
    }],
    812: [function(d, g, f) {
        arguments[4][252][0].apply(f, arguments)
    }, {
        "./helpers/globals": 817,
        dup: 252
    }],
    813: [function(d, g, f) {
        arguments[4][253][0].apply(f, arguments)
    }, {
        "./touchAvailable": 828,
        "ac-browser": 793,
        dup: 253
    }],
    814: [function(d, g, f) {
        arguments[4][254][0].apply(f, arguments)
    }, {
        "./helpers/globals": 817,
        dup: 254
    }],
    815: [function(d, g, f) {
        arguments[4][255][0].apply(f, arguments)
    }, {
        "./cssPropertyAvailable": 816,
        dup: 255
    }],
    816: [function(d, g, f) {
        arguments[4][256][0].apply(f, arguments)
    }, {
        "ac-prefixer": 808,
        dup: 256
    }],
    817: [function(d, g, f) {
        arguments[4][212][0].apply(f, arguments)
    }, {
        dup: 212
    }],
    818: [function(d, g, f) {
        arguments[4][258][0].apply(f, arguments)
    }, {
        dup: 258
    }],
    819: [function(d, g, f) {
        arguments[4][259][0].apply(f, arguments)
    }, {
        "./helpers/globals": 817,
        "./touchAvailable": 828,
        dup: 259
    }],
    820: [function(d, g, f) {
        arguments[4][260][0].apply(f, arguments)
    }, {
        "./isDesktop": 819,
        "./isTablet": 822,
        dup: 260
    }],
    821: [function(d, g, f) {
        arguments[4][261][0].apply(f, arguments)
    }, {
        "./helpers/globals": 817,
        dup: 261
    }],
    822: [function(d, g, f) {
        arguments[4][262][0].apply(f, arguments)
    }, {
        "./helpers/globals": 817,
        "./isDesktop": 819,
        dup: 262
    }],
    823: [function(d, g, f) {
        arguments[4][263][0].apply(f, arguments)
    }, {
        "./helpers/globals": 817,
        dup: 263
    }],
    824: [function(d, g, f) {
        arguments[4][264][0].apply(f, arguments)
    }, {
        "./helpers/globals": 817,
        dup: 264
    }],
    825: [function(d, g, f) {
        arguments[4][265][0].apply(f, arguments)
    }, {
        "./helpers/globals": 817,
        dup: 265
    }],
    826: [function(d, g, f) {
        arguments[4][266][0].apply(f, arguments)
    }, {
        "./helpers/globals": 817,
        dup: 266
    }],
    827: [function(d, g, f) {
        arguments[4][267][0].apply(f, arguments)
    }, {
        "./cssPropertyAvailable": 816,
        dup: 267
    }],
    828: [function(d, g, f) {
        arguments[4][268][0].apply(f, arguments)
    }, {
        "./helpers/globals": 817,
        dup: 268
    }],
    829: [function(d, g, f) {
        arguments[4][269][0].apply(f, arguments)
    }, {
        "./helpers/globals": 817,
        dup: 269
    }],
    830: [function(M, W, A) {
        M("ac-polyfills/Object/assign");
        var F = M("ac-browser");
        var J = M("ac-feature");
        var V = M("ac-classlist");
        var G = M("ac-dom-styles");
        var C = M("ac-dom-metrics");
        var Q = M("ac-dom-events");
        var L = M("ac-event-emitter");
        var X = /android/i;
        var T = navigator.appVersion.match(X) && navigator.userAgent.match(X);
        var U = J.cssPropertyAvailable("position", "sticky");
        var H = "onorientationchange" in window;
        var N = H ? "orientationchange" : "resize";
        var I = 100;
        var E = "b-placeholder-container";
        var R = "b-sticky-placeholder";
        var P = U ? "native-sticky" : "shimmed-sticky";
        var O = "is-sticking";
        var S = "is-stuck";
        var D = "is-holding-place";
        var K = "b-sticky";
        var B = function(b, a) {
            this.el = b;
            this.options = Object.assign({}, a)
        };
        B.addEventListeners = function() {
            if (!B.isListeningToScroll) {
                B.isListeningToScroll = true;
                Q.addEventListener(window, "scroll", B.scrollEventListener);
                Q.addEventListener(window, "resize", B.orientationResizeListener);
                Q.addEventListener(window, "orientationchange", B.orientationResizeListener);
                Q.addEventListener(document, "touchmove", B.touchmoveEventListener)
            }
        };
        B.stickies = [];
        B.create = function(b, c) {
            var a = new B(b, c);
            a.initialize();
            B.stickies.push(a);
            B.addEventListeners();
            B.scrollEventListener();
            return a
        };
        B.getScrollY = function() {
            return window.scrollY || document.documentElement.scrollTop
        };
        B.hasStickies = function() {
            return B.stickies.length
        };
        B.isStickingTop = function(b) {
            var a = B.getScrollY();
            return a >= b.getOriginTop() && a <= b.getEndTop()
        };
        B.isStuckTop = function(a) {
            return B.getScrollY() >= a.getEndTop()
        };
        B.isStickingBottom = function(b) {
            var a = B._getScrollPlusViewport();
            return a <= b.getOriginBottom() && a >= b.getEndBottom()
        };
        B.isStuckBottom = function(b) {
            var a = B._getScrollPlusViewport();
            return a <= b.getEndBottom()
        };
        B.orientationResizeListener = function() {
            if (B.hasStickies()) {
                if (B.orientationResizeDebounce) {
                    B._clearOrientationChangeDebounce()
                }
                B.orientationResizeDebounce = B._getOrientationChangeDebounce()
            }
        };
        B.scrollEventListener = function() {
            if (B.hasStickies()) {
                for (var c = 0, a = B.hasStickies(), b; c < a; c++) {
                    b = B.stickies[c];
                    B.update(b)
                }
            }
        };
        B.touchmoveEventListener = function() {
            if (B.hasStickies()) {
                for (var c = 0, a = B.hasStickies(), b; c < a; c++) {
                    b = B.stickies[c];
                    if (b.options.touchmove) {
                        B.update(b)
                    }
                }
            }
        };
        B.update = function(b) {
            var a = b.type;
            if (a === "top") {
                B.updateTop(b)
            }
            if (a === "bottom") {
                B.updateBottom(b)
            }
        };
        B.updateBottom = function(a) {
            if (B.isStickingBottom(a)) {
                if (!a.isSticking() || a.isStuck()) {
                    a.stickBottom()
                }
            } else {
                if (B.isStuckBottom(a)) {
                    if (!a.isStuck()) {
                        a.stuckBottom()
                    }
                } else {
                    if (a.isNotDefaultState()) {
                        a.unstickBottom()
                    }
                }
            }
        };
        B.updateTop = function(a) {
            if (B.isStickingTop(a)) {
                if (!a.isSticking() || a.isStuck()) {
                    a.stickTop()
                }
            } else {
                if (B.isStuckTop(a)) {
                    if (!a.isStuck()) {
                        a.stuckTop()
                    }
                } else {
                    if (a.isNotDefaultState()) {
                        a.unstickTop()
                    }
                }
            }
        };
        B._clearOrientationChangeDebounce = function() {
            clearTimeout(B.orientationResizeDebounce);
            B.orientationResizeDebounce = false
        };
        B._getOrientationChangeDebounce = function() {
            var a = setTimeout(B._resetStickies, I);
            return a
        };
        B._getScrollPlusViewport = function() {
            var b = B.getScrollY();
            var a = B._getViewportHeight();
            return b + a
        };
        B._getViewportHeight = function() {
            return window.innerHeight || document.documentElement.clientHeight
        };
        B._resetStickies = function() {
            var b;
            for (var c = 0, a = B.hasStickies(); c < a; c++) {
                b = B.stickies[c];
                if (b.type === "bottom") {
                    b.unstickBottom();
                    b.updatePlaceholderHeight();
                    B.updateBottom(b)
                } else {
                    b.unstickTop();
                    b.updatePlaceholderHeight();
                    B.updateTop(b)
                }
            }
        };
        B.prototype = Object.assign({
            createPlaceHolder: function() {
                var a = document.createElement("div");
                a.className = E;
                var b = document.createElement("div");
                a.style.position = "relative";
                a.appendChild(b);
                this.updatePlaceholderHeight(b);
                V.add(b, R, P);
                this.el.parentNode.insertBefore(a, this.el);
                return b
            },
            updatePlaceholderHeight: function(a) {
                var b = G.getStyle(this.el, "marginTop", "marginBottom");
                a = a || this.placeHolder;
                G.setStyle(a, {
                    height: this._getElHeight() + "px",
                    marginTop: b.marginTop,
                    marginBottom: b.marginBottom
                })
            },
            getPositionValue: function() {
                if (typeof this.positionValue !== "number") {
                    this.positionValue = this._getPositionValue()
                }
                return this.positionValue
            },
            getOriginTop: function() {
                return this._getPlaceHolderOffsetY() - this.getPositionValue()
            },
            getOriginBottom: function() {
                var a = this.getPositionValue();
                return this._getPlaceHolderOffsetY() + this.placeHolder.offsetHeight + a
            },
            getParentEndTop: function() {
                var a = this._getParentPadding();
                var b = this._getBottomOfParent();
                return b - a
            },
            getParentEndBottom: function() {
                return this._getParentOffsetY()
            },
            getEndTop: function() {
                var a = this.getParentEndTop();
                return a - (this.el.offsetHeight + this.getPositionValue())
            },
            getEndBottom: function() {
                return this._getParentOffsetY() + this.el.offsetHeight + this.getPositionValue()
            },
            getStuckPositionTop: function() {
                var a = this._getParentPaddingBottom();
                return this.el.parentNode.offsetHeight - this.el.offsetHeight - a
            },
            isNotDefaultState: function() {
                return this.isSticking() || this.isStuck()
            },
            initialize: function() {
                this._setStickySupportTypeClass();
                this._setBStickyClass();
                this.type = this._getType();
                this.placeHolder = this.createPlaceHolder();
                this.updatePlaceholderHeight();
                this.origin = this.getOriginTop()
            },
            isSticking: function() {
                return V.contains(this.el, O)
            },
            isStuck: function() {
                return V.contains(this.el, S)
            },
            stickTop: function() {
                this._triggerStickyStateEvent();
                this._addStickingClasses();
                this._removeStuckClasses();
                this._setUnstickStyles()
            },
            stuckTop: function() {
                this._triggerStuckStateEvent();
                this._addStuckClasses();
                this._addStickingClasses();
                this._addStuckStylesTop(U)
            },
            stickBottom: function() {
                this._triggerStickyStateEvent();
                this._addStickingClasses();
                this._removeStuckClasses();
                this._setStickStylesBottom(U)
            },
            stuckBottom: function() {
                this._triggerStuckStateEvent();
                this._addStuckClasses();
                this._setStuckStylesBottom(U)
            },
            unstickTop: function() {
                this._triggerDefaultStateEvent();
                this._removeStuckAndStickingClasses();
                this._setUnstickStyles(U)
            },
            unstickBottom: function() {
                this._triggerDefaultStateEvent();
                this._removeStuckAndStickingClasses();
                this._setUnstickStyles(U)
            },
            _addStuckStylesTop: function(a) {
                if (!a) {
                    G.setStyle(this.el, {
                        top: this.getStuckPositionTop() + "px"
                    })
                }
            },
            _addStuckClasses: function() {
                V.add(this.el, S);
                V.add(this.placeHolder, S)
            },
            _addStickingClasses: function() {
                V.add(this.el, O);
                V.add(this.placeHolder, D)
            },
            _getType: function() {
                var a;
                var b;
                try {
                    b = G.getStyle(this.el, ["top", "bottom"]);
                    if (b.top) {
                        a = "top"
                    } else {
                        if (b.bottom) {
                            a = "bottom"
                        }
                    }
                } catch (c) {
                    throw "Sticky element must have top or bottom positioning defined"
                }
                return a
            },
            _getParentOffsetY: function() {
                return (B.getScrollY()) + this.el.parentNode.getBoundingClientRect().top
            },
            _getBottomOfParent: function() {
                return this._getParentOffsetY() + this.el.parentNode.offsetHeight
            },
            _getParentPaddingBottom: function() {
                var a = G.getStyle(this.el.parentNode, "paddingBottom");
                var b = parseInt(a.paddingBottom, 10);
                return isNaN(b) ? 0 : b
            },
            _getParentPadding: function() {
                var b = G.getStyle(this.el.parentNode, ["paddingBottom", "paddingTop"]);
                var a;
                for (var c in b) {
                    a = parseInt(b[c], 10);
                    b[c] = isNaN(a) ? 0 : a
                }
                return b.paddingTop + b.paddingBottom
            },
            _getPlaceHolderOffsetY: function() {
                return B.getScrollY() + this.placeHolder.getBoundingClientRect().top
            },
            _getPositionValue: function() {
                return parseInt(window.getComputedStyle(this.el)[this.type], 10) || 0
            },
            _getElHeight: function() {
                return this.el.offsetHeight
            },
            _getElWidth: function() {
                return this.el.offsetWidth
            },
            _getStuckPositionBottom: function() {
                return this.el.parentNode.offsetHeight - this.el.offsetHeight
            },
            _removeStickingClasses: function() {
                V.remove(this.el, O);
                V.remove(this.placeHolder, D)
            },
            _removeStuckClasses: function() {
                V.remove(this.el, S);
                V.remove(this.placeHolder, S)
            },
            _removeStuckAndStickingClasses: function() {
                this._removeStuckClasses();
                this._removeStickingClasses()
            },
            _setBStickyClass: function() {
                V.add(this.el, K)
            },
            _setStickySupportTypeClass: function() {
                V.add(this.el, P)
            },
            _setStuckStylesBottom: function(a) {
                if (!a) {
                    var b = this._getStuckPositionBottom();
                    G.setStyle(this.el, {
                        bottom: b + "px"
                    })
                }
            },
            _setUnstickStyles: function(a) {
                if (!a) {
                    G.setStyle(this.el, {
                        position: "",
                        top: "",
                        bottom: ""
                    })
                }
            },
            _setStickStylesBottom: function(a) {
                if (!a) {
                    var b = this.getPositionValue();
                    G.setStyle(this.el, {
                        bottom: b + "px"
                    })
                }
            },
            _triggerDefaultStateEvent: function() {
                this.trigger("became-unsticky")
            },
            _triggerStickyStateEvent: function() {
                this.trigger("became-sticky")
            },
            _triggerStuckStateEvent: function() {
                this.trigger("became-stuck")
            }
        }, L.EventEmitter.prototype);
        W.exports = B
    }, {
        "ac-browser": 793,
        "ac-classlist": 17,
        "ac-dom-events": 67,
        "ac-dom-metrics": 90,
        "ac-dom-styles": 800,
        "ac-event-emitter": 806,
        "ac-feature": 811,
        "ac-polyfills/Object/assign": 728
    }],
    831: [function(d, g, f) {
        g.exports = {
            Swipe: d("./ac-swipe/Swipe")
        }
    }, {
        "./ac-swipe/Swipe": 832
    }],
    832: [function(i, n, j) {
        var o = i("ac-object").create;
        var l = i("ac-event-emitter").EventEmitter;

        function k(a) {
            this.el = a;
            this.minSwipeInPixels = 72;
            this.fingerCount = 0;
            this.startX = 0;
            this.startY = 0;
            this.currentX = 0;
            this.currentY = 0;
            this.swipeLength = 0;
            this.swipeAngle = 0;
            this.swipeDirection = 0;
            this.eventTriggered = false;
            this._init()
        }
        k.TOUCH_START = "touchstart";
        k.TOUCH_END = "touchend";
        k.TOUCH_MOVE = "touchmove";
        k.TOUCH_CANCEL = "touchcancel";
        k.SWIPE_RIGHT = "swiperight";
        k.SWIPE_LEFT = "swipeleft";
        k.SWIPE_UP = "swipeup";
        k.SWIPE_DOWN = "swipedown";
        var m = k.prototype = o(l.prototype);
        k.prototype.constructor = k;
        m.destroy = function() {
            removeEventListener(this.el, k.TOUCH_START, this._boundFunctions._touchStart);
            removeEventListener(this.el, k.TOUCH_MOVE, this._boundFunctions._touchMove);
            removeEventListener(this.el, k.TOUCH_END, this._boundFunctions._touchEnd);
            removeEventListener(this.el, k.TOUCH_CANCEL, this._boundFunctions._touchCancel);
            this.el = null;
            this._boundFunctions = null;
            this.off()
        };
        m._init = function() {
            this._boundFunctions = {
                _touchStart: this._touchStart.bind(this),
                _touchMove: this._touchMove.bind(this),
                _touchEnd: this._touchEnd.bind(this),
                _touchCancel: this._touchCancel.bind(this)
            };
            this.el.addEventListener(k.TOUCH_START, this._boundFunctions._touchStart, false);
            this.el.addEventListener(k.TOUCH_MOVE, this._boundFunctions._touchMove, false);
            this.el.addEventListener(k.TOUCH_END, this._boundFunctions._touchEnd, false);
            this.el.addEventListener(k.TOUCH_CANCEL, this._boundFunctions._touchCancel, false)
        };
        m._touchStart = function(a) {
            this.fingerCount = a.touches.length;
            if (this.fingerCount === 1) {
                this.startX = a.touches[0].screenX;
                this.startY = a.touches[0].screenY
            } else {
                this._touchCancel()
            }
        };
        m._touchMove = function(a) {
            if (a.touches.length === 1) {
                this.currentX = a.touches[0].screenX;
                this.currentY = a.touches[0].screenY;
                this._setSwipeLength.call(this)
            } else {
                this._touchCancel()
            }
        };
        m._touchEnd = function(a) {
            if (this.fingerCount === 1 && this.currentX !== 0) {
                this._setSwipeLength();
                var b = Math.abs(this.startX - this.currentX);
                var c = Math.abs(this.startY - this.currentY);
                if (c > b) {
                    this._touchCancel();
                    return
                }
                if (this.swipeLength >= this.minSwipeInPixels && !this.eventTriggered) {
                    this._setSwipeAngle();
                    this._setSwipeDirection();
                    this._triggerSwipeEvent()
                }
            } else {
                this._touchCancel()
            }
        };
        m._touchCancel = function() {
            this._reset()
        };
        m._setSwipeLength = function() {
            this.swipeLength = Math.round(Math.sqrt(Math.pow(this.currentX - this.startX, 2) + Math.pow(this.currentY - this.startY, 2)))
        };
        m._setSwipeAngle = function() {
            var a = this.startX - this.currentX;
            var b = this.currentY - this.startY;
            var c = Math.atan2(b, a);
            this.swipeAngle = Math.round(c * 180 / Math.PI);
            if (this.swipeAngle < 0) {
                this.swipeAngle = 360 - Math.abs(this.swipeAngle)
            }
        };
        m._setSwipeDirection = function() {
            if ((this.swipeAngle <= 45) && (this.swipeAngle >= 0) || (this.swipeAngle <= 360) && (this.swipeAngle >= 315)) {
                this.swipeDirection = k.SWIPE_LEFT
            } else {
                if ((this.swipeAngle >= 135) && (this.swipeAngle <= 225)) {
                    this.swipeDirection = k.SWIPE_RIGHT
                } else {
                    if ((this.swipeAngle > 45) && (this.swipeAngle < 135)) {
                        this.swipeDirection = k.SWIPE_DOWN
                    } else {
                        this.swipeDirection = k.SWIPE_UP
                    }
                }
            }
        };
        m._triggerSwipeEvent = function() {
            this.trigger(this.swipeDirection, {
                cancelable: true
            });
            this.eventTriggered = true;
            this._touchCancel()
        };
        m._reset = function() {
            this.fingerCount = 0;
            this.startX = 0;
            this.startY = 0;
            this.currentX = 0;
            this.currentY = 0;
            this.swipeLength = 0;
            this.swipeAngle = 0;
            this.swipeDirection = 0;
            this.eventTriggered = false
        };
        n.exports = k
    }, {
        "ac-event-emitter": 202,
        "ac-object": 713
    }],
    833: [function(d, g, f) {
        g.exports = {
            viewports: {
                large: {
                    "min-width": 1069,
                    "max-width": 1441,
                    content: 980,
                    oldie: true
                },
                xlarge: {
                    "min-width": 1442,
                    content: 980
                },
                medium: {
                    "min-width": 736,
                    "max-width": 1068,
                    content: 692
                },
                small: {
                    "min-width": 320,
                    "max-width": 735,
                    content: 288,
                    "max-device-width": 768
                }
            },
            "viewports-smallondesktop": {
                large: {
                    "min-width": 1069,
                    "max-width": 1441,
                    content: 980,
                    oldie: true
                },
                xlarge: {
                    "min-width": 1442,
                    content: 980
                },
                medium: {
                    "min-width": 736,
                    "max-width": 1068,
                    content: 692
                },
                small: {
                    "min-width": 320,
                    "max-width": 735,
                    content: 288
                }
            }
        }
    }, {}],
    834: [function(d, g, f) {
        g.exports.ValueSmoother = d("./ac-value-smoother/ValueSmoother")
    }, {
        "./ac-value-smoother/ValueSmoother": 835
    }],
    835: [function(k, j, g) {
        function h(a) {
            a = a || this.sampling;
            this.pool = new Array(a);
            this.raw = 0;
            this.value = 0
        }
        var i = h.prototype;
        i.sampling = 3;
        i.smooth = function(d, a) {
            var b = 0;
            var f = this.pool.length;
            if (typeof this.pool[f - this.sampling] !== "undefined") {
                for (var c = this.sampling; c > 0; c--) {
                    b += this.pool[f - c]
                }
                b += d;
                b /= (this.sampling + 1)
            } else {
                b = d
            }
            if (!a) {
                this.raw = d;
                this._track(b, true)
            }
            return b
        };
        i._track = function(a, b) {
            if (b) {
                this.value = a
            } else {
                this.raw = this.value = a
            }
            this.pool.push(a);
            this.pool.shift()
        };
        j.exports = h
    }, {}],
    836: [function(d, g, f) {
        arguments[4][9][0].apply(f, arguments)
    }, {
        "./ac-browser/BrowserData": 837,
        "./ac-browser/IE": 838,
        dup: 9
    }],
    837: [function(d, g, f) {
        arguments[4][221][0].apply(f, arguments)
    }, {
        "./data": 839,
        dup: 221
    }],
    838: [function(d, g, f) {
        arguments[4][7][0].apply(f, arguments)
    }, {
        dup: 7
    }],
    839: [function(d, g, f) {
        arguments[4][8][0].apply(f, arguments)
    }, {
        dup: 8
    }],
    840: [function(d, g, f) {
        arguments[4][369][0].apply(f, arguments)
    }, {
        dup: 369
    }],
    841: [function(d, g, f) {
        arguments[4][530][0].apply(f, arguments)
    }, {
        "./ac-string/isString": 842,
        "./ac-string/queryParameters": 843,
        "./ac-string/queryStringToObject": 844,
        "./ac-string/supplant": 845,
        "./ac-string/toCamelCase": 846,
        "./ac-string/toQueryPair": 847,
        dup: 530
    }],
    842: [function(d, g, f) {
        arguments[4][531][0].apply(f, arguments)
    }, {
        dup: 531
    }],
    843: [function(d, g, f) {
        arguments[4][532][0].apply(f, arguments)
    }, {
        "./queryStringToObject": 844,
        dup: 532
    }],
    844: [function(d, g, f) {
        arguments[4][533][0].apply(f, arguments)
    }, {
        dup: 533,
        qs: 840
    }],
    845: [function(d, g, f) {
        arguments[4][534][0].apply(f, arguments)
    }, {
        dup: 534
    }],
    846: [function(d, g, f) {
        arguments[4][535][0].apply(f, arguments)
    }, {
        dup: 535
    }],
    847: [function(d, g, f) {
        arguments[4][536][0].apply(f, arguments)
    }, {
        dup: 536
    }],
    848: [function(m, l, h) {
        var i = m("./ac-vatman/vat-client");
        var k = m("./ac-vatman/vat-resource");
        var j = {
            createPlayer: m("./ac-vatman/factory/createPlayer"),
            vatClient: i,
            vatResource: k
        };
        l.exports = j
    }, {
        "./ac-vatman/factory/createPlayer": 849,
        "./ac-vatman/vat-client": 854,
        "./ac-vatman/vat-resource": 855
    }],
    849: [function(v, x, r) {
        var m = v("./../featureDetection/canPlayType");
        var u = v("./../featureDetection/canPlayTypeNatively");
        var o = v("./../featureDetection/canPlayTypeQuicktime");
        var n = v("ac-browser");

        function q(b, a) {
            a.type = "quicktime";
            return b.create(a)
        }

        function p(b, a) {
            return b.create(a)
        }

        function t() {
            var a = this.getTextTracks();
            var b = a.models.length;
            var c = this.getTextTracks().at(b - 1);
            var d = this.getEnabledTextTracks();
            d.forEach(function(f) {
                if (c !== f) {
                    f.disable()
                }
            });
            if (c.get("mode") === "disabled") {
                c.hide()
            }
        }

        function w(f, g) {
            g = g || {};
            var h = "video/quicktime";
            var a = "video/mp4";
            var b = (n.name === "Firefox");
            var c = (n.name === "IE");
            var d;
            if (u(h) || u(a) && (!c && !b)) {
                d = p(f, g)
            } else {
                if (o(h)) {
                    g.type = "quicktime";
                    d = q(f, g)
                }
            }
            if (d) {
                d.on("addtrack", t, d)
            }
            return d
        }
        x.exports = w
    }, {
        "./../featureDetection/canPlayType": 850,
        "./../featureDetection/canPlayTypeNatively": 851,
        "./../featureDetection/canPlayTypeQuicktime": 852,
        "ac-browser": 836
    }],
    850: [function(h, l, i) {
        var k = h("./canPlayTypeNatively");
        var m = h("./canPlayTypeQuicktime");

        function j(b) {
            var a = k(b);
            if (!a) {
                a = m(b)
            }
            return a
        }
        l.exports = j
    }, {
        "./canPlayTypeNatively": 851,
        "./canPlayTypeQuicktime": 852
    }],
    851: [function(m, l, h) {
        var k;

        function i() {
            return document.createElement("video")
        }
        l.exports = function j(b) {
            var a = "";
            var c = i();
            if (typeof c.canPlayType === "function") {
                a = c.canPlayType(b)
            }
            return a
        }
    }, {}],
    852: [function(k, i, g) {
        var h = k("./quicktime");
        i.exports = function j(b) {
            var a = "";
            if (b === "video/quicktime" && h.getPluginVersion() !== undefined) {
                a = "maybe"
            }
            return a
        }
    }, {
        "./quicktime": 853
    }],
    853: [function(d, g, f) {
        g.exports = {
            getPlugins: function() {
                return navigator.plugins
            },
            getPluginVersion: function() {
                var b;
                var a = /(\d+\.){2}(\d+){1}$/;
                var m = this.getPlugins();
                if (m && m[0]) {
                    for (var c = 0; c < m.length; c++) {
                        var l = (/QuickTime/i.test(m[c].name) && typeof b === "undefined");
                        if (l) {
                            if (m[c].version) {
                                b = m[c].version
                            } else {
                                if (a.test(m[c].name)) {
                                    b = m[c].name.match(a);
                                    b = b[0] || undefined
                                }
                            }
                        }
                    }
                } else {
                    var i = ["QuickTime.QuickTime", "QuickTimeCheckObject.QuickTimeCheck.1"];
                    i.forEach(function(j) {
                        var h;
                        var k;
                        try {
                            h = new ActiveXObject(j);
                            k = (typeof h === "object" && typeof h.QuickTimeVersion !== "undefined" && typeof b === "undefined");
                            if (k) {
                                b = h.QuickTimeVersion
                            }
                        } catch (o) {}
                    })
                }
                return b
            }
        }
    }, {}],
    854: [function(y, A, w) {
        var t = y("ac-ajax");
        var v = y("ac-string");
        var r = /(-[a-z]{2}-([a-z]{2}-){0,})[0-9]{8}_r[0-9].+\.mov$/;
        var B = /_r[0-9].+\.mov$/;
        var u = /((-([a-z]{2}))*)-[0-9]+/;
        var p = /((-([a-z]{2}))*)-/;
        var z = "m";
        var x = "_{width}x{height}{suffix}." + z + "p4";
        var q = [{
            width: 416,
            height: 234,
            type: "baseline-high",
            suffix: "h"
        }, {
            width: 416,
            height: 234,
            type: "small",
            suffix: "h"
        }, {
            width: 416,
            height: 234,
            type: "baseline-low",
            suffix: "l"
        }, {
            width: 416,
            height: 234,
            type: "baseline-medium",
            suffix: "m"
        }, {
            width: 640,
            height: 360,
            type: "medium",
            suffix: "h"
        }, {
            width: 848,
            height: 480,
            type: "large",
            suffix: ""
        }];
        var m = {
            create: function() {
                var a = function() {};
                a.prototype = this;
                return new a()
            },
            getSource: function(a, d, f) {
                var b = q;
                if (!a) {
                    throw "Must provide a vatRefMovie"
                }
                if (!d) {
                    throw "Must provide a width"
                }
                if (f) {
                    b = b.filter(function(g) {
                        return g.type === f
                    })
                }
                var c = b.reduce(function(h, g) {
                    return Math.abs(g.width - d) < Math.abs(h.width - d) ? g : h
                });
                return a.replace(B, v.supplant(x, c))
            },
            getConfigPath: function(a) {
                return a.replace(r, "-current.json")
            },
            getConfig: function(a) {
                return t.getJSON({
                    url: this.getConfigPath(a)
                })
            },
            getVTTSource: function(a) {
                return a.replace(B, "_cc.vtt")
            }
        };
        A.exports = m
    }, {
        "ac-ajax": 5,
        "ac-string": 841
    }],
    855: [function(o, n, i) {
        var j = o("./vat-client");
        var k = o("ac-browser");
        var l = (k.name === "Chrome");
        var m = {
            create: function(b) {
                if (!b) {
                    throw "Must provide a vatRefMovie."
                }
                var a = function() {};
                a.prototype = this;
                var c = new a();
                c.vatRefMovie = b;
                return c
            },
            getSource: function(a, b) {
                return j.getSource(this.vatRefMovie, a, b)
            },
            getConfig: function() {
                return j.getConfig(this.vatRefMovie)
            },
            getVTTSource: function() {
                return j.getVTTSource(this.vatRefMovie)
            },
            _handleCaptions: function(b) {
                var a;
                this.getConfig().then(function(c) {
                    if (!c.metadata.captions) {
                        return
                    }
                    if (l) {
                        a = this.getVTTSource()
                    }
                    if (a) {
                        b.addTextTrackFromRemoteVTT({
                            src: a,
                            mode: "hidden"
                        })
                    }
                }.bind(this))
            },
            setPlayerSrc: function(c, a) {
                var b = this.vatRefMovie;
                if (l) {
                    b = this.getSource(a)
                }
                c.setSrc(b);
                this._handleCaptions(c)
            }
        };
        n.exports = m
    }, {
        "./vat-client": 854,
        "ac-browser": 836
    }],
    856: [function(d, g, f) {
        arguments[4][9][0].apply(f, arguments)
    }, {
        "./ac-browser/BrowserData": 857,
        "./ac-browser/IE": 858,
        dup: 9
    }],
    857: [function(d, g, f) {
        arguments[4][221][0].apply(f, arguments)
    }, {
        "./data": 859,
        dup: 221
    }],
    858: [function(d, g, f) {
        arguments[4][7][0].apply(f, arguments)
    }, {
        dup: 7
    }],
    859: [function(d, g, f) {
        arguments[4][8][0].apply(f, arguments)
    }, {
        dup: 8
    }],
    860: [function(d, g, f) {
        (function(b, a) {
            if (typeof f === "object" && f) {
                g.exports = a
            } else {
                if (typeof define === "function" && define.amd) {
                    define(a)
                } else {
                    b.Deferred = a
                }
            }
        }(this, (function() {
            var t = {};
            var u, c, a, v, o, p, b, r;
            u = {
                0: "pending",
                1: "resolved",
                2: "rejected"
            };
            c = function(k, i) {
                var l, h, j, m, n;
                if (this._status !== 0) {
                    if (console && console.warn) {
                        console.warn("Trying to fulfill more than once.")
                    }
                    return false
                }
                this.data = i;
                h = this.pending;
                j = h.length;
                for (l = 0; l < j; l++) {
                    m = h[l];
                    if (m[k]) {
                        n = m[k](i)
                    }
                    if (typeof n === "object" && n.hasOwnProperty("then") && n.hasOwnProperty("status")) {
                        n.then(function(x) {
                            m.deferred.resolve(x)
                        }, function(x) {
                            m.deferred.reject(x)
                        }, function(x) {
                            m.deferred.progress(x)
                        })
                    } else {
                        m.deferred[k](n || undefined)
                    }
                }
                if (k !== "progress") {
                    h = []
                }
                return true
            };
            p = function(h, i) {
                this.then = h;
                this.status = i
            };
            b = p.prototype;
            r = function(h) {
                return h
            };
            b.success = function(h, i) {
                return this.then(h.bind(i), r, r)
            };
            b.fail = function(h, i) {
                return this.then(r, h.bind(i), r)
            };
            b.progress = function(h, i) {
                return this.then(r, r, h.bind(i))
            };
            v = function(h) {
                if (typeof h !== "function") {
                    return function() {}
                }
                return h
            };
            a = function(h, i, j) {
                this.resolve = v(h);
                this.reject = v(i);
                this.progress = v(j);
                this.deferred = new o()
            };
            o = function() {
                this.pending = [];
                this._status = 0;
                this._promise = new p(this.then.bind(this), this.status.bind(this))
            };
            o.prototype = {
                status: function() {
                    return u[this._status]
                },
                promise: function() {
                    return this._promise
                },
                progress: function(h) {
                    c.call(this, "progress", h);
                    return this._promise
                },
                resolve: function(h) {
                    c.call(this, "resolve", h);
                    if (this._status === 0) {
                        this._status = 1
                    }
                    return this._promise
                },
                reject: function(h) {
                    c.call(this, "reject", h);
                    if (this._status === 0) {
                        this._status = 2
                    }
                    return this._promise
                },
                then: function(h, j, k) {
                    var l, i;
                    i = new a(h, j, k);
                    if (this._status === 0) {
                        this.pending.push(i)
                    } else {
                        if (this._status === 1 && typeof h === "function") {
                            l = h(this.data);
                            if (typeof l === "object" && l.hasOwnProperty("then") && l.hasOwnProperty("status")) {
                                l.then(function(m) {
                                    i.deferred.resolve(m)
                                }, function(m) {
                                    i.deferred.reject(m)
                                }, function(m) {
                                    i.deferred.progress(m)
                                })
                            } else {
                                i.deferred.resolve(l)
                            }
                        } else {
                            if (this._status === 2 && typeof j === "function") {
                                l = j(this.data);
                                i.deferred.reject(l)
                            }
                        }
                    }
                    return i.deferred.promise()
                }
            };
            var q = function() {
                var j, k, h, i, l;
                j = [].slice.call(arguments);
                k = new o();
                h = 0;
                i = function(m) {
                    h--;
                    var n = j.indexOf(this);
                    j[n] = m;
                    if (h === 0) {
                        k.resolve(j)
                    }
                };
                l = function(m) {
                    k.reject(m)
                };
                j.forEach(function(m) {
                    if (m.then) {
                        h++
                    }
                });
                j.forEach(function(m) {
                    if (m.then) {
                        m.then(i.bind(m), l)
                    }
                });
                return k.promise()
            };
            o.when = q;
            t.Deferred = o;
            return t
        }())))
    }, {}],
    861: [function(q, r, p) {
        function n() {}
        n.prototype = {
            resolve: function m() {
                this._defer.resolve.apply(this._defer, Array.prototype.slice.call(arguments));
                return this.promise()
            },
            reject: function k() {
                this._defer.reject.apply(this._defer, Array.prototype.slice.call(arguments));
                return this.promise()
            },
            progress: function t() {
                var a = "ac-defer.progress is deprecated since it is not part of the A+ spec. Recommend using ac-event-emitter for progress signaling";
                console.warn(a);
                this._defer.progress.apply(this._defer, Array.prototype.slice.call(arguments));
                return this.promise()
            },
            then: function o() {
                this._defer.then.apply(this._defer, Array.prototype.slice.call(arguments));
                return this.promise()
            },
            promise: function l() {
                return this._defer.promise.apply(this._defer, Array.prototype.slice.call(arguments))
            }
        };
        r.exports = n
    }, {}],
    862: [function(q, p, k) {
        var m = new(q("./ac-deferred/Deferred"))(),
            n = q("smartsign-deferred").Deferred;

        function j() {
            this._defer = new n()
        }
        j.prototype = m;
        p.exports.join = function l() {
            return n.when.apply(null, [].slice.call(arguments))
        };
        p.exports.all = function o(a) {
            return n.when.apply(null, a)
        };
        p.exports.Deferred = j
    }, {
        "./ac-deferred/Deferred": 861,
        "smartsign-deferred": 860
    }],
    863: [function(d, g, f) {
        arguments[4][30][0].apply(f, arguments)
    }, {
        "./ac-prefixer/Prefixer": 864,
        dup: 30
    }],
    864: [function(d, g, f) {
        arguments[4][31][0].apply(f, arguments)
    }, {
        "./Prefixer/camelCasedEvents": 865,
        dup: 31
    }],
    865: [function(d, g, f) {
        arguments[4][32][0].apply(f, arguments)
    }, {
        dup: 32
    }],
    866: [function(d, g, f) {
        arguments[4][33][0].apply(f, arguments)
    }, {
        "./ac-dom-events/addEventListener": 867,
        "./ac-dom-events/dispatchEvent": 868,
        "./ac-dom-events/preventDefault": 869,
        "./ac-dom-events/removeEventListener": 870,
        "./ac-dom-events/stop": 871,
        "./ac-dom-events/stopPropagation": 872,
        "./ac-dom-events/target": 873,
        dup: 33
    }],
    867: [function(d, g, f) {
        arguments[4][34][0].apply(f, arguments)
    }, {
        "ac-prefixer": 863,
        dup: 34
    }],
    868: [function(d, g, f) {
        arguments[4][35][0].apply(f, arguments)
    }, {
        dup: 35
    }],
    869: [function(d, g, f) {
        arguments[4][36][0].apply(f, arguments)
    }, {
        dup: 36
    }],
    870: [function(d, g, f) {
        arguments[4][37][0].apply(f, arguments)
    }, {
        "ac-prefixer": 863,
        dup: 37
    }],
    871: [function(d, g, f) {
        arguments[4][38][0].apply(f, arguments)
    }, {
        "./preventDefault": 869,
        "./stopPropagation": 872,
        dup: 38
    }],
    872: [function(d, g, f) {
        arguments[4][39][0].apply(f, arguments)
    }, {
        dup: 39
    }],
    873: [function(d, g, f) {
        arguments[4][40][0].apply(f, arguments)
    }, {
        dup: 40
    }],
    874: [function(d, g, f) {
        arguments[4][62][0].apply(f, arguments)
    }, {
        "./ac-dom-emitter/DOMEmitter": 875,
        dup: 62
    }],
    875: [function(d, g, f) {
        arguments[4][329][0].apply(f, arguments)
    }, {
        "./DOMEmitterEvent": 876,
        "ac-dom-events": 866,
        "ac-dom-traversal": 897,
        "ac-event-emitter": 916,
        dup: 329
    }],
    876: [function(d, g, f) {
        arguments[4][330][0].apply(f, arguments)
    }, {
        "ac-dom-events": 866,
        dup: 330
    }],
    877: [function(d, g, f) {
        arguments[4][331][0].apply(f, arguments)
    }, {
        "./ac-dom-nodes/createDocumentFragment": 878,
        "./ac-dom-nodes/filterByNodeType": 879,
        "./ac-dom-nodes/helpers/nodeTypes": 881,
        "./ac-dom-nodes/insertAfter": 883,
        "./ac-dom-nodes/insertBefore": 884,
        "./ac-dom-nodes/insertFirstChild": 885,
        "./ac-dom-nodes/insertLastChild": 886,
        "./ac-dom-nodes/isComment": 887,
        "./ac-dom-nodes/isDocument": 888,
        "./ac-dom-nodes/isDocumentFragment": 889,
        "./ac-dom-nodes/isDocumentType": 890,
        "./ac-dom-nodes/isElement": 891,
        "./ac-dom-nodes/isNode": 892,
        "./ac-dom-nodes/isNodeList": 893,
        "./ac-dom-nodes/isTextNode": 894,
        "./ac-dom-nodes/remove": 895,
        "./ac-dom-nodes/replace": 896,
        dup: 331
    }],
    878: [function(d, g, f) {
        arguments[4][332][0].apply(f, arguments)
    }, {
        dup: 332
    }],
    879: [function(d, g, f) {
        arguments[4][333][0].apply(f, arguments)
    }, {
        "./helpers/isNodeType": 880,
        "./helpers/nodeTypes": 881,
        dup: 333
    }],
    880: [function(d, g, f) {
        arguments[4][334][0].apply(f, arguments)
    }, {
        "../isNode": 892,
        dup: 334
    }],
    881: [function(d, g, f) {
        arguments[4][335][0].apply(f, arguments)
    }, {
        dup: 335
    }],
    882: [function(d, g, f) {
        arguments[4][336][0].apply(f, arguments)
    }, {
        "./isNodeType": 880,
        "./nodeTypes": 881,
        dup: 336
    }],
    883: [function(d, g, f) {
        arguments[4][337][0].apply(f, arguments)
    }, {
        "./helpers/validate": 882,
        dup: 337
    }],
    884: [function(d, g, f) {
        arguments[4][338][0].apply(f, arguments)
    }, {
        "./helpers/validate": 882,
        dup: 338
    }],
    885: [function(d, g, f) {
        arguments[4][339][0].apply(f, arguments)
    }, {
        "./helpers/validate": 882,
        dup: 339
    }],
    886: [function(d, g, f) {
        arguments[4][340][0].apply(f, arguments)
    }, {
        "./helpers/validate": 882,
        dup: 340
    }],
    887: [function(d, g, f) {
        arguments[4][341][0].apply(f, arguments)
    }, {
        "./helpers/isNodeType": 880,
        "./helpers/nodeTypes": 881,
        dup: 341
    }],
    888: [function(d, g, f) {
        arguments[4][342][0].apply(f, arguments)
    }, {
        "./helpers/isNodeType": 880,
        "./helpers/nodeTypes": 881,
        dup: 342
    }],
    889: [function(d, g, f) {
        arguments[4][343][0].apply(f, arguments)
    }, {
        "./helpers/isNodeType": 880,
        "./helpers/nodeTypes": 881,
        dup: 343
    }],
    890: [function(d, g, f) {
        arguments[4][344][0].apply(f, arguments)
    }, {
        "./helpers/isNodeType": 880,
        "./helpers/nodeTypes": 881,
        dup: 344
    }],
    891: [function(d, g, f) {
        arguments[4][345][0].apply(f, arguments)
    }, {
        "./helpers/isNodeType": 880,
        "./helpers/nodeTypes": 881,
        dup: 345
    }],
    892: [function(d, g, f) {
        arguments[4][114][0].apply(f, arguments)
    }, {
        dup: 114
    }],
    893: [function(d, g, f) {
        arguments[4][115][0].apply(f, arguments)
    }, {
        dup: 115
    }],
    894: [function(d, g, f) {
        arguments[4][348][0].apply(f, arguments)
    }, {
        "./helpers/isNodeType": 880,
        "./helpers/nodeTypes": 881,
        dup: 348
    }],
    895: [function(d, g, f) {
        arguments[4][349][0].apply(f, arguments)
    }, {
        "./helpers/validate": 882,
        dup: 349
    }],
    896: [function(d, g, f) {
        arguments[4][350][0].apply(f, arguments)
    }, {
        "./helpers/validate": 882,
        dup: 350
    }],
    897: [function(d, g, f) {
        arguments[4][41][0].apply(f, arguments)
    }, {
        "./ac-dom-traversal/ancestor": 898,
        "./ac-dom-traversal/ancestors": 899,
        "./ac-dom-traversal/children": 900,
        "./ac-dom-traversal/filterBySelector": 901,
        "./ac-dom-traversal/firstChild": 902,
        "./ac-dom-traversal/lastChild": 905,
        "./ac-dom-traversal/matchesSelector": 906,
        "./ac-dom-traversal/nextSibling": 907,
        "./ac-dom-traversal/nextSiblings": 908,
        "./ac-dom-traversal/previousSibling": 909,
        "./ac-dom-traversal/previousSiblings": 910,
        "./ac-dom-traversal/querySelector": 911,
        "./ac-dom-traversal/querySelectorAll": 912,
        "./ac-dom-traversal/shims/ie": 913,
        "./ac-dom-traversal/siblings": 914,
        dup: 41
    }],
    898: [function(d, g, f) {
        arguments[4][42][0].apply(f, arguments)
    }, {
        "./helpers/validate": 904,
        "./matchesSelector": 906,
        "ac-dom-nodes": 877,
        dup: 42
    }],
    899: [function(d, g, f) {
        arguments[4][43][0].apply(f, arguments)
    }, {
        "./helpers/validate": 904,
        "./matchesSelector": 906,
        "ac-dom-nodes": 877,
        dup: 43
    }],
    900: [function(d, g, f) {
        arguments[4][44][0].apply(f, arguments)
    }, {
        "./filterBySelector": 901,
        "./helpers/validate": 904,
        "ac-dom-nodes": 877,
        dup: 44
    }],
    901: [function(d, g, f) {
        arguments[4][45][0].apply(f, arguments)
    }, {
        "./helpers/validate": 904,
        "./matchesSelector": 906,
        dup: 45
    }],
    902: [function(d, g, f) {
        arguments[4][46][0].apply(f, arguments)
    }, {
        "./children": 900,
        "./helpers/validate": 904,
        dup: 46
    }],
    903: [function(d, g, f) {
        arguments[4][47][0].apply(f, arguments)
    }, {
        dup: 47
    }],
    904: [function(d, g, f) {
        arguments[4][48][0].apply(f, arguments)
    }, {
        "ac-dom-nodes": 877,
        dup: 48
    }],
    905: [function(d, g, f) {
        arguments[4][49][0].apply(f, arguments)
    }, {
        "./children": 900,
        "./helpers/validate": 904,
        dup: 49
    }],
    906: [function(d, g, f) {
        arguments[4][50][0].apply(f, arguments)
    }, {
        "./helpers/nativeMatches": 903,
        "./helpers/validate": 904,
        "ac-dom-nodes": 877,
        dup: 50
    }],
    907: [function(d, g, f) {
        arguments[4][51][0].apply(f, arguments)
    }, {
        "./helpers/validate": 904,
        "./matchesSelector": 906,
        "ac-dom-nodes": 877,
        dup: 51
    }],
    908: [function(d, g, f) {
        arguments[4][52][0].apply(f, arguments)
    }, {
        "./helpers/validate": 904,
        "./matchesSelector": 906,
        "ac-dom-nodes": 877,
        dup: 52
    }],
    909: [function(d, g, f) {
        arguments[4][53][0].apply(f, arguments)
    }, {
        "./helpers/validate": 904,
        "./matchesSelector": 906,
        "ac-dom-nodes": 877,
        dup: 53
    }],
    910: [function(d, g, f) {
        arguments[4][54][0].apply(f, arguments)
    }, {
        "./helpers/validate": 904,
        "./matchesSelector": 906,
        "ac-dom-nodes": 877,
        dup: 54
    }],
    911: [function(d, g, f) {
        arguments[4][55][0].apply(f, arguments)
    }, {
        "./helpers/validate": 904,
        dup: 55
    }],
    912: [function(d, g, f) {
        arguments[4][56][0].apply(f, arguments)
    }, {
        "./helpers/validate": 904,
        dup: 56
    }],
    913: [function(d, g, f) {
        arguments[4][57][0].apply(f, arguments)
    }, {
        "../helpers/nativeMatches": 903,
        "../helpers/validate": 904,
        "../vendor/sizzle/sizzle": 915,
        "ac-dom-nodes": 877,
        dup: 57
    }],
    914: [function(d, g, f) {
        arguments[4][58][0].apply(f, arguments)
    }, {
        "./children": 900,
        "./helpers/validate": 904,
        dup: 58
    }],
    915: [function(d, g, f) {
        arguments[4][59][0].apply(f, arguments)
    }, {
        dup: 59
    }],
    916: [function(d, g, f) {
        arguments[4][20][0].apply(f, arguments)
    }, {
        "./ac-event-emitter/EventEmitter": 917,
        dup: 20
    }],
    917: [function(d, g, f) {
        arguments[4][21][0].apply(f, arguments)
    }, {
        dup: 21
    }],
    918: [function(k, i, g) {
        var j = {
            cssPropertyAvailable: k("./ac-feature/cssPropertyAvailable"),
            localStorageAvailable: k("./ac-feature/localStorageAvailable")
        };
        var h = Object.prototype.hasOwnProperty;
        j.threeDTransformsAvailable = function() {
            if (typeof this._threeDTransformsAvailable !== "undefined") {
                return this._threeDTransformsAvailable
            }
            var a, c;
            try {
                this._threeDTransformsAvailable = false;
                if (h.call(window, "styleMedia")) {
                    this._threeDTransformsAvailable = window.styleMedia.matchMedium("(-webkit-transform-3d)")
                } else {
                    if (h.call(window, "media")) {
                        this._threeDTransformsAvailable = window.media.matchMedium("(-webkit-transform-3d)")
                    }
                }
                if (!this._threeDTransformsAvailable) {
                    if (!(c = document.getElementById("supportsThreeDStyle"))) {
                        c = document.createElement("style");
                        c.id = "supportsThreeDStyle";
                        c.textContent = "@media (transform-3d),(-o-transform-3d),(-moz-transform-3d),(-ms-transform-3d),(-webkit-transform-3d) { #supportsThreeD { height:3px } }";
                        document.querySelector("head").appendChild(c)
                    }
                    if (!(a = document.querySelector("#supportsThreeD"))) {
                        a = document.createElement("div");
                        a.id = "supportsThreeD";
                        document.body.appendChild(a)
                    }
                    this._threeDTransformsAvailable = (a.offsetHeight === 3) || c.style.MozTransform !== undefined || c.style.WebkitTransform !== undefined
                }
                return this._threeDTransformsAvailable
            } catch (b) {
                return false
            }
        };
        j.canvasAvailable = function() {
            if (typeof this._canvasAvailable !== "undefined") {
                return this._canvasAvailable
            }
            var a = document.createElement("canvas");
            this._canvasAvailable = !!(typeof a.getContext === "function" && a.getContext("2d"));
            return this._canvasAvailable
        };
        j.sessionStorageAvailable = function() {
            if (typeof this._sessionStorageAvailable !== "undefined") {
                return this._sessionStorageAvailable
            }
            try {
                if (typeof window.sessionStorage !== "undefined" && typeof window.sessionStorage.setItem === "function") {
                    window.sessionStorage.setItem("ac_browser_detect", "test");
                    this._sessionStorageAvailable = true;
                    window.sessionStorage.removeItem("ac_browser_detect", "test")
                } else {
                    this._sessionStorageAvailable = false
                }
            } catch (a) {
                this._sessionStorageAvailable = false
            }
            return this._sessionStorageAvailable
        };
        j.cookiesAvailable = function() {
            if (typeof this._cookiesAvailable !== "undefined") {
                return this._cookiesAvailable
            }
            this._cookiesAvailable = (h.call(document, "cookie") && !!navigator.cookieEnabled) ? true : false;
            return this._cookiesAvailable
        };
        j.__normalizedScreenWidth = function() {
            if (typeof window.orientation === "undefined") {
                return window.screen.width
            }
            return window.screen.width < window.screen.height ? window.screen.width : window.screen.height
        };
        j.touchAvailable = function() {
            return !!(("ontouchstart" in window) || window.DocumentTouch && document instanceof window.DocumentTouch)
        };
        j.isDesktop = function() {
            if (!this.touchAvailable() && !window.orientation) {
                return true
            }
            return false
        };
        j.isHandheld = function() {
            return !this.isDesktop() && !this.isTablet()
        };
        j.isTablet = function() {
            return !this.isDesktop() && this.__normalizedScreenWidth() > 480
        };
        j.isRetina = function() {
            var b = ["min-device-pixel-ratio:1.5", "-webkit-min-device-pixel-ratio:1.5", "min-resolution:1.5dppx", "min-resolution:144dpi", "min--moz-device-pixel-ratio:1.5"];
            var a;
            if (window.devicePixelRatio !== undefined) {
                if (window.devicePixelRatio >= 1.5) {
                    return true
                }
            } else {
                for (a = 0; a < b.length; a += 1) {
                    if (window.matchMedia("(" + b[a] + ")").matches === true) {
                        return true
                    }
                }
            }
            return false
        };
        j.svgAvailable = function() {
            return document.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#Image", "1.1")
        };
        i.exports = j
    }, {
        "./ac-feature/cssPropertyAvailable": 919,
        "./ac-feature/localStorageAvailable": 920
    }],
    919: [function(o, m, i) {
        var l = null;
        var k = null;
        var j = null;
        var n = null;
        m.exports = function(v) {
            if (l === null) {
                l = document.createElement("browserdetect").style
            }
            if (k === null) {
                k = ["-webkit-", "-moz-", "-o-", "-ms-", "-khtml-", ""]
            }
            if (j === null) {
                j = ["Webkit", "Moz", "O", "ms", "Khtml", ""]
            }
            if (n === null) {
                n = {}
            }
            v = v.replace(/([A-Z]+)([A-Z][a-z])/g, "$1\\-$2").replace(/([a-z\d])([A-Z])/g, "$1\\-$2").replace(/^(\-*webkit|\-*moz|\-*o|\-*ms|\-*khtml)\-/, "").toLowerCase();
            switch (v) {
                case "gradient":
                    if (n.gradient !== undefined) {
                        return n.gradient
                    }
                    v = "background-image:";
                    var b = "gradient(linear,left top,right bottom,from(#9f9),to(white));";
                    var c = "linear-gradient(left top,#9f9, white);";
                    l.cssText = (v + k.join(b + v) + k.join(c + v)).slice(0, -v.length);
                    n.gradient = (l.backgroundImage.indexOf("gradient") !== -1);
                    return n.gradient;
                case "inset-box-shadow":
                    if (n["inset-box-shadow"] !== undefined) {
                        return n["inset-box-shadow"]
                    }
                    v = "box-shadow:";
                    var a = "#fff 0 1px 1px inset;";
                    l.cssText = k.join(v + a);
                    n["inset-box-shadow"] = (l.cssText.indexOf("inset") !== -1);
                    return n["inset-box-shadow"];
                default:
                    var d = v.split("-");
                    var u = d.length;
                    var f;
                    var g;
                    var h;
                    if (d.length > 0) {
                        v = d[0];
                        for (g = 1; g < u; g += 1) {
                            v += d[g].substr(0, 1).toUpperCase() + d[g].substr(1)
                        }
                    }
                    f = v.substr(0, 1).toUpperCase() + v.substr(1);
                    if (n[v] !== undefined) {
                        return n[v]
                    }
                    for (h = j.length - 1; h >= 0; h -= 1) {
                        if (l[j[h] + v] !== undefined || l[j[h] + f] !== undefined) {
                            n[v] = true;
                            return true
                        }
                    }
                    return false
            }
        }
    }, {}],
    920: [function(j, i, g) {
        var h = null;
        i.exports = function k() {
            if (h === null) {
                h = !!(window.localStorage && window.localStorage.non_existent !== null)
            }
            return h
        }
    }, {}],
    921: [function(d, g, f) {
        arguments[4][270][0].apply(f, arguments)
    }, {
        "./ac-fullscreen/fullscreen": 927,
        dup: 270
    }],
    922: [function(d, g, f) {
        arguments[4][271][0].apply(f, arguments)
    }, {
        dup: 271
    }],
    923: [function(d, g, f) {
        arguments[4][272][0].apply(f, arguments)
    }, {
        "./../consts/modes": 922,
        "./../events/types": 926,
        "ac-dom-events/addEventListener": 65,
        "ac-event-emitter": 916,
        dup: 272
    }],
    924: [function(d, g, f) {
        arguments[4][273][0].apply(f, arguments)
    }, {
        "./desktop": 923,
        "./ios": 925,
        dup: 273
    }],
    925: [function(d, g, f) {
        arguments[4][274][0].apply(f, arguments)
    }, {
        "./../consts/modes": 922,
        "./../events/types": 926,
        "ac-dom-events/addEventListener": 65,
        "ac-event-emitter": 916,
        dup: 274
    }],
    926: [function(d, g, f) {
        arguments[4][275][0].apply(f, arguments)
    }, {
        dup: 275
    }],
    927: [function(d, g, f) {
        arguments[4][276][0].apply(f, arguments)
    }, {
        "./delegate/factory": 924,
        "ac-event-emitter": 916,
        dup: 276
    }],
    928: [function(d, g, f) {
        arguments[4][601][0].apply(f, arguments)
    }, {
        "./ac-array/flatten": 929,
        "./ac-array/intersection": 930,
        "./ac-array/toArray": 931,
        "./ac-array/union": 932,
        "./ac-array/unique": 933,
        "./ac-array/without": 934,
        dup: 601
    }],
    929: [function(d, g, f) {
        arguments[4][602][0].apply(f, arguments)
    }, {
        dup: 602
    }],
    930: [function(d, g, f) {
        arguments[4][603][0].apply(f, arguments)
    }, {
        dup: 603
    }],
    931: [function(d, g, f) {
        arguments[4][604][0].apply(f, arguments)
    }, {
        dup: 604
    }],
    932: [function(d, g, f) {
        arguments[4][605][0].apply(f, arguments)
    }, {
        "./flatten": 929,
        "./unique": 933,
        dup: 605
    }],
    933: [function(d, g, f) {
        arguments[4][606][0].apply(f, arguments)
    }, {
        dup: 606
    }],
    934: [function(d, g, f) {
        arguments[4][607][0].apply(f, arguments)
    }, {
        dup: 607
    }],
    935: [function(d, g, f) {
        arguments[4][467][0].apply(f, arguments)
    }, {
        "./ac-shared-instance/SharedInstance": 936,
        dup: 467
    }],
    936: [function(d, g, f) {
        arguments[4][468][0].apply(f, arguments)
    }, {
        dup: 468
    }],
    937: [function(d, g, f) {
        arguments[4][469][0].apply(f, arguments)
    }, {
        "./ac-mvc-cid/CID": 938,
        dup: 469
    }],
    938: [function(d, g, f) {
        arguments[4][470][0].apply(f, arguments)
    }, {
        "ac-shared-instance": 935,
        dup: 470
    }],
    939: [function(d, g, f) {
        arguments[4][623][0].apply(f, arguments)
    }, {
        "./ac-mvc-collection/Collection": 940,
        dup: 623
    }],
    940: [function(d, g, f) {
        arguments[4][624][0].apply(f, arguments)
    }, {
        "ac-array": 928,
        "ac-event-emitter": 916,
        "ac-mvc-cid": 937,
        "ac-object": 979,
        dup: 624
    }],
    941: [function(d, g, f) {
        arguments[4][467][0].apply(f, arguments)
    }, {
        "./ac-shared-instance/SharedInstance": 942,
        dup: 467
    }],
    942: [function(d, g, f) {
        arguments[4][468][0].apply(f, arguments)
    }, {
        dup: 468
    }],
    943: [function(d, g, f) {
        arguments[4][469][0].apply(f, arguments)
    }, {
        "./ac-mvc-cid/CID": 944,
        dup: 469
    }],
    944: [function(d, g, f) {
        arguments[4][470][0].apply(f, arguments)
    }, {
        "ac-shared-instance": 941,
        dup: 470
    }],
    945: [function(d, g, f) {
        arguments[4][482][0].apply(f, arguments)
    }, {
        "./ac-mvc-model/Model": 946,
        dup: 482
    }],
    946: [function(d, g, f) {
        arguments[4][483][0].apply(f, arguments)
    }, {
        "ac-event-emitter": 916,
        "ac-mvc-cid": 943,
        "ac-object": 979,
        dup: 483
    }],
    947: [function(d, g, f) {
        arguments[4][292][0].apply(f, arguments)
    }, {
        "./ac-classlist/add": 948,
        "./ac-classlist/contains": 949,
        "./ac-classlist/remove": 951,
        "./ac-classlist/toggle": 952,
        dup: 292
    }],
    948: [function(d, g, f) {
        arguments[4][293][0].apply(f, arguments)
    }, {
        "./helpers/className": 950,
        dup: 293
    }],
    949: [function(d, g, f) {
        arguments[4][294][0].apply(f, arguments)
    }, {
        "./helpers/className": 950,
        dup: 294
    }],
    950: [function(d, g, f) {
        arguments[4][295][0].apply(f, arguments)
    }, {
        dup: 295
    }],
    951: [function(d, g, f) {
        arguments[4][296][0].apply(f, arguments)
    }, {
        "./helpers/className": 950,
        dup: 296
    }],
    952: [function(d, g, f) {
        arguments[4][297][0].apply(f, arguments)
    }, {
        "./helpers/className": 950,
        dup: 297
    }],
    953: [function(d, g, f) {
        arguments[4][493][0].apply(f, arguments)
    }, {
        "./ac-dom-nodes/createDocumentFragment": 954,
        "./ac-dom-nodes/filterByNodeType": 955,
        "./ac-dom-nodes/helpers/nodeTypes": 957,
        "./ac-dom-nodes/insertAfter": 959,
        "./ac-dom-nodes/insertBefore": 960,
        "./ac-dom-nodes/insertFirstChild": 961,
        "./ac-dom-nodes/insertLastChild": 962,
        "./ac-dom-nodes/isComment": 963,
        "./ac-dom-nodes/isDocument": 964,
        "./ac-dom-nodes/isDocumentFragment": 965,
        "./ac-dom-nodes/isDocumentType": 966,
        "./ac-dom-nodes/isElement": 967,
        "./ac-dom-nodes/isNode": 968,
        "./ac-dom-nodes/isTextNode": 969,
        "./ac-dom-nodes/remove": 970,
        "./ac-dom-nodes/replace": 971,
        dup: 493
    }],
    954: [function(d, g, f) {
        arguments[4][332][0].apply(f, arguments)
    }, {
        dup: 332
    }],
    955: [function(d, g, f) {
        arguments[4][333][0].apply(f, arguments)
    }, {
        "./helpers/isNodeType": 956,
        "./helpers/nodeTypes": 957,
        dup: 333
    }],
    956: [function(d, g, f) {
        arguments[4][334][0].apply(f, arguments)
    }, {
        "../isNode": 968,
        dup: 334
    }],
    957: [function(d, g, f) {
        arguments[4][335][0].apply(f, arguments)
    }, {
        dup: 335
    }],
    958: [function(d, g, f) {
        arguments[4][336][0].apply(f, arguments)
    }, {
        "./isNodeType": 956,
        "./nodeTypes": 957,
        dup: 336
    }],
    959: [function(d, g, f) {
        arguments[4][337][0].apply(f, arguments)
    }, {
        "./helpers/validate": 958,
        dup: 337
    }],
    960: [function(d, g, f) {
        arguments[4][338][0].apply(f, arguments)
    }, {
        "./helpers/validate": 958,
        dup: 338
    }],
    961: [function(d, g, f) {
        arguments[4][339][0].apply(f, arguments)
    }, {
        "./helpers/validate": 958,
        dup: 339
    }],
    962: [function(d, g, f) {
        arguments[4][340][0].apply(f, arguments)
    }, {
        "./helpers/validate": 958,
        dup: 340
    }],
    963: [function(d, g, f) {
        arguments[4][503][0].apply(f, arguments)
    }, {
        "./helpers/isNodeType": 956,
        "./helpers/nodeTypes": 957,
        dup: 503
    }],
    964: [function(d, g, f) {
        arguments[4][504][0].apply(f, arguments)
    }, {
        "./helpers/isNodeType": 956,
        "./helpers/nodeTypes": 957,
        dup: 504
    }],
    965: [function(d, g, f) {
        arguments[4][505][0].apply(f, arguments)
    }, {
        "./helpers/isNodeType": 956,
        "./helpers/nodeTypes": 957,
        dup: 505
    }],
    966: [function(d, g, f) {
        arguments[4][506][0].apply(f, arguments)
    }, {
        "./helpers/isNodeType": 956,
        "./helpers/nodeTypes": 957,
        dup: 506
    }],
    967: [function(d, g, f) {
        arguments[4][507][0].apply(f, arguments)
    }, {
        "./helpers/isNodeType": 956,
        "./helpers/nodeTypes": 957,
        dup: 507
    }],
    968: [function(d, g, f) {
        arguments[4][508][0].apply(f, arguments)
    }, {
        dup: 508
    }],
    969: [function(d, g, f) {
        arguments[4][509][0].apply(f, arguments)
    }, {
        "./helpers/isNodeType": 956,
        "./helpers/nodeTypes": 957,
        dup: 509
    }],
    970: [function(d, g, f) {
        arguments[4][349][0].apply(f, arguments)
    }, {
        "./helpers/validate": 958,
        dup: 349
    }],
    971: [function(d, g, f) {
        arguments[4][350][0].apply(f, arguments)
    }, {
        "./helpers/validate": 958,
        dup: 350
    }],
    972: [function(d, g, f) {
        arguments[4][467][0].apply(f, arguments)
    }, {
        "./ac-shared-instance/SharedInstance": 973,
        dup: 467
    }],
    973: [function(d, g, f) {
        arguments[4][468][0].apply(f, arguments)
    }, {
        dup: 468
    }],
    974: [function(d, g, f) {
        arguments[4][469][0].apply(f, arguments)
    }, {
        "./ac-mvc-cid/CID": 975,
        dup: 469
    }],
    975: [function(d, g, f) {
        arguments[4][470][0].apply(f, arguments)
    }, {
        "ac-shared-instance": 972,
        dup: 470
    }],
    976: [function(d, g, f) {
        arguments[4][527][0].apply(f, arguments)
    }, {
        "./ac-mvc-view/View": 977,
        dup: 527
    }],
    977: [function(d, g, f) {
        arguments[4][528][0].apply(f, arguments)
    }, {
        "ac-classlist": 947,
        "ac-dom-emitter": 874,
        "ac-dom-nodes": 953,
        "ac-mvc-cid": 974,
        "ac-object": 979,
        dup: 528
    }],
    978: [function(d, g, f) {
        arguments[4][369][0].apply(f, arguments)
    }, {
        dup: 369
    }],
    979: [function(d, g, f) {
        arguments[4][370][0].apply(f, arguments)
    }, {
        "./ac-object/clone": 980,
        "./ac-object/create": 981,
        "./ac-object/defaults": 982,
        "./ac-object/extend": 983,
        "./ac-object/getPrototypeOf": 984,
        "./ac-object/isDate": 985,
        "./ac-object/isEmpty": 986,
        "./ac-object/isRegExp": 987,
        "./ac-object/toQueryParameters": 988,
        dup: 370
    }],
    980: [function(d, g, f) {
        arguments[4][371][0].apply(f, arguments)
    }, {
        "./extend": 983,
        dup: 371
    }],
    981: [function(d, g, f) {
        arguments[4][372][0].apply(f, arguments)
    }, {
        dup: 372
    }],
    982: [function(d, g, f) {
        arguments[4][373][0].apply(f, arguments)
    }, {
        "./extend": 983,
        dup: 373
    }],
    983: [function(d, g, f) {
        arguments[4][374][0].apply(f, arguments)
    }, {
        dup: 374
    }],
    984: [function(d, g, f) {
        arguments[4][375][0].apply(f, arguments)
    }, {
        dup: 375
    }],
    985: [function(d, g, f) {
        arguments[4][376][0].apply(f, arguments)
    }, {
        dup: 376
    }],
    986: [function(d, g, f) {
        arguments[4][377][0].apply(f, arguments)
    }, {
        dup: 377
    }],
    987: [function(d, g, f) {
        arguments[4][378][0].apply(f, arguments)
    }, {
        dup: 378
    }],
    988: [function(d, g, f) {
        arguments[4][379][0].apply(f, arguments)
    }, {
        dup: 379,
        qs: 978
    }],
    989: [function(d, g, f) {
        arguments[4][30][0].apply(f, arguments)
    }, {
        "./ac-prefixer/Prefixer": 990,
        dup: 30
    }],
    990: [function(d, g, f) {
        arguments[4][31][0].apply(f, arguments)
    }, {
        "./Prefixer/camelCasedEvents": 991,
        dup: 31
    }],
    991: [function(d, g, f) {
        arguments[4][32][0].apply(f, arguments)
    }, {
        dup: 32
    }],
    992: [function(d, g, f) {
        arguments[4][251][0].apply(f, arguments)
    }, {
        "./ac-feature/canvasAvailable": 993,
        "./ac-feature/continuousScrollEventsAvailable": 994,
        "./ac-feature/cookiesAvailable": 995,
        "./ac-feature/cssLinearGradientAvailable": 996,
        "./ac-feature/cssPropertyAvailable": 997,
        "./ac-feature/helpers/memoize": 999,
        "./ac-feature/isDesktop": 1000,
        "./ac-feature/isHandheld": 1001,
        "./ac-feature/isRetina": 1002,
        "./ac-feature/isTablet": 1003,
        "./ac-feature/localStorageAvailable": 1004,
        "./ac-feature/mediaElementsAvailable": 1005,
        "./ac-feature/sessionStorageAvailable": 1006,
        "./ac-feature/svgAvailable": 1007,
        "./ac-feature/threeDTransformsAvailable": 1008,
        "./ac-feature/touchAvailable": 1009,
        "./ac-feature/webGLAvailable": 1010,
        dup: 251
    }],
    993: [function(d, g, f) {
        arguments[4][252][0].apply(f, arguments)
    }, {
        "./helpers/globals": 998,
        dup: 252
    }],
    994: [function(d, g, f) {
        arguments[4][253][0].apply(f, arguments)
    }, {
        "./touchAvailable": 1009,
        "ac-browser": 856,
        dup: 253
    }],
    995: [function(d, g, f) {
        arguments[4][254][0].apply(f, arguments)
    }, {
        "./helpers/globals": 998,
        dup: 254
    }],
    996: [function(d, g, f) {
        arguments[4][255][0].apply(f, arguments)
    }, {
        "./cssPropertyAvailable": 997,
        dup: 255
    }],
    997: [function(d, g, f) {
        arguments[4][256][0].apply(f, arguments)
    }, {
        "ac-prefixer": 989,
        dup: 256
    }],
    998: [function(d, g, f) {
        arguments[4][212][0].apply(f, arguments)
    }, {
        dup: 212
    }],
    999: [function(d, g, f) {
        arguments[4][258][0].apply(f, arguments)
    }, {
        dup: 258
    }],
    1000: [function(d, g, f) {
        arguments[4][259][0].apply(f, arguments)
    }, {
        "./helpers/globals": 998,
        "./touchAvailable": 1009,
        dup: 259
    }],
    1001: [function(d, g, f) {
        arguments[4][260][0].apply(f, arguments)
    }, {
        "./isDesktop": 1000,
        "./isTablet": 1003,
        dup: 260
    }],
    1002: [function(d, g, f) {
        arguments[4][261][0].apply(f, arguments)
    }, {
        "./helpers/globals": 998,
        dup: 261
    }],
    1003: [function(d, g, f) {
        arguments[4][262][0].apply(f, arguments)
    }, {
        "./helpers/globals": 998,
        "./isDesktop": 1000,
        dup: 262
    }],
    1004: [function(d, g, f) {
        arguments[4][263][0].apply(f, arguments)
    }, {
        "./helpers/globals": 998,
        dup: 263
    }],
    1005: [function(d, g, f) {
        arguments[4][264][0].apply(f, arguments)
    }, {
        "./helpers/globals": 998,
        dup: 264
    }],
    1006: [function(d, g, f) {
        arguments[4][265][0].apply(f, arguments)
    }, {
        "./helpers/globals": 998,
        dup: 265
    }],
    1007: [function(d, g, f) {
        arguments[4][266][0].apply(f, arguments)
    }, {
        "./helpers/globals": 998,
        dup: 266
    }],
    1008: [function(d, g, f) {
        arguments[4][267][0].apply(f, arguments)
    }, {
        "./cssPropertyAvailable": 997,
        dup: 267
    }],
    1009: [function(d, g, f) {
        arguments[4][268][0].apply(f, arguments)
    }, {
        "./helpers/globals": 998,
        dup: 268
    }],
    1010: [function(d, g, f) {
        arguments[4][269][0].apply(f, arguments)
    }, {
        "./helpers/globals": 998,
        dup: 269
    }],
    1011: [function(g, j, h) {
        var k = {};
        k.addEventListener = function(a, c, b, d) {
            if (a.addEventListener) {
                a.addEventListener(c, b, d)
            } else {
                if (a.attachEvent) {
                    a.attachEvent("on" + c, b)
                } else {
                    a["on" + c] = b
                }
            }
            return a
        };
        k.dispatchEvent = function(a, b) {
            if (document.createEvent) {
                a.dispatchEvent(new CustomEvent(b))
            } else {
                a.fireEvent("on" + b, document.createEventObject())
            }
            return a
        };
        k.removeEventListener = function(a, c, b, d) {
            if (a.removeEventListener) {
                a.removeEventListener(c, b, d)
            } else {
                a.detachEvent("on" + c, b)
            }
            return a
        };
        var i = /^(webkit|moz|ms|o)/i;
        k.addVendorPrefixEventListener = function(a, c, b, d) {
            if (i.test(c)) {
                c = c.replace(i, "")
            } else {
                c = c.charAt(0).toUpperCase() + c.slice(1)
            }
            if (/WebKit/i.test(window.navigator.userAgent)) {
                return k.addEventListener(a, "webkit" + c, b, d)
            } else {
                if (/Opera/i.test(window.navigator.userAgent)) {
                    return k.addEventListener(a, "O" + c, b, d)
                } else {
                    if (/Gecko/i.test(window.navigator.userAgent)) {
                        return k.addEventListener(a, c.toLowerCase(), b, d)
                    } else {
                        c = c.charAt(0).toLowerCase() + c.slice(1);
                        return k.addEventListener(a, c, b, d)
                    }
                }
            }
        };
        k.removeVendorPrefixEventListener = function(a, c, b, d) {
            if (i.test(c)) {
                c = c.replace(i, "")
            } else {
                c = c.charAt(0).toUpperCase() + c.slice(1)
            }
            k.removeEventListener(a, "webkit" + c, b, d);
            k.removeEventListener(a, "O" + c, b, d);
            k.removeEventListener(a, c.toLowerCase(), b, d);
            c = c.charAt(0).toLowerCase() + c.slice(1);
            return k.removeEventListener(a, c, b, d)
        };
        k.stop = function(a) {
            if (!a) {
                a = window.event
            }
            if (a.stopPropagation) {
                a.stopPropagation()
            } else {
                a.cancelBubble = true
            }
            if (a.preventDefault) {
                a.preventDefault()
            }
            a.stopped = true;
            a.returnValue = false
        };
        k.target = function(a) {
            return (typeof a.target !== "undefined") ? a.target : a.srcElement
        };
        j.exports = k
    }, {}],
    1012: [function(d, g, f) {
        arguments[4][41][0].apply(f, arguments)
    }, {
        "./ac-dom-traversal/ancestor": 1013,
        "./ac-dom-traversal/ancestors": 1014,
        "./ac-dom-traversal/children": 1015,
        "./ac-dom-traversal/filterBySelector": 1016,
        "./ac-dom-traversal/firstChild": 1017,
        "./ac-dom-traversal/lastChild": 1020,
        "./ac-dom-traversal/matchesSelector": 1021,
        "./ac-dom-traversal/nextSibling": 1022,
        "./ac-dom-traversal/nextSiblings": 1023,
        "./ac-dom-traversal/previousSibling": 1024,
        "./ac-dom-traversal/previousSiblings": 1025,
        "./ac-dom-traversal/querySelector": 1026,
        "./ac-dom-traversal/querySelectorAll": 1027,
        "./ac-dom-traversal/shims/ie": 1028,
        "./ac-dom-traversal/siblings": 1029,
        dup: 41
    }],
    1013: [function(n, l, o) {
        var j = n("ac-dom-nodes");
        var i = n("./matchesSelector");
        var k = n("./helpers/validate");
        l.exports = function m(a, b, c) {
            k.childNode(a, true, "ancestors");
            k.selector(b, false, "ancestors");
            if (c && j.isElement(a) && (!b || i(a, b))) {
                return a
            }
            if (a !== document.body) {
                while ((a = a.parentNode) && j.isElement(a)) {
                    if (!b || i(a, b)) {
                        return a
                    }
                    if (a === document.body) {
                        break
                    }
                }
            }
            return null
        }
    }, {
        "./helpers/validate": 1019,
        "./matchesSelector": 1021,
        "ac-dom-nodes": 877
    }],
    1014: [function(n, m, o) {
        var j = n("ac-dom-nodes");
        var i = n("./matchesSelector");
        var k = n("./helpers/validate");
        m.exports = function l(a, c, d) {
            var b = [];
            k.childNode(a, true, "ancestors");
            k.selector(c, false, "ancestors");
            if (d && j.isElement(a) && (!c || i(a, c))) {
                b.push(a)
            }
            if (a !== document.body) {
                while ((a = a.parentNode) && j.isElement(a)) {
                    if (!c || i(a, c)) {
                        b.push(a)
                    }
                    if (a === document.body) {
                        break
                    }
                }
            }
            return b
        }
    }, {
        "./helpers/validate": 1019,
        "./matchesSelector": 1021,
        "ac-dom-nodes": 877
    }],
    1015: [function(d, g, f) {
        arguments[4][44][0].apply(f, arguments)
    }, {
        "./filterBySelector": 1016,
        "./helpers/validate": 1019,
        "ac-dom-nodes": 877,
        dup: 44
    }],
    1016: [function(d, g, f) {
        arguments[4][45][0].apply(f, arguments)
    }, {
        "./helpers/validate": 1019,
        "./matchesSelector": 1021,
        dup: 45
    }],
    1017: [function(d, g, f) {
        arguments[4][46][0].apply(f, arguments)
    }, {
        "./children": 1015,
        "./helpers/validate": 1019,
        dup: 46
    }],
    1018: [function(d, g, f) {
        arguments[4][47][0].apply(f, arguments)
    }, {
        dup: 47
    }],
    1019: [function(d, g, f) {
        arguments[4][48][0].apply(f, arguments)
    }, {
        "ac-dom-nodes": 877,
        dup: 48
    }],
    1020: [function(d, g, f) {
        arguments[4][49][0].apply(f, arguments)
    }, {
        "./children": 1015,
        "./helpers/validate": 1019,
        dup: 49
    }],
    1021: [function(o, n, p) {
        var j = o("ac-dom-nodes");
        var k = o("./helpers/nativeMatches");
        var l = o("./helpers/validate");
        var m = o("./vendor/sizzle/sizzle");
        n.exports = function q(a, b) {
            l.selector(b, true, "matchesSelector");
            if (!j.isElement(a)) {
                return false
            }
            if (!k) {
                return m.matchesSelector(a, b)
            }
            return k.call(a, b)
        }
    }, {
        "./helpers/nativeMatches": 1018,
        "./helpers/validate": 1019,
        "./vendor/sizzle/sizzle": 1030,
        "ac-dom-nodes": 877
    }],
    1022: [function(d, g, f) {
        arguments[4][51][0].apply(f, arguments)
    }, {
        "./helpers/validate": 1019,
        "./matchesSelector": 1021,
        "ac-dom-nodes": 877,
        dup: 51
    }],
    1023: [function(d, g, f) {
        arguments[4][52][0].apply(f, arguments)
    }, {
        "./helpers/validate": 1019,
        "./matchesSelector": 1021,
        "ac-dom-nodes": 877,
        dup: 52
    }],
    1024: [function(d, g, f) {
        arguments[4][53][0].apply(f, arguments)
    }, {
        "./helpers/validate": 1019,
        "./matchesSelector": 1021,
        "ac-dom-nodes": 877,
        dup: 53
    }],
    1025: [function(d, g, f) {
        arguments[4][54][0].apply(f, arguments)
    }, {
        "./helpers/validate": 1019,
        "./matchesSelector": 1021,
        "ac-dom-nodes": 877,
        dup: 54
    }],
    1026: [function(d, g, f) {
        arguments[4][55][0].apply(f, arguments)
    }, {
        "./helpers/validate": 1019,
        dup: 55
    }],
    1027: [function(d, g, f) {
        arguments[4][56][0].apply(f, arguments)
    }, {
        "./helpers/validate": 1019,
        dup: 56
    }],
    1028: [function(m, l, h) {
        var k = m("../vendor/sizzle/sizzle");
        var i = m("ac-dom-nodes");
        var j = m("../helpers/validate");
        l.exports = function(a, b) {
            if (b || !("querySelectorAll" in document)) {
                a.querySelectorAll = function(g, d) {
                    var f;
                    var c;
                    d = d || document;
                    j.parentNode(d, true, "querySelectorAll", "context");
                    j.selector(g, true, "querySelectorAll");
                    if (i.isDocumentFragment(d)) {
                        f = a.children(d);
                        c = [];
                        f.forEach(function(p) {
                            var q;
                            if (k.matchesSelector(p, g)) {
                                c.push(p)
                            }
                            q = k(g, p);
                            if (q.length) {
                                c = c.concat(q)
                            }
                        });
                        return c
                    }
                    return k(g, d)
                };
                a.querySelector = function(d, c) {
                    var f;
                    c = c || document;
                    j.parentNode(c, true, "querySelector", "context");
                    j.selector(d, true, "querySelector");
                    f = a.querySelectorAll(d, c);
                    return f.length ? f[0] : null
                }
            }
        }
    }, {
        "../helpers/validate": 1019,
        "../vendor/sizzle/sizzle": 1030,
        "ac-dom-nodes": 877
    }],
    1029: [function(d, g, f) {
        arguments[4][58][0].apply(f, arguments)
    }, {
        "./children": 1015,
        "./helpers/validate": 1019,
        dup: 58
    }],
    1030: [function(d, g, f) {
        arguments[4][59][0].apply(f, arguments)
    }, {
        dup: 59
    }],
    1031: [function(d, g, f) {
        g.exports.Slider = d("./ac-slider/Slider")
    }, {
        "./ac-slider/Slider": 1032
    }],
    1032: [function(t, u, q) {
        var x = t("ac-dom-traversal");
        var n = t("ac-dom-events");
        var o = t("ac-event-emitter");
        var w = t("ac-dom-metrics");
        var v = {
            min: 0,
            max: 1,
            step: 1,
            value: 0,
            orientation: "horizontal",
            template: '<div class="ac-slider-runnable-track">\n\t<div class="ac-slider-thumb"></div>\n</div>'
        };
        var m = Object.keys(v);
        var r = function(b, a) {
            this.options = Object.assign({}, v, a);
            this.model = Object.create(this.options);
            this.el = b;
            b.className += " ac-slider-container";
            b.innerHTML = this.model.template;
            this.initialize()
        };
        r.prototype = Object.create(o.EventEmitter.prototype);
        var p = r.prototype;
        p.addEventListeners = function() {
            this.addEventListener(this.el, "mousedown", this.onMouseDown);
            this.addEventListener(this.el, "touchstart", this.onTouchStart);
            this.addEventListener(this.el, "mouseover", this.onMouseOver);
            this.addEventListener(this.el, "mouseleave", this.onMouseLeave);
            this.addEventListener(this.el, "touchend", this.onTouchEnd);
            this.addEventListener(document, "touchend", this.onMouseUp)
        };
        p.addEventListener = n.addEventListener;
        p.bindMethods = function() {
            this.onMouseDown = this.bindMethod(this.onMouseDown, this);
            this.onTouchStart = this.bindMethod(this.onTouchStart, this);
            this.onMouseOver = this.bindMethod(this.onMouseOver, this);
            this.onMouseLeave = this.bindMethod(this.onMouseLeave, this);
            this.onTouchEnd = this.bindMethod(this.onTouchEnd, this);
            this.onMouseUp = this.bindMethod(this.onMouseUp, this);
            this.onMouseMove = this.bindMethod(this.onMouseMove, this);
            this.onTouchMove = this.bindMethod(this.onTouchMove, this)
        };
        p.bindMethod = function(b, a) {
            return b.bind(a)
        };
        p.correctValueMinMax = function(b, c, a) {
            if (b > a) {
                b = a
            }
            if (b < c) {
                b = c
            }
            return b
        };
        p.calculateStepsToValue = function(b, a) {
            return Math.abs(b - a)
        };
        p.calculateMaxSteps = function(b, a) {
            return Math.abs(a - b)
        };
        p.calculateStepsEqualToPercentage = function(b, a) {
            return (b / 100) * a
        };
        p.calculateNextStepInRange = function(b, h, a, c) {
            var f = this.calculateMaxSteps(h, a);
            var d = this.calculateStepsToValue(b, h);
            var g = h + (Math.floor(f / c) * c);
            b = Math.min(g, h + Math.round(d / c) * c);
            return b
        };
        p.dispatchEvent = n.dispatchEvent;
        p.disableUserControls = function() {
            this.removeEventListeners()
        };
        p.enableUserControls = function() {
            this.addEventListeners()
        };
        p.getNextValue = function(b, d, a, c) {
            b = this.correctValueMinMax(b, d, a);
            if (c !== "auto") {
                b = this.calculateNextStepInRange(b, d, a, c)
            }
            return b
        };
        p.getOrientation = function() {
            return this.model.orientation
        };
        p.getValue = function() {
            return this.model.value
        };
        p.getMin = function() {
            return this.model.min
        };
        p.getMax = function() {
            return this.model.max
        };
        p.getStep = function() {
            return this.model.step
        };
        p.getClientXValue = function(j) {
            var f = this.getClientXFromEvent(j);
            var i = w.getDimensions(this.thumbElement, true);
            var d = w.getViewportPosition(this.thumbElement);
            var h = w.getDimensions(this.runnableTrackElement, true);
            var g = w.getViewportPosition(this.runnableTrackElement);
            var b = f - this.runnableTrackElement.getBoundingClientRect().left - (i.width / 2);
            var k = h.width - i.width;
            var c = b / (k) * 100;
            var a = this.calculateMaxSteps(this.getMin(), this.getMax());
            var l = this.calculateStepsEqualToPercentage(c, a);
            return this.getMin() + l
        };
        p.getClientYValue = function(k) {
            var g = this.getClientYFromEvent(k);
            var i = w.getDimensions(this.thumbElement, true);
            var d = w.getViewportPosition(this.thumbElement);
            var h = w.getDimensions(this.runnableTrackElement, true);
            var f = w.getViewportPosition(this.runnableTrackElement);
            var l = h.height - i.height;
            var j = l - (g - this.runnableTrackElement.getBoundingClientRect().top - (i.height / 2));
            var c = j / (h.height - i.height) * 100;
            var b = this.calculateMaxSteps(this.model.min, this.model.max);
            var a = this.calculateStepsEqualToPercentage(c, b);
            return this.model.min + a
        };
        p.getClientValue = function(b) {
            b = b.originalEvent || b;
            var a;
            if (this.model.orientation === "horizontal") {
                a = this.getClientXValue(b)
            } else {
                a = this.getClientYValue(b)
            }
            return a
        };
        p.getClientXFromEvent = function(a) {
            return a.touches ? a.touches[0].clientX : a.clientX
        };
        p.getClientYFromEvent = function(a) {
            return a.touches ? a.touches[0].clientY : a.clientY
        };
        p.initialize = function() {
            this.setNodeReferences();
            this.setValue(this.model.value);
            this.bindMethods();
            this.addEventListeners()
        };
        p.onMouseLeave = function() {
            this.preventDocumentMouseUpDispatch = false
        };
        p.onMouseDown = function(b) {
            var a = this.getClientValue(b);
            this.addEventListener(document, "mouseup", this.onMouseUp);
            this.addEventListener(document, "mousemove", this.onMouseMove);
            this.trigger("grab", this.getValue());
            this.setValue(a)
        };
        p.onMouseUp = function() {
            this.removeEventListener(document, "mouseup", this.onMouseUp);
            this.removeEventListener(document, "mousemove", this.onMouseMove);
            this.trigger("release", this.getValue());
            if (!this.preventDocumentMouseUpDispatch) {
                this.dispatchEvent(this.el, "mouseup")
            }
        };
        p.onMouseOver = function() {
            this.preventDocumentMouseUpDispatch = true
        };
        p.onTouchEnd = function() {
            this.removeEventListener(document, "touchend", this.onTouchEnd);
            this.removeEventListener(document, "touchmove", this.onTouchMove);
            this.trigger("release", this.getValue());
            if (!this.preventDocumentMouseUpDispatch) {
                this.dispatchEvent(this.el, "touchend")
            }
        };
        p.onTouchStart = function(b) {
            var a = this.getClientValue(b);
            this.addEventListener(document, "touchend", this.onMouseUp);
            this.addEventListener(document, "touchmove", this.onTouchMove);
            this.trigger("grab", this.getValue());
            this.setValue(a)
        };
        p.onMouseMove = function(b) {
            var a = this.getClientValue(b);
            this.setValue(a)
        };
        p.onTouchMove = function(b) {
            if (b.preventDefault) {
                b.preventDefault()
            }
            var a = this.getClientValue(b);
            this.setValue(a)
        };
        p.getElementOrientationOffsetValue = function(b, a) {
            if (a === "horizontal") {
                return w.getDimensions(b).width
            }
            return w.getDimensions(b).height
        };
        p.getAvailableRunnableTrack = function(b, a) {
            var c = this.getElementOrientationOffsetValue(this.thumbElement, a);
            return b - c
        };
        p.getPercentageByValue = function(b, a) {
            b = this.calculateStepsToValue(b, this.getMin());
            a = this.calculateMaxSteps(this.getMin(), this.getMax());
            return (b / a) * 100
        };
        p.getPercentageOfRunnableTrack = function(c) {
            var g = this.getOrientation();
            var b = this.getElementOrientationOffsetValue(this.runnableTrackElement, g);
            var a = this.getAvailableRunnableTrack(b, g);
            var d = this.getPercentageByValue(c, this.getMax());
            var f = (d / 100) * a;
            return (f / b) * 100
        };
        p.onChange = function(b) {
            var a = this.getPercentageOfRunnableTrack(b);
            if (this.getOrientation() === "horizontal") {
                if (!isNaN(a)) {
                    this.thumbElement.style.left = a + "%"
                }
            } else {
                if (!isNaN(a)) {
                    this.thumbElement.style.bottom = a + "%"
                }
            }
            this.trigger("change", this.getValue())
        };
        p.removeEventListeners = function() {
            this.removeEventListener(this.el, "mousedown", this.onMouseDown);
            this.removeEventListener(this.el, "touchstart", this.onTouchStart);
            this.removeEventListener(this.el, "mouseover", this.onMouseOver);
            this.removeEventListener(this.el, "mouseleave", this.onMouseLeave);
            this.removeEventListener(this.el, "touchend", this.onTouchEnd);
            this.removeEventListener(document, "touchend", this.onMouseUp)
        };
        p.removeEventListener = n.removeEventListener;
        p.setNodeReferences = function() {
            this.runnableTrackElement = x.querySelector(".ac-slider-runnable-track", this.el);
            this.thumbElement = x.querySelector(".ac-slider-thumb", this.el)
        };
        p.setOrientation = function(a) {
            this.set("orientation", a)
        };
        p.setValue = function(a) {
            a = this.getNextValue(a, this.getMin(), this.getMax(), this.getStep());
            this.set("value", a);
            this.onChange(a)
        };
        p.setMin = function(a) {
            this.set("min", a)
        };
        p.setMax = function(a) {
            this.set("max", a)
        };
        p.setStep = function(a) {
            this.set("step", a)
        };
        p.set = function(a, b) {
            if (m.indexOf(a) > -1 && this.model[a] !== b) {
                var c = this.model[a];
                this.model[a] = b;
                this.trigger("change:model:" + a, {
                    previous: c,
                    current: b
                })
            }
        };
        u.exports = r
    }, {
        "ac-dom-events": 1011,
        "ac-dom-metrics": 90,
        "ac-dom-traversal": 1012,
        "ac-event-emitter": 916
    }],
    1033: [function(d, g, f) {
        arguments[4][369][0].apply(f, arguments)
    }, {
        dup: 369
    }],
    1034: [function(d, g, f) {
        arguments[4][530][0].apply(f, arguments)
    }, {
        "./ac-string/isString": 1035,
        "./ac-string/queryParameters": 1036,
        "./ac-string/queryStringToObject": 1037,
        "./ac-string/supplant": 1038,
        "./ac-string/toCamelCase": 1039,
        "./ac-string/toQueryPair": 1040,
        dup: 530
    }],
    1035: [function(d, g, f) {
        arguments[4][531][0].apply(f, arguments)
    }, {
        dup: 531
    }],
    1036: [function(d, g, f) {
        arguments[4][532][0].apply(f, arguments)
    }, {
        "./queryStringToObject": 1037,
        dup: 532
    }],
    1037: [function(d, g, f) {
        arguments[4][533][0].apply(f, arguments)
    }, {
        dup: 533,
        qs: 1033
    }],
    1038: [function(d, g, f) {
        arguments[4][534][0].apply(f, arguments)
    }, {
        dup: 534
    }],
    1039: [function(d, g, f) {
        arguments[4][535][0].apply(f, arguments)
    }, {
        dup: 535
    }],
    1040: [function(d, g, f) {
        arguments[4][536][0].apply(f, arguments)
    }, {
        dup: 536
    }],
    1041: [function(d, g, f) {
        arguments[4][484][0].apply(f, arguments)
    }, {
        "./ac-video-localization/localization": 1042,
        dup: 484
    }],
    1042: [function(d, g, f) {
        arguments[4][485][0].apply(f, arguments)
    }, {
        "./translations": 1043,
        "ac-mvc-model": 945,
        dup: 485
    }],
    1043: [function(d, g, f) {
        arguments[4][486][0].apply(f, arguments)
    }, {
        dup: 486
    }],
    1044: [function(o, m, i) {
        var k = o("./view");
        var l = o("./model");
        var n = o("./elements/element");
        var j = {
            create: function(c, a) {
                c = c || {};
                a = a || {};
                c.elementClassPrefix = c.elementClassPrefix || "controls";
                a.elementClassPrefix = c.elementClassPrefix;
                var b = this.Model(a);
                var d = this.View(Object.assign({}, c, {
                    model: b
                }));
                d.initialize();
                return d
            },
            Model: l,
            View: k,
            element: n
        };
        m.exports = j
    }, {
        "./elements/element": 1047,
        "./model": 1065,
        "./view": 1067
    }],
    1045: [function(l, j, h) {
        var m = l("ac-classlist");
        var k = l("./element");
        var i = k.newType({
            className: "thirty-seconds-back-button",
            events: [{
                type: "click",
                callback: "thirySecondsBack"
            }],
            thirySecondsBack: function() {
                var a = this.player.getCurrentTime();
                var b = a - 30;
                this.player.setCurrentTime((b < 0) ? 0 : b)
            }
        });
        j.exports = i
    }, {
        "./element": 1047,
        "ac-classlist": 17
    }],
    1046: [function(k, i, g) {
        var j = k("./element");
        var h = j.newType({
            className: "elapsed-time",
            _initialize: function() {
                this.options.model.on("change:elapsedTime", this._setElapsedTime, this)
            },
            _setElapsedTime: function(a) {
                this.el.innerHTML = a.value || a
            }
        });
        i.exports = h
    }, {
        "./element": 1047
    }],
    1047: [function(f, h, g) {
        var i = {
            className: "",
            create: function(a, b) {
                var c = Object.create(this);
                c.el = a;
                c.options = b;
                c.player = b.player;
                c._initialize();
                return c
            },
            events: [],
            newType: function(b) {
                var a = Object.assign({}, this, b);
                return a
            },
            setElementAttributes: function() {
                this.elementAttributeString.forEach(function(b) {
                    var a;
                    if (typeof b === "string") {
                        a = this._getLocalizationAttribute(b);
                        this._setAttributeText(a)
                    } else {
                        if (this[b.condition]()) {
                            a = this._getLocalizationAttribute(b.string);
                            this._setAttributeText(a)
                        }
                    }
                }, this)
            },
            _getLocalizationAttribute: function(a) {
                return this.options.model.get(a)
            },
            _initialize: function() {
                this.elementAttributeString = this.elementAttributeString || [];
                this.setElementAttributes()
            },
            _setAttributeText: function(a) {
                ["value", "aria-label"].forEach(function(b) {
                    this.el.setAttribute(b, a)
                }, this)
            }
        };
        h.exports = i
    }, {}],
    1048: [function(r, t, p) {
        var q = r("ac-classlist");
        var n = r("ac-fullscreen");
        var l = r("ac-feature");
        var o = r("./element");
        var k = !l.isDesktop();
        var m = o.newType({
            className: "full-screen-button",
            events: [{
                type: "click",
                callback: "_toggleFullscreen"
            }],
            _exitFullscreen: function(a) {
                n.exitFullscreen(a)
            },
            _getFullScreenElement: function() {
                var a = false;
                if (this._isNotDesktop()) {
                    a = this.options.player.getMediaElement()
                }
                return a || this.options.fullScreenElement || this.options.player.getMediaElement()
            },
            _isFullScreen: function(a) {
                return this._supportsFullscreen(a)
            },
            _initialize: function() {
                this.isFullScreen = false;
                if (this._supportsFullscreen(this._getFullScreenElement())) {
                    this._removeFullscreenUnsupportedClass();
                    this._listenForFullscreenChange()
                }
            },
            _isNotDesktop: function() {
                return k
            },
            _listenForFullscreenChange: function() {
                n.on("enterfullscreen", this._onEnterFullScreen, this);
                n.on("exitfullscreen", this._onExitFullScreen, this)
            },
            _onEnterFullScreen: function() {
                this.isFullScreen = true;
                q.add(this.el, "is-fullscreen")
            },
            _onExitFullScreen: function() {
                this.isFullScreen = false;
                q.remove(this.el, "is-fullscreen")
            },
            _requestFullscreen: function(a) {
                n.requestFullscreen(a)
            },
            _removeFullscreenUnsupportedClass: function() {
                q.remove(this.el, "fullscreen-unsupported")
            },
            _supportsFullscreen: function(a) {
                return n.fullscreenEnabled(a)
            },
            _toggleFullscreen: function() {
                var a = this._getFullScreenElement();
                if (this.isFullScreen) {
                    this._exitFullscreen(a)
                } else {
                    this._requestFullscreen(a)
                }
            }
        });
        t.exports = m
    }, {
        "./element": 1047,
        "ac-classlist": 17,
        "ac-feature": 992,
        "ac-fullscreen": 921
    }],
    1049: [function(g, j, h) {
        var k = g("./element");
        var i = k.newType({
            className: "max-volume-button",
            events: [{
                type: "click",
                callback: "maxVolume"
            }],
            maxVolume: function() {
                this.options.player.setMuted(false);
                this.options.player.setVolume(1)
            }
        });
        j.exports = i
    }, {
        "./element": 1047
    }],
    1050: [function(k, i, g) {
        var j = k("./element");
        var h = j.newType({
            className: "min-volume-button",
            events: [{
                type: "click",
                callback: "minVolume"
            }],
            minVolume: function() {
                this.options.player.setMuted(false);
                this.options.player.setVolume(0)
            }
        });
        i.exports = h
    }, {
        "./element": 1047
    }],
    1051: [function(k, i, g) {
        var j = k("./element");
        var h = j.newType({
            className: "mute-volume-button",
            events: [{
                type: "click",
                callback: "mute"
            }],
            mute: function() {
                this.options.player.setMuted(true)
            }
        });
        i.exports = h
    }, {
        "./element": 1047
    }],
    1052: [function(g, j, h) {
        var k = g("./element");
        var i = k.newType({
            className: "toggle-mute-volume-button",
            events: [{
                type: "click",
                callback: "toggleMutedVolume"
            }],
            toggleMutedVolume: function() {
                var a = this.options.player.getMuted() ? false : true;
                this.options.player.setMuted(a)
            }
        });
        j.exports = i
    }, {
        "./element": 1047
    }],
    1053: [function(g, j, h) {
        var k = g("./element");
        var i = k.newType({
            className: "pause-button",
            events: [{
                type: "click",
                callback: "pause"
            }],
            pause: function() {
                this.options.player.pause()
            }
        });
        j.exports = i
    }, {
        "./element": 1047
    }],
    1054: [function(g, j, h) {
        var k = g("./element");
        var i = k.newType({
            className: "play-button",
            events: [{
                type: "click",
                callback: "play"
            }],
            play: function() {
                this.options.player.play()
            }
        });
        j.exports = i
    }, {
        "./element": 1047
    }],
    1055: [function(m, k, i) {
        var h = m("ac-classlist");
        var l = m("./element");
        var j = l.newType({
            className: "play-pause-button",
            events: [{
                type: "click",
                callback: "playPauseToggle"
            }],
            elementAttributeString: [{
                condition: "playerIsPlaying",
                string: "pause"
            }, {
                condition: "playerIsPaused",
                string: "play"
            }],
            playerIsPlaying: function() {
                return !this.player.getPaused()
            },
            playerIsPaused: function() {
                return this.player.getPaused()
            },
            playPauseToggle: function() {
                if (this.player.getPaused()) {
                    this.player.play()
                } else {
                    this.player.pause()
                }
            },
            _addEventListeners: function() {
                this.player.on("play pause", this._handleStateChange, this)
            },
            _handleStateChange: function() {
                this._toggleIsPlayingClass();
                this.setElementAttributes()
            },
            _initialize: function() {
                l._initialize.call(this);
                this._addEventListeners();
                this._handleStateChange()
            },
            _toggleIsPlayingClass: function() {
                var a = this.player.getPaused() ? "remove" : "add";
                h[a](this.el, "is-playing")
            }
        });
        k.exports = j
    }, {
        "./element": 1047,
        "ac-classlist": 17
    }],
    1056: [function(t, u, p) {
        var o = t("./element");
        var q = t("ac-classlist");
        var x = t("ac-dom-traversal");
        var n = t("ac-dom-events");
        var m = t("ac-slider");
        var w = t("../mixins/get-model-attribute");
        var v = t("../mixins/cursor-pointer");
        var r = o.newType(Object.assign({
            className: "progress-indicator",
            _bindSetupElement: function() {
                return this._setupElement.bind(this)
            },
            _getCurrentTime: function(a) {
                return (a && a.value) ? a.value : this.polyfilledEl.getValue()
            },
            _getSliderInstance: function() {
                return new m.Slider(this.el, {
                    template: '<div class="ac-slider-runnable-track">\n\t<div class="ac-slider-inner-track">\n\t\t<div class="ac-slider-thumb">\n\t\t\t<div class="ac-slider-thumb-background"></div>\n\t\t\t<div class="ac-slider-scrubbed"></div>\n\t\t</div>\n\t</div>\n</div>\n<input class="ac-slider-input-type-range" type="range" value="0" step="1" min="0" max="1"  />',
                    min: 0,
                    max: +this.options.model.get("duration"),
                    step: isNaN(+this.el.getAttribute("step")) ? this.el.getAttribute("step") : +this.el.getAttribute("step"),
                    value: +this.el.getAttribute("value")
                })
            },
            _handleProgressIndicatorChange: function(a) {
                this.options.model.set({
                    timeupdate: this._getCurrentTime(a)
                })
            },
            _initialize: function() {
                o._initialize.call(this);
                this._setupElement = this._bindSetupElement();
                this.getModelAttribute("duration").then(this._setupElement)
            },
            _onGrab: function() {
                this.options.model.set({
                    ignoreTimeupdate: true
                });
                this.options.player.off("timeupdate", this._setIndicatorValue);
                this.polyfilledEl.on("change", this._setModelValue, this);
                this.forceCursorPointer()
            },
            _onRelease: function() {
                this._setPlayerValue();
                this.options.model.set({
                    ignoreTimeupdate: false
                });
                this.options.player.on("timeupdate", this._setIndicatorValue, this);
                this.polyfilledEl.off("change", this._setModelValue);
                this.disableForcedCursorPointer()
            },
            _onPlayerDurationChange: function() {
                if (!isNaN(this.options.player.getDuration())) {
                    this.polyfilledEl.setMax(this.options.player.getDuration())
                }
            },
            _polyfillRangeInput: function() {
                this.polyfilledEl = this._getSliderInstance();
                this.thumbEl = x.querySelector(".ac-slider-thumb", this.el);
                this.scrubbedEl = x.querySelector(".ac-slider-scrubbed", this.el)
            },
            _setIndicatorValue: function() {
                var a = this.options.player.getCurrentTime();
                this.polyfilledEl.setValue(a)
            },
            _setPlayerValue: function() {
                var a = this.polyfilledEl.getValue();
                this.options.player.setCurrentTime(a)
            },
            _setModelValue: function() {
                var a = this.polyfilledEl.getValue();
                this.options.model.set({
                    timeupdate: a
                })
            },
            _setupElement: function(a) {
                this.el.setAttribute("max", a);
                this._polyfillRangeInput();
                this.el.setAttribute("aria-valuemax", this.polyfilledEl.getMax());
                this.polyfilledEl.on("change:model:max", function() {
                    this.el.setAttribute("aria-valuemax", this.polyfilledEl.getMax())
                }, this);
                this.polyfilledEl.on("change:model:value", function() {
                    this.el.setAttribute("aria-valuenow", this.polyfilledEl.getValue())
                }, this);
                this.el.setAttribute("aria-valuemin", this.polyfilledEl.getMin());
                this.polyfilledEl.on("change:model:min", function() {
                    this.el.setAttribute("aria-valuemin", this.polyfilledEl.getMin())
                }, this);
                this.options.player.on("timeupdate", this._setIndicatorValue, this);
                this.polyfilledEl.on("grab", this._onGrab, this);
                this.polyfilledEl.on("release", this._onRelease, this);
                this.options.player.on("durationchange", this._onPlayerDurationChange, this)
            }
        }, w, v));
        u.exports = r
    }, {
        "../mixins/cursor-pointer": 1063,
        "../mixins/get-model-attribute": 1064,
        "./element": 1047,
        "ac-classlist": 17,
        "ac-dom-events": 67,
        "ac-dom-traversal": 897,
        "ac-slider": 1031
    }],
    1057: [function(m, j, i) {
        var k = m("./element");
        var h = m("../mixins/get-model-attribute");
        var l = k.newType(Object.assign({}, {
            className: "remaining-time",
            _bindUpdateRemainingTimeIndicator: function() {
                return this._updateRemainingTimeIndicator.bind(this)
            },
            _initialize: function() {
                this._updateRemainingTimeIndicator = this._bindUpdateRemainingTimeIndicator();
                this.options.model.on("change:remainingTime", this._updateRemainingTimeIndicator, this);
                this.getModelAttribute("remainingTime").then(this._updateRemainingTimeIndicator)
            },
            _updateRemainingTimeIndicator: function(a) {
                this.el.innerHTML = a.value || a
            }
        }, h));
        j.exports = l
    }, {
        "../mixins/get-model-attribute": 1064,
        "./element": 1047
    }],
    1058: [function(k, j, g) {
        var h = k("./text-tracks");
        var i = h.newType({
            className: "text-tracks-off-button",
            events: [{
                type: "click",
                callback: "textTracksOff"
            }],
            elementAttributeString: ["captionsturnedoff"]
        });
        j.exports = i
    }, {
        "./text-tracks": 1061
    }],
    1059: [function(j, i, g) {
        var h = j("./text-tracks");
        var k = h.newType({
            className: "text-tracks-on-button",
            events: [{
                type: "click",
                callback: "textTracksOn"
            }],
            elementAttributeString: ["captionsturnedon"]
        });
        i.exports = k
    }, {
        "./text-tracks": 1061
    }],
    1060: [function(l, k, h) {
        var m = l("ac-classlist");
        var i = l("./text-tracks");
        var j = i.newType({
            className: "text-tracks-toggle-button",
            events: [{
                type: "click",
                callback: "textTracksToggle"
            }],
            textTracksToggle: function() {
                var b = this._getTextTrackModeAndIndex();
                var a = b.get("mode");
                if (a === "showing") {
                    this.textTracksOff()
                } else {
                    this.textTracksOn()
                }
            },
            elementAttributeString: [{
                condition: "textTracksAreShowing",
                string: "captionsturnedoff"
            }, {
                condition: "textTracksAreDisabled",
                string: "captionsturnedon"
            }],
            textTracksAreShowing: function() {
                return this.player.getVisibleTextTracks().models.length > 0
            },
            textTracksAreDisabled: function() {
                return this.player.getVisibleTextTracks().models.length === 0
            },
            _addEventListeners: function() {
                i._addEventListeners.call(this);
                this.player.on("texttrackshow texttrackhide", this.setElementAttributes, this)
            }
        });
        k.exports = j
    }, {
        "./text-tracks": 1061,
        "ac-classlist": 17
    }],
    1061: [function(o, m, q) {
        var p = o("ac-classlist");
        var n = o("./element");
        var k = {
            on: "showing",
            off: "disabled"
        };
        var l = {
            visible: "text-tracks-visible",
            none: "no-text-tracks"
        };
        var j = n.newType({
            onTextTracksVisible: function() {
                p.add(this.el, l.visible)
            },
            onTextTracksHidden: function() {
                p.remove(this.el, l.visible)
            },
            textTracksOn: function() {
                var a = this._getTextTrackModeAndIndex();
                a.show()
            },
            textTracksOff: function() {
                var a = this._getTextTrackModeAndIndex();
                a.hide()
            },
            _addEventListeners: function() {
                var a = this._getTextTrackModeAndIndex();
                this.player.on("texttrackshow", this.onTextTracksVisible, this);
                this.player.on("texttrackhide", this.onTextTracksHidden, this);
                this.options.model.on("change:localization", this.setElementAttributes, this)
            },
            _addTextTrackClass: function() {
                var a = this.player.getEnabledTextTracks().models;
                if (a.length) {
                    this._removeNoTextTracksClass();
                    if (this.player.getVisibleTextTracks().models.length) {
                        this.onTextTracksVisible()
                    } else {
                        this.onTextTracksHidden()
                    }
                } else {
                    this._addNoTextTracksClass()
                }
            },
            _addNoTextTracksClass: function() {
                p.add(this.el, l.none)
            },
            _getTextTrackModeAndIndex: function() {
                var a = this.player.getVisibleTextTracks().at(0);
                if (!a) {
                    a = this.player.getEnabledTextTracks().at(0)
                }
                return a
            },
            _initialize: function() {
                n._initialize.call(this);
                this._addTextTrackClass();
                this._addEventListeners()
            },
            _removeNoTextTracksClass: function() {
                p.remove(this.el, l.none)
            },
            _toggleTextTracksVisibleClass: function(b) {
                var a = b ? "onTextTracksHidden" : "onTextTracksVisible";
                this[a]()
            },
            _toggleNoTextTracksClass: function(b) {
                var a = b ? "_removeNoTextTracksClass" : "_addNoTextTracksClass";
                this[a]()
            }
        });
        m.exports = j
    }, {
        "./element": 1047,
        "ac-classlist": 17
    }],
    1062: [function(t, u, q) {
        var p = t("./element");
        var r = t("ac-classlist");
        var o = t("ac-dom-events");
        var n = t("ac-slider");
        var x = t("ac-dom-traversal");
        var w = t("../mixins/get-model-attribute");
        var v = t("../mixins/cursor-pointer");
        var m = p.newType(Object.assign({
            className: "volume-level-indicator",
            events: [{
                type: "change",
                callback: "handleVolumeIndicatorChange"
            }],
            handleVolumeIndicatorChange: function(b) {
                this._unmute();
                var a = this._getVolume(b);
                this._setVolume(a)
            },
            ignoreVolumechange: function(a) {
                this.options.model.set({
                    ignoreVolumechange: true
                });
                this._stopListeningForVolumechange();
                this.forceCursorPointer()
            },
            setVolumeOnMove: function() {
                this._setVolume(this._getVolume())
            },
            _bindResumeVolumechange: function() {
                return this._resumeVolumechange.bind(this)
            },
            _bindSetupElement: function() {
                return this._setupElement.bind(this)
            },
            _bindHandleVolumeIndicatorChange: function() {
                return this.handleVolumeIndicatorChange.bind(this)
            },
            _getVolume: function(a) {
                return (a && a.value) ? a.value : this.polyfilledEl.getValue()
            },
            _getSliderInstance: function() {
                var a = this.options.player.getVolume();
                if (this.options.player.getMuted() === true) {
                    a = 0
                }
                return new n.Slider(this.el, {
                    template: '<div class="ac-slider-runnable-track">\n\t<div class="ac-slider-thumb">\n\t\t<div class="ac-slider-thumb-background"></div>\n\t</div>\n\t<div class="ac-slider-inner-track">\n\t\t<div class="ac-slider-scrubbed"></div>\n\t</div>\n</div>\n<input class="ac-slider-input-type-range" type="range" value="0" step="1" min="0" max="1"  />',
                    min: 0,
                    max: 1,
                    step: +this.el.getAttribute("step"),
                    value: a
                })
            },
            _initialize: function() {
                p._initialize.call(this);
                this.handleVolumeIndicatorChange = this._bindHandleVolumeIndicatorChange();
                this._resumeVolumechange = this._bindResumeVolumechange();
                this._setupElement = this._bindSetupElement();
                this.getModelAttribute("volume").then(this._setupElement)
            },
            _listenForVolumechange: function(a) {
                this.options.model.on("change:volume", this._updateVolumeIndicator, this);
                this.polyfilledEl.off("release", this._resumeVolumechange);
                this.polyfilledEl.off("change", this.handleVolumeIndicatorChange);
                this.polyfilledEl.on("grab", this.ignoreVolumechange, this)
            },
            _polyfillRangeInput: function() {
                this.polyfilledEl = this._getSliderInstance();
                this.scrubbed = x.querySelector(".ac-slider-scrubbed", this.el);
                this.thumb = x.querySelector(".ac-slider-thumb", this.el);
                this.polyfilledEl.on("change", function() {
                    this.scrubbed.style.marginLeft = parseInt(this.thumb.style.left, 10) + (((this.thumb.offsetWidth / 2) / this.el.offsetWidth) * 100) + "%"
                }, this);
                this.polyfilledEl.trigger("change", this.polyfilledEl.getValue())
            },
            _resumeVolumechange: function(a) {
                this.options.model.set({
                    ignoreVolumechange: false
                });
                this._listenForVolumechange();
                this._setVolume(this._getVolume());
                this.disableForcedCursorPointer()
            },
            _setVolume: function(a) {
                this._unmute();
                this.options.player.setVolume(a)
            },
            _setupElement: function(a) {
                this.el.setAttribute("value", a);
                this._polyfillRangeInput();
                this._listenForVolumechange()
            },
            _stopListeningForVolumechange: function() {
                this.options.model.off("change:volume", this._updateVolumeIndicator, this);
                this.polyfilledEl.on("release", this._resumeVolumechange, this);
                this.polyfilledEl.on("change", this.handleVolumeIndicatorChange, this);
                this.polyfilledEl.off("grab", this.ignoreVolumechange)
            },
            _toggleVolumeLevelIndicator: function(a) {
                r.toggle(this.el, "is-visible")
            },
            _updateVolumeIndicator: function(b) {
                var a = (b && b.value !== null) ? b.value : this.options.player.getVolume();
                this.polyfilledEl.setValue(a)
            },
            _unmute: function() {
                if (this.options.player.getMuted()) {
                    this.options.player.setMuted(false)
                }
            }
        }, w, v));
        u.exports = m
    }, {
        "../mixins/cursor-pointer": 1063,
        "../mixins/get-model-attribute": 1064,
        "./element": 1047,
        "ac-classlist": 17,
        "ac-dom-events": 67,
        "ac-dom-traversal": 897,
        "ac-slider": 1031
    }],
    1063: [function(m, l, i) {
        var h = m("ac-classlist");
        var k = m("ac-dom-events");
        var j = "cursor-pointer";
        l.exports = {
            disableForcedCursorPointer: function() {
                h.remove(document.body, j);
                this.onSelectStartResumeDefault()
            },
            forceCursorPointer: function() {
                h.add(document.body, j);
                this.onSelectStartPreventDefault()
            },
            onSelectStartResumeDefault: function() {
                k.removeEventListener(document, "selectstart", this.preventDefault)
            },
            onSelectStartPreventDefault: function() {
                k.addEventListener(document, "selectstart", this.preventDefault)
            },
            preventDefault: function(a) {
                k.preventDefault(a)
            }
        }
    }, {
        "ac-classlist": 17,
        "ac-dom-events": 67
    }],
    1064: [function(d, g, f) {
        g.exports = {
            getModelAttribute: function(a) {
                return new Promise(function(b, c) {
                    if (this.options.model.has(a)) {
                        b(this.options.model.get(a))
                    } else {
                        this.options.model.once("change:" + a, function(i) {
                            b(i.value)
                        }, this)
                    }
                }.bind(this))
            }
        }
    }, {}],
    1065: [function(o, n, j) {
        var i = o("ac-mvc-model").Model;
        var k = o("ac-video-localization").localization;
        var l = function(a) {
            if (!(this instanceof l)) {
                return new l(a)
            }
            i.apply(this, arguments);
            this.initialize()
        };
        l.prototype = Object.create(i.prototype);
        var m = l.prototype;
        Object.assign(m, {
            defaultAttributes: {
                backthirtyseconds: "Back 30 Seconds",
                playpause: "Play/Pause",
                play: "Play",
                pause: "Pause",
                togglemutevolume: "Toggle Mute Volume",
                mutevolume: "Mute Volume",
                minvolume: "Min Volume",
                adjustvolume: "Adjust Volume",
                fastreverse: "Fast Reverse",
                fastforward: "Fast Forward",
                fullvolume: "Full Volume",
                fullscreen: "Full Screen",
                captionscontrol: "Closed Captions",
                captionsturnedon: "Closed Captions On",
                captionsturnedoff: "Closed Captions Off",
                subtitlescontrol: "Subtitles",
                subtitlesturnedon: "Subtitles On",
                subtitlesturnedoff: "Subtitles Off",
                sizescontrol: "Video Size",
                downloadcontrol: "Download Video",
                small: "Small",
                medium: "Medium",
                large: "Large",
                hd: "HD",
                ipod: "iPod/iPhone",
                mb: "MB",
                gb: "GB",
                tb: "TB",
                downloadquicktimetitle: "Get QuickTime.",
                downloadquicktimetext: "Download QuickTime to view this video. QuickTime is free for Mac + PC.",
                downloadquicktimebutton: "Download",
                downloadquicktimeurl: "http://www.apple.com/quicktime/download/",
                elapsed: "elapsed",
                remaining: "remaining"
            },
            getLocalizationPromise: function() {
                return k.create()
            },
            initialize: function() {
                this.localize = this._bindLocalize();
                this.getLocalizationPromise().then(this.localize)
            },
            localize: function(a) {
                this.set(a.attributes);
                this.trigger("change:localization")
            },
            _bindLocalize: function() {
                return this.localize.bind(this)
            }
        });
        n.exports = l
    }, {
        "ac-mvc-model": 945,
        "ac-video-localization": 1041
    }],
    1066: [function(k, j, h) {
        var g = k("ac-string");
        var i = {
            addLeadingZero: function(a, b) {
                b = b || 2;
                if (a < 10 || b > 2) {
                    a = String(a);
                    while (a.length < b) {
                        a = "0" + a
                    }
                }
                return a
            },
            formatTime: function(a, d) {
                if (isNaN(a)) {
                    return "00:00"
                }
                a = this.splitTime(Math.floor(a), function(f) {
                    return this.addLeadingZero(f, d)
                }.bind(this));
                var c = "{PN}{minutes}:{seconds}";
                var b = g.supplant(c, {
                    PN: a.negativeModifier,
                    minutes: a.minutes,
                    seconds: a.seconds
                });
                return b
            },
            splitTime: function(a, d) {
                d = d || function(f) {
                    return f
                };
                var b = {
                    negativeModifier: "",
                    minutes: 0,
                    seconds: 0
                };
                if (isNaN(a)) {
                    return b
                }
                b.negativeModifier = (a < 0) ? "-" : "";
                a = Math.abs(a);
                b.minutes = Math.floor(a / 60);
                b.seconds = (a % 60);
                for (var c in b) {
                    if (typeof b[c] !== "number") {
                        continue
                    }
                    b[c] = d(b[c])
                }
                return b
            }
        };
        j.exports = i
    }, {
        "ac-string": 1034
    }],
    1067: [function(r, u, o) {
        var x = {
            "back-30-seconds-button": r("./elements/back-30-seconds-button.js"),
            "elapsed-time-indicator": r("./elements/elapsed-time-indicator.js"),
            element: r("./elements/element.js"),
            "full-screen-button": r("./elements/full-screen-button.js"),
            "max-volume-button": r("./elements/max-volume-button.js"),
            "min-volume-button": r("./elements/min-volume-button.js"),
            "mute-button": r("./elements/mute-button.js"),
            "mute-toggle-button": r("./elements/mute-toggle-button.js"),
            "pause-button": r("./elements/pause-button.js"),
            "play-button": r("./elements/play-button.js"),
            "play-pause-button": r("./elements/play-pause-button.js"),
            "progress-indicator": r("./elements/progress-indicator.js"),
            "remaining-time-indicator": r("./elements/remaining-time-indicator.js"),
            "text-tracks-off-button": r("./elements/text-tracks-off-button.js"),
            "text-tracks-on-button": r("./elements/text-tracks-on-button.js"),
            "text-tracks-toggle-button": r("./elements/text-tracks-toggle-button.js"),
            "text-tracks": r("./elements/text-tracks.js"),
            "volume-level-indicator": r("./elements/volume-level-indicator.js")
        };
        var w = r("ac-dom-traversal");
        var q = r("ac-string");
        var p = r("ac-classlist");
        var m = r("ac-mvc-view").View;
        var t = r("./time");
        var v = function(a) {
            if (!(this instanceof v)) {
                return new v(a)
            }
            m.apply(this, arguments);
            this.elements = []
        };
        v.prototype = Object.create(m.prototype);
        var n = v.prototype;
        Object.assign(n, {
            className: "ac-video-controls",
            initialize: function() {
                this._addInactiveClasses();
                if (this.options.player) {
                    this._onPlayerReady = this._bindOnPlayerReady();
                    this.playerIsReady(this.options.player).then(this._onPlayerReady)
                }
                this.options.model.once("change:localization", this.render, this);
                this.options.model.on("change:timeupdate", this._onModelTimeUpdate, this)
            },
            playerIsReady: function(b) {
                var a = b.getReadyState();
                var c = b.getPreload();
                return new Promise(function(d, f) {
                    if (a === 4) {
                        d()
                    } else {
                        if (c === "metadata") {
                            if (a === 3) {
                                d()
                            } else {
                                b.on("loadedmetadata", d)
                            }
                        } else {
                            b.on("canplay", d)
                        }
                    }
                })
            },
            render: function() {
                this.el.innerHTML = this._getParsedTemplate(this.model.attributes);
                p.add(this.el, this.className);
                p.add(this.el, this._getSkin());
                if (this._getSkin() === this._defaultSkin) {
                    this.el.setAttribute("data-hires", "false")
                }
                this._onRender().resolve()
            },
            _addInactiveClasses: function() {
                p.add(this.el, "inactive")
            },
            _bindSetupElements: function() {
                return this._setupElements.bind(this)
            },
            _bindOnPlayerReady: function() {
                return this._onPlayerReady.bind(this)
            },
            _currentTimeIsWholeNumber: function(a) {
                a = Math.floor(a);
                if (a === 0) {
                    return true
                }
                if (a !== this._previousCurrentTime) {
                    this._previousCurrentTime = a;
                    return true
                }
            },
            _defaultTemplate: '<div class="left row-1">\n\t<input type="button" class="{elementClassPrefix}-min-volume-button {elementClassPrefix}-button" value="{minvolume}" aria-label="{minvolume}" role="button" tabindex="0">\n\t<div class="{elementClassPrefix}-volume-level-indicator" max="1" step="0.09090909090909091"></div>\n\t<input type="button" class="{elementClassPrefix}-max-volume-button {elementClassPrefix}-button" value="{fullvolume}" aria-label="{fullvolume}" role="button" tabindex="0">\n</div>\n\n<div class="center row-1">\n\t<input type="button" class="{elementClassPrefix}-play-pause-button {elementClassPrefix}-button" value="{playpause}" aria-label="{playpause}" role="button" tabindex="0">\n</div>\n\n<div class="right row-1">\n\t<input type="button" class="{elementClassPrefix}-text-tracks-toggle-button {elementClassPrefix}-button no-text-tracks" value="{textTrackscontrol}" aria-label="{textTrackscontrol}" role="button" tabindex="0">\n\t<input type="button" class="{elementClassPrefix}-full-screen-button {elementClassPrefix}-button fullscreen-unsupported" value="{fullscreen}" aria-label="{fullscreen}" role="button" tabindex="0">\n</div>\n\n<div class="left row-2">\n\t<div class="{elementClassPrefix}-elapsed-time-indicator">\n\t\t<span class="label">{elapsed}</span>\n\t\t<span class="{elementClassPrefix}-elapsed-time" aria-label="{elapsed}" tabindex="0" role="timer" aria-value="00:00">00:00</span>\n\t</div>\n</div>\n\n<div class="center row-2">\n\t<div class="{elementClassPrefix}-buffered-indicator"></div>\n\t<div class="{elementClassPrefix}-progress-indicator" aria-label="progress-indicator" role="progressbar" precision="float" min="0" max="{max}" step="auto" value="0" tabindex="0" aria-valuemax="{max}" aria-valuemin="{min}" aria-valuenow="{value}"></div>\n</div>\n\n<div class="right row-2">\n\t<div class="{elementClassPrefix}-remaining-time-indicator">\n\t<span class="label">{remaining}</span>\n\t<span class="{elementClassPrefix}-remaining-time" aria-label="{remaining}" tabindex="0" role="timer" aria-value="-00:00">-00:00</span>\n</div>\n</div>\n\n<div class="{elementClassPrefix}-inactive-container"></div>',
            _defaultSkin: "control-bar-skin-default",
            _getPromise: function() {
                var c;
                var a;
                var b;
                b = new Promise(function(d, f) {
                    c = d;
                    a = f
                });
                b.resolve = c;
                b.reject = a;
                return b
            },
            _getSkin: function() {
                return this.options.skin || this._defaultSkin
            },
            _getCurrentTime: function(a) {
                return (a && a.value) ? a.value : this.options.player.getCurrentTime()
            },
            _getParsedTemplate: function(b) {
                var a = this.options.template || this._defaultTemplate;
                return q.supplant(a, b)
            },
            _listenToModelVolumechange: function() {
                this.options.player.off("volumechange", this._onVolumeChange);
                this.options.model.on("change:volume", this._onVolumeChange, this)
            },
            _listenToPlayerForVolumechange: function() {
                this.options.player.on("volumechange", this._onVolumeChange, this);
                this.options.model.off("change:volume", this._onVolumeChange);
                this.options.player.setVolume(this.options.model.get("volume"))
            },
            _onRender: function() {
                if (!this._onRenderPromise) {
                    this._onRenderPromise = this._getPromise()
                }
                return this._onRenderPromise
            },
            _onModelTimeUpdate: function(a) {
                if (this._currentTimeIsWholeNumber(a.value)) {
                    this._setModelRemainingAndElapsedTime(a.value)
                }
            },
            _onPlayerTimeUpdate: function() {
                if (!this.options.model.get("ignoreTimeupdate")) {
                    var a = this.options.player.getCurrentTime();
                    this.options.model.set({
                        timeupdate: a
                    })
                }
            },
            _onPlayerReady: function() {
                this._setupElements = this._bindSetupElements();
                this._onRender().then(this._setupElements);
                this.options.player.on("durationchange", this._onPlayerDurationChange, this);
                this._onVolumeChange();
                this._onTimeupdate();
                this._removeInactiveClasses();
                this._onPlayerDurationChange();
                this.options.player.on("timeupdate", this._onPlayerTimeUpdate, this);
                this._onVolumeChangeEvents()
            },
            _onVolumeChangeEvents: function() {
                this.options.model.on("change:ignoreVolumechange", this._onModelIgnoreVolumechange, this);
                this.options.player.on("volumechange loadedmetadata", this._onVolumeChange, this)
            },
            _onVolumeChange: function(b) {
                b = b || {};
                var a = b.value || this.options.player.getVolume();
                this.options.model.set({
                    volume: a
                })
            },
            _onTimeupdate: function(b) {
                var a = this._getCurrentTime(b);
                if (this._currentTimeIsWholeNumber(a)) {
                    this._setModelRemainingAndElapsedTime(a)
                }
            },
            _onModelIgnoreVolumechange: function(a) {
                if (a.value) {
                    this._listenToModelVolumechange()
                } else {
                    this._listenToPlayerForVolumechange()
                }
            },
            _onPlayerDurationChange: function() {
                this.options.model.set({
                    duration: this.options.player.getDuration()
                });
                this._onTimeupdate()
            },
            _removeInactiveClasses: function() {
                p.remove(this.el, "inactive")
            },
            _setupElements: function() {
                var a;
                for (var b in x) {
                    try {
                        if (b.match(/^element$|^time$|^text-tracks$/)) {
                            continue
                        }
                        a = w.querySelector("." + this.options.elementClassPrefix + "-" + x[b].className, this.el);
                        if (a) {
                            a = x[b].create(a, this.options);
                            this.elements.push(a);
                            if (a.events) {
                                this._setupElementEvents(a)
                            }
                        }
                    } catch (c) {
                        console.log("ERROR: ", b, c)
                    }
                }
            },
            _setModelRemainingAndElapsedTime: function(c) {
                var b = this.options.player.getDuration();
                var d = t.formatTime(c - Math.floor(b));
                var a = t.formatTime(c);
                this.options.model.set({
                    remainingTime: d,
                    elapsedTime: a
                })
            },
            _setupElementEvents: function(d) {
                for (var f = 0, a = d.events.length, g, b, c; f < a; f++) {
                    g = d.events[f];
                    b = d[g.callback];
                    c = g.delegate || "." + this.options.elementClassPrefix + "-" + d.className;
                    this.on(g.type, c, b, d)
                }
            }
        });
        u.exports = v
    }, {
        "./elements/back-30-seconds-button.js": 1045,
        "./elements/elapsed-time-indicator.js": 1046,
        "./elements/element.js": 1047,
        "./elements/full-screen-button.js": 1048,
        "./elements/max-volume-button.js": 1049,
        "./elements/min-volume-button.js": 1050,
        "./elements/mute-button.js": 1051,
        "./elements/mute-toggle-button.js": 1052,
        "./elements/pause-button.js": 1053,
        "./elements/play-button.js": 1054,
        "./elements/play-pause-button.js": 1055,
        "./elements/progress-indicator.js": 1056,
        "./elements/remaining-time-indicator.js": 1057,
        "./elements/text-tracks-off-button.js": 1058,
        "./elements/text-tracks-on-button.js": 1059,
        "./elements/text-tracks-toggle-button.js": 1060,
        "./elements/text-tracks.js": 1061,
        "./elements/volume-level-indicator.js": 1062,
        "./time": 1066,
        "ac-classlist": 17,
        "ac-dom-traversal": 897,
        "ac-mvc-view": 976,
        "ac-string": 1034
    }],
    1068: [function(d, g, f) {
        g.exports = {
            path: d("./ac-path/path")
        }
    }, {
        "./ac-path/path": 1069
    }],
    1069: [function(f, i, g) {
        function h(a) {
            return h.parse(a)
        }
        h.basename = function(c, d) {
            h._assertStr(c);
            var a;
            var b = c.match(/[^/]*$/)[0];
            if (d) {
                a = b.match(new RegExp("(.*)" + d + "$"));
                if (a) {
                    b = a[1]
                }
            }
            return b
        };
        h.dirname = function(a) {
            h._assertStr(a);
            var b = a.match(/^(.*)\b\/|.*/);
            return b[1] || a
        };
        h.extname = function(b) {
            h._assertStr(b);
            var a = b.match(/\.[^.]*$/);
            return a ? a[0] : ""
        };
        h.filename = function(a) {
            h._assertStr(a);
            return h.basename(a, h.extname(a))
        };
        h.format = function(b, a) {
            h._assertObj(b);
            var c = (b.dirname) ? b.dirname + "/" : "";
            if (b.basename) {
                c += b.basename
            } else {
                if (b.filename) {
                    c += b.filename;
                    if (b.extname) {
                        c += b.extname
                    }
                }
            }
            if (a) {
                if (typeof a === "string") {
                    c += "?" + a
                } else {
                    if (Object.prototype.toString.call(a) === Object.prototype.toString.call([])) {
                        c += "?" + a.join("&")
                    }
                }
            }
            return c
        };
        h.isAbsolute = function(a) {
            h._assertStr(a);
            return (!!a.match(/(^http(s?))/))
        };
        h.isRootRelative = function(a) {
            h._assertStr(a);
            return !!a.match(/^\/(?!\/)/)
        };
        h.parse = function(a) {
            h._assertStr(a);
            return {
                dirname: h.dirname(a),
                basename: h.basename(a),
                filename: h.filename(a),
                extname: h.extname(a)
            }
        };
        h._assertStr = function(a) {
            h._assertType(a, "string")
        };
        h._assertObj = function(a) {
            h._assertType(a, "object")
        };
        h._assertType = function(a, c) {
            var b = typeof a;
            if (b === "undefined" || b !== c) {
                throw new TypeError("path param must be of type " + c)
            }
        };
        i.exports = h
    }, {}],
    1070: [function(d, g, f) {
        g.exports = {
            cname: d("./ac-cname/cname")
        }
    }, {
        "./ac-cname/cname": 1071
    }],
    1071: [function(k, j, h) {
        var i = k("ac-path").path;

        function g(a) {
            return g.addPrefix(a)
        }
        g._prefix = (function() {
            var a = "http://images.apple.com/global/elements/blank.gif";
            return a.replace(/global\/.*/, "")
        }());
        g.addPrefix = function(a) {
            if (i.isAbsolute(a)) {
                return a
            }
            g._assertRootRelative(a);
            a = g._prefix + a.replace(/^\//, "");
            a = a.replace(/(^.+)(\/105\/)/, "$1/");
            return a
        };
        g.formatUrl = function(c, m, a, b) {
            var d = i.format({
                dirname: c,
                filename: m,
                extname: a
            }, b);
            if (i.isAbsolute(d)) {
                return d
            }
            g._assertRootRelative(c);
            var f = g.addPrefix(d);
            return f
        };
        g._assertRootRelative = function(a) {
            if (!i.isRootRelative(a)) {
                throw new URIError("Only root-relative paths are currently supported")
            }
        };
        j.exports = g
    }, {
        "ac-path": 1068
    }],
    1072: [function(d, g, f) {
        arguments[4][204][0].apply(f, arguments)
    }, {
        "./helpers/globals": 1080,
        "ac-function/once": 1089,
        dup: 204
    }],
    1073: [function(d, g, f) {
        arguments[4][205][0].apply(f, arguments)
    }, {
        "./touchAvailable": 1104,
        "ac-browser": 856,
        "ac-function/once": 1089,
        dup: 205
    }],
    1074: [function(d, g, f) {
        arguments[4][206][0].apply(f, arguments)
    }, {
        "./helpers/globals": 1080,
        "ac-function/once": 1089,
        dup: 206
    }],
    1075: [function(d, g, f) {
        arguments[4][207][0].apply(f, arguments)
    }, {
        "ac-function/once": 1089,
        "ac-prefixer/getStyleValue": 1092,
        dup: 207
    }],
    1076: [function(d, g, f) {
        arguments[4][208][0].apply(f, arguments)
    }, {
        "ac-function/memoize": 1088,
        "ac-prefixer/getStyleProperty": 1091,
        "ac-prefixer/getStyleValue": 1092,
        dup: 208
    }],
    1077: [function(d, g, f) {
        arguments[4][209][0].apply(f, arguments)
    }, {
        "ac-function/once": 1089,
        "ac-prefixer/getStyleValue": 1092,
        dup: 209
    }],
    1078: [function(d, g, f) {
        arguments[4][210][0].apply(f, arguments)
    }, {
        "./helpers/globals": 1080,
        "ac-function/memoize": 1088,
        dup: 210
    }],
    1079: [function(d, g, f) {
        arguments[4][211][0].apply(f, arguments)
    }, {
        "ac-function/memoize": 1088,
        "ac-prefixer/getEventType": 1090,
        dup: 211
    }],
    1080: [function(d, g, f) {
        arguments[4][212][0].apply(f, arguments)
    }, {
        dup: 212
    }],
    1081: [function(d, g, f) {
        arguments[4][213][0].apply(f, arguments)
    }, {
        "./canvasAvailable": 1072,
        "./continuousScrollEventsAvailable": 1073,
        "./cookiesAvailable": 1074,
        "./cssLinearGradientAvailable": 1075,
        "./cssPropertyAvailable": 1076,
        "./cssViewportUnitsAvailable": 1077,
        "./elementAttributeAvailable": 1078,
        "./eventTypeAvailable": 1079,
        "./isDesktop": 1082,
        "./isHandheld": 1083,
        "./isRetina": 1084,
        "./isTablet": 1085,
        "./localStorageAvailable": 1086,
        "./mediaElementsAvailable": 1087,
        "./sessionStorageAvailable": 1101,
        "./svgAvailable": 1102,
        "./threeDTransformsAvailable": 1103,
        "./touchAvailable": 1104,
        "./webGLAvailable": 1105,
        dup: 213
    }],
    1082: [function(d, g, f) {
        arguments[4][214][0].apply(f, arguments)
    }, {
        "./helpers/globals": 1080,
        "./touchAvailable": 1104,
        "ac-function/once": 1089,
        dup: 214
    }],
    1083: [function(d, g, f) {
        arguments[4][215][0].apply(f, arguments)
    }, {
        "./isDesktop": 1082,
        "./isTablet": 1085,
        "ac-function/once": 1089,
        dup: 215
    }],
    1084: [function(d, g, f) {
        arguments[4][216][0].apply(f, arguments)
    }, {
        "./helpers/globals": 1080,
        dup: 216
    }],
    1085: [function(d, g, f) {
        arguments[4][217][0].apply(f, arguments)
    }, {
        "./helpers/globals": 1080,
        "./isDesktop": 1082,
        "ac-function/once": 1089,
        dup: 217
    }],
    1086: [function(d, g, f) {
        arguments[4][218][0].apply(f, arguments)
    }, {
        "./helpers/globals": 1080,
        "ac-function/once": 1089,
        dup: 218
    }],
    1087: [function(d, g, f) {
        arguments[4][219][0].apply(f, arguments)
    }, {
        "./helpers/globals": 1080,
        "ac-function/once": 1089,
        dup: 219
    }],
    1088: [function(d, g, f) {
        arguments[4][224][0].apply(f, arguments)
    }, {
        dup: 224
    }],
    1089: [function(d, g, f) {
        arguments[4][225][0].apply(f, arguments)
    }, {
        dup: 225
    }],
    1090: [function(d, g, f) {
        arguments[4][68][0].apply(f, arguments)
    }, {
        "./shared/camelCasedEventTypes": 1093,
        "./shared/prefixHelper": 1095,
        "./utils/eventTypeAvailable": 1098,
        dup: 68
    }],
    1091: [function(d, g, f) {
        arguments[4][123][0].apply(f, arguments)
    }, {
        "./shared/getStyleTestElement": 1094,
        "./shared/prefixHelper": 1095,
        "./shared/stylePropertyCache": 1096,
        "./utils/toCSS": 1099,
        "./utils/toDOM": 1100,
        dup: 123
    }],
    1092: [function(d, g, f) {
        arguments[4][124][0].apply(f, arguments)
    }, {
        "./getStyleProperty": 1091,
        "./shared/prefixHelper": 1095,
        "./shared/stylePropertyCache": 1096,
        "./shared/styleValueAvailable": 1097,
        dup: 124
    }],
    1093: [function(d, g, f) {
        arguments[4][69][0].apply(f, arguments)
    }, {
        dup: 69
    }],
    1094: [function(d, g, f) {
        arguments[4][125][0].apply(f, arguments)
    }, {
        dup: 125
    }],
    1095: [function(d, g, f) {
        arguments[4][70][0].apply(f, arguments)
    }, {
        dup: 70
    }],
    1096: [function(d, g, f) {
        arguments[4][127][0].apply(f, arguments)
    }, {
        dup: 127
    }],
    1097: [function(d, g, f) {
        arguments[4][128][0].apply(f, arguments)
    }, {
        "./getStyleTestElement": 1094,
        "./stylePropertyCache": 1096,
        dup: 128
    }],
    1098: [function(d, g, f) {
        arguments[4][71][0].apply(f, arguments)
    }, {
        dup: 71
    }],
    1099: [function(d, g, f) {
        arguments[4][130][0].apply(f, arguments)
    }, {
        dup: 130
    }],
    1100: [function(d, g, f) {
        arguments[4][131][0].apply(f, arguments)
    }, {
        dup: 131
    }],
    1101: [function(d, g, f) {
        arguments[4][237][0].apply(f, arguments)
    }, {
        "./helpers/globals": 1080,
        "ac-function/once": 1089,
        dup: 237
    }],
    1102: [function(d, g, f) {
        arguments[4][238][0].apply(f, arguments)
    }, {
        "./helpers/globals": 1080,
        "ac-function/once": 1089,
        dup: 238
    }],
    1103: [function(d, g, f) {
        arguments[4][239][0].apply(f, arguments)
    }, {
        "ac-function/once": 1089,
        "ac-prefixer/getStyleValue": 1092,
        dup: 239
    }],
    1104: [function(d, g, f) {
        arguments[4][240][0].apply(f, arguments)
    }, {
        "./helpers/globals": 1080,
        "ac-function/once": 1089,
        dup: 240
    }],
    1105: [function(d, g, f) {
        arguments[4][241][0].apply(f, arguments)
    }, {
        "./helpers/globals": 1080,
        "ac-function/once": 1089,
        dup: 241
    }],
    1106: [function(d, g, f) {
        arguments[4][708][0].apply(f, arguments)
    }, {
        "./extend": 1109,
        "ac-polyfills/Array/isArray": 719,
        dup: 708
    }],
    1107: [function(d, g, f) {
        arguments[4][372][0].apply(f, arguments)
    }, {
        dup: 372
    }],
    1108: [function(d, g, f) {
        arguments[4][373][0].apply(f, arguments)
    }, {
        "./extend": 1109,
        dup: 373
    }],
    1109: [function(d, g, f) {
        arguments[4][711][0].apply(f, arguments)
    }, {
        "ac-polyfills/Array/prototype.forEach": 721,
        dup: 711
    }],
    1110: [function(d, g, f) {
        arguments[4][375][0].apply(f, arguments)
    }, {
        dup: 375
    }],
    1111: [function(d, g, f) {
        arguments[4][713][0].apply(f, arguments)
    }, {
        "./clone": 1106,
        "./create": 1107,
        "./defaults": 1108,
        "./extend": 1109,
        "./getPrototypeOf": 1110,
        "./isDate": 1112,
        "./isEmpty": 1113,
        "./isRegExp": 1114,
        "./toQueryParameters": 1116,
        dup: 713
    }],
    1112: [function(d, g, f) {
        arguments[4][376][0].apply(f, arguments)
    }, {
        dup: 376
    }],
    1113: [function(d, g, f) {
        arguments[4][377][0].apply(f, arguments)
    }, {
        dup: 377
    }],
    1114: [function(d, g, f) {
        arguments[4][378][0].apply(f, arguments)
    }, {
        dup: 378
    }],
    1115: [function(d, g, f) {
        arguments[4][369][0].apply(f, arguments)
    }, {
        dup: 369
    }],
    1116: [function(d, g, f) {
        arguments[4][379][0].apply(f, arguments)
    }, {
        dup: 379,
        qs: 1115
    }],
    1117: [function(i, h, f) {
        var g = i("./ac-video-posterframe/factory");
        h.exports = {
            create: g.create,
            AttributePoster: i("./ac-video-posterframe/PosterAttribute"),
            ImageTagPoster: i("./ac-video-posterframe/PosterImageTag"),
            defaultPosterPath: i("./ac-video-posterframe/defaultPosterPath")
        }
    }, {
        "./ac-video-posterframe/PosterAttribute": 1118,
        "./ac-video-posterframe/PosterImageTag": 1119,
        "./ac-video-posterframe/defaultPosterPath": 1120,
        "./ac-video-posterframe/factory": 1121
    }],
    1118: [function(p, o, j) {
        var m = p("ac-mvc-view").View;
        var q = p("ac-object");
        var l = "ac-video-poster-hide";

        function k() {
            m.apply(this, arguments)
        }
        var n = k.prototype = q.create(m.prototype);
        n._renderPoster = function() {
            if (this.model.hasPoster()) {
                this.el.setAttribute("poster", this.model.getPoster())
            } else {
                this.el.removeAttribute("poster")
            }
        };
        n.render = function() {
            this._renderPoster();
            this.model.on("posterchange", this._renderPoster, this)
        };
        o.exports = k
    }, {
        "ac-mvc-view": 976,
        "ac-object": 1111
    }],
    1119: [function(q, o, k) {
        var m = q("ac-mvc-view").View;
        var j = q("ac-object");
        var l = "ac-video-poster-hide";

        function p() {
            m.apply(this, arguments);
            this._img = null
        }
        var n = p.prototype = j.create(m.prototype);
        n.tagName = "div";
        n.className = ["ac-video-poster"];
        n._renderSrc = function() {
            if (this.model.hasPoster()) {
                if (!this._img) {
                    this._img = document.createElement("img");
                    this.el.appendChild(this._img)
                }
                this._img.setAttribute("src", this.model.getPoster())
            } else {
                if (this._img && this._img.parentNode === this.el) {
                    this.el.removeChild(this._img);
                    this._img = null
                }
            }
        };
        n._hide = function() {
            this.addClassName(l)
        };
        n._show = function() {
            this.removeClassName(l)
        };
        n._onPlay = function() {
            var a = this.model.getCurrentTime();
            if (a === 0) {
                this._show();
                this.model.once("timeupdate", this._hide, this)
            }
        };
        n._onReadyStateChange = function(a) {
            if (a.readyState === 0) {
                this._show()
            }
        };
        n.render = function() {
            this._renderSrc();
            this.model.on("readystatechange", this._onReadyStateChange, this);
            this.model.on("posterchange", this._renderSrc, this);
            this.model.on("play", this._onPlay, this);
            this.model.on("ended", this._show, this)
        };
        o.exports = p
    }, {
        "ac-mvc-view": 976,
        "ac-object": 1111
    }],
    1120: [function(k, j, h) {
        var g = k("ac-cname").cname;
        j.exports = function i() {
            return g.formatUrl("/ac/ac-video-posterframe/1.0/images", "poster848x480", ".jpg")
        }
    }, {
        "ac-cname": 1070
    }],
    1121: [function(n, l, p) {
        var m = n("./PosterAttribute");
        var q = n("./PosterImageTag");
        var j = n("ac-feature");

        function k() {
            return j.isHandheld()
        }
        l.exports = {
            create: function o(b) {
                var a = null;
                if (k()) {
                    a = new m({
                        model: b,
                        element: b.getMediaElement()
                    })
                } else {
                    a = new q({
                        model: b
                    })
                }
                return a
            }
        }
    }, {
        "./PosterAttribute": 1118,
        "./PosterImageTag": 1119,
        "ac-feature": 1081
    }],
    1122: [function(k, j, m) {
        var l = k("./ac-video/player/Player");
        l.create = k("./ac-video/player/factory/create");
        l.createFromElement = k("./ac-video/player/factory/createFromElement");
        l.createFromAnchorTag = k("./ac-video/player/factory/createFromAnchorTag");
        var i = k("./ac-video/models/Video");
        i.createFromVideoTag = k("./ac-video/models/video/factory/createFromVideoTag");
        var h = k("ac-video-controls");
        j.exports = {
            Player: l,
            Video: i
        }
    }, {
        "./ac-video/models/Video": 1143,
        "./ac-video/models/video/factory/createFromVideoTag": 1145,
        "./ac-video/player/Player": 1146,
        "./ac-video/player/factory/create": 1147,
        "./ac-video/player/factory/createFromAnchorTag": 1148,
        "./ac-video/player/factory/createFromElement": 1149,
        "ac-video-controls": 1044
    }],
    1123: [function(g, k, h) {
        function i(a) {
            this.el = a
        }
        var j = i.prototype;
        j.setEl = function(a) {
            this.el = a
        };
        j.play = function() {
            this.el.play()
        };
        j.pause = function() {
            this.el.pause()
        };
        j.setCurrentTime = function(a) {
            this.el.currentTime = a
        };
        j.getCurrentTime = function() {
            return this.el.currentTime
        };
        j.setPreload = function(a) {
            this.el.preload = a
        };
        j.getWidth = function() {
            return this.el.videoWidth
        };
        j.getHeight = function() {
            return this.el.videoHeight
        };
        j.setControls = function(a) {
            this.el.controls = a
        };
        j.setSrc = function(a) {
            this.el.src = a
        };
        j.getSrc = function() {
            return this.el.src
        };
        j.getControls = function() {
            return this.el.controls
        };
        j.setMuted = function(a) {
            this.el.muted = a
        };
        j.setVolume = function(a) {
            this.el.volume = a
        };
        j.getVolume = function() {
            return this.el.volume
        };
        j.getDuration = function() {
            return this.el.duration
        };
        j.setPlaybackRate = function(a) {
            this.el.playbackRate = a
        };
        j.getPlaybackRate = function() {
            return this.el.playbackRate
        };
        j.getDefaultPlaybackRate = function() {
            return this.el.defaultPlaybackRate
        };
        j.setLoop = function(a) {
            this.el.loop = a
        };
        j.getLoop = function() {
            return this.el.loop
        };
        j.getCurrentSrc = function() {
            return this.el.currentSrc
        };
        j.getPlayed = function() {
            return this.el.played
        };
        j.addTextTrack = function(b, c, a) {
            return this.el.addTextTrack(b, c, a)
        };
        j.getTextTracks = function() {
            var a = this.el.textTracks || [];
            return Array.prototype.map.call(a, function(b, c) {
                b.index = c;
                return b
            })
        };
        j.getBuffered = function() {
            return this.el.buffered
        };
        k.exports = i
    }, {}],
    1124: [function(m, l, h) {
        var i = m("ac-object");

        function j(a) {
            this.el = a;
            this._boundChangeSrc = this._changeSrc.bind(this);
            this._incomingSrc
        }
        var k = j.prototype;
        k.setEl = function(a) {
            this.el = a
        };
        k.play = function() {
            this.el.Play()
        };
        k.pause = function() {
            this.el.Stop()
        };
        k.setCurrentTime = function(a) {
            this.el.SetTime(a * this.el.GetTimeScale())
        };
        k.setPreload = function(a) {};
        k.getCurrentTime = function() {
            var a = 0;
            if (this._incomingSrc) {
                return a
            }
            try {
                a = this.el.GetTime() / this.el.GetTimeScale()
            } catch (b) {}
            return a
        };
        k.getWidth = function() {
            var c = undefined;
            try {
                var b = this.el.GetRectangle();
                var d = this.el.GetMatrix();
                var c = +b.split(",")[2];
                var f = parseFloat(d.split(",")[0]);
                c = Math.round(c / f)
            } catch (a) {}
            return c
        };
        k.getHeight = function() {
            var f = undefined;
            try {
                var b = this.el.GetRectangle();
                var c = this.el.GetMatrix();
                var f = +b.split(",")[3];
                var d = parseFloat(c.split(",")[3]);
                f = Math.round(f / d)
            } catch (a) {}
            return f
        };
        k.setMuted = function(a) {
            this.el.SetMute(a)
        };
        k.setVolume = function(a) {
            this.el.SetVolume(a * 256)
        };
        k.getVolume = function() {
            return this.el.GetVolume() / 256
        };
        k.getDuration = function() {
            var a = NaN;
            if (this._incomingSrc) {
                return NaN
            }
            try {
                a = this.el.GetDuration() / this.el.GetTimeScale()
            } catch (b) {}
            return a
        };
        k.setLoop = function(a) {
            this.el.SetIsLooping(a)
        };
        k.getLoop = function() {
            return this.el.GetIsLooping()
        };
        k.setPlaybackRate = function(a) {
            this.el.SetRate(a)
        };
        k.getPlaybackRate = function() {
            var b = 1;
            try {
                b = this.el.GetRate()
            } catch (a) {}
            return b
        };
        k._changeSrc = function() {
            try {
                this.el.SetResetPropertiesOnReload(false);
                this.el.SetURL(this._incomingSrc)
            } catch (a) {}
            this._incomingSrc = null
        };
        k.setSrc = function(a) {
            this._incomingSrc = a;
            window.requestAnimationFrame(this._boundChangeSrc)
        };
        k.getSrc = function() {
            return this.el.GetURL()
        };
        k.getCurrentSrc = function() {
            return this.el.GetURL()
        };
        k.getDefaultPlaybackRate = function() {
            return 1
        };
        k.getPlayed = function() {};
        k.getBuffered = function() {
            return [
                [0, this.element.GetMaxTimeLoaded() / this.element.GetTimeScale()]
            ]
        };
        k.showTextTrack = function(a) {
            this.el.SetTrackEnabled(a, true)
        };
        k.hideTextTrack = function(a) {
            this.el.SetTrackEnabled(a, false)
        };
        k.setControls = function(a) {
            this.el.SetControllerVisible(a)
        };
        k.getControls = function() {
            return this.el.GetControllerVisible()
        };
        k.getTextTracks = function() {
            var c = [];
            var d = this.el.GetTrackCount();
            for (var b = 1; b <= d; b++) {
                var a = this.el.GetTrackType(b);
                if (a === "Subtitle" || a === "Closed Caption") {
                    c.push({
                        kind: a,
                        label: this.el.GetTrackName(b),
                        mode: (this.el.GetTrackEnabled(b)) ? "showing" : "hidden",
                        index: b
                    })
                }
            }
            return c
        };
        l.exports = j
    }, {
        "ac-object": 979
    }],
    1125: [function(k, j, l) {
        var m = k("./HTML5VideoAPI");
        var h = k("./QuickTimeAPI");
        var i = {
            create: function(b, a) {
                if (a === "video") {
                    return new m(b)
                } else {
                    return new h(b)
                }
            }
        };
        j.exports = i
    }, {
        "./HTML5VideoAPI": 1123,
        "./QuickTimeAPI": 1124
    }],
    1126: [function(q, n, j) {
        var m = q("ac-mvc-collection").Collection;
        var o = q("./../models/MediaSource");
        var k = q("ac-object");
        var p = function() {
            m.apply(this, arguments)
        };
        var l = p.prototype = k.create(m.prototype);
        l.ModelType = o;
        n.exports = p
    }, {
        "./../models/MediaSource": 1141,
        "ac-mvc-collection": 939,
        "ac-object": 979
    }],
    1127: [function(q, p, j) {
        var o = q("ac-mvc-collection").Collection;
        var l = q("./../models/TextTrackModel");
        var k = q("ac-object");
        var m = function() {
            o.apply(this, arguments)
        };
        var n = m.prototype = k.create(o.prototype);
        n.ModelType = l;
        n.createTextTrackFromNativeTrack = function(a) {
            var b = new l(a);
            b.setNativeTextTrack(a);
            this.add(b);
            return b
        };
        n.count = function() {
            return this.models.length
        };
        n.findTextTrackModelFromNativeTrack = function(a) {
            var b = this.filter(function(c) {
                if (c.getNativeTextTrack() === a) {
                    return c
                }
                return false
            })[0];
            return b || null
        };
        n.getEnabledTextTracks = function() {
            var a = this.filter(function(b) {
                if (b.get("mode") !== "disabled") {
                    return b
                }
                return false
            });
            return new m({
                models: a
            })
        };
        n._findTextTrack = function(a) {
            var b;
            if (this.indexOf(a) > -1) {
                b = a
            } else {
                if (typeof a === "number") {
                    b = this.at(a)
                } else {
                    if (typeof a === "string") {
                        b = this.get(a)
                    } else {
                        b = this.find(a, {
                            limit: 1
                        })[0]
                    }
                }
            }
            return b
        };
        n.getVisibleTextTracks = function() {
            var a = this.find({
                mode: "showing"
            });
            return new m({
                models: a
            })
        };
        n.findTextTrack = function(a) {
            return this._findTextTrack(a)
        };
        p.exports = m
    }, {
        "./../models/TextTrackModel": 1142,
        "ac-mvc-collection": 939,
        "ac-object": 979
    }],
    1128: [function(g, k, h) {
        function i() {
            this._boundEventListeners = [];
            this._collection = []
        }
        var j = i.prototype;
        j.add = function(b) {
            b = Array.prototype.slice.call(arguments, 0);
            var d = b.length;
            var a;
            var c;
            for (c = 0; c < d; c++) {
                if (this._collection.indexOf(b[c]) < 0) {
                    a = b[c];
                    this._setup(a);
                    this._collection.push(a)
                }
            }
        };
        j.remove = function(b) {
            b = Array.prototype.slice.call(arguments, 0);
            var d = b.length;
            var c;
            var a;
            for (c = 0; c < d; c++) {
                a = this._collection.indexOf(b[c]);
                if (a > -1) {
                    this._teardown(b[c]);
                    this._collection.splice(a, 1)
                }
            }
        };
        j._setup = function(b) {
            var d = this._pauseOtherVideos.bind(this, b);
            var a = this.remove.bind(this, b);
            var c = {
                video: b,
                eventListeners: {
                    playListener: d,
                    destroyListener: a
                }
            };
            this._boundEventListeners.push(c);
            b.on("play", d);
            b.on("acv-destroy", a)
        };
        j._teardown = function(a) {
            var b = this._boundEventListeners.filter(function(d) {
                return d.video === a
            }, this);
            if (b.length) {
                b = b.pop();
                a.off("play", b.eventListeners.playListener);
                a.off("acv-destroy", b.eventListeners.destroyListener);
                var c = this._boundEventListeners.indexOf(b);
                this._boundEventListeners.splice(c, 1)
            }
        };
        j._getOtherVideos = function(a) {
            return this._collection.filter(function(b) {
                return b !== a
            }, this)
        };
        j._pauseOtherVideos = function(b) {
            var a = this._getOtherVideos(b);
            a.forEach(function(c) {
                c.pause()
            })
        };
        k.exports = new i()
    }, {}],
    1129: [function(y, z, v) {
        var x = y("ac-object");
        var q = y("ac-dom-traversal");
        var r = y("ac-browser");
        var p = y("ac-deferred").Deferred;
        var o = "v";
        var A = function(c, b) {
            var a = c.getAttribute(b);
            if (a === null) {
                return false
            } else {
                if (a === "") {
                    return false
                }
            }
            return true
        };
        var B = (function() {
            function a() {
                return Math.floor((1 + Math.random()) * 65536).toString(16).substring(1)
            }
            return function() {
                return a() + a() + "-" + a() + "-" + a() + "-" + a() + "-" + a() + a() + a()
            }
        }());

        function w() {
            return /^(iOS|Android)$/.test(r.os)
        }

        function u() {
            this._possibleTemplateKeys = ["autoplay", "buffered", "endframe", "controls", "height", "loop", "muted", "poster", "preload", "suffix", "width", "controlbar", "controlbarwidth", "controlbarskinning", "disablecaptionscontrol"];
            this._defaultTemplateValues = {
                autoplay: false,
                muted: false,
                loop: false,
                controls: false,
                preload: "metadata",
                controlbarwidth: "450",
                controlbarskinning: "ac-video-controlbar",
                disablecaptionscontrol: false
            }
        }
        var t = u.prototype;
        t.getSource = function(c) {
            var b = /[^/]*.[^\.]*$/;
            var d = null;
            var a = {};
            if (A(c, "data-src")) {
                d = c.getAttribute("data-src")
            } else {
                if (A(c, "href")) {
                    d = c.getAttribute("href")
                } else {
                    if (A(c, "src")) {
                        d = c.getAttribute("src")
                    } else {
                        var f = q.querySelector("source", c);
                        if (f && A(f, "src")) {
                            d = f.getAttribute("src")
                        }
                    }
                }
            }
            if (d) {
                a.defaultSource = d;
                a.videoSource = d.match(b)[0];
                a.directory = d.replace(a.videoSource, "");
                a.videoFileName = a.videoSource.split(".")[0]
            }
            return a
        };
        t.getConfig = function(c, d, a) {
            var b = new p();
            var f = {};
            var g = this.getSource(c);
            this.isAppleMobileDevice = (r.os === "iOS");
            f = this._getValues(c, a);
            this._videoRecommendation = d;
            f.videoTemplate = d.videoTemplate;
            b.resolve();
            return b.promise().then(function() {
                f.usesFullScreen = (f.usesFullScreen && f.videoTemplate === "elementVideo");
                f.source = g.defaultSource;
                return f
            })
        };
        t._buildFileSuffix = function(c) {
            var a = "";
            if (c.suffix) {
                a = "_" + c.suffix
            } else {
                if (c.height && c.width) {
                    var d = c.height.replace("px", "").replace("em", "").replace("rem", "");
                    var b = c.width.replace("px", "").replace("em", "").replace("rem", "");
                    a = "_" + b + "x" + d
                }
            }
            return a
        };
        t._getRecommendedCaptionsPaths = function(b, c) {
            var a = [];
            a.push(b + c + "-captions." + o + "tt");
            return a
        };
        t._generateRecommendedVideoPaths = function(c, d) {
            var a = this._buildFileSuffix(d);
            var b = [];
            this._videoRecommendation.supportedProfiles.forEach(function(f) {
                if (f.sizeRelevant) {
                    c = c + a
                }
                b.push(c + "." + f.fileExtension)
            });
            return b
        };
        t._getValues = function(c, a) {
            var b = "ac-video-" + B();
            var d = this._defaultTemplateValues;
            x.extend(d, this._getMarkupValues(c));
            if (a) {
                x.extend(d, a)
            }
            if (w()) {
                d["native"] = true;
                d.controls = "true"
            }
            d.targetId = c.id;
            d.domId = b;
            d.eventId = b + "-quicktime-event";
            d.wrapperId = b + "-wrapper";
            return d
        };
        t._getMarkupValues = function(b) {
            var a = {};
            this._possibleTemplateKeys.forEach(function(c) {
                if (A(b, c)) {
                    a[c] = b.getAttribute(c)
                } else {
                    if (A(b, "data-acv-" + c)) {
                        a[c] = b.getAttribute("data-acv-" + c)
                    }
                }
                if ((c === "autoplay" || c === "controls" || c === "muted" || c === "loop") && a[c] && a[c].length > 0) {
                    a[c] = true
                }
                if (typeof(a[c]) === "string" && /^(true|false)$/.test(a[c])) {
                    a[c] = (a[c] === "true") ? true : false
                }
            });
            return a
        };
        t.addPossibleTemplateKeys = function(a) {
            a.forEach(function(b) {
                if (!this._possibleTemplateKeys.indexOf(b)) {
                    this._possibleTemplateKeys.push(b)
                }
            }, this)
        };
        z.exports = u
    }, {
        "ac-browser": 856,
        "ac-deferred": 862,
        "ac-dom-traversal": 897,
        "ac-object": 979
    }],
    1130: [function(d, g, f) {
        g.exports = {
            LOADEDMETADATA: 1,
            LOADEDDATA: 2,
            CANPLAY: 3,
            CANPLAYTHROUGH: 4
        }
    }, {}],
    1131: [function(t, u, r) {
        var o = t("./TextTracksController");
        var n = t("./../../views/textTracks/TextTracksCollectionView");
        var m = t("./../../views/textTracks/TextTrackRender");
        var p = t("./../../models/TextTrackModel");
        var v = t("ac-object");

        function l() {
            o.apply(this, arguments);
            this.view = this.options.view || new n({
                element: this.mediaElement.el
            });
            this._textTrackRenderViews = [];
            this._addViewEvents()
        }
        var q = l.prototype = v.create(o.prototype);
        q._holdingTextTrackModels = {};
        q._addViewEvents = function() {
            this.view.on("addtrack", this._respondToAddTrackEvent, this);
            this.view.on("change", this._respondToChangeTrackEvent, this);
            this.view.on("removetrack", this._respondToRemoveTrackEvent, this)
        };
        q._respondToAddTrackEvent = function(a) {
            var b = this.mediaElement.el.textTracks;
            var i;
            var c = [];
            var g = a.data.track;
            var d = this.model.findTextTrackModelFromNativeTrack(g);
            if (!d && g && g.id && this._holdingTextTrackModels[g.id]) {
                d = this._holdingTextTrackModels[g.id];
                d.setNativeTextTrack(g);
                this.model.add(d);
                this._holdingTextTrackModels[g.id] = undefined;
                var f = this._createTextTrackRenderView(g, d);
                f.renderMode()
            }
            if (d === null) {
                this._createTextTrackFromNativeTrack(g)
            } else {
                d.set({
                    mode: g.mode
                })
            }
            if (d) {
                d.on("change:mode", function() {
                    if ("webkitClosedCaptionsVisible" in this.mediaElement.el && d.get("mode") === "showing") {
                        this.mediaElement.el.webkitClosedCaptionsVisible = true
                    }
                }, this)
            }
            if (b) {
                for (var h = 0; h < b.length; h += 1) {
                    i = this.model.findTextTrackModelFromNativeTrack(b[h]);
                    i.set({
                        mode: b[h].mode
                    });
                    c.push(i)
                }
                this.model.reset(c)
            }
            this.trigger("addtrack", a)
        };
        q._createTextTrackRenderView = function(c, a) {
            var b = this.mediaElement.el;
            var d = new m({
                element: c,
                model: a
            });
            a.on("change:mode", this._onTextTrackModeChange, this);
            d.render();
            return d
        };
        q._createTextTrackFromNativeTrack = function(a) {
            var b = this.model.createTextTrackFromNativeTrack(a);
            this._createTextTrackRenderView(a, b);
            return b
        };
        q._onTextTrackModeChange = function(a) {
            if (a.value === "showing") {
                this.trigger("texttrackshow")
            } else {
                this.trigger("texttrackhide")
            }
        };
        q._respondToChangeTrackEvent = function(a) {
            this.trigger("changetrack", a)
        };
        q._respondToRemoveTrackEvent = function(a) {
            this.trigger("removetrack", a)
        };
        q.addTextTrackFromRemoteVTT = function(a) {
            var b = new p(a);
            this._holdingTextTrackModels[b.cid] = b;
            this.view.addTextTrackTag(b)
        };
        q.addTextTrack = function(d, b, c) {
            var a = this.mediaElement.addTextTrack(d, b, c);
            return this._createTextTrackFromNativeTrack(a)
        };
        q.populateTextTracks = function() {
            var a = this.mediaElement.getTextTracks();
            if (a) {
                a.forEach(function(b) {
                    if (this.model.findTextTrackModelFromNativeTrack(b) === null) {
                        this._createTextTrackFromNativeTrack(b)
                    }
                }, this)
            }
        };
        u.exports = l
    }, {
        "./../../models/TextTrackModel": 1142,
        "./../../views/textTracks/TextTrackRender": 1160,
        "./../../views/textTracks/TextTracksCollectionView": 1162,
        "./TextTracksController": 1133,
        "ac-object": 979
    }],
    1132: [function(q, r, o) {
        var k = q("ac-event-emitter").EventEmitter;
        var m = q("./TextTracksController");
        var l = q("./../../views/textTracks/QuickTimeTextTrackDisplay");
        var t = q("ac-object");

        function p(b, a) {
            m.apply(this, arguments)
        }
        var n = p.prototype = t.create(m.prototype);
        n._createTextTrackFromNativeTrack = function(a) {
            var b = this.model.createTextTrackFromNativeTrack(a);
            var c = new l({
                element: this.mediaElement,
                model: b,
                index: a.index
            });
            b.on("change:mode", this._onTrackModeChange, this);
            c.render();
            this.trigger("addtrack")
        };
        n._onTrackModeChange = function(a) {
            this.trigger("changetrack");
            if (a.value === "showing") {
                this.trigger("texttrackshow")
            } else {
                this.trigger("texttrackhide")
            }
        };
        n.populateTextTracks = function() {
            var a = this.mediaElement.getTextTracks();
            if (a) {
                a.forEach(function(b) {
                    if (this.model.findTextTrackModelFromNativeTrack(b) === null) {
                        this._createTextTrackFromNativeTrack(b)
                    }
                }, this)
            }
        };
        r.exports = p
    }, {
        "./../../views/textTracks/QuickTimeTextTrackDisplay": 1159,
        "./TextTracksController": 1133,
        "ac-event-emitter": 916,
        "ac-object": 979
    }],
    1133: [function(p, o, j) {
        var m = p("ac-event-emitter").EventEmitter;
        var l = p("./../../collection/TextTrackCollection");
        var q = p("ac-object");

        function k(b, a) {
            this.options = a || {};
            this.mediaElement = b;
            this.model = this.options.model || new l()
        }
        var n = k.prototype = q.create(m.prototype);
        n.addTextTrackFromRemoteVTT = function(a) {};
        n.addTextTrack = function() {};
        n.removeTextTrack = function() {};
        n.getEnabledTextTracks = function() {
            return this.model.getEnabledTextTracks.apply(this.model, arguments)
        };
        n.getTextTracks = function() {
            return this.model
        };
        n.getTextTracksCount = function() {
            return this.model.count()
        };
        n.getVisibleTextTracks = function() {
            return this.model.getVisibleTextTracks()
        };
        n.findTextTrack = function(a) {
            return this.model.findTextTrack(a)
        };
        n.addTextTrack = function(b, d, a) {
            var c = this.mediaElement.addTextTrack(b, d, a)
        };
        n.populateTextTracks = function() {};
        o.exports = k
    }, {
        "./../../collection/TextTrackCollection": 1127,
        "ac-event-emitter": 916,
        "ac-object": 979
    }],
    1134: [function(t, u, r) {
        var o = t("./TextTracksController");
        var p = t("./../../models/TextTrackModel");
        var n = t("./../../views/textTracks/WebkitClosedCaptionsView");
        var v = t("ac-object");
        var l = t("ac-browser");

        function m() {
            o.apply(this, arguments)
        }
        var q = m.prototype = v.create(o.prototype);
        q._onTextTrackModeChange = function(a) {
            if (a.value === "showing") {
                this.trigger("texttrackshow")
            } else {
                this.trigger("texttrackhide")
            }
        };
        q.populateTextTracks = function() {
            var a = this.mediaElement.el;
            var b;
            var c = a.webkitHasClosedCaptions;
            if (c === true) {
                if (!this.view) {
                    this.view = new n({
                        element: a
                    })
                }
                b = new p({
                    mode: "hidden"
                });
                this.view.setModel(b);
                b.on("change:mode", this._onTextTrackModeChange, this);
                this.model.reset([b]);
                this.trigger("addtrack", {
                    textTrack: b
                });
                if (l.name === "Safari Mobile" && l.version < 7) {
                    b.once("change:mode", this.view.render, this.view)
                } else {
                    this.view.render()
                }
            }
        };
        u.exports = m
    }, {
        "./../../models/TextTrackModel": 1142,
        "./../../views/textTracks/WebkitClosedCaptionsView": 1163,
        "./TextTracksController": 1133,
        "ac-browser": 856,
        "ac-object": 979
    }],
    1135: [function(k, j, g) {
        function h(a) {
            this.options = a || {};
            this.player = this.options.player;
            this.player.setControls(true)
        }
        var i = h.prototype;
        h.create = function(a) {
            return new h(a)
        };
        j.exports = h
    }, {}],
    1136: [function(z, A, w) {
        var q = z("./../models/Video");
        var p = z("ac-event-emitter").EventEmitter;
        var D = z("ac-mvc-view").View;
        var B = z("./../views/mediaView/MediaView");
        var x = z("ac-object");
        var r = z("./../controller/textTracks/NativeTextTracksController");
        var u = z("ac-fullscreen");
        var t = z("ac-feature");
        var C = z("./../const/readyState");

        function y(a, b) {
            this.playableObject = a;
            this.options = b || {};
            this.model = this._getOrCreateVideo();
            this.view = this._getOrCreateView();
            this.textTracks = this._getOrCreateTextTracksController();
            this._sourceReadyBinding = false;
            p.call(this);
            this._bindTextTrackEvents();
            this._bindModelEvents();
            this._checkToRenderView()
        }
        var v = y.prototype = x.create(p.prototype);
        v._bindTextTrackEvents = function() {
            this.textTracks.on("addtrack", this._onAddTrack, this);
            this.textTracks.on("change", this._onTrackChange, this);
            this.textTracks.on("removetrack", this._onRemoveTrack, this);
            this.textTracks.on("texttrackshow", this._onTextTrackShow, this);
            this.textTracks.on("texttrackhide", this._onTextTrackHide, this)
        };
        v._onTextTrackHide = function() {
            this.trigger("texttrackhide")
        };
        v._onTextTrackShow = function() {
            this.trigger("texttrackshow")
        };
        v._onAddTrack = function() {
            this.trigger("addtrack")
        };
        v._onTrackChange = function() {
            this.trigger("change")
        };
        v._onRemoveTrack = function() {
            this.trigger("removetrack")
        };
        v._onAddTrack = function() {
            this.trigger("addtrack")
        };
        v._checkToRenderView = function() {
            if (this.model.getCurrentSrc()) {
                this._onSourceReady()
            } else {
                if (!this._sourceReadyBinding) {
                    this.model.once("change:currentSrc", this._onSourceReady, this);
                    this._sourceReadyBinding = true
                }
            }
        };
        v._onSourceReady = function() {
            if (this.model.getPreload() !== "none") {
                this.view.render();
                this.playableObject.setEl(this.view.getMediaElement());
                this._bindViewEvents()
            }
            this._sourceReadyBinding = false
        };
        v._getOrCreateView = function() {
            var a = this.options.view;
            if (!a) {
                a = new B({
                    model: this.model
                })
            }
            a.on("mediaelementchange", this._onMediaElementChange, this);
            return a
        };
        v._onMediaElementChange = function() {
            this.playableObject.setEl(this.view.getMediaElement())
        };
        v._getOrCreateTextTracksController = function() {
            var a = this.options.textTracks;
            if (a === undefined) {
                a = new r(this.playableObject)
            }
            return a
        };
        v._getOrCreateVideo = function() {
            var a = this.options.model;
            if (a === undefined) {
                a = new q()
            } else {
                if (!(a instanceof q)) {
                    a = new q(a)
                }
            }
            return a
        };
        v._bindModelEvents = function() {
            this.model.on("change:muted", this._onMutedChange, this);
            this.model.on("change:seeking", this._onModelSeekingChange, this);
            this.model.on("change:paused", this._onPausedChange, this);
            this.model.on("change:playbackRate", this._onPlaybackRateChange, this);
            this.model.on("change:duration", this._onDurationChange, this);
            this.model.on("change:volume", this._onVolumeChange, this);
            this.model.on("change:readyState", this._onReadyStateChange, this);
            this.model.on("change:poster", this._onPosterChange, this)
        };
        v._bindViewEvents = function() {
            this.view.on("play", this._respondToPlay, this);
            this.view.on("pause", this._respondToPause, this);
            this.view.on("timeupdate", this._respondToTimeUpdate, this);
            this.view.on("ended", this._respondToEnded, this);
            this.view.on("ratechange", this._respondToRateChange, this);
            this.view.on("durationchange", this._respondToDurationChange, this);
            this.view.on("loadedmetadata", this._respondToLoadedMetaData, this);
            this.view.on("loadeddata", this._respondToLoadedData, this);
            this.view.on("canplay", this._respondToCanPlay, this);
            this.view.on("canplaythrough", this._respondToCanPlayThrough, this)
        };
        v._populateTextTracks = function() {
            this.textTracks.populateTextTracks()
        };
        v._respondToLoadedMetaData = function() {
            this._populateTextTracks();
            this._setReadyState(1)
        };
        v._onPosterChange = function() {
            this.trigger("posterchange")
        };
        v._respondToLoadedData = function() {
            this._setReadyState(2)
        };
        v._respondToCanPlay = function() {
            this._setReadyState(3)
        };
        v._respondToCanPlayThrough = function() {
            this._setReadyState(4)
        };
        v._respondToDurationChange = function() {
            this.model.set({
                duration: this.playableObject.getDuration()
            })
        };
        v._respondToRateChange = function() {
            if (this.playableObject.getPlaybackRate) {
                this.model.set({
                    playbackRate: this.playableObject.getPlaybackRate()
                })
            }
        };
        v._respondToEnded = function() {
            this.model.set({
                ended: true
            });
            this.trigger("ended")
        };
        v._respondToPlay = function() {
            var b = this.getMediaElement();
            if (u.fullscreenElement() !== b && u.getMode() === "ios" && t.isHandheld()) {
                try {
                    u.requestFullscreen(this.getMediaElement())
                } catch (a) {}
            }
            this.model.set({
                paused: false,
                ended: false
            })
        };
        v._respondToPause = function() {
            this.model.set({
                paused: true
            })
        };
        v._triggerTimeUpdate = function() {
            this.trigger("timeupdate", {
                currentTime: this.getCurrentTime()
            })
        };
        v._respondToTimeUpdate = function() {
            if (this.model.getCurrentTime() !== this.playableObject.getCurrentTime()) {
                this.model.setCurrentTime(this.playableObject.getCurrentTime());
                this._triggerTimeUpdate()
            }
            if (this.model.getSeeking() === true) {
                this.model.set({
                    seeking: false
                })
            }
        };
        v._onReadyStateChange = function(a) {
            if (a.value === C.LOADEDMETADATA) {
                this.trigger("loadedmetadata")
            } else {
                if (a.value === C.LOADEDDATA) {
                    this.trigger("loadeddata")
                } else {
                    if (a.value === C.CANPLAY) {
                        this.trigger("canplay")
                    } else {
                        if (a.value === C.CANPLAYTHROUGH) {
                            this.trigger("canplaythrough")
                        }
                    }
                }
            }
            this.trigger("readystatechange", {
                readyState: a.value
            })
        };
        v._setReadyState = function(a) {
            this.model.set({
                readyState: a
            })
        };
        v._onMutedChange = function() {
            this.trigger("volumechange");
            if (this.model.getMuted() === false) {
                this._setElementVolume(this.model.getVolume())
            }
        };
        v._onVolumeChange = function() {
            this.trigger("volumechange")
        };
        v._onDurationChange = function(a) {
            if (isNaN(a.previous) && isNaN(a.value)) {
                return
            }
            this.trigger("durationchange")
        };
        v._onPlaybackRateChange = function() {
            this.trigger("ratechange")
        };
        v._onPausedChange = function(a) {
            if (a.value === true) {
                this.trigger("pause")
            } else {
                this.trigger("play")
            }
        };
        v._onModelSeekingChange = function(a) {
            if (a.value === true) {
                this.trigger("seeking")
            } else {
                this.trigger("seeked")
            }
        };
        v.findTextTrack = function(a) {
            return this.textTracks.findTextTrack(a)
        };
        v.getTextTracks = function() {
            return this.textTracks.getTextTracks()
        };
        v.getTextTracksCount = function() {
            return this.textTracks.getTextTracksCount()
        };
        v.addTextTrackFromRemoteVTT = function() {
            this.textTracks.addTextTrackFromRemoteVTT.apply(this.textTracks, arguments)
        };
        v.addTextTrack = function(b, c, a) {
            return this.textTracks.addTextTrack(b, c, a)
        };
        v.getEnabledTextTracks = function() {
            return this.textTracks.getEnabledTextTracks.apply(this.textTracks, arguments)
        };
        v.getVisibleTextTracks = function() {
            return this.textTracks.getVisibleTextTracks()
        };
        v.play = function() {
            if (this.getPaused() === false) {
                return
            }
            this.playableObject.play()
        };
        v.pause = function() {
            if (this.getPaused() === true) {
                return
            }
            this.playableObject.pause()
        };
        v.getVideo = function() {
            return this.model
        };
        v.getPaused = function() {
            return this.model.getPaused()
        };
        v.setMuted = function(a) {
            this.model.setMuted(a);
            this.playableObject.setMuted(a)
        };
        v.getMuted = function() {
            return this.model.getMuted()
        };
        v.getEnded = function() {
            return this.model.getEnded()
        };
        v._setElementVolume = function(a) {
            this.playableObject.setVolume(a)
        };
        v.setVolume = function(a) {
            this.model.setVolume(a, {
                silent: true
            });
            if (this.getMuted() === false) {
                this._setElementVolume(a)
            }
        };
        v.getVolume = function() {
            return this.model.getVolume()
        };
        v.setCurrentTime = function(a) {
            var b = this.getCurrentTime();
            this.model.set({
                seeking: true
            });
            this.playableObject.setCurrentTime(a);
            if (b === a) {
                this.model.set({
                    seeking: false
                })
            }
        };
        v.getWidth = function() {
            return this.playableObject.getWidth()
        };
        v.getHeight = function() {
            return this.playableObject.getHeight()
        };
        v.getCurrentTime = function() {
            return this.model.getCurrentTime()
        };
        v.setPlaybackRate = function(a) {
            var b = this.model.getPlaybackRate();
            if (b !== a) {
                this.playableObject.setPlaybackRate(a)
            }
        };
        v.getPlaybackRate = function() {
            return this.model.getPlaybackRate()
        };
        v.getDuration = function() {
            return this.model.getDuration()
        };
        v.setAutoplay = function(a) {
            this.playableObject.SetAutoPlay(a)
        };
        v.getAutoplay = function() {
            return this.playableObject.GetAutoPlay()
        };
        v.getCaptionsTracks = function() {
            return this.playableObject.getCaptionsTracks()
        };
        v.setLoop = function(a) {
            this.model.setLoop(a);
            this.playableObject.setLoop(a)
        };
        v.getLoop = function() {
            return this.model.getLoop()
        };
        v.getError = function() {};
        v.getVideoWidth = function() {};
        v.getVideoHeight = function() {};
        v.getPoster = function() {
            return this.model.getPoster()
        };
        v.setPoster = function(a) {
            this.model.setPoster(a)
        };
        v.hasPoster = function() {
            return !!(this.model.getPoster())
        };
        v._resetModelPlaybackAttributes = function() {
            this.model.set({
                duration: this.playableObject.getDuration(),
                currentTime: this.playableObject.getCurrentTime(),
                playbackRate: this.playableObject.getPlaybackRate(),
                readyState: 0,
                paused: true,
                ended: false,
                seeking: false
            });
            this._triggerTimeUpdate()
        };
        v.setSrc = function(b) {
            var a = this.model.findSources(b)[0];
            var c = this.model.getCurrentSrc();
            if (c) {
                c = c.get("src")
            }
            if (a === undefined) {
                a = this.model.addSource(b)
            }
            if (c !== a.get("src")) {
                this.model.setCurrentSrc(a);
                this.playableObject.setSrc(a.get("src"));
                this._resetModelPlaybackAttributes()
            }
            return a
        };
        v.getPreload = function() {
            return this.model.getPreload()
        };
        v.setPreload = function(a) {
            this.model.setPreload(a);
            this.playableObject.setPreload(a);
            this._checkToRenderView()
        };
        v.getCurrentSrc = function() {
            return this.model.getCurrentSrc()
        };
        v.getSources = function() {
            return this.model.getSources()
        };
        v.getNetworkState = function() {
            return this.model.get("networkState")
        };
        v.getReadyState = function() {
            return this.model.get("readyState")
        };
        v.getControls = function() {
            return this.model.get("controls")
        };
        v.setControls = function(a) {
            this.model.set({
                controls: a
            });
            this.playableObject.setControls(a)
        };
        v.getDefaultPlaybackRate = function() {
            return this.model.getDefaultPlaybackRate()
        };
        v.getSeekable = function() {
            return this.getBuffered()
        };
        v.getDefaultMuted = function() {
            return this.model.get("defaultMuted")
        };
        v.getSeeking = function() {
            return this.model.get("seeking")
        };
        v.getPlayed = function() {
            return this.playableObject.getPlayed()
        };
        v.getBuffered = function() {
            return this.playableObject.getBuffered()
        };
        v.getMediaElement = function() {
            return this.view.getMediaElement()
        };
        v.appendTo = function() {
            return this.view.appendTo.apply(this.view, arguments)
        };
        v.getViewElement = function() {
            return this.view.el
        };
        A.exports = y
    }, {
        "./../const/readyState": 1130,
        "./../controller/textTracks/NativeTextTracksController": 1131,
        "./../models/Video": 1143,
        "./../views/mediaView/MediaView": 1153,
        "ac-event-emitter": 916,
        "ac-feature": 918,
        "ac-fullscreen": 921,
        "ac-mvc-view": 976,
        "ac-object": 979
    }],
    1137: [function(i, m, j) {
        var l = i("./../../recommendation/vat");
        var n = i("./createQuickTime");
        var k = i("./createHTML5Video");

        function o(a, d) {
            d = d || {};
            var c = d.type || l.get();
            var b;
            if (c === "quicktime") {
                b = n(a, d)
            } else {
                b = k(a, d)
            }
            return b
        }
        m.exports = o
    }, {
        "./../../recommendation/vat": 1150,
        "./createHTML5Video": 1139,
        "./createQuickTime": 1140
    }],
    1138: [function(o, n, i) {
        var k = o("./create");
        var j = o("./../../models/video/factory/createFromVideoTag");
        var m = o("./../../recommendation/vat");

        function l(a, c) {
            c = c || {};
            c.element = a;
            var b = c.type = m.get();
            var g = j(a, c);
            var d = g.getSources();
            var h;
            var f = d.find({
                src: a.currentSrc
            })[0];
            if (b === "quicktime") {
                f = d.find({
                    type: "video/quicktime"
                })[0];
                if (!f && d.models.length === 1) {
                    f = d.at(0)
                }
            }
            if (f) {
                g.setSrc(f)
            }
            h = k(g, c);
            if (h.getViewElement() !== a) {
                a.parentNode.replaceChild(h.getViewElement(), a)
            }
            return h
        }
        n.exports = l
    }, {
        "./../../models/video/factory/createFromVideoTag": 1145,
        "./../../recommendation/vat": 1150,
        "./create": 1137
    }],
    1139: [function(q, u, n) {
        var r = q("./../../views/mediaView/HTML5Video");
        var o = q("./../MediaController");
        var v = q("./../../adapter/element-adapter");
        var t = q("./../../controller/textTracks/NativeTextTracksController");
        var p = q("./../../controller/textTracks/WebkitClosedCaptions");
        var m = q("./../../models/Video");
        var l = function(c, g) {
            g = g || {};
            if (!(c instanceof m)) {
                c = new m(c)
            }
            var h = g.view || new r({
                model: c,
                element: g.element,
                template: "elementVideo"
            });
            var a = h.getMediaElement();
            var f = v.create(a, "video");
            var b;
            if (!("textTracks" in a) && "webkitClosedCaptionsVisible" in a) {
                b = new p(f)
            } else {
                b = new t(f)
            }
            if (g.textTracks) {
                g.textTracks.forEach(function(j) {
                    var i = j;
                    if (typeof j === "string") {
                        i = {
                            src: j
                        }
                    }
                    b.addTextTrackFromRemoteVTT(i)
                })
            }
            var d = new o(f, {
                model: c,
                view: h,
                textTracks: b
            });
            return d
        };
        u.exports = l
    }, {
        "./../../adapter/element-adapter": 1125,
        "./../../controller/textTracks/NativeTextTracksController": 1131,
        "./../../controller/textTracks/WebkitClosedCaptions": 1134,
        "./../../models/Video": 1143,
        "./../../views/mediaView/HTML5Video": 1152,
        "./../MediaController": 1136
    }],
    1140: [function(q, r, o) {
        var m = q("./../../views/mediaView/QuickTime");
        var t = q("./../../adapter/element-adapter");
        var p = q("./../MediaController");
        var n = q("./../../controller/textTracks/QuickTimeTextTrackController");
        var k = q("./../../models/Video");
        var l = function(f, a) {
            var d;
            var g;
            var c;
            var b;
            var h;
            a = a || {};
            if (!(f instanceof k)) {
                f = new k(f)
            }
            b = new m({
                model: f
            });
            c = b.getMediaElement();
            d = t.create(c, "quicktime");
            h = new n(d);
            g = new p(d, {
                model: f,
                view: b,
                textTracks: h
            });
            return g
        };
        r.exports = l
    }, {
        "./../../adapter/element-adapter": 1125,
        "./../../controller/textTracks/QuickTimeTextTrackController": 1132,
        "./../../models/Video": 1143,
        "./../../views/mediaView/QuickTime": 1154,
        "./../MediaController": 1136
    }],
    1141: [function(o, m, i) {
        var k = o("ac-mvc-model").Model;
        var j = o("ac-object");

        function n() {
            k.apply(this, arguments)
        }
        var l = n.prototype = j.create(k.prototype);
        l.defaultAttributes = {};
        l.getFullyQualifiedURL = function() {
            var a = this.get("src");
            var b;
            var c = window.location.origin || window.location.protocol + "//" + window.location.hostname;
            if (/http(s)?/.test(a)) {
                return a
            } else {
                if (a.slice(0, 2) === "//") {
                    return window.location.protocol + a
                } else {
                    if (a[0] !== "/") {
                        b = window.location.pathname;
                        b = b.substring(0, b.lastIndexOf("/") + 1);
                        return c + b + a
                    }
                }
            }
            return c + a
        };
        m.exports = n
    }, {
        "ac-mvc-model": 945,
        "ac-object": 979
    }],
    1142: [function(o, n, i) {
        var k = o("ac-mvc-model").Model;
        var j = o("ac-object");

        function l(a) {
            k.apply(this, arguments)
        }
        var m = l.prototype = j.create(k.prototype);
        m.defaultAttributes = {
            mode: "disabled"
        };
        m.setNativeTextTrack = function(a) {
            this._nativeTextTrack = a
        };
        m.getNativeTextTrack = function() {
            return this._nativeTextTrack
        };
        m.getCues = function() {
            return this._nativeTextTrack.cues
        };
        m.removeCue = function(a) {
            this._nativeTextTrack.removeCue(a)
        };
        m.addCue = function(a, c, b) {
            var d = new VTTCue(a, c, b);
            this.addVTTCue(d)
        };
        m.addVTTCue = function(a) {
            this._nativeTextTrack.addCue(a)
        };
        m.show = function() {
            this.set({
                mode: "showing"
            })
        };
        m.hide = function() {
            this.set({
                mode: "hidden"
            })
        };
        m.disable = function() {
            this.set({
                mode: "disabled"
            })
        };
        n.exports = l
    }, {
        "ac-mvc-model": 945,
        "ac-object": 979
    }],
    1143: [function(v, x, t) {
        var w = v("ac-mvc-model").Model;
        var u = v("ac-object");
        var n = v("./../collection/MediaSourceCollection");
        var p = v("./../collection/TextTrackCollection");
        var q = v("./MediaSource");
        var y = v("ac-video-posterframe");
        var z = y.defaultPosterPath();

        function o() {
            w.apply(this, arguments);
            this._sources = new n();
            if (this.has("src")) {
                this._addInitSources()
            }
        }
        var r = o.prototype = u.create(w.prototype);
        r.defaultAttributes = {
            duration: "NaN",
            readyState: 0,
            currentTime: 0,
            paused: true,
            playbackRate: 1,
            ended: false,
            seeking: false,
            controls: false,
            muted: false,
            volume: 1,
            looping: false,
            poster: z,
            defaultPlaybackRate: 1,
            defaultMuted: false,
            currentSrc: null,
            preload: "auto"
        };
        r._addInitSources = function() {
            var a = this.get("src");
            if (!Array.isArray(a)) {
                a = [a]
            }
            a.forEach(this.addSource, this)
        };
        r.findSourcesByFullyQualifiedURL = function(a) {
            return this._sources.filter(function(b) {
                return (b.getFullyQualifiedURL() === a)
            })
        };
        r.getPoster = function() {
            return this.get("poster")
        };
        r.setAutoplay = function(a) {
            this.set({
                autoplay: a
            })
        };
        r.setPoster = function(a) {
            this.set({
                poster: a
            })
        };
        r.setPreload = function(a) {
            this.set({
                preload: a
            })
        };
        r.addSource = function(a) {
            var b = this.createSource(a);
            this._sources.add(b);
            this.trigger("source:add", {
                source: b
            });
            if (this._sources.models.length === 1) {
                this.setCurrentSrc(b)
            }
            return b
        };
        r._coerceMediaSourceData = function(a) {
            if (typeof a === "string") {
                return {
                    src: a
                }
            }
            return a
        };
        r.createSource = function(a) {
            if ((a instanceof q)) {
                return a
            }
            return new q(this._coerceMediaSourceData(a))
        };
        r.findSources = function(a, b) {
            if (typeof a === "string") {
                a = {
                    src: a
                }
            }
            return this._sources.find(a, b)
        };
        r.getSources = function() {
            return this._sources
        };
        r.getAutoplay = function() {
            return this.get("autoplay")
        };
        r.setCurrentTime = function(a) {
            this.set({
                currentTime: a
            })
        };
        r.getPreload = function() {
            return this.get("preload")
        };
        r.setSrc = function(a) {
            this.set({
                currentSrc: a.cid
            })
        };
        r.setCurrentSrc = function(a) {
            this.set({
                currentSrc: a.cid
            })
        };
        r.getCurrentSrc = function() {
            return this._sources.get(this.get("currentSrc"))
        };
        r.setReadyState = function(a) {
            this.set({
                readyState: a
            })
        };
        r.getDefaultMuted = function() {
            return this.get("defaultMuted")
        };
        r.getDefaultPlaybackRate = function() {
            return this.get("defaultPlaybackRate")
        };
        r.setLoop = function(a) {
            this.set({
                loop: a
            })
        };
        r.getLoop = function() {
            return this.get("loop")
        };
        r.getSeeking = function() {
            return this.get("seeking")
        };
        r.getReadyState = function() {
            return this.get("readyState")
        };
        r.getDuration = function() {
            return this.get("duration")
        };
        r.getCurrentTime = function() {
            return this.get("currentTime")
        };
        r.setVolume = function(a) {
            this.set({
                volume: a
            })
        };
        r.getVolume = function() {
            return this.get("volume")
        };
        r.getPaused = function() {
            return this.get("paused")
        };
        r.getPlaybackRate = function() {
            return this.get("playbackRate")
        };
        r.setEnded = function(a) {
            this.set({
                ended: a
            })
        };
        r.getEnded = function() {
            return this.get("ended")
        };
        r.getMuted = function() {
            return this.get("muted")
        };
        r.setPlaybackRate = function(a) {
            this.set({
                playbackRate: a
            })
        };
        r.setMuted = function(a, b) {
            this.set({
                muted: a
            }, b)
        };
        x.exports = o
    }, {
        "./../collection/MediaSourceCollection": 1126,
        "./../collection/TextTrackCollection": 1127,
        "./MediaSource": 1141,
        "ac-mvc-model": 945,
        "ac-object": 979,
        "ac-video-posterframe": 1117
    }],
    1144: [function(g, j, h) {
        var k = g("./../../MediaSource");

        function i(c) {
            var a = c.getAttribute("src");
            var b = {
                src: a
            };
            if (c.getAttribute("type")) {
                b.type = c.getAttribute("type")
            }
            return new k(b)
        }
        j.exports = i
    }, {
        "./../../MediaSource": 1141
    }],
    1145: [function(r, t, o) {
        var k = r("./../../Video");
        var n = r("ac-dom-traversal");
        var q = r("ac-object");
        var l = r("./../../mediaSource/factory/createFromSourceTag");

        function m(b, a) {
            if (a.getAttribute("preload")) {
                b.preload = a.getAttribute("preload")
            }
        }

        function p(b, a) {
            var c;
            b.src = [];
            if (a.getAttribute("src")) {
                b.src.push(l(a))
            }
            c = n.querySelectorAll("source", a);
            if (c.length) {
                c = c.map(function(d) {
                    return l(d)
                });
                b.src = b.src.concat(c)
            }
        }
        t.exports = function(a, d) {
            d = d || {};
            var f;
            var b;
            var c = {
                paused: a.paused,
                currentTime: a.currentTime,
                duration: a.duration,
                muted: a.muted,
                volume: a.volume,
                playbackRate: a.playbackRate,
                ended: a.ended,
                readyState: a.readyState,
                seeking: a.seeking,
                poster: a.poster,
                defaultPlaybackRate: a.defaultPlaybackRate,
                defaultMuted: a.defaultMuted,
                currentSrc: a.currentSrc,
                autoplay: a.autoplay
            };
            m(c, a);
            p(c, a);
            c = q.extend(c, d);
            f = new k(c);
            if (a.currentSrc) {
                b = f.findSourcesByFullyQualifiedURL(a.currentSrc);
                if (b && b[0]) {
                    f.setCurrentSrc(b[0])
                }
            }
            return f
        }
    }, {
        "./../../Video": 1143,
        "./../../mediaSource/factory/createFromSourceTag": 1144,
        "ac-dom-traversal": 897,
        "ac-object": 979
    }],
    1146: [function(F, L, w) {
        var y = F("ac-mvc-view").View;
        var J = F("ac-video-controls");
        var x = F("./../controls/Native");
        var v = F("ac-object");
        var I = F("ac-fullscreen");
        var D = F("ac-feature");
        var H = F("./../const/readyState");
        var E = F("ac-video-posterframe");
        var C = F("ac-dom-events/addEventListener");
        var K = F("ac-classlist/add");
        var G = F("ac-classlist/remove");
        var z = F("ac-classlist/contains");
        var u = "user-hover";

        function A() {
            y.apply(this, arguments);
            if (this.options.mediaController) {
                this.setMediaController(this.options.mediaController)
            }
            this.poster = null;
            this._initPoster();
            this._initControls();
            this._listenForFullscreenEvents();
            if (D.isDesktop()) {
                this._appendBlockade()
            }
        }
        A.LOADEDMETADATA = H.LOADEDMETADATA;
        A.LOADEDDATA = H.LOADEDDATA;
        A.CANPLAY = H.CANPLAY;
        A.CANPLAYTHROUGH = H.CANPLAYTHROUGH;
        var B = A.prototype = v.create(y.prototype);
        B.defaultOptions = {
            controlsTimeoutDuration: 5000
        };
        B.className = "ac-video-player";
        B._appendBlockade = function() {
            var a = new y({
                className: "ac-video-blockade"
            });
            a.appendTo(this.el);
            this._blockade = a
        };
        B._onEnterFullscreen = function(a) {
            if (a.target === this.getFullscreenTargetElement()) {
                this.trigger("enterfullscreen", a)
            }
        };
        B._onExitFullscreen = function(a) {
            if (a.target === this.getFullscreenTargetElement()) {
                this.trigger("exitfullscreen", a)
            }
        };
        B._listenForFullscreenEvents = function() {
            I.on("enterfullscreen", this._onEnterFullscreen, this);
            I.on("exitfullscreen", this._onExitFullscreen, this)
        };
        B._unbindFullscreenEvents = function() {
            I.off("enterfullscreen", this._onEnterFullscreen, this);
            I.off("exitfullscreen", this._onExitFullscreen, this)
        };
        B.destroy = function() {
            y.prototype.destroy.call(this);
            this._unbindFullscreenEvents()
        };
        B._initPoster = function() {
            var a = null;
            if (this.mediaController.hasPoster() && this.poster === null) {
                a = E.create(this.mediaController);
                a.render();
                if (a.el.parentNode !== this.el) {
                    a.appendTo(this.el)
                }
                this.poster = a
            }
        };
        B._destroyPoster = function() {
            if (this.poster && this.poster.el.parentNode === this.el) {
                this.el.removeChild(this.poster.el)
            }
            this.poster = null
        };
        B.getFullscreenTargetElement = function() {
            return (I.getMode() === "ios" ? this.getMediaElement() : this.el)
        };
        B.toggleFullscreen = function() {
            if (this.isFullscreen()) {
                this.exitFullscreen()
            } else {
                this.requestFullscreen()
            }
        };
        B.isFullscreen = function() {
            return (I.fullscreenElement() === this.getFullscreenTargetElement())
        };
        B.requestFullscreen = function() {
            var a = this.getFullscreenTargetElement();
            if (I.fullscreenEnabled(a)) {
                I.requestFullscreen(a)
            }
        };
        B.exitFullscreen = function() {
            I.exitFullscreen(this.getFullscreenTargetElement())
        };
        B._instantiateDefaultCustomUIControls = function() {
            var b = this._instantiateControls(J);
            if (b.el.parentNode !== this.el && typeof b.appendTo === "function") {
                b.appendTo(this.el)
            }
            var f;
            var a = {};
            var d = function(g) {
                if (g.pageX !== undefined && (a.x === g.pageX && a.y === g.pageY)) {
                    return
                }
                if (!z(this.el, u)) {
                    K(this.el, u)
                }
                window.clearTimeout(f);
                f = window.setTimeout(function() {
                    G(this.el, u)
                }.bind(this), this.options.controlsTimeoutDuration);
                a = {
                    x: g.pageX,
                    y: g.pageY
                }
            }.bind(this);
            C(this.el, "mouseenter", d);
            C(this.el, "mousemove", d);
            var c = function() {
                window.clearTimeout(f);
                G(this.el, u);
                a = {}
            };
            if ("onmouseleave" in this.el) {
                C(this.el, "mouseleave", c.bind(this))
            } else {
                C(this.el, "mouseout", function(g) {
                    if (!b.el.contains(g.target) && g.target !== b.el) {
                        c.call(this)
                    }
                }.bind(this), true)
            }
            return b
        };
        B._instantiateControls = function(a) {
            if (typeof a.create !== "function") {
                return a
            }
            return a.create({
                player: this.mediaController,
                fullScreenElement: this.getFullscreenTargetElement()
            })
        };
        B._instantiateNonHandheldControls = function() {
            var a = this.options.controls;
            var b;
            if (a === false || a === null) {
                b = null
            } else {
                if (a !== undefined) {
                    b = this._instantiateControls(a)
                } else {
                    if (D.isDesktop()) {
                        b = this._instantiateDefaultCustomUIControls()
                    } else {
                        b = this._instantiateControls(x)
                    }
                }
            }
            return b
        };
        B._instantiateHandheldControls = function() {
            return this._instantiateControls(x)
        };
        B._initControls = function() {
            var a;
            if (!D.isHandheld()) {
                a = this._instantiateNonHandheldControls()
            } else {
                a = this._instantiateHandheldControls()
            }
            this.controls = a
        };
        B.setMediaController = function(a) {
            if (this.mediaController) {
                this.mediaController.stopPropagatingTo(this)
            }
            this.mediaController = a;
            this.mediaController.propagateTo(this._eventEmitter)
        };
        B.getVideo = function() {
            return this.mediaController.getVideo()
        };
        B.play = function() {
            return this.mediaController.play()
        };
        B.pause = function() {
            return this.mediaController.pause()
        };
        B.getPaused = function() {
            return this.mediaController.getPaused()
        };
        B.setMuted = function(a) {
            return this.mediaController.setMuted(a)
        };
        B.getMuted = function() {
            return this.mediaController.getMuted()
        };
        B.getEnded = function() {
            return this.mediaController.getEnded()
        };
        B.setVolume = function(a) {
            return this.mediaController.setVolume(a)
        };
        B.getVolume = function() {
            return this.mediaController.getVolume()
        };
        B.setCurrentTime = function(a) {
            return this.mediaController.setCurrentTime(a)
        };
        B.getCurrentTime = function() {
            return this.mediaController.getCurrentTime()
        };
        B.getPreload = function() {
            return this.mediaController.getPreload()
        };
        B.setPreload = function(a) {
            return this.mediaController.setPreload(a)
        };
        B.setPlaybackRate = function(a) {
            return this.mediaController.setPlaybackRate(a)
        };
        B.getPlaybackRate = function() {
            return this.mediaController.getPlaybackRate()
        };
        B.getDuration = function() {
            return this.mediaController.getDuration()
        };
        B.setLoop = function(a) {
            return this.mediaController.setLoop(a)
        };
        B.getLoop = function() {
            return this.mediaController.getLoop()
        };
        B.getError = function() {
            return this.mediaController.getError()
        };
        B.getPoster = function() {
            return this.mediaController.getPoster()
        };
        B.getMediaWidth = function() {
            return this.mediaController.getWidth()
        };
        B.getMediaHeight = function() {
            return this.mediaController.getHeight()
        };
        B.setPoster = function() {
            this.mediaController.setPoster.apply(this.mediaController, arguments);
            if (this.mediaController.hasPoster()) {
                this._initPoster()
            } else {
                this._destroyPoster()
            }
        };
        B.setSrc = function() {
            return this.mediaController.setSrc.apply(this.mediaController, arguments)
        };
        B.getCurrentSrc = function() {
            return this.mediaController.getCurrentSrc()
        };
        B.getSources = function() {
            return this.mediaController.getSources()
        };
        B.getNetworkState = function() {
            return this.mediaController.getNetworkState()
        };
        B.getReadyState = function() {
            return this.mediaController.getReadyState()
        };
        B.getDefaultPlaybackRate = function() {
            return this.mediaController.getDefaultPlaybackRate()
        };
        B.getSeekable = function() {
            return this.mediaController.getSeekable()
        };
        B.getDefaultMuted = function() {
            return this.mediaController.getDefaultMuted()
        };
        B.getSeeking = function() {
            return this.mediaController.getSeeking()
        };
        B.getStartDate = function() {
            return this.mediaController.getStartDate()
        };
        B.getPlayed = function() {
            return this.mediaController.getPlayed()
        };
        B.getBuffered = function() {
            return this.mediaController.getBuffered()
        };
        B.getTextTracks = function() {
            return this.mediaController.getTextTracks()
        };
        B.getTextTracksCount = function() {
            return this.mediaController.getTextTracksCount()
        };
        B.addTextTrackFromRemoteVTT = function() {
            return this.mediaController.addTextTrackFromRemoteVTT.apply(this.mediaController, arguments)
        };
        B.addTextTrack = function() {
            return this.mediaController.addTextTrack.apply(this.mediaController, arguments)
        };
        B.getEnabledTextTracks = function() {
            return this.mediaController.getEnabledTextTracks.apply(this.mediaController, arguments)
        };
        B.getVisibleTextTracks = function() {
            return this.mediaController.getVisibleTextTracks.apply(this.mediaController, arguments)
        };
        B.getMediaElement = function() {
            return this.mediaController.getMediaElement()
        };
        L.exports = A
    }, {
        "./../const/readyState": 1130,
        "./../controls/Native": 1135,
        "ac-classlist/add": 10,
        "ac-classlist/contains": 16,
        "ac-classlist/remove": 18,
        "ac-dom-events/addEventListener": 65,
        "ac-feature": 918,
        "ac-fullscreen": 921,
        "ac-mvc-view": 976,
        "ac-object": 979,
        "ac-video-controls": 1044,
        "ac-video-posterframe": 1117
    }],
    1147: [function(m, l, o) {
        var n = m("./../Player");
        var k = m("./../../mediaController/factory/create");
        var j = m("ac-dom-nodes");
        var i = m("./../../collection/playerCollection");
        l.exports = function(a, c) {
            c = c || {};
            var b;
            if (!c.mediaController) {
                c.mediaController = k(a, c)
            }
            b = new n(c);
            if (c.mediaController.getViewElement().parentNode !== b.el) {
                j.insertFirstChild(c.mediaController.getViewElement(), b.el)
            }
            if (!c.preventCollection) {
                i.add(b)
            }
            return b
        }
    }, {
        "./../../collection/playerCollection": 1128,
        "./../../mediaController/factory/create": 1137,
        "./../Player": 1146,
        "ac-dom-nodes": 877
    }],
    1148: [function(n, l, o) {
        var k = n("./../../config/VideoConfig");
        var j = n("./../../models/Video");
        var i = n("./create");
        var m = function(f) {
            var d = new k();
            var b;
            var a;
            d.getConfig(f, {}, {}).then(function(g) {
                g.id = f.id;
                b = g;
                a = g.source
            });
            var c = new j({
                src: a
            });
            return i(c)
        };
        l.exports = m
    }, {
        "./../../config/VideoConfig": 1129,
        "./../../models/Video": 1143,
        "./create": 1147
    }],
    1149: [function(p, n, j) {
        var q = p("./create");
        var l = p("./../../mediaController/factory/createFromVideoTag");
        var k = p("ac-dom-traversal");

        function o(a) {
            var c = k.querySelectorAll("source", a);
            var b = 0;
            for (b; b < c.length; b += 1) {
                c[b].parentNode.removeChild(c[b])
            }
        }
        var m = function(b, c) {
            c = c || {};
            var a = k.querySelector("video", b);
            if (a === null) {
                a = document.createElement("video");
                b.appendChild(a)
            }
            if (typeof c.src !== "undefined" && c.src !== null) {
                o(a)
            }
            c.mediaController = l(a, c);
            c.element = b;
            return q(null, c)
        };
        n.exports = m
    }, {
        "./../../mediaController/factory/createFromVideoTag": 1138,
        "./create": 1147,
        "ac-dom-traversal": 897
    }],
    1150: [function(f, h, g) {
        var i = f("ac-browser");
        h.exports = {
            get: function() {
                var a = "html5";
                if (i.name === "Firefox") {
                    a = "quicktime"
                } else {
                    if (i.name === "IE") {
                        a = "quicktime"
                    }
                }
                return a
            }
        }
    }, {
        "ac-browser": 856
    }],
    1151: [function(h, m, i) {
        var k = h("ac-mvc-view").View;

        function j() {
            k.apply(this, arguments)
        }
        var l = j.prototype = new k();
        l.tagName = "source";
        l.render = function() {
            this.el.setAttribute("src", this.model.get("src"));
            if (this.model.has("type")) {
                this.el.setAttribute("type", this.model.get("type"))
            }
        };
        m.exports = j
    }, {
        "ac-mvc-view": 976
    }],
    1152: [function(q, r, o) {
        var t = q("./MediaView");
        var l = q("./../MediaSourceTag");
        var p = q("ac-object");
        var k = q("ac-dom-traversal");

        function m() {
            t.apply(this, arguments)
        }
        var n = m.prototype = p.create(t.prototype);
        n.tagName = "video";
        n._renderBooleanAttribute = function(c, a) {
            var b = this.getMediaElement();
            if (a === true) {
                b.setAttribute(c, "")
            } else {
                b.removeAttribute(c)
            }
        };
        n._findExistingSourceOrTrackElement = function(a) {
            var c;
            var b;
            if (a.has("src")) {
                b = '[src="' + a.get("src") + '"]';
                c = k.querySelector(b, this.el)
            }
            return c
        };
        n._appendSource = function(d) {
            var b = this.getMediaElement();
            var a = this._findExistingSourceOrTrackElement(d);
            var c = new l({
                model: d,
                element: a
            });
            c.render();
            if (!a) {
                c.appendTo(b)
            }
        };
        n._onSourceAdd = function(a) {
            this._appendSource(a.source)
        };
        n._renderPreload = function() {
            var a = this.getMediaElement();
            a.setAttribute("preload", this.model.getPreload())
        };
        n._renderAutoplay = function() {
            this._renderBooleanAttribute("autoplay", this.model.getAutoplay())
        };
        n._renderMuted = function() {
            this._renderBooleanAttribute("muted", this.model.getMuted())
        };
        n._renderAirplay = function() {
            this._renderBooleanAttribute("x-webkit-airplay", true)
        };
        n._renderCrossOrigin = function() {
            var a = this.getMediaElement();
            if (this.model.has("crossorigin")) {
                a.setAttribute("crossorigin", this.model.get("crossorigin"))
            }
        };
        n._renderCurrentSrc = function() {
            var a = this.model.getCurrentSrc();
            if (a) {
                this.el.setAttribute("src", a.get("src"))
            }
        };
        n._renderLoop = function() {
            var a = this.model.getLoop();
            this._renderBooleanAttribute("loop", a)
        };
        n._respondToAddTrackEvent = function(a) {
            this.emitterTrigger("addtrack", a.data)
        };
        n.getSourceAttribute = function() {
            return this.getMediaElement().getAttribute("src")
        };
        n.render = function() {
            var a = this.getMediaElement();
            this.model.on("source:add", this._onSourceAdd, this);
            this.model.on("change:autoplay", this._renderAutoplay, this);
            this.model.on("change:muted", this._renderMuted, this);
            this.model.on("change:preload", this._renderPreload, this);
            this.model.on("change:currentSrc", this._renderCurrentSrc, this);
            this.model.on("change:crossorigin", this._renderCrossOrigin, this);
            this.model.getSources().forEach(this._appendSource, this);
            this._renderAutoplay();
            this._renderPreload();
            this._renderMuted();
            this._renderAirplay();
            this._renderCrossOrigin();
            this._renderCurrentSrc();
            this._renderLoop();
            if (this.model.id) {
                a.setAttribute("id", this.model.id)
            }
        };
        r.exports = m
    }, {
        "./../MediaSourceTag": 1151,
        "./MediaView": 1153,
        "ac-dom-traversal": 897,
        "ac-object": 979
    }],
    1153: [function(q, r, o) {
        var l = q("ac-dom-traversal");
        var m = q("ac-browser");
        var k = q("ac-mvc-view").View;
        var p = q("ac-object");

        function t() {
            this._mediaElement = null;
            k.apply(this, arguments)
        }
        var n = t.prototype = p.create(k.prototype);
        n.className = "ac-video-media-controller";
        n._findMediaElementByTagName = function(a) {
            if (this.getTagName() === a) {
                return this.el
            }
            return l.querySelector(a, this.el)
        };
        n.renderTextTrack = function() {};
        n._findMediaElement = function() {
            if (this._findMediaElementByTagName("video")) {
                return this._findMediaElementByTagName("video")
            } else {
                if (m.name !== "IE") {
                    return this._findMediaElementByTagName("embed")
                }
            }
            return this._findMediaElementByTagName("object")
        };
        n.getMediaElement = function() {
            return this._findMediaElement()
        };
        r.exports = t
    }, {
        "ac-browser": 856,
        "ac-dom-traversal": 897,
        "ac-mvc-view": 976,
        "ac-object": 979
    }],
    1154: [function(v, x, r) {
        var y = v("./MediaView");
        var w = v("./eventAdapters/QuickTime");
        var n = v("./eventAdapters/quicktimeEventsElement");
        var t = v("ac-object");
        var o = v("ac-browser");
        var u = (o.os.toLowerCase() === "windows");
        var z = v("ac-dom-traversal");

        function p() {
            y.apply(this, arguments);
            this._hasRendered = false;
            this.model.on("change:currentSrc", this._renderString, this)
        }
        var q = p.prototype = t.create(y.prototype);
        q._renderID = function() {
            this._objectStr += ' id="quicktime-movie-' + Date.now() + '"'
        };
        q._renderClsidAttr = function() {
            this._objectStr += ' classid="clsid:02BF25D5-8C17-4B23-BC80-D3488ABDDC6B"'
        };
        q._renderCodebaseAttr = function() {
            this._objectStr += ' codebase="http://www.apple.com/qtactivex/qtplugin.cab#version=7,2,1,0"'
        };
        q._renderWModeAttr = function() {
            this._renderParamAttr("wmode", "transparent");
            this._renderEmbedAttr("wmode", "transparent")
        };
        q._renderPostDomEventsAttr = function() {
            this._objectStr += ' postdomevents="true"'
        };
        q._renderBehaviorAttr = function() {
            var a = n.getID();
            if (a) {
                this._objectStyles.push("behavior:url('#" + a + "')")
            }
        };
        q._renderAutoplay = function() {
            var a = (this.model.getAutoplay() === true) ? "True" : "False";
            this._renderAttr("autoplay", a)
        };
        q._renderVolume = function() {
            var b = this.model.getMuted();
            var a = this.model.getVolume() * 256;
            if (b) {
                a = 0
            }
            this._renderAttr("volume", a)
        };
        q._renderLoop = function() {
            var a = (this.model.getLoop() === true) ? "True" : "False";
            this._renderAttr("loop", a)
        };
        q._renderAttr = function(a, b) {
            this._renderParamAttr(a, b);
            this._renderEmbedAttr(a, b)
        };
        q._closeOpeningObjectTag = function() {
            this._objectStr += ">"
        };
        q._renderParamAttr = function(a, b) {
            this._objectStr += '<param name="' + a + '" value="' + b + '" />'
        };
        q._renderEmbedAttr = function(a, b) {
            this._embedStr += " " + a + '="' + b + '"'
        };
        q._closeEmbedTag = function() {
            this._embedStr += " />"
        };
        q._closeObjectTag = function() {
            this._objectStr += "</object>"
        };
        q._renderSrc = function() {
            var a = this.model.getCurrentSrc();
            if (a) {
                this._renderAttr("src", a.get("src"))
            }
        };
        q._renderStyleAttr = function() {
            this._objectStr += ' style="' + this._objectStyles.join(";") + ';"';
            this._embedStr += ' style="' + this._embedStyles.join(";") + ';"'
        };
        q.getSourceAttribute = function() {
            return this.getMediaElement().getAttribute("src")
        };
        q._renderOffscreen = function() {
            var b = window.screen.width + 10;
            var h = window.screen.height + 10;
            var d = Math.max(b, h);
            var f = "width:" + d + "px";
            var c = "height:" + d + "px";
            var a = "position:fixed";
            var g = "left:" + b + "px";
            this._embedStyles.push(f);
            this._embedStyles.push(c);
            this._embedStyles.push(a);
            this._embedStyles.push(g);
            this._objectStyles.push(f);
            this._objectStyles.push(c);
            this._objectStyles.push(a);
            this._objectStyles.push(g);
            this._renderStyleAttr()
        };
        q._doneRenderOffscreen = function() {
            var a = z.querySelector("embed", this.el);
            var c = z.querySelector("object", this.el);
            var b = c.style.cssText.toLowerCase().match(/behavior\((.)+\)/);
            if (b) {
                c.setAttribute("style", b)
            } else {
                c.removeAttribute("style")
            }
            if (a) {
                a.removeAttribute("style")
            }
        };
        q._renderString = function() {
            var a = (o.name.toLowerCase() === "ie" && o.version < 9);
            this._objectStr = "<object";
            this._embedStr = "<embed";
            this._objectStyles = [];
            this._embedStyles = [];
            this._renderClsidAttr();
            this._renderCodebaseAttr();
            this._renderID();
            this._renderPostDomEventsAttr();
            this._renderBehaviorAttr();
            if (u) {
                if (!a) {
                    this._renderOffscreen()
                } else {
                    this._renderStyleAttr()
                }
            }
            this._closeOpeningObjectTag();
            this._renderWModeAttr();
            this._renderAutoplay();
            this._renderSrc();
            this._renderVolume();
            this._renderLoop();
            this._renderAttr("enablejavascript", "true");
            this._renderAttr("postdomevents", "true");
            this._renderAttr("scale", "tofit");
            this._renderAttr("controller", "false");
            this._renderEmbedAttr("pluginspage", "www.apple.com/quicktime/download");
            this._renderParamAttr("kioskmode", "true");
            this._renderParamAttr("pluginspace", "http://www.apple.com/qtactivex/qtplugin.cab");
            this._closeEmbedTag();
            this._objectStr += this._embedStr;
            this._closeObjectTag();
            this.el.innerHTML = this._objectStr;
            this._quickTimeEvents = new w(this.getMediaElement(), this);
            this.emitterTrigger("mediaelementchange", {});
            if (u && !a) {
                window.requestAnimationFrame(function() {
                    this._doneRenderOffscreen()
                }.bind(this))
            }
        };
        q.render = function() {
            if (this._hasRendered === true) {
                return
            }
            this._hasRendered = true;
            this._renderString()
        };
        x.exports = p
    }, {
        "./MediaView": 1153,
        "./eventAdapters/QuickTime": 1155,
        "./eventAdapters/quicktimeEventsElement": 1158,
        "ac-browser": 856,
        "ac-dom-traversal": 897,
        "ac-object": 979
    }],
    1155: [function(r, t, o) {
        var k = r("ac-dom-emitter").DOMEmitter;
        var m = r("./QuickTimeTimeUpdate");
        var l = r("./QuickTimePluginReady");
        var q = r("ac-object");

        function p(b, a) {
            k.call(this, b);
            if (this._isObjectTag() === false) {
                this._aliasEvents()
            } else {
                this._plugin = new l(b);
                this._plugin.once("ready", function() {
                    this._plugin = undefined;
                    this._aliasEvents()
                }, this);
                this._plugin.poll()
            }
            this._propagationTarget = a
        }
        var n = p.prototype = q.create(k.prototype);
        n._bubble = function(a) {
            this._propagationTarget.emitterTrigger(a, {
                target: this.el
            })
        };
        n._onTimeupdateObserverTimeUpdate = function() {
            this._bubble("timeupdate")
        };
        n._onQTPlay = function() {
            this._timeupdateObserver.listenForTimeUpdate();
            this._bubble("play")
        };
        n._onQTPause = function() {
            this._timeupdateObserver.stopListenForTimeUpdate();
            this._bubble("pause")
        };
        n._onQTEnded = function() {
            this._timeupdateObserver.stopListenForTimeUpdate();
            this._bubble("ended")
        };
        n._onQTBegin = function() {
            this._bubble("loadstart")
        };
        n._onQTVolumeChange = function() {
            this._bubble("volumechange")
        };
        n._onQTProgressChange = function() {
            this._bubble("progress")
        };
        n._onQTError = function() {
            this._bubble("error")
        };
        n._onQTStalled = function() {
            this._bubble("stalled")
        };
        n._onQTCanPlay = function() {
            this._bubble("canplay")
        };
        n._onQTCanPlayThrough = function() {
            this._bubble("canplaythrough")
        };
        n._onQTDurationChange = function() {
            this._bubble("durationchange")
        };
        n._onQTLoadedMetaData = function() {
            this._bubble("loadedmetadata")
        };
        n._onQTloadedFirstFrame = function() {
            this._bubble("loadeddata")
        };
        n._onQTWaiting = function() {
            this._bubble("waiting")
        };
        n._onQTTimeChanged = function() {
            this._bubbleTimeUpdate()
        };
        n._bubbleTimeUpdate = function() {
            this._bubble("timeupdate")
        };
        n._isObjectTag = function() {
            return (this.el.tagName.toLowerCase() === "object")
        };
        n._getEventName = function(a) {
            if (this._isObjectTag()) {
                return "on" + a
            }
            return a
        };
        n._bindEvents = function(d, a, b) {
            var c = this._getEventName(d);
            if (typeof this.el.attachEvent === "function") {
                this.el.attachEvent(c, function(f) {
                    a.call(b, f)
                })
            } else {
                this.on(d, a, b)
            }
        };
        n._aliasEvents = function() {
            this._bindEvents("qt_play", this._onQTPlay, this);
            this._bindEvents("qt_pause", this._onQTPause, this);
            this._bindEvents("qt_begin", this._onQTBegin, this);
            this._bindEvents("qt_volumechange", this._onQTVolumeChange, this);
            this._bindEvents("qt_progress", this._onQTProgressChange, this);
            this._bindEvents("qt_error", this._onQTError, this);
            this._bindEvents("qt_stalled", this._onQTStalled, this);
            this._bindEvents("qt_canplay", this._onQTCanPlay, this);
            this._bindEvents("qt_canplaythrough", this._onQTCanPlayThrough, this);
            this._bindEvents("qt_durationchange", this._onQTDurationChange, this);
            this._bindEvents("qt_ended", this._onQTEnded, this);
            this._bindEvents("qt_loadedmetadata", this._onQTLoadedMetaData, this);
            this._bindEvents("qt_loadedfirstframe", this._onQTloadedFirstFrame, this);
            this._bindEvents("qt_waiting", this._onQTWaiting, this);
            this._bindEvents("qt_timechanged", this._onQTTimeChanged, this);
            this._timeupdateObserver = new m(this.el);
            this._timeupdateObserver.on("timeupdate", this._onTimeupdateObserverTimeUpdate, this)
        };
        t.exports = p
    }, {
        "./QuickTimePluginReady": 1156,
        "./QuickTimeTimeUpdate": 1157,
        "ac-dom-emitter": 874,
        "ac-object": 979
    }],
    1156: [function(o, n, i) {
        var l = o("ac-event-emitter").EventEmitter;
        var j = o("ac-object");

        function k(a) {
            l.call(this);
            this._movie = a;
            this._pollInterval = 5;
            this._boundPoll = this.poll.bind(this)
        }
        var m = k.prototype = j.create(l.prototype);
        m._resetMovieUrl = function() {
            var b = this._movie;
            var a;
            b.SetResetPropertiesOnReload(false);
            a = b.GetURL();
            b.autoplay = true;
            a += (a.indexOf("?") !== -1) ? "&rnd=" + Math.random() : "?rnd=" + Math.random();
            b.SetURL(a)
        };
        m.getPluginStatus = function() {
            var b = "";
            try {
                b = this._movie.GetPluginStatus()
            } catch (a) {}
            return b
        };
        m.isAPIAvailable = function() {
            var b;
            try {
                this._movie.GetVolume();
                b = true
            } catch (a) {
                b = false
            }
            return b
        };
        m.isReady = function() {
            return /(Complete)/i.test(this.getPluginStatus())
        };
        m._triggerReady = function() {
            this.trigger("ready")
        };
        m.poll = function() {
            if (this.isReady()) {
                this._resetMovieUrl();
                this._triggerReady()
            } else {
                setTimeout(this._boundPoll, this._pollInterval)
            }
        };
        n.exports = k
    }, {
        "ac-event-emitter": 916,
        "ac-object": 979
    }],
    1157: [function(q, o, j) {
        var m = q("ac-event-emitter").EventEmitter;
        var k = q("ac-object");
        var p = 300;

        function l(a) {
            this.mediaElement = a;
            this._isListeningForTimeUpdate = false;
            this._boundTick = null;
            this._lastTimeCheck = 0;
            this._timeout = null
        }
        var n = l.prototype = k.create(m.prototype);
        n.listenForTimeUpdate = function() {
            this._isListeningForTimeUpdate = true;
            this._boundTick = this._tick.bind(this);
            window.setTimeout(this._boundTick, p)
        };
        n.stopListenForTimeUpdate = function() {
            window.clearTimeout(this._timeout);
            this._isListeningForTimeUpdate = false;
            this._boundTick = null;
            this._timeout = null
        };
        n.getCurrentTime = function() {
            return this.mediaElement.GetTime() / this.mediaElement.GetTimeScale()
        };
        n._tick = function() {
            var a = this.getCurrentTime();
            if (a !== this._lastTimeCheck) {
                this.trigger("timeupdate")
            }
            this._lastTimeCheck = a;
            if (this._isListeningForTimeUpdate && this._boundTick) {
                this._timeout = window.setTimeout(this._boundTick, p)
            }
        };
        o.exports = l
    }, {
        "ac-event-emitter": 916,
        "ac-object": 979
    }],
    1158: [function(i, n, j) {
        var o = i("ac-browser");
        var l = function(a, b) {
            if (a !== "IE") {
                return
            }
            this.id = "quicktime-events-element-" + Date.now();
            this.el = document.createElement("object");
            this._setAttributes({
                id: this.getID(),
                wmode: "transparent",
                classid: "clsid:CB927D12-4FF7-4a9e-A169-56E4B8A75598",
                codebase: "http://www.apple.com/qtactivex/qtplugin.cab#version=7,2,1,0"
            });
            this.appendToBody()
        };
        var m = l.prototype;
        m.appendToBody = function() {
            document.write(this.el.outerHTML)
        };
        m.getID = function() {
            return this.id
        };
        m._setAttributes = function(a) {
            for (var b in a) {
                this.el.setAttribute(b, a[b])
            }
        };
        var k = new l(o.name, o.version);
        n.exports = k;
        n.exports.C = l
    }, {
        "ac-browser": 856
    }],
    1159: [function(o, n, j) {
        var k = o("ac-mvc-view").View;
        var i = o("ac-object");

        function m() {
            k.apply(this, arguments)
        }
        var l = m.prototype = i.create(k.prototype);
        l._onModeChange = function(a) {
            this._renderMode()
        };
        l._renderMode = function() {
            var a = this.model.get("mode");
            if (a === "showing") {
                this.el.showTextTrack(this.options.index)
            } else {
                if (a === "hidden") {
                    this.el.hideTextTrack(this.options.index)
                }
            }
        };
        l.render = function() {
            this._renderMode();
            this.model.on("change:mode", this._onModeChange, this)
        };
        n.exports = m
    }, {
        "ac-mvc-view": 976,
        "ac-object": 979
    }],
    1160: [function(o, m, j) {
        var k = o("ac-mvc-view").View;
        var i = o("ac-object");

        function n() {
            k.apply(this, arguments)
        }
        var l = n.prototype = i.create(k.prototype);
        l._onModeChange = function(a) {
            this.renderMode()
        };
        l.renderMode = function() {
            var a = this.model.get("mode");
            this.el.mode = a
        };
        l.render = function() {
            this.model.on("change:mode", this._onModeChange, this)
        };
        m.exports = n
    }, {
        "ac-mvc-view": 976,
        "ac-object": 979
    }],
    1161: [function(n, m, i) {
        var k = n("ac-mvc-view").View;
        var o = n("ac-object");

        function j() {
            k.apply(this, arguments)
        }
        var l = j.prototype = o.create(k.prototype);
        l.tagName = "track";
        l.render = function() {
            ["src", "type", "label", "kind", "srclang"].forEach(function(a) {
                if (this.model.has(a)) {
                    this.el.setAttribute(a, this.model.get(a))
                }
            }, this);
            this.el.setAttribute("id", this.model.cid)
        };
        m.exports = j
    }, {
        "ac-mvc-view": 976,
        "ac-object": 979
    }],
    1162: [function(p, o, j) {
        var m = p("ac-mvc-view").View;
        var l = p("./TextTrackTag");
        var q = p("ac-object");

        function k() {
            m.apply(this, arguments);
            this._textTracks = this.el.textTracks;
            if (this._textTracks) {
                this._boundRespondToAddTrackEvent = this._respondToAddTrackEvent.bind(this);
                this._boundRespondToChangeEvent = this._respondToChangeEvent.bind(this);
                this._boundRespondToRemoveTrackEvent = this._respondToRemoveTrackEvent.bind(this);
                this._textTracks.addEventListener("addtrack", this._boundRespondToAddTrackEvent);
                this._textTracks.addEventListener("change", this._boundRespondToChangeEvent);
                this._textTracks.addEventListener("removetrack", this._boundRespondToRemoveTrackEvent)
            }
        }
        var n = k.prototype = q.create(m.prototype);
        n._unbindTextTrackEvents = function() {
            this._boundRespondToAddTrackEvent = null;
            this._boundRespondToChangeEvent = null;
            this._boundRespondToRemoveTrackEvent = null;
            this._textTracks.removeEventListener("addtrack", this._boundRespondToAddTrackEvent);
            this._textTracks.removeEventListener("change", this._boundRespondToChangeEvent);
            this._textTracks.removeEventListener("removetrack", this._boundRespondToRemoveTrackEvent)
        };
        n._respondToAddTrackEvent = function(a) {
            this.emitterTrigger("addtrack", {
                track: a.track
            })
        };
        n._respondToChangeEvent = function(a) {
            this.emitterTrigger("change", a)
        };
        n._respondToRemoveTrackEvent = function(a) {
            this.emitterTrigger("removetrack", {
                track: a.track
            })
        };
        n._createTextTrackTag = function(b) {
            var a = new l({
                model: b
            });
            a.render();
            a.appendTo(this.el)
        };
        n.addTextTrackTag = function(a) {
            this._createTextTrackTag(a)
        };
        o.exports = k
    }, {
        "./TextTrackTag": 1161,
        "ac-mvc-view": 976,
        "ac-object": 979
    }],
    1163: [function(o, n, j) {
        var k = o("ac-mvc-view").View;
        var i = o("ac-object");

        function m() {
            k.apply(this, arguments)
        }
        var l = m.prototype = i.create(k.prototype);
        l._onModeChange = function(a) {
            this._renderMode()
        };
        l._renderMode = function() {
            var a = this.model.get("mode");
            if (a === "showing") {
                this.el.webkitClosedCaptionsVisible = true
            } else {
                this.el.webkitClosedCaptionsVisible = false
            }
        };
        l.setModel = function(a) {
            if (this.model) {
                this.model.off("change:mode", this._onModeChange, this)
            }
            this.model = a;
            this.listen()
        };
        l.listen = function() {
            this.model.on("change:mode", this._onModeChange, this)
        };
        l.render = function() {
            this._renderMode();
            this.listen()
        };
        n.exports = m
    }, {
        "ac-mvc-view": 976,
        "ac-object": 979
    }],
    1164: [function(d, g, f) {
        g.exports = d("ac-video-player")
    }, {
        "ac-video-player": 1122
    }],
    1165: [function(d, g, f) {
        arguments[4][1011][0].apply(f, arguments)
    }, {
        dup: 1011
    }],
    1166: [function(d, g, f) {
        arguments[4][41][0].apply(f, arguments)
    }, {
        "./ac-dom-traversal/ancestor": 1167,
        "./ac-dom-traversal/ancestors": 1168,
        "./ac-dom-traversal/children": 1169,
        "./ac-dom-traversal/filterBySelector": 1170,
        "./ac-dom-traversal/firstChild": 1171,
        "./ac-dom-traversal/lastChild": 1174,
        "./ac-dom-traversal/matchesSelector": 1175,
        "./ac-dom-traversal/nextSibling": 1176,
        "./ac-dom-traversal/nextSiblings": 1177,
        "./ac-dom-traversal/previousSibling": 1178,
        "./ac-dom-traversal/previousSiblings": 1179,
        "./ac-dom-traversal/querySelector": 1180,
        "./ac-dom-traversal/querySelectorAll": 1181,
        "./ac-dom-traversal/shims/ie": 1182,
        "./ac-dom-traversal/siblings": 1183,
        dup: 41
    }],
    1167: [function(d, g, f) {
        arguments[4][42][0].apply(f, arguments)
    }, {
        "./helpers/validate": 1173,
        "./matchesSelector": 1175,
        "ac-dom-nodes": 102,
        dup: 42
    }],
    1168: [function(d, g, f) {
        arguments[4][43][0].apply(f, arguments)
    }, {
        "./helpers/validate": 1173,
        "./matchesSelector": 1175,
        "ac-dom-nodes": 102,
        dup: 43
    }],
    1169: [function(d, g, f) {
        arguments[4][44][0].apply(f, arguments)
    }, {
        "./filterBySelector": 1170,
        "./helpers/validate": 1173,
        "ac-dom-nodes": 102,
        dup: 44
    }],
    1170: [function(d, g, f) {
        arguments[4][45][0].apply(f, arguments)
    }, {
        "./helpers/validate": 1173,
        "./matchesSelector": 1175,
        dup: 45
    }],
    1171: [function(d, g, f) {
        arguments[4][46][0].apply(f, arguments)
    }, {
        "./children": 1169,
        "./helpers/validate": 1173,
        dup: 46
    }],
    1172: [function(d, g, f) {
        arguments[4][47][0].apply(f, arguments)
    }, {
        dup: 47
    }],
    1173: [function(d, g, f) {
        arguments[4][48][0].apply(f, arguments)
    }, {
        "ac-dom-nodes": 102,
        dup: 48
    }],
    1174: [function(d, g, f) {
        arguments[4][49][0].apply(f, arguments)
    }, {
        "./children": 1169,
        "./helpers/validate": 1173,
        dup: 49
    }],
    1175: [function(d, g, f) {
        arguments[4][50][0].apply(f, arguments)
    }, {
        "./helpers/nativeMatches": 1172,
        "./helpers/validate": 1173,
        "ac-dom-nodes": 102,
        dup: 50
    }],
    1176: [function(d, g, f) {
        arguments[4][51][0].apply(f, arguments)
    }, {
        "./helpers/validate": 1173,
        "./matchesSelector": 1175,
        "ac-dom-nodes": 102,
        dup: 51
    }],
    1177: [function(d, g, f) {
        arguments[4][52][0].apply(f, arguments)
    }, {
        "./helpers/validate": 1173,
        "./matchesSelector": 1175,
        "ac-dom-nodes": 102,
        dup: 52
    }],
    1178: [function(d, g, f) {
        arguments[4][53][0].apply(f, arguments)
    }, {
        "./helpers/validate": 1173,
        "./matchesSelector": 1175,
        "ac-dom-nodes": 102,
        dup: 53
    }],
    1179: [function(d, g, f) {
        arguments[4][54][0].apply(f, arguments)
    }, {
        "./helpers/validate": 1173,
        "./matchesSelector": 1175,
        "ac-dom-nodes": 102,
        dup: 54
    }],
    1180: [function(d, g, f) {
        arguments[4][55][0].apply(f, arguments)
    }, {
        "./helpers/validate": 1173,
        dup: 55
    }],
    1181: [function(d, g, f) {
        arguments[4][56][0].apply(f, arguments)
    }, {
        "./helpers/validate": 1173,
        dup: 56
    }],
    1182: [function(d, g, f) {
        arguments[4][57][0].apply(f, arguments)
    }, {
        "../helpers/nativeMatches": 1172,
        "../helpers/validate": 1173,
        "../vendor/sizzle/sizzle": 1184,
        "ac-dom-nodes": 102,
        dup: 57
    }],
    1183: [function(d, g, f) {
        arguments[4][58][0].apply(f, arguments)
    }, {
        "./children": 1169,
        "./helpers/validate": 1173,
        dup: 58
    }],
    1184: [function(d, g, f) {
        arguments[4][59][0].apply(f, arguments)
    }, {
        dup: 59
    }],
    1185: [function(d, g, f) {
        g.exports = {
            DOMEmitter: d("./ac-dom-emitter/DOMEmitter")
        }
    }, {
        "./ac-dom-emitter/DOMEmitter": 1186
    }],
    1186: [function(q, r, p) {
        var o;
        var k = q("ac-event-emitter").EventEmitter,
            n = q("ac-dom-events"),
            t = q("ac-dom-traversal");
        var l = "dom-emitter";

        function m(a) {
            if (a === null) {
                return
            }
            this.el = a;
            this._bindings = {};
            this._delegateFuncs = {};
            this._eventEmitter = new k()
        }
        o = m.prototype;
        o._parseEventNames = function(a) {
            if (!a) {
                return [a]
            }
            return a.split(" ")
        };
        o._onListenerEvent = function(a, b) {
            this.trigger(a, b, false)
        };
        o._setListener = function(a) {
            this._bindings[a] = this._onListenerEvent.bind(this, a);
            n.addEventListener(this.el, a, this._bindings[a])
        };
        o._removeListener = function(a) {
            n.removeEventListener(this.el, a, this._bindings[a]);
            this._bindings[a] = null
        };
        o._triggerInternalEvent = function(b, a) {
            this.trigger(l + ":" + b, a)
        };
        o._normalizeArgumentsAndCall = function(c, a) {
            var d = {};
            if (c.length === 0) {
                a.call(this, d);
                return
            }
            if (typeof c[0] === "string" || c[0] === null) {
                c = this._cleanStringData(c);
                d.events = c[0];
                if (typeof c[1] === "string") {
                    d.delegateQuery = c[1];
                    d.callback = c[2];
                    d.context = c[3]
                } else {
                    d.callback = c[1];
                    d.context = c[2]
                }
                a.call(this, d);
                return
            }
            var b, g, f = ":",
                h = c[0];
            for (b in h) {
                if (h.hasOwnProperty(b)) {
                    d = {};
                    g = this._cleanStringData(b.split(f));
                    d.events = g[0];
                    d.delegateQuery = g[1];
                    d.callback = h[b];
                    d.context = c[1];
                    a.call(this, d)
                }
            }
        };
        o._registerDelegateFunc = function(a, f, d, c, g) {
            var b = this._delegateFunc.bind(this, a, f, d, g);
            this._delegateFuncs[f] = this._delegateFuncs[f] || {};
            this._delegateFuncs[f][a] = this._delegateFuncs[f][a] || [];
            this._delegateFuncs[f][a].push({
                func: c,
                context: g,
                delegateFunc: b
            });
            return b
        };
        o._cleanStringData = function(i) {
            var a = false;
            if (typeof i === "string") {
                i = [i];
                a = true
            }
            var b = [],
                g, d, f, h, c = i.length;
            for (g = 0; g < c; g++) {
                d = i[g];
                if (typeof d === "string") {
                    if (d === "" || d === " ") {
                        continue
                    }
                    f = d.length;
                    while (d[0] === " ") {
                        d = d.slice(1, f);
                        f--
                    }
                    while (d[f - 1] === " ") {
                        d = d.slice(0, f - 1);
                        f--
                    }
                }
                b.push(d)
            }
            if (a) {
                return b[0]
            }
            return b
        };
        o._unregisterDelegateFunc = function(a, d, c, f) {
            if (!this._delegateFuncs[d] || !this._delegateFuncs[d][a]) {
                return
            }
            var g = this._getDelegateFuncBindingIdx(a, d, c, f),
                b;
            if (g > -1) {
                b = this._delegateFuncs[d][a][g].delegateFunc;
                this._delegateFuncs[d][a].splice(g, 1);
                if (this._delegateFuncs[d][a].length === 0) {
                    this._delegateFuncs[d][a] = null
                }
            }
            return b
        };
        o._unregisterDelegateFuncs = function(c, a) {
            if (!this._delegateFuncs[a]) {
                return
            }
            if (c !== null && !this._delegateFuncs[a][c]) {
                return
            }
            if (c === null) {
                var b;
                for (b in this._delegateFuncs[a]) {
                    if (this._delegateFuncs[a].hasOwnProperty(b)) {
                        this._unbindDelegateFunc(b, a)
                    }
                }
                return
            }
            this._unbindDelegateFunc(c, a)
        };
        o._unbindDelegateFunc = function(c, a) {
            var f, d, b = 0;
            while (this._delegateFuncs[a][c] && this._delegateFuncs[a][c][b]) {
                f = this._delegateFuncs[a][c][b];
                d = this._delegateFuncs[a][c][b].length;
                this._off({
                    events: c,
                    delegateQuery: a,
                    callback: f.func,
                    context: f.context
                });
                if (this._delegateFuncs[a][c] && d === this._delegateFuncs[a][c].length) {
                    b++
                }
            }
            f = d = null
        };
        o._unregisterDelegateFuncsByEvent = function(b) {
            var a;
            for (a in this._delegateFuncs) {
                if (this._delegateFuncs.hasOwnProperty(a)) {
                    this._unregisterDelegateFuncs(b, a)
                }
            }
        };
        o._delegateFunc = function(c, g, d, a, f) {
            if (t.matchesSelector(n.target(f), g)) {
                var b = Array.prototype.slice.call(arguments, 0),
                    h = b.slice(4, b.length);
                a = a || window;
                if (typeof f.detail === "object") {
                    h[0] = f.detail
                }
                d.call(a, h)
            }
        };
        o.on = function() {
            this._normalizeArgumentsAndCall(Array.prototype.slice.call(arguments, 0), this._on);
            return this
        };
        o.once = function() {
            this._normalizeArgumentsAndCall(Array.prototype.slice.call(arguments, 0), this._once);
            return this
        };
        o.off = function() {
            this._normalizeArgumentsAndCall(Array.prototype.slice.call(arguments, 0), this._off);
            return this
        };
        o._on = function(f) {
            var b = f.events,
                d = f.callback,
                g = f.delegateQuery,
                a = f.context,
                c = f.unboundCallback || d;
            b = this._parseEventNames(b);
            b.forEach(function(h, x, j, i, w) {
                if (!this.has(w)) {
                    this._setListener(w)
                }
                if (typeof i === "string") {
                    h = this._registerDelegateFunc(w, i, h, x, j)
                }
                this._triggerInternalEvent("willon", {
                    evt: w,
                    callback: h,
                    context: j,
                    delegateQuery: i
                });
                this._eventEmitter.on(w, h, j);
                this._triggerInternalEvent("didon", {
                    evt: w,
                    callback: h,
                    context: j,
                    delegateQuery: i
                })
            }.bind(this, d, c, a, g));
            b = d = c = g = a = null
        };
        o._off = function(f) {
            var b = f.events,
                d = f.callback,
                g = f.delegateQuery,
                h = f.context,
                c = f.unboundCallback || d;
            if (typeof b === "undefined") {
                this._eventEmitter.off();
                var a;
                for (a in this._bindings) {
                    if (this._bindings.hasOwnProperty(a)) {
                        this._removeListener(a)
                    }
                }
                for (a in this._delegateFuncs) {
                    if (this._delegateFuncs.hasOwnProperty(a)) {
                        this._delegateFuncs[a] = null
                    }
                }
                return
            }
            b = this._parseEventNames(b);
            b.forEach(function(i, z, x, j, y) {
                if (typeof j === "string" && typeof z === "function") {
                    i = this._unregisterDelegateFunc(y, j, z, x);
                    if (!i) {
                        return
                    }
                }
                if (typeof j === "string" && typeof i === "undefined") {
                    this._unregisterDelegateFuncs(y, j);
                    return
                }
                if (typeof y === "string" && typeof i === "undefined") {
                    this._unregisterDelegateFuncsByEvent(y);
                    if (typeof j === "string") {
                        return
                    }
                }
                this._triggerInternalEvent("willoff", {
                    evt: y,
                    callback: i,
                    context: x,
                    delegateQuery: j
                });
                this._eventEmitter.off(y, i, x);
                this._triggerInternalEvent("didoff", {
                    evt: y,
                    callback: i,
                    context: x,
                    delegateQuery: j
                });
                if (!this.has(y)) {
                    this._removeListener(y)
                }
            }.bind(this, d, c, h, g));
            b = d = c = g = h = null
        };
        o._once = function(f) {
            var c = f.events,
                d = f.callback,
                a = f.delegateQuery,
                b = f.context;
            c = this._parseEventNames(c);
            c.forEach(function(g, i, h, j) {
                if (typeof h === "string") {
                    return this._handleDelegateOnce(j, g, i, h)
                }
                if (!this.has(j)) {
                    this._setListener(j)
                }
                this._triggerInternalEvent("willonce", {
                    evt: j,
                    callback: g,
                    context: i,
                    delegateQuery: h
                });
                this._eventEmitter.once.call(this, j, g, i);
                this._triggerInternalEvent("didonce", {
                    evt: j,
                    callback: g,
                    context: i,
                    delegateQuery: h
                })
            }.bind(this, d, b, a));
            c = d = a = b = null
        };
        o._handleDelegateOnce = function(c, d, b, a) {
            this._triggerInternalEvent("willonce", {
                evt: c,
                callback: d,
                context: b,
                delegateQuery: a
            });
            this._on({
                events: c,
                context: b,
                delegateQuery: a,
                callback: this._getDelegateOnceCallback.bind(this, c, d, b, a),
                unboundCallback: d
            });
            this._triggerInternalEvent("didonce", {
                evt: c,
                callback: d,
                context: b,
                delegateQuery: a
            });
            return this
        };
        o._getDelegateOnceCallback = function(c, d, a, f) {
            var b = Array.prototype.slice.call(arguments, 0),
                g = b.slice(4, b.length);
            d.apply(a, g);
            this._off({
                events: c,
                delegateQuery: f,
                callback: d,
                context: a
            })
        };
        o._getDelegateFuncBindingIdx = function(a, d, g, i, j) {
            var b = -1;
            if (this._delegateFuncs[d] && this._delegateFuncs[d][a]) {
                var f, h, c = this._delegateFuncs[d][a].length;
                for (f = 0; f < c; f++) {
                    h = this._delegateFuncs[d][a][f];
                    if (j && typeof g === "undefined") {
                        g = h.func
                    }
                    if (h.func === g && h.context === i) {
                        b = f;
                        break
                    }
                }
            }
            return b
        };
        o._triggerDelegateEvents = function(i, g, f) {
            var a = t.querySelectorAll(g, this.el);
            var h, d, c = a.length;
            for (h = 0; h < c; h++) {
                d = a[h];
                if (document.createEvent) {
                    d.dispatchEvent(new CustomEvent(i, {
                        bubbles: true,
                        cancelable: false,
                        detail: f
                    }))
                } else {
                    var b = document.createEventObject();
                    b.detail = f;
                    d.fireEvent("on" + i, b)
                }
                return d
            }
        };
        o.has = function(c, f, g, a) {
            var h, d;
            if (typeof f === "string") {
                h = f;
                d = g
            } else {
                d = f;
                a = g
            }
            if (h) {
                var b = this._getDelegateFuncBindingIdx(c, h, d, a, true);
                if (b > -1) {
                    return true
                }
                return false
            }
            if (this._eventEmitter && this._eventEmitter.has.apply(this._eventEmitter, arguments)) {
                return true
            }
            return false
        };
        o.trigger = function(b, c, a, d) {
            b = this._parseEventNames(b);
            var g, f;
            if (typeof c === "string") {
                g = this._cleanStringData(c);
                f = a
            } else {
                f = c;
                d = a
            }
            b = this._cleanStringData(b);
            b.forEach(function(j, i, h, v) {
                if (j) {
                    this._triggerDelegateEvents(v, j, i);
                    return
                }
                this._eventEmitter.trigger(v, i, h)
            }.bind(this, g, f, d));
            return this
        };
        o.propagateTo = function(b, a) {
            this._eventEmitter.propagateTo(b, a);
            return this
        };
        o.stopPropagatingTo = function(a) {
            this._eventEmitter.stopPropagatingTo(a);
            return this
        };
        o.destroy = function() {
            this._triggerInternalEvent("willdestroy");
            this.off();
            this.el = this._eventEmitter = this._bindings = this._delegateFuncs = null
        };
        r.exports = m
    }, {
        "ac-dom-events": 1165,
        "ac-dom-traversal": 1166,
        "ac-event-emitter": 1187
    }],
    1187: [function(d, g, f) {
        arguments[4][20][0].apply(f, arguments)
    }, {
        "./ac-event-emitter/EventEmitter": 1188,
        dup: 20
    }],
    1188: [function(d, g, f) {
        arguments[4][21][0].apply(f, arguments)
    }, {
        dup: 21
    }],
    1189: [function(d, g, f) {
        arguments[4][467][0].apply(f, arguments)
    }, {
        "./ac-shared-instance/SharedInstance": 1190,
        dup: 467
    }],
    1190: [function(d, g, f) {
        arguments[4][468][0].apply(f, arguments)
    }, {
        dup: 468
    }],
    1191: [function(d, g, f) {
        g.exports = {
            WindowDelegate: d("./ac-window-delegate/WindowDelegate"),
            WindowDelegateOptimizer: d("./ac-window-delegate/WindowDelegateOptimizer"),
            WindowDelegateCustomEvent: d("./ac-window-delegate/WindowDelegateCustomEvent")
        }
    }, {
        "./ac-window-delegate/WindowDelegate": 1194,
        "./ac-window-delegate/WindowDelegateCustomEvent": 1195,
        "./ac-window-delegate/WindowDelegateOptimizer": 1196
    }],
    1192: [function(h, m, i) {
        var k = h("ac-event-emitter").EventEmitter;
        var j = function() {
            this._emitter = new k();
            this._customEvents = {}
        };
        var l = j.prototype;
        l.on = function(c, a, b) {
            this._activateCustomEvents(c);
            this._emitterOn.apply(this, arguments);
            return this
        };
        l.once = function(c, a, b) {
            this._emitterOnce.apply(this, arguments);
            return this
        };
        l.off = function(c, a, b) {
            this._emitterOff.apply(this, arguments);
            this._deactivateCustomEvents(c);
            return this
        };
        l.has = function(c, a, b) {
            return this._emitter.has.apply(this._emitter, arguments)
        };
        l.trigger = function() {
            this._emitter.trigger.apply(this._emitter, arguments);
            return this
        };
        l.propagateTo = function() {
            this._emitter.propagateTo.apply(this._emitter, arguments);
            return this
        };
        l.stopPropagatingTo = function() {
            this._emitter.stopPropagatingTo.apply(this._emitter, arguments);
            return this
        };
        l.add = function(a) {
            this._customEvents[a.name] = a
        };
        l.canHandleCustomEvent = function(a) {
            return this._customEvents.hasOwnProperty(a)
        };
        l.isHandlingCustomEvent = function(a) {
            if (this._customEvents[a] && this._customEvents[a].active) {
                return true
            }
            return false
        };
        l._activateCustomEvents = function(b) {
            var d = b.split(" "),
                c, a, f = d.length;
            for (a = 0; a < f; a++) {
                c = d[a];
                if (this._customEvents[c] && !this._customEvents[c].active) {
                    this._customEvents[c].initialize();
                    this._customEvents[c].active = true
                }
            }
        };
        l._deactivateCustomEvents = function(b) {
            var a;
            if (!b || b.length === 0) {
                for (a in this._customEvents) {
                    if (this._customEvents.hasOwnProperty(a)) {
                        this._deactivateCustomEvent(a)
                    }
                }
                return
            }
            var c = b.split(" "),
                d = c.length;
            for (a = 0; a < d; a++) {
                this._deactivateCustomEvent(c[a])
            }
        };
        l._deactivateCustomEvent = function(a) {
            if (!this.has(a) && this._customEvents[a] && this._customEvents[a].active) {
                this._customEvents[a].deinitialize();
                this._customEvents[a].active = false
            }
        };
        l._emitterOn = function() {
            this._emitter.on.apply(this._emitter, arguments)
        };
        l._emitterOnce = function() {
            this._emitter.once.apply(this._emitter, arguments)
        };
        l._emitterOff = function() {
            this._emitter.off.apply(this._emitter, arguments)
        };
        m.exports = j
    }, {
        "ac-event-emitter": 1187
    }],
    1193: [function(h, m, i) {
        var j = h("ac-event-emitter").EventEmitter;
        var k;
        var l = function(a) {
            j.call(this);
            this.optimizers = a;
            this._events = {};
            this._properties = {};
            this._initialize()
        };
        k = l.prototype = new j(null);
        k.canOptimizeEvent = function(a) {
            return this._events.hasOwnProperty(a)
        };
        k.canOptimizeProperty = function(a) {
            return this._properties.hasOwnProperty(a)
        };
        k.isOptimizingEvent = function(a) {
            if (this._events[a] && this._events[a].active) {
                return true
            }
            return false
        };
        k.isOptimizingProperty = function(a) {
            if (this._properties[a] && this._properties[a].active) {
                return true
            }
            return false
        };
        k.add = function(a) {
            this._setOptimizerEvents(a);
            this._setOptimizerProperties(a);
            a.on("update", this._onUpdate, this);
            a.on("activate", this._onActivate, this);
            a.on("deactivate", this._onDeactivate, this)
        };
        k.get = function(a) {
            if (this.isOptimizingProperty(a)) {
                return this._properties[a].value
            }
            return null
        };
        k.set = function(a, b) {
            if (!this._properties[a]) {
                return false
            }
            this._properties[a].value = b;
            return this
        };
        k.getOptimizerByEvent = function(a) {
            if (this._events[a]) {
                return this._events[a]
            }
            return null
        };
        k._initialize = function() {
            var a, b;
            for (a in this.optimizers) {
                if (this.optimizers.hasOwnProperty(a)) {
                    this.add(this.optimizers[a])
                }
            }
        };
        k._onUpdate = function(a) {
            this.set(a.prop, a.val)
        };
        k._onActivate = function(c) {
            var b = c.propertyNames,
                a, d = b.length;
            for (a = 0; a < d; a++) {
                this._properties[b[a]].active = true
            }
        };
        k._onDeactivate = function(c) {
            var b = c.propertyNames,
                a, d = b.length;
            for (a = 0; a < d; a++) {
                this._properties[b[a]].active = false
            }
        };
        k._setOptimizerEvents = function(c) {
            var a, b = c.eventNames,
                d = b.length;
            for (a = 0; a < d; a++) {
                this._setOptimizerEvent(b[a], c)
            }
        };
        k._setOptimizerEvent = function(a, b) {
            if (this._events[a]) {
                return
            }
            this._events[a] = b
        };
        k._setOptimizerProperties = function(b) {
            var a, c = b.propertyNames,
                d = c.length;
            for (a = 0; a < d; a++) {
                this._setOptimizerProperty(c[a])
            }
        };
        k._setOptimizerProperty = function(a) {
            if (this._properties.hasOwnProperty(a)) {
                return
            }
            this._properties[a] = {};
            this._properties[a].active = false;
            this._properties[a].value = null
        };
        m.exports = l
    }, {
        "ac-event-emitter": 1187
    }],
    1194: [function(y, A, w) {
        var u;
        var z = y("ac-shared-instance").SharedInstance,
            q = y("ac-dom-emitter").DOMEmitter,
            t = y("./OptimizerController"),
            x = y("./CustomEventController"),
            v = y("./queries/queries"),
            p = y("./optimizers/optimizers");
        var r = "ac-window-delegate:WindowDelegate",
            B = "2.0.1";

        function o() {
            this._emitter = new q(window);
            this._controllers = {
                optimizer: new t(p),
                customEvent: new x()
            };
            var a;
            for (a in v) {
                if (v.hasOwnProperty(a)) {
                    this[a] = this._getProperty.bind(this, a);
                    v[a] = v[a].bind(this)
                }
            }
            this._bindEvents()
        }
        u = o.prototype;
        u.on = function(d, a, c) {
            var b = this._seperateCustomEvents(d);
            this._optimizeEvents(b.standardEvents);
            this._customEventOn(b.customEvents, a, c);
            this._emitterOn.apply(this, arguments);
            return this
        };
        u.once = function(d, a, c) {
            var b = this._seperateCustomEvents(d);
            this._optimizeEvents(b.standardEvents);
            this._customEventOnce(b.customEvents, a, c);
            this._emitterOnce.apply(this, arguments);
            return this
        };
        u.off = function(g, a, f) {
            var b = this._seperateCustomEvents(g),
                d = false;
            if (!g) {
                d = true
            }
            this._customEventOff(b.customEvents, a, f, d);
            this._emitterOff.apply(this, arguments);
            if (d) {
                try {
                    var h;
                    for (h in this._controllers.optimizer._events) {
                        if (this._controllers.optimizer._events.hasOwnProperty(h) && this._shouldDeoptimizeEvent(h, true)) {
                            this._deoptimizeEvent(h)
                        }
                    }
                    this._bindEvents()
                } catch (c) {}
            }
            return this
        };
        u.has = function(c, a, b) {
            return this._emitter.has.apply(this._emitter, arguments)
        };
        u.trigger = function() {
            this._emitter.trigger.apply(this._emitter, arguments);
            return this
        };
        u.propagateTo = function() {
            this._emitter.propagateTo.apply(this._emitter, arguments);
            return this
        };
        u.stopPropagatingTo = function() {
            this._emitter.stopPropagatingTo.apply(this._emitter, arguments);
            return this
        };
        u.addOptimizer = function(a) {
            this._controllers.optimizer.add(a);
            return this
        };
        u.addCustomEvent = function(a) {
            this._controllers.customEvent.add(a);
            return this
        };
        u._emitterOn = function() {
            this._emitter.on.apply(this._emitter, arguments)
        };
        u._emitterOnce = function() {
            this._emitter.once.apply(this._emitter, arguments)
        };
        u._emitterOff = function() {
            this._emitter.off.apply(this._emitter, arguments)
        };
        u._onEventUnbound = function(a) {
            var b = a.evt;
            if (this._shouldDeoptimizeEvent(b)) {
                this._deoptimizeEvent(b)
            }
        };
        u._customEventOn = function(c, a, b) {
            if (c.length === 0) {
                return
            }
            this._controllers.customEvent.on(c.join(" "), a, b)
        };
        u._customEventOnce = function(c, a, b) {
            if (c.length === 0) {
                return
            }
            this._controllers.customEvent.once(c.join(" "), a, b)
        };
        u._customEventOff = function(d, a, c, b) {
            if (!b && d.length === 0) {
                return
            }
            if (b && d.length === 0) {
                this._controllers.customEvent.off();
                return
            }
            this._controllers.customEvent.off(d.join(" "), a, c)
        };
        u._getProperty = function(a, c) {
            var b = null;
            if (!c) {
                b = this._getOptimizedValue(a)
            }
            if (b === null) {
                b = v[a].call(this, c)
            }
            return b
        };
        u._optimizeEvents = function(b) {
            var c, a, d = b.length;
            for (a = 0; a < d; a++) {
                c = b[a];
                if (this._shouldOptimizeEvent(c)) {
                    this._optimizeEvent(c)
                }
            }
        };
        u._shouldOptimizeEvent = function(a) {
            if (this._controllers.optimizer.canOptimizeEvent(a) && !this._controllers.optimizer.isOptimizingEvent(a)) {
                return true
            }
            return false
        };
        u._shouldDeoptimizeEvent = function(b, a) {
            if (this._controllers.optimizer.isOptimizingEvent(b) && (a || this._emitter._eventEmitter._events[b].length <= 1)) {
                return true
            }
            return false
        };
        u._optimizeEvent = function(a) {
            var b = this._controllers.optimizer.getOptimizerByEvent(a);
            b.activate();
            this._emitterOn(a, b.callback, b)
        };
        u._deoptimizeEvent = function(a) {
            var b = this._controllers.optimizer.getOptimizerByEvent(a);
            b.deactivate();
            this._emitterOff(a, b.callback, b)
        };
        u._getOptimizedValue = function(a) {
            return this._controllers.optimizer.get(a)
        };
        u._seperateCustomEvents = function(b) {
            var f = {
                customEvents: [],
                standardEvents: []
            };
            if (typeof b === "string") {
                var a = b.split(" "),
                    d, c, g = a.length;
                for (c = 0; c < g; c++) {
                    d = a[c];
                    if (this._controllers.customEvent.canHandleCustomEvent(d)) {
                        f.customEvents.push(d)
                    } else {
                        f.standardEvents.push(d)
                    }
                }
            }
            return f
        };
        u._bindEvents = function() {
            this._emitter.on("dom-emitter:didoff", this._onEventUnbound, this)
        };
        A.exports = z.share(r, B, o)
    }, {
        "./CustomEventController": 1192,
        "./OptimizerController": 1193,
        "./optimizers/optimizers": 1199,
        "./queries/queries": 1208,
        "ac-dom-emitter": 1185,
        "ac-shared-instance": 1189
    }],
    1195: [function(m, l, i) {
        var j = m("ac-event-emitter").EventEmitter;

        function h(c, a, b) {
            j.call(this);
            this.name = c;
            this.active = false;
            this._initializeFunc = a;
            this._deinitializeFunc = b
        }
        var k = h.prototype = new j(null);
        k.initialize = function() {
            if (this._initializeFunc) {
                this._initializeFunc()
            }
            return this
        };
        k.deinitialize = function() {
            if (this._deinitializeFunc) {
                this._deinitializeFunc()
            }
            return this
        };
        l.exports = h
    }, {
        "ac-event-emitter": 1187
    }],
    1196: [function(m, l, h) {
        var j = m("ac-event-emitter").EventEmitter;

        function i(b, a) {
            j.call(this);
            this.active = false;
            this.eventNames = b.eventNames;
            this.propertyNames = b.propertyNames;
            this.options = b.options || {};
            this.callback = a
        }
        var k = i.prototype = new j(null);
        k.update = function(a, b) {
            this.trigger("update", {
                prop: a,
                val: b
            })
        };
        k.activate = function() {
            this.active = true;
            this.trigger("activate", this)
        };
        k.deactivate = function() {
            this.active = false;
            this.trigger("deactivate", this)
        };
        l.exports = i
    }, {
        "ac-event-emitter": 1187
    }],
    1197: [function(m, l, i) {
        var j = m("../../WindowDelegateOptimizer"),
            n = m("../../queries/queries");
        var o = {
            eventNames: ["resize"],
            propertyNames: ["clientWidth", "clientHeight", "innerWidth", "innerHeight"]
        };
        var k = new j(o, function(a) {
            var b, c = o.propertyNames,
                d = c.length;
            for (b = 0; b < d; b++) {
                this.update(c[b], n[c[b]](true))
            }
        });
        l.exports = k
    }, {
        "../../WindowDelegateOptimizer": 1196,
        "../../queries/queries": 1208
    }],
    1198: [function(l, k, i) {
        var j = l("../../WindowDelegateOptimizer"),
            m = l("../../queries/queries");
        var n = {
            eventNames: ["scroll"],
            propertyNames: ["scrollX", "scrollY", "maxScrollX", "maxScrollY"]
        };
        var o = new j(n, function(a) {
            var b, c = n.propertyNames,
                d = c.length;
            for (b = 0; b < d; b++) {
                this.update(c[b], m[c[b]](true))
            }
        });
        k.exports = o
    }, {
        "../../WindowDelegateOptimizer": 1196,
        "../../queries/queries": 1208
    }],
    1199: [function(j, i, g) {
        var k = j("./events/resize"),
            h = j("./events/scroll");
        i.exports = [k, h]
    }, {
        "./events/resize": 1197,
        "./events/scroll": 1198
    }],
    1200: [function(f, i, g) {
        var h = function(a) {
            return document.documentElement.clientHeight
        };
        i.exports = h
    }, {}],
    1201: [function(f, i, g) {
        var h = function(a) {
            return document.documentElement.clientWidth
        };
        i.exports = h
    }, {}],
    1202: [function(f, h, g) {
        var i = function(a) {
            return window.innerHeight || this.clientHeight(a)
        };
        h.exports = i
    }, {}],
    1203: [function(f, i, g) {
        var h = function(a) {
            return window.innerWidth || this.clientWidth(a)
        };
        i.exports = h
    }, {}],
    1204: [function(i, h, g) {
        var f = function(a) {
            return document.body.scrollWidth - this.innerWidth()
        };
        h.exports = f
    }, {}],
    1205: [function(i, h, f) {
        var g = function(a) {
            return document.body.scrollHeight - this.innerHeight()
        };
        h.exports = g
    }, {}],
    1206: [function(f, i, g) {
        var h = function(c) {
            var a = window.pageXOffset;
            if (!a) {
                var b = document.documentElement || document.body.parentNode || document.body;
                a = b.scrollLeft
            }
            return a
        };
        i.exports = h
    }, {}],
    1207: [function(f, i, g) {
        var h = function(c) {
            var a = window.pageYOffset;
            if (!a) {
                var b = document.documentElement || document.body.parentNode || document.body;
                a = b.scrollTop
            }
            return a
        };
        i.exports = h
    }, {}],
    1208: [function(p, r, n) {
        var w = p("./methods/innerWidth"),
            o = p("./methods/innerHeight"),
            u = p("./methods/clientWidth"),
            m = p("./methods/clientHeight"),
            v = p("./methods/scrollX"),
            x = p("./methods/scrollY"),
            q = p("./methods/maxScrollX"),
            t = p("./methods/maxScrollY");
        r.exports = {
            innerWidth: w,
            innerHeight: o,
            clientWidth: u,
            clientHeight: m,
            scrollX: v,
            scrollY: x,
            maxScrollX: q,
            maxScrollY: t
        }
    }, {
        "./methods/clientHeight": 1200,
        "./methods/clientWidth": 1201,
        "./methods/innerHeight": 1202,
        "./methods/innerWidth": 1203,
        "./methods/maxScrollX": 1204,
        "./methods/maxScrollY": 1205,
        "./methods/scrollX": 1206,
        "./methods/scrollY": 1207
    }],
    1209: [function(q, p, j) {
        var m = p.exports = {};
        var k = [];
        var l = false;

        function n() {
            if (l) {
                return
            }
            l = true;
            var a;
            var c = k.length;
            while (c) {
                a = k;
                k = [];
                var b = -1;
                while (++b < c) {
                    a[b]()
                }
                c = k.length
            }
            l = false
        }
        m.nextTick = function(a) {
            k.push(a);
            if (!l) {
                setTimeout(n, 0)
            }
        };
        m.title = "browser";
        m.browser = true;
        m.env = {};
        m.argv = [];
        m.version = "";
        m.versions = {};

        function o() {}
        m.on = o;
        m.addListener = o;
        m.once = o;
        m.off = o;
        m.removeListener = o;
        m.removeAllListeners = o;
        m.emit = o;
        m.binding = function(a) {
            throw new Error("process.binding is not supported")
        };
        m.cwd = function() {
            return "/"
        };
        m.chdir = function(a) {
            throw new Error("process.chdir is not supported")
        };
        m.umask = function() {
            return 0
        }
    }, {}],
    1210: [function(d, g, f) {
        g.exports = {
            "next-animation-heights": {
                large: 60
            }
        }
    }, {}],
    1211: [function(t, u, q) {
        t("ac-polyfills/Object/create");
        var v = t("ac-dom-metrics"),
            p = t("ac-dom-traversal/querySelector");
        var r = t("./model/FeatureDetectionMap"),
            n = t("ac-event-emitter-micro").EventEmitterMicro,
            m = n.prototype;

        function l(a, c, b) {
            n.call(this);
            this.element = a;
            this.video = p("video", this.element);
            this.videoMetaDataHasLoaded = false;
            this.videoWidth = 0;
            this.videoHeight = 0;
            this._containerWidth = c;
            this._containerHeight = b;
            this._boundFunctions = {
                _onVideoMetaDataLoaded: this.onVideoMetaDataLoaded.bind(this),
                _onVideoEnded: this.onVideoEnded.bind(this)
            };
            this.hasVideo = (this.video !== null);
            if (!this.hasVideo) {
                return
            }
            this.video.style.display = "block";
            if (!r.IS_DESKTOP) {
                this.hasVideo = false;
                this.video.parentNode.removeChild(this.video);
                return
            }
            this._getVideoMetaData()
        }
        var o = l.prototype = Object.create(n.prototype);
        l.prototype.constructor = l;
        o.destroy = function() {
            if (this.video) {
                this.video.removeEventListener("loadeddata", this._boundFunctions._onVideoMetaDataLoaded);
                this.video.removeEventListener("ended", this._boundFunctions._onVideoEnded, false);
                this.video = null
            }
            m.destroy.call(this);
            this._boundFunctions = null
        };
        o._getVideoMetaData = function() {
            if (this.video.readyState >= 1) {
                this.onVideoMetaDataLoaded(null)
            } else {
                this.video.addEventListener("loadeddata", this._boundFunctions._onVideoMetaDataLoaded, false)
            }
        };
        o.onVideoMetaDataLoaded = function(a) {
            this.trigger("loadeddata", this);
            this.videoWidth = this.video.videoWidth;
            this.videoHeight = this.video.videoHeight;
            this.updateVideoDimensions(this._containerWidth, this._containerHeight);
            this.videoMetaDataHasLoaded = true
        };
        o.onVideoEnded = function(a) {
            this.trigger("ended", this)
        };
        o.activate = function() {
            if (!this.video) {
                return
            }
            this.video.addEventListener("ended", this._boundFunctions._onVideoEnded, false)
        };
        o.play = function() {
            if (!this.video) {
                return
            }
            this.video.play()
        };
        o.pause = function() {
            if (!this.video) {
                return
            }
            this.video.pause()
        };
        o.updateVideoDimensions = function(a, f) {
            if (r.CSS_FILTER) {
                this.video.style.width = a + "px";
                this.video.style.height = f + "px";
                return
            }
            this._containerWidth = a;
            this._containerHeight = f;
            var c = Math.max(a / this.videoWidth, f / this.videoHeight);
            var g = this.videoWidth * c,
                d = this.videoHeight * c,
                h = (g - a) * -0.5,
                b = (d - f) * -0.5;
            this.video.style.top = Math.round(b) + "px";
            this.video.style.left = Math.round(h) + "px";
            this.video.style.width = Math.round(g) + "px";
            this.video.style.height = Math.round(d) + "px"
        };
        u.exports = l
    }, {
        "./model/FeatureDetectionMap": 1232,
        "ac-dom-metrics": 90,
        "ac-dom-traversal/querySelector": 147,
        "ac-event-emitter-micro": 200,
        "ac-polyfills/Object/create": 729
    }],
    1212: [function(K, R, y) {
        K("ac-polyfills/Element/prototype.classList");
        var M = K("ac-dom-traversal/querySelector");
        var D = K("ac-dom-traversal/querySelectorAll");
        var T = K("ac-element-tracker").ElementTracker;
        var N = K("ac-easing");
        var S = K("ac-eclipse").Clip;
        var A = K("ac-viewport").Viewport;
        var O = K("ac-analytics");
        var I = K("ac-feature");
        var J = K("./model/SectionMap");
        var B = K("./model/DataAttributes");
        var L = K("./model/TransitionType");
        var C = K("./ElementSlideInAnimator");
        var H = K("./PageJumper/PageJumper");
        var z = K("./section/BaseSection");
        var P = K("./ClipRegistry");
        var E = K("./TimeoutRegistry");
        var Q = K("./LocalNavStyleChanger");

        function F() {
            this.name = this.name || "[NOT SET]";
            this._visibleSections = [];
            this._mainEl = M(".main");
            this._elementTracker = new T(null, {
                autoStart: true
            });
            this._sections = [];
            this._currentSection = null;
            this.setupEventBindings();
            this.setupSlideElements();
            this.setupSections();
            this.setupNextJump();
            this._elementTracker.refreshAllElementStates();
            this._setMostVisibleToActive(this._getScrollY(), this._getVisibleBottomOfPage());
            this.setupLocalNavStyleChanger();
            if (!document.body.classList.contains("js-ready")) {
                document.body.classList.add("js-ready")
            }
            this._pageObserver = null;
            this._clickObserver = null;
            this._linkObserver = null;
            this._sectionObserver = null;
            this.setupAnalytics();
            M(".main-next").style.display = "none"
        }
        var G = F.prototype;
        G.destroy = function() {
            this.teardownEvents();
            for (var a = 0, b = this._sections.length; a < b; a++) {
                this._sections[a].destroy()
            }
            C.clear();
            this._elementTracker.stop();
            this._elementTracker = null;
            this._sections = null;
            this._currentSection = null;
            this._visibleSections = null;
            this._boundFunctions = null;
            this._mainEl = null;
            if (this._scrollClip) {
                this._scrollClip.destroy();
                this._scrollClip = null
            }
            this.teardownAnalytics()
        };
        G.setupAnalytics = function() {
            var b;
            if (!H.sharedInstance()._pageInfo) {
                b = (I.webGLAvailable() === true) ? "WebGL On" : "WebGL Off"
            }
            var c = {
                data: {
                    prop2: b
                }
            };
            if (typeof H.sharedInstance().analytics === "object") {
                if (H.sharedInstance().analytics.referrer) {
                    var a = window.location.protocol + "//" + window.location.host;
                    c.data.eVar49 = c.data.referrer = a + H.sharedInstance().analytics.referrer;
                    c.data.prop14 = H.sharedInstance().analytics.ppv
                }
            }
            this._pageObserver = new O.observer.Page(c);
            this._pageObserver._devUUID = Math.floor((1 + Math.random()) * 100000000).toString(16);
            this._sectionObserver = new O.observer.Section();
            this._sectionObserver._devUUID = Math.floor((1 + Math.random()) * 100000000).toString(16);
            this._clickObserver = new O.observer.Click();
            this._clickObserver._devUUID = Math.floor((1 + Math.random()) * 100000000).toString(16);
            this._linkObserver = new O.observer.Link();
            this._linkObserver._devUUID = Math.floor((1 + Math.random()) * 100000000).toString(16)
        };
        G.teardownAnalytics = function() {
            this._pageObserver.destroy();
            this._pageObserver = null;
            this._sectionObserver.destroy();
            this._sectionObserver = null;
            this._clickObserver.destroy();
            this._clickObserver = null;
            this._linkObserver.destroy();
            this._linkObserver = null
        };
        G.fadeInIntro = function() {
            var a = M(".section-hero .icon-paddledown", this._mainEl);
            P.add(new S(a, 1.5, {
                destroyOnComplete: true,
                opacity: 1
            }).play())
        };
        G.teardownEvents = function() {
            var a = M(".section-next");
            if (a) {
                a.removeEventListener("click", this._boundFunctions.onShouldJumpToNextSection)
            }
            for (var b = 0, c = this._sections.length; b < c; b++) {
                this._sections[b].trackedElement.off("enterview", this._boundFunctions.onSectionDidEnterView)
            }
            this._elementTracker.windowDelegate.off("scroll resize orientationchange", this._boundFunctions.onViewportChange);
            this._elementTracker.off();
            A.off("breakpoint", this._boundFunctions.onBreakpoint);
            H.sharedInstance().off(H.PAGE_WILL_DISAPPEAR, this._boundFunctions.onPageWillDisappear)
        };
        G.setupEventBindings = function() {
            this._boundFunctions = {
                onViewportChange: this._onViewportMetricsChange.bind(this),
                onBreakpoint: this._onBreakpoint.bind(this),
                onSectionDidEnterView: this._onSectionDidEnterView.bind(this),
                onShouldJumpToNextSection: this._onShouldJumpToNextSection.bind(this),
                onPageWillDisappear: this._onPageWillDisappear.bind(this)
            };
            this._elementTracker.windowDelegate.on("scroll resize orientationchange", this._boundFunctions.onViewportChange);
            A.on("breakpoint", this._boundFunctions.onBreakpoint);
            H.sharedInstance().on(H.PAGE_WILL_DISAPPEAR, this._boundFunctions.onPageWillDisappear)
        };
        G.setupSections = function() {
            var a = D(".section", this._mainEl);
            for (var d = 0, i = a.length; d < i; d++) {
                var g = a[d];
                var h = this._elementTracker.addElement(g);
                this._elementTracker.refreshElementState(h);
                var c = g.hasAttribute(B.SECTION_TYPE) ? g.getAttribute(B.SECTION_TYPE) : "BaseSection";
                if (!J.hasOwnProperty(c)) {
                    throw "BasePage::setupSections no section type '" + c + "'found!"
                }
                var f = J[c];
                var b = new f(g, h, d);
                this._sections.push(b)
            }
        };
        G.setupSlideElements = function() {
            var f = D("[" + B.ANIMATE_SLIDE_IN + "]");
            for (var c = 0, d = f.length; c < d; c++) {
                var a = f[c];
                var b = C.create(a, c);
                b.init(this._getVisibleBottomOfPage())
            }
        };
        G.setupNextJump = function() {
            var a = M(".section-next");
            if (a && a.hasAttribute(B.JUMP_SECTION_NAME)) {
                a.style.cursor = "pointer";
                a.addEventListener("click", this._boundFunctions.onShouldJumpToNextSection, false)
            }
        };
        G.setupLocalNavStyleChanger = function() {
            var a = this._mainEl.getAttribute("data-page-type");
            Q.initialize(this._currentSection, a)
        };
        G._activateSection = function(a) {
            if (this._currentSection == a) {
                return
            }
            if (this._currentSection) {
                this._currentSection.deactivate()
            }
            this._currentSection = a;
            this._currentSection.activate()
        };
        G._setMostVisibleToActive = function(i, g) {
            var a = this._sections[0];
            var c = 0;
            var f = [];
            for (var d = 0, h = this._sections.length; d < h; d++) {
                var b = this._sections[d];
                if (b.trackedElement.percentInView > 0.000001) {
                    f.push(b)
                }
                if (b.trackedElement.percentInView > c) {
                    a = b;
                    c = b.trackedElement.percentInView
                }
            }
            for (d = 0, h = Math.max(this._visibleSections.length, f.length); d < h; d++) {
                if (this._visibleSections[d] && f.indexOf(this._visibleSections[d]) === -1) {
                    this._visibleSections[d].onViewWillDisappear(i, g)
                }
                if (f[d] && this._visibleSections.indexOf(f[d]) === -1) {
                    f[d].onViewWillAppear(i, g)
                }
            }
            this._visibleSections = f;
            this._activateSection(a)
        };
        G._onShouldJumpToNextSection = function(c) {
            c.preventDefault();
            var a = {
                targetEl: c.currentTarget.querySelector("a")
            };
            if (this._linkObserver && this._linkObserver.tracker && this._linkObserver.tracker.track) {
                this._linkObserver.tracker.track({
                    type: "link",
                    event: c,
                    data: a,
                    options: this._linkObserver.options
                })
            }
            var f = M(".section-next");
            var b = f.getAttribute(B.JUMP_SECTION_NAME);
            var d = b.replace(/-/g, "");
            H.sharedInstance().performJump({
                url: b,
                name: d,
                transitionType: L.FROM_NEXT_PREVIEW
            })
        };
        G._onSectionDidEnterView = function(a) {};
        G._onPageWillDisappear = function(a) {
            P.destroyClips();
            E.clearTimeouts();
            this.destroy()
        };
        G._onBreakpoint = function(d) {
            var b = this._getScrollY();
            var c = this._getVisibleBottomOfPage();
            for (var a = 0; a < this._sections.length; a++) {
                this._sections[a].onBreakpoint(d.data.incoming, d.data.outgoing, b, c)
            }
        };
        G._onViewportMetricsChange = function(d) {
            var b = this._getScrollY();
            var c = this._getVisibleBottomOfPage();
            this._setMostVisibleToActive(b, c);
            if (d.type == "scroll") {
                C.updateVisibility(c);
                this._updateLocalNavTheme(d, b, c)
            }
            if (d.type == "resize" || d.type == "orientation") {
                C.onResize();
                for (var a = 0; a < this._sections.length; a++) {
                    this._sections[a].onResize(d, b, c);
                    this._sections[a].updateScrollToPosition()
                }
            }
        };
        G._updateLocalNavTheme = function(b, a, d) {
            var c = this._visibleSections[0];
            for (var g = 0, f = this._visibleSections.length; g < f; g++) {
                this._visibleSections[g].onScroll(b, a, d);
                if (a + Q.height > this._visibleSections[g].scrollToPosition) {
                    c = this._visibleSections[g]
                }
            }
            Q.setCurrentSection(c)
        };
        G._getSectionForTracker = function(a) {
            for (var b = 0, c = this._sections.length; b < c; b++) {
                if (this._sections[b].trackedElement === a) {
                    return this._sections[b]
                }
            }
            return null
        };
        G._getScrollY = function() {
            return window.pageYOffset || document.body.scrollTop
        };
        G._getVisibleBottomOfPage = function() {
            return (window.pageYOffset || document.body.scrollTop) + window.innerHeight
        };
        G._scrollToAnimated = function(b, a) {
            if (this._scrollClip != null) {
                this._scrollClip.destroy();
                this._scrollClip = null
            }
            var c = this._getScrollY();
            if (b === c) {
                return null
            }
            this._scrollClip = new S({
                y: this._getScrollY()
            }, a, {
                y: b
            }, {
                ease: N.createBezier(0.39, 0.575, 0.565, 1).easingFunction,
                onDraw: function(d) {
                    window.scrollTo(0, d.target.y)
                }
            });
            this._scrollClip.play()
        };
        R.exports = F
    }, {
        "./ClipRegistry": 1213,
        "./ElementSlideInAnimator": 1214,
        "./LocalNavStyleChanger": 1215,
        "./PageJumper/PageJumper": 1216,
        "./TimeoutRegistry": 1223,
        "./model/DataAttributes": 1231,
        "./model/SectionMap": 1234,
        "./model/TransitionType": 1235,
        "./section/BaseSection": 1236,
        "ac-analytics": "ac-analytics",
        "ac-dom-traversal/querySelector": 147,
        "ac-dom-traversal/querySelectorAll": 148,
        "ac-easing": 153,
        "ac-eclipse": 179,
        "ac-element-tracker": "ac-element-tracker",
        "ac-feature": 213,
        "ac-polyfills/Element/prototype.classList": 727,
        "ac-viewport": "ac-viewport"
    }],
    1213: [function(h, m, i) {
        h("ac-polyfills/Object/create");
        var j = 0;
        var k = function() {
            this.clips = {}
        };
        var l = k.prototype = {};
        k.prototype.constructor = k;
        l.add = function(a, b) {
            if (typeof b !== "string") {
                b = "registry-item-" + j;
                j++
            }
            this._destroyClip(b);
            this.clips[b] = a;
            return this.clips[b]
        };
        l.remove = function(a) {
            this._destroyClip(a)
        };
        l.destroyClips = function() {
            var a;
            for (a in this.clips) {
                if (this.clips.hasOwnProperty(a)) {
                    this._destroyClip(a)
                }
            }
            this.clips = {}
        };
        l.destroy = function() {
            this.destroyClips();
            var a;
            for (a in this) {
                if (this.hasOwnProperty(a)) {
                    this[a] = null
                }
            }
        };
        l._destroyClip = function(a) {
            if (this.clips && this.clips[a]) {
                this.clips[a].destroy();
                this.clips[a] = null
            }
        };
        m.exports = new k()
    }, {
        "ac-polyfills/Object/create": 729
    }],
    1214: [function(z, A, w) {
        z("ac-polyfills/Object/create");
        z("ac-polyfills/Element/prototype.classList");
        var B = z("ac-dom-metrics");
        var q = z("ac-browser");
        var C = z("./utils/browserPrefixed");
        var r = z("ac-eclipse").Clip;
        var v = z("./utils/math-utils"),
            x = z("../_shared/model/DataAttributes"),
            y = z("../_shared/model/FeatureDetectionMap"),
            t = z("../_shared/ClipRegistry");

        function p(a, b) {
            this.element = a;
            this.index = b;
            this.hasAnimatedIn = false;
            this.scrollPosition = B.getPagePosition(this.element, true).top;
            this.height = this.element.offsetHeight;
            this.delay = 0;
            this.duration = 0.5 + (this.index % 5) * 0.3;
            this.shouldFadeIn = false;
            this.shouldSlideIn = true;
            this.offsetY = v.clamp(this.height * 0.4, 50, 250)
        }
        var u = p.prototype = {};
        u.init = function(b) {
            if (!this.hasAnimatedIn && this.scrollPosition < b) {
                this.hasAnimatedIn = true;
                return
            }
            if (q.os == "iOS" && q.version < 8) {
                this.hasAnimatedIn = true;
                return
            }
            try {
                this._overwritePropsIfDataAttributeContainsJSON()
            } catch (a) {
                console.error("ElementSlideInAnimator::_overwritePropsIfDataAttributeContainsJSON bad JSON in data-attribute!")
            }
            if (this.shouldSlideIn) {
                this.element.style[C.transform] = "translateY(" + Math.round(this.offsetY) + "px)"
            }
            if (this.shouldFadeIn) {
                this.element.style.visibility = "hidden";
                this.element.style.opacity = 0
            }
            if (!y.IS_DESKTOP) {
                this.scrollPosition -= window.innerHeight * 0.1;
                this.delay *= 0.5
            }
        };
        u.cancel = function() {
            this.hasAnimatedIn = true;
            this.element.style[C.transform] = "none";
            this.element.style.opacity = 1;
            this.element.style.visibility = "visible"
        };
        u._overwritePropsIfDataAttributeContainsJSON = function() {
            var a = this.element.getAttribute(x.ANIMATE_SLIDE_IN);
            if (a === "") {
                return
            }
            var b = JSON.parse(a);
            this.delay = b.delay === undefined ? this.delay : b.delay;
            this.duration = b.duration === undefined ? this.duration : b.duration;
            this.offsetY = b.offsetY === undefined ? this.offsetY : this.height * b.offsetY;
            this.shouldFadeIn = b.shouldFadeIn === undefined ? this.shouldFadeIn : b.shouldFadeIn;
            this.shouldSlideIn = b.shouldSlideIn === undefined ? this.shouldSlideIn : b.shouldSlideIn
        };
        u.updateVisibility = function(c) {
            if (!this.hasAnimatedIn && this.scrollPosition <= c) {
                this.hasAnimatedIn = true;
                if (this.shouldSlideIn) {
                    t.add(new r(this.element, this.duration, {
                        transform: {
                            translateY: 0
                        }
                    }, {
                        destroyOnComplete: true,
                        delay: this.delay,
                        ease: "easeOutQuad"
                    }).play())
                }
                if (this.shouldFadeIn) {
                    var b = this;
                    var a = {
                        opacity: parseFloat(this.element.style.opacity)
                    };
                    t.add(new r(a, this.duration, {
                        opacity: 1
                    }, {
                        destroyOnComplete: true,
                        delay: this.delay,
                        ease: "easeInQuad",
                        onStart: function(d) {
                            b.element.style.visibility = "visible";
                            b.element.style.opacity = a.opacity
                        },
                        onDraw: function() {
                            b.element.style.opacity = a.opacity
                        }
                    }).play())
                }
            }
        };
        u.onResize = function(a, b) {
            this.scrollPosition = this.getOffsetRect();
            if (!y.IS_DESKTOP) {
                this.scrollPosition -= window.innerHeight * 0.1
            }
        };
        u.getOffsetRect = function() {
            var c = this.element.getBoundingClientRect();
            var d = document.body;
            var f = document.documentElement;
            var b = window.pageYOffset || f.scrollTop || d.scrollTop;
            var a = f.clientTop || d.clientTop || 0;
            return c.top + b - a
        };
        u.destroy = function() {
            this.element = null
        };
        var D = [];
        p.create = function(b, c) {
            var a = new p(b, c);
            D.push(a);
            return a
        };
        p.getElementSlideInAnimatorForElement = function(a) {
            for (var b = 0, c = D.length; b < c; b++) {
                if (D[b].element === a) {
                    return D[b]
                }
            }
            return null
        };
        p.onResize = function() {
            var c = this._getScrollY();
            var d = this._getVisibleBottomOfPage();
            for (var b = 0, f = D.length; b < f; b++) {
                var a = D[b];
                if (a.hasAnimatedIn) {
                    continue
                }
                a.onResize(c, d)
            }
        };
        p.updateVisibility = function(c) {
            for (var b = 0, d = D.length; b < d; b++) {
                var a = D[b];
                if (a.hasAnimatedIn) {
                    continue
                }
                a.updateVisibility(c)
            }
        };
        p.clear = function() {
            for (var a = 0, b = D.length; a < b; a++) {
                D[a].destroy()
            }
            D = []
        };
        p._getScrollY = function() {
            return window.pageYOffset || document.body.scrollTop
        };
        p._getVisibleBottomOfPage = function() {
            return (window.pageYOffset || document.body.scrollTop) + window.innerHeight
        };
        A.exports = p
    }, {
        "../_shared/ClipRegistry": 1213,
        "../_shared/model/DataAttributes": 1231,
        "../_shared/model/FeatureDetectionMap": 1232,
        "./utils/browserPrefixed": 1243,
        "./utils/math-utils": 1244,
        "ac-browser": 9,
        "ac-dom-metrics": 90,
        "ac-eclipse": 179,
        "ac-polyfills/Element/prototype.classList": 727,
        "ac-polyfills/Object/create": 729
    }],
    1215: [function(A, B, w) {
        A("ac-polyfills/Element/prototype.classList");
        var x = A("./model/DataAttributes");
        var p = A("ac-event-emitter").EventEmitter,
            y = A("ac-object"),
            v = A("ac-dom-traversal").querySelector,
            C = A("ac-dom-styles").setStyle,
            r = A("ac-viewport").Viewport;
        var t = {
            light: "theme-light",
            dark: "theme-dark",
            pink: "theme-pink",
            blue: "theme-blue"
        };
        var D = {
            "section-light": "light",
            "section-lightgrey": "light",
            "section-dark": "dark",
            "section-darkgrey": "dark",
            "section-pink": "pink",
            "section-blue": "blue"
        };
        var z = "light";
        var q = function() {
            this._currentTheme = null;
            this._currentPageNavLink = null;
            this._section = null;
            this._localNav = null;
            this.height = 0
        };
        var u = q.prototype;
        u.initialize = function(a, b) {
            this._getLocalNav();
            this.setCurrentSection(a);
            this.setCurrentPage(b)
        };
        u.setCurrentPage = function(b) {
            if (b === "guidedtours") {
                b = "guided-tours"
            }
            var a = v(".localnav-link[" + x.JUMP_SECTION_NAME + "=" + b + "]");
            if (a === this._currentPageNavLink) {
                return
            }
            if (this._currentPageNavLink) {
                this._currentPageNavLink.classList.remove("current")
            }
            if (a) {
                a.classList.add("current");
                this._currentPageNavLink = a
            }
        };
        u.setTheme = function(d) {
            if (!t[d] || this._currentTheme === d) {
                return
            }
            var a = this._getLocalNav();
            var b = false;
            for (var c in t) {
                if (t.hasOwnProperty(c)) {
                    if (c !== d) {
                        a.classList.remove(t[c])
                    } else {
                        b = true;
                        a.classList.add(t[c])
                    }
                }
            }
        };
        u.removeThemes = function() {
            this._currentTheme = null;
            var a = this._getLocalNav();
            for (var b in t) {
                if (t.hasOwnProperty(b)) {
                    a.classList.remove(t[b])
                }
            }
        };
        u.setCurrentSection = function(a) {
            if (!a || (this._section && this._section === a)) {
                return
            }
            this._section = a;
            for (var b in D) {
                if (D.hasOwnProperty(b)) {
                    if (this._section.element.classList.contains(b)) {
                        this.setTheme(D[b]);
                        return
                    }
                }
            }
            this.setTheme(z)
        };
        u._getLocalNav = function(a) {
            if (!this._localNav || a) {
                this._localNav = v(".localnav-wrapper, #ac-localnav");
                this.height = this._localNav.clientHeight
            }
            return this._localNav
        };
        B.exports = new q()
    }, {
        "./model/DataAttributes": 1231,
        "ac-dom-styles": 120,
        "ac-dom-traversal": 138,
        "ac-event-emitter": 202,
        "ac-object": 713,
        "ac-polyfills/Element/prototype.classList": 727,
        "ac-viewport": "ac-viewport"
    }],
    1216: [function(G, M, v) {
        G("ac-polyfills/Object/create");
        G("ac-polyfills/Element/prototype.classList");
        var J = G("ac-dom-traversal/querySelector");
        var E = G("ac-event-emitter-micro").EventEmitterMicro;
        var z = G("ac-ajax");
        var w = G("ac-queue").Queue;
        var I = G("ac-queue").LiveQueue;
        var A = G("ac-viewport").Viewport;
        var K = G("ac-analytics");
        var y = G("../model/FeatureDetectionMap");
        var L = G("../LocalNavStyleChanger");
        var H = G("../model/TransitionType");
        var C = G("./transitions/TransitionFromLocalNav");
        var x = G("./transitions/TransitionFromNextPreview");
        var F = G("./transitions/TopPageTransition");
        var N = null;

        function D(a, b) {
            E.call(this);
            if (N) {
                throw "PageJumper is a singleton, use PageJumper.sharedInstance"
            }
            N = this;
            this._pageMap = b;
            this.siteRoot = a;
            this._isJumping = false;
            this._oldStyles = [];
            this._newStyles = [];
            this._pageInfo = null;
            this._loadingQueue = null;
            this._transition = null;
            this._setJumpState(false);
            this.analytics = {}
        }
        var B = D.prototype = Object.create(E.prototype);
        D.prototype.constructor = D;
        B.performJump = function(b) {
            b.url = b.url.replace(/\/?$/, "/");
            var c = this.siteRoot + b.url;
            if (y.PAGE_JUMP) {
                try {
                    this._performJump(b)
                } catch (a) {
                    window.location.pathname = c
                }
            } else {
                window.location.pathname = c
            }
        };
        B._performJump = function(a) {
            if (!this._canPerformJump(a)) {
                return
            }
            this._pageInfo = a;
            this._dummyDocument = document.implementation.createHTMLDocument("ajaxContainer");
            this._dummyEl = null;
            this._loadedPageMainEl = null;
            this._newStyles = [];
            this._loadingQueue = new I(1);
            this._loadingQueue.start();
            this._loadDocumentAndStyles();
            L.setCurrentPage(a.name);
            this.trigger(D.PAGE_WILL_DISAPPEAR, a)
        };
        B._loadDocumentAndStyles = function() {
            var a = this;
            this._loadingQueue.enqueue(function() {
                return z.get({
                    url: a.siteRoot + a._pageInfo.url
                }).then(function(b) {
                    a._dummyEl = a._dummyDocument.createElement("div");
                    a._dummyEl.innerHTML = b.responseText;
                    a._loadedPageMainEl = J(".main", a._dummyEl)
                }, function(b) {
                    throw b
                })
            });
            this._loadingQueue.enqueue(function() {
                var f = a._dummyEl.querySelectorAll("link[href*='" + a._pageInfo.name + "'][rel='stylesheet']");
                for (var h = 0, d = f.length; h < d; h++) {
                    var g = f[h];
                    var c = g.getAttribute("href");
                    var b = a._createLinkLoadingPromise.bind(a, c);
                    a._loadingQueue.enqueue(b)
                }
            });
            this._loadingQueue.enqueue(this._onLoadingComplete.bind(this), w.PRIORITY_LOW)
        };
        B._createLinkLoadingPromise = function(a) {
            return z.get({
                url: a
            }).then(function(c) {
                var b = document.createElement("style");
                b.setAttribute("type", "text/css");
                b.innerHTML = c.responseText;
                this._newStyles.push(b)
            }.bind(this))
        };
        B._onLoadingComplete = function() {
            var a, b;
            for (a = 0, b = this._newStyles.length; a < b; a++) {
                document.head.appendChild(this._newStyles[a])
            }
            this._performSectionJumpTransition()
        };
        B._performSectionJumpTransition = function() {
            this._setJumpState(true);
            this._hideHeroElements();
            this._transition = this.getTransitionType();
            this._transition.initialize(this, this._pageInfo, this._loadedPageMainEl);
            if (F.shouldHandlePageTransition()) {
                F.startFirstStageTransition();
                this.once(D.PAGE_DID_APPEAR, this._handleTopTransitionCallback.bind(this))
            }
            this._transition.performJumpTransition()
        };
        B._handleTopTransitionCallback = function() {
            F.startSecondStageTransition()
        };
        B.onTransitionComplete = function() {
            this._setJumpState(false);
            this._setHistoryState();
            this._setPageTitleAndFooter();
            this._setTrackingVariables();
            if (!this._pageMap.hasOwnProperty(this._pageInfo.name)) {
                throw "No constructor for page called '" + this._pageInfo.name + "' found"
            }
            var a, c;
            for (a = 0, c = this._oldStyles.length; a < c; a++) {
                document.head.removeChild(this._oldStyles[a])
            }
            this._oldStyles = this._newStyles.concat();
            var b = this._pageMap[this._pageInfo.name];
            var d = new b();
            d.fadeInIntro();
            this.trigger(D.PAGE_DID_APPEAR);
            this._loadingQueue.destroy();
            this._transition.clear();
            this._transition = null;
            this._dummyEl = null;
            this._dummyDocument = null;
            this._loadedPageMainEl = null;
            this._dummyDocument = null;
            this._newStyles = null
        };
        B._hideHeroElements = function() {
            var a = J(".section-hero .icon-paddledown", this._loadedPageMainEl);
            a.style.opacity = 0
        };
        B._setHistoryState = function() {
            var a = window.location.pathname;
            var b = this.siteRoot + this._pageInfo.url;
            if (a !== b) {
                window.history.pushState(this._pageInfo, document.title, b)
            }
            this.analytics.referrer = a;
            this.analytics.ppv = s.pageName;
            if (s && s.c_w && s.pageName) {
                s.c_w("s_ppv", s.pageName);
                s.prop17 = null;
                s.getPPVid = null
            }
        };
        B._setPageTitleAndFooter = function() {
            if (!this._dummyEl) {
                console.error("No dummy document loaded!");
                return
            }
            var b = this._dummyEl.getElementsByTagName("title")[0];
            document.title = b.textContent || b.innerText;
            var a = document.querySelector(".footer-wrapper, #ac-globalfooter");
            var c = this._dummyEl.querySelector(".footer-wrapper, #ac-globalfooter");
            if (a && c) {
                a.innerHTML = c.innerHTML
            }
        };
        B._setTrackingVariables = function() {
            var b = document.head.getElementsByTagName("meta");
            while (b.length) {
                document.head.removeChild(b[0])
            }
            var a = this._dummyEl.getElementsByTagName("meta");
            while (a.length) {
                document.head.appendChild(a[0])
            }
            K.reset()
        };
        B.getTransitionType = function() {
            switch (this._pageInfo.transitionType) {
                case H.FROM_LOCAL_NAV:
                    return C;
                case H.FROM_NEXT_PREVIEW:
                    return x;
                case H.FROM_OVERVIEW_SECTION:
                    return C;
                    throw "No transition type found pageInfo.transition=" + this._pageInfo.transitionType
            }
        };
        B._canPerformJump = function(a) {
            var b = (this._pageInfo != null) && this._pageInfo.url.replace(/\W+/g, "") == a.url.replace(/\W+/g, "");
            if (b) {
                return false
            }
            if (this._isJumping) {
                return false
            }
            return true
        };
        B._setJumpState = function(a) {
            var d = document.documentElement,
                b = "page-transition",
                c = "no-" + b;
            if (a) {
                this._isJumping = true;
                d.classList.remove(c);
                d.classList.add(b);
                return
            }
            this._isJumping = false;
            d.classList.remove(b);
            d.classList.add(c)
        };
        D.sharedInstance = function() {
            return N
        };
        D.PAGE_WILL_DISAPPEAR = "pageWillDisappear";
        D.PAGE_DID_APPEAR = "pageDidAppear";
        M.exports = D
    }, {
        "../LocalNavStyleChanger": 1215,
        "../model/FeatureDetectionMap": 1232,
        "../model/TransitionType": 1235,
        "./transitions/TopPageTransition": 1217,
        "./transitions/TransitionFromLocalNav": 1218,
        "./transitions/TransitionFromNextPreview": 1219,
        "ac-ajax": 5,
        "ac-analytics": "ac-analytics",
        "ac-dom-traversal/querySelector": 147,
        "ac-event-emitter-micro": 200,
        "ac-polyfills/Element/prototype.classList": 727,
        "ac-polyfills/Object/create": 729,
        "ac-queue": 782,
        "ac-viewport": "ac-viewport"
    }],
    1217: [function(D, E, B) {
        var z = D("ac-dom-traversal/querySelector");
        var w = D("ac-dom-styles/setStyle");
        var F = D("ac-dom-metrics");
        var u = D("ac-dom-nodes");
        var x = D("../../ClipRegistry");
        var C = D("ac-object");
        var q = D("ac-event-emitter").EventEmitter;
        var t = D("ac-viewport").Viewport;
        var r = D("../../LocalNavStyleChanger");
        var v = D("ac-clip").Clip;
        var y;
        var A = function() {
            this._getTargets();
            this._didFinishFirstStage = false;
            this._didFinishSecondStage = false;
            this._didFinishThirdStage = false;
            this._didBindSecondStageTransition = false;
            this._didBindThirdStageTransition = false;
            this._firstStageDuration = 0.75;
            this._secondStageDuration = 0.5;
            this._thirdStageDuration = 0.5;
            this._firstStageEasing = "easeInOut";
            this._secondStageEasing = "easeInOut";
            this._thirdStageEasing = "easeInOut";
            this._firstStageDelay = 0;
            this._secondStageDelay = 0;
            this._thirdStageDelay = 0.15;
            this._boundOnFirstStageStart = this._onFirstStageStart.bind(this);
            this._boundOnFirstStageDraw = this._onFirstStageDraw.bind(this);
            this._boundOnFirstStageComplete = this._onFirstStageComplete.bind(this);
            this._boundStartSecondStageTransition = this.startSecondStageTransition.bind(this);
            this._boundOnSecondStageStart = this._onSecondStageStart.bind(this);
            this._boundOnSecondStageDraw = this._onSecondStageDraw.bind(this);
            this._boundOnSecondStageComplete = this._onSecondStageComplete.bind(this);
            this._boundStartThirdStageTransition = this.startThirdStageTransition.bind(this);
            this._boundOnThirdStageStart = this._onThirdStageStart.bind(this);
            this._boundOnThirdStageDraw = this._onThirdStageDraw.bind(this);
            this._boundOnThirdStageComplete = this._onThirdStageComplete.bind(this)
        };
        y = A.prototype = C.create(q.prototype);
        y.shouldHandlePageTransition = function() {
            return t.scrollY() > this._globalNavOffset
        };
        y.getEndStateScrollOffset = function() {
            if (!this.shouldHandlePageTransition()) {
                return 0
            }
            return 0
        };
        y.start = function() {
            if (!this.shouldHandlePageTransition) {
                return
            }
            this.startFirstStageTransition();
            this.once("second-stage-complete", this._handleStartSecondStageComplete, this)
        };
        y.startFirstStageTransition = function() {
            this.trigger("will-transition");
            var c = {
                localNavY: 0
            };
            var a = {
                localNavY: -this._localNavOffset
            };
            var b = new v(c, this._firstStageDuration, a, {
                ease: this._firstStageEasing,
                delay: this._firstStageDelay,
                onStart: this._boundOnFirstStageStart,
                onDraw: this._boundOnFirstStageDraw,
                onComplete: this._boundOnFirstStageComplete
            });
            x.add(b).play()
        };
        y.startSecondStageTransition = function() {
            this.trigger("will-transition");
            var c = {
                globalNavOpacity: 0
            };
            var a = {
                globalNavOpacity: 1
            };
            var b = new v(c, this._secondStageDuration, a, {
                ease: this._secondStageEasing,
                delay: this._secondStageDelay,
                onStart: this._boundOnSecondStageStart,
                onDraw: this._boundOnSecondStageDraw,
                onComplete: this._boundOnSecondStageComplete
            });
            x.add(b).play();
            this.startThirdStageTransition()
        };
        y.startThirdStageTransition = function() {
            this.trigger("will-transition");
            var c = {
                localNavOpacity: 0
            };
            var a = {
                localNavOpacity: 1
            };
            var b = new v(c, this._thirdStageDuration, a, {
                ease: this._thirdStageEasing,
                delay: this._thirdStageDelay,
                onStart: this._boundOnThirdStageStart,
                onDraw: this._boundOnThirdStageDraw,
                onComplete: this._boundOnThirdStageComplete
            });
            x.add(b).play()
        };
        y._onFirstStageStart = function() {};
        y._onFirstStageDraw = function(a) {
            w(this._localNav, {
                transform: {
                    translateY: a.target.localNavY + "px"
                }
            })
        };
        y._onFirstStageComplete = function() {
            w(this._globalNav, {
                opacity: 0
            });
            w(this._localNav, {
                opacity: 0,
                transform: {
                    translateY: 0
                }
            });
            this._didFinishFirstStage = true;
            this.trigger("first-stage-complete")
        };
        y._onSecondStageStart = function() {};
        y._onSecondStageDraw = function(a) {
            w(this._globalNav, {
                opacity: a.target.globalNavOpacity
            })
        };
        y._onSecondStageComplete = function() {
            this._globalNav.removeAttribute("style");
            this._didFinishSecondStage = true;
            this.trigger("second-stage-complete")
        };
        y._onThirdStageStart = function() {};
        y._onThirdStageDraw = function(a) {
            w(this._localNav, {
                opacity: a.target.localNavOpacity
            })
        };
        y._onThirdStageComplete = function() {
            this._didFinishThirdStage = true;
            this._localNav.removeAttribute("style");
            this.trigger("third-stage-complete");
            this._onComplete()
        };
        y._onComplete = function() {
            this._didFinishFirstStage = false;
            this._didFinishSecondStage = false;
            this._didFinishThirdStage = false;
            this._didBindSecondStageTransition = false;
            this._didBindThirdStageTransition = false;
            this.trigger("complete")
        };
        y._getTargets = function() {
            this._localNav = z(".localnav-wrapper, #ac-localnav");
            this._globalNav = z(".globalheader, #ac-globalnav");
            this._localNavOffset = this._localNav.clientHeight;
            this._globalNavOffset = this._globalNav.clientHeight
        };
        E.exports = new A()
    }, {
        "../../ClipRegistry": 1213,
        "../../LocalNavStyleChanger": 1215,
        "ac-clip": 22,
        "ac-dom-metrics": 90,
        "ac-dom-nodes": 102,
        "ac-dom-styles/setStyle": 132,
        "ac-dom-traversal/querySelector": 147,
        "ac-event-emitter": 202,
        "ac-object": 713,
        "ac-viewport": "ac-viewport"
    }],
    1218: [function(G, H, D) {
        var F = G("../../../../config/next-animation-heights.json")["next-animation-heights"];
        var A = G("ac-dom-traversal/querySelector");
        var E = G("ac-dom-traversal").nextSibling;
        var J = G("ac-dom-traversal").previousSibling;
        var y = G("ac-dom-styles/setStyle");
        var u = G("ac-dom-styles/getStyle");
        var I = G("ac-dom-metrics");
        var v = G("ac-dom-nodes");
        var z = G("../../ClipRegistry");
        var B = G("./TopPageTransition");
        var w = G("ac-easing");
        var x = G("ac-eclipse").Clip;
        var t = G("ac-viewport").Viewport;
        var C = {
            initialize: function(c, b, a) {
                this._pageJumper = c;
                this._loadedPageMainEl = a;
                this._pageInfo = b;
                this._completedSecondHalf = false;
                this._completedJump = false;
                this._localNav = A(".localnav-wrapper, #ac-localnav");
                this._globalNav = A("#globalheader, #ac-globalnav");
                this._localNavOffset = this._localNavOffset || this._localNav.clientHeight;
                this._globalNavOffset = this._globalNavOffset || this._globalNav.clientHeight;
                this._oldMainEl = A(".main");
                this._oldMainElContent = A(".hero-headline .section-content", this._oldMainEl);
                this._mainNextContainerEl = A(".main-next");
                this._mainNextHeroEl = A(".section-hero-" + this._pageInfo.name, this._mainNextContainerEl);
                this._mainNextHeroImageEl = A(".hero-headline .section-image", this._mainNextHeroEl);
                this._mainNextHeroContent = A(".hero-headline .section-content", this._mainNextHeroEl);
                this._setTransitionPageHeight()
            },
            clear: function() {
                this._pageInfo = null;
                this._loadedPageMainEl = null;
                this._mainNextContainerEl = null;
                this._mainNextHeroEl = null;
                this._mainNextHeroImageEl = null;
                this._mainNextHeroContent = null;
                this._localNav = null;
                this._globalNav = null;
                this._localNavOffset = null;
                this._globalNavOffset = null;
                this._oldMainEl = null;
                this._oldMainElContent = null
            },
            performJumpTransition: function() {
                this._hideOtherSectionPreviews();
                y(this._mainNextHeroEl, {
                    height: "100vh",
                    opacity: 0,
                    display: "block",
                    transformOrigin: "50% 50.5%"
                });
                y(this._mainNextHeroContent, {
                    opacity: 0
                });
                var a = Math.min(this._getScrollY(), this._localNavOffset);
                y(this._mainNextContainerEl, {
                    position: "absolute",
                    zIndex: 5,
                    top: 0,
                    height: "0",
                    width: "100%"
                });
                this._composeAnimations();
                this._lockPageHeight()
            },
            _composeAnimations: function() {
                var a = 1.5;
                var b = a / 2;
                var d = 0;
                if (!B.shouldHandlePageTransition()) {
                    this._scrollToAnimated(0, a, d)
                }
                var g = w.createBezier(0.46, 0.055, 0.115, 0.97).cssString;
                var c = {
                    oldPageScale: 1,
                    oldPageOpacity: 1,
                    oldPageContentScale: 1,
                    newPageScale: 1.1,
                    newPageOpacity: 0
                };
                var f = {
                    oldPageScale: 0.94,
                    oldPageOpacity: 0,
                    oldPageContentScale: 0.5,
                    newPageScale: 1,
                    newPageOpacity: 1
                };
                z.add(new x(c, a, f, {
                    delay: d,
                    ease: "easeInOutCubic",
                    onStart: function() {
                        y(this._mainNextHeroImageEl, {
                            opacity: 1
                        });
                        y(this._mainNextContainerEl, {
                            position: "fixed",
                            zIndex: 2,
                            top: 0,
                            left: 0,
                            height: "100vh"
                        });
                        y(this._mainNextHeroEl, {
                            "background-color": "rgba(0,0,0,0)"
                        })
                    }.bind(this),
                    onDraw: this._onSectionJumpAnimationDraw.bind(this),
                    onComplete: this._onSectionJumpAnimationFinished.bind(this)
                })).play();
                z.add(new x({
                    opacity: 1
                }, b, {
                    opacity: 0
                }, {
                    ease: "easeInOutCubic",
                    onDraw: this._onFirstHalfAnimationDraw.bind(this)
                })).play();
                z.add(new x({
                    opacity: 0
                }, b, {
                    opacity: 1
                }, {
                    delay: b,
                    ease: "easeInOutCubic",
                    onDraw: this._onSecondHalfAnimationDraw.bind(this),
                    onComplete: function() {
                        this._completedSecondHalf = true;
                        if (this._completedJump) {
                            window.requestAnimationFrame(function() {
                                this._pageJumper.onTransitionComplete()
                            }.bind(this))
                        }
                    }.bind(this)
                })).play()
            },
            _onSectionJumpAnimationDraw: function(a) {
                y(this._mainNextHeroEl, {
                    opacity: a.target.newPageOpacity
                });
                y(this._mainNextHeroImageEl, {
                    transform: "scale(" + a.target.newPageScale + "," + a.target.newPageScale + ")"
                });
                y(this._oldMainElContent, {
                    opacity: a.target.oldPageOpacity
                })
            },
            _onFirstHalfAnimationDraw: function(a) {},
            _onSecondHalfAnimationDraw: function(a) {
                y(this._mainNextHeroContent, {
                    opacity: a.target.opacity
                })
            },
            _getTransitionPageHeight: function() {
                return this._transitionPageHeight
            },
            _setTransitionPageHeight: function() {
                this._transitionPageHeight = parseInt(u(this._oldMainEl, "height").height, 10) + "px"
            },
            _lockPageHeight: function() {
                if (!this._transitionPageHeight) {
                    return
                }
                document.body.style.height = this._getTransitionPageHeight()
            },
            _unlockPageHeight: function() {
                document.body.style.height = ""
            },
            _onSectionJumpAnimationFinished: function(a) {
                this._loadedPageMainEl.style.display = "block";
                y(this._loadedPageMainEl, {
                    display: "block",
                    position: "fixed",
                    top: 0,
                    left: 0,
                    width: "100%",
                    height: "100vh",
                    zIndex: 999
                });
                v.insertAfter(this._loadedPageMainEl, this._oldMainEl);
                window.requestAnimationFrame(function() {
                    window.scrollTo(0, B.getEndStateScrollOffset());
                    v.remove(this._oldMainEl);
                    this._oldMainEl = null;
                    window.requestAnimationFrame(function() {
                        this._completedJump = true;
                        if (this._completedSecondHalf) {
                            window.requestAnimationFrame(function() {
                                this._loadedPageMainEl.removeAttribute("style");
                                this._mainNextContainerEl.removeAttribute("style");
                                this._mainNextContainerEl.style.display = "none";
                                this._mainNextHeroEl.removeAttribute("style");
                                this._mainNextHeroImageEl.removeAttribute("style");
                                this._mainNextHeroContent.removeAttribute("style");
                                this._unlockPageHeight();
                                this._pageJumper.onTransitionComplete()
                            }.bind(this))
                        }
                    }.bind(this))
                }.bind(this))
            },
            _hideOtherSectionPreviews: function() {
                var b = this._mainNextContainerEl.childNodes;
                for (var c = 0, d = b.length; c < d; c++) {
                    var a = b[c];
                    if (a.nodeType !== Node.ELEMENT_NODE) {
                        continue
                    }
                    if (a == this._mainNextHeroEl) {
                        continue
                    }
                    a.style.display = "none"
                }
                this._mainNextContainerEl.style.display = this._mainNextHeroEl.style.display = "block";
                this._mainNextHeroEl.style.opacity = "1"
            },
            _scrollToAnimated: function(b, a, c) {
                z.add(new x({
                    y: this._getScrollY()
                }, a, {
                    y: b
                }, {
                    delay: c,
                    ease: w.createBezier(0.215, 0.61, 0.355, 1).easingFunction,
                    onDraw: function(d) {
                        window.scrollTo(0, d.target.y)
                    }
                })).play()
            },
            clearStyles: function() {
                var a = "style";
                if (this._mainNextHeroEl) {
                    this._mainNextHeroEl.removeAttribute(a)
                }
                if (this._loadedPageMainEl) {
                    this._loadedPageMainEl.removeAttribute(a)
                }
                if (this._nextMainEl) {
                    this._nextMainEl.removeAttribute(a)
                }
                if (this._nextMainEl) {
                    this._nextMainEl.removeAttribute(a)
                }
            },
            _getScrollY: function() {
                return t.scrollY()
            }
        };
        H.exports = C
    }, {
        "../../../../config/next-animation-heights.json": 1210,
        "../../ClipRegistry": 1213,
        "./TopPageTransition": 1217,
        "ac-dom-metrics": 90,
        "ac-dom-nodes": 102,
        "ac-dom-styles/getStyle": 119,
        "ac-dom-styles/setStyle": 132,
        "ac-dom-traversal": 138,
        "ac-dom-traversal/querySelector": 147,
        "ac-easing": 153,
        "ac-eclipse": 179,
        "ac-viewport": "ac-viewport"
    }],
    1219: [function(G, H, D) {
        var F = G("../../../../config/next-animation-heights.json")["next-animation-heights"];
        var A = G("ac-dom-traversal/querySelector");
        var E = G("ac-dom-traversal").nextSibling;
        var J = G("ac-dom-traversal").previousSibling;
        var y = G("ac-dom-styles/setStyle");
        var u = G("ac-dom-styles/getStyle");
        var I = G("ac-dom-metrics");
        var v = G("ac-dom-nodes");
        var z = G("../../ClipRegistry");
        var B = G("./TopPageTransition");
        var w = G("ac-easing");
        var x = G("ac-eclipse").Clip;
        var t = G("ac-viewport").Viewport;
        var C = {
            initialize: function(c, b, a) {
                this._pageJumper = c;
                this._loadedPageMainEl = a;
                this._pageInfo = b;
                this._completedSecondHalf = false;
                this._completedJump = false;
                this._localNav = A(".localnav-wrapper, #ac-localnav");
                this._globalNav = A("#globalheader, #ac-globalnav");
                this._localNavOffset = this._localNavOffset || this._localNav.clientHeight;
                this._globalNavOffset = this._globalNavOffset || this._globalNav.clientHeight;
                this._previewBannerEl = A(".section-next");
                this._previewBannerImage = A(".section-image", this._previewBannerEl);
                this._previewBannerContent = A(".section-content", this._previewBannerEl);
                this._mainNextEl = E(this._previewBannerEl);
                this._mainPreviousEl = J(this._previewBannerEl);
                this._oldMainEl = A(".main");
                this._mainNextContainerEl = A(".main-next");
                this._mainNextHeroEl = A(".section-hero-" + this._pageInfo.name, this._mainNextContainerEl);
                this._mainNextHeroImageEl = A(".hero-headline .section-image", this._mainNextHeroEl);
                this._mainNextHeroContent = A(".hero-headline .section-content", this._mainNextHeroEl);
                this._setTransitionPageHeight()
            },
            clear: function() {
                this._pageInfo = null;
                this._loadedPageMainEl = null;
                this._mainNextHeroImageEl = null;
                this._mainNextHeroContent = null;
                this._mainNextHeroEl = null;
                this._previewBannerEl = null;
                this._previewBannerImage = null
            },
            performJumpTransition: function() {
                this._hideOtherSectionPreviews();
                y(this._mainNextHeroEl, {
                    height: "100vh",
                    opacity: 0,
                    display: "block",
                    transformOrigin: "50% 50.5%"
                });
                y(this._mainNextHeroContent, {
                    opacity: 0
                });
                var a = Math.min(this._getScrollY(), this._localNavOffset);
                y(this._mainNextContainerEl, {
                    position: "absolute",
                    zIndex: 5,
                    top: (I.getPagePosition(this._previewBannerEl).top - a) + "px",
                    height: "0",
                    width: "100%"
                });
                this._composeAnimations()
            },
            _composeAnimations: function() {
                var h = 1.25;
                var j = h / 2;
                var g = 0;
                var i = u(this._previewBannerEl, "height"),
                    d = F.large,
                    k = parseFloat(i.height) + d;
                var f = I.getPagePosition(this._previewBannerEl).top;
                this._scrollToAnimated(f, h, g);
                var c = w.createBezier(0.46, 0.055, 0.115, 0.97).cssString;
                z.add(new x(this._mainNextEl, h, {
                    transform: {
                        translateY: t.innerHeight() / 2 + "px",
                        translateZ: 0
                    }
                }, {
                    ease: c,
                    delay: g
                })).play();
                z.add(new x(this._mainPreviousEl, h, {
                    transform: {
                        translateY: -t.innerHeight() / 2 + "px",
                        translateZ: 0
                    }
                }, {
                    ease: c,
                    delay: g
                })).play();
                var b = {
                    oldPageScale: 1,
                    oldPageOpacity: 1,
                    oldPageContentScale: 1,
                    newPageScale: 1,
                    newPageOpacity: 0
                };
                var a = {
                    oldPageScale: 0.94,
                    oldPageOpacity: 0,
                    oldPageContentScale: 0.5,
                    newPageScale: 1,
                    newPageOpacity: 1
                };
                z.add(new x(b, h, a, {
                    delay: g,
                    ease: "easeInOutCubic",
                    onStart: function() {
                        y(this._mainNextHeroImageEl, {
                            opacity: 0
                        });
                        y(this._mainNextContainerEl, {
                            position: "fixed",
                            zIndex: 2,
                            top: 0,
                            left: 0,
                            height: "100vh"
                        });
                        y(this._mainNextHeroEl, {
                            "background-color": "rgba(0,0,0,0)"
                        })
                    }.bind(this),
                    onDraw: this._onSectionJumpAnimationDraw.bind(this),
                    onComplete: this._onSectionJumpAnimationFinished.bind(this)
                })).play();
                z.add(new x({
                    opacity: 1
                }, j, {
                    opacity: 0
                }, {
                    ease: "easeInOutCubic",
                    onDraw: this._onFirstHalfAnimationDraw.bind(this)
                })).play();
                z.add(new x({
                    opacity: 0
                }, j, {
                    opacity: 1
                }, {
                    delay: j,
                    ease: "easeInOutCubic",
                    onDraw: this._onSecondHalfAnimationDraw.bind(this),
                    onComplete: function() {
                        this._completedSecondHalf = true;
                        if (this._completedJump) {
                            window.requestAnimationFrame(function() {
                                this._pageJumper.onTransitionComplete()
                            }.bind(this))
                        }
                    }.bind(this)
                })).play()
            },
            _onSectionJumpAnimationDraw: function(a) {
                y(this._mainNextHeroEl, {
                    opacity: a.target.newPageOpacity
                })
            },
            _onFirstHalfAnimationDraw: function(a) {
                y(this._previewBannerContent, {
                    opacity: a.target.opacity
                })
            },
            _onSecondHalfAnimationDraw: function(a) {
                y(this._mainNextHeroContent, {
                    opacity: a.target.opacity
                })
            },
            _onSectionJumpAnimationFinished: function(a) {
                this._lockPageHeight();
                this._loadedPageMainEl.style.display = "block";
                y(this._loadedPageMainEl, {
                    display: "block",
                    position: "fixed",
                    top: 0,
                    left: 0,
                    width: "100%",
                    height: "100vh",
                    zIndex: 999
                });
                v.insertAfter(this._loadedPageMainEl, this._oldMainEl);
                window.requestAnimationFrame(function() {
                    window.scrollTo(0, B.getEndStateScrollOffset());
                    v.remove(this._oldMainEl);
                    this._oldMainEl = null;
                    window.requestAnimationFrame(function() {
                        this._completedJump = true;
                        if (this._completedSecondHalf) {
                            window.requestAnimationFrame(function() {
                                this._loadedPageMainEl.removeAttribute("style");
                                this._mainNextHeroEl.removeAttribute("style");
                                this._mainNextContainerEl.style.display = "none";
                                this._mainNextHeroImageEl.removeAttribute("style");
                                this._mainNextHeroContent.removeAttribute("style");
                                this._unlockPageHeight();
                                this._pageJumper.onTransitionComplete()
                            }.bind(this))
                        }
                    }.bind(this))
                }.bind(this))
            },
            _hideOtherSectionPreviews: function() {
                var b = this._mainNextContainerEl.childNodes;
                for (var c = 0, d = b.length; c < d; c++) {
                    var a = b[c];
                    if (a.nodeType !== Node.ELEMENT_NODE) {
                        continue
                    }
                    if (a == this._mainNextHeroEl) {
                        continue
                    }
                    a.style.display = "none"
                }
                this._mainNextContainerEl.style.display = this._mainNextHeroEl.style.display = "block";
                this._mainNextHeroEl.style.opacity = "1"
            },
            _scrollToAnimated: function(b, a, c) {
                z.add(new x({
                    y: this._getScrollY()
                }, a, {
                    y: b
                }, {
                    delay: c,
                    ease: w.createBezier(0.215, 0.61, 0.355, 1).easingFunction,
                    onDraw: function(d) {
                        window.scrollTo(0, d.target.y)
                    }
                })).play()
            },
            _getTransitionPageHeight: function() {
                return this._transitionPageHeight
            },
            _setTransitionPageHeight: function() {
                this._transitionPageHeight = parseInt(u(this._oldMainEl, "height").height, 10) + "px"
            },
            _lockPageHeight: function() {
                if (!this._transitionPageHeight) {
                    return
                }
                document.body.style.height = this._getTransitionPageHeight()
            },
            _unlockPageHeight: function() {
                document.body.style.height = ""
            },
            clearStyles: function() {
                var a = "style";
                if (this._mainNextHeroEl) {
                    this._mainNextHeroEl.removeAttribute(a)
                }
                if (this._loadedPageMainEl) {
                    this._loadedPageMainEl.removeAttribute(a)
                }
                if (this._nextMainEl) {
                    this._nextMainEl.removeAttribute(a)
                }
                if (this._nextMainEl) {
                    this._nextMainEl.removeAttribute(a)
                }
            },
            _getScrollY: function() {
                return t.scrollY()
            }
        };
        H.exports = C
    }, {
        "../../../../config/next-animation-heights.json": 1210,
        "../../ClipRegistry": 1213,
        "./TopPageTransition": 1217,
        "ac-dom-metrics": 90,
        "ac-dom-nodes": 102,
        "ac-dom-styles/getStyle": 119,
        "ac-dom-styles/setStyle": 132,
        "ac-dom-traversal": 138,
        "ac-dom-traversal/querySelector": 147,
        "ac-easing": 153,
        "ac-eclipse": 179,
        "ac-viewport": "ac-viewport"
    }],
    1220: [function(n, q, m) {
        n("ac-polyfills/Object/create");
        var r = n("ac-dom-metrics");
        var t = n("../_shared/utils/browserPrefixed");
        var o = n("ac-value-smoother").ValueSmoother;
        var l = n("../_shared/utils/math-utils");

        function p(a, b) {
            this._element = a;
            this._trackedElement = b;
            this.isActive = false;
            this._smoother = new o(200);
            this._smoother.value = this._smoother.raw = b.percentInView;
            this._elements = [];
            this._rafId = -1;
            this._boundRaf = this.onRequestAnimationFrame.bind(this)
        }
        var k = p.prototype = {};
        p.prototype.constructor = p;
        k.destroy = function() {};
        k.addElement = function(b, c, a) {
            this._elements.push({
                el: b,
                range: c || b.clientHeight * -0.3,
                ease: a || 1
            })
        };
        k.removeElement = function() {};
        k.start = function() {
            this.isActive = true;
            this.onRequestAnimationFrame()
        };
        k.stop = function() {
            this.isActive = false;
            cancelAnimationFrame(this._rafId)
        };
        k.onRequestAnimationFrame = function() {
            this._rafId = requestAnimationFrame(this._boundRaf);
            for (var a = 0, c = this._elements.length; a < c; a++) {
                var g = this._elements[a].el;
                var b = this._elements[a].range;
                var f = this._elements[a].ease;
                var d = b * (this._smoother.value);
                g.style[t.transform] = "translateY(" + d + "px) translateZ(0)"
            }
        };
        k.onScroll = function(a, b, c) {
            if (!this.isActive) {
                return
            }
            var d = a > b ? this._trackedElement.percentInView * 0.5 : 1 - this._trackedElement.percentInView * 0.5;
            this._smoother.smooth(l.clamp(d, 0, 1))
        };
        q.exports = p
    }, {
        "../_shared/utils/browserPrefixed": 1243,
        "../_shared/utils/math-utils": 1244,
        "ac-dom-metrics": 90,
        "ac-polyfills/Object/create": 729,
        "ac-value-smoother": 834
    }],
    1221: [function(z, A, w) {
        var u = z("ac-dom-traversal");
        var x = z("ac-classlist");
        var y = z("ac-dom-events").addEventListener;
        var B = z("ac-viewport");
        var t = z("ac-object").create;
        var o = z("ac-event-emitter").EventEmitter;
        var p = {
            facebook: {
                width: 555,
                height: 368
            },
            twitter: {
                width: 550,
                height: 420
            },
            pinterest: {
                width: 750,
                height: 500
            },
            tumblr: {
                width: 450,
                height: 432
            },
            reply: {
                width: 550,
                height: 420
            },
            retweet: {
                width: 550,
                height: 420
            },
            favorite: {
                width: 550,
                height: 420
            },
            weibo: {
                width: 650,
                height: 426
            },
            qqweibo: {
                width: 658,
                height: 506
            },
            renren: {
                width: 500,
                height: 315
            },
            qzone: {
                width: 620,
                height: 645
            }
        };
        var q = "%3Ftimecode";

        function r(b) {
            this.shareWin = null;
            this.shareWinOpened = false;
            var a = this.handleClick;
            o.call(this);
            b = b || window;
            if (b === window) {
                B.on("click", this.handleClick, this)
            } else {
                y(b, "click", this.handleClick.bind(this))
            }
        }
        r.create = function(a) {
            return new r(a)
        };
        var v = r.prototype = t(o.prototype);
        v.handleClick = function(a) {
            var b = a.target;
            var c = b.getAttribute("data-share");
            if (c) {
                this.trigger("click-network", {
                    target: b,
                    network: c
                });
                if (c === "link") {
                    a.preventDefault();
                    this.showLinkInput(b)
                } else {
                    if (p[c] || c === "email") {
                        a.preventDefault();
                        this.showDialog(c, b.href, b.getAttribute("data-timecode"))
                    }
                }
            } else {
                if (u.matchesSelector(b, ".linkshare, .linkshare-input, .linkshare-input-text")) {
                    this.selectLinkInput(b)
                } else {
                    this.hideLinkInput()
                }
            }
            a.stopPropagation();
            a.preventDefault()
        };
        v.showDialog = function(a, d, g, c) {
            var b = this;
            if (b.shareWin && b.shareWin.closed) {
                b.shareWinOpened = false
            }
            var f;
            if (g) {
                d = d.replace(q, q + "%3D" + g)
            } else {
                d = d.replace(q, "")
            }
            if (a === "email") {
                window.location.href = d
            } else {
                f = this.getNetworkOptions(a);
                if (!b.shareWinOpened) {
                    b.shareWin = window.open(d, "_blank", f);
                    b.shareWin.onunload = function() {
                        b.shareWinOpened = true
                    }
                }
            }
            this.trigger("share", {
                network: a,
                url: d
            })
        };
        v.showLinkInput = function(a) {
            var b = u.ancestor(a, ".sharesheet");
            var d = u.querySelector(".linkshare-input, .linkshare-input-text", b);
            var c = u.querySelector(".linkshare", b);
            c.setAttribute("aria-hidden", false);
            this.activeLinkSharesheet = b;
            x.add(b, "show-linkshare");
            this.selectLinkInput(d)
        };
        v.hideLinkInput = function(a) {
            var b = a ? u.ancestor(a, ".sharesheet") : this.activeLinkSharesheet;
            var c;
            if (b) {
                x.remove(b, "show-linkshare");
                c = u.querySelector(".linkshare", b);
                if (c) {
                    c.setAttribute("aria-hidden", true)
                }
            }
        };
        v.selectLinkInput = function(b) {
            var a;
            var c;
            if (window.getSelection) {
                a = window.getSelection();
                c = document.createRange();
                c.selectNodeContents(b);
                a.removeAllRanges();
                a.addRange(c)
            } else {
                if (document.body.createTextRange) {
                    c = document.body.createTextRange();
                    c.moveToElementText(b);
                    c.select()
                }
            }
        };
        v.getNetworkOptions = function(c) {
            var d = p[c];
            var f;
            var g;
            var a;
            var b;
            if (!d.options) {
                f = p[c].width;
                g = p[c].height;
                a = (window.screen.availWidth - f) / 2;
                b = (window.screen.availHeight - g) / 2;
                d.options = "status=1,width=" + f + ",height=" + g + ",top=" + b + ",left=" + a
            }
            return d.options
        };
        A.exports = r
    }, {
        "ac-classlist": 17,
        "ac-dom-events": 67,
        "ac-dom-traversal": 138,
        "ac-event-emitter": 202,
        "ac-object": 713,
        "ac-viewport": "ac-viewport"
    }],
    1222: [function(r, t, p) {
        var n = r("ac-dom-traversal");
        var l = r("ac-dom-events");
        var q = r("ac-classlist");
        var k = r("./ShareListener");
        var o;
        var m = function(a) {
            this.domHead = document.getElementsByTagName("head")[0];
            this.wrapperElement = a;
            this.shareOpenButton = n.querySelector(".icon-share", a);
            this.shareCloseButton = n.querySelector(".icon-closealt", a);
            this.shareSheetContainer = n.querySelector(".sharesheet", a);
            this.imageBox = n.previousSibling(a);
            this.imageToBlur = n.querySelector("figure", this.imageBox);
            this.sectionSharing = false;
            this.originalTitle = document.title;
            this.originalDesc = null;
            this.originalOGImg = null;
            this._getOriginalTags();
            this.sheetOGTitle = "" + this.originalTitle + " - " + this.shareSheetContainer.getAttribute("data-og-title") + "";
            this.sheetOGDesc = this.shareSheetContainer.getAttribute("data-og-desc");
            this.sheetOGImg = this.shareSheetContainer.getAttribute("data-og-img");
            k.create(this.shareSheetContainer);
            this._attachEvents()
        };
        o = m.prototype;
        o._attachEvents = function() {
            l.addEventListener(this.shareOpenButton, "click", this._openShareSheet.bind(this));
            l.addEventListener(this.shareCloseButton, "click", this._closeShareSheet.bind(this))
        };
        o._openShareSheet = function(a) {
            this._closeOpenShareSheets();
            this._setupMetaTags();
            q.add(this.wrapperElement, "show-sharesheet");
            q.add(this.imageToBlur, "blur")
        };
        o._setupMetaTags = function() {
            if (this.sheetOGTitle && this.sheetOGDesc && this.sheetOGImg) {
                this.sectionSharing = true;
                this.ogTitleTag = null;
                this.ogDescTag = null;
                this.ogImgTag = null;
                this._getNewMetaTags();
                if (!this.ogTitleTag) {
                    this.ogTitleTag = this._createMetaTag("og:title", this.sheetOGTitle)
                } else {
                    this.ogTitleTag.setAttribute("content", this.sheetOGTitle)
                }
                if (!this.ogDescTag) {
                    this.ogDescTag = this._createMetaTag("og:description", this.sheetOGDesc)
                } else {
                    this.ogDescTag.setAttribute("content", this.sheetOGDesc)
                }
                this.ogImgTag.setAttribute("content", this.sheetOGImg)
            }
        };
        o._getNewMetaTags = function() {
            var a = document.getElementsByTagName("meta");
            for (var b = 0; b < a.length; b++) {
                if (a[b].getAttribute("property") == "og:title") {
                    this.ogTitleTag = a[b]
                }
                if (a[b].getAttribute("property") == "og:description") {
                    this.ogDescTag = a[b]
                }
                if (a[b].getAttribute("property") == "og:image") {
                    this.ogImgTag = a[b]
                }
            }
        };
        o._getOriginalTags = function() {
            var a = document.getElementsByTagName("meta");
            for (var b = 0; b < a.length; b++) {
                if (a[b].getAttribute("name") == "Description") {
                    this.originalDesc = a[b].getAttribute("content")
                }
                if (a[b].getAttribute("property") == "og:image") {
                    this.originalOGImg = a[b].getAttribute("content")
                }
            }
        };
        o._createMetaTag = function(a, b) {
            var c = document.createElement("meta");
            c.setAttribute("property", a);
            c.content = b;
            this.domHead.appendChild(c);
            return c
        };
        o._closeShareSheet = function(a) {
            q.remove(this.imageToBlur, "blur");
            q.remove(this.wrapperElement, "show-sharesheet");
            if (this.sectionSharing) {
                this.ogTitleTag.setAttribute("content", this.originalTitle);
                this.ogDescTag.setAttribute("content", this.originalDesc);
                this.ogImgTag.setAttribute("content", this.originalOGImg)
            }
        };
        o._closeOpenShareSheets = function() {
            var b = n.querySelectorAll(".sharesheet");
            if (b.length > 1) {
                for (var c = 0; c < b.length; c++) {
                    var a = n.querySelector("figure", b[c].offsetParent);
                    q.remove(b[c].parentNode, "show-sharesheet");
                    q.remove(b[c].offsetParent.firstElementChild.firstElementChild.firstElementChild, "blur")
                }
            }
        };
        t.exports = m
    }, {
        "./ShareListener": 1221,
        "ac-classlist": 17,
        "ac-dom-events": 67,
        "ac-dom-traversal": 138
    }],
    1223: [function(g, k, h) {
        function i() {
            this._timeouts = []
        }
        var j = i.prototype = {};
        j.setTimeout = function(b, c) {
            var a = setTimeout(b, c);
            this._timeouts.push(a);
            return a
        };
        j.clearTimeouts = function() {
            for (var a = 0, b = this._timeouts.length; a < b; a++) {
                clearTimeout(this._timeouts[a])
            }
            this._timeouts = []
        };
        k.exports = new i()
    }, {}],
    1224: [function(A, C, x) {
        A("ac-polyfills/Element/prototype.classList");
        var t = A("ac-feature");
        var v = A("./model/TransitionType");
        var z = A("./model/DataAttributes");
        var y = A("./model/FeatureDetectionMap");
        var p = A("./model/PageMap");
        var B = A("ac-localnav").Localnav;
        var u = A("./PageJumper/PageJumper");

        function q() {
            var a = document.getElementsByTagName("html")[0];
            y.TOUCH = a.classList.contains("touch");
            y.CSS_FILTER = a.classList.contains("cssFilter");
            y.CSS_ANIMATION = a.classList.contains("cssAnimation");
            y.SVG = a.classList.contains("svg");
            y.WEB_GL = a.classList.contains("webgl");
            y.VIDEO = a.classList.contains("video");
            y.CSS_OBJECT_FIT = a.classList.contains("cssObjectFit");
            y.IS_DESKTOP = t.isDesktop();
            y.IS_HANDHELD = t.isHandheld();
            y.POSITION_FIXED = a.classList.contains("positionFixed");
            y.IS_RETINA = t.isRetina();
            y.PAGE_JUMP = a.classList.contains("pageJump")
        }

        function r() {
            var a = window.location.pathname.split("/");
            var c = "";
            for (var b = 0; b < a.length; b++) {
                c += a[b] + "/";
                if (a[b] == "music") {
                    break
                }
            }
            return c
        }

        function w() {
            var c = document.querySelectorAll(".localnav-link[" + z.JUMP_SECTION_NAME + "]");
            for (var a = 0, d = c.length; a < d; a++) {
                var b = c[a];
                b.addEventListener("click", D)
            }
        }

        function D(a) {
            var b = a.currentTarget;
            var c = b.getAttribute(z.JUMP_SECTION_NAME);
            var d = c.replace(/-/g, "");
            if (!y.PAGE_JUMP) {
                return
            }
            a.preventDefault();
            u.sharedInstance().performJump({
                url: c,
                name: d,
                transitionType: v.FROM_LOCAL_NAV
            })
        }
        C.exports = (function() {
            var c = new B();
            var a = r();
            var b = new u(a, p);
            if (!document.getElementById("ac-localnav")) {
                c.createLocalnav()
            }
            w();
            q();
            return {
                localNav: c,
                router: a
            }
        }())
    }, {
        "./PageJumper/PageJumper": 1216,
        "./model/DataAttributes": 1231,
        "./model/FeatureDetectionMap": 1232,
        "./model/PageMap": 1233,
        "./model/TransitionType": 1235,
        "ac-feature": 213,
        "ac-localnav": 705,
        "ac-polyfills/Element/prototype.classList": 727
    }],
    1225: [function(x, y, u) {
        x("ac-polyfills/Object/create");
        var t = x("../utils/math-utils");
        var p = x("ac-eclipse").Clip;
        var n = x("../../_shared/three/three.vector2");
        var w = x("../../_shared/TimeoutRegistry");
        var q = x("../../_shared/ClipRegistry");
        var v = x("../model/FeatureDetectionMap");
        var o = 60 * 5;

        function z(f, a, g, b, c, d) {
            this.x = f;
            this.y = a;
            this.color = "#FFFFFF";
            this.text = b;
            this.index = c;
            this.retinaScale = 1;
            this._spawnDelegate = d;
            this._largestTextLineWidth = 0;
            this.attractionForce = t.randRange(100, 400) - g * 0.3;
            this.attractionPoint = new n(0, 0);
            this.attractionForceScale = 0;
            this.scale = 1;
            this.radius = g;
            this.radiusSquared = this.radius * g;
            this.padding = (g > 55) ? 12 : 5;
            this.originalRadius = this.radius;
            this.isStatic = false;
            this.state = z.STATE_NORMAL;
            this.lifeTime = Number.MAX_VALUE;
            this.showDelay = 0;
            this.devShouldDrawCircles = false
        }
        var r = z.prototype = {};
        r.destroy = function() {
            this._spawnDelegate = null;
            this.attractionPoint = null
        };
        r.hide = function(a, c) {
            var b = this;
            this.state = z.STATE_HIDING;
            q.add(new p({
                scale: this.scale
            }, a, {
                scale: 0.01
            }, {
                delay: c,
                ease: "easeInOutBack",
                onDraw: function(d) {
                    b.scale = d.target.scale
                },
                onComplete: function(d) {
                    b.isStatic = true;
                    b.show(b.showDelay)
                }
            }).play())
        };
        r.show = function(c) {
            var b = this;
            this.showDelay = t.randRange(0.5, 2);
            this.state = z.STATE_SHOWING;
            this.attractionForceScale = 1;
            var a = this._spawnDelegate.getNextCirclePackerSpawnPoint(this);
            this.x = a.x * this.retinaScale;
            this.y = a.y * this.retinaScale;
            q.add(new p({
                scale: 0
            }, 1.5, {
                scale: 1
            }, {
                delay: c,
                ease: "easeOutBack",
                onStart: function() {
                    b.isStatic = false
                },
                onDraw: function(d) {
                    b.scale = d.target.scale
                },
                onComplete: function() {
                    b.lifeTime = t.randRange(o * 2, o * 5);
                    b.state = z.STATE_NORMAL
                }
            }).play())
        };
        r.animateIn = function(b) {
            this.attractionForceScale = 0;
            this.showDelay = 0;
            var a = this;
            q.add(new p({
                scale: 2.5
            }, 3, {
                scale: 1.5
            }, {
                ease: "easeOutQuad",
                delay: b,
                onDraw: function(c) {
                    this.attractionForceScale = c.target.scale
                }.bind(this),
                onComplete: function() {
                    this.lifeTime = Number.POSITIVE_INFINITY;
                    w.setTimeout(function() {
                        a.lifeTime = 0
                    }, this.index * 200)
                }.bind(this)
            }).play())
        };
        r.applyAttraction = function(a, b) {
            if (this.isStatic) {
                return
            }
            this.attractionPoint.x = a;
            this.attractionPoint.y = b;
            this.x += ((a - this.x) / this.attractionForce) * this.attractionForceScale;
            this.y += ((b - this.y) / this.attractionForce) * this.attractionForceScale
        };
        r.applyRepulsion = function(f) {
            var a = this.distance(f.x, f.y),
                c = a - ((this.radius * this.scale) + (f.radius * f.scale));
            if (c < 0) {
                var d = new n(f.x - this.x, f.y - this.y).normalize();
                var b = d.multiplyScalar(c * 0.5);
                if (!f.isStatic) {
                    f.x -= b.x;
                    f.y -= b.y
                }
                if (!this.isStatic) {
                    this.x += b.x;
                    this.y += b.y
                }
            }
        };
        r.draw = function(d, f, a) {
            if ((this.radius * this.scale) < 10) {
                return
            }
            if (this.isStatic && !this.devShouldDrawCircles) {
                return
            }
            var g = Math.round(this.x + f);
            var b = Math.round(this.y + a);
            var c = this.padding;
            if (v.IS_DESKTOP && this.retinaScale > 1) {
                c *= this.retinaScale * 0.5
            }
            d.beginPath();
            d.arc(g, b, (this.radius * this.scale) - (c * this.scale), 0, 2 * Math.PI, false);
            d.fillStyle = this.color;
            d.fill();
            d.closePath()
        };
        r.drawText = function(d, f, a) {
            if ((this.radius * this.scale) < this._largestTextLineWidth) {
                return
            }
            var g = Math.round(this.x + f);
            var b = Math.round(this.y + a);
            for (var c = 0; c < this._textLines.length; c++) {
                d.fillText(this._textLines[c].text, g, b + this._textLines[c].offsetY)
            }
        };
        r.preCalculateTextLayout = function(g, f) {
            this._textLines = [];
            var j = this.text.split(" ");
            var i = f;
            var k = i * (j.length - 1);
            var a = 0;
            for (var b = 0; b < j.length; b++) {
                var h = j[b].replace("&nbsp;", "").replace("\n", "");
                var d = g.measureText(h).width;
                a = Math.max(d, a);
                var c = {
                    text: h,
                    offsetY: (-k * 0.5) + b * i
                };
                this._textLines.push(c)
            }
            this._largestTextLineWidth = a - (this.padding * 3)
        };
        r.containsPoint = function(b, c) {
            var a = this.distanceSquared(b, c);
            return a < this.radiusSquared
        };
        r.distance = function(a, b) {
            var c = this.x - a;
            var d = this.y - b;
            return Math.sqrt((c * c) + (d * d))
        };
        r.distanceSquared = function(a, b) {
            var c = this.x - a;
            var d = this.y - b;
            return (c * c) + (d * d)
        };
        r.setRadius = function(a) {
            this.radius = a;
            this.radiusSquared = a * a
        };
        r.setColor = function(a) {
            this.color = a
        };
        r.setPosition = function(b, a) {
            this.x = b;
            this.y = a
        };
        r.onBreakpoint = function(a) {
            this.radius = this.originalRadius * a;
            this.radiusSquared = this.radius * this.radius;
            this.padding = (this.radius > 55) ? 12 : 5 * a
        };
        r.toString = function() {
            return "Circle[" + this.text + "]"
        };
        z.STATE_NORMAL = 0;
        z.STATE_HIDING = 1;
        z.STATE_SHOWING = 2;
        z.VIEWPORT_SCALE = 1;
        y.exports = z
    }, {
        "../../_shared/ClipRegistry": 1213,
        "../../_shared/TimeoutRegistry": 1223,
        "../../_shared/three/three.vector2": 1242,
        "../model/FeatureDetectionMap": 1232,
        "../utils/math-utils": 1244,
        "ac-eclipse": 179,
        "ac-polyfills/Object/create": 729
    }],
    1226: [function(v, x, t) {
        var q = v("ac-dom-traversal/querySelector");
        var y = v("ac-dom-traversal/querySelectorAll");
        var n = v("ac-browser");
        var r = v("../utils/math-utils");
        var z = v("./Circle");
        var u = v("../model/FeatureDetectionMap");

        function w(b, f, c, g, d, a) {
            this._containerEl = b;
            this._spawnDelegate = f;
            this._ctx = null;
            this._blurScale = 1;
            this.retinaScale = 1;
            if (a != undefined && a == true) {
                this.retinaScale = 2
            }
            this._width = c;
            this._height = g;
            this.viewportScale = 1;
            this.fontSize = 13 * this.retinaScale;
            this._attractionPoint = {
                x: this._width / 2,
                y: this._height / 2
            };
            this._circles = [];
            this.backgroundColor = "#FFFFFF";
            this.setupCanvas();
            this.setupCircles();
            this.onBreakpoint(d);
            this.removeInfoElement()
        }
        var p = w.prototype = {};
        p.setupCanvas = function() {
            this.canvas = document.createElement("canvas");
            this.canvas.className = "circlepacker";
            this._ctx = this.canvas.getContext("2d");
            this._containerEl.appendChild(this.canvas);
            this.updateCanvasDimensions()
        };
        p.destroy = function() {
            for (var a = 0, b = this._circles.length; a < b; a++) {
                this._circles[a].destroy()
            }
            this._circles = null;
            this._ctx = null;
            this._containerEl = null;
            this._spawnDelegate = null
        };
        p.setupCircles = function() {
            var b = y("li", this._containerEl);
            var j = u.IS_HANDHELD ? b.length * 0.5 : b.length;
            for (var k = 0; k < j; k++) {
                var h = b[k];
                var g = h.innerText || h.textContent;
                var d = h.clientWidth;
                var i = (d / 2 + 5) * this.retinaScale;
                var a = window.getComputedStyle(h).backgroundColor;
                var f = this.addCircle(0, 0, i, g, a);
                f.retinaScale = this.retinaScale;
                var c = this._spawnDelegate.getNextCirclePackerSpawnPoint(f);
                f.setPosition(c.x, c.y)
            }
        };
        p.animateIn = function() {
            for (var a = 0, c = this._circles.length; a < c; a++) {
                var b = a * 0.1;
                this._circles[a].animateIn(b)
            }
        };
        p.removeInfoElement = function() {
            this._containerEl.removeChild(this._containerEl.getElementsByTagName("ul")[0])
        };
        p.addCircle = function(g, a, h, b, d, f) {
            var c = new z(g, a, h, b, this._circles.length, this._spawnDelegate);
            c.isStatic = f;
            c.setColor(d);
            c.preCalculateTextLayout(this._ctx, this.fontSize);
            this._circles.push(c);
            return c
        };
        p.update = function() {
            this.applyAttraction();
            this.applyRepulsion();
            this.clear();
            this.draw();
            for (var b = 0, c = this._circles.length; b < c; b++) {
                var a = this._circles[b];
                if (a.isStatic || a.state != z.STATE_NORMAL) {
                    continue
                }
                a.lifeTime--;
                if (a.lifeTime <= 0) {
                    a.hide(1.5, 0)
                }
            }
        };
        p.onResize = function(a) {
            this._width = this._containerEl.clientWidth;
            this._height = this._containerEl.clientHeight;
            var b = {
                width: this._width,
                height: this._height
            };
            for (var c = 0, d = this._circles.length; c < d; c++) {
                this._circles[c].area = b
            }
            this.updateCanvasDimensions()
        };
        p.onBreakpoint = function(a) {
            if (!this._ctx) {
                return
            }
            var d = {
                xlarge: 1,
                large: 1,
                medium: 0.6,
                small: 0.51
            };
            var b = {
                xlarge: 13,
                large: 13,
                medium: 7,
                small: 7
            };
            this.viewportScale = d[a] || 1;
            this.fontSize = b[a] || 13;
            this.fontSize *= this.retinaScale;
            this.setFont();
            for (var c = 0, f = this._circles.length; c < f; c++) {
                this._circles[c].onBreakpoint(this.viewportScale);
                this._circles[c].preCalculateTextLayout(this._ctx, this.fontSize)
            }
        };
        p.setFont = function() {
            this._ctx.font = this.fontSize + "px 'Helvetica Neue'";
            if (n.name == "IE") {
                this._ctx.font = this.fontSize + "px 'Arial'"
            }
            this._ctx.fillStyle = "#ffffff";
            this._ctx.textAlign = "center";
            this._ctx.textBaseline = "middle"
        };
        p.updateCanvasDimensions = function() {
            this._ctx.canvas.style.width = (this._width * this._blurScale) + "px";
            this._ctx.canvas.style.height = (this._height * this._blurScale) + "px";
            var b = this.getIsRetina();
            var a = (b) ? 2 : 1;
            this._ctx.canvas.width = this._width * a * this._blurScale;
            this._ctx.canvas.height = this._height * a * this._blurScale
        };
        p.onMouseDown = function(a) {
            if (a.shiftKey && a.altKey) {
                this._devOutputCircles();
                return
            }
            var b = null;
            for (var c = 0, d = this._circles.length; c < d; c++) {
                if (this._circles[c].containsPoint(a.clientX, a.clientY)) {
                    b = this._circles[c];
                    break
                }
            }
            if (b) {
                b.hide(0.5, 0)
            }
        };
        p.applyAttraction = function() {
            for (var b = 0, d = this._circles.length; b < d; b++) {
                var c = this._circles[b];
                var a = this._spawnDelegate.getAttractionPoint(c);
                a.x *= this.retinaScale;
                a.y *= this.retinaScale;
                c.applyAttraction(a.x, a.y)
            }
        };
        p.applyRepulsion = function() {
            var f = this._circles.length;
            for (var a = 0; a < f; a++) {
                var b = this._circles[a];
                for (var c = a + 1; c < f; c++) {
                    var d = this._circles[c];
                    if (b == d) {
                        continue
                    }
                    b.applyRepulsion(d)
                }
            }
        };
        p.clear = function() {
            this._ctx.fillStyle = this.backgroundColor;
            this._ctx.fillRect(0, 0, this._width * this.retinaScale, this._height * this.retinaScale)
        };
        p.draw = function() {
            var a = 0;
            var b = 0;
            for (var c = 0, d = this._circles.length; c < d; c++) {
                this._circles[c].draw(this._ctx, a, b)
            }
            this.setFont();
            for (var c = 0, d = this._circles.length; c < d; c++) {
                this._circles[c].drawText(this._ctx, a, b)
            }
        };
        p.setCenter = function(b, a) {
            this._attractionPoint.x = b;
            this._attractionPoint.y = a
        };
        p.setSupportsRetina = function(b) {
            var a = this.getIsRetina();
            this.retinaScale = b ? 2 : 1;
            if (this.getIsRetina() != a) {
                this.onResize(null)
            }
        };
        p.getIsRetina = function() {
            return this.retinaScale > 1
        };
        p.toString = function() {
            return ""
        };
        var o = function(b, d, a, c) {
            return a * (b /= c) * b + d
        };
        x.exports = w
    }, {
        "../model/FeatureDetectionMap": 1232,
        "../utils/math-utils": 1244,
        "./Circle": 1225,
        "ac-browser": 9,
        "ac-dom-traversal/querySelector": 147,
        "ac-dom-traversal/querySelectorAll": 148
    }],
    1227: [function(C, D, v) {
        var q = null;
        var z = C("ac-queue").Queue;
        var y = C("ac-queue").LiveQueue;
        var E = C("ac-ajax");
        var r = C("ac-eclipse").Clip;
        var A = C("../../_shared/TimeoutRegistry");
        var F = C("../../_shared/utils/browserPrefixed");
        var w = C("../../_shared/utils/math-utils");
        var t = C("./GlobeRippleTexture");
        var x = C("./src/music/js/_shared/SharedShaders.js");
        "use strict";
        var B = function(b, a) {
            q = window.THREE;
            this.controller = b;
            this.canvasEl = this.controller.renderer.domElement;
            this.isWhite = a;
            this.material = null;
            this.geometry = null;
            this.bufferGeometry = null;
            this.mesh = null;
            this.container = null;
            this.shaderMaterial = null;
            this.rippleTexture = null;
            this.line = null;
            this.geometryCircle = null;
            this.meshCircles = [];
            this.meshCirclesDim = [];
            this.labels = [];
            this._bindMethods = {
                onClickLabel: this._onClickLabel.bind(this)
            };
            this._shaderStringVS = x["globe_vs.glsl"];
            this._shaderStringFS = x["globe_fs.glsl"];
            this.viewportSize = "";
            this.isActive = false;
            this.hasAnimatedIn = false;
            this.hasFinishedAnimatingIn = false;
            this.isAnimating = false;
            this.setup()
        };
        var u = B.prototype = {};
        B.prototype.constructor = B;
        u.destroy = function() {
            if (this.material) {
                this.material.dispose();
                this.material = null
            }
            if (this.geometry) {
                this.geometry.dispose();
                this.geometry = null
            }
            if (this.bufferGeometry) {
                this.bufferGeometry.dispose();
                this.bufferGeometry = null
            }
            if (this.mesh) {
                this.mesh = null
            }
            if (this.container) {
                this.container = null
            }
            if (this.shaderMaterial) {
                this.shaderMaterial.dispose();
                this.shaderMaterial = null
            }
            if (this.rippleTexture) {
                this.rippleTexture.destroy();
                this.rippleTexture = null
            }
        };
        u.setup = function() {
            this.dataEl = document.getElementById("globe-data");
            this.dataEl.style.display = "none";
            this.heightmapSrc = this.dataEl.getAttribute("data-heightmap-src");
            this.labelLaSrc = this.dataEl.getAttribute("data-label-la-path");
            this.labelNycSrc = this.dataEl.getAttribute("data-label-nyc-path");
            this.labelLonSrc = this.dataEl.getAttribute("data-label-lon-path");
            this.setupGlobe();
            this.setupCircles();
            this.setupLabels();
            this.setupLines();
            this.addEventListeners();
            if (!this.isWhite) {
                this.controller.controls.object.zoom = 2.25;
                this.controller.controls.object.updateProjectionMatrix();
                this.container.position.x = 0;
                this.container.position.y = -160
            } else {
                var a = this.meshCircles[2].userData;
                this.controller.controls.object.position.x = a.x + 200;
                this.controller.controls.object.position.y = a.y - 200;
                this.controller.controls.object.position.z = a.z + 100;
                this.container.position.y = -60
            }
        };
        u.animateIn = function(a) {
            if (!this.isActive || this.hasAnimatedIn) {
                return
            }
            this.hasAnimatedIn = true;
            var d = !isNaN(parseInt(a)) ? a : (this.isWhite) ? 2 : 0,
                f = this.meshCircles[d].userData;
            new r(this.controller.controls.object.position, (this.isWhite) ? 2 : 4, {
                x: f.x,
                y: f.y,
                z: f.z
            }, {
                delay: (this.isWhite) ? 0.5 : 0,
                ease: "easeInOutCubic",
                onComplete: function() {
                    this.hasFinishedAnimatingIn = true
                }.bind(this),
                destroyOnComplete: true,
                propsFrom: {
                    x: (this.isWhite) ? f.x + 200 : f.x + 800,
                    y: (this.isWhite) ? f.y - 200 : f.y + 200,
                    z: (this.isWhite) ? f.z + 100 : f.z + 200
                }
            }).play();
            new r(this.shaderMaterial.uniforms.totalScale, (this.isWhite) ? 1 : 5, {
                value: (this.isWhite) ? 1.2 : 0
            }, {
                delay: (this.isWhite) ? 1 : 0,
                ease: "easeOutCubic",
                destroyOnComplete: true
            }).play();
            var b = (this.isWhite) ? 0 : -100,
                c = (this.isWhite) ? 0 : -140;
            new r(this.container.position, (this.isWhite) ? 0 : 4, {
                x: b,
                y: c
            }, {
                delay: 0,
                ease: "easeInOutCubic",
                destroyOnComplete: true
            }).play();
            if (this.controller.hasComposer) {
                new r(this.controller.dofPass.params, 2, {
                    topPx: 0,
                    radiusPx: (this.controller.height / 2) - (this.controller.height / 27)
                }, {
                    delay: 0.5,
                    ease: "easeInOutCubic",
                    destroyOnComplete: true
                }).play()
            }
            if (this.isWhite) {
                A.setTimeout((function() {
                    this.rippleTexture.selectLocation(d, true)
                }).bind(this), 1000)
            } else {
                A.setTimeout((function() {
                    this.rippleTexture.selectLocation(d)
                }).bind(this), 2500)
            }
            this.animateInLabels()
        };
        u.setupGlobe = function() {
            this.container = new q.Object3D();
            this.controller.scene.add(this.container);
            this.material = new q.MeshBasicMaterial({
                color: (this.isWhite) ? 16777215 : 0,
                side: q.DoubleSide
            });
            this.geometry = new q.IcosahedronGeometry(300, 5);
            this.bufferGeometry = new q.BufferGeometry().fromGeometry(this.geometry);
            this.mesh = new q.Mesh(this.bufferGeometry, this.material);
            this.mesh.rotation.x = q.Math.degToRad(-180);
            this.mesh.rotation.z = q.Math.degToRad(-180);
            this.container.add(this.mesh);
            this.rippleTexture = new t({
                controller: this
            })
        };
        u.setupCircles = function() {
            if (this.isWhite) {
                this.setupHiddenCircles()
            } else {
                this.setupVisibleCircles()
            }
        };
        u.setupHiddenCircles = function() {
            var b = {
                    LA: {
                        lat: 34.0522222,
                        lon: -118.2427778,
                        x: -440.46653,
                        y: 363.54475,
                        z: 820.87072,
                        outsideX: 177,
                        outsideY: 161
                    },
                    NY: {
                        lat: 40.7141667,
                        lon: -74.0063889,
                        x: 254.41554,
                        y: 477.89213,
                        z: 857.25995,
                        outsideX: 305,
                        outsideY: 140
                    },
                    LONDON: {
                        lat: 51.50722,
                        lon: -0.1275,
                        x: 773.83719,
                        y: 633.38452,
                        z: -0.20876,
                        outsideX: 507,
                        outsideY: 108
                    }
                },
                a;
            this.geometryCircle = new q.CircleGeometry(50, 4);
            a = this.setupHiddenCircle(b.LA);
            this.meshCircles.push(a);
            a = this.setupHiddenCircle(b.NY);
            this.meshCircles.push(a);
            a = this.setupHiddenCircle(b.LONDON);
            this.meshCircles.push(a)
        };
        u.setupHiddenCircle = function(c) {
            var a = new q.MeshBasicMaterial({
                    color: 13369344,
                    side: q.DoubleSide,
                    transparent: true,
                    opacity: 0
                }),
                b = new q.Mesh(this.geometryCircle, a),
                d = this.latLongToVector3(c.lat, c.lon, 325, 0);
            b.lookAt(d);
            b.position.copy(d);
            b.scale.set(0.01, 0.01, 0.01);
            b.userData = {
                x: c.x,
                y: c.y,
                z: c.z,
                outsideX: c.outsideX,
                outsideY: c.outsideY
            };
            this.container.add(b);
            return b
        };
        u.setupVisibleCircles = function() {
            var b = {
                    LA: {
                        lat: 34.0522222,
                        lon: -118.2427778,
                        x: -440.46653,
                        y: 363.54475,
                        z: 820.87072,
                        outsideX: 177,
                        outsideY: 161
                    },
                    NY: {
                        lat: 40.7141667,
                        lon: -74.0063889,
                        x: 254.41554,
                        y: 477.89213,
                        z: 857.25995,
                        outsideX: 305,
                        outsideY: 140
                    },
                    LONDON: {
                        lat: 51.50722,
                        lon: -0.1275,
                        x: 773.83719,
                        y: 633.38452,
                        z: -0.20876,
                        outsideX: 507,
                        outsideY: 108
                    }
                },
                a;
            this.geometryCircle = new q.CircleGeometry(30, 32);
            a = this.setupVisibleCircle(b.LA, this.labelLaSrc);
            this.meshCircles.push(a[0]);
            this.meshCirclesDim.push(a[1]);
            a = this.setupVisibleCircle(b.NY, this.labelNycSrc);
            this.meshCircles.push(a[0]);
            this.meshCirclesDim.push(a[1]);
            a = this.setupVisibleCircle(b.LONDON, this.labelLonSrc);
            this.meshCircles.push(a[0]);
            this.meshCirclesDim.push(a[1])
        };
        u.setupVisibleCircle = function(f, g) {
            var b = q.ImageUtils.loadTexture(g);
            b.minFilter = q.LinearFilter;
            b.magFilter = q.LinearFilter;
            b.wrapS = q.ClampToEdgeWrapping;
            b.wrapT = q.ClampToEdgeWrapping;
            var c = q.ImageUtils.loadTexture(g);
            c.minFilter = q.LinearFilter;
            c.magFilter = q.LinearFilter;
            c.wrapS = q.ClampToEdgeWrapping;
            c.wrapT = q.ClampToEdgeWrapping;
            var h = new q.MeshBasicMaterial({
                    color: 3355443,
                    side: q.DoubleSide,
                    transparent: true,
                    map: b
                }),
                i = new q.Mesh(this.geometryCircle, h),
                d = new q.MeshBasicMaterial({
                    color: 3355443,
                    side: q.DoubleSide,
                    transparent: true,
                    opacity: 0.75,
                    map: c
                }),
                a = new q.Mesh(this.geometryCircle, d),
                j = this.latLongToVector3(f.lat, f.lon, 340, 0);
            i.lookAt(j);
            i.position.copy(j);
            i.scale.set(0.01, 0.01, 0.01);
            i.userData = {
                x: f.x,
                y: f.y,
                z: f.z,
                outsideX: f.outsideX,
                outsideY: f.outsideY
            };
            a.lookAt(j);
            a.position.copy(j);
            a.scale.set(0.01, 0.01, 0.01);
            this.container.add(i);
            this.container.add(a);
            return [i, a]
        };
        u.setupLabels = function() {
            this.labels.push(document.getElementById("la"));
            this.labels.push(document.getElementById("ny"));
            this.labels.push(document.getElementById("london"));
            for (var a = 0; a < this.labels.length; a++) {
                this.labels[a].style.opacity = 0.000001;
                if (!this.isWhite) {
                    this.labels[a].style.display = "none"
                }
            }
        };
        u.animateInLabels = function() {
            if (this.isWhite) {
                for (var a = 0; a < this.labels.length; a++) {
                    new r(this.labels[a], 1.5, {
                        opacity: 0.9999999
                    }, {
                        delay: 1.5 + (0.2 * (2 - a)),
                        destroyOnComplete: false,
                        ease: "easeInOutSine"
                    }).play()
                }
            }
        };
        u.setupLines = function() {
            var j = {
                position: {
                    type: "f",
                    value: null
                }
            };
            var c = {
                heightmapTexture: {
                    type: "t",
                    value: q.ImageUtils.loadTexture(this.heightmapSrc)
                },
                heightmapScale: {
                    type: "f",
                    value: 8
                },
                rippleTexture: {
                    type: "t",
                    value: this.rippleTexture.texture
                },
                rippleScale: {
                    type: "f",
                    value: 40
                },
                totalScale: {
                    type: "f",
                    value: (this.isWhite) ? 1 : -0.75
                },
                isWhite: {
                    type: "f",
                    value: (this.isWhite) ? 1 : 0
                }
            };
            this.shaderMaterial = new q.ShaderMaterial({
                uniforms: c,
                attributes: j,
                vertexShader: this._shaderStringVS,
                fragmentShader: this._shaderStringFS,
                linewidth: 2,
                transparent: true,
                depthWrite: false,
                side: q.FrontSide
            });
            var f = new q.BufferGeometry();
            var h = [],
                d = [],
                a = [];
            var g = 0;
            for (var i = 0; i < this.bufferGeometry.attributes.position.array.length; i += 3) {
                h[g + 0] = this.bufferGeometry.attributes.position.array[i + 0];
                h[g + 1] = this.bufferGeometry.attributes.position.array[i + 1];
                h[g + 2] = this.bufferGeometry.attributes.position.array[i + 2];
                var b = new q.Vector3(h[g + 0] - this.mesh.position.x, h[g + 1] - this.mesh.position.y, h[g + 2] - this.mesh.position.z).normalize().multiplyScalar(310);
                h[g + 3] = b.x;
                h[g + 4] = b.y;
                h[g + 5] = b.z;
                d[g + 0] = this.bufferGeometry.attributes.normal.array[i + 0];
                d[g + 1] = this.bufferGeometry.attributes.normal.array[i + 1];
                d[g + 2] = this.bufferGeometry.attributes.normal.array[i + 2];
                d[g + 3] = this.bufferGeometry.attributes.normal.array[i + 0];
                d[g + 4] = this.bufferGeometry.attributes.normal.array[i + 1];
                d[g + 5] = this.bufferGeometry.attributes.normal.array[i + 2];
                g += 6
            }
            var g = 0;
            for (var i = 0; i < this.bufferGeometry.attributes.uv.array.length; i += 4) {
                a[g + 0] = this.bufferGeometry.attributes.uv.array[i + 0];
                a[g + 1] = this.bufferGeometry.attributes.uv.array[i + 1];
                a[g + 2] = this.bufferGeometry.attributes.uv.array[i + 2];
                a[g + 3] = this.bufferGeometry.attributes.uv.array[i + 3];
                a[g + 4] = this.bufferGeometry.attributes.uv.array[i + 0];
                a[g + 5] = this.bufferGeometry.attributes.uv.array[i + 1];
                a[g + 6] = this.bufferGeometry.attributes.uv.array[i + 2];
                a[g + 7] = this.bufferGeometry.attributes.uv.array[i + 3];
                g += 8
            }
            f.addAttribute("position", new q.BufferAttribute(new Float32Array(h), 3));
            f.addAttribute("normal", new q.BufferAttribute(new Float32Array(d), 3));
            f.addAttribute("uv", new q.BufferAttribute(new Float32Array(a), 2));
            f.computeBoundingSphere();
            this.line = new q.Line(f, this.shaderMaterial, q.LinePieces);
            this.mesh.add(this.line)
        };
        u.addEventListeners = function() {};
        u._onClickLabel = function(a) {
            a.preventDefault();
            var b = a.target.parentNode;
            if (b.classList.contains("radio-location")) {
                var c = parseInt(b.dataset.index, 10) - 1;
                this.rippleTexture.selectLocation(c)
            }
        };
        u.onRequestAnimationFrame = function() {
            if (this.autoRotate) {
                this.container.rotation.z -= 0.0005;
                this.container.rotation.y += 0.001
            }
            this.animateCircles();
            this.animateLabels()
        };
        u.animateCircles = function() {
            var a;
            for (a = 0; a < this.meshCircles.length; a++) {
                this.meshCircles[a].rotation.setFromRotationMatrix(this.controller.camera.matrix)
            }
            for (a = 0; a < this.meshCirclesDim.length; a++) {
                this.meshCirclesDim[a].rotation.setFromRotationMatrix(this.controller.camera.matrix)
            }
        };
        u.animateLabels = function() {
            var f;
            this.container.updateMatrixWorld();
            for (var d = 0; d < this.meshCircles.length; d++) {
                f = this.convertToScreenPosition(this.meshCircles[d].position);
                this.labels[d].style.left = (parseInt(f.x, 10)) + "px";
                this.labels[d].style.top = (parseInt(f.y, 10)) + "px";
                var c = 1.6 - Math.min(1, f.distance),
                    b = Math.max(0.4, w.map(1.6 - f.distance, 0.4, 1.3, 0.2, 1)),
                    a = parseInt(10 * c, 10);
                if (window.innerWidth <= 736) {
                    b *= 0.666
                }
                this.labels[d].style[F.transform] = "translate3d( -50%, -50%, 0 ) scale3d( " + b + ", " + b + ", 1.0 )";
                this.labels[d].style.zIndex = a
            }
        };
        u.changeBreakpoint = function(a) {
            this.viewportSize = a.name
        };
        u.latLongToVector3 = function(f, c, i, j) {
            var h = (f) * Math.PI / 180;
            var a = (c - 180) * Math.PI / 180;
            var b = -(i + j) * Math.cos(h) * Math.cos(a);
            var d = (i + j) * Math.sin(h);
            var g = (i + j) * Math.cos(h) * Math.sin(a);
            return new q.Vector3(b, d, g)
        };
        u.convertToScreenPosition = function(f) {
            var d = new q.Vector3(),
                c = this.controller.renderer.domElement;
            d.set(f.x, f.y, f.z);
            d.project(this.controller.camera);
            var g = Math.round((d.x + 1) * (c.width / this.controller.dpi) / 2),
                a = Math.round((-d.y + 1) * (c.height / this.controller.dpi) / 2),
                b = (d.z - 0.997) * 1000;
            return {
                x: g,
                y: a,
                distance: b
            }
        };
        D.exports = B
    }, {
        "../../_shared/TimeoutRegistry": 1223,
        "../../_shared/utils/browserPrefixed": 1243,
        "../../_shared/utils/math-utils": 1244,
        "./GlobeRippleTexture": 1229,
        "./src/music/js/_shared/SharedShaders.js": "./src/music/js/_shared/SharedShaders.js",
        "ac-ajax": 5,
        "ac-eclipse": 179,
        "ac-queue": 782
    }],
    1228: [function(m, l, i) {
        var h = m("ac-eclipse").Clip;
        "use strict";
        var j = function(a) {
            this.id = a.id;
            this.controller = a.controller;
            this.canvas = a.canvas || document.createElement("canvas");
            this.ctx = this.canvas.getContext("2d");
            this.width = a.width || 1024;
            this.height = a.height || 512;
            this.img = null;
            this.video = null;
            this.point = {
                x: 0,
                y: 0
            };
            this.mousePoint = {
                x: 0,
                y: 0
            };
            this.circleRadius = 0;
            this.circleRadiusMax = 0;
            this.circleOpacity = 1;
            this.circleWidth = 0;
            this.clip = null;
            this.init()
        };
        var k = j.prototype = {};
        j.prototype.constructor = j;
        k.destroy = function() {
            if (this.clip) {
                this.clip.destroy();
                this.clip = null
            }
            this.controller = null;
            this.canvas = null
        };
        j.prototype.init = function() {
            this.initCanvas()
        };
        k.initCanvas = function() {
            this.canvas.setAttribute("id", "texture-draw-" + this.id);
            this.canvas.width = this.width;
            this.canvas.height = this.height;
            this.clear()
        };
        k.play = function(b, a) {
            this.mousePoint.x = b;
            this.mousePoint.y = a;
            this.animateCircle(this.mousePoint)
        };
        k.clear = function() {
            this.ctx.fillStyle = "#000000";
            this.ctx.fillRect(0, 0, this.width, this.height)
        };
        k.animateCircle = function(b) {
            this.point.x = b.x;
            this.point.y = b.y;
            this.circleRadius = 0.1;
            this.circleRadiusMax = 35;
            this.circleWidth = 0.2;
            this.circleOpacity = 0;
            if (this.clip !== null) {
                this.clip.destroy()
            }
            var a = {
                circleRadius: this.circleRadiusMax,
                circleWidth: this.circleWidth,
                circleOpacity: this.circleOpacity
            };
            this.clip = new h(a, 1, {
                circleRadius: this.circleRadiusMax,
                circleWidth: 15,
                circleOpacity: 1
            }, {
                delay: 0.25,
                ease: "easeInOutSine",
                onDraw: this.drawCircle.bind(this),
                onComplete: this.animateCircleEnd.bind(this)
            }).play()
        };
        k.animateCircleEnd = function() {
            if (this.clip !== null) {
                this.clip.destroy()
            }
            var a = {
                circleRadius: this.circleRadiusMax,
                circleWidth: this.circleWidth,
                circleOpacity: this.circleOpacity
            };
            this.clip = new h(a, 1.5, {
                circleRadius: this.circleRadiusMax + this.circleRadiusMax * 0.75,
                circleWidth: this.circleWidth,
                circleOpacity: 0
            }, {
                delay: 0.25,
                ease: "easeInOutCubic",
                onDraw: this.drawCircle.bind(this)
            }).play()
        };
        k.drawCircle = function(c) {
            this.circleRadius = c.target.circleRadius;
            this.circleWidth = c.target.circleWidth;
            this.circleOpacity = c.target.circleOpacity;
            if (this.id === 1) {
                this.clear()
            }
            var b = parseInt((Math.random() * 255), 10);
            var d = this.point.x,
                a = this.point.y,
                f = this.circleRadius;
            this.ctx.beginPath();
            this.ctx.arc(d, a, f, 0, 2 * Math.PI);
            this.ctx.globalAlpha = this.circleOpacity;
            this.ctx.strokeStyle = "#ffffff";
            this.ctx.lineWidth = this.circleWidth;
            this.ctx.stroke();
            this.ctx.globalAlpha = 1;
            if (this.id === 1) {
                this.controller.updateTexture(this)
            } else {
                this.controller.updateTexture2(this)
            }
        };
        k.loadAnimation = function(a) {
            this.video = a;
            this.video.pause();
            this.video.onended = this.endAnimation.bind(this)
        };
        k.playAnimation = function(a) {
            this.point.x = a.x;
            this.point.y = a.y;
            this.animating = true;
            this.video.play()
        };
        k.endAnimation = function() {
            this.animating = false
        };
        k.drawAnimation = function() {
            if (this.video !== null && this.video.readyState === this.video.HAVE_ENOUGH_DATA) {
                this.drawImage(this.video, this.point.x, this.point.y)
            }
        };
        k.drawImage = function(b, c, a) {
            this.ctx.drawImage(b, c, a, this.width, this.height);
            this.controller.updateTexture(this)
        };
        k.onRequestAnimationFrame = function() {
            if (this.animating) {
                this.drawAnimation()
            }
        };
        l.exports = j
    }, {
        "ac-eclipse": 179
    }],
    1229: [function(m, l, i) {
        var h = m("ac-eclipse").Clip,
            j = null;
        GlobeRippleCanvas = m("./GlobeRippleCanvas"), ClipRegistry = m("../../_shared/ClipRegistry"), TimeoutRegistry = m("../../_shared/TimeoutRegistry");

        function k(a) {
            j = window.THREE;
            this.controller = a.controller;
            this.isWhite = this.controller.isWhite;
            this.width = 1024;
            this.height = 512;
            this.texture = null;
            this.textureDraw = null;
            this.circlesCounter = 0;
            this.currentCircleCounter = -1;
            this.init()
        }
        k.prototype.init = function() {
            var a = document.createElement("div");
            a.setAttribute("id", "map-helper");
            document.body.appendChild(a);
            this.createTextureDraw();
            this.createElements()
        };
        k.prototype.destroy = function() {
            if (this.textureDraw) {
                this.textureDraw.destroy();
                this.textureDraw = null
            }
            if (this.texture) {
                this.texture.dispose();
                this.texture = null
            }
            this.controller = null
        };
        k.prototype.createTextureDraw = function() {
            this.textureDraw = new GlobeRippleCanvas({
                controller: this,
                id: 1,
                width: this.width,
                height: this.height
            })
        };
        k.prototype.createElements = function() {
            this.texture = new j.Texture(this.textureDraw.canvas);
            this.texture.wrapS = j.RepeatWrapping;
            this.texture.wrapT = j.RepeatWrapping;
            this.texture.needsUpdate = true
        };
        k.prototype.updateTexture = function() {
            this.texture.needsUpdate = true
        };
        k.prototype.onRequestAnimationFrame = function() {
            this.textureDraw.onRequestAnimationFrame()
        };
        k.prototype.selectLocation = function(b, a) {
            this.circlesCounter = b;
            this.animateLocation(a)
        };
        k.prototype.animateLocation = function(v) {
            if (this.currentCircleCounter !== -1) {
                ClipRegistry.add(new h(this.controller.meshCircles[this.currentCircleCounter].scale, 1, {
                    x: 0.01,
                    y: 0.01,
                    z: 0.01
                }, {
                    delay: 0,
                    destroyOnComplete: true,
                    ease: "easeInCubic"
                }).play());
                if (!this.isWhite) {
                    ClipRegistry.add(new h(this.controller.meshCirclesDim[this.currentCircleCounter].scale, 1, {
                        x: 0.75,
                        y: 0.75,
                        z: 0.75
                    }, {
                        delay: 1,
                        destroyOnComplete: true,
                        ease: "easeOutCubic"
                    }).play())
                }
                var d = this.controller.labels[this.currentCircleCounter];
                d.classList.remove("selected")
            }
            var a = 0,
                c = 0;
            var u = this.controller.meshCircles[this.circlesCounter].userData;
            if (u.outsideX) {
                a = u.outsideX
            }
            if (u.outsideY) {
                c = u.outsideY
            }
            ClipRegistry.add(new h(this.controller.meshCircles[this.circlesCounter].scale, 1, {
                x: 1.25,
                y: 1.25,
                z: 1.25
            }, {
                delay: 1,
                destroyOnComplete: true,
                ease: "easeInOutCubic"
            }).play());
            if (!this.isWhite) {
                ClipRegistry.add(new h(this.controller.meshCirclesDim[this.circlesCounter].scale, 1, {
                    x: 0.01,
                    y: 0.01,
                    z: 0.01
                }, {
                    delay: 0,
                    destroyOnComplete: true,
                    ease: "easeOutCubic"
                }).play())
            }
            if (this.controller.isWhite) {
                var b = this.controller.labels[this.circlesCounter];
                TimeoutRegistry.setTimeout(function() {
                    b.classList.add("selected")
                }, 250);
                if (!v) {
                    this.controller.isAnimating = true;
                    var t = this.controller.controller.controls.object.position.clone(),
                        r = {
                            x: t.x,
                            y: t.y,
                            z: t.z
                        },
                        f = new j.Vector3(r.x, r.y, r.z),
                        g = u;
                    ClipRegistry.add(new h(r, (this.isWhite) ? 2.5 : 2.5, g, {
                        delay: 0,
                        destroyOnComplete: true,
                        ease: "easeInOutSine",
                        onDraw: function(q) {
                            var z = this.controller.container.position,
                                n = f.clone().sub(z.clone()),
                                o = n.length(),
                                y = n.normalize(),
                                p = y.multiplyScalar(999);
                            this.controller.controller.controls.object.position.x = p.x;
                            this.controller.controller.controls.object.position.y = p.y;
                            this.controller.controller.controls.object.position.z = p.z;
                            f.x = q.target.x;
                            f.y = q.target.y;
                            f.z = q.target.z
                        }.bind(this),
                        onComplete: function() {
                            this.controller.isAnimating = false
                        }.bind(this)
                    }).play())
                }
            }
            this.currentCircleCounter = this.circlesCounter;
            this.circlesCounter -= 2
        };
        l.exports = k
    }, {
        "../../_shared/ClipRegistry": 1213,
        "../../_shared/TimeoutRegistry": 1223,
        "./GlobeRippleCanvas": 1228,
        "ac-eclipse": 179
    }],
    1230: [function(x, z, q) {
        var n = null,
            o = null,
            y = null,
            v = null;
        var w = x("../../_shared/TimeoutRegistry");
        var r = x("../../_shared/utils/math-utils");
        var t = x("../../_shared/model/FeatureDetectionMap");
        var u = function(a, c, b, f, d) {
            o = window.THREE;
            o.ImageUtils.crossOrigin = "";
            y = x("../../_shared/utils/three-orbit-controls")(o);
            v = x("./Globe");
            this.containerEl = a;
            this.isWhite = c;
            this.width = b;
            this.height = f;
            this.cityIndex = d;
            this.camera = null;
            this.scene = null;
            this.mesh = null;
            this.renderer = null;
            this.dpi = (this.isWhite && t.IS_RETINA) ? window.devicePixelRatio : 1;
            this.controls = null;
            this.composer = null;
            this.dofPass = null;
            this.fxaaPass = null;
            this.globe = null;
            this.isActive = false;
            this.hasComposer = false;
            this.stoAutoPlay = 0;
            this.isAutoPlayFinished = false;
            this.scrollRotateCurrent = 0;
            this.scrollRotateTarget = 0;
            this.renderFrames = 0;
            if (this.hasComposer) {}
            this.init()
        };
        var p = u.prototype = Object.create(u.prototype);
        u.prototype.constructor = u;
        p.destroy = function() {
            if (this.globe) {
                this.globe.destroy();
                this.globe = null
            }
            if (this.camera) {
                this.camera = null
            }
            if (this.mesh) {
                this.mesh = null
            }
            this.containerEl = null;
            if (this.controls) {
                this.controls.object = null;
                this.controls.domElement = null
            }
            if (this.scene) {
                this.recursiveRemove(this.scene);
                this.scene = null
            }
            if (this.renderer) {
                this.renderer.domElement = null;
                this.renderer.context = null;
                this.renderer.scene = null;
                this.renderer = null
            }
        };
        p.recursiveRemove = function(b) {
            while (b.children.length != 0) {
                var a = b.children[0];
                if (a.children && a.children.length != 0) {
                    this.recursiveRemove(a)
                }
                if (a.geometry) {
                    a.geometry.dispose();
                    a.geometry = null
                }
                if (a.material) {
                    a.material.dispose();
                    a.material = null
                }
                b.remove(a)
            }
        };
        p.init = function() {
            this.containerEl.style.backgroundImage = "none";
            this.setupScene();
            if (this.hasComposer) {
                this.setupComposer()
            }
            this.setupGlobe()
        };
        p.setupScene = function() {
            var a = (this.isWhite) ? 37 : 55;
            this.camera = new o.PerspectiveCamera(a, this.width / this.height, 1, 10000);
            this.camera.position.z = 1000;
            this.controls = new y(this.camera);
            this.controls.noZoom = true;
            this.controls.noRotate = true;
            this.scene = new o.Scene();
            this.renderer = new o.WebGLRenderer({
                antialias: true
            });
            this.renderer.setPixelRatio(this.dpi);
            this.renderer.setSize(this.width, this.height);
            this.renderer.setClearColor((this.isWhite) ? 16777215 : 0, 0);
            this.containerEl.appendChild(this.renderer.domElement);
            this.clock = new o.Clock()
        };
        p.setupComposer = function() {
            this.composerEl = document.getElementById("toggle-composer");
            this.composer = new n.Composer(this.renderer, {
                useRGBA: false
            });
            this.composer.setSize(this.width, this.height);
            this.dofPass = new n.GlobeBlurPass();
            this.dofPass.params.radiusPx = (this.height / 2) - (this.height / 12);
            this.dofPass.params.topPx = (this.height / 12);
            this.fxaaPass = new n.FXAAPass()
        };
        p.setupGlobe = function() {
            this.mesh = new o.Object3D();
            this.scene.add(this.mesh);
            this.globe = new v(this, this.isWhite)
        };
        p.onResize = function(a, b, c) {
            this.width = b;
            this.height = c;
            this.camera.aspect = this.width / this.height;
            this.camera.updateProjectionMatrix();
            this.renderer.setSize(this.width, this.height);
            if (this.hasComposer) {
                this.dofPass.params.radiusPx = (this.height / 2) - (this.height / 27);
                this.dofPass.params.topPx = 0;
                this.composer.setSize(this.width, this.height)
            }
            if (!this.isActive) {
                this.render()
            }
        };
        p.onRequestAnimationFrame = function(b) {
            this.globe.onRequestAnimationFrame();
            if (!this.globe.isAnimating) {
                if (Math.abs(this.scrollRotateTarget - this.scrollRotateCurrent) !== 0) {
                    var a = this.scrollRotateTarget - this.scrollRotateCurrent;
                    if (a > 0.05) {
                        a = 0.05
                    }
                    if (a < -0.05) {
                        a = -0.05
                    }
                    this.scrollRotateCurrent += a;
                    this.controls.incPhiDelta = a * 0.26
                }
            }
            this.controls.update();
            if (b) {
                this.render()
            }
        };
        p.render = function() {
            if (this.hasComposer) {
                this.composer.reset();
                this.composer.render(this.scene, this.camera);
                this.composer.pass(this.fxaaPass);
                this.composer.pass(this.dofPass);
                this.composer.toScreen()
            } else {
                this.renderer.render(this.scene, this.camera)
            }
        };
        p.activate = function(a) {
            if (!this.isActive) {
                this.globe.isActive = true;
                this.isActive = true;
                if (!this.cityIndex) {
                    this.stoAutoPlay = w.setTimeout(this.autoPlay.bind(this), 3200)
                }
            }
        };
        p.setAutoRotate = function() {
            this.globe.autoRotate = true
        };
        p.deactivate = function(a, b) {
            if (this.isActive && (b || this.currentImage === a)) {
                this.globe.isActive = false;
                this.isActive = false;
                this.globe.autoRotate = false
            }
        };
        p.autoPlay = function() {
            if (this.isActive) {
                if (this.globe.rippleTexture.circlesCounter >= 0) {
                    this.globe.rippleTexture.animateLocation();
                    w.setTimeout(this.autoPlay.bind(this), 2500)
                } else {
                    this.isAutoPlayFinished = true
                }
            }
        };
        p.onScrollPercentage = function(a) {
            if (!this.globe.isAnimating) {
                this.scrollRotateTarget = a
            } else {
                this.scrollRotateCurrent = a;
                this.scrollRotateTarget = a
            }
        };
        z.exports = u
    }, {
        "../../_shared/TimeoutRegistry": 1223,
        "../../_shared/model/FeatureDetectionMap": 1232,
        "../../_shared/utils/math-utils": 1244,
        "../../_shared/utils/three-orbit-controls": 1246,
        "./Globe": 1227
    }],
    1231: [function(d, g, f) {
        g.exports = {
            PAGE_TYPE: "data-page-type",
            SECTION_TYPE: "data-section-type",
            JUMP_SECTION_NAME: "data-jump-section-name",
            ANIMATE_SLIDE_IN: "data-animate-in-slide",
            ANIMATION_GROUP: "data-animation-group",
            ANIMATION_TYPE: "data-animation-type"
        }
    }, {}],
    1232: [function(d, g, f) {
        g.exports = {
            TOUCH: undefined,
            SVG: undefined,
            WEB_GL: undefined,
            VIDEO: undefined,
            CSS_FILTER: undefined,
            CSS_ANIMATION: undefined,
            POSITION_FIXED: undefined,
            IS_DESKTOP: undefined,
            IS_HANDHELD: undefined,
            IS_RETINA: undefined,
            PAGE_JUMP: undefined
        }
    }, {}],
    1233: [function(d, g, f) {
        g.exports = {
            overview: d("../../overview/OverviewPage"),
            discover: d("../../discover/DiscoverPage"),
            connect: d("../../connect/ConnectPage"),
            radio: d("../../radio/RadioPage"),
            membership: d("../../membership/MembershipPage"),
            guidedtours: d("../../guided-tours/GuidedToursPage")
        }
    }, {
        "../../connect/ConnectPage": 1247,
        "../../discover/DiscoverPage": 1249,
        "../../guided-tours/GuidedToursPage": 1258,
        "../../membership/MembershipPage": 1260,
        "../../overview/OverviewPage": 1262,
        "../../radio/RadioPage": 1273
    }],
    1234: [function(d, g, f) {
        g.exports = {
            BaseSection: d("../section/BaseSection"),
            HeroSection: d("../section/HeroSection"),
            NextSection: d("../section/NextSection"),
            KeyframeAnimatedSection: d("../section/KeyframeAnimated/KeyframeAnimatedSection"),
            OverviewSection: d("../../overview/section/OverviewSection"),
            OverviewRadioSection: d("../../overview/section/OverviewRadioSection"),
            OverviewGuidedToursSection: d("../../overview/section/OverviewGuidedToursSection"),
            OverviewForYouSection: d("../../overview/section/OverviewForYouSection"),
            OverviewConnectSection: d("../../overview/section/OverviewConnectSection"),
            OverviewHeroSection: d("../../overview/section/OverviewHeroSection"),
            OverviewITunesSection: d("../../overview/section/OverviewITunesSection"),
            OverviewIpodsSection: d("../../overview/section/OverviewIpodsSection"),
            OverviewBeatsSection: d("../../overview/section/OverviewBeatsSection"),
            DiscoverNewMusicSection: d("../../discover/section/DiscoverNewMusicSection"),
            DiscoverReleasesSection: d("../../discover/section/DiscoverReleases/DiscoverReleasesSection"),
            DiscoverRecommendationSection: d("../../discover/section/DiscoverRecommendationSection"),
            RadioBeatsOneSection: d("../../radio/section/RadioBeatsOneSection"),
            ZineSection: d("../../radio/zine/ZineSection"),
            StationsSection: d("../../radio/stations/StationsSection"),
            ConnectVideoSection: d("../../connect/section/ConnectVideoSection"),
            SectionNone: "SectionNone"
        }
    }, {
        "../../connect/section/ConnectVideoSection": 1248,
        "../../discover/section/DiscoverNewMusicSection": 1250,
        "../../discover/section/DiscoverRecommendationSection": 1251,
        "../../discover/section/DiscoverReleases/DiscoverReleasesSection": 1254,
        "../../overview/section/OverviewBeatsSection": 1264,
        "../../overview/section/OverviewConnectSection": 1265,
        "../../overview/section/OverviewForYouSection": 1266,
        "../../overview/section/OverviewGuidedToursSection": 1267,
        "../../overview/section/OverviewHeroSection": 1268,
        "../../overview/section/OverviewITunesSection": 1269,
        "../../overview/section/OverviewIpodsSection": 1270,
        "../../overview/section/OverviewRadioSection": 1271,
        "../../overview/section/OverviewSection": 1272,
        "../../radio/section/RadioBeatsOneSection": 1274,
        "../../radio/stations/StationsSection": 1276,
        "../../radio/zine/ZineSection": 1277,
        "../section/BaseSection": 1236,
        "../section/HeroSection": 1237,
        "../section/KeyframeAnimated/KeyframeAnimatedSection": 1239,
        "../section/NextSection": 1241
    }],
    1235: [function(d, g, f) {
        g.exports = {
            FROM_LOCAL_NAV: 0,
            FROM_NEXT_PREVIEW: 1,
            FROM_OVERVIEW_SECTION: 2
        }
    }, {}],
    1236: [function(q, r, o) {
        q("ac-polyfills/Object/create");
        q("ac-polyfills/Element/prototype.classList");
        var t = q("ac-dom-metrics");
        var p = q("./../model/DataAttributes"),
            l = q("ac-event-emitter-micro").EventEmitterMicro,
            k = l.prototype;

        function m(a, b, c) {
            l.call(this);
            this.element = a;
            this.trackedElement = b;
            this._index = c;
            this._hasAnimatedIn = false;
            this.isActive = false;
            this.name = this.element.className;
            this._rafId = -1;
            this.scrollToPosition = 0;
            this.updateScrollToPosition();
            this._boundFunctions = {
                _boundRaf: this.onRequestAnimationFrame.bind(this),
                _onClick: this.onClick.bind(this)
            };
            if (this.element.hasAttribute(p.JUMP_SECTION_NAME)) {
                var d = this.element.getElementsByTagName("a")[0];
                d.addEventListener("click", this._boundFunctions._onClick, false)
            }
        }
        var n = m.prototype = Object.create(l.prototype);
        m.prototype.constructor = m;
        n.activate = function() {
            if (!this._hasAnimatedIn) {
                this.animateIn();
                this._hasAnimatedIn = true
            }
            this.isActive = true;
            this._rafId = requestAnimationFrame(this._boundFunctions._boundRaf)
        };
        n.deactivate = function() {
            this.isActive = false;
            cancelAnimationFrame(this._rafId)
        };
        n.animateIn = function() {};
        n.onRequestAnimationFrame = function() {
            this._rafId = requestAnimationFrame(this._boundFunctions._boundRaf)
        };
        n.onResize = function(a, b, c) {};
        n.onBreakpoint = function(a, d, b, c) {};
        n.onScroll = function(a, b, c) {};
        n.onViewWillAppear = function(a, b) {};
        n.onViewWillDisappear = function(a, b) {};
        n.updateScrollToPosition = function() {
            this.scrollToPosition = t.getPagePosition(this.element).top
        };
        n.onClick = function(a) {
            a.preventDefault();
            this.trigger("shouldOpen", this)
        };
        n.teardownEvents = function() {};
        n.destroy = function() {
            this.teardownEvents();
            cancelAnimationFrame(this._rafId);
            this.element.removeEventListener("click", this._boundFunctions._onClick);
            this.trackedElement = null;
            this.element = null;
            this._boundFunctions = null;
            k.destroy.call(this)
        };
        n.getURL = function() {
            return this.element.getAttribute(p.JUMP_SECTION_NAME)
        };
        n.getName = function() {
            if (!this.element.hasAttribute(p.JUMP_SECTION_NAME)) {
                return this.element.className.split("")
            }
            var a = this.getURL();
            return a.replace(/-/g, "")
        };
        r.exports = m
    }, {
        "./../model/DataAttributes": 1231,
        "ac-dom-metrics": 90,
        "ac-event-emitter-micro": 200,
        "ac-polyfills/Element/prototype.classList": 727,
        "ac-polyfills/Object/create": 729
    }],
    1237: [function(y, z, v) {
        y("ac-polyfills/Object/create");
        y("ac-polyfills/Element/prototype.classList");
        var A = y("ac-dom-metrics"),
            B = y("../../_shared/utils/browserPrefixed");
        var r = y("ac-eclipse").Clip;
        var p = y("./BaseSection"),
            u = y("../../_shared/utils/math-utils"),
            w = y("../../_shared/model/FeatureDetectionMap"),
            x = y("ac-viewport").Viewport,
            o = p.prototype;

        function q(a, b, c) {
            this.name = "HeroSection";
            p.call(this, a, b, c);
            this.viewport = x.getBreakpoint();
            this.isViewportSmall = this.viewport.name === "small";
            this.isHandheld = !w.IS_DESKTOP;
            this.blurAmount = 0.001;
            this.blurTarget = 20;
            this.scaleAmount = 1;
            this.scaleTarget = 1.1;
            this._headlineEl = this.element.querySelector(".hero-headline .section-content");
            this._bgEl = this.element.querySelector(".hero-headline .section-image");
            this._bgBlurEl = null;
            this._introEl = this.element.querySelector(".hero-intro .section-content");
            this._titleEl = this._headlineEl.querySelector("h1");
            this._ctaEl = this._headlineEl.querySelector("p");
            this._eyebrowEl = this._headlineEl.querySelector(".eyebrow");
            this._copyEl = this._introEl.querySelector(".intro-copy");
            this._arrowEl = this.element.querySelector(".icon-paddledown");
            if (this.isHandheld) {
                this._setupInitialContentPositionSmall();
                this._setupHandheldBackground()
            }
        }
        var t = q.prototype = Object.create(p.prototype);
        q.prototype.constructor = q;
        t.destroy = function() {
            o.destroy.call(this);
            this._headlineEl = null;
            this._bgEl = null;
            this._bgBlurEl = null;
            this._introEl = null;
            this._titleEl = null;
            this._ctaEl = null;
            this._eyebrowEl = null;
            this._copyEl = null;
            this._arrowEl = null
        };
        t.activate = function() {
            o.activate.call(this)
        };
        t.deactivate = function() {
            o.deactivate.call(this)
        };
        t.onRequestAnimationFrame = function() {
            o.onRequestAnimationFrame.call(this)
        };
        t.onBreakpoint = function(c, a, d, f) {
            var b = this.isViewportSmall;
            this.isViewportSmall = (c.name === "small");
            if (b !== this.isViewportSmall) {
                if (this.isViewportSmall) {
                    this._setupInitialContentPositionSmall()
                }
            }
        };
        t.onResize = function(a, b, c) {
            o.onResize.call(this, a, b, c)
        };
        t.onViewWillAppear = function(a, b) {
            o.onViewWillAppear.call(this, a, b);
            if (!this.isHandheld && w.CSS_FILTER && B.filter != undefined) {
                this.element.classList.add("css-filter");
                this._bgEl.style[B.filter] = "blur( " + this.blurAmount + "px )"
            }
            this.element.classList.add("hero-large-fixed")
        };
        t.onViewWillDisappear = function(a, b) {
            o.onViewWillDisappear.call(this, a, b);
            this.element.classList.remove("hero-large-fixed")
        };
        t.onScroll = function(j, P, a) {
            o.onScroll.call(this, j, P, a);
            var k = Math.abs(this.trackedElement.top / this.trackedElement.height);
            this.blurAmount = u.clamp(u.map(k, 0, 0.5, 0, this.blurTarget), 0, this.blurTarget);
            var N = u.clamp(u.map(k, 0, 0.4, 0, 1), 0, 1),
                W = u.clamp(u.map(k, 0.5, 1, 0, 1), 0, 1);
            if (this.isHandheld) {
                this._bgBlurEl.style.opacity = N
            } else {
                if (w.CSS_FILTER) {
                    this._bgEl.style[B.filter] = "blur( " + this.blurAmount + "px )";
                    var h = Math.min(this.scaleTarget, 1 + ((this.scaleTarget - 1) * k * 1));
                    this.scaleAmount = h;
                    var i = 0,
                        m = -100,
                        V = i + (m - i) * W;
                    this._bgEl.style[B.transform] = "translate3d( 0, " + V + "px, 0 ) scale3d( " + this.scaleAmount + ", " + this.scaleAmount + ", 1.0 )"
                }
            }
            this._bgEl.style.opacity = 1 - (W * 0.75);
            var d = u.clamp(u.map(k, 0, 0.05, 0, 1), 0, 1),
                U = Math.min(50, d * 50),
                l = Math.max(0, 1 - d);
            this._arrowEl.style[B.transform] = "translate3d( 0, " + U + "px, 0 )";
            this._arrowEl.style.opacity = l;
            if (this.isHandheld || this.isViewportSmall) {
                return
            }
            if (k < 0.5) {
                var n = u.clamp(u.map(k, 0, 0.3, 0, 1), 0, 1);
                var R = -(n * 60),
                    S = (1 - (n * 1.3)),
                    g = (n * 30),
                    Q = (1 - (n * 2)),
                    b = (1 - (n * 2.5));
                this._eyebrowEl.style[B.transform] = "translate3d( 0, " + R + "px, 0 )";
                this._eyebrowEl.style.opacity = S;
                this._titleEl.style[B.transform] = "translate3d( 0, " + g + "px, 0 )";
                this._titleEl.style.opacity = Q;
                if (this._ctaEl) {
                    this._ctaEl.style.opacity = b
                }
            }
            if (k < 0.5) {
                var T = u.clamp(u.map(k, 0.1, 0.5, 0, 1), 0, 1),
                    c = u.clamp(u.map(k, 0.1, 0.3, 0, 1), 0, 1);
                var O = 400 - (T * 400),
                    X = c;
                this._copyEl.style[B.transform] = "translate3d( 0, " + O + "px, 0 )";
                this._introEl.style.opacity = X
            }
            if (k >= 0.5) {
                var f = u.clamp(u.map(k, 0.5, 0.8, 0, 1), 0, 1),
                    O = -100 * f,
                    X = 1 - f;
                this._copyEl.style[B.transform] = "translate3d( 0, " + O + "px, 0 )";
                this._introEl.style.opacity = X
            }
        };
        t._setupInitialContentPositionSmall = function() {
            this._eyebrowEl.style[B.transform] = "translate3d( 0, 0, 0 )";
            this._eyebrowEl.style.opacity = 1;
            this._titleEl.style[B.transform] = "translate3d( 0, 0, 0 )";
            this._titleEl.style.opacity = 1;
            if (this._ctaTitle) {
                this._ctaTitle.style.opacity = 1
            }
            this._copyEl.style[B.transform] = "translate3d( 0, 0, 0 )";
            this._introEl.style.opacity = 1;
            this._copyEl.style[B.transform] = "translate3d( 0, 0, 0 )";
            this._introEl.style.opacity = 1
        };
        t._setupHandheldBackground = function() {
            var a = this.element.querySelector(".hero-headline");
            this._bgBlurEl = document.createElement("div");
            this._bgBlurEl.classList.add("section-image");
            this._bgBlurEl.classList.add("blurry");
            this._bgBlurEl.style.opacity = 0;
            a.insertBefore(this._bgBlurEl, this._headlineEl)
        };
        z.exports = q
    }, {
        "../../_shared/model/FeatureDetectionMap": 1232,
        "../../_shared/utils/browserPrefixed": 1243,
        "../../_shared/utils/math-utils": 1244,
        "./BaseSection": 1236,
        "ac-dom-metrics": 90,
        "ac-eclipse": 179,
        "ac-polyfills/Element/prototype.classList": 727,
        "ac-polyfills/Object/create": 729,
        "ac-viewport": "ac-viewport"
    }],
    1238: [function(z, A, x) {
        z("ac-polyfills/Object/create");
        z("ac-polyfills/Element/prototype.classList");
        var B = z("ac-dom-traversal/querySelectorAll"),
            t = z("ac-dom-styles/setStyle");
        var r = z("ac-eclipse").Clip,
            y = z("../../model/FeatureDetectionMap");
        var v = z("./KeyframeElement");
        var p = z("ac-event-emitter-micro").EventEmitterMicro,
            o = p.prototype;
        var q = "cubic-bezier(.19,0,.32,.81)";

        function u(b, a) {
            p.call(this);
            this.groupIndex = b;
            this.element = a;
            this.didTriggerComplete = false;
            this.hasAnimatedIn = false;
            this._keyframeElements = [];
            this._boundFunctions = {
                _onElementAnimationEnd: this.onElementAnimationEnd.bind(this)
            };
            this._clips = []
        }
        var w = u.prototype = Object.create(p.prototype);
        w.destroy = function() {
            var b, c;
            for (b = 0, c = this._keyframeElements.length; b < c; b++) {
                var a = this._keyframeElements[b];
                a.off(v.ON_ANIMATION_END, this._boundFunctions._onElementAnimationEnd);
                a.destroy()
            }
            for (b = 0, c = this._clips.length; b < c; b++) {
                this._clips[b].destroy()
            }
            this._clips = null;
            this._keyframeElements = null;
            this._boundFunctions = null;
            this.element = null;
            o.destroy.call(this)
        };
        w.add = function(a) {
            this._keyframeElements.push(a);
            a.on(v.ON_ANIMATION_END, this._boundFunctions._onElementAnimationEnd)
        };
        w.remove = function(a) {
            var b = this._keyframeElements.indexOf(a);
            if (b == -1) {
                return
            }
            this._keyframeElements = this._keyframeElements.splice(b, 1);
            a.off(v.ON_ANIMATION_END, this._boundFunctions._onElementAnimationEnd);
            a.destroy()
        };
        w.startOutgoing = function() {
            this.isWaitingForStartAnimationsToComplete = false;
            var b;
            for (var c = 0, d = this._keyframeElements.length; c < d; c++) {
                var a = this._keyframeElements[c];
                if (!a.element.classList.contains("outgoing")) {
                    a.element.classList.add("outgoing");
                    t(a.element, {
                        "z-index": "20"
                    });
                    if (!y.CSS_ANIMATION) {
                        a.element.style.opacity = 1
                    }
                }
            }
        };
        w.startIncoming = function() {
            this.animationEndCounter = 0;
            this.isWaitingForStartAnimationsToComplete = true;
            var b;
            for (var c = 0, d = this._keyframeElements.length; c < d; c++) {
                var a = this._keyframeElements[c];
                if (!a.element.classList.contains("incoming")) {
                    a.element.classList.add("incoming");
                    t(a.element, {
                        "z-index": "21"
                    });
                    if (!y.CSS_ANIMATION) {
                        a.element.style.opacity = 0;
                        b = new r(a.element, 1.2, {
                            opacity: "1"
                        }, {
                            delay: 2.3,
                            destroyOnComplete: true,
                            ease: q,
                            onComplete: this._boundFunctions._onElementAnimationEnd
                        }).play();
                        this._clips.push(b)
                    }
                }
            }
        };
        w.activate = function() {
            for (var a = 0, b = this._keyframeElements.length; a < b; a++) {
                this._keyframeElements[a].activate()
            }
        };
        w.deactivate = function() {
            for (var a = 0, b = this._keyframeElements.length; a < b; a++) {
                this._keyframeElements[a].deactivate()
            }
        };
        w.onElementAnimationEnd = function(a) {
            if (!this.isWaitingForStartAnimationsToComplete) {
                return
            }
            this.animationEndCounter++;
            if (this.animationEndCounter == this._keyframeElements.length) {
                var b = B(".slide-content", this.element);
                for (var c = 0, d = b.length; c < d; c++) {
                    t(b[c], {
                        "z-index": "19"
                    });
                    if (b[c].classList.contains("incoming")) {
                        b[c].classList.remove("incoming")
                    }
                    if (b[c].classList.contains("outgoing")) {
                        b[c].classList.remove("outgoing")
                    }
                }
                this._clips = [];
                this.trigger(u.ON_GROUP_ANIMATION_END, this)
            }
        };
        u.ON_GROUP_ANIMTION_END = "ON_GROUP_ANIMTION_END";
        A.exports = u
    }, {
        "../../model/FeatureDetectionMap": 1232,
        "./KeyframeElement": 1240,
        "ac-dom-styles/setStyle": 132,
        "ac-dom-traversal/querySelectorAll": 148,
        "ac-eclipse": 179,
        "ac-event-emitter-micro": 200,
        "ac-polyfills/Element/prototype.classList": 727,
        "ac-polyfills/Object/create": 729
    }],
    1239: [function(z, A, x) {
        z("ac-polyfills/Object/create");
        z("ac-polyfills/Date/now");
        var D = z("ac-dom-metrics"),
            B = z("ac-dom-traversal/querySelectorAll");
        var C = z("ac-element-tracker").ElementTracker,
            t = z("ac-dom-styles/setStyle");
        var p = z("./../../ElementSlideInAnimator"),
            u = z("./KeyframeAnimatedGroup"),
            v = z("./KeyframeElement");
        var r = z("./../BaseSection"),
            q = r.prototype;

        function y(a, b, c) {
            r.call(this, a, b, c);
            this.index = c;
            this._elementTracker = new C(null, {
                autoStart: true
            });
            this._keyframeElements = [];
            this._boundFunctions._onGroupAnimationEnd = this.onGroupAnimationEnd.bind(this);
            this._animationGroups = [];
            this.currentAnimationGroup = 0;
            this._slideElements = [];
            this._isWaitingForSlideInElements = false;
            this._activationTime = 0;
            this.setupAnimation()
        }
        var w = y.prototype = Object.create(r.prototype);
        y.prototype.constructor = y;
        w.destroy = function() {
            for (var b = 0, c = this._animationGroups.length; b < c; b++) {
                var a = this._animationGroups[b];
                a.off(u.ON_GROUP_TRANSITION_END, this._boundFunctions._onGroupTransitionEnd);
                a.destroy()
            }
            this._animationGroups = null;
            this._slideElements = null;
            q.destroy.call(this)
        };
        w.setupAnimation = function() {
            var g = B("[data-animation-slide]", this.element);
            for (var k = 0, i = g.length; k < i; k++) {
                var j = g[k];
                var f = this._elementTracker.addElement(j);
                var n = B("[data-animation-group]", j);
                for (var a = 0, m = n.length; a < m; a++) {
                    var c = n[a];
                    var b = new v(c, f, a);
                    this.addKeyframeAnimatedElement(b);
                    t(c, {
                        "z-index": 19 - b.animationGroup
                    })
                }
            }
            var h = B("[data-animate-in-slide]", this.element);
            for (var k = 0, d = h.length; k < d; k++) {
                var l = p.getElementSlideInAnimatorForElement(h[k]);
                if (l != null && !l.hasAnimatedIn) {
                    this._slideElements.push(l)
                }
            }
        };
        w.activate = function() {
            q.activate.call(this);
            this._elementTracker.refreshAllElementStates();
            for (var b = 0, c = this._animationGroups.length; b < c; b++) {
                var a = this._animationGroups[b];
                a.activate()
            }
            this._isWaitingForSlideInElements = this._slideElements.length > 0;
            if (!this._isWaitingForSlideInElements) {
                this.startNextAnimationGroup(this.currentAnimationGroup, this.currentAnimationGroup + 1)
            } else {
                this._activationTime = Date.now()
            }
        };
        w.deactivate = function() {
            q.deactivate.call(this);
            for (var b = 0, c = this._animationGroups.length; b < c; b++) {
                var a = this._animationGroups[b];
                a.deactivate()
            }
        };
        w.startNextAnimationGroup = function(d, c) {
            if (!this.isActive) {
                return
            }
            var b = this._animationGroups[d];
            var a = this._animationGroups[c];
            if (b && a) {
                b.startOutgoing();
                a.startIncoming()
            }
        };
        w.addKeyframeAnimatedElement = function(b) {
            var c = b.animationGroup;
            var a = this._animationGroups[c];
            if (a === undefined) {
                a = this._animationGroups[c] = new u(c, this.element);
                a.on(u.ON_GROUP_ANIMATION_END, this._boundFunctions._onGroupAnimationEnd)
            }
            a.add(b)
        };
        w.onGroupAnimationEnd = function(a) {
            this.currentAnimationGroup++;
            if (this.currentAnimationGroup === this._animationGroups.length - 1) {
                this.startNextAnimationGroup(this._animationGroups.length - 1, 0);
                this.currentAnimationGroup = -1
            } else {
                this.startNextAnimationGroup(this.currentAnimationGroup, this.currentAnimationGroup + 1)
            }
        };
        w.onRequestAnimationFrame = function() {
            q.onRequestAnimationFrame.call(this);
            if (this._isWaitingForSlideInElements) {
                var a = 0;
                var c = null;
                for (var b = 0, d = this._slideElements.length; b < d; b++) {
                    if (!this._slideElements[b].hasAnimatedIn) {
                        a++;
                        c = this._slideElements[b]
                    }
                }
                if (a == 0) {
                    this._isWaitingForSlideInElements = false;
                    this.startNextAnimationGroup(this.currentAnimationGroup, this.currentAnimationGroup + 1)
                } else {
                    if (a == 1 && Date.now() - this._activationTime > 2 * 1000) {
                        c.cancel()
                    }
                }
            }
        };
        w.onScroll = function(a) {
            q.onScroll.call(this)
        };
        A.exports = y
    }, {
        "./../../ElementSlideInAnimator": 1214,
        "./../BaseSection": 1236,
        "./KeyframeAnimatedGroup": 1238,
        "./KeyframeElement": 1240,
        "ac-dom-metrics": 90,
        "ac-dom-styles/setStyle": 132,
        "ac-dom-traversal/querySelectorAll": 148,
        "ac-element-tracker": "ac-element-tracker",
        "ac-polyfills/Date/now": 726,
        "ac-polyfills/Object/create": 729
    }],
    1240: [function(q, r, o) {
        q("ac-polyfills/Object/create");
        q("ac-polyfills/Element/prototype.classList");
        var t = q("../../utils/browserPrefixed");
        var l = q("ac-event-emitter-micro").EventEmitterMicro;
        var p = q("../../model/DataAttributes");
        var k = l.prototype;

        function m(a, b, c) {
            l.call(this);
            this.element = a;
            this.trackedElement = b;
            this.index = c;
            this.animationGroup = parseInt(this.element.getAttribute(p.ANIMATION_GROUP));
            this._currentAnimationName = "";
            this.hasAnimatedIn = false;
            this._boundFunctions = {
                _onAnimationStart: this.onAnimationStart.bind(this),
                _onAnimationIteration: this.onAnimationIteration.bind(this),
                _onAnimationEnd: this.onAnimationEnd.bind(this)
            };
            this.setupEvents()
        }
        var n = m.prototype = Object.create(l.prototype);
        n.setupEvents = function() {
            this.element.addEventListener(t.animationStart, this._boundFunctions._onAnimationStart, false);
            this.element.addEventListener(t.animationEnd, this._boundFunctions._onAnimationEnd, false)
        };
        n.teardownEvents = function() {
            this.element.removeEventListener(t.animationStart, this._boundFunctions._onAnimationStart);
            this.element.removeEventListener(t.animationEnd, this._boundFunctions._onAnimationEnd)
        };
        n.updateVisibility = function() {
            if (this.trackedElement.percentInView > 0.08 && !this.hasAnimatedIn) {
                this.hasAnimatedIn = true;
                if (this.trackedElement.percentInView < 0.5) {} else {
                    this.element.style.visibility = "visible"
                }
            }
        };
        n.destroy = function() {
            this.teardownEvents();
            this._boundFunctions = null;
            this.element = null;
            k.destroy.call(this)
        };
        n.activate = function() {
            this.element.style[t.animationPlayState] = "running"
        };
        n.deactivate = function() {
            this.element.style[t.animationPlayState] = "paused"
        };
        n.onAnimationStart = function(a) {
            this._currentAnimationName = a.animationName
        };
        n.onAnimationIteration = function(a) {
            if (a.animationName != this._currentAnimationName) {
                return
            }
        };
        n.onAnimationEnd = function(a) {
            if (a.animationName != this._currentAnimationName) {
                return
            }
            this.trigger(m.ON_ANIMATION_END, this)
        };
        m.ON_TRANSITION_END = "ON_TRANSITION_END";
        m.ON_ANIMATION_END = "ON_TRANSITION_END";
        r.exports = m
    }, {
        "../../model/DataAttributes": 1231,
        "../../utils/browserPrefixed": 1243,
        "ac-event-emitter-micro": 200,
        "ac-polyfills/Element/prototype.classList": 727,
        "ac-polyfills/Object/create": 729
    }],
    1241: [function(F, L, v) {
        F("ac-polyfills/Object/create");
        F("ac-polyfills/Element/prototype.classList");
        var I = F("ac-dom-styles").setStyle,
            J = F("ac-dom-traversal").querySelector,
            B = F("ac-dom-traversal").previousSibling,
            H = F("ac-dom-styles").getStyle,
            E = F("ac-dom-traversal").nextSibling;
        var M = F("ac-eclipse").Clip,
            y = F("ac-viewport").Viewport,
            G = F("ac-dom-emitter").DOMEmitter;
        var K = F("../ClipRegistry"),
            x = F("../model/FeatureDetectionMap"),
            w = F("./BaseSection");
        var z = w.prototype;
        var D = {
            duration: 0.5,
            ease: "ease-in-out"
        };
        var N = {
            additionalSpacing: 50
        };

        function C(a, b, c) {
            this.name = "NextSection";
            w.call(this, a, b, c);
            this._previousEl = B(a);
            this._nextEl = E(a);
            this._imageEl = J(".section-image", a);
            this._contentEl = J(".section-content-translate", a);
            this._domEmitter = new G(a);
            this._openingPreviousElClip = null;
            this._closingPreviousElClip = null;
            this._openingThisElClip = null;
            this._closingThisElClip = null;
            this._openingImageElClip = null;
            this._closingImageElClip = null;
            this._openingContentElClip = null;
            this._closingContentElClip = null;
            this._openingNextElClip = null;
            this._closingNextElClip = null;
            this._boundOnOpeningPreviousElComplete = this._onOpeningPreviousElComplete.bind(this);
            this._boundOnOpeningThisElComplete = this._onOpeningThisElComplete.bind(this);
            this._boundOnOpeningImageElComplete = this._onOpeningImageElComplete.bind(this);
            this._boundOnOpeningContentElComplete = this._onOpeningContentElComplete.bind(this);
            this._boundOnOpeningNextElComplete = this._onOpeningNextElComplete.bind(this);
            this._boundOnClosingPreviousElComplete = this._onClosingPreviousElComplete.bind(this);
            this._boundOnClosingThisElComplete = this._onClosingThisElComplete.bind(this);
            this._boundOnClosingImageElComplete = this._onClosingImageElComplete.bind(this);
            this._boundOnClosingContentElComplete = this._onClosingContentElComplete.bind(this);
            this._boundOnClosingNextElComplete = this._onClosingNextElComplete.bind(this);
            this._initializeStyles();
            this._bindEvents()
        }
        var A = C.prototype = Object.create(w.prototype);
        C.prototype.constructor = C;
        A.destroy = function() {
            this._domEmitter.destroy();
            z.destroy.call(this)
        };
        A.activate = function() {
            z.activate.call(this)
        };
        A.deactivate = function() {
            z.deactivate.call(this)
        };
        A.onRequestAnimationFrame = function() {
            z.onRequestAnimationFrame.call(this)
        };
        A._getNextElHeight = function() {
            if (!this._nextElHeight) {
                this._nextElHeight = parseInt(H(this._nextEl, "height").height, 10)
            }
            return this._nextElHeight
        };
        A._getPreviousElHeight = function() {
            if (!this._previousElHeight) {
                this._previousElHeight = parseInt(H(this._previousEl, "height").height, 10)
            }
            return this._previousElHeight
        };
        A._getThisElHeight = function() {
            if (!this._thisElHeight) {
                this._thisElHeight = parseInt(H(this.element, "height").height, 10)
            }
            return this._thisElHeight
        };
        A._getCalculatedNextElTranslation = function() {
            var b = this._getOpeningParamsOffsets(),
                d = y.innerHeight(),
                c = d / 2,
                a = this._getNextElHeight();
            return Math.round((-c + (b.rawTop) + c / 2))
        };
        A._getCalculatedPreviousElTranslation = function() {
            var a = y.innerHeight(),
                b = this._getPreviousElHeight();
            return Math.round((a / 2) - b)
        };
        A._getInitialMarginOffset = function() {
            var b = this._getOpeningParamsOffsets(),
                a = y.innerHeight(),
                c = a / 2;
            return Math.round((-c + b.rawTop + c / 2))
        };
        A._getInitialElementHeight = function() {
            var b = this._getOpeningParamsOffsets(),
                a = y.innerHeight();
            return Math.round(a - (b.rawTop * 2))
        };
        A._getInitialImageOffset = function() {
            var a = this._getOpeningParamsOffsets();
            return -(a.rawTop / 2)
        };
        A._initializeStyles = function() {
            var g = this._getOpeningParamsOffsets(),
                b = y.innerHeight(),
                d = this._getInitialImageOffset(),
                a = this._getInitialMarginOffset(),
                f = this._getInitialElementHeight(),
                c = this._getCalculatedNextElTranslation();
            if (!x.IS_DESKTOP && window.innerWidth == 736) {
                return
            }
            I(this.element, {
                marginTop: a + "px",
                paddingBottom: -g.rawTop * 2 + "px",
                height: f + "px",
                transform: {
                    translateZ: 0
                }
            });
            I(this._imageEl, {
                marginTop: d + "px",
                height: b + "px",
                transform: {
                    translateZ: 0
                }
            });
            I(this._previousEl, {
                zIndex: 2,
                transform: {
                    translateZ: 0
                }
            });
            I(this._nextEl, {
                zIndex: 2,
                marginTop: c + "px",
                transform: {
                    translateZ: 0
                }
            });
            I(this._contentEl, {
                marginTop: -g.rawTop * 2 + "px",
                transform: {
                    translateZ: 0
                }
            })
        };
        A._getOpeningParamsOffsets = function() {
            var a = {
                rawTop: -Math.round(N.additionalSpacing * (2 / 3)),
                rawImage: -Math.round(N.additionalSpacing * (1 / 3)),
                rawContent: -Math.round(N.additionalSpacing * (1 / 6)),
                rawBottom: Math.round(N.additionalSpacing * (1 / 3))
            };
            a.top = a.rawTop + "px";
            a.image = a.rawImage + "px";
            a.content = a.rawContent + "px";
            a.bottom = a.rawBottom + "px";
            return a
        };
        A._getClosingParamsOffsets = function() {
            var a = {
                rawTop: 0,
                rawImage: 0,
                rawContent: 0,
                rawBottom: 0
            };
            a.top = a.rawTop + "px";
            a.image = a.rawImage + "px";
            a.content = a.rawContent + "px";
            a.bottom = a.rawBottom + "px";
            return a
        };
        A._clearMemoizedSizes = function() {
            this._thisElHeight = null;
            this._previousElHeight = null;
            this._nextElHeight = null
        };
        A._onElementMouseEnter = function() {
            this._destroyClips();
            var g = this._getOpeningParamsOffsets();
            var h = {
                transform: {
                    translateY: g.top,
                    translateZ: 0
                }
            };
            var a = {
                transform: {
                    translateZ: 0
                }
            };
            var j = {
                transform: {
                    translateY: g.image,
                    translateZ: 0
                }
            };
            var c = {
                transform: {
                    translateY: g.content,
                    translateZ: 0
                }
            };
            var i = {
                transform: {
                    translateY: g.bottom,
                    translateZ: 0
                }
            };
            var l = {
                ease: D.ease,
                onComplete: this._boundOnOpeningPreviousElComplete
            };
            var f = {
                ease: D.ease,
                onComplete: this._boundOnOpeningThisElComplete
            };
            var k = {
                ease: D.ease,
                onComplete: this._boundOnOpeningThisElComplete
            };
            var b = {
                ease: D.ease,
                onComplete: this._boundOnOpeningContentElComplete
            };
            var d = {
                ease: D.ease,
                onComplete: this._boundOnOpeningNextElComplete
            };
            this._openingPreviousElClip = new M(this._previousEl, D.duration, h, l);
            this._openingThisElClip = new M(this.element, D.duration, a, f);
            this._openingImageElClip = new M(this._imageEl, D.duration, j, k);
            this._openingContentElClip = new M(this._contentEl, D.duration, c, b);
            this._openingNextElClip = new M(this._nextEl, D.duration, i, d);
            K.add(this._openingPreviousElClip).play();
            K.add(this._openingThisElClip).play();
            K.add(this._openingImageElClip).play();
            K.add(this._openingContentElClip).play();
            K.add(this._openingNextElClip).play()
        };
        A._onElementMouseExit = function() {
            this._destroyClips();
            var g = this._getClosingParamsOffsets();
            var h = {
                transform: {
                    translateY: g.top,
                    translateZ: 0
                }
            };
            var a = {
                transform: {
                    translateZ: 0
                }
            };
            var j = {
                transform: {
                    translateY: g.image,
                    translateZ: 0
                }
            };
            var c = {
                transform: {
                    translateY: g.content,
                    translateZ: 0
                }
            };
            var i = {
                transform: {
                    translateY: g.bottom,
                    translateZ: 0
                }
            };
            var l = {
                ease: D.ease,
                onComplete: this._boundOnClosingPreviousElComplete
            };
            var f = {
                ease: D.ease,
                onComplete: this._boundOnClosingThisElComplete
            };
            var k = {
                ease: D.ease,
                onComplete: this._boundOnClosingImageElComplete
            };
            var b = {
                ease: D.ease,
                onComplete: this._boundOnClosingContentElComplete
            };
            var d = {
                ease: D.ease,
                onComplete: this._boundOnClosingNextElComplete
            };
            this._closingPreviousElClip = new M(this._previousEl, D.duration, h, l);
            this._closingThisElClip = new M(this.element, D.duration, a, f);
            this._closingImageElClip = new M(this._imageEl, D.duration, j, k);
            this._closingContentElClip = new M(this._contentEl, D.duration, c, b);
            this._closingNextElClip = new M(this._nextEl, D.duration, i, d);
            K.add(this._closingPreviousElClip).play();
            K.add(this._closingThisElClip).play();
            K.add(this._closingImageElClip).play();
            K.add(this._closingContentElClip).play();
            K.add(this._closingNextElClip).play()
        };
        A._onElementClick = function() {
            this._destroyClips();
            this._setCompleteState()
        };
        A._setCompleteState = function() {
            var a = this._getOpeningParamsOffsets();
            I(this._previousEl, {
                transform: {
                    translateY: a.top,
                    translateZ: 0
                }
            });
            I(this.element, {
                transform: {
                    translateZ: 0
                }
            });
            I(this._imageEl, {
                transform: {
                    translateY: a.image,
                    translateZ: 0
                }
            });
            I(this._contentEl, {
                transform: {
                    translateY: a.content,
                    translateZ: 0
                }
            });
            I(this._nextEl, {
                transform: {
                    translateY: a.bottom,
                    translateZ: 0
                }
            })
        };
        A._destroyClips = function() {
            if (this._openingPreviousElClip) {
                this._openingPreviousElClip.destroy();
                this._openingPreviousElClip = null
            }
            if (this._openingThisElClip) {
                this._openingThisElClip.destroy();
                this._openingThisElClip = null
            }
            if (this._openingImageElClip) {
                this._openingImageElClip.destroy();
                this._openingImageElClip = null
            }
            if (this._openingContentElClip) {
                this._openingContentElClip.destroy();
                this._openingContentElClip = null
            }
            if (this._openingNextElClip) {
                this._openingNextElClip.destroy();
                this._openingNextElClip = null
            }
            if (this._closingPreviousElClip) {
                this._closingPreviousElClip.destroy();
                this._closingPreviousElClip = null
            }
            if (this._closingThisElClip) {
                this._closingThisElClip.destroy();
                this._closingThisElClip = null
            }
            if (this._closingImageElClip) {
                this._closingImageElClip.destroy();
                this._closingImageElClip = null
            }
            if (this._closingContentElClip) {
                this._closingContentElClip.destroy();
                this._closingContentElClip = null
            }
            if (this._closingNextElClip) {
                this._closingNextElClip.destroy();
                this._closingNextElClip = null
            }
        };
        A._onOpeningPreviousElComplete = function() {};
        A._onOpeningThisElComplete = function() {};
        A._onOpeningImageElComplete = function() {};
        A._onOpeningContentElComplete = function() {};
        A._onOpeningNextElComplete = function() {};
        A._onClosingPreviousElComplete = function() {};
        A._onClosingThisElComplete = function() {};
        A._onClosingImageElComplete = function() {};
        A._onClosingContentElComplete = function() {};
        A._onClosingNextElComplete = function() {};
        A.onResize = function(a, b, c) {
            z.onResize.call(this, a, b, c);
            this._clearMemoizedSizes();
            this._initializeStyles()
        };
        A.onViewWillAppear = function(a, b) {
            z.onViewWillAppear.call(this, a, b)
        };
        A.onViewWillDisappear = function(a, b) {
            z.onViewWillDisappear.call(this, a, b)
        };
        A.onScroll = function(a, b, c) {
            z.onScroll.call(this, a, b, c)
        };
        A._bindEvents = function() {
            this._domEmitter.on("mouseenter", this._onElementMouseEnter, this);
            this._domEmitter.on("mouseleave", this._onElementMouseExit, this);
            this._domEmitter.on("click", this._onElementClick, this)
        };
        L.exports = C
    }, {
        "../ClipRegistry": 1213,
        "../model/FeatureDetectionMap": 1232,
        "./BaseSection": 1236,
        "ac-dom-emitter": 62,
        "ac-dom-styles": 120,
        "ac-dom-traversal": 138,
        "ac-eclipse": 179,
        "ac-polyfills/Element/prototype.classList": 727,
        "ac-polyfills/Object/create": 729,
        "ac-viewport": "ac-viewport"
    }],
    1242: [function(i, h, f) {
        var g = function(b, a) {
            this.x = b || 0;
            this.y = a || 0
        };
        g.prototype = {
            constructor: g,
            set: function(b, a) {
                this.x = b;
                this.y = a;
                return this
            },
            setX: function(a) {
                this.x = a;
                return this
            },
            setY: function(a) {
                this.y = a;
                return this
            },
            setComponent: function(b, a) {
                switch (b) {
                    case 0:
                        this.x = a;
                        break;
                    case 1:
                        this.y = a;
                        break;
                    default:
                        throw new Error("index is out of range: " + b)
                }
            },
            getComponent: function(a) {
                switch (a) {
                    case 0:
                        return this.x;
                    case 1:
                        return this.y;
                    default:
                        throw new Error("index is out of range: " + a)
                }
            },
            copy: function(a) {
                this.x = a.x;
                this.y = a.y;
                return this
            },
            add: function(a, b) {
                if (b !== undefined) {
                    return this.addVectors(a, b)
                }
                this.x += a.x;
                this.y += a.y;
                return this
            },
            addScalar: function(a) {
                this.x += a;
                this.y += a;
                return this
            },
            addVectors: function(a, b) {
                this.x = a.x + b.x;
                this.y = a.y + b.y;
                return this
            },
            sub: function(a, b) {
                if (b !== undefined) {
                    return this.subVectors(a, b)
                }
                this.x -= a.x;
                this.y -= a.y;
                return this
            },
            subScalar: function(a) {
                this.x -= a;
                this.y -= a;
                return this
            },
            subVectors: function(a, b) {
                this.x = a.x - b.x;
                this.y = a.y - b.y;
                return this
            },
            multiply: function(a) {
                this.x *= a.x;
                this.y *= a.y;
                return this
            },
            multiplyScalar: function(a) {
                this.x *= a;
                this.y *= a;
                return this
            },
            divide: function(a) {
                this.x /= a.x;
                this.y /= a.y;
                return this
            },
            divideScalar: function(a) {
                if (a !== 0) {
                    var b = 1 / a;
                    this.x *= b;
                    this.y *= b
                } else {
                    this.x = 0;
                    this.y = 0
                }
                return this
            },
            min: function(a) {
                if (this.x > a.x) {
                    this.x = a.x
                }
                if (this.y > a.y) {
                    this.y = a.y
                }
                return this
            },
            max: function(a) {
                if (this.x < a.x) {
                    this.x = a.x
                }
                if (this.y < a.y) {
                    this.y = a.y
                }
                return this
            },
            clamp: function(a, b) {
                if (this.x < a.x) {
                    this.x = a.x
                } else {
                    if (this.x > b.x) {
                        this.x = b.x
                    }
                }
                if (this.y < a.y) {
                    this.y = a.y
                } else {
                    if (this.y > b.y) {
                        this.y = b.y
                    }
                }
                return this
            },
            clampScalar: (function() {
                var a, b;
                return function(d, c) {
                    if (a === undefined) {
                        a = new g();
                        b = new g()
                    }
                    a.set(d, d);
                    b.set(c, c);
                    return this.clamp(a, b)
                }
            })(),
            floor: function() {
                this.x = Math.floor(this.x);
                this.y = Math.floor(this.y);
                return this
            },
            ceil: function() {
                this.x = Math.ceil(this.x);
                this.y = Math.ceil(this.y);
                return this
            },
            round: function() {
                this.x = Math.round(this.x);
                this.y = Math.round(this.y);
                return this
            },
            roundToZero: function() {
                this.x = (this.x < 0) ? Math.ceil(this.x) : Math.floor(this.x);
                this.y = (this.y < 0) ? Math.ceil(this.y) : Math.floor(this.y);
                return this
            },
            negate: function() {
                this.x = -this.x;
                this.y = -this.y;
                return this
            },
            dot: function(a) {
                return this.x * a.x + this.y * a.y
            },
            lengthSq: function() {
                return this.x * this.x + this.y * this.y
            },
            length: function() {
                return Math.sqrt(this.x * this.x + this.y * this.y)
            },
            normalize: function() {
                return this.divideScalar(this.length())
            },
            distanceTo: function(a) {
                return Math.sqrt(this.distanceToSquared(a))
            },
            distanceToSquared: function(a) {
                var b = this.x - a.x,
                    c = this.y - a.y;
                return b * b + c * c
            },
            setLength: function(b) {
                var a = this.length();
                if (a !== 0 && b !== a) {
                    this.multiplyScalar(b / a)
                }
                return this
            },
            lerp: function(b, a) {
                this.x += (b.x - this.x) * a;
                this.y += (b.y - this.y) * a;
                return this
            },
            lerpVectors: function(a, b, c) {
                this.subVectors(b, a).multiplyScalar(c).add(a);
                return this
            },
            equals: function(a) {
                return ((a.x === this.x) && (a.y === this.y))
            },
            fromArray: function(a, b) {
                if (b === undefined) {
                    b = 0
                }
                this.x = a[b];
                this.y = a[b + 1];
                return this
            },
            toArray: function(a, b) {
                if (a === undefined) {
                    a = []
                }
                if (b === undefined) {
                    b = 0
                }
                a[b] = this.x;
                a[b + 1] = this.y;
                return a
            },
            fromAttribute: function(b, c, a) {
                if (a === undefined) {
                    a = 0
                }
                c = c * b.itemSize + a;
                this.x = b.array[c];
                this.y = b.array[c + 1];
                return this
            },
            clone: function() {
                return new g(this.x, this.y)
            }
        };
        h.exports = g
    }, {}],
    1243: [function(f, i, g) {
        var h = (function() {
            var v = ["", "-webkit-", "-moz-", "-o-", "-ms-"];
            var x = {
                "animation-delay": "transitionend",
                "-o-animation-delay": "oTransitionEnd",
                "-moz-animation-delay": "transitionend",
                "-webkit-animation-delay": "webkitTransitionEnd",
                "-ms-animation-delay": "transitionend"
            };
            var q = {
                "animation-delay": "animationstart",
                "-o-animation-delay": "oanimationstart",
                "-moz-animation-delay": "animationstart",
                "-webkit-animation-delay": "webkitAnimationStart",
                "-ms-animation-delay": "MSAnimationStart"
            };
            var u = {
                "animation-delay": "animationiteration",
                "-o-animation-delay": "oanimationiteration",
                "-moz-animation-delay": "animationiteration",
                "-webkit-animation-delay": "webkitAnimationIteration",
                "-ms-animation-delay": "MSAnimationIteration"
            };
            var a = {
                "animation-delay": "animationend",
                "-o-animation-delay": "oanimationend",
                "-moz-animation-delay": "animationend",
                "-webkit-animation-delay": "webkitAnimationEnd",
                "-ms-animation-delay": "MSAnimationEnd"
            };
            var b = {
                "animation-delay": "animation-play-state",
                "-o-animation-delay": "-o-animation-play-state",
                "-moz-animation-delay": "animation-play-state",
                "-webkit-animation-delay": "-webkit-animation-play-state",
                "-ms-animation-delay": "animation-play-state"
            };
            var w = document.createElement("_");
            var t = ["", "-webkit-", "-moz-", "-o-", "-ms-"];

            function c(j) {
                for (var l = 0; l < t.length; l++) {
                    var k = v[l] + j;
                    if (w.style[k] !== undefined) {
                        return k
                    }
                }
                return undefined
            }
            var d = ["-webkit-", "", "-moz-", "-o-", "-ms-"];

            function r(j) {
                for (var l = 0; l < d.length; l++) {
                    var k = d[l] + j;
                    if (w.style[k] !== undefined) {
                        return k
                    }
                }
                return undefined
            }
            return {
                transition: c("transition"),
                filter: r("filter"),
                transform: c("transform"),
                transitionDelay: c("transition-delay"),
                animationDelay: c("animation-delay"),
                transitionEnd: x[c("animation-delay")],
                animationStart: q[c("animation-delay")],
                animationIteration: u[c("animation-delay")],
                animationEnd: a[c("animation-delay")],
                animationPlayState: b[c("animation-delay")]
            }
        }());
        i.exports = h
    }, {}],
    1244: [function(d, g, f) {
        g.exports = {
            lerp: function(b, a, c) {
                return a + (c - a) * b
            },
            map: function(a, b, j, c, k) {
                return this.lerp(this.norm(a, b, j), c, k)
            },
            norm: function(a, b, c) {
                return (a - b) / (c - b)
            },
            clamp: function(a, b, c) {
                return Math.max(b, Math.min(c, a))
            },
            randRange: function(a, b) {
                return (Math.random() * (b - a)) + a
            }
        }
    }, {}],
    1245: [function(f, i, g) {
        var h = function() {
            var F = Date.now(),
                M = F;
            var E = 0,
                L = Infinity,
                K = 0;
            var O = 0,
                D = Infinity,
                B = 0;
            var J = 0,
                H = 0;
            var I = document.createElement("div");
            I.id = "stats";
            I.addEventListener("mousedown", function(j) {
                j.preventDefault();
                A(++H % 2)
            }, false);
            I.style.cssText = "width:80px;opacity:0.9;cursor:pointer";
            var G = document.createElement("div");
            G.id = "fps";
            G.style.cssText = "padding:0 0 3px 3px;text-align:left;background-color:#002";
            I.appendChild(G);
            var c = document.createElement("div");
            c.id = "fpsText";
            c.style.cssText = "color:#0ff;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px";
            c.innerHTML = "FPS";
            G.appendChild(c);
            var C = document.createElement("div");
            C.id = "fpsGraph";
            C.style.cssText = "position:relative;width:74px;height:30px;background-color:#0ff";
            G.appendChild(C);
            while (C.children.length < 74) {
                var d = document.createElement("span");
                d.style.cssText = "width:1px;height:30px;float:left;background-color:#113";
                C.appendChild(d)
            }
            var N = document.createElement("div");
            N.id = "ms";
            N.style.cssText = "padding:0 0 3px 3px;text-align:left;background-color:#020;display:none";
            I.appendChild(N);
            var P = document.createElement("div");
            P.id = "msText";
            P.style.cssText = "color:#0f0;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px";
            P.innerHTML = "MS";
            N.appendChild(P);
            var b = document.createElement("div");
            b.id = "msGraph";
            b.style.cssText = "position:relative;width:74px;height:30px;background-color:#0f0";
            N.appendChild(b);
            while (b.children.length < 74) {
                var d = document.createElement("span");
                d.style.cssText = "width:1px;height:30px;float:left;background-color:#131";
                b.appendChild(d)
            }
            var A = function(j) {
                H = j;
                switch (H) {
                    case 0:
                        G.style.display = "block";
                        N.style.display = "none";
                        break;
                    case 1:
                        G.style.display = "none";
                        N.style.display = "block";
                        break
                }
            };
            var a = function(l, j) {
                var k = l.appendChild(l.firstChild);
                k.style.height = j + "px"
            };
            return {
                REVISION: 12,
                domElement: I,
                setMode: A,
                begin: function() {
                    F = Date.now()
                },
                end: function() {
                    var j = Date.now();
                    E = j - F;
                    L = Math.min(L, E);
                    K = Math.max(K, E);
                    P.textContent = E + " MS (" + L + "-" + K + ")";
                    a(b, Math.min(30, 30 - (E / 200) * 30));
                    J++;
                    if (j > M + 1000) {
                        O = Math.round((J * 1000) / (j - M));
                        D = Math.min(D, O);
                        B = Math.max(B, O);
                        c.textContent = O + " FPS (" + D + "-" + B + ")";
                        a(C, Math.min(30, 30 - (O / 100) * 30));
                        M = j;
                        J = 0
                    }
                    return j
                },
                update: function() {
                    F = this.end()
                }
            }
        };
        i.exports = h
    }, {}],
    1246: [function(d, g, f) {
        g.exports = function(a) {
            var c = a.MOUSE;
            if (!c) {
                c = {
                    LEFT: 0,
                    MIDDLE: 1,
                    RIGHT: 2
                }
            }

            function b(ah, ag) {
                this.object = ah;
                this.domElement = (ag !== undefined) ? ag : document;
                this.enabled = true;
                this.target = new a.Vector3();
                this.center = this.target;
                this.noZoom = false;
                this.zoomSpeed = 1;
                this.minDistance = 0;
                this.maxDistance = Infinity;
                this.noRotate = false;
                this.rotateSpeed = 1;
                this.noPan = false;
                this.keyPanSpeed = 7;
                this.autoRotate = false;
                this.autoRotateSpeed = 2;
                this.minPolarAngle = 0;
                this.maxPolarAngle = Math.PI;
                this.minAzimuthAngle = -Infinity;
                this.maxAzimuthAngle = Infinity;
                this.noKeys = false;
                this.keys = {
                    LEFT: 37,
                    UP: 38,
                    RIGHT: 39,
                    BOTTOM: 40
                };
                this.mouseButtons = {
                    ORBIT: c.LEFT,
                    ZOOM: c.MIDDLE,
                    PAN: c.RIGHT
                };
                this.incPhiDelta = 0;
                var ak = this;
                var aI = 0.000001;
                var ar = new a.Vector2();
                var aw = new a.Vector2();
                var aj = new a.Vector2();
                var aH = new a.Vector2();
                var av = new a.Vector2();
                var aA = new a.Vector2();
                var ad = new a.Vector3();
                var ai = new a.Vector3();
                var at = new a.Vector2();
                var aJ = new a.Vector2();
                var al = new a.Vector2();
                var ax;
                var X;
                var am = 0;
                var aD = 0;
                var ap = 1;
                var aB = new a.Vector3();
                var aG = new a.Vector3();
                var au = new a.Quaternion();
                var aF = {
                    NONE: -1,
                    ROTATE: 0,
                    DOLLY: 1,
                    PAN: 2,
                    TOUCH_ROTATE: 3,
                    TOUCH_DOLLY: 4,
                    TOUCH_PAN: 5
                };
                var W = aF.NONE;
                this.target0 = this.target.clone();
                this.position0 = this.object.position.clone();
                var Y = new a.Quaternion().setFromUnitVectors(ah.up, new a.Vector3(0, 1, 0));
                var ay = Y.clone().inverse();
                var ab = {
                    type: "change"
                };
                var ae = {
                    type: "start"
                };
                var aq = {
                    type: "end"
                };
                this.rotateLeft = function(h) {
                    if (h === undefined) {
                        h = aE()
                    }
                    aD -= h
                };
                this.rotateUp = function(h) {
                    if (h === undefined) {
                        h = aE()
                    }
                    am -= h
                };
                this.panLeft = function(i) {
                    var h = this.object.matrix.elements;
                    ad.set(h[0], h[1], h[2]);
                    ad.multiplyScalar(-i);
                    aB.add(ad)
                };
                this.panUp = function(i) {
                    var h = this.object.matrix.elements;
                    ad.set(h[4], h[5], h[6]);
                    ad.multiplyScalar(i);
                    aB.add(ad)
                };
                this.pan = function(l, m) {
                    var k = ak.domElement === document ? ak.domElement.body : ak.domElement;
                    if (ak.object.fov !== undefined) {
                        var h = ak.object.position;
                        var i = h.clone().sub(ak.target);
                        var j = i.length();
                        j *= Math.tan((ak.object.fov / 2) * Math.PI / 180);
                        ak.panLeft(2 * l * j / k.clientHeight);
                        ak.panUp(2 * m * j / k.clientHeight)
                    } else {
                        if (ak.object.top !== undefined) {
                            ak.panLeft(l * (ak.object.right - ak.object.left) / k.clientWidth);
                            ak.panUp(m * (ak.object.top - ak.object.bottom) / k.clientHeight)
                        } else {
                            console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.")
                        }
                    }
                };
                this.dollyIn = function(h) {
                    if (h === undefined) {
                        h = ao()
                    }
                    ap /= h
                };
                this.dollyOut = function(h) {
                    if (h === undefined) {
                        h = ao()
                    }
                    ap *= h
                };
                this.update = function() {
                    var i = this.object.position;
                    ai.copy(i).sub(this.target);
                    ai.applyQuaternion(Y);
                    ax = Math.atan2(ai.x, ai.z);
                    X = Math.atan2(Math.sqrt(ai.x * ai.x + ai.z * ai.z), ai.y);
                    if (this.autoRotate && W === aF.NONE) {
                        this.rotateLeft(aE())
                    }
                    am += this.incPhiDelta;
                    ax += aD;
                    X += am;
                    ax = Math.max(this.minAzimuthAngle, Math.min(this.maxAzimuthAngle, ax));
                    X = Math.max(this.minPolarAngle, Math.min(this.maxPolarAngle, X));
                    X = Math.max(aI, Math.min(Math.PI - aI, X));
                    var h = ai.length() * ap;
                    h = Math.max(this.minDistance, Math.min(this.maxDistance, h));
                    this.target.add(aB);
                    ai.x = h * Math.sin(X) * Math.sin(ax);
                    ai.y = h * Math.cos(X);
                    ai.z = h * Math.sin(X) * Math.cos(ax);
                    ai.applyQuaternion(ay);
                    i.copy(this.target).add(ai);
                    this.object.lookAt(this.target);
                    aD = 0;
                    am = 0;
                    ap = 1;
                    aB.set(0, 0, 0);
                    this.incPhiDelta = 0;
                    if (aG.distanceToSquared(this.object.position) > aI || 8 * (1 - au.dot(this.object.quaternion)) > aI) {
                        this.dispatchEvent(ab);
                        aG.copy(this.object.position);
                        au.copy(this.object.quaternion)
                    }
                };
                this.reset = function() {
                    W = aF.NONE;
                    this.target.copy(this.target0);
                    this.object.position.copy(this.position0);
                    this.update()
                };
                this.getPolarAngle = function() {
                    return X
                };
                this.getAzimuthalAngle = function() {
                    return ax
                };

                function aE() {
                    return 2 * Math.PI / 60 / 60 * ak.autoRotateSpeed
                }

                function ao() {
                    return Math.pow(0.95, ak.zoomSpeed)
                }

                function ac(h) {
                    if (ak.enabled === false) {
                        return
                    }
                    h.preventDefault();
                    if (h.button === ak.mouseButtons.ORBIT) {
                        if (ak.noRotate === true) {
                            return
                        }
                        W = aF.ROTATE;
                        ar.set(h.clientX, h.clientY)
                    } else {
                        if (h.button === ak.mouseButtons.ZOOM) {
                            if (ak.noZoom === true) {
                                return
                            }
                            W = aF.DOLLY;
                            at.set(h.clientX, h.clientY)
                        } else {
                            if (h.button === ak.mouseButtons.PAN) {
                                if (ak.noPan === true) {
                                    return
                                }
                                W = aF.PAN;
                                aH.set(h.clientX, h.clientY)
                            }
                        }
                    }
                    if (W !== aF.NONE) {
                        document.addEventListener("mousemove", aK, false);
                        document.addEventListener("mouseup", Z, false);
                        ak.dispatchEvent(ae)
                    }
                }

                function aK(i) {
                    if (ak.enabled === false) {
                        return
                    }
                    i.preventDefault();
                    var h = ak.domElement === document ? ak.domElement.body : ak.domElement;
                    if (W === aF.ROTATE) {
                        if (ak.noRotate === true) {
                            return
                        }
                        aw.set(i.clientX, i.clientY);
                        aj.subVectors(aw, ar);
                        ak.rotateLeft(2 * Math.PI * aj.x / h.clientWidth * ak.rotateSpeed);
                        ak.rotateUp(2 * Math.PI * aj.y / h.clientHeight * ak.rotateSpeed);
                        ar.copy(aw)
                    } else {
                        if (W === aF.DOLLY) {
                            if (ak.noZoom === true) {
                                return
                            }
                            aJ.set(i.clientX, i.clientY);
                            al.subVectors(aJ, at);
                            if (al.y > 0) {
                                ak.dollyIn()
                            } else {
                                ak.dollyOut()
                            }
                            at.copy(aJ)
                        } else {
                            if (W === aF.PAN) {
                                if (ak.noPan === true) {
                                    return
                                }
                                av.set(i.clientX, i.clientY);
                                aA.subVectors(av, aH);
                                ak.pan(aA.x, aA.y);
                                aH.copy(av)
                            }
                        }
                    }
                    if (W !== aF.NONE) {
                        ak.update()
                    }
                }

                function Z() {
                    if (ak.enabled === false) {
                        return
                    }
                    document.removeEventListener("mousemove", aK, false);
                    document.removeEventListener("mouseup", Z, false);
                    ak.dispatchEvent(aq);
                    W = aF.NONE
                }

                function af(h) {
                    if (ak.enabled === false || ak.noZoom === true || W !== aF.NONE) {
                        return
                    }
                    h.preventDefault();
                    h.stopPropagation();
                    var i = 0;
                    if (h.wheelDelta !== undefined) {
                        i = h.wheelDelta
                    } else {
                        if (h.detail !== undefined) {
                            i = -h.detail
                        }
                    }
                    if (i > 0) {
                        ak.dollyOut()
                    } else {
                        ak.dollyIn()
                    }
                    ak.update();
                    ak.dispatchEvent(ae);
                    ak.dispatchEvent(aq)
                }

                function aC(h) {
                    if (ak.enabled === false || ak.noKeys === true || ak.noPan === true) {
                        return
                    }
                    switch (h.keyCode) {
                        case ak.keys.UP:
                            ak.pan(0, ak.keyPanSpeed);
                            ak.update();
                            break;
                        case ak.keys.BOTTOM:
                            ak.pan(0, -ak.keyPanSpeed);
                            ak.update();
                            break;
                        case ak.keys.LEFT:
                            ak.pan(ak.keyPanSpeed, 0);
                            ak.update();
                            break;
                        case ak.keys.RIGHT:
                            ak.pan(-ak.keyPanSpeed, 0);
                            ak.update();
                            break
                    }
                }

                function aa(j) {
                    if (ak.enabled === false) {
                        return
                    }
                    switch (j.touches.length) {
                        case 1:
                            if (ak.noRotate === true) {
                                return
                            }
                            W = aF.TOUCH_ROTATE;
                            ar.set(j.touches[0].pageX, j.touches[0].pageY);
                            break;
                        case 2:
                            if (ak.noZoom === true) {
                                return
                            }
                            W = aF.TOUCH_DOLLY;
                            var k = j.touches[0].pageX - j.touches[1].pageX;
                            var h = j.touches[0].pageY - j.touches[1].pageY;
                            var i = Math.sqrt(k * k + h * h);
                            at.set(0, i);
                            break;
                        case 3:
                            if (ak.noPan === true) {
                                return
                            }
                            W = aF.TOUCH_PAN;
                            aH.set(j.touches[0].pageX, j.touches[0].pageY);
                            break;
                        default:
                            W = aF.NONE
                    }
                    if (W !== aF.NONE) {
                        ak.dispatchEvent(ae)
                    }
                }

                function az(j) {
                    if (ak.enabled === false) {
                        return
                    }
                    j.preventDefault();
                    j.stopPropagation();
                    var k = ak.domElement === document ? ak.domElement.body : ak.domElement;
                    switch (j.touches.length) {
                        case 1:
                            if (ak.noRotate === true) {
                                return
                            }
                            if (W !== aF.TOUCH_ROTATE) {
                                return
                            }
                            aw.set(j.touches[0].pageX, j.touches[0].pageY);
                            aj.subVectors(aw, ar);
                            ak.rotateLeft(2 * Math.PI * aj.x / k.clientWidth * ak.rotateSpeed);
                            ak.rotateUp(2 * Math.PI * aj.y / k.clientHeight * ak.rotateSpeed);
                            ar.copy(aw);
                            ak.update();
                            break;
                        case 2:
                            if (ak.noZoom === true) {
                                return
                            }
                            if (W !== aF.TOUCH_DOLLY) {
                                return
                            }
                            var l = j.touches[0].pageX - j.touches[1].pageX;
                            var h = j.touches[0].pageY - j.touches[1].pageY;
                            var i = Math.sqrt(l * l + h * h);
                            aJ.set(0, i);
                            al.subVectors(aJ, at);
                            if (al.y > 0) {
                                ak.dollyOut()
                            } else {
                                ak.dollyIn()
                            }
                            at.copy(aJ);
                            ak.update();
                            break;
                        case 3:
                            if (ak.noPan === true) {
                                return
                            }
                            if (W !== aF.TOUCH_PAN) {
                                return
                            }
                            av.set(j.touches[0].pageX, j.touches[0].pageY);
                            aA.subVectors(av, aH);
                            ak.pan(aA.x, aA.y);
                            aH.copy(av);
                            ak.update();
                            break;
                        default:
                            W = aF.NONE
                    }
                }

                function an() {
                    if (ak.enabled === false) {
                        return
                    }
                    ak.dispatchEvent(aq);
                    W = aF.NONE
                }
                this.update()
            }
            b.prototype = Object.create(a.EventDispatcher.prototype);
            b.prototype.constructor = b;
            return b
        }
    }, {}],
    1247: [function(q, r, o) {
        q("ac-polyfills/Object/create");
        var p = q("../_shared/BasePage");
        var l = p.prototype;
        var t = q("ac-dom-traversal/querySelectorAll");
        var m = q("ac-films");

        function k() {
            this.name = "ConnectPage!";
            p.call(this);
            var b = t(".ac-video");
            var a = q("ac-films").create;
            var c = a(b, {
                modal: true
            })
        }
        var n = k.prototype = Object.create(p.prototype);
        k.prototype.constructor = k;
        r.exports = k
    }, {
        "../_shared/BasePage": 1212,
        "ac-dom-traversal/querySelectorAll": 148,
        "ac-films": 539,
        "ac-polyfills/Object/create": 729
    }],
    1248: [function(G, H, C) {
        G("ac-polyfills/Object/create");
        var B = G("ac-dom-traversal").querySelector,
            z = G("ac-dom-styles").setStyle;
        var D = G("../../_shared/model/FeatureDetectionMap");
        var v = G("ac-dom-emitter").DOMEmitter;
        var E = G("ac-object");
        var w = G("ac-viewport").Viewport;
        var x = G("../../_shared/section/BaseSection"),
            u = x.prototype;
        var J = "data-media-src";
        var F = "section-connect-media";
        var y = "data-poster-src";
        var t = {
            large: 700,
            medium: 450,
            small: 450
        };

        function I(a, b, c) {
            this.name = "ConnectVideoSection";
            x.call(this, a, b, c);
            if (!D.VIDEO) {
                return
            }
            this._videoEl = null;
            this._videoReady = false;
            this._containerEl = B(".section-media-container", this.element);
            this._fallbackImage = B(".media-fallback", this._containerEl);
            this._boundFunctions._playWhenReady = this._playWhenReady.bind(this);
            this._boundFunctions._handleCanPlay = this._handleCanPlay.bind(this);
            this._boundFunctions._touchVideoEnded = this._touchVideoEnded.bind(this);
            this._initializeVideo();
            this._appendVideoElement();
            this._handleTouch()
        }
        var A = I.prototype = E.create(u);
        A._initializeVideo = function() {
            this._videoEl = this._createVideoElement();
            this._videoEl.src = this._getMediaSource();
            this._bindVideoEvents()
        };
        A._getMediaSource = function() {
            return this._containerEl.getAttribute(J)
        };
        A._getPosterSource = function() {
            return this._containerEl.getAttribute(y)
        };
        A.onResize = function(a, b, c) {
            this._setMediaDimensions()
        };
        A._setMediaDimensions = function() {
            return false;
            if (!this._videoReady || !this._containerEl || !this._videoEl) {
                return
            }
            var a = w.getBreakpoint().name,
                h = this._getNaturalMediaDimensions(),
                p = this._containerEl.getBoundingClientRect(),
                n = Math.round(p.width),
                m = t[a],
                g = m / n,
                o = h.width,
                k = h.height,
                f = k / o,
                c = n,
                b = m,
                i = 0,
                l = 0,
                d = 0,
                j = m;
            z(this._videoEl, {
                width: c,
                height: b,
                bottom: i + "px",
                left: l + "px"
            });
            z(this._containerEl, {
                height: j + "px"
            })
        };
        A._getNaturalMediaDimensions = function() {
            if (!this._naturalMediaDimensions) {
                this._naturalMediaDimensions = {
                    width: this._videoEl.videoWidth,
                    height: this._videoEl.videoHeight
                }
            }
            return this._naturalMediaDimensions
        };
        A._appendVideoElement = function() {
            if (!this._videoEl) {
                return
            }
            z(this._videoEl, {
                display: "none"
            });
            this._containerEl.appendChild(this._videoEl)
        };
        A._playWhenReady = function() {
            if (!this._videoEl || D.TOUCH) {
                return
            }
            if (!this._videoReady && !this._didBindPlayWhenReady) {
                this._didBindPlayWhenReady = true;
                this._videoEl.addEventListener("canplay", this._boundFunctions._playWhenReady, false);
                return
            }
            this._videoEl.play()
        };
        A._createVideoElement = function() {
            var a = document.createElement("video");
            a.preload = true;
            a.loop = true;
            a.muted = true;
            a.className = F;
            a.setAttribute("tabindex", "-1");
            return a
        };
        A._bindVideoEvents = function() {
            this._videoEl.addEventListener("canplay", this._boundFunctions._handleCanPlay, false)
        };
        A._handleCanPlay = function() {
            this._videoReady = true;
            this._videoEl.play();
            if (this._fallbackImage && this._containerEl) {
                this._setMediaDimensions();
                this._showVideo()
            }
        };
        A._handleTouch = function() {
            if (D.TOUCH) {
                this._videoEl.setAttribute("muted", "muted");
                this._videoEl.setAttribute("controls", "controls");
                this._videoEl.setAttribute("poster", this._getPosterSource());
                this._videoEl.addEventListener("webkitendfullscreen", this._boundFunctions._touchVideoEnded);
                this._boundFunctions._handleCanPlay();
                this._videoEl.removeEventListener("canplay", this._boundFunctions._playWhenReady);
                this._videoEl.removeEventListener("canplay", this._boundFunctions._handleCanPlay)
            }
        };
        A._showVideo = function() {
            z(this._fallbackImage, {
                display: "none"
            });
            z(this._videoEl, {
                display: "block"
            })
        };
        A.destroy = function() {
            if (this._videoEl) {
                this._videoEl.removeEventListener("canplay", this._boundFunctions._playWhenReady);
                this._videoEl.removeEventListener("canplay", this._boundFunctions._handleCanPlay);
                this._videoEl.removeEventListener("webkitendfullscreen", this._boundFunctions._touchVideoEnded);
                this._videoEl = null
            }
            this._containerEl = null;
            this._fallbackImage = null;
            this._naturalMediaDimensions = null;
            u.destroy.call(this)
        };
        A._touchVideoEnded = function() {
            this._videoEl.setAttribute("poster", this._getPosterSource());
            this._videoEl.load()
        };
        A.onViewWillAppear = function(a, b) {
            u.onViewWillAppear.call(this, a, b);
            this._playWhenReady()
        };
        A.onViewWillDisappear = function(a, b) {
            u.onViewWillDisappear.call(this, a, b);
            if (this._videoEl && !D.TOUCH) {
                this._videoEl.pause()
            }
        };
        H.exports = I
    }, {
        "../../_shared/model/FeatureDetectionMap": 1232,
        "../../_shared/section/BaseSection": 1236,
        "ac-dom-emitter": 62,
        "ac-dom-styles": 120,
        "ac-dom-traversal": 138,
        "ac-object": 713,
        "ac-polyfills/Object/create": 729,
        "ac-viewport": "ac-viewport"
    }],
    1249: [function(q, r, o) {
        q("ac-polyfills/Object/create");
        var p = q("../_shared/BasePage");
        var l = p.prototype;
        var t = q("ac-dom-traversal/querySelectorAll");
        var m = q("ac-films");

        function k() {
            this.name = "DiscoverPage";
            p.call(this);
            var b = t(".ac-video");
            var a = q("ac-films").create;
            var c = a(b, {
                modal: true
            })
        }
        var n = k.prototype = Object.create(p.prototype);
        k.prototype.constructor = k;
        r.exports = k
    }, {
        "../_shared/BasePage": 1212,
        "ac-dom-traversal/querySelectorAll": 148,
        "ac-films": 539,
        "ac-polyfills/Object/create": 729
    }],
    1250: [function(E, H, A) {
        E("ac-polyfills/Object/create");
        var y = E("ac-dom-traversal/querySelector"),
            I = E("ac-dom-metrics"),
            v = E("ac-eclipse").Clip,
            i = E("ac-viewport").Viewport,
            D = E("../../_shared/TimeoutRegistry"),
            w = E("../../_shared/ClipRegistry"),
            B = E("../../_shared/utils/math-utils"),
            C = E("../../_shared/model/FeatureDetectionMap"),
            G = E("../../_shared/circlepacker/CirclePacker"),
            u = E("../../_shared/section/BaseSection"),
            J = u.prototype;

        function F(a, b, c) {
            this.name = "DiscoverNewMusicSection";
            u.call(this, a, b, c);
            this._canvasContainerEl = y(".section-bleed", this.element);
            this._hardwareImageEl = y(".section-bleed figure", this.element);
            this._hardwareBB = {
                x1: this._hardwareImageEl.offsetLeft,
                x2: this._hardwareImageEl.offsetLeft + this._hardwareImageEl.clientWidth,
                y1: this._hardwareImageEl.offsetTop,
                y2: this._hardwareImageEl.offsetTop + this._hardwareImageEl.offsetHeight
            };
            this._staticCircles = [];
            this._circlePackerArea = {
                width: this._canvasContainerEl.clientWidth,
                height: this._canvasContainerEl.clientHeight
            };
            this.setupCirclePacker()
        }
        var x = F.prototype = Object.create(u.prototype);
        F.prototype.constructor = F;
        x.destroy = function() {
            this._circlePacker.destroy();
            this._canvasContainerEl = null;
            this._hardwareBB = null;
            this._hardwareImageEl = null;
            this._staticCircles = null;
            J.destroy.call(this)
        };
        x.setupCirclePacker = function() {
            this._circlePacker = new G(this._canvasContainerEl, this, this._canvasContainerEl.clientWidth, this._canvasContainerEl.clientHeight, this._getBreakpointName(), C.IS_RETINA);
            this._circlePacker.setSupportsRetina(C.IS_RETINA);
            var j = this._hardwareImageEl.offsetWidth;
            var d = this._hardwareImageEl.offsetHeight;
            var g = this._getStaticCirclePosition();
            for (b = 0, f = g.length; b < f; b++) {
                var h = g[b];
                this._staticCircles.push(this._circlePacker.addCircle(h.x * this._circlePacker.retinaScale, h.y * this._circlePacker.retinaScale, h.r * this._circlePacker.retinaScale, "", "hsla(" + h.h + ", 100%, 50%,0.5)", true))
            }
            this._setCirclePackerCenterPoint();
            var c = this._circlePacker.retinaScale;
            for (var b = 0, f = this._circlePacker._circles.length; b < f; b++) {
                var a = this._circlePacker._circles[b];
                if (a.isStatic) {
                    continue
                }
                a.scale = 0;
                a.attractionForceScale = 2;
                a.attractionForce = 100;
                a.animateIn = function() {
                    var l = (this.index % 2),
                        k = (l) ? this.index * 220 : this.index * 220;
                    D.setTimeout(function(r, m) {
                        var p = (m) ? Math.max(0.75, 2 - (r * 0.04)) : Math.max(0.75, 2 - (r * 0.04)),
                            o = 1.5 + (m) ? Math.max(0.5, 3 - (r * 0.06)) : Math.max(0.5, 3 - (r * 0.06)),
                            q = 0.25;
                        var n = this._spawnDelegate.getNextCirclePackerSpawnPoint(this);
                        this.setPosition(n.x * c, n.y * c);
                        this.scale = 1;
                        w.add(new v({
                            scale: p
                        }, o, {
                            scale: q
                        }, {
                            ease: "easeOutQuad",
                            onDraw: function(t) {
                                this.attractionForceScale = t.target.scale
                            }.bind(this)
                        }).play())
                    }.bind(this, this.index, l), k)
                }
            }
        };
        x.animateIn = function() {
            this._circlePacker.animateIn();
            D.setTimeout(this.setupShowAndHide.bind(this), 2500)
        };
        x.setupShowAndHide = function() {
            if (!this._circlePacker || !this._circlePacker._circles) {
                return
            }
            var b = Math.round(B.randRange(0, this._circlePacker._circles.length - 1)),
                a = this._circlePacker._circles[b];
            a.lifeTime = 100;
            D.setTimeout(this.setupShowAndHide.bind(this), B.randRange(1500, 4500))
        };
        x.getAttractionPoint = function(b) {
            var c = this._canvasContainerEl.clientWidth * 0.5;
            var a = this._canvasContainerEl.clientHeight * 0.5;
            return {
                x: c,
                y: a
            }
        };
        x.getNextCirclePackerSpawnPoint = function(c) {
            c.attractionForceScale = 0.5;
            var a = c.index % 2;
            var d = (a) ? B.randRange(-c.radius * 4, -c.radius) : this._circlePackerArea.width + B.randRange(c.radius, c.radius * 4);
            var b = (a) ? B.randRange(this._circlePackerArea.height * 0.5, this._circlePackerArea.height) : B.randRange(this._circlePackerArea.height * 0.2, this._circlePackerArea.height * 0.6);
            return {
                x: d,
                y: b
            }
        };
        var z = 0;
        x.onRequestAnimationFrame = function() {
            J.onRequestAnimationFrame.call(this);
            z = 0;
            this._circlePacker.update()
        };
        x.onResize = function(a, b, c) {
            this._setCirclePackerCenterPoint();
            this._circlePacker.onResize(a);
            this._resizeStaticCircles()
        };
        x.onBreakpoint = function(b, a, c, d) {
            this._circlePacker.onBreakpoint(b.name)
        };
        x._resizeStaticCircles = function() {
            this._hardwareBB = {
                x1: this._hardwareImageEl.offsetLeft,
                x2: this._hardwareImageEl.offsetLeft + this._hardwareImageEl.clientWidth,
                y1: this._hardwareImageEl.offsetTop,
                y2: this._hardwareImageEl.offsetTop + this._hardwareImageEl.offsetHeight
            };
            this._circlePackerArea = {
                width: this._canvasContainerEl.clientWidth,
                height: this._canvasContainerEl.clientHeight
            };
            var a = this._getStaticCirclePosition(c);
            for (var c = 0; c < this._staticCircles.length; c++) {
                var b = a[c];
                this._staticCircles[c].setPosition(b.x, b.y);
                this._staticCircles[c].setRadius(b.r)
            }
        };
        x._setCirclePackerCenterPoint = function() {
            var b = this.element.clientWidth * 0.25;
            var a = this.element.clientHeight * 0.1;
            this._circlePacker.setCenter(b, a)
        };
        x._getStaticCirclePosition = function() {
            var a = (this.element.clientHeight < 1200) ? this.element.clientHeight / 1700 : 1;
            var b = [{
                r: (358 * a),
                x: this.element.clientWidth * 0.1,
                y: this._hardwareBB.y1 + 10,
                h: 0
            }, {
                r: (250 * a),
                x: this.element.clientWidth * 0.3,
                y: this._hardwareBB.y1,
                h: 40
            }, {
                r: (240 * a),
                x: this._hardwareBB.x2,
                y: 0,
                h: 0
            }, {
                r: (261 * a),
                x: this._hardwareBB.x2 + (261 * a) + 60,
                y: this._hardwareBB.y1 - (261 * a) * 0.5,
                h: 160
            }, {
                r: (200 * a),
                x: this.element.clientWidth * 0.9,
                y: Math.max(this._hardwareBB.y1 - (100 * a) * 0.75, -50),
                h: 80
            }, {
                r: (100 * a),
                x: this.element.clientWidth - (100 * a) * 0.65,
                y: this._hardwareBB.y1 - (100 * a) * 0.75,
                h: 200
            }, {
                r: (150 * a),
                x: this._hardwareBB.x1,
                y: this._hardwareBB.y2 - (170 * a) * 0.5,
                h: 220
            }, {
                r: (219 * a),
                x: this._hardwareBB.x2 + (90 * a),
                y: this._hardwareBB.y2 - (90 * a),
                h: 260
            }, {
                r: (261 * a),
                x: this._hardwareBB.x2 + (60 * a) + 320,
                y: this._hardwareBB.y2 - (120 * a),
                h: 280
            }, {
                r: this._hardwareImageEl.clientWidth * 0.5,
                x: this.element.clientWidth * 0.5,
                y: this._circlePackerArea.height * 0.25,
                h: 0
            }, {
                r: this._hardwareImageEl.clientWidth * 0.5,
                x: this.element.clientWidth * 0.5,
                y: this._circlePackerArea.height * 0.5,
                h: 0
            }, {
                r: this._hardwareImageEl.clientWidth * 0.5,
                x: this.element.clientWidth * 0.5,
                y: this._circlePackerArea.height * 0.75,
                h: 0
            }];
            return b
        };
        x._getBreakpointName = function() {
            return i.getBreakpoint().name || "large"
        };
        H.exports = F
    }, {
        "../../_shared/ClipRegistry": 1213,
        "../../_shared/TimeoutRegistry": 1223,
        "../../_shared/circlepacker/CirclePacker": 1226,
        "../../_shared/model/FeatureDetectionMap": 1232,
        "../../_shared/section/BaseSection": 1236,
        "../../_shared/utils/math-utils": 1244,
        "ac-dom-metrics": 90,
        "ac-dom-traversal/querySelector": 147,
        "ac-eclipse": 179,
        "ac-polyfills/Object/create": 729,
        "ac-viewport": "ac-viewport"
    }],
    1251: [function(z, C, x) {
        z("ac-polyfills/Object/create");
        var E = z("ac-dom-metrics");
        var F = z("../../_shared/utils/browserPrefixed");
        var w = z("ac-dom-traversal/querySelector");
        var D = z("ac-dom-traversal/querySelectorAll");
        var y = z("../../_shared/model/DataAttributes");
        var B = z("./RecommendationGallery");
        var t = z("ac-easing");
        var u = z("ac-eclipse").Clip;
        var r = z("../../_shared/section/BaseSection");
        var q = r.prototype;

        function A(a, b, c) {
            this.name = "DiscoverRecommendationSection";
            r.call(this, a, b, c);
            this.recommendationGallery = new B(w("#recommendation-gallery"))
        }
        var v = A.prototype = Object.create(r.prototype);
        A.prototype.constructor = A;
        v.activate = function() {
            q.activate.call(this);
            this.recommendationGallery.startAnimation()
        };
        v.deactivate = function() {
            q.deactivate.call(this);
            this.recommendationGallery.stopAnimation()
        };
        v.animateIn = function() {
            q.animateIn.call(this)
        };
        v.onRequestAnimationFrame = function() {
            q.onRequestAnimationFrame.call(this)
        };
        v.onScroll = function(a, b, c) {
            q.onScroll.call(this, a, b, c)
        };
        v.onResize = function(a, b, c) {
            q.onResize.call(this, a, b, c)
        };
        v.onViewWillAppear = function(a, b) {
            q.onViewWillAppear.call(this, a, b)
        };
        v.onViewWillDisappear = function(a, b) {
            q.onViewWillDisappear.call(this, a, b)
        };
        v.destroy = function() {
            this.recommendationGallery.destroy();
            q.destroy.call(this)
        };
        C.exports = A
    }, {
        "../../_shared/model/DataAttributes": 1231,
        "../../_shared/section/BaseSection": 1236,
        "../../_shared/utils/browserPrefixed": 1243,
        "./RecommendationGallery": 1255,
        "ac-dom-metrics": 90,
        "ac-dom-traversal/querySelector": 147,
        "ac-dom-traversal/querySelectorAll": 148,
        "ac-easing": 153,
        "ac-eclipse": 179,
        "ac-polyfills/Object/create": 729
    }],
    1252: [function(y, z, x) {
        y("ac-polyfills/Object/create");
        y("ac-polyfills/Element/prototype.classList");
        var B = y("../../../_shared/utils/browserPrefixed");
        var p = y("ac-event-emitter-micro").EventEmitterMicro;
        var r = y("ac-easing");
        var t = y("ac-eclipse").Clip;
        var o = p.prototype;
        var q = "cubic-bezier(.19,0,.32,.81)";
        var A = "cubic-bezier(.19,0,.64,1)";
        var u = 0;

        function w(a) {
            p.call(this);
            this.element = a;
            this.name = "AlbumSlideRevealTransition" + u++;
            var c = this.element.getElementsByTagName("figure");
            this.figure0 = c[0];
            this.figure0Width = this.figure0.clientWidth;
            this.figure1 = c[1];
            this.figure1Width = this.figure1.clientWidth;
            this._imageClassNames = [];
            for (var b = 0, d = c.length; b < d; b++) {
                this._imageClassNames.push(c[b].className);
                if (b > 1) {
                    this.element.removeChild(c[b])
                }
            }
            this.figure0.className = this._imageClassNames[0];
            this.figure1.className = this._imageClassNames[1];
            this._imageIndex = 0;
            this.hasAnimated = false;
            this.figure0.style.backgroundColor = "rgb(180,255,255)";
            this.figure1.style.backgroundColor = "rgb(255,180,255)";
            this._boundFunctions = {
                _onSlideAnimationComplete: this.onSlideAnimationComplete.bind(this)
            };
            this._clips = []
        }
        var v = w.prototype = Object.create(p.prototype);
        w.prototype.constructor = w;
        v.destroy = function() {
            this._boundFunctions = null;
            this.element = null;
            this.figure0 = null;
            this.figure1 = null;
            for (var a = 0, b = this._clips.length; a < b; a++) {
                this._clips[a].destroy()
            }
            this._clips = null;
            o.destroy()
        };
        v.prepareAndAnimate = function() {
            if (this.hasAnimated) {
                this.figure0.className = this.figure1.className
            }
            this.figure0.style[B.transform] = "none";
            this.figure1.style[B.transform] = "none";
            this.figure0.style[B.transition] = "initial";
            this.figure1.style[B.transition] = "initial";
            var a = (++this._imageIndex) % this._imageClassNames.length;
            this.figure1.className = this._imageClassNames[a];
            this._performAnimation()
        };
        v._performAnimation = function() {
            this.hasAnimated = true;
            var a = 1;
            var b;
            b = new t(this.figure1, 1.1 * a, {
                transform: {
                    translateX: this.figure1Width
                }
            }, {
                destroyOnComplete: true,
                ease: q
            }).play();
            this._clips.push(b);
            b = new t(this.figure0, 3.5 * a, {
                transform: {
                    translateX: this.figure0Width
                }
            }, {
                ease: A,
                destroyOnComplete: true,
                onComplete: this._boundFunctions._onSlideAnimationComplete
            }).play();
            this._clips.push(b)
        };
        v.onSlideAnimationComplete = function(a) {
            this.trigger(w.ON_TRANSITION_END, this);
            this._clips = []
        };
        v.onResize = function() {
            this.figure0Width = this.figure0.clientWidth;
            this.figure1Width = this.figure1.clientWidth;
            if (this._clips.length) {
                for (var a = 0, b = this._clips.length; a < b; a++) {
                    this._clips[a].destroy()
                }
                this._clips = []
            }
        };
        v.randomInArray = function(b) {
            var a = Math.floor(Math.random() * b.length);
            return b[a]
        };
        w.ON_TRANSITION_END = "ON_TRANSITION_END";
        z.exports = w
    }, {
        "../../../_shared/utils/browserPrefixed": 1243,
        "ac-easing": 153,
        "ac-eclipse": 179,
        "ac-event-emitter-micro": 200,
        "ac-polyfills/Element/prototype.classList": 727,
        "ac-polyfills/Object/create": 729
    }],
    1253: [function(r, t, q) {
        r("ac-polyfills/Object/create");
        r("ac-polyfills/Element/prototype.classList");
        var v = r("ac-dom-metrics"),
            n = r("ac-dom-traversal/querySelector"),
            u = r("ac-dom-traversal/querySelectorAll");
        var p = r("../../../_shared/utils/math-utils");
        var o = r("./AlbumSlideRevealTransition");

        function l(d) {
            this._visibleAlbumCovers = [];
            var a = u(".album", d);
            for (var f = 0, b = a.length; f < b; f++) {
                var c = new o(a[f]);
                this._visibleAlbumCovers.push(c)
            }
            this._notAnimatedForGroupYet = null;
            this._animateTimeouts = [-1, -1, -1]
        }
        var m = l.prototype = {};
        l.prototype.constructor = l;
        m.destroy = function() {
            this.deactivate();
            for (var a = 0, b = this._visibleAlbumCovers.length; a < b; a++) {
                this._visibleAlbumCovers[a].destroy()
            }
            for (a = 0, b = this._animateTimeouts.length; a < b; a++) {
                clearTimeout(this._animateTimeouts[a])
            }
            this._visibleAlbumCovers = null;
            this._notAnimatedForGroupYet = null
        };
        m.activate = function() {
            this.animate(0);
            this.animate(1);
            this.animate(2)
        };
        m.deactivate = function() {
            for (var a = 0, b = this._animateTimeouts.length; a < b; a++) {
                clearTimeout(this._animateTimeouts[a])
            }
        };
        m.animate = function(c) {
            if (!this._notAnimatedForGroupYet || this._notAnimatedForGroupYet.length == 0) {
                this._repopulateNotAnimatedYet()
            }
            var b = this._notAnimatedForGroupYet.pop();
            b.prepareAndAnimate();
            var a = 1;
            this._animateTimeouts[c] = setTimeout(this.animate.bind(this, c), p.randRange(1000 * a, 6000 * a))
        };
        m.onResize = function(c, f, a) {
            for (var d = 0, b = this._visibleAlbumCovers.length; d < b; d++) {
                this._visibleAlbumCovers[d].onResize()
            }
        };
        m._repopulateNotAnimatedYet = function() {
            this._notAnimatedForGroupYet = this._visibleAlbumCovers.concat();
            var a = this._notAnimatedForGroupYet.length,
                b, c;
            while (a) {
                c = Math.floor(Math.random() * a--);
                b = this._notAnimatedForGroupYet[a];
                this._notAnimatedForGroupYet[a] = this._notAnimatedForGroupYet[c];
                this._notAnimatedForGroupYet[c] = b
            }
        };
        m.randomInArray = function(b) {
            var a = Math.floor(Math.random() * b.length);
            return b[a]
        };
        t.exports = l
    }, {
        "../../../_shared/utils/math-utils": 1244,
        "./AlbumSlideRevealTransition": 1252,
        "ac-dom-metrics": 90,
        "ac-dom-traversal/querySelector": 147,
        "ac-dom-traversal/querySelectorAll": 148,
        "ac-polyfills/Element/prototype.classList": 727,
        "ac-polyfills/Object/create": 729
    }],
    1254: [function(E, F, B) {
        E("ac-polyfills/Object/create");
        var r = E("ac-event-emitter").EventEmitter,
            v = E("../../../_shared/section/BaseSection"),
            C = E("./AlbumSlideRevealsController"),
            D = E("../../../_shared/TimeoutRegistry"),
            w = E("ac-eclipse").Clip,
            y = E("../../../_shared/ClipRegistry");
        var A = E("ac-dom-traversal").querySelector,
            G = E("ac-dom-traversal").querySelectorAll,
            x = E("ac-dom-styles").setStyle,
            H = E("../../../_shared/utils/browserPrefixed");
        var t = v.prototype;
        var u = function(a, b, c) {
            this.name = "DiscoverReleasesSection";
            v.call(this, a, b, c);
            this._animationEl = A(".section-newreleases .newreleases-animation");
            this._albumCoverEls = G(".album", this.element)
        };
        var z = u.prototype = Object.create(v.prototype);
        u.prototype.constructor = u;
        z.destroy = function() {
            this._animationEl = null;
            this._albumCoverEls = null;
            if (this._slideTransitionsController) {
                this._slideTransitionsController.destroy();
                this._slideTransitionsController = null
            }
            t.destroy.call(this)
        };
        z._animateInAlbums = function() {
            this._albumsWaitingToFinishAnimatingIn = this._albumCoverEls.length;
            var c = this._albumCoverEls.length;
            for (var b = 0; b < c; b++) {
                var a = this.createAnimateInClip(this._albumCoverEls[b], b);
                a.play()
            }
        };
        z.createAnimateInClip = function(b, f) {
            var c = f * 0.15;
            var d = {
                delay: c,
                onComplete: this.onAlbumAnimateInComplete.bind(this)
            };
            var a = y.add(new w(b, 2, {
                transform: {
                    translateY: 0
                }
            }, d));
            a.setProgress(0);
            return a
        };
        z.onAlbumAnimateInComplete = function() {
            if (--this._albumsWaitingToFinishAnimatingIn == 0) {
                this._onAnimateInComplete()
            }
        };
        z._onAnimateInComplete = function() {
            this._slideTransitionsController = new C(this._animationEl);
            this._slideTransitionsController.activate()
        };
        z.activate = function() {
            t.activate.call(this);
            if (this._slideTransitionsController) {
                this._slideTransitionsController.activate()
            }
        };
        z.deactivate = function() {
            t.deactivate.call(this);
            if (this._slideTransitionsController) {
                this._slideTransitionsController.deactivate()
            }
        };
        z.animateIn = function() {
            t.animateIn.call(this);
            this._animateInAlbums()
        };
        z.onRequestAnimationFrame = function() {
            t.onRequestAnimationFrame.call(this)
        };
        z.onScroll = function(a, b, c) {
            t.onScroll.call(this, a, b, c)
        };
        z.onResize = function(a, b, c) {
            t.onResize.call(this, a, b, c);
            if (this._slideTransitionsController) {
                this._slideTransitionsController.onResize(a, b, c)
            }
        };
        z.onViewWillAppear = function(b, c) {
            t.onViewWillAppear.call(this, b, c);
            if (!this._hasAnimatedIn) {
                var d = this._albumCoverEls.length;
                for (var a = 0; a < d; a++) {
                    this._albumCoverEls[a].style[H.transform] = "translateY(" + this.trackedElement.height + "px)"
                }
            }
        };
        z.onViewWillDisappear = function(a, b) {
            t.onViewWillDisappear.call(this, a, b)
        };
        F.exports = u
    }, {
        "../../../_shared/ClipRegistry": 1213,
        "../../../_shared/TimeoutRegistry": 1223,
        "../../../_shared/section/BaseSection": 1236,
        "../../../_shared/utils/browserPrefixed": 1243,
        "./AlbumSlideRevealsController": 1253,
        "ac-dom-styles": 120,
        "ac-dom-traversal": 138,
        "ac-eclipse": 179,
        "ac-event-emitter": 202,
        "ac-polyfills/Object/create": 729
    }],
    1255: [function(D, F, A) {
        var z = D("ac-dom-traversal/querySelector");
        var G = D("ac-dom-traversal/querySelectorAll");
        var x = D("ac-dom-styles/setStyle");
        var I = D("ac-dom-metrics");
        var v = D("ac-dom-nodes");
        var B = D("ac-object");
        var t = D("ac-event-emitter").EventEmitter;
        var u = D("ac-viewport").Viewport;
        var H = D("./RecommendationGalleryElement");
        var J = D("./RecommendationGalleryTitleBox");
        var C = D("../../_shared/TimeoutRegistry");
        var w = D("ac-clip").Clip;
        var E = function(a) {
            this.el = a;
            this.translationDuration = 1000;
            this.zoomDuration = 15000;
            this.intervalDuration = 4000;
            this.galleryElements = this.setupGalleryElements();
            this.numberOfElements = this.galleryElements.length;
            this.activeElement = -1;
            this.sto = -1;
            this.titleBox = new J(this.el.querySelector(".gallery-element-title"), this);
            this._boundFunctions = {
                animate: this.animate.bind(this)
            }
        };
        var y = E.prototype = {};
        y.startAnimation = function() {
            this.titleBox.startAnimation();
            this.animate()
        };
        y.stopAnimation = function() {
            this.titleBox.stopAnimation();
            clearTimeout(this.sto)
        };
        y.setupGalleryElements = function() {
            var a = [];
            G(".gallery-element").forEach(function(b, c) {
                a.push(new H(b, this))
            }.bind(this));
            return a
        };
        y.animate = function() {
            if (this.activeElement < this.numberOfElements - 1) {
                this.activeElement++
            } else {
                this.activeElement = 0
            }
            this.galleryElements.forEach(function(a, b) {
                a.hide()
            });
            this.galleryElements[this.activeElement].activate();
            this.titleBox.activateTitleWithIndex(this.activeElement);
            clearTimeout(this.sto);
            this.sto = setTimeout(this._boundFunctions.animate, this.intervalDuration)
        };
        y.resetNonVisibleElements = function() {
            this.galleryElements.forEach(function(a, b) {
                if (b !== this.activeElement) {
                    this.galleryElements[b].deactivate()
                }
            }.bind(this))
        };
        y.destroy = function() {
            this.stopAnimation();
            if (this.titleBox) {
                this.titleBox.destroy();
                this.titleBox = null
            }
            if (this.galleryElements) {
                this.galleryElements.forEach(function(b, c) {
                    b.destroy()
                });
                this.galleryElements = null
            }
            var a;
            for (a in this) {
                if (this.hasOwnProperty(a)) {
                    this[a] = null
                }
            }
            this._boundFunctions = null
        };
        F.exports = E
    }, {
        "../../_shared/TimeoutRegistry": 1223,
        "./RecommendationGalleryElement": 1256,
        "./RecommendationGalleryTitleBox": 1257,
        "ac-clip": 22,
        "ac-dom-metrics": 90,
        "ac-dom-nodes": 102,
        "ac-dom-styles/setStyle": 132,
        "ac-dom-traversal/querySelector": 147,
        "ac-dom-traversal/querySelectorAll": 148,
        "ac-event-emitter": 202,
        "ac-object": 713,
        "ac-viewport": "ac-viewport"
    }],
    1256: [function(x, y, w) {
        x("ac-polyfills/Object/create");
        var v = x("ac-dom-traversal/querySelector");
        var z = x("ac-dom-traversal/querySelectorAll");
        var t = x("ac-dom-styles/setStyle");
        var B = x("ac-dom-metrics");
        var q = x("ac-dom-nodes");
        var o = x("ac-event-emitter").EventEmitter;
        var p = x("ac-viewport").Viewport;
        var r = x("ac-eclipse").Clip;
        var u;
        var A = function(a, b) {
            this.el = a;
            this.image = this.el.querySelector(".recommendation-gallery-slide");
            this.gallery = b;
            this._boundFunctions = {
                _handleTransitionEnd: this.handleTransitionEnd.bind(this)
            };
            this.el.addEventListener("transitionend", this._boundFunctions._handleTransitionEnd)
        };
        u = A.prototype = {};
        u.activate = function() {
            this.el.classList.add("active");
            this.el.classList.add("visible")
        };
        u.hide = function() {
            this.el.classList.remove("visible")
        };
        u.deactivate = function() {
            this.el.classList.remove("active");
            this.el.classList.remove("visible")
        };
        u.handleTransitionEnd = function(a) {
            this.gallery.resetNonVisibleElements()
        };
        u.destroy = function() {
            this.el.removeEventListener("transitionend", this._boundFunctions._handleTransitionEnd);
            this.el = null;
            this.image = null;
            this.gallery = null;
            for (var a in this) {
                if (this.hasOwnProperty(a)) {
                    this[a] = null
                }
            }
        };
        y.exports = A
    }, {
        "ac-dom-metrics": 90,
        "ac-dom-nodes": 102,
        "ac-dom-styles/setStyle": 132,
        "ac-dom-traversal/querySelector": 147,
        "ac-dom-traversal/querySelectorAll": 148,
        "ac-eclipse": 179,
        "ac-event-emitter": 202,
        "ac-polyfills/Object/create": 729,
        "ac-viewport": "ac-viewport"
    }],
    1257: [function(z, A, w) {
        var v = z("ac-dom-traversal/querySelector");
        var B = z("ac-dom-traversal/querySelectorAll");
        var t = z("ac-dom-styles/setStyle");
        var C = z("ac-dom-metrics");
        var x = z("ac-object");
        var p = z("ac-event-emitter").EventEmitter;
        var q = z("ac-viewport").Viewport;
        var r = z("ac-clip").Clip;
        var y = z("../../_shared/TimeoutRegistry");
        var u;
        var D = function(a, b) {
            this.el = a;
            this.gallery = b;
            this.titleElements = B("li", this.el);
            this.duration = this.gallery.translationDuration
        };
        u = D.prototype = x.create(p.prototype);
        u.startAnimation = function() {
            this.sto = y.setTimeout(function() {
                this.activate();
                this.now = new Date().getTime()
            }.bind(this), this.duration / 2)
        };
        u.stopAnimation = function() {
            clearTimeout(this.sto);
            clearTimeout(this.sto2)
        };
        u.activateTitleWithIndex = function(a) {
            this.titleElements.forEach(function(b, c) {
                if (c !== a) {
                    b.classList.remove("active")
                }
            });
            this.sto2 = y.setTimeout(function() {
                this.titleElements[a].classList.add("active")
            }.bind(this), this.duration)
        };
        u.activate = function() {
            this.el.classList.add("active")
        };
        u.destroy = function() {
            this.stopAnimation();
            var a;
            for (a in this) {
                if (this.hasOwnProperty(a)) {
                    this[a] = null
                }
            }
        };
        A.exports = D
    }, {
        "../../_shared/TimeoutRegistry": 1223,
        "ac-clip": 22,
        "ac-dom-metrics": 90,
        "ac-dom-styles/setStyle": 132,
        "ac-dom-traversal/querySelector": 147,
        "ac-dom-traversal/querySelectorAll": 148,
        "ac-event-emitter": 202,
        "ac-object": 713,
        "ac-viewport": "ac-viewport"
    }],
    1258: [function(u, w, r) {
        u("ac-polyfills/Object/create");
        var t = u("../_shared/BasePage");
        var m = t.prototype;
        var n = u("ac-films").create;
        var x = u("ac-dom-traversal/querySelectorAll");
        var q = u("ac-dom-traversal/querySelector");
        var o = u("../_shared/ShareSheetObject");

        function v() {
            this.name = "GuidedToursPage";
            t.call(this);
            var b = function() {
                var d = x(".share-wrapper");
                d.forEach(function(f) {
                    var g = new o(f)
                })
            };
            if (x(".sharesheet").length > 0) {
                b()
            }
            var c = x(".ac-video");
            var a = n(c, {
                modal: true
            })
        }
        var p = v.prototype = Object.create(t.prototype);
        v.prototype.constructor = v;
        w.exports = v
    }, {
        "../_shared/BasePage": 1212,
        "../_shared/ShareSheetObject": 1222,
        "ac-dom-traversal/querySelector": 147,
        "ac-dom-traversal/querySelectorAll": 148,
        "ac-films": 539,
        "ac-polyfills/Object/create": 729
    }],
    1259: [function(D, G, z) {
        var B = D("../_shared/model/DataAttributes");
        var r = D("../_shared/model/PageMap");
        var A = D("../_shared/model/FeatureDetectionMap");
        var x = D("../_shared/model/TransitionType");
        var u = D("../../../../node_modules/ac-toolkit/src/json/exports.json");
        var C = D("ac-viewport").Viewport;
        var t = D("ac-window-delegate").WindowDelegate;
        var w = D("../_shared/PageJumper/PageJumper");
        var E = D("../_shared/utils/stats.js");
        var F = D("../_shared/_shared_init");
        var y = D("ac-dom-traversal/querySelector");
        var H = D("ac-dom-traversal/querySelectorAll");
        var v = (function() {
            return {
                initialize: function() {
                    this.initFeatureOverrides();
                    this.initBreakpointDelegate();
                    this.initWebGL();
                    this.initWindowDelegateFix();
                    window.addEventListener("DOMContentLoaded", this.instantiatePageController.bind(this), false)
                },
                initBreakpointDelegate: function() {
                    C.setBreakpoints(u.viewports)
                },
                initFeatureOverrides: function() {},
                instantiatePageController: function(a) {
                    var d = y("main[" + B.PAGE_TYPE + "]");
                    if (d === null) {
                        throw "No valid <main> tag found with correct page type attribute"
                    }
                    var f = d.getAttribute(B.PAGE_TYPE);
                    if (!r.hasOwnProperty(f)) {
                        throw "Failed to init no page type called '" + f + "' found"
                    }
                    if (A.PAGE_JUMP) {
                        var b = f;
                        var c = f.replace(/-/g, "");
                        this.entryState = {
                            name: c,
                            url: b
                        };
                        window.addEventListener("popstate", this.handlePopState.bind(this), false)
                    }
                    new r[f]()
                },
                handlePopState: function(a) {
                    var b = a.state;
                    if (!b || !b.name || !b.url) {
                        b = this.entryState
                    }
                    var c = document.getElementsByClassName("main")[0].getAttribute("data-page-type");
                    if (c == b.name) {
                        return
                    }
                    if (b.name == "overview") {
                        window.location.pathname = w.sharedInstance().siteRoot;
                        return
                    }
                    w.sharedInstance().performJump({
                        url: b.url,
                        name: b.name,
                        transitionType: x.FROM_LOCAL_NAV
                    })
                },
                initWebGL: function() {
                    if (A.WEB_GL) {
                        var c = document.querySelector("[data-three-location]");
                        var a = document.createElement("script");
                        a.src = c.getAttribute("data-three-location");
                        document.body.appendChild(a);
                        var b = setInterval(function() {
                            if (!!window.THREE) {
                                clearInterval(b)
                            }
                        }.bind(this), 200)
                    }
                },
                initStats: function() {
                    var a = new E();
                    a.setMode(0);
                    a.domElement.style.position = "fixed";
                    a.domElement.style.left = "0px";
                    a.domElement.style.bottom = "0px";
                    a.domElement.style.zIndex = 99;
                    document.body.appendChild(a.domElement);
                    a.begin();
                    requestAnimationFrame(function b() {
                        a.end();
                        a.begin();
                        requestAnimationFrame(b)
                    })
                },
                initWindowDelegateFix: function() {
                    t.on("scroll resize orientationchange", function() {})
                }
            }
        }());
        G.exports = v.initialize()
    }, {
        "../../../../node_modules/ac-toolkit/src/json/exports.json": 833,
        "../_shared/PageJumper/PageJumper": 1216,
        "../_shared/_shared_init": 1224,
        "../_shared/model/DataAttributes": 1231,
        "../_shared/model/FeatureDetectionMap": 1232,
        "../_shared/model/PageMap": 1233,
        "../_shared/model/TransitionType": 1235,
        "../_shared/utils/stats.js": 1245,
        "ac-dom-traversal/querySelector": 147,
        "ac-dom-traversal/querySelectorAll": 148,
        "ac-viewport": "ac-viewport",
        "ac-window-delegate": 1191
    }],
    1260: [function(o, n, j) {
        o("ac-polyfills/Object/create");
        var k = o("../_shared/BasePage");
        var l = k.prototype;

        function i() {
            this.name = "MembershipPage";
            k.call(this)
        }
        var m = i.prototype = Object.create(k.prototype);
        i.prototype.constructor = i;
        n.exports = i
    }, {
        "../_shared/BasePage": 1212,
        "ac-polyfills/Object/create": 729
    }],
    1261: [function(o, n, i) {
        o("ac-polyfills/Object/create");
        var k = o("ac-dom-metrics"),
            l = o("ac-dom-traversal/querySelector");

        function j(b, a, c) {
            this.element = b;
            this.canvas = l("canvas", this.element);
            this._ctx = this.canvas.getContext("2d");
            this._video = l("video", this.element);
            this._video.pause();
            this.videoMetaDataHasLoaded = false;
            this._videoWidth = 0;
            this._videoHeight = 0;
            this._blurScale = 1;
            this._boundFunctions = {
                _onVideoMetaDataLoaded: this.onVideoMetaDataLoaded.bind(this)
            };
            this.updateCanvasDimensions(a, c);
            this._getVideoMetaData()
        }
        var m = j.prototype = {};
        j.prototype.constructor = j;
        m.destroy = function() {
            if (this._video) {
                this._video.removeEventListener("loadeddata", this._boundFunctions._onVideoMetaDataLoaded);
                this._video = null
            }
            this.canvas = null;
            this._ctx = null
        };
        m._getVideoMetaData = function() {
            if (this._video.readyState >= 1) {
                this.onVideoMetaDataLoaded(null)
            } else {
                this._video.addEventListener("loadeddata", this._boundFunctions._onVideoMetaDataLoaded, false)
            }
        };
        m.onVideoMetaDataLoaded = function(a) {
            this._videoWidth = this._video.videoWidth;
            this._videoHeight = this._video.videoHeight;
            this.videoMetaDataHasLoaded = true;
            this._video.parentNode.removeChild(this._video)
        };
        m.play = function() {
            this._video.play()
        };
        m.pause = function() {
            this._video.pause()
        };
        m.draw = function(d, a) {
            if (!this.videoMetaDataHasLoaded) {
                return
            }
            var h = this._video;
            var g = Math.max(d / this._videoWidth, a / this._videoHeight);
            var b = this._videoWidth * g,
                q = this._videoHeight * g,
                c = (b - d) * -0.5,
                f = (q - a) * -0.5;
            this._ctx.drawImage(h, Math.round(c), Math.round(f), Math.round(b), Math.round(q))
        };
        m.updateCanvasDimensions = function(b, d) {
            this._ctx.canvas.style.width = (b * this._blurScale) + "px";
            this._ctx.canvas.style.height = (d * this._blurScale) + "px";
            var c = false;
            var a = (c) ? 2 : 1;
            this._ctx.canvas.width = b * a * this._blurScale;
            this._ctx.canvas.height = d * a * this._blurScale
        };
        n.exports = j
    }, {
        "ac-dom-metrics": 90,
        "ac-dom-traversal/querySelector": 147,
        "ac-polyfills/Object/create": 729
    }],
    1262: [function(y, z, u) {
        y("ac-polyfills/Object/create");
        y("ac-polyfills/Element/prototype.classList");
        var A = y("../_shared/utils/browserPrefixed"),
            t = y("ac-dom-traversal").querySelector;
        var r = y("../_shared/model/TransitionType"),
            p = y("../_shared/PageJumper/PageJumper"),
            v = y("../_shared/model/FeatureDetectionMap"),
            B = y("./section/OverviewSection");
        var w = y("../_shared/BasePage"),
            o = w.prototype;

        function x() {
            this.name = "OverviewPage";
            w.call(this);
            this._scrollTimeout = -1;
            if (v.CSS_FILTER) {
                document.querySelector("main").classList.add("css-filter")
            }
        }
        var q = x.prototype = Object.create(w.prototype);
        x.prototype.constructor = x;
        q.setupEventBindings = function() {
            o.setupEventBindings.call(this);
            this._boundFunctions.onShouldOpenSection = this._onShouldOpenSection.bind(this);
            this._boundFunctions.onMouseWheel = this._onMouseWheel.bind(this);
            document.addEventListener("mousewheel", this._boundFunctions.onMouseWheel, false);
            document.addEventListener("wheel", this._boundFunctions.onMouseWheel, false)
        };
        q.teardownEvents = function() {
            o.teardownEvents.call(this);
            for (var a = 0, b = this._sections.length; a < b; a++) {
                this._sections[a].off(B.SHOULD_OPEN, this._boundFunctions.onShouldOpenSection)
            }
            document.removeEventListener("mousewheel", this._boundFunctions.onMouseWheel);
            document.removeEventListener("wheel", this._boundFunctions.onMouseWheel);
            clearTimeout(this._scrollTimeout)
        };
        q.setupSections = function() {
            o.setupSections.call(this);
            for (var b = 0, c = this._sections.length; b < c; b++) {
                var a = this._sections[b];
                a.on(B.SHOULD_OPEN, this._boundFunctions.onShouldOpenSection)
            }
        };
        q._onMouseWheel = function(a) {
            if (this._scrollClip != null) {
                clearTimeout(this._scrollTimeout);
                this._scrollClip.destroy();
                this._scrollClip = null
            }
        };
        q._onShouldOpenSection = function(a) {
            window.requestAnimationFrame(function() {
                p.sharedInstance().performJump({
                    url: a.getURL(),
                    name: a.getName(),
                    transitionType: r.FROM_OVERVIEW_SECTION
                })
            })
        };
        z.exports = x
    }, {
        "../_shared/BasePage": 1212,
        "../_shared/PageJumper/PageJumper": 1216,
        "../_shared/model/FeatureDetectionMap": 1232,
        "../_shared/model/TransitionType": 1235,
        "../_shared/utils/browserPrefixed": 1243,
        "./section/OverviewSection": 1272,
        "ac-dom-traversal": 138,
        "ac-polyfills/Element/prototype.classList": 727,
        "ac-polyfills/Object/create": 729
    }],
    1263: [function(n, m, j) {
        var o = n("ac-eclipse").Clip;
        var k = n("../_shared/TimeoutRegistry");

        function i(a) {
            this.name = "ScreenSlideshow";
            this._slideEls = a;
            this._currentSlide = 0;
            this._previousSlide = -1;
            this._totalSlides = this._slideEls.length;
            this._msTransition = 750;
            this._msInterval = 5000;
            this._msInitialInterval = 8000;
            this._sto = 0;
            this._clipShow = null;
            this._setupSlides()
        }
        var l = i.prototype = {};
        i.prototype.constructor = i;
        l.destroy = function() {
            this.deactivate();
            if (this._clipHide && this._clipHide !== null) {
                this._clipHide.destroy()
            }
            if (this._clipShow && this._clipShow !== null) {
                this._clipShow.destroy()
            }
        };
        l.activate = function() {
            this._sto = k.setTimeout(this._changeSlide.bind(this), this._msInterval)
        };
        l.deactivate = function() {
            clearTimeout(this._sto)
        };
        l._setupSlides = function() {
            for (var a = 0; a < this._slideEls.length; a++) {
                this._slideEls[a].style.display = (a === this._currentSlide) ? "block" : "none";
                this._slideEls[a].style.zIndex = (a === this._currentSlide) ? 2 : 2
            }
        };
        l._changeSlide = function() {
            this._previousSlide = this._currentSlide;
            this._currentSlide++;
            if (this._currentSlide >= this._totalSlides) {
                this._currentSlide = 0
            }
            this._hidePreviousSlide();
            this._showCurrentSlide();
            clearTimeout(this._sto);
            var a = (this._currentSlide === (this._totalSlides - 1)) ? this._msInitialInterval : this._msInterval;
            this._sto = k.setTimeout(this._changeSlide.bind(this), a)
        };
        l._hidePreviousSlide = function() {
            var a = this._slideEls[this._previousSlide];
            a.style.zIndex = 1;
            this._clipHide = new o(a, this._msTransition / 1000, {
                opacity: 0
            }, {
                destroyOnComplete: true,
                onComplete: function() {
                    this._slideEls[this._previousSlide].style.display = "none"
                }.bind(this)
            }).play()
        };
        l._showCurrentSlide = function() {
            var a = this._slideEls[this._currentSlide];
            a.style.zIndex = 2;
            a.style.opacity = 0;
            a.style.display = "block";
            this._clipShow = new o(a, this._msTransition / 1000, {
                opacity: 1
            }, {
                destroyOnComplete: true,
                onComplete: function() {
                    this._slideEls[this._currentSlide].style.opacity = 1
                }.bind(this)
            }).play()
        };
        m.exports = i
    }, {
        "../_shared/TimeoutRegistry": 1223,
        "ac-eclipse": 179
    }],
    1264: [function(E, F, B) {
        var G = E("ac-dom-metrics"),
            C = E("ac-object");
        var v = E("../../_shared/section/BaseSection"),
            t = v.prototype;
        var u = E("ac-viewport").Viewport,
            y = E("ac-dom-traversal").querySelector,
            J = E("ac-clock").Clock,
            w = E("ac-dom-styles").setStyle,
            H = E("ac-scroll-time-update").ElementScrollTimeUpdate;
        var D = ".image-headphones";
        var z = {
            xlarge: -80,
            large: -80,
            medium: -70,
            small: 0
        };
        var I = {
            xlarge: (z.large / 2) + 8,
            large: (z.large / 2) + 8,
            medium: (z.medium / 2) + 12,
            small: 0
        };

        function A(a, b, c) {
            this.name = "OverviewBeatsSection";
            v.call(this, a, b, c);
            this.imageTarget = y(D, a);
            this._clock = new J();
            this.scrollTimeUpdate = new H(a, {
                startInView: true,
                smooth: true,
                clock: this._clock
            });
            this.scrollTimeUpdate.on("draw", this._onAnimationDraw, this);
            this.scrollTimeUpdate.start()
        }
        var x = A.prototype = C.create(t);
        x.destroy = function() {
            this.scrollTimeUpdate.destroy();
            this._clock.destroy();
            this.imageTarget = null;
            t.destroy.call(this)
        };
        x._onAnimationDraw = function(b) {
            var d = this._getBreakpointName(),
                c = I[d],
                a = z[d];
            w(this.imageTarget, {
                transform: {
                    translateY: c - (b.time * a) + "px",
                    translateZ: 0
                }
            })
        };
        x._initializeStyles = function() {
            var b = this._getBreakpointName(),
                a = I[b];
            w(this.imageTarget, {
                transform: {
                    translateY: a + "px",
                    translateZ: 0
                }
            })
        };
        x._getBreakpointName = function() {
            return u.getBreakpoint().name || "large"
        };
        F.exports = A
    }, {
        "../../_shared/section/BaseSection": 1236,
        "ac-clock": 26,
        "ac-dom-metrics": 90,
        "ac-dom-styles": 120,
        "ac-dom-traversal": 138,
        "ac-object": 713,
        "ac-scroll-time-update": 790,
        "ac-viewport": "ac-viewport"
    }],
    1265: [function(B, C, x) {
        B("ac-polyfills/Object/create");
        var D = B("ac-dom-metrics"),
            E = B("../../_shared/utils/browserPrefixed");
        var u = B("ac-eclipse").Clip,
            y = B("../../_shared/model/FeatureDetectionMap"),
            v = B("../../_shared/ClipRegistry"),
            A = B("../../_shared/TimeoutRegistry");
        var t = B("./../CanvasBackgroundVideo"),
            q = B("./../../_shared/AspectFillVideo"),
            F = B("./OverviewSection"),
            r = F.prototype;

        function z(a, b, c) {
            this.name = "OverviewConnectSection";
            F.call(this, a, b, c);
            this._aspectFillVideo = new q(this.element, this.trackedElement.width, this.trackedElement.height);
            this.blurAmount = 0;
            this.blurTarget = 64;
            this.scaleAmount = 1;
            this.scaleTarget = 1.1;
            this.parallaxAmount = 0;
            this.scrollWait = 0;
            if (this.isHandheld) {
                this._setupHandheld()
            }
        }
        var w = z.prototype = Object.create(F.prototype);
        z.prototype.constructor = z;
        w.destroy = function() {
            r.destroy.call(this);
            this._aspectFillVideo.destroy();
            this._aspectFillVideo = null
        };
        w.activate = function() {
            r.activate.call(this);
            this._aspectFillVideo.activate();
            this._aspectFillVideo.play()
        };
        w.deactivate = function() {
            r.deactivate.call(this);
            this._aspectFillVideo.pause()
        };
        w._setupHandheld = function() {};
        w.animateIn = function() {
            if (this.isHandheld) {
                return
            }
            v.add(new u({
                blurAmount: this.blurAmount,
                scaleAmount: this.scaleAmount,
                opacity: 1,
                noFilterOpacity: 1
            }, 1.2, {
                blurAmount: this.blurTarget,
                scaleAmount: this.scaleTarget,
                opacity: 0.25,
                noFilterOpacity: 0.1
            }, {
                delay: 2.3,
                ease: "easeInOutQuad",
                onDraw: function(a) {
                    this.blurAmount = a.target.blurAmount;
                    this.scaleAmount = a.target.scaleAmount;
                    if (y.CSS_FILTER) {
                        this._sectionBleedEl.style[E.filter] = "blur( " + this.blurAmount + "px )"
                    } else {
                        this._sectionBleedEl.style.opacity = a.target.noFilterOpacity
                    }
                    if (y.POSITION_FIXED) {
                        this._sectionBleedEl.style[E.transform] = "translate3d( 0, " + this.parallaxAmount + "px, 0 ) scale3d( " + this.scaleAmount + ", " + this.scaleAmount + ", " + this.scaleAmount + " )"
                    }
                }.bind(this)
            }).play());
            A.setTimeout(this._animateInContentPosition.bind(this), 3.5 * 1000)
        };
        w.onRequestAnimationFrame = function() {
            r.onRequestAnimationFrame.call(this);
            this.scrollWait--;
            if (this.scrollWait == 0) {
                this._aspectFillVideo.play()
            }
        };
        w.onScroll = function(a, b, c) {
            r.onScroll.call(this, a, b, c);
            this.scrollWait = 2;
            this._aspectFillVideo.pause()
        };
        w.onResize = function(a, b, c) {
            r.onResize.call(this, a, b, c);
            this._aspectFillVideo.updateVideoDimensions(this.trackedElement.width, this.trackedElement.height)
        };
        w.onViewWillAppear = function(a, b) {
            r.onViewWillAppear.call(this, a, b)
        };
        w.onViewWillDisappear = function(a, b) {
            r.onViewWillDisappear.call(this, a, b)
        };
        C.exports = z
    }, {
        "../../_shared/ClipRegistry": 1213,
        "../../_shared/TimeoutRegistry": 1223,
        "../../_shared/model/FeatureDetectionMap": 1232,
        "../../_shared/utils/browserPrefixed": 1243,
        "./../../_shared/AspectFillVideo": 1211,
        "./../CanvasBackgroundVideo": 1261,
        "./OverviewSection": 1272,
        "ac-dom-metrics": 90,
        "ac-eclipse": 179,
        "ac-polyfills/Object/create": 729
    }],
    1266: [function(C, E, y) {
        C("ac-polyfills/Object/create");
        var w = C("ac-dom-traversal/querySelector"),
            G = C("../../_shared/utils/browserPrefixed");
        var t = C("ac-eclipse").Clip;
        var x = C("../../_shared/utils/math-utils"),
            D = C("../../_shared/circlepacker/CirclePacker"),
            H = C("./OverviewSection"),
            F = C("../ScreenSlideshow"),
            z = C("../../_shared/model/FeatureDetectionMap"),
            u = C("../../_shared/ClipRegistry"),
            A = C("../../_shared/TimeoutRegistry");
        var r = H.prototype;

        function B(a, b, c) {
            this.name = "OverviewForYouSection";
            H.call(this, a, b, c);
            this._circlePackerArea = {
                width: this.trackedElement.width,
                height: this.trackedElement.height
            };
            this._circlePacker = null;
            this.blurAmount = 0;
            this.blurTarget = 16;
            this.scaleAmount = 1;
            this.scaleTarget = 1.1;
            this.parallaxAmount = 0;
            this._sto = -1;
            this._slideshow = new F(this._hardwareScreenEls);
            if (this.isHandheld) {
                this._setupHandheld()
            }
            this._setupCirclePacker();
            this._setCirclePackerCenterPoint()
        }
        var v = B.prototype = Object.create(H.prototype);
        B.prototype.constructor = B;
        v.destroy = function() {
            r.destroy.call(this);
            this._slideshow.destroy();
            this._slideshow = null;
            this._circlePacker.destroy();
            this._circlePackerArea = null
        };
        v._setupCirclePacker = function() {
            var a = w(".section-bleed", this.element);
            if (this.isViewportSmall) {}
            this._circlePacker = new D(a, this, this.trackedElement.width, (this.isHandheld) ? window.innerHeight : this.trackedElement.height, "large");
            if (this.isHandheld || this.isViewportSmall) {
                var b = {
                    h: 344,
                    s: 57.5,
                    l: 84.3
                };
                this._circlePacker.backgroundColor = "hsl(" + b.h + ", " + b.s + "%, " + b.l + "%)";
                this._sectionBgEl.style.opacity = 0.3
            }
        };
        v.animateIn = function() {
            this._circlePacker.animateIn();
            if (this.isHandheld) {
                this._slideshow.activate();
                return
            }
            if (!this.isViewportSmall) {
                u.add(new t({
                    h: 360,
                    s: 100,
                    l: 100
                }, 3.5, {
                    h: 344,
                    s: 57.5,
                    l: 84.3
                }, {
                    delay: 2,
                    ease: "easeInOutQuad",
                    onDraw: function(a) {
                        this._circlePacker.backgroundColor = "hsl(" + a.target.h + ", " + a.target.s + "%, " + a.target.l + "%)"
                    }.bind(this)
                }).play())
            }
            if (z.CSS_FILTER) {
                u.add(new t({
                    blurAmount: this.blurAmount,
                    scaleAmount: this.scaleAmount,
                    bgOpacity: 1
                }, 1.2, {
                    blurAmount: this.blurTarget,
                    scaleAmount: this.scaleTarget,
                    bgOpacity: 0.3
                }, {
                    delay: 2.3,
                    ease: "easeInOutQuad",
                    onDraw: function(a) {
                        this.blurAmount = a.target.blurAmount;
                        this.scaleAmount = a.target.scaleAmount;
                        this._sectionBleedEl.style[G.filter] = "blur( " + this.blurAmount + "px )";
                        this._sectionBleedEl.style[G.transform] = "translate3d( 0, " + this.parallaxAmount + "px, 0 ) scale3d( " + this.scaleAmount + ", " + this.scaleAmount + ", " + this.scaleAmount + " )";
                        this._sectionBgEl.style.opacity = a.target.bgOpacity
                    }.bind(this)
                }).play())
            } else {
                u.add(new t({
                    bgOpacity: 1
                }, 1.2, {
                    bgOpacity: 0.04
                }, {
                    delay: 2.3,
                    ease: "easeInOutQuad",
                    onDraw: function(a) {
                        this._sectionBgEl.style.opacity = a.target.bgOpacity
                    }.bind(this)
                }).play())
            }
            A.setTimeout(this._animateInContentPosition.bind(this), 3.5 * 1000)
        };
        v._animateInContentPosition = function() {
            r._animateInContentPosition.call(this);
            this._slideshow.activate()
        };
        v.onViewWillAppear = function(a, b) {
            r.onViewWillAppear.call(this, a, b);
            this._circlePacker.update()
        };
        v.onRequestAnimationFrame = function() {
            r.onRequestAnimationFrame.call(this);
            this._circlePacker.update()
        };
        v.activate = function() {
            r.activate.call(this);
            if (this.isContentVisible) {
                this._slideshow.activate()
            }
        };
        v.deactivate = function() {
            r.deactivate.call(this);
            this._slideshow.deactivate()
        };
        v.onResize = function(a, b, c) {
            r.onResize.call(this, a, b, c);
            this._circlePackerArea = {
                width: this.element.clientWidth,
                height: this.element.clientHeight
            };
            this._setCirclePackerCenterPoint();
            this._circlePacker.onResize(a)
        };
        v.getNextCirclePackerSpawnPoint = function(b) {
            var c = Math.random() < 0.5 ? x.randRange(-b.radius * 4, -b.radius * 5) : x.randRange(this._circlePackerArea.width + b.radius * 4, this._circlePackerArea.width + b.radius * 5);
            var a = x.randRange(this._circlePackerArea.height * 0.3, this._circlePackerArea.height * 0.6);
            return {
                x: c,
                y: a
            }
        };
        v.getAttractionPoint = function(a) {
            return this._circlePacker._attractionPoint
        };
        v._setCirclePackerCenterPoint = function() {
            var b = this.element.clientWidth;
            var c = this.element.clientHeight;
            var a = z.IS_DESKTOP ? c * 0.1 : c * 0.2;
            this._circlePacker.setCenter(b / 2, c / 2 - a)
        };
        E.exports = B
    }, {
        "../../_shared/ClipRegistry": 1213,
        "../../_shared/TimeoutRegistry": 1223,
        "../../_shared/circlepacker/CirclePacker": 1226,
        "../../_shared/model/FeatureDetectionMap": 1232,
        "../../_shared/utils/browserPrefixed": 1243,
        "../../_shared/utils/math-utils": 1244,
        "../ScreenSlideshow": 1263,
        "./OverviewSection": 1272,
        "ac-dom-traversal/querySelector": 147,
        "ac-eclipse": 179,
        "ac-polyfills/Object/create": 729
    }],
    1267: [function(x, y, u) {
        x("ac-polyfills/Object/create");
        var z = x("ac-dom-metrics"),
            t = x("ac-dom-traversal/querySelector"),
            A = x("../../_shared/utils/browserPrefixed");
        var B = x("./OverviewSection"),
            q = x("../../_shared/ClipRegistry"),
            w = x("../../_shared/TimeoutRegistry"),
            v = x("../../_shared/model/FeatureDetectionMap"),
            o = B.prototype;

        function p(a, b, c) {
            this.name = "OverviewGuidedToursSection";
            B.call(this, a, b, c);
            this.blurAmount = 0;
            this.blurTarget = 12;
            this.scaleAmount = 1;
            this.scaleTarget = 1.1;
            this.parallaxAmount = 0;
            this.scrollWait = 0;
            if (this.isHandheld) {
                this._setupHandheld()
            }
        }
        var r = p.prototype = Object.create(B.prototype);
        p.prototype.constructor = p;
        r.destroy = function() {
            o.destroy.call(this)
        };
        r.activate = function() {
            var a = !this._hasAnimatedIn;
            o.activate.call(this)
        };
        r.animateIn = function() {
            this._animateInContentPosition()
        };
        r.deactivate = function() {
            o.deactivate.call(this)
        };
        r.onRequestAnimationFrame = function() {
            o.onRequestAnimationFrame.call(this)
        };
        r.onScroll = function(a, b, c) {
            o.onScroll.call(this, a, b, c)
        };
        r.onResize = function(a, b, c) {
            o.onResize.call(this, a, b, c)
        };
        r.onViewWillAppear = function(a, b) {
            o.onViewWillAppear.call(this, a, b)
        };
        r.onViewWillDisappear = function(a, b) {
            o.onViewWillDisappear.call(this, a, b)
        };
        y.exports = p
    }, {
        "../../_shared/ClipRegistry": 1213,
        "../../_shared/TimeoutRegistry": 1223,
        "../../_shared/model/FeatureDetectionMap": 1232,
        "../../_shared/utils/browserPrefixed": 1243,
        "./OverviewSection": 1272,
        "ac-dom-metrics": 90,
        "ac-dom-traversal/querySelector": 147,
        "ac-polyfills/Object/create": 729
    }],
    1268: [function(D, E, z) {
        D("ac-polyfills/Object/create");
        var F = D("ac-dom-metrics"),
            y = D("ac-dom-traversal/querySelector"),
            G = D("../../_shared/utils/browserPrefixed");
        var w = D("ac-eclipse").Clip;
        var u = D("./../CanvasBackgroundVideo"),
            r = D("./../../_shared/AspectFillVideo"),
            A = D("../../_shared/model/FeatureDetectionMap"),
            C = D("../../_shared/TimeoutRegistry"),
            H = D("./OverviewSection"),
            B = D("../../_shared/utils/math-utils"),
            t = H.prototype;

        function v(a, b, c) {
            this.name = "OverviewHeroSection";
            H.call(this, a, b, c);
            this._globalNavEl = document.querySelector("#globalheader, #ac-globalnav");
            this._localNavEl = document.querySelector(".localnav-wrapper, #ac-localnav");
            this._contentHeadlineEl = this.element.querySelector(".hero-headline .section-content");
            this._logoEl = this._contentHeadlineEl.querySelector("h1");
            this._claimEl = this._contentHeadlineEl.querySelector("h2");
            this._buttonsEl = this._contentHeadlineEl.querySelector("p");
            this._bgBlurEl = null;
            this._heroIntroEl = this.element.querySelector(".hero-intro");
            this._contentIntroEl = this.element.querySelector(".hero-intro .section-content");
            this._headlineEl = this._contentIntroEl.querySelector(".intro-headline");
            this._copyEl = this._contentIntroEl.querySelector(".intro-copy");
            this._iconsEls = this._contentIntroEl.querySelectorAll(".intro-buckets figure");
            this._eyebrowEls = this._contentIntroEl.querySelectorAll(".intro-buckets .eyebrow");
            this._arrowEl = this.element.querySelector(".icon-paddledown");
            this._aspectFillVideo = new r(this.element, this.trackedElement.width, this.trackedElement.height * 0.5);
            this._hasVideoLoadingImage = true;
            this._videoFadeClip = null;
            this._setupVideoFade();
            this.blurAmount = 0.001;
            this.blurTarget = 20;
            this.scaleAmount = 1;
            this.scaleTarget = (this.isHandheld) ? 1 : 1.15;
            this.parallaxAmount = 0;
            this._animationClips = [];
            this._setupInitalAnimation();
            if (this.isHandheld) {
                this._setupHandheldBackground()
            }
            this._boundFunctions._onVideoLoaded = this.onVideoLoaded.bind(this);
            this._boundFunctions._onVideoEnded = this.onVideoEnded.bind(this)
        }
        var x = v.prototype = Object.create(H.prototype);
        v.prototype.constructor = v;
        x.destroy = function() {
            for (var a = 0; a < this._animationClips.length; a++) {
                this._animationClips[a].destroy()
            }
            this._animationClips = null;
            this._arrowClip.destroy();
            this._arrowClip = null;
            if (this._videoFadeClip !== null) {
                this._videoFadeClip.destroy()
            }
            this._videoFadeClip = null;
            this._globalNavEl = null;
            this._localNavEl = null;
            this._contentHeadlineEl = null;
            this._logoEl = null;
            this._claimEl = null;
            this._buttonsEl = null;
            this._bgBlurEl = null;
            this._heroIntroEl = null;
            this._contentIntroEl = null;
            this._headlineEl = null;
            this._copyEl = null;
            this._iconsEls = null;
            this._eyebrowEls = null;
            this._arrowEl = null;
            if (this._aspectFillVideo.hasVideo) {
                this._aspectFillVideo.off("loadeddata", this._boundFunctions._onVideoLoaded);
                this._aspectFillVideo.off("ended", this._boundFunctions._onVideoEnded)
            }
            this._aspectFillVideo.destroy();
            this._aspectFillVideo = null;
            t.destroy.call(this)
        };
        x.activate = function() {
            t.activate.call(this);
            if (this._aspectFillVideo.hasVideo) {
                this._aspectFillVideo.play();
                this._aspectFillVideo.once("ended", this._boundFunctions._onVideoEnded);
                if (this._aspectFillVideo.videoMetaDataHasLoaded) {
                    this.onVideoLoaded()
                } else {
                    this._aspectFillVideo.on("loadeddata", this._boundFunctions._onVideoLoaded)
                }
            }
        };
        x._setupVideoFade = function() {
            if (!A.IS_DESKTOP) {
                this._hasVideoLoadingImage = false;
                var a = y(".video-fade", this.element);
                a.parentNode.removeChild(a)
            }
        };
        x.onVideoLoaded = function() {
            this._hasVideoLoadingImage = false;
            if (this._videoFadeClip !== null) {
                this._videoFadeClip.destroy()
            }
            this._videoFadeClip = null;
            this._videoFadeClip = new w(y(".video-fade", this.element), 1, {
                opacity: 0
            }, {
                ease: "easeOutCubic",
                delay: 0.75,
                destroyOnComplete: true
            }).play()
        };
        x.onVideoEnded = function() {
            if (this._videoFadeClip !== null) {
                this._videoFadeClip.destroy()
            }
            this._videoFadeClip = null;
            this._videoFadeClip = new w(y(".video-fade", this.element), 1, {
                opacity: 1
            }, {
                ease: "easeOutCubic",
                delay: 0,
                destroyOnComplete: true
            }).play()
        };
        x.deactivate = function() {
            t.deactivate.call(this);
            if (this._aspectFillVideo.hasVideo) {
                this._aspectFillVideo.pause();
                this._aspectFillVideo.off("ended", this._boundFunctions._onVideoEnded)
            }
        };
        x.onRequestAnimationFrame = function() {
            t.onRequestAnimationFrame.call(this)
        };
        x.onResize = function(a, b, c) {
            t.onResize.call(this, a, b, c);
            if (this._aspectFillVideo.hasVideo) {
                this._aspectFillVideo.updateVideoDimensions(this.trackedElement.width, this.trackedElement.height * 0.5)
            }
        };
        x.onViewWillAppear = function(a, b) {
            t.onViewWillAppear.call(this, a, b);
            if (this.isHandheld) {
                this._sectionBgEl.classList.add("handheld-fixed");
                this._sectionBleedEl.classList.add("handheld-fixed")
            }
        };
        x.onViewWillDisappear = function(a, b) {
            t.onViewWillDisappear.call(this, a, b);
            if (this.isHandheld) {
                this._sectionBgEl.classList.remove("handheld-fixed");
                this._sectionBleedEl.classList.remove("handheld-fixed")
            }
        };
        x._setupInitialContentPositionSmall = function() {
            t._setupInitialContentPositionSmall.call(this);
            if (this._headlineEl) {
                this._headlineEl.style[G.transform] = "translate3d( 0, 0, 0 )";
                this._headlineEl.style.opacity = 1
            }
            if (this._copyEl) {
                this._copyEl.style[G.transform] = "translate3d( 0, 0, 0 )";
                this._copyEl.style.opacity = 1
            }
            for (var a = 0; a < this._iconsEls.length; a++) {
                this._iconsEls[a].style[G.transform] = "translate3d( 0, 0, 0 )";
                this._iconsEls[a].style.opacity = 1;
                this._eyebrowEls[a].style[G.transform] = "translate3d( 0, 0, 0 )";
                this._eyebrowEls[a].style.opacity = 1
            }
        };
        x._setupFixedVisibility = function() {
            t._setupFixedVisibility.call(this);
            C.setTimeout((function() {
                if (this.isHandheld || this.isViewportSmall) {
                    this._sectionFgEl.classList.remove("large-fixed");
                    this._heroIntroEl.classList.remove("is-absolute")
                } else {
                    this._sectionFgEl.classList.remove("large-fixed");
                    this._heroIntroEl.classList.add("is-absolute")
                }
            }).bind(this), 10)
        };
        x._setupInitalAnimation = function() {
            var a;
            if (!this.isHandheld && (window.pageYOffset === 0)) {
                this._globalNavEl.style[G.transform] = "translate3d(0,0,0)";
                a = new w(this._globalNavEl, 3, {
                    opacity: 0.999999
                }, {
                    ease: "easeInOutSine",
                    delay: 1.5,
                    destroyOnComplete: true,
                    propsFrom: {
                        opacity: 0.000001
                    }
                });
                a.setProgress(0);
                a.play();
                this._animationClips.push(a);
                this._localNavEl.style[G.transform] = "translate3d(0,0,0)";
                a = new w(this._localNavEl, 3, {
                    opacity: 0.999999
                }, {
                    ease: "easeInOutSine",
                    delay: 1.5,
                    destroyOnComplete: true,
                    propsFrom: {
                        opacity: 0.000001
                    }
                });
                a.setProgress(0);
                a.play();
                this._animationClips.push(a)
            }
            if (this._logoEl) {
                a = new w(this._logoEl, 3, {
                    opacity: 1,
                    transform: {
                        translateY: "0px"
                    }
                }, {
                    ease: "easeInOutSine",
                    delay: 0,
                    destroyOnComplete: true,
                    propsFrom: {
                        opacity: 0,
                        transform: {
                            translateY: "20px"
                        }
                    }
                });
                a.setProgress(0);
                a.play();
                this._animationClips.push(a)
            }
            if (this._claimEl) {
                a = new w(this._claimEl, 3, {
                    opacity: 1,
                    transform: {
                        translateY: "0px"
                    }
                }, {
                    ease: "easeInOutSine",
                    delay: 1.5,
                    destroyOnComplete: true,
                    propsFrom: {
                        opacity: 0,
                        transform: {
                            translateY: "30px"
                        }
                    }
                });
                a.setProgress(0);
                a.play();
                this._animationClips.push(a)
            }
            if (this._buttonsEl) {
                a = new w(this._buttonsEl, 3, {
                    opacity: 1,
                    transform: {
                        translateY: "0px"
                    }
                }, {
                    ease: "easeInOutSine",
                    delay: 1.5,
                    destroyOnComplete: true,
                    propsFrom: {
                        opacity: 0,
                        transform: {
                            translateY: "40px"
                        }
                    }
                });
                a.setProgress(0);
                a.play();
                this._animationClips.push(a)
            }
            this._arrowClip = new w(this._arrowEl, 3, {
                opacity: 1,
                transform: {
                    translateY: "0px"
                }
            }, {
                ease: "easeInOutSine",
                delay: 1.5,
                destroyOnComplete: true,
                propsFrom: {
                    opacity: 0,
                    transform: {
                        translateY: "-30px"
                    }
                }
            });
            this._arrowClip.setProgress(0);
            this._arrowClip.play();
            if (!this.isHandheld && A.CSS_FILTER) {
                this._sectionBleedEl.style[G.filter] = "blur( " + this.blurAmount + "px )"
            }
        };
        x._moveElements = function(g) {
            var d = Math.abs(this.trackedElement.top / this.trackedElement.height);
            if (g > this._boundingBox.bottom) {
                if (this._sectionBleedEl) {
                    d -= 0.5;
                    d *= 2;
                    var a = 0,
                        b = -100,
                        c = a + (b - a) * d,
                        f = 1 - (d * 0.5);
                    this.parallaxAmount = Math.round(c);
                    this._sectionBleedEl.style.opacity = f;
                    if (!this.isHandheld) {
                        this.transformEl(this._sectionBleedEl, this.parallaxAmount, this.scaleAmount)
                    }
                }
            } else {
                if (this._sectionBleedEl) {
                    this.parallaxAmount = 0;
                    this._sectionBleedEl.style.opacity = 1
                }
            }
        };
        x.onScroll = function(f, p, a) {
            t.onScroll.call(this, f, p, a);
            var aj = Math.abs(this.trackedElement.top / this.trackedElement.height);
            if (this.isHandheld) {
                var n = B.clamp(B.map(aj, 0, 0.4, 0, 1), 0, 1);
                this._bgBlurEl.style.opacity = n
            } else {
                if (A.CSS_FILTER) {
                    this.blurAmount = B.map(aj, 0, 0.5, 0.001, this.blurTarget);
                    this._sectionBleedEl.style[G.filter] = "blur( " + this.blurAmount + "px )";
                    var d = Math.min(this.scaleTarget, 1 + ((this.scaleTarget - 1) * aj * 2));
                    this.scaleAmount = d;
                    this._sectionBleedEl.style[G.transform] = "translate3d( 0, " + this.parallaxAmount + "px, 0 ) scale3d( " + this.scaleAmount + ", " + this.scaleAmount + ", 1.0 )"
                }
            }
            var af = B.clamp(B.map(aj, 0, 0.05, 0, 1), 0, 1),
                ad = Math.min(50, af * 50),
                k = Math.max(0, 1 - af);
            this._arrowEl.style[G.transform] = "translate3d( 0, " + ad + "px, 0 )";
            this._arrowEl.style.opacity = k;
            this._arrowClip.destroy();
            this._sectionBgEl.style.opacity = 1;
            if (this.isHandheld || this.isViewportSmall) {
                return
            }
            for (var j = 0; j < this._animationClips.length; j++) {
                this._animationClips[j].destroy()
            }
            this._globalNavEl.style.opacity = 1;
            this._localNavEl.style.opacity = 1;
            if (aj < 0.25) {
                var l = B.clamp(B.map(aj, 0, 0.2, 0, 1), 0, 1);
                var Y = (l * 30),
                    ai = (1 - (l * 1.3)),
                    b = (l * 20),
                    o = (1 - (l * 1.15)),
                    g = (l * 10),
                    ae = (1 - (l * 1));
                if (this._logoEl) {
                    this._logoEl.style[G.transform] = "translate3d( 0, " + Y + "px, 0 )";
                    this._logoEl.style.opacity = ai
                }
                if (this._claimEl) {
                    this._claimEl.style[G.transform] = "translate3d( 0, " + b + "px, 0 )";
                    this._claimEl.style.opacity = o
                }
                if (this._buttonsEl) {
                    this._buttonsEl.style[G.transform] = "translate3d( 0, " + g + "px, 0 )";
                    this._buttonsEl.style.opacity = ae
                }
            }
            if (aj < 0.5) {
                var X = B.clamp(B.map(aj, 0.1, 0.5, 0, 1), 0, 1);
                var m = 400 - (X * 400),
                    ah = X;
                if (this._headlineEl) {
                    this._headlineEl.style[G.transform] = "translate3d( 0, " + m + "px, 0 )";
                    this._headlineEl.style.opacity = ah
                }
                if (this._copyEl) {
                    this._copyEl.style[G.transform] = "translate3d( 0, " + m + "px, 0 )";
                    this._copyEl.style.opacity = ah
                }
                for (var j = 0; j < this._iconsEls.length; j++) {
                    var h = B.clamp(B.map(aj, 0.15, (0.5), 0, 1), 0, 1);
                    var i = B.clamp(B.map(aj, 0.3, (0.5), 0, 1), 0, 1);
                    var ac = 400 - (h * 400),
                        W = i;
                    this._iconsEls[j].style[G.transform] = "translate3d( 0, " + ac + "px, 0 )";
                    this._iconsEls[j].style.opacity = W;
                    var c = B.clamp(B.map(aj, 0.15, (0.5), 0, 1), 0, 1);
                    var q = 400 - (c * 400),
                        aa = i;
                    this._eyebrowEls[j].style[G.transform] = "translate3d( 0, " + q + "px, 0 )";
                    this._eyebrowEls[j].style.opacity = W
                }
            }
            if (aj >= 0.5) {
                var ab = B.clamp(B.map(aj, 0.62, 0.8, 0, 1), 0, 1),
                    m = -100 * B.clamp(B.map(aj, 0.5, 0.8, 0, 1), 0, 1),
                    ah = 1 - ab,
                    ag = 1 - ab;
                if (this._headlineEl) {
                    this._headlineEl.style[G.transform] = "translate3d( 0, " + m + "px, 0 )";
                    this._headlineEl.style.opacity = ag
                }
                if (this._copyEl) {
                    this._copyEl.style[G.transform] = "translate3d( 0, " + m + "px, 0 )";
                    this._copyEl.style.opacity = ah
                }
                for (var j = 0; j < this._iconsEls.length; j++) {
                    var Z = B.clamp(B.map(aj, 0.5, 0.7, 0, 1), 0, 1),
                        W = 1 - Z;
                    this._iconsEls[j].style.opacity = W;
                    this._iconsEls[j].style[G.transform] = "translate3d( 0, " + m + "px, 0 )";
                    this._eyebrowEls[j].style.opacity = W;
                    this._eyebrowEls[j].style[G.transform] = "translate3d( 0, " + m + "px, 0 )"
                }
            }
        };
        x._setupHandheldBackground = function() {
            this._bgBlurEl = document.createElement("div");
            this._bgBlurEl.classList.add("section-image");
            this._bgBlurEl.classList.add("blurry");
            this._bgBlurEl.style.opacity = 0;
            this._sectionBgEl.appendChild(this._bgBlurEl)
        };
        E.exports = v
    }, {
        "../../_shared/TimeoutRegistry": 1223,
        "../../_shared/model/FeatureDetectionMap": 1232,
        "../../_shared/utils/browserPrefixed": 1243,
        "../../_shared/utils/math-utils": 1244,
        "./../../_shared/AspectFillVideo": 1211,
        "./../CanvasBackgroundVideo": 1261,
        "./OverviewSection": 1272,
        "ac-dom-metrics": 90,
        "ac-dom-traversal/querySelector": 147,
        "ac-eclipse": 179,
        "ac-polyfills/Object/create": 729
    }],
    1269: [function(A, B, z) {
        A("ac-polyfills/Object/create");
        var v = A("ac-dom-styles").setStyle,
            x = A("ac-dom-traversal").querySelector;
        var r = A("ac-viewport").Viewport;
        var C = A("ac-dom-metrics"),
            F = A("ac-clock").Clock,
            D = A("ac-scroll-time-update").ElementScrollTimeUpdate;
        var u = A("../../_shared/section/BaseSection"),
            q = u.prototype;
        var y = {
            xlarge: -150,
            large: -100,
            medium: -75,
            small: -38
        };
        var E = {
            xlarge: y.small / 2,
            large: y.large / 2,
            medium: y.medium / 2,
            small: y.small / 2
        };

        function t(a, b, c) {
            this.name = "OverviewITunesSection";
            u.call(this, a, b, c);
            this.imageTarget = x(".image-itunes-hw", a);
            this._clock = new F();
            this.scrollTimeUpdate = new D(a, {
                startInView: true,
                smooth: true,
                clock: this._clock
            });
            this.scrollTimeUpdate.on("draw", this._onAnimationDraw, this);
            this.scrollTimeUpdate.start()
        }
        var w = t.prototype = Object.create(q);
        w.onScroll = function(a, b, c) {
            q.onScroll.call(this, a, b, c)
        };
        w.onResize = function(a, b, c) {
            q.onResize.call(this, a, b, c)
        };
        w.onViewWillAppear = function(a, b) {
            q.onViewWillAppear.call(this, a, b)
        };
        w.onViewWillDisappear = function(a, b) {
            q.onViewWillDisappear.call(this, a, b)
        };
        w.destroy = function() {
            this.scrollTimeUpdate.destroy();
            this._clock.destroy();
            this.imageTarget = null;
            q.destroy.call(this)
        };
        w._onAnimationDraw = function(c) {
            var f = this._getBreakpointName(),
                d = E[f],
                b = y[f];
            var a = d - (c.time * b);
            v(this.imageTarget, {
                transform: {
                    translateY: Math.round(a) + "px",
                    translateZ: 0
                }
            })
        };
        w._initializeStyles = function() {
            var b = this._getBreakpointName(),
                a = E[b];
            v(this.imageTarget, {
                transform: {
                    translateY: a + "px",
                    translateZ: 0
                }
            })
        };
        w._getBreakpointName = function() {
            return r.getBreakpoint().name || "large"
        };
        B.exports = t
    }, {
        "../../_shared/section/BaseSection": 1236,
        "ac-clock": 26,
        "ac-dom-metrics": 90,
        "ac-dom-styles": 120,
        "ac-dom-traversal": 138,
        "ac-polyfills/Object/create": 729,
        "ac-scroll-time-update": 790,
        "ac-viewport": "ac-viewport"
    }],
    1270: [function(D, E, C) {
        D("ac-polyfills/Object/create");
        var y = D("ac-dom-styles").setStyle,
            A = D("ac-dom-traversal").querySelector,
            H = D("../../_shared/utils/browserPrefixed");
        var v = D("ac-viewport").Viewport;
        var F = D("ac-dom-metrics"),
            J = D("ac-clock").Clock,
            G = D("ac-scroll-time-update").ElementScrollTimeUpdate;
        var x = D("../../_shared/section/BaseSection"),
            t = x.prototype;
        var u = D("../../_shared/ParallaxSectionMixin");
        var B = {
            xlarge: -150,
            large: -100,
            medium: -75,
            small: -38
        };
        var I = {
            xlarge: B.small / 2,
            large: B.large / 2,
            medium: B.medium / 2,
            small: B.small / 2
        };

        function w(g, a, d) {
            this.name = "OverviewHardwareSection";
            x.call(this, g, a, d);
            this.imageTarget = A(".image-itunes-hw", g);
            this._parallaxSectionHelper = new u(g, a);
            var b = this.element.querySelectorAll(".ipod-hardware figure");
            for (var c = 0, f = b.length; c < f; c++) {}
        }
        var z = w.prototype = Object.create(t);
        z.destroy = function() {
            this.imageTarget = null;
            t.destroy.call(this)
        };
        z.onScroll = function(a, b, c) {
            t.onScroll.call(this, a, b, c);
            this._parallaxSectionHelper.onScroll(this.scrollToPosition, b, c)
        };
        z.onViewWillAppear = function(a, b) {
            t.onViewWillAppear.call(this, a, b);
            this._parallaxSectionHelper.start()
        };
        z.onViewWillDisappear = function(a, b) {
            t.onViewWillDisappear.call(this, a, b);
            this._parallaxSectionHelper.stop()
        };
        z._getBreakpointName = function() {
            return v.getBreakpoint().name || "large"
        };
        E.exports = w
    }, {
        "../../_shared/ParallaxSectionMixin": 1220,
        "../../_shared/section/BaseSection": 1236,
        "../../_shared/utils/browserPrefixed": 1243,
        "ac-clock": 26,
        "ac-dom-metrics": 90,
        "ac-dom-styles": 120,
        "ac-dom-traversal": 138,
        "ac-polyfills/Object/create": 729,
        "ac-scroll-time-update": 790,
        "ac-viewport": "ac-viewport"
    }],
    1271: [function(B, C, x) {
        B("ac-polyfills/Object/create");
        var D = B("ac-dom-metrics"),
            w = B("ac-dom-traversal/querySelector"),
            E = B("../../_shared/utils/browserPrefixed");
        var t = B("ac-eclipse").Clip;
        var z = B("../../_shared/globe/GlobeScene");
        var F = B("./OverviewSection"),
            u = B("../../_shared/ClipRegistry"),
            A = B("../../_shared/TimeoutRegistry"),
            y = B("../../_shared/model/FeatureDetectionMap"),
            q = F.prototype;

        function r(b, c, d) {
            this.name = "OverviewRadioSection";
            F.call(this, b, c, d);
            var a = w(".section-bleed", this.element);
            this._globeScene = null;
            this._loadsto = -1;
            if (y.WEB_GL) {
                this._initializeGlobeScene(a)
            }
            this.blurAmount = 0;
            this.blurTarget = 12;
            this.frameSkip = 2;
            this.frameCount = 0;
            this.scrollWait = 0;
            if (this.isHandheld) {
                this._setupHandheld()
            }
        }
        var v = r.prototype = Object.create(F.prototype);
        r.prototype.constructor = r;
        v.destroy = function() {
            q.destroy.call(this);
            clearTimeout(this._loadsto);
            if (this._globeScene) {
                this._globeScene.destroy()
            }
        };
        v._initializeGlobeScene = function(a) {
            var b = function() {
                if (!!window.THREE) {
                    this._globeScene = new z(a, false, this.trackedElement.width, (this.isHandheld) ? window.innerHeight : this.trackedElement.height);
                    if (this.isActive) {
                        this._globeScene.activate(false);
                        this._globeScene.globe.animateIn();
                        this.animateIn()
                    }
                } else {
                    this._loadsto = setTimeout(b, 100)
                }
            }.bind(this);
            this._loadsto = setTimeout(b, 100)
        };
        v.activate = function() {
            var a = !this._hasAnimatedIn;
            q.activate.call(this);
            if (!this._globeScene) {
                return
            }
            this._globeScene.activate(a);
            if (a) {
                this._globeScene.globe.animateIn()
            } else {
                this._globeScene.setAutoRotate()
            }
        };
        v.animateIn = function() {
            if (!this._globeScene) {
                this._animateInContentPosition();
                return
            }
            if (!this.isHandheld) {
                u.add(new t({
                    blurAmount: this.blurAmount,
                    scaleAmount: this.scaleAmount,
                    opacity: 1,
                    noFilterOpacity: 1
                }, 1.2, {
                    blurAmount: this.blurTarget,
                    scaleAmount: this.scaleTarget,
                    opacity: 0.3,
                    noFilterOpacity: 0.15
                }, {
                    delay: 2.3,
                    ease: "easeInOutQuad",
                    onDraw: function(a) {
                        this.blurAmount = a.target.blurAmount;
                        this.scaleAmount = a.target.scaleAmount;
                        if (y.CSS_FILTER) {
                            this._sectionBleedEl.style[E.filter] = "blur( " + this.blurAmount + "px )"
                        } else {
                            this._sectionBleedEl.style.opacity = a.target.noFilterOpacity
                        }
                        this._sectionBleedEl.style[E.transform] = "translate3d( 0, " + this.parallaxAmount + "px, 0 ) scale3d( " + this.scaleAmount + ", " + this.scaleAmount + ", " + this.scaleAmount + " )"
                    }.bind(this)
                }).play())
            }
            A.setTimeout(function() {
                this._globeScene.setAutoRotate();
                this._animateInContentPosition()
            }.bind(this), 3.3 * 1000)
        };
        v.deactivate = function() {
            q.deactivate.call(this);
            if (this._globeScene) {
                this._globeScene.deactivate()
            }
        };
        v.onRequestAnimationFrame = function() {
            q.onRequestAnimationFrame.call(this);
            if (!this._globeScene) {
                return
            }
            this.frameCount++;
            this.scrollWait--;
            if (this.scrollWait <= 0 || !this._globeScene.globe.hasFinishedAnimatingIn) {
                var a = (this.frameCount % this.frameSkip) == 0;
                this._globeScene.onRequestAnimationFrame(a)
            }
        };
        v.onScroll = function(a, b, c) {
            q.onScroll.call(this, a, b, c);
            this.scrollWait = 5
        };
        v.onResize = function(a, b, c) {
            q.onResize.call(this, a, b, c);
            if (this._globeScene) {
                this._globeScene.onResize(a, this.trackedElement.width, this.trackedElement.height)
            }
        };
        v.onViewWillAppear = function(a, b) {
            q.onViewWillAppear.call(this, a, b)
        };
        v.onViewWillDisappear = function(a, b) {
            q.onViewWillDisappear.call(this, a, b)
        };
        C.exports = r
    }, {
        "../../_shared/ClipRegistry": 1213,
        "../../_shared/TimeoutRegistry": 1223,
        "../../_shared/globe/GlobeScene": 1230,
        "../../_shared/model/FeatureDetectionMap": 1232,
        "../../_shared/utils/browserPrefixed": 1243,
        "./OverviewSection": 1272,
        "ac-dom-metrics": 90,
        "ac-dom-traversal/querySelector": 147,
        "ac-eclipse": 179,
        "ac-polyfills/Object/create": 729
    }],
    1272: [function(B, C, y) {
        B("ac-polyfills/Object/create");
        var D = B("ac-dom-metrics"),
            E = B("../../_shared/utils/browserPrefixed");
        var u = B("ac-eclipse").Clip;
        var x = B("../../_shared/utils/math-utils"),
            A = B("ac-viewport").Viewport,
            z = B("../../_shared/model/FeatureDetectionMap"),
            v = B("../../_shared/ClipRegistry"),
            q = B("../../_shared/ElementSlideInAnimator"),
            t = B("../../_shared/section/BaseSection"),
            r = t.prototype;

        function F(a, b, c) {
            this.name = "OverviewSection";
            t.call(this, a, b, c);
            this.viewport = A.getBreakpoint();
            this.isViewportSmall = this.viewport.name === "small";
            this.isHandheld = !z.IS_DESKTOP;
            this.scaleAmount = 1;
            this.parallaxAmount = 0;
            this.isContentVisible = false;
            this.contentVisibleAmount = 0;
            this.visibleBottomOfPage = 0;
            this._boundingBox = D.getPagePosition(this.element);
            this._copyContainerEl = this.element.querySelector(".copy-container");
            this._copyTitleEl = this.element.querySelector(".copy-container h2");
            this._copyTextEl = this.element.querySelector(".copy-container p");
            this._copyMoreEl = this.element.querySelector(".copy-container p.more-block");
            this._hardwareContainerEl = this.element.querySelector(".hardware-container .image-music-phone, .hardware-container .image-music-phone-white");
            this._hardwareScreensEl = this.element.querySelector(".hardware-container .image-music-phone div, .hardware-container .image-music-phone-white div");
            this._hardwareScreenEls = this.element.querySelectorAll(".hardware-container .image-music-phone figure, .hardware-container .image-music-phone-white figure");
            this._sectionBleedEl = this.element.querySelector(".section-bleed");
            this._sectionBgEl = this.element.querySelector(".section-background");
            this._sectionFgEl = this.element.querySelector(".section-foreground");
            this._pointerEventsEnabled = this._hasPointerEvents();
            this._setupInitialContentPosition();
            this._setupFixedVisibility()
        }
        var w = F.prototype = Object.create(t.prototype);
        F.prototype.constructor = F;
        w.destroy = function() {
            r.destroy.call(this);
            this._boundingBox = null;
            this._copyContainerEl = null;
            this._copyTitleEl = null;
            this._copyTextEl = null;
            this._copyMoreEl = null;
            this._hardwareContainerEl = null;
            this._hardwareScreensEl = null;
            this._hardwareScreenEls = null;
            this._sectionBleedEl = null;
            this._sectionBgEl = null;
            this._sectionFgEl = null
        };
        w.activate = function() {
            r.activate.call(this);
            this._activateFixedVisibility()
        };
        w.deactivate = function() {
            r.deactivate.call(this);
            this._deactivateFixedVisibility()
        };
        w._setupInitialContentPosition = function() {
            if (this.isHandheld || this.isViewportSmall) {
                return
            }
            if (this._copyContainerEl) {
                this._copyTitleEl.style[E.transform] = "translate3d( 0, 30px, 0 )";
                this._copyTitleEl.style.opacity = 0;
                this._copyTextEl.style[E.transform] = "translate3d( 0, 60px, 0 )";
                this._copyTextEl.style.opacity = 0;
                if (this._copyMoreEl) {
                    this._copyMoreEl.style[E.transform] = "translate3d( 0, 90px, 0 )";
                    this._copyMoreEl.style.opacity = 0
                }
            }
            if (this._hardwareContainerEl) {
                this._hardwareContainerEl.style.opacity = 0
            }
        };
        w._setupInitialContentPositionSmall = function() {
            if (this._copyContainerEl) {
                this._copyTitleEl.style[E.transform] = "translate3d( 0, 0, 0 )";
                this._copyTitleEl.style.opacity = 1;
                this._copyTextEl.style[E.transform] = "translate3d( 0, 0, 0 )";
                this._copyTextEl.style.opacity = 1;
                if (this._copyMoreEl) {
                    this._copyMoreEl.style[E.transform] = "translate3d( 0, 0, 0 )";
                    this._copyMoreEl.style.opacity = 1
                }
                this._copyContainerEl.style[E.transform] = "translate3d( 0, 0, 0 )";
                this._copyContainerEl.style.opacity = 1;
                this._copyTextEl.style.opacity = 1;
                if (this._copyMoreEl) {
                    this._copyMoreEl.style.opacity = 1
                }
            }
            if (this._hardwareContainerEl) {
                this._hardwareContainerEl.style[E.transform] = (this.isHandheld) ? "translate3d( 0, 0, 0 ) scale3d( 0.5, 0.5, 1.0 )" : "translate3d( 0, 0, 0 ) scale3d( 1, 1, 1 )";
                this._hardwareContainerEl.style.opacity = 1;
                this._hardwareScreensEl.style.opacity = 1
            }
        };
        w._animateInContentPosition = function() {
            if (this.isHandheld || this.isViewportSmall) {
                return
            }
            this.isContentVisible = true;
            v.add(new u({
                opacity: 0,
                translate: 30
            }, 1.4, {
                opacity: 1,
                translate: 0
            }, {
                ease: "easeInOutQuad",
                destroyOnComplete: true,
                onDraw: function(a) {
                    this._copyTitleEl.style[E.transform] = "translate3d( 0, " + a.target.translate + "px, 0 )";
                    this._copyTitleEl.style.opacity = a.target.opacity
                }.bind(this)
            }).play());
            v.add(new u({
                translate: 60
            }, 1.2, {
                translate: 0
            }, {
                ease: "easeInOutQuad",
                delay: 0.2,
                destroyOnComplete: true,
                onDraw: function(a) {
                    this._copyTextEl.style[E.transform] = "translate3d( 0, " + a.target.translate + "px, 0 )"
                }.bind(this)
            }).play());
            if (this._copyMoreEl) {
                v.add(new u({
                    translate: 90
                }, 1, {
                    translate: 0
                }, {
                    ease: "easeInOutQuad",
                    delay: 0.4,
                    onDraw: function(a) {
                        this._copyMoreEl.style[E.transform] = "translate3d( 0, " + a.target.translate + "px, 0 )"
                    }.bind(this)
                }).play())
            }
            v.add(new u({
                visible: 0
            }, 1.5, {
                visible: 1
            }, {
                ease: "easeInOutQuad",
                destroyOnComplete: true,
                onDraw: function(a) {
                    this.contentVisibleAmount = a.target.visible;
                    this._moveElements(this.visibleBottomOfPage)
                }.bind(this)
            }).play())
        };
        w._hasPointerEvents = function() {
            var a = document.createElement("x");
            a.style.cssText = "pointer-events:auto";
            return a.style.pointerEvents === "auto"
        };
        w._setupHandheld = function() {
            if (!z.CSS_FILTER) {
                return
            }
            this.blurAmount = this.blurTarget;
            this._sectionBleedEl.style[E.filter] = "blur( " + this.blurAmount + "px )"
        };
        w._setupFixedVisibility = function() {
            if (!z.POSITION_FIXED) {
                return
            }
            if (this._pointerEventsEnabled) {
                if (this.isHandheld) {
                    this._sectionBgEl.classList.add("handheld-fixed");
                    this._sectionBleedEl.classList.add("handheld-fixed")
                } else {
                    if (this.isViewportSmall) {
                        this._sectionBgEl.classList.add("small-fixed");
                        this._sectionBleedEl.classList.add("small-fixed");
                        this._sectionBgEl.classList.remove("large-fixed");
                        this._sectionBleedEl.classList.remove("large-fixed");
                        this._sectionFgEl.classList.remove("large-fixed")
                    } else {
                        this._sectionBgEl.classList.add("large-fixed");
                        this._sectionBleedEl.classList.add("large-fixed");
                        this._sectionFgEl.classList.add("large-fixed");
                        this._sectionBgEl.classList.remove("small-fixed");
                        this._sectionBleedEl.classList.remove("small-fixed")
                    }
                }
                this._sectionBgEl.style.pointerEvents = "none";
                this._sectionBleedEl.style.pointerEvents = "none";
                this._sectionFgEl.style.pointerEvents = "none";
                q.onResize()
            }
        };
        w._activateFixedVisibility = function() {
            if (this._pointerEventsEnabled) {
                this._sectionBgEl.style.pointerEvents = "auto";
                this._sectionBleedEl.style.pointerEvents = "auto";
                this._sectionFgEl.style.pointerEvents = "auto";
                q.onResize()
            }
        };
        w._deactivateFixedVisibility = function() {
            if (this._pointerEventsEnabled) {
                this._sectionBgEl.style.pointerEvents = "none";
                this._sectionBleedEl.style.pointerEvents = "none";
                this._sectionFgEl.style.pointerEvents = "none";
                q.onResize()
            }
        };
        w.onBreakpoint = function(c, a, d, f) {
            var b = this.isViewportSmall;
            this.isViewportSmall = (c.name === "small");
            if (!this.isHandheld && b !== this.isViewportSmall) {
                this._setupFixedVisibility();
                if (this.element.classList.contains("active")) {
                    this._activateFixedVisibility()
                }
                if (this.isViewportSmall) {
                    this._setupInitialContentPositionSmall()
                }
            }
        };
        w.onRequestAnimationFrame = function() {
            r.onRequestAnimationFrame.call(this)
        };
        w.onScroll = function(a, b, c) {
            r.onScroll.call(this, a, b, c);
            this.visibleBottomOfPage = c;
            this._moveElements(c)
        };
        w.onResize = function(a, b, c) {
            r.onResize.call(this, a, b, c);
            this.visibleBottomOfPage = c;
            this._moveElements(c);
            this._boundingBox = D.getPagePosition(this.element)
        };
        w._moveElements = function(b) {
            var a = Math.abs(this.trackedElement.top / this.trackedElement.height);
            if (b <= this._boundingBox.bottom) {
                a = 1 - a;
                this._moveElementsIn(a)
            } else {
                this._moveElementsOut(a)
            }
        };
        w._moveElementsIn = function(j) {
            if (this.isHandheld || this.isViewportSmall) {
                return
            }
            if (z.POSITION_FIXED && this._sectionBleedEl && this._pointerEventsEnabled) {
                var c = 400,
                    f = 0,
                    k = c + (f - c) * j;
                this.parallaxAmount = k;
                this._sectionBleedEl.style[E.transform] = "translate3d( 0, " + this.parallaxAmount + "px, 0 ) scale3d( " + this.scaleAmount + ", " + this.scaleAmount + ", 1.0 )"
            }
            if (this.isContentVisible && this._copyContainerEl && this._hardwareContainerEl) {
                var d = window.innerHeight - 100,
                    a = 0,
                    g = d + (a - d) * j,
                    l = window.innerHeight + 100,
                    i = 250 * (1 - this.contentVisibleAmount),
                    m = l + (i - l) * j,
                    b = this.contentVisibleAmount,
                    h = this.contentVisibleAmount;
                this._copyContainerEl.style[E.transform] = "translate3d( 0, " + g + "px, 0 )";
                this._copyTextEl.style.opacity = b;
                if (this._copyMoreEl) {
                    this._copyMoreEl.style.opacity = h
                }
                this._hardwareContainerEl.style[E.transform] = "translate3d( 0, " + m + "px, 0 )";
                this._hardwareContainerEl.style.opacity = this.contentVisibleAmount
            }
        };
        w._moveElementsOut = function(d) {
            if (this.isHandheld || this.isViewportSmall) {
                return
            }
            if (z.POSITION_FIXED && this._sectionBleedEl && this._pointerEventsEnabled) {
                var a = 0,
                    g = -300,
                    L = a + (g - a) * d,
                    i = 1 - (d * 0.5);
                this.parallaxAmount = L;
                this._sectionBleedEl.style[E.transform] = "translate3d( 0, " + this.parallaxAmount + "px, 0 ) scale3d( " + this.scaleAmount + ", " + this.scaleAmount + ", 1.0 )";
                if (z.CSS_FILTER) {
                    this._sectionBleedEl.style.opacity = i
                }
            }
            if (this.isContentVisible && this._copyContainerEl && this._hardwareContainerEl) {
                d = Math.max(0, d - 0.1);
                var m = 0,
                    k = -250,
                    J = m + (k - m) * d,
                    K = Math.min(this.contentVisibleAmount, Math.max(0, 1 - (d * 1.7))),
                    n = Math.min(this.contentVisibleAmount, Math.max(0, 1 - (d * 2))),
                    o = Math.min(this.contentVisibleAmount, Math.max(0, 1 - (d * 3))),
                    b = 250 * (1 - this.contentVisibleAmount),
                    f = -150,
                    p = b + (f - b) * d,
                    j = 1,
                    h = 0.85,
                    l = j + (h - j) * d,
                    c = 1 - (d * 1.25);
                this._copyContainerEl.style[E.transform] = "translate3d( 0, " + J + "px, 0 )";
                this._copyContainerEl.style.opacity = Math.min(this.contentVisibleAmount, K);
                this._copyTextEl.style.opacity = n;
                if (this._copyMoreEl) {
                    this._copyMoreEl.style.opacity = o
                }
                this._hardwareContainerEl.style[E.transform] = "translate3d( 0, " + p + "px, 0 ) scale3d( " + l + ", " + l + ", " + l + " )";
                this._hardwareContainerEl.style.opacity = this.contentVisibleAmount;
                this._hardwareScreensEl.style.opacity = c
            }
        };
        w.onViewWillAppear = function(a, b) {
            r.onViewWillAppear.call(this, a, b)
        };
        w.onViewWillDisappear = function(a, b) {
            r.onViewWillDisappear.call(this, a, b)
        };
        w.transformEl = function(b, c, a) {
            var d = this.isHandheld ? "translateY(" + this.parallaxAmount + "px)" : "translate3d( 0, " + this.parallaxAmount + "px, 0 )";
            if (a != undefined) {
                d += this.isHandheld ? " scale( " + this.scaleAmount + ", " + this.scaleAmount + ")" : " scale3d( " + this.scaleAmount + ", " + this.scaleAmount + ", 1.0 )"
            }
            b.style[E.transform] = d
        };
        F.SHOULD_OPEN = "shouldOpen";
        C.exports = F
    }, {
        "../../_shared/ClipRegistry": 1213,
        "../../_shared/ElementSlideInAnimator": 1214,
        "../../_shared/model/FeatureDetectionMap": 1232,
        "../../_shared/section/BaseSection": 1236,
        "../../_shared/utils/browserPrefixed": 1243,
        "../../_shared/utils/math-utils": 1244,
        "ac-dom-metrics": 90,
        "ac-eclipse": 179,
        "ac-polyfills/Object/create": 729,
        "ac-viewport": "ac-viewport"
    }],
    1273: [function(z, A, w) {
        z("ac-polyfills/Object/create");
        z("ac-polyfills/Element/prototype.classList");
        var v = z("ac-dom-traversal/querySelector");
        var B = z("ac-dom-traversal/querySelectorAll");
        var x = z("ac-dom-events/addEventListener");
        var t = z("ac-dom-styles/setStyle");
        var q = z("ac-films");
        var r = z("ac-eclipse").Clip;
        var y = z("../_shared/BasePage"),
            o = y.prototype;

        function p() {
            this.name = "RadioPage";
            y.call(this);
            var b = B(".ac-video");
            var a = z("ac-films").create;
            var c = a(b, {
                modal: true
            })
        }
        var u = p.prototype = Object.create(y.prototype);
        p.prototype.constructor = p;
        A.exports = p
    }, {
        "../_shared/BasePage": 1212,
        "ac-dom-events/addEventListener": 65,
        "ac-dom-styles/setStyle": 132,
        "ac-dom-traversal/querySelector": 147,
        "ac-dom-traversal/querySelectorAll": 148,
        "ac-eclipse": 179,
        "ac-films": 539,
        "ac-polyfills/Element/prototype.classList": 727,
        "ac-polyfills/Object/create": 729
    }],
    1274: [function(D, E, y) {
        D("ac-polyfills/Object/create");
        var G = D("ac-dom-metrics"),
            x = D("ac-dom-traversal/querySelector"),
            H = D("../../_shared/utils/browserPrefixed"),
            u = D("ac-browser");
        var F = D("ac-ajax");
        var v = D("../../_shared/section/BaseSection"),
            B = D("../../_shared/globe/GlobeScene"),
            z = D("../../_shared/model/FeatureDetectionMap"),
            C = D("../../_shared/TimeoutRegistry"),
            t = v.prototype;
        var A = "https://uic.itunes.apple.com/live-stations/beats1/feed.json";

        function r(a, b, c) {
            this.name = "RadioBeatsOneSection";
            v.call(this, a, b, c);
            this.currentShow = null;
            this.currentCityIndex = null;
            this.isShowingNowPlaying = false;
            this.whatson_show_delay = 0;
            this.cityLocations = {
                losangeles: 0,
                newyork: 1,
                london: 2
            };
            this.nonBreakingMarks = {
                "Beats One": "Beats One",
                "Beats 1": "Beats 1"
            };
            this._globeContainer = x(".section-bleed", this.element);
            if (u.name === "IE") {
                this.currentShow = {};
                this.currentCityIndex = 0;
                this._showCurrentlyPlayingStation()
            } else {
                F.get({
                    url: A
                }).then(function(d) {
                    if (d && d.responseText) {
                        this._setCurrentShow(JSON.parse(d.responseText))
                    }
                    this._setCurrentCityIndex();
                    if (z.WEB_GL) {
                        this._initializeGlobeScene();
                        this.whatson_show_delay = 2800
                    } else {
                        if (this._hasAnimatedIn) {
                            this._showCurrentlyPlayingStation()
                        }
                    }
                }.bind(this), function(d) {
                    if (z.WEB_GL) {
                        this._initializeGlobeScene()
                    }
                }.bind(this))
            }
            this.firstRenderCounter = 2
        }
        var w = r.prototype = Object.create(v.prototype);
        r.prototype.constructor = r;
        w.destroy = function() {
            t.destroy.call(this);
            if (this._globeScene) {
                this._globeScene.destroy()
            }
            this._globeScene = null;
            this._globeContainer = null
        };
        w._initializeGlobeScene = function() {
            var a = function() {
                if (!!window.THREE) {
                    this._globeScene = new B(this._globeContainer, true, Math.min(1240, window.innerWidth), this._globeContainer.clientHeight, this.currentCityIndex);
                    if (this.isActive) {
                        this._globeScene.activate(false);
                        this._globeScene.globe.animateIn(this.currentCityIndex);
                        this.animateIn()
                    }
                    this._globeScene.onRequestAnimationFrame(true)
                } else {
                    this._loadsto = C.setTimeout(a, 100)
                }
            }.bind(this);
            this._loadsto = C.setTimeout(a, 100)
        };
        w.animateIn = function() {
            C.setTimeout((function() {
                this._showCurrentlyPlayingStation()
            }).bind(this), this.whatson_show_delay)
        };
        w._setCurrentShow = function(a) {
            var b = new Date();
            if (a && a.upcomingShows) {
                a.upcomingShows.reduce(function(f, d, g, c) {
                    if (f.startTime && f.endTime && new Date(f.startTime) <= b && new Date(f.endTime) > b) {
                        this.currentShow = f;
                        return f
                    } else {
                        return d
                    }
                }.bind(this))
            }
            if (!this.currentShow && a.details && a.details.genericShowDetails) {
                this.currentShow = a.details.genericShowDetails
            }
        };
        w._setCurrentCityIndex = function() {
            if (!this.currentShow) {
                return
            }
            if (!x("#whatson-live")) {
                return
            }
            for (var a in this.cityLocations) {
                if (a === this.currentShow.location) {
                    this.currentCityIndex = this.cityLocations[a];
                    break
                }
            }
        };
        w._showCurrentlyPlayingStation = function() {
            if (!this.currentShow || this.currentCityIndex === null || this.isShowingNowPlaying) {
                return
            }
            var d = x("#whatson-live");
            var c = x(".whatson-live-headline", d);
            var f = x(".whatson-live-desc", d);
            if (!d || !c || !f) {
                return
            }
            var a = this._avoidBreakingMarks(this._avoidOrphans(this.currentShow.title));
            var b = this._avoidBreakingMarks(this._avoidOrphans(this.currentShow.description));
            if ((a && a.length > 0) && (b && b.length > 0)) {
                c.textContent = a;
                f.textContent = b
            }
            x("html").classList.add("whatson");
            d.classList.add("show");
            this.isShowingNowPlaying = true
        };
        w._avoidBreakingMarks = function(b) {
            if (!b) {
                return ""
            }
            for (var a in this.nonBreakingMarks) {
                b = b.replace(a, this.nonBreakingMarks[a])
            }
            return b
        };
        w._avoidOrphans = function(a) {
            if (!a) {
                return ""
            }
            var b = a.trim().lastIndexOf(" ");
            if (b !== -1) {
                a = a.substr(0, b) + " " + a.substr(b + 1)
            }
            return a
        };
        w.activate = function() {
            var a = !this._hasAnimatedIn;
            t.activate.call(this);
            if (!this._globeScene) {
                return
            }
            this._globeScene.activate(a);
            if (a) {
                this._globeScene.globe.animateIn(this.currentCityIndex)
            }
        };
        w.deactivate = function() {
            t.deactivate.call(this);
            if (this._globeScene) {
                this._globeScene.deactivate()
            }
        };
        w.onRequestAnimationFrame = function() {
            t.onRequestAnimationFrame.call(this);
            if (this._globeScene) {
                this._globeScene.onRequestAnimationFrame(true)
            }
        };
        w.onScroll = function(b, d, f) {
            this.whatson_show_delay = z.WEB_GL ? 2800 : 1800;
            t.onScroll.call(this, b, d, f);
            var c = this.trackedElement.top / this.trackedElement.height,
                a = (c < 0);
            c *= -1;
            if (this._globeScene) {
                if (this._globeScene.isAutoPlayFinished || a) {
                    this._globeScene.onScrollPercentage(c)
                }
            }
        };
        w.onResize = function(a, b, c) {
            t.onResize.call(this, a, b, c);
            if (this._globeScene) {
                this._globeScene.onResize(a, Math.min(1240, window.innerWidth), this._globeContainer.clientHeight)
            }
        };
        w.onBreakpoint = function(b, a, c, d) {
            if (this._globeScene) {
                this._globeScene.globe.changeBreakpoint(b)
            }
        };
        w.onViewWillAppear = function(a, b) {
            t.onViewWillAppear.call(this, a, b)
        };
        w.firstRender = function() {
            if (this.firstRenderCounter > 0) {
                this.firstRenderCounter--;
                this._globeScene.onRequestAnimationFrame();
                C.setTimeout(this.firstRender.bind(this), 1000 / 60)
            }
        };
        w.onViewWillDisappear = function(a, b) {
            t.onViewWillDisappear.call(this, a, b)
        };
        E.exports = r
    }, {
        "../../_shared/TimeoutRegistry": 1223,
        "../../_shared/globe/GlobeScene": 1230,
        "../../_shared/model/FeatureDetectionMap": 1232,
        "../../_shared/section/BaseSection": 1236,
        "../../_shared/utils/browserPrefixed": 1243,
        "ac-ajax": 5,
        "ac-browser": 9,
        "ac-dom-metrics": 90,
        "ac-dom-traversal/querySelector": 147,
        "ac-polyfills/Object/create": 729
    }],
    1275: [function(u, v, r) {
        var m = u("ac-dom-styles/getStyle");
        var n = u("ac-easing");
        var o = u("ac-eclipse").Clip;
        var p = u("../../_shared/ClipRegistry");
        var t = u("../../_shared/model/FeatureDetectionMap");

        function l(a, b) {
            this.colorElement = a;
            this.alphaValue = 1;
            this.animationDuration = !t.IS_DESKTOP && b > 5 ? 0.6 : 1.2;
            this.activeClip = null;
            this.oldRGBRule = null;
            this.newRGBRule = null;
            this.easeInOutSine = n.createBezier(0.445, 0.05, 0.55, 0.95);
            this.fallbackRBGColors = "100,100,100";
            this.initialRGBValue = "rgb(204, 1, 1)";
            this.newBGColor = {}
        }
        var q = l.prototype;
        q.blend = function(b) {
            b = b || this.fallbackRBGColors;
            var a = b.split(",");
            this.newBGColor.r = a[0];
            this.newBGColor.g = a[1];
            this.newBGColor.b = a[2];
            this.newBGColor.a = this.alphaValue;
            this.oldRGBRule = m(this.colorElement, "background-color").backgroundColor || this.initialRGBValue;
            this.newRGBRule = "rgb(" + this.newBGColor.r + ", " + this.newBGColor.g + ", " + this.newBGColor.b + ")";
            if (this.activeClip) {
                this.activeClip.destroy()
            }
            this.activeClip = p.add(new o(this.colorElement, this.animationDuration, {
                "background-color": this.newRGBRule
            }, {
                destroyOnComplete: true,
                ease: this.easeInOutSine.cssString,
                propsFrom: {
                    "background-color": this.oldRGBRule
                }
            })).play()
        };
        q.destroy = function() {
            if (this.activeClip) {
                this.activeClip.destroy()
            }
            this.activeClip = null;
            this.easeInOutSine = null;
            this.initialRGBValue = null;
            this.newBGColor = null;
            this.oldRGBRule = null;
            this.colorElement = null
        };
        v.exports = l
    }, {
        "../../_shared/ClipRegistry": 1213,
        "../../_shared/model/FeatureDetectionMap": 1232,
        "ac-dom-styles/getStyle": 119,
        "ac-easing": 153,
        "ac-eclipse": 179
    }],
    1276: [function(F, K, v) {
        F("ac-polyfills/Object/create");
        F("ac-polyfills/Element/prototype.classList");
        F("ac-polyfills/Array/prototype.forEach");
        var y = F("ac-dom-metrics");
        var I = F("ac-dom-traversal/querySelector");
        var A = F("ac-dom-traversal/querySelectorAll");
        var N = F("ac-dom-traversal/matchesSelector");
        var H = F("ac-dom-styles/setStyle");
        var E = F("ac-object").create;
        var J = F("ac-easing");
        var L = F("ac-eclipse").Clip;
        var D = F("ac-gallery").Gallery;
        var M = F("./ColorBlend");
        var G = F("ac-event-emitter").EventEmitter;
        var x = F("../../_shared/section/BaseSection");
        var z = x.prototype;
        var B = D.extend({
            initialize: function(a) {
                this.section = a.section
            },
            draw: function(b, a) {
                this.section._animateNewStation(b)
            }
        });

        function w(a, b, c) {
            this.name = "StationsSection";
            x.call(this, a, b, c);
            this.galleryId = "stations-gallery";
            this.triggerSelector = ".station-trigger";
            this.wrapper = document.getElementById(this.galleryId);
            this.slides = A(".station-figure", this.wrapper);
            this.figureList = I(".genre-figures", this.wrapper);
            this.figureItems = A(".genre-figures .station-figure", this.wrapper);
            this.colorElement = I("#station-colors");
            this.ColorBlender = new M(this.colorElement, this._index);
            this.gallery = B.create({
                id: this.galleryId,
                el: this.wrapper,
                section: this,
                model: this.slides,
                triggerSelector: this.triggerSelector,
                trigger: {
                    events: ["mouseover", "click"]
                }
            })
        }
        var C = w.prototype = Object.create(x.prototype);
        w.prototype.constructor = w;
        C.teardownEvents = function() {};
        C._removeActiveStates = function() {
            this.figureItems.forEach(function(a) {
                a.classList.remove("active")
            })
        };
        C._animateNewStation = function(b) {
            var a = I("#" + b.id, this.figureList);
            if (a) {
                this._removeActiveStates();
                a.classList.add("active");
                this._blendToNewBackgroundColor(a)
            }
        };
        C._blendToNewBackgroundColor = function(a) {
            var b = a.getAttribute("data-bg-color");
            this.ColorBlender.blend(b)
        };
        C.activate = function() {
            z.activate.call(this)
        };
        C.deactivate = function() {
            z.deactivate.call(this)
        };
        C.animateIn = function() {
            z.animateIn.call(this)
        };
        C.onRequestAnimationFrame = function() {
            z.onRequestAnimationFrame.call(this)
        };
        C.onScroll = function(a, b, c) {
            z.onScroll.call(this, a, b, c)
        };
        C.onResize = function(a, b, c) {
            z.onResize.call(this, a, b, c)
        };
        C.onViewWillAppear = function(a, b) {
            z.onViewWillAppear.call(this, a, b)
        };
        C.onViewWillDisappear = function(a, b) {
            z.onViewWillDisappear.call(this, a, b)
        };
        C.destroy = function() {
            this.wrapper = null;
            this.figureList = null;
            this.figureItems = null;
            this.colorElement = null;
            if (this.ColorBlender) {
                this.ColorBlender.destroy();
                this.ColorBlender = null
            }
            this.gallery.dealloc();
            this.gallery = null;
            z.destroy.call(this)
        };
        K.exports = w
    }, {
        "../../_shared/section/BaseSection": 1236,
        "./ColorBlend": 1275,
        "ac-dom-metrics": 90,
        "ac-dom-styles/setStyle": 132,
        "ac-dom-traversal/matchesSelector": 142,
        "ac-dom-traversal/querySelector": 147,
        "ac-dom-traversal/querySelectorAll": 148,
        "ac-easing": 153,
        "ac-eclipse": 179,
        "ac-event-emitter": 202,
        "ac-gallery": 649,
        "ac-object": 713,
        "ac-polyfills/Array/prototype.forEach": 721,
        "ac-polyfills/Element/prototype.classList": 727,
        "ac-polyfills/Object/create": 729
    }],
    1277: [function(E, K, v) {
        E("ac-polyfills/Object/create");
        E("ac-polyfills/Element/prototype.classList");
        E("ac-polyfills/Promise");
        var x = E("ac-dom-metrics");
        var H = E("ac-dom-traversal/querySelector");
        var A = E("ac-dom-traversal/querySelectorAll");
        var G = E("ac-dom-styles/setStyle");
        var I = E("ac-easing");
        var L = E("ac-eclipse").Clip;
        var D = E("ac-gallery").Gallery;
        var y = E("ac-viewport").Viewport;
        var u = E("ac-swipe").Swipe;
        var J = E("../../_shared/ClipRegistry");
        var w = E("../../_shared/section/BaseSection");
        var z = w.prototype;
        var F = D.extend({
            initialize: function(a) {
                this.section = a.section;
                this.previousBreakpoint = a.previousBreakpoint;
                this.currentBreakpoint = a.currentBreakpoint
            },
            drawInitial: function(a) {
                if (y.getBreakpoint().name === "medium" || y.getBreakpoint().name === "small") {
                    this.section.adjustContentWrapperHeight(this.getSelected(), true, false)
                }
            },
            draw: function(b, a) {
                if (this.indexOf(b) > this.indexOf(a)) {
                    return this.section.showNext(a, b, this)
                } else {
                    return this.section.showPrev(a, b, this)
                }
            },
            removeStyles: function() {
                this.section.updateInlineStyles()
            },
            destroy: function() {
                this.removeStyles()
            }
        });

        function B(a, b, c) {
            this.name = "ZineSection";
            w.call(this, a, b, c);
            this.galleryId = "zine-gallery";
            this.triggerSelector = ".zine-trigger";
            this.ease = I.createBezier(0.585, 0.045, 0.445, 0.96);
            this.wrapper = document.getElementById(this.galleryId);
            this.contentWrapper = H(".zine-gallery-content", this.wrapper);
            this.callout = H(".slide-callout");
            this.slides = A(".zine-slide", this.wrapper);
            this.swipableGallery = new u(this.contentWrapper);
            this.gallery = F.create({
                id: this.galleryId,
                el: this.wrapper,
                section: this,
                model: this.slides,
                triggerSelector: this.triggerSelector,
                previousBreakpoint: y.getBreakpoint().name,
                currentBreakpoint: y.getBreakpoint().name
            });
            this._boundFunctions.swipeLeft = this.gallery.showNext.bind(this.gallery);
            this._boundFunctions.swipeRight = this.gallery.showPrevious.bind(this.gallery);
            this.swipableGallery.on(u.SWIPE_RIGHT, this._boundFunctions.swipeRight, false);
            this.swipableGallery.on(u.SWIPE_LEFT, this._boundFunctions.swipeLeft, false)
        }
        var C = B.prototype = Object.create(w.prototype);
        B.prototype.constructor = B;
        C.adjustContentWrapperHeight = function(g, f, h) {
            var c;
            var b;
            var d;
            var a;
            if (f) {
                c = document.getElementById(g.id);
                b = H(".slide-image", c).getBoundingClientRect();
                d = H(".slide-message", c).getBoundingClientRect();
                G(this.contentWrapper, {
                    height: Math.round(b.height + d.height) + "px"
                })
            } else {
                if (this.gallery) {
                    a = (this.gallery.currentBreakpoint === "small" || this.gallery.currentBreakpoint === "medium");
                    if (a) {
                        c = document.getElementById(g.id);
                        b = H(".slide-image", c).getBoundingClientRect();
                        d = H(".slide-message", c).getBoundingClientRect();
                        G(this.contentWrapper, {
                            height: Math.round(b.height + d.height) + "px"
                        })
                    } else {
                        if (h) {
                            c = document.getElementById(g.id);
                            b = H(".slide-image", c).getBoundingClientRect();
                            G(this.contentWrapper, {
                                height: Math.round(b.height) + "px"
                            })
                        }
                    }
                }
            }
        };
        C.updateInlineStyles = function() {
            var j;
            var a;
            var g;
            var k;
            var f;
            var b;
            var h;
            var c;
            var i;
            var d;
            if ((this.gallery.previousBreakpoint === "large" || this.gallery.previousBreakpoint === "xlarge") && (this.gallery.currentBreakpoint === "medium" || this.gallery.currentBreakpoint === "small")) {
                j = A(".slide-image", this.gallery.wrapper);
                a = A(".slide-message", this.gallery.wrapper);
                j.forEach(function(l) {
                    G(l, {
                        "margin-left": null,
                        "z-index": null
                    })
                });
                a.forEach(function(l) {
                    G(l, {
                        "margin-left": null,
                        "z-index": null
                    })
                })
            } else {
                if ((this.gallery.previousBreakpoint === "medium" || this.gallery.previousBreakpoint === "small") && (this.gallery.currentBreakpoint === "large" || this.gallery.currentBreakpoint === "xlarge")) {
                    j = A(".slide-image", this.gallery.wrapper);
                    a = A(".slide-message", this.gallery.wrapper);
                    g = H(".zine-slide.active", this.gallery.wrapper);
                    k = H(".slide-message", g);
                    h = H(".slide-image", g);
                    f = g.id.indexOf("3") !== -1;
                    b = g.id.indexOf("1") !== -1;
                    if (!b && !f) {
                        G(k, {
                            "margin-left": "-50%",
                            "z-index": 1
                        })
                    } else {
                        if (f) {
                            c = H("#" + this.galleryId + "-2.zine-slide", this.gallery.wrapper);
                            d = H(".slide-image", c);
                            i = H(".slide-message", c);
                            G(h, {
                                "margin-left": "-50%",
                                "z-index": 1
                            });
                            G(k, {
                                "z-index": 2
                            });
                            G(i, {
                                "margin-left": "-50%",
                                "z-index": 0
                            });
                            G(d, {
                                "z-index": 2
                            })
                        }
                    }
                }
            }
        };
        C.showPrev = function(aE, ay, aF) {
            var q;
            var aD;
            var j;
            var aI;
            var c;
            var aJ;
            var aH;
            var aA;
            var aL;
            var aG;
            var aq;
            var p;
            var ao;
            var aC;
            var i;
            var g;
            var l = false;
            var aw = false;
            var r = aE.get("element");
            var f = ay.get("element");
            var ar = this.contentWrapper.getBoundingClientRect();
            var m = H(".slide-image", r);
            var o = H(".slide-message", r);
            var az = H(".slide-quote", r);
            var au = az.textContent;
            var n = getComputedStyle(az);
            var a = az.getBoundingClientRect();
            var h = H(".image", m);
            var aB = H(".slide-image", f);
            var av = aB.getBoundingClientRect();
            var an = H(".image", aB);
            var ap = H(".slide-message", f);
            var at = ap.getBoundingClientRect();
            var aK = H(".slide-quote", f);
            var k = aK.textContent;
            var al = getComputedStyle(aK);
            var t = aK.getBoundingClientRect();
            var am = aF.indexOf(aE) - aF.indexOf(ay) === 2;
            var b = y.getBreakpoint().name === "large" || y.getBreakpoint().name === "xlarge";
            var ax = Math.round(b ? ar.width / 2 : ar.width);
            var d = new Promise(function(M, N) {
                q = M
            });
            this.adjustContentWrapperHeight(ay);
            if (am) {
                i = H(".slide-message", aF.getSlideAt(aF.indexOf(aE) - 1).get("element"));
                g = H(".slide-image", aF.getSlideAt(aF.indexOf(aE) - 1).get("element"))
            }
            if (b && am && i && g && aF.getFirst() === aF.getSlideAt(aF.indexOf(ay))) {
                aI = J.add(new L(m, 0.7, {
                    transform: {
                        translateX: "0px"
                    }
                }, {
                    destroyOnComplete: true,
                    ease: this.ease.cssString,
                    propsFrom: {
                        transform: {
                            translateX: ax * -1 + "px"
                        }
                    },
                    onStart: function() {
                        G(ap, {
                            "z-index": 2
                        });
                        G(i, {
                            transform: {
                                translateX: "0px"
                            },
                            "margin-left": null,
                            "z-index": null
                        });
                        G(g, {
                            transform: {
                                translateX: "0px"
                            },
                            "z-index": null
                        });
                        this.callout.textContent = au;
                        G(this.callout, {
                            transform: {
                                translateX: Math.round((this.wrapper.offsetWidth / 2) + az.offsetLeft) + "px",
                                translateY: Math.round(a.top - ar.top) + "px",
                            },
                            width: a.width + "px",
                            height: a.height + "px"
                        });
                        r.classList.remove("active");
                        this.callout.classList.add("show-callout");
                        this.wrapper.classList.add("wipe-callout-right")
                    }.bind(this),
                    onComplete: function(M) {
                        G(m, {
                            "margin-left": null,
                            "z-index": null,
                            transform: {
                                translateX: "0px"
                            }
                        })
                    }.bind(this)
                }));
                aq = J.add(new L(h, 0.7, {
                    transform: {
                        translateX: Math.round((ax / 2) * -1) + "px"
                    }
                }, {
                    destroyOnComplete: true,
                    ease: this.ease.cssString,
                    propsFrom: {
                        transform: {
                            translateX: "0px"
                        }
                    },
                    onComplete: function(M) {
                        G(h, {
                            transform: {
                                translateX: "0px"
                            }
                        })
                    }.bind(this)
                }));
                aG = J.add(new L(this.callout, 0.7, {
                    transform: {
                        translateX: Math.round((this.wrapper.offsetWidth / 2) + aK.offsetLeft) + "px",
                        translateY: Math.round(t.top - ar.top) + "px",
                    },
                    width: t.width + "px",
                    height: t.height + "px"
                }, {
                    destroyOnComplete: true,
                    delay: 0.54,
                    ease: this.ease.cssString,
                    propsFrom: {
                        transform: {
                            translateX: Math.round((this.wrapper.offsetWidth / 2) + az.offsetLeft) + "px",
                            translateY: Math.round(a.top - ar.top) + "px",
                        },
                        width: a.width + "px",
                        height: a.height + "px"
                    },
                    onStart: function() {
                        this.wrapper.classList.add("reveal-callout-right")
                    }.bind(this),
                    onDraw: function(M) {
                        if (M.progress >= 0.3 && !l) {
                            this.callout.textContent = k;
                            l = true
                        }
                    }.bind(this)
                }));
                aD = J.add(new L(o, 0.7, {
                    transform: {
                        translateX: "0px"
                    }
                }, {
                    destroyOnComplete: true,
                    delay: 0.54,
                    ease: this.ease.cssString,
                    onComplete: function() {
                        G(ap, {
                            "z-index": null
                        });
                        this.callout.classList.remove("show-callout");
                        this.wrapper.classList.remove("reveal-callout-right");
                        this.wrapper.classList.remove("wipe-callout-right");
                        f.classList.add("active");
                        q()
                    }.bind(this)
                }));
                aI.play();
                aq.play();
                aG.play();
                aD.play()
            } else {
                if (b && aF.getFirst() === aF.getSlideAt(aF.indexOf(ay))) {
                    aJ = J.add(new L(this.callout, 0.7, {
                        transform: {
                            translateX: Math.round((this.wrapper.offsetWidth / 2) + aK.offsetLeft) + "px",
                            translateY: Math.round(t.top - ar.top) + "px",
                        },
                        width: t.width + "px",
                        height: t.height + "px",
                    }, {
                        destroyOnComplete: true,
                        ease: this.ease.cssString,
                        propsFrom: {
                            transform: {
                                translateX: Math.round(a.left - ar.left) + "px",
                                translateY: Math.round(a.top - ar.top) + "px",
                            },
                            width: a.width + "px",
                            height: a.height + "px"
                        },
                        onStart: function() {
                            this.callout.textContent = au;
                            G(o, {
                                "z-index": null
                            });
                            G(m, {
                                "z-index": 1
                            });
                            r.classList.remove("active");
                            this.callout.classList.add("show-callout");
                            this.wrapper.classList.add("wipe-callout-right")
                        }.bind(this),
                        onDraw: function(M) {
                            if (M.progress >= 0.8 && !l) {
                                l = true;
                                this.callout.textContent = k
                            }
                        }.bind(this),
                        onComplete: function() {
                            this.wrapper.classList.add("reveal-callout-right")
                        }.bind(this)
                    }));
                    aH = J.add(new L(o, 0.7, {
                        transform: {
                            translateX: "0px"
                        }
                    }, {
                        destroyOnComplete: true,
                        ease: this.ease.cssString,
                        onComplete: function() {
                            G(o, {
                                "margin-left": null
                            })
                        }.bind(this)
                    }));
                    aq = J.add(new L(h, 0.7, {
                        transform: {
                            translateX: Math.round((ax / 2) * -1) + "px"
                        }
                    }, {
                        delay: 0.54,
                        destroyOnComplete: true,
                        ease: this.ease.cssString,
                        propsFrom: {
                            transform: {
                                translateX: "0px"
                            }
                        },
                        onComplete: function(M) {
                            G(h, {
                                transform: {
                                    translateX: "0px"
                                }
                            })
                        }.bind(this)
                    }));
                    aL = J.add(new L(an, 0.7, {
                        transform: {
                            translateX: "0px"
                        }
                    }, {
                        destroyOnComplete: true,
                        ease: this.ease.cssString,
                        propsFrom: {
                            transform: {
                                translateX: Math.round((ax / 2) * -1) + "px"
                            }
                        }
                    }));
                    aA = J.add(new L(m, 0.7, {
                        transform: {
                            translateX: "0px"
                        }
                    }, {
                        destroyOnComplete: true,
                        delay: 0.54,
                        ease: this.ease.cssString,
                        onComplete: function(M) {
                            this.callout.classList.remove("show-callout");
                            this.wrapper.classList.remove("reveal-callout-right");
                            this.wrapper.classList.remove("wipe-callout-right");
                            f.classList.add("active");
                            q()
                        }.bind(this)
                    }));
                    aJ.play();
                    aH.play();
                    aq.play();
                    aL.play();
                    aA.play()
                } else {
                    if (b && aF.getLast() === aF.getSlideAt(aF.indexOf(aE))) {
                        j = J.add(new L(this.callout, 0.54, {
                            transform: {
                                translateX: Math.round(this.wrapper.offsetWidth) + "px",
                                translateY: Math.round(a.top) - ar.top + "px"
                            },
                            opacity: "0"
                        }, {
                            destroyOnComplete: true,
                            ease: this.ease.cssString,
                            propsFrom: {
                                transform: {
                                    translateX: Math.round(a.left) - ar.left + "px",
                                    translateY: Math.round(a.top) - ar.top + "px"
                                },
                                opacity: "1"
                            },
                            onStart: function() {
                                this.callout.textContent = au;
                                G(this.callout, {
                                    width: a.width + "px",
                                    height: a.height + "px",
                                });
                                r.classList.remove("active");
                                this.callout.classList.add("show-callout");
                                this.wrapper.classList.add("wipe-callout-right")
                            }.bind(this),
                            onComplete: function() {
                                G(this.callout, {
                                    opacity: "1"
                                });
                                c.play()
                            }.bind(this)
                        }));
                        aD = J.add(new L(o, 0.7, {
                            transform: {
                                translateX: "0px"
                            }
                        }, {
                            destroyOnComplete: true,
                            ease: this.ease.cssString
                        }));
                        aI = J.add(new L(m, 0.7, {
                            transform: {
                                translateX: "0"
                            }
                        }, {
                            destroyOnComplete: true,
                            delay: 0.6,
                            ease: this.ease.cssString,
                            propsFrom: {
                                transform: {
                                    translateX: ax * -1 + "px"
                                }
                            },
                            onComplete: function(M) {
                                G(m, {
                                    "margin-left": null,
                                    "z-index": null,
                                    transform: {
                                        translateX: "0"
                                    }
                                });
                                G(o, {
                                    "z-index": null
                                });
                                G(aB, {
                                    "z-index": null
                                });
                                G(ap, {
                                    "z-index": 1
                                })
                            }.bind(this)
                        }));
                        aq = J.add(new L(h, 0.7, {
                            transform: {
                                translateX: Math.round((ax / 2) * -1) + "px"
                            }
                        }, {
                            delay: 0.6,
                            destroyOnComplete: true,
                            ease: this.ease.cssString,
                            propsFrom: {
                                transform: {
                                    translateX: "0px"
                                }
                            },
                            onComplete: function(M) {
                                G(h, {
                                    transform: {
                                        translateX: "0px"
                                    }
                                })
                            }.bind(this)
                        }));
                        aL = J.add(new L(an, 0.7, {
                            transform: {
                                translateX: "0px"
                            }
                        }, {
                            destroyOnComplete: true,
                            ease: this.ease.cssString,
                            propsFrom: {
                                transform: {
                                    translateX: Math.round((ax / 2) * -1) + "px"
                                }
                            }
                        }));
                        c = J.add(new L(this.callout, 0.7, {
                            height: t.height + "px",
                            transform: {
                                translateX: Math.round(aK.offsetLeft) + "px",
                                translateY: Math.round(t.top - ar.top) + "px"
                            }
                        }, {
                            destroyOnComplete: true,
                            delay: 0.06,
                            ease: this.ease.cssString,
                            propsFrom: {
                                height: Math.round(t.top - ar.top),
                                transform: {
                                    translateX: Math.round(-1 * (this.wrapper.offsetWidth / 1)) + "px",
                                    translateY: Math.round(t.top - ar.top) + "px"
                                }
                            },
                            onStart: function() {
                                this.callout.textContent = k
                            }.bind(this),
                            onDraw: function(M) {
                                if (M.progress >= 0.2 && !l) {
                                    l = true;
                                    this.wrapper.classList.add("reveal-callout-right")
                                }
                            }.bind(this),
                            onComplete: function() {
                                G(this.callout, {
                                    opacity: null
                                });
                                this.callout.classList.remove("show-callout");
                                this.wrapper.classList.remove("reveal-callout-right");
                                this.wrapper.classList.remove("wipe-callout-right");
                                f.classList.add("active");
                                q()
                            }.bind(this)
                        }));
                        j.play();
                        aD.play();
                        aI.play();
                        aq.play();
                        aL.play()
                    } else {
                        if (!b) {
                            p = J.add(new L(m, 0.7, {
                                transform: {
                                    translateX: "0px"
                                }
                            }, {
                                destroyOnComplete: true,
                                ease: this.ease.cssString,
                                onStart: function() {
                                    this.callout.textContent = au;
                                    G(this.callout, {
                                        transform: {
                                            translateX: Math.round(a.left - ar.left) + "px",
                                            translateY: Math.round(a.top - ar.top) + "px",
                                        },
                                        width: a.width + "px",
                                        height: a.height + "px"
                                    });
                                    if (am) {
                                        G(i, {
                                            transform: {
                                                translateX: "0px"
                                            }
                                        });
                                        G(g, {
                                            transform: {
                                                translateX: "0px"
                                            }
                                        })
                                    }
                                    r.classList.remove("active");
                                    this.callout.classList.add("show-callout");
                                    this.wrapper.classList.add("wipe-callout-right")
                                }.bind(this)
                            }));
                            ao = J.add(new L(o, 0.7, {
                                transform: {
                                    translateX: "0px"
                                }
                            }, {
                                destroyOnComplete: true,
                                delay: 0.54,
                                ease: this.ease.cssString
                            }));
                            aC = J.add(new L(this.callout, 0.7, {
                                transform: {
                                    translateX: Math.round(aK.offsetLeft) + "px",
                                    translateY: Math.round(t.top - ar.top) + "px",
                                },
                                width: t.width + "px",
                                height: t.height + "px"
                            }, {
                                destroyOnComplete: true,
                                delay: 0.54,
                                ease: this.ease.cssString,
                                propsFrom: {
                                    transform: {
                                        translateX: Math.round(az.offsetLeft) + "px",
                                        translateY: Math.round(a.top - ar.top) + "px",
                                    },
                                    width: a.width + "px",
                                    height: a.height + "px"
                                },
                                onStart: function() {
                                    this.callout.textContent = k;
                                    this.wrapper.classList.add("reveal-callout-right")
                                }.bind(this),
                                onDraw: function(M) {
                                    if (M.progress >= 0.2 && !l) {
                                        l = true
                                    }
                                }.bind(this)
                            }));
                            aq = J.add(new L(h, 0.7, {
                                transform: {
                                    translateX: Math.round((ax / 2) * -1) + "px"
                                }
                            }, {
                                delay: 0.54,
                                destroyOnComplete: true,
                                ease: this.ease.cssString,
                                propsFrom: {
                                    transform: {
                                        translateX: "0px"
                                    }
                                },
                                onComplete: function(M) {
                                    G(h, {
                                        transform: {
                                            translateX: "0px"
                                        }
                                    });
                                    this.callout.classList.remove("show-callout");
                                    this.wrapper.classList.remove("reveal-callout-right");
                                    this.wrapper.classList.remove("wipe-callout-right");
                                    f.classList.add("active");
                                    q()
                                }.bind(this)
                            }));
                            p.play();
                            ao.play();
                            aC.play();
                            aq.play()
                        }
                    }
                }
            }
            return d
        };
        C.showNext = function(aC, aw, b) {
            var aj;
            var aB;
            var az;
            var aE;
            var an;
            var i;
            var k;
            var ax;
            var aG;
            var a;
            var t;
            var aD;
            var j;
            var h;
            var m = false;
            var at = false;
            var q = aC.get("element");
            var g = aw.get("element");
            var ao = this.contentWrapper.getBoundingClientRect();
            var n = H(".slide-image", q);
            var p = H(".slide-message", q);
            var ay = H(".slide-quote", q);
            var ar = ay.textContent;
            var o = getComputedStyle(ay);
            var c = ay.getBoundingClientRect();
            var aA = H(".slide-image", g);
            var av = aA.getBoundingClientRect();
            var ak = H(".image", aA);
            var am = H(".slide-message", g);
            var aq = am.getBoundingClientRect();
            var aF = H(".slide-quote", g);
            var l = aF.textContent;
            var al = getComputedStyle(aF);
            var r = aF.getBoundingClientRect();
            var ap = b.indexOf(aw) - b.indexOf(aC) === 2;
            var d = y.getBreakpoint().name === "large" || y.getBreakpoint().name === "xlarge";
            var au = Math.round(d ? ao.width / 2 : ao.width);
            var f = new Promise(function(M, N) {
                aj = M
            });
            if (ap) {
                j = H(".slide-message", b.getSlideAt(b.indexOf(aw) - 1).get("element"));
                h = H(".slide-image", b.getSlideAt(b.indexOf(aw) - 1).get("element"))
            }
            this.adjustContentWrapperHeight(aw);
            if (d && ap && j && h && b.getLast() === b.getSlideAt(b.indexOf(aw))) {
                an = J.add(new L(aA, 0.7, {
                    transform: {
                        translateX: au * -1 + "px"
                    }
                }, {
                    propsFrom: {
                        transform: {
                            translateX: "0px"
                        }
                    },
                    destroyOnComplete: true,
                    ease: this.ease.cssString,
                    onStart: function() {
                        this.callout.textContent = ar;
                        G(this.callout, {
                            transform: {
                                translateX: Math.round((this.wrapper.offsetWidth / 2) + ay.offsetLeft) + "px",
                                translateY: Math.round(c.top - ao.top) + "px",
                            },
                            width: c.width + "px",
                            height: c.height + "px"
                        });
                        G(p, {
                            "z-index": 1
                        });
                        G(am, {
                            "z-index": 1
                        });
                        G(aA, {
                            "margin-left": "-50%"
                        });
                        q.classList.remove("active");
                        this.callout.classList.add("show-callout");
                        this.wrapper.classList.add("wipe-callout-right")
                    }.bind(this),
                    onComplete: function(M) {
                        G(aA, {
                            transform: {
                                translateX: "-100%"
                            }
                        })
                    }.bind(this)
                }));
                aG = J.add(new L(ak, 0.7, {
                    transform: {
                        translateX: "0px"
                    }
                }, {
                    destroyOnComplete: true,
                    ease: this.ease.cssString,
                    propsFrom: {
                        transform: {
                            translateX: Math.round((au / 2) * -1) + "px"
                        }
                    }
                }));
                aD = J.add(new L(this.callout, 0.7, {
                    transform: {
                        translateX: Math.round((this.wrapper.offsetWidth / 2) + aF.offsetLeft) + "px",
                        translateY: Math.round(r.top - ao.top) + "px",
                    },
                    width: r.width + "px",
                    height: r.height + "px"
                }, {
                    destroyOnComplete: true,
                    delay: 0.54,
                    ease: this.ease.cssString,
                    propsFrom: {
                        transform: {
                            translateX: Math.round((this.wrapper.offsetWidth / 2) + ay.offsetLeft) + "px",
                            translateY: Math.round(c.top - ao.top) + "px",
                        },
                        width: c.width + "px",
                        height: c.height + "px"
                    },
                    onStart: function() {
                        this.wrapper.classList.add("reveal-callout-right")
                    }.bind(this),
                    onDraw: function(M) {
                        if (M.progress >= 0.3 && !m) {
                            this.callout.textContent = l;
                            m = true
                        }
                    }.bind(this)
                }));
                i = J.add(new L(am, 0.7, {
                    transform: {
                        translateX: au * -1 + "px"
                    }
                }, {
                    destroyOnComplete: true,
                    delay: 0.54,
                    ease: this.ease.cssString,
                    onComplete: function() {
                        G(p, {
                            "z-index": 0
                        });
                        G(am, {
                            transform: {
                                translateX: "-100%"
                            },
                            "z-index": 2
                        });
                        G(aA, {
                            "z-index": 1
                        });
                        G(j, {
                            transform: {
                                translateX: "-100%"
                            },
                            "margin-left": "-50%",
                            "z-index": 0
                        });
                        G(h, {
                            transform: {
                                translateX: "-100%"
                            },
                            "z-index": 2
                        });
                        this.callout.classList.remove("show-callout");
                        this.wrapper.classList.remove("reveal-callout-right");
                        this.wrapper.classList.remove("wipe-callout-right");
                        g.classList.add("active");
                        aj()
                    }.bind(this)
                }));
                an.play();
                aG.play();
                aD.play();
                i.play()
            } else {
                if (d && b.getLast() === b.getSlideAt(b.indexOf(aw))) {
                    an = J.add(new L(aA, 0.7, {
                        transform: {
                            translateX: au * -1 + "px"
                        }
                    }, {
                        propsFrom: {
                            transform: {
                                translateX: "0px"
                            }
                        },
                        destroyOnComplete: true,
                        ease: this.ease.cssString,
                        onStart: function() {
                            G(aA, {
                                "margin-left": "-50%"
                            })
                        }.bind(this),
                        onComplete: function(M) {
                            G(aA, {
                                transform: {
                                    translateX: "-100%"
                                }
                            })
                        }.bind(this)
                    }));
                    aG = J.add(new L(ak, 0.7, {
                        transform: {
                            translateX: "0px"
                        }
                    }, {
                        destroyOnComplete: true,
                        ease: this.ease.cssString,
                        propsFrom: {
                            transform: {
                                translateX: Math.round((au / 2) * -1) + "px"
                            }
                        }
                    }));
                    k = J.add(new L(this.callout, 0.54, {
                        transform: {
                            translateX: Math.round(-1 * (this.wrapper.offsetWidth / 2)) + "px",
                            translateY: Math.round(c.top - ao.top) + "px"
                        },
                        opacity: "0"
                    }, {
                        destroyOnComplete: true,
                        ease: this.ease.cssString,
                        propsFrom: {
                            transform: {
                                translateX: Math.round(c.left - ao.left) + "px",
                                translateY: Math.round(c.top - ao.top) + "px"
                            },
                            opacity: "1"
                        },
                        onStart: function() {
                            this.callout.textContent = ar;
                            G(this.callout, {
                                width: c.width + "px",
                                height: c.height + "px"
                            });
                            G(p, {
                                "z-index": 0
                            });
                            G(n, {
                                "z-index": 2
                            });
                            G(aA, {
                                "z-index": 1
                            });
                            G(am, {
                                "z-index": 2
                            });
                            q.classList.remove("active");
                            this.callout.classList.add("show-callout");
                            this.wrapper.classList.add("wipe-callout-right")
                        }.bind(this),
                        onComplete: function() {
                            G(this.callout, {
                                opacity: "1"
                            });
                            ax.play()
                        }.bind(this)
                    }));
                    i = J.add(new L(am, 0.7, {
                        transform: {
                            translateX: au * -1 + "px"
                        }
                    }, {
                        destroyOnComplete: true,
                        delay: 0.6,
                        ease: this.ease.cssString,
                        onComplete: function() {
                            G(am, {
                                transform: {
                                    translateX: "-100%"
                                }
                            })
                        }.bind(this)
                    }));
                    ax = J.add(new L(this.callout, 0.7, {
                        transform: {
                            translateX: Math.round((this.wrapper.offsetWidth / 2) + aF.offsetLeft) + "px",
                            translateY: Math.round(r.top - ao.top) + "px"
                        },
                        height: r.height + "px"
                    }, {
                        destroyOnComplete: true,
                        delay: 0.06,
                        ease: this.ease.cssString,
                        propsFrom: {
                            transform: {
                                translateX: Math.round(this.wrapper.offsetWidth) + "px",
                                translateY: Math.round(r.top - ao.top) + "px"
                            },
                            height: r.height + "px"
                        },
                        onStart: function() {
                            this.callout.textContent = l
                        }.bind(this),
                        onDraw: function(M) {
                            if (M.progress >= 0.2 && !m) {
                                m = true;
                                this.wrapper.classList.add("reveal-callout-right")
                            }
                        }.bind(this),
                        onComplete: function() {
                            G(this.callout, {
                                opacity: null
                            });
                            this.callout.classList.remove("show-callout");
                            this.wrapper.classList.remove("reveal-callout-right");
                            this.wrapper.classList.remove("wipe-callout-right");
                            g.classList.add("active");
                            aj()
                        }.bind(this)
                    }));
                    an.play();
                    aG.play();
                    k.play();
                    i.play()
                } else {
                    if (d && b.getNext() === b.getSlideAt(b.indexOf(aw))) {
                        aB = J.add(new L(aA, 0.7, {
                            transform: {
                                translateX: au * -1 + "px"
                            }
                        }, {
                            destroyOnComplete: true,
                            ease: this.ease.cssString,
                            onStart: function() {
                                this.callout.textContent = ar;
                                G(this.callout, {
                                    transform: {
                                        translateX: Math.round(c.left - ao.left) + "px",
                                        translateY: Math.round(c.top - ao.top) + "px"
                                    },
                                    width: c.width + "px",
                                    height: c.height + "px"
                                });
                                q.classList.remove("active");
                                this.callout.classList.add("show-callout");
                                this.wrapper.classList.add("wipe-callout-right")
                            }.bind(this),
                            onComplete: function(M) {
                                G(aA, {
                                    transform: {
                                        translateX: "-100%"
                                    }
                                })
                            }.bind(this)
                        }));
                        aG = J.add(new L(ak, 0.7, {
                            transform: {
                                translateX: "0px"
                            }
                        }, {
                            destroyOnComplete: true,
                            ease: this.ease.cssString,
                            propsFrom: {
                                transform: {
                                    translateX: Math.round((au / 2) * -1) + "px"
                                }
                            }
                        }));
                        aE = J.add(new L(am, 0.7, {
                            transform: {
                                translateX: au * -1 + "px"
                            }
                        }, {
                            destroyOnComplete: true,
                            delay: 0.54,
                            ease: this.ease.cssString,
                            onStart: function() {
                                G(am, {
                                    "margin-left": "-50%"
                                })
                            }.bind(this),
                            onComplete: function() {
                                G(am, {
                                    transform: {
                                        translateX: "-100%"
                                    }
                                })
                            }.bind(this)
                        }));
                        az = J.add(new L(this.callout, 0.7, {
                            transform: {
                                translateX: Math.round(aF.offsetLeft) + "px",
                                translateY: Math.round(r.top - ao.top) + "px"
                            },
                            width: r.width + "px",
                            height: r.height + "px"
                        }, {
                            destroyOnComplete: true,
                            delay: 0.54,
                            ease: this.ease.cssString,
                            propsFrom: {
                                transform: {
                                    translateX: Math.round(c.left - ao.left) + "px",
                                    translateY: Math.round(c.top - ao.top) + "px"
                                },
                                width: c.width + "px",
                                height: c.height + "px"
                            },
                            onStart: function() {
                                this.callout.textContent = l
                            }.bind(this),
                            onDraw: function(M) {
                                if (M.progress >= 0.2 && !m) {
                                    m = true;
                                    this.wrapper.classList.add("reveal-callout-right")
                                }
                            }.bind(this),
                            onComplete: function() {
                                G(am, {
                                    "z-index": 1
                                });
                                G(aA, {
                                    "z-index": null
                                });
                                this.callout.classList.remove("show-callout");
                                this.wrapper.classList.remove("reveal-callout-right");
                                this.wrapper.classList.remove("wipe-callout-right");
                                g.classList.add("active");
                                aj()
                            }.bind(this)
                        }));
                        aB.play();
                        aG.play();
                        aE.play();
                        az.play()
                    } else {
                        if (!d) {
                            a = J.add(new L(aA, 0.7, {
                                transform: {
                                    translateX: au * -1 + "px"
                                }
                            }, {
                                destroyOnComplete: true,
                                ease: this.ease.cssString,
                                onStart: function() {
                                    this.callout.textContent = ar;
                                    G(this.callout, {
                                        transform: {
                                            translateX: Math.round(c.left - ao.left) + "px",
                                            translateY: Math.round(c.top - ao.top) + "px",
                                        },
                                        width: c.width + "px",
                                        height: c.height + "px"
                                    });
                                    q.classList.remove("active");
                                    this.callout.classList.add("show-callout");
                                    this.wrapper.classList.add("wipe-callout-right")
                                }.bind(this),
                                onComplete: function(M) {
                                    G(aA, {
                                        transform: {
                                            translateX: "-100%"
                                        }
                                    })
                                }.bind(this)
                            }));
                            aG = J.add(new L(ak, 0.7, {
                                transform: {
                                    translateX: "0px"
                                }
                            }, {
                                destroyOnComplete: true,
                                ease: this.ease.cssString,
                                propsFrom: {
                                    transform: {
                                        translateX: Math.round((au / 2) * -1) + "px"
                                    }
                                }
                            }));
                            t = J.add(new L(am, 0.7, {
                                transform: {
                                    translateX: au * -1 + "px"
                                }
                            }, {
                                destroyOnComplete: true,
                                delay: 0.54,
                                ease: this.ease.cssString,
                                onComplete: function(M) {
                                    G(am, {
                                        transform: {
                                            translateX: "-100%"
                                        }
                                    })
                                }.bind(this)
                            }));
                            aD = J.add(new L(this.callout, 0.7, {
                                transform: {
                                    translateX: Math.round(aF.offsetLeft) + "px",
                                    translateY: Math.round(r.top - ao.top) + "px",
                                },
                                width: r.width + "px",
                                height: r.height + "px"
                            }, {
                                destroyOnComplete: true,
                                delay: 0.54,
                                ease: this.ease.cssString,
                                propsFrom: {
                                    transform: {
                                        translateX: Math.round(ay.offsetLeft) + "px",
                                        translateY: Math.round(c.top - ao.top) + "px",
                                    },
                                    width: c.width + "px",
                                    height: c.height + "px"
                                },
                                onStart: function() {
                                    this.callout.textContent = l;
                                    this.wrapper.classList.add("reveal-callout-right")
                                }.bind(this),
                                onDraw: function(M) {
                                    if (M.progress >= 0.2 && !m) {
                                        m = true
                                    }
                                }.bind(this),
                                onComplete: function() {
                                    if (ap) {
                                        G(j, {
                                            transform: {
                                                translateX: "-100%"
                                            }
                                        });
                                        G(h, {
                                            transform: {
                                                translateX: "-100%"
                                            }
                                        })
                                    }
                                    this.callout.classList.remove("show-callout");
                                    this.wrapper.classList.remove("reveal-callout-right");
                                    this.wrapper.classList.remove("wipe-callout-right");
                                    g.classList.add("active");
                                    aj()
                                }.bind(this)
                            }));
                            a.play();
                            aG.play();
                            t.play();
                            aD.play()
                        }
                    }
                }
            }
            return f
        };
        C._setupEvents = function() {};
        C.teardownEvents = function() {
            removeEventListener(this.swipableGallery, "swiperight", this._boundFunctions.swipeRight);
            removeEventListener(this.swipableGallery, "swipeleft", this._boundFunctions.swipeLeft)
        };
        C.activate = function() {
            z.activate.call(this)
        };
        C.deactivate = function() {
            z.deactivate.call(this)
        };
        C.animateIn = function() {
            z.animateIn.call(this)
        };
        C.onResize = function(a, b, c) {
            z.onResize.call(this, a, b, c)
        };
        C.onBreakpoint = function(b, a, c, d) {
            this.gallery.currentBreakpoint = b.name;
            this.gallery.previousBreakpoint = a.name;
            this.gallery.removeStyles();
            this.gallery.drawSnap(this.gallery.getSelected());
            this.adjustContentWrapperHeight(this.gallery.getSelected(), false, true)
        };
        C.onRequestAnimationFrame = function() {
            z.onRequestAnimationFrame.call(this)
        };
        C.onScroll = function(a, b, c) {
            z.onScroll.call(this, a, b, c)
        };
        C.onViewWillAppear = function(a, b) {
            z.onViewWillAppear.call(this, a, b)
        };
        C.onViewWillDisappear = function(a, b) {
            z.onViewWillDisappear.call(this, a, b)
        };
        C.destroy = function() {
            z.destroy.call(this);
            this.gallery.dealloc();
            this.gallery = null;
            this.swipableGallery.destroy();
            this.swipableGallery = null
        };
        K.exports = B
    }, {
        "../../_shared/ClipRegistry": 1213,
        "../../_shared/section/BaseSection": 1236,
        "ac-dom-metrics": 90,
        "ac-dom-styles/setStyle": 132,
        "ac-dom-traversal/querySelector": 147,
        "ac-dom-traversal/querySelectorAll": 148,
        "ac-easing": 153,
        "ac-eclipse": 179,
        "ac-gallery": 649,
        "ac-polyfills/Element/prototype.classList": 727,
        "ac-polyfills/Object/create": 729,
        "ac-polyfills/Promise": 730,
        "ac-swipe": 831,
        "ac-viewport": "ac-viewport"
    }]
}, {}, [1259]);